// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/stu3/metadatatypes.proto

#include "proto/stu3/metadatatypes.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_proto_2fstu3_2fcodes_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AggregationModeCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BindingStrengthCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ConstraintSeverityCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ContributorTypeCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DiscriminatorTypeCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_FHIRAllTypesCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_NarrativeStatusCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_OperationParameterUseCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PropertyRepresentationCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ReferenceVersionRulesCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RelatedArtifactTypeCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SlicingRulesCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TriggerTypeCode;
}  // namespace protobuf_proto_2fstu3_2fcodes_2eproto
namespace protobuf_proto_2fstu3_2fdatatypes_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fdatatypes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Address;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fdatatypes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Xhtml;
}  // namespace protobuf_proto_2fstu3_2fdatatypes_2eproto
namespace protobuf_proto_2fstu3_2fmetadatatypes_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fmetadatatypes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ContactDetail;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fmetadatatypes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DataRequirement_CodeFilter_ValueSet;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fmetadatatypes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DataRequirement_DateFilter_Value;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fmetadatatypes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ElementDefinition_Base;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fmetadatatypes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ElementDefinition_DefaultValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fmetadatatypes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ElementDefinition_ElementDefinitionBinding_ValueSet;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fmetadatatypes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ElementDefinition_Example_Value;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fmetadatatypes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ElementDefinition_Fixed;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fmetadatatypes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ElementDefinition_Mapping;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fmetadatatypes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ElementDefinition_MaxValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fmetadatatypes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ElementDefinition_MinValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fmetadatatypes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ElementDefinition_Pattern;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fmetadatatypes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TriggerDefinition_EventTiming;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fmetadatatypes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsageContext_Value;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fmetadatatypes_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_DataRequirement_CodeFilter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fmetadatatypes_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_DataRequirement_DateFilter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fmetadatatypes_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ElementDefinition_Constraint;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fmetadatatypes_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ElementDefinition_Example;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fmetadatatypes_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ElementDefinition_Slicing_Discriminator;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fmetadatatypes_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_ElementDefinition_ElementDefinitionBinding;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fmetadatatypes_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_ElementDefinition_Slicing;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fmetadatatypes_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_ElementDefinition_TypeRef;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fmetadatatypes_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_DataRequirement;
}  // namespace protobuf_proto_2fstu3_2fmetadatatypes_2eproto
namespace google {
namespace fhir {
namespace stu3 {
namespace proto {
class BackboneElementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BackboneElement>
      _instance;
} _BackboneElement_default_instance_;
class ContactDetailDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContactDetail>
      _instance;
} _ContactDetail_default_instance_;
class ContributorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Contributor>
      _instance;
} _Contributor_default_instance_;
class DataRequirement_CodeFilter_ValueSetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataRequirement_CodeFilter_ValueSet>
      _instance;
  const ::google::fhir::stu3::proto::String* string_value_;
  const ::google::fhir::stu3::proto::Reference* reference_;
} _DataRequirement_CodeFilter_ValueSet_default_instance_;
class DataRequirement_CodeFilterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataRequirement_CodeFilter>
      _instance;
} _DataRequirement_CodeFilter_default_instance_;
class DataRequirement_DateFilter_ValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataRequirement_DateFilter_Value>
      _instance;
  const ::google::fhir::stu3::proto::DateTime* date_time_;
  const ::google::fhir::stu3::proto::Period* period_;
  const ::google::fhir::stu3::proto::Duration* duration_;
} _DataRequirement_DateFilter_Value_default_instance_;
class DataRequirement_DateFilterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataRequirement_DateFilter>
      _instance;
} _DataRequirement_DateFilter_default_instance_;
class DataRequirementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataRequirement>
      _instance;
} _DataRequirement_default_instance_;
class ElementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Element>
      _instance;
} _Element_default_instance_;
class ElementDefinition_Slicing_DiscriminatorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ElementDefinition_Slicing_Discriminator>
      _instance;
} _ElementDefinition_Slicing_Discriminator_default_instance_;
class ElementDefinition_SlicingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ElementDefinition_Slicing>
      _instance;
} _ElementDefinition_Slicing_default_instance_;
class ElementDefinition_BaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ElementDefinition_Base>
      _instance;
} _ElementDefinition_Base_default_instance_;
class ElementDefinition_TypeRefDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ElementDefinition_TypeRef>
      _instance;
} _ElementDefinition_TypeRef_default_instance_;
class ElementDefinition_DefaultValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ElementDefinition_DefaultValue>
      _instance;
  const ::google::fhir::stu3::proto::Base64Binary* base64_binary_;
  const ::google::fhir::stu3::proto::Boolean* boolean_;
  const ::google::fhir::stu3::proto::Code* code_;
  const ::google::fhir::stu3::proto::Date* date_;
  const ::google::fhir::stu3::proto::DateTime* date_time_;
  const ::google::fhir::stu3::proto::Decimal* decimal_;
  const ::google::fhir::stu3::proto::Id* id_;
  const ::google::fhir::stu3::proto::Instant* instant_;
  const ::google::fhir::stu3::proto::Integer* integer_;
  const ::google::fhir::stu3::proto::Markdown* markdown_;
  const ::google::fhir::stu3::proto::Oid* oid_;
  const ::google::fhir::stu3::proto::PositiveInt* positive_int_;
  const ::google::fhir::stu3::proto::String* string_value_;
  const ::google::fhir::stu3::proto::Time* time_;
  const ::google::fhir::stu3::proto::UnsignedInt* unsigned_int_;
  const ::google::fhir::stu3::proto::Uri* uri_;
  const ::google::fhir::stu3::proto::Address* address_;
  const ::google::fhir::stu3::proto::Age* age_;
  const ::google::fhir::stu3::proto::Annotation* annotation_;
  const ::google::fhir::stu3::proto::Attachment* attachment_;
  const ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
  const ::google::fhir::stu3::proto::Coding* coding_;
  const ::google::fhir::stu3::proto::ContactPoint* contact_point_;
  const ::google::fhir::stu3::proto::Count* count_;
  const ::google::fhir::stu3::proto::Distance* distance_;
  const ::google::fhir::stu3::proto::Duration* duration_;
  const ::google::fhir::stu3::proto::HumanName* human_name_;
  const ::google::fhir::stu3::proto::Identifier* identifier_;
  const ::google::fhir::stu3::proto::Money* money_;
  const ::google::fhir::stu3::proto::Period* period_;
  const ::google::fhir::stu3::proto::Quantity* quantity_;
  const ::google::fhir::stu3::proto::Range* range_;
  const ::google::fhir::stu3::proto::Ratio* ratio_;
  const ::google::fhir::stu3::proto::Reference* reference_;
  const ::google::fhir::stu3::proto::SampledData* sampled_data_;
  const ::google::fhir::stu3::proto::Signature* signature_;
  const ::google::fhir::stu3::proto::Timing* timing_;
  const ::google::fhir::stu3::proto::Meta* meta_;
} _ElementDefinition_DefaultValue_default_instance_;
class ElementDefinition_FixedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ElementDefinition_Fixed>
      _instance;
  const ::google::fhir::stu3::proto::Base64Binary* base64_binary_;
  const ::google::fhir::stu3::proto::Boolean* boolean_;
  const ::google::fhir::stu3::proto::Code* code_;
  const ::google::fhir::stu3::proto::Date* date_;
  const ::google::fhir::stu3::proto::DateTime* date_time_;
  const ::google::fhir::stu3::proto::Decimal* decimal_;
  const ::google::fhir::stu3::proto::Id* id_;
  const ::google::fhir::stu3::proto::Instant* instant_;
  const ::google::fhir::stu3::proto::Integer* integer_;
  const ::google::fhir::stu3::proto::Markdown* markdown_;
  const ::google::fhir::stu3::proto::Oid* oid_;
  const ::google::fhir::stu3::proto::PositiveInt* positive_int_;
  const ::google::fhir::stu3::proto::String* string_value_;
  const ::google::fhir::stu3::proto::Time* time_;
  const ::google::fhir::stu3::proto::UnsignedInt* unsigned_int_;
  const ::google::fhir::stu3::proto::Uri* uri_;
  const ::google::fhir::stu3::proto::Address* address_;
  const ::google::fhir::stu3::proto::Age* age_;
  const ::google::fhir::stu3::proto::Annotation* annotation_;
  const ::google::fhir::stu3::proto::Attachment* attachment_;
  const ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
  const ::google::fhir::stu3::proto::Coding* coding_;
  const ::google::fhir::stu3::proto::ContactPoint* contact_point_;
  const ::google::fhir::stu3::proto::Count* count_;
  const ::google::fhir::stu3::proto::Distance* distance_;
  const ::google::fhir::stu3::proto::Duration* duration_;
  const ::google::fhir::stu3::proto::HumanName* human_name_;
  const ::google::fhir::stu3::proto::Identifier* identifier_;
  const ::google::fhir::stu3::proto::Money* money_;
  const ::google::fhir::stu3::proto::Period* period_;
  const ::google::fhir::stu3::proto::Quantity* quantity_;
  const ::google::fhir::stu3::proto::Range* range_;
  const ::google::fhir::stu3::proto::Ratio* ratio_;
  const ::google::fhir::stu3::proto::Reference* reference_;
  const ::google::fhir::stu3::proto::SampledData* sampled_data_;
  const ::google::fhir::stu3::proto::Signature* signature_;
  const ::google::fhir::stu3::proto::Timing* timing_;
  const ::google::fhir::stu3::proto::Meta* meta_;
} _ElementDefinition_Fixed_default_instance_;
class ElementDefinition_PatternDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ElementDefinition_Pattern>
      _instance;
  const ::google::fhir::stu3::proto::Base64Binary* base64_binary_;
  const ::google::fhir::stu3::proto::Boolean* boolean_;
  const ::google::fhir::stu3::proto::Code* code_;
  const ::google::fhir::stu3::proto::Date* date_;
  const ::google::fhir::stu3::proto::DateTime* date_time_;
  const ::google::fhir::stu3::proto::Decimal* decimal_;
  const ::google::fhir::stu3::proto::Id* id_;
  const ::google::fhir::stu3::proto::Instant* instant_;
  const ::google::fhir::stu3::proto::Integer* integer_;
  const ::google::fhir::stu3::proto::Markdown* markdown_;
  const ::google::fhir::stu3::proto::Oid* oid_;
  const ::google::fhir::stu3::proto::PositiveInt* positive_int_;
  const ::google::fhir::stu3::proto::String* string_value_;
  const ::google::fhir::stu3::proto::Time* time_;
  const ::google::fhir::stu3::proto::UnsignedInt* unsigned_int_;
  const ::google::fhir::stu3::proto::Uri* uri_;
  const ::google::fhir::stu3::proto::Address* address_;
  const ::google::fhir::stu3::proto::Age* age_;
  const ::google::fhir::stu3::proto::Annotation* annotation_;
  const ::google::fhir::stu3::proto::Attachment* attachment_;
  const ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
  const ::google::fhir::stu3::proto::Coding* coding_;
  const ::google::fhir::stu3::proto::ContactPoint* contact_point_;
  const ::google::fhir::stu3::proto::Count* count_;
  const ::google::fhir::stu3::proto::Distance* distance_;
  const ::google::fhir::stu3::proto::Duration* duration_;
  const ::google::fhir::stu3::proto::HumanName* human_name_;
  const ::google::fhir::stu3::proto::Identifier* identifier_;
  const ::google::fhir::stu3::proto::Money* money_;
  const ::google::fhir::stu3::proto::Period* period_;
  const ::google::fhir::stu3::proto::Quantity* quantity_;
  const ::google::fhir::stu3::proto::Range* range_;
  const ::google::fhir::stu3::proto::Ratio* ratio_;
  const ::google::fhir::stu3::proto::Reference* reference_;
  const ::google::fhir::stu3::proto::SampledData* sampled_data_;
  const ::google::fhir::stu3::proto::Signature* signature_;
  const ::google::fhir::stu3::proto::Timing* timing_;
  const ::google::fhir::stu3::proto::Meta* meta_;
} _ElementDefinition_Pattern_default_instance_;
class ElementDefinition_Example_ValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ElementDefinition_Example_Value>
      _instance;
  const ::google::fhir::stu3::proto::Base64Binary* base64_binary_;
  const ::google::fhir::stu3::proto::Boolean* boolean_;
  const ::google::fhir::stu3::proto::Code* code_;
  const ::google::fhir::stu3::proto::Date* date_;
  const ::google::fhir::stu3::proto::DateTime* date_time_;
  const ::google::fhir::stu3::proto::Decimal* decimal_;
  const ::google::fhir::stu3::proto::Id* id_;
  const ::google::fhir::stu3::proto::Instant* instant_;
  const ::google::fhir::stu3::proto::Integer* integer_;
  const ::google::fhir::stu3::proto::Markdown* markdown_;
  const ::google::fhir::stu3::proto::Oid* oid_;
  const ::google::fhir::stu3::proto::PositiveInt* positive_int_;
  const ::google::fhir::stu3::proto::String* string_value_;
  const ::google::fhir::stu3::proto::Time* time_;
  const ::google::fhir::stu3::proto::UnsignedInt* unsigned_int_;
  const ::google::fhir::stu3::proto::Uri* uri_;
  const ::google::fhir::stu3::proto::Address* address_;
  const ::google::fhir::stu3::proto::Age* age_;
  const ::google::fhir::stu3::proto::Annotation* annotation_;
  const ::google::fhir::stu3::proto::Attachment* attachment_;
  const ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
  const ::google::fhir::stu3::proto::Coding* coding_;
  const ::google::fhir::stu3::proto::ContactPoint* contact_point_;
  const ::google::fhir::stu3::proto::Count* count_;
  const ::google::fhir::stu3::proto::Distance* distance_;
  const ::google::fhir::stu3::proto::Duration* duration_;
  const ::google::fhir::stu3::proto::HumanName* human_name_;
  const ::google::fhir::stu3::proto::Identifier* identifier_;
  const ::google::fhir::stu3::proto::Money* money_;
  const ::google::fhir::stu3::proto::Period* period_;
  const ::google::fhir::stu3::proto::Quantity* quantity_;
  const ::google::fhir::stu3::proto::Range* range_;
  const ::google::fhir::stu3::proto::Ratio* ratio_;
  const ::google::fhir::stu3::proto::Reference* reference_;
  const ::google::fhir::stu3::proto::SampledData* sampled_data_;
  const ::google::fhir::stu3::proto::Signature* signature_;
  const ::google::fhir::stu3::proto::Timing* timing_;
  const ::google::fhir::stu3::proto::Meta* meta_;
} _ElementDefinition_Example_Value_default_instance_;
class ElementDefinition_ExampleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ElementDefinition_Example>
      _instance;
} _ElementDefinition_Example_default_instance_;
class ElementDefinition_MinValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ElementDefinition_MinValue>
      _instance;
  const ::google::fhir::stu3::proto::Date* date_;
  const ::google::fhir::stu3::proto::DateTime* date_time_;
  const ::google::fhir::stu3::proto::Instant* instant_;
  const ::google::fhir::stu3::proto::Time* time_;
  const ::google::fhir::stu3::proto::Decimal* decimal_;
  const ::google::fhir::stu3::proto::Integer* integer_;
  const ::google::fhir::stu3::proto::PositiveInt* positive_int_;
  const ::google::fhir::stu3::proto::UnsignedInt* unsigned_int_;
  const ::google::fhir::stu3::proto::Quantity* quantity_;
} _ElementDefinition_MinValue_default_instance_;
class ElementDefinition_MaxValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ElementDefinition_MaxValue>
      _instance;
  const ::google::fhir::stu3::proto::Date* date_;
  const ::google::fhir::stu3::proto::DateTime* date_time_;
  const ::google::fhir::stu3::proto::Instant* instant_;
  const ::google::fhir::stu3::proto::Time* time_;
  const ::google::fhir::stu3::proto::Decimal* decimal_;
  const ::google::fhir::stu3::proto::Integer* integer_;
  const ::google::fhir::stu3::proto::PositiveInt* positive_int_;
  const ::google::fhir::stu3::proto::UnsignedInt* unsigned_int_;
  const ::google::fhir::stu3::proto::Quantity* quantity_;
} _ElementDefinition_MaxValue_default_instance_;
class ElementDefinition_ConstraintDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ElementDefinition_Constraint>
      _instance;
} _ElementDefinition_Constraint_default_instance_;
class ElementDefinition_ElementDefinitionBinding_ValueSetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ElementDefinition_ElementDefinitionBinding_ValueSet>
      _instance;
  const ::google::fhir::stu3::proto::Uri* uri_;
  const ::google::fhir::stu3::proto::Reference* reference_;
} _ElementDefinition_ElementDefinitionBinding_ValueSet_default_instance_;
class ElementDefinition_ElementDefinitionBindingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ElementDefinition_ElementDefinitionBinding>
      _instance;
} _ElementDefinition_ElementDefinitionBinding_default_instance_;
class ElementDefinition_MappingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ElementDefinition_Mapping>
      _instance;
} _ElementDefinition_Mapping_default_instance_;
class ElementDefinitionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ElementDefinition>
      _instance;
} _ElementDefinition_default_instance_;
class NarrativeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Narrative>
      _instance;
} _Narrative_default_instance_;
class ParameterDefinitionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParameterDefinition>
      _instance;
} _ParameterDefinition_default_instance_;
class RelatedArtifactDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RelatedArtifact>
      _instance;
} _RelatedArtifact_default_instance_;
class ResourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Resource>
      _instance;
} _Resource_default_instance_;
class TriggerDefinition_EventTimingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TriggerDefinition_EventTiming>
      _instance;
  const ::google::fhir::stu3::proto::Timing* timing_;
  const ::google::fhir::stu3::proto::Reference* reference_;
  const ::google::fhir::stu3::proto::Date* date_;
  const ::google::fhir::stu3::proto::DateTime* date_time_;
} _TriggerDefinition_EventTiming_default_instance_;
class TriggerDefinitionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TriggerDefinition>
      _instance;
} _TriggerDefinition_default_instance_;
class UsageContext_ValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsageContext_Value>
      _instance;
  const ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
  const ::google::fhir::stu3::proto::Quantity* quantity_;
  const ::google::fhir::stu3::proto::Range* range_;
} _UsageContext_Value_default_instance_;
class UsageContextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsageContext>
      _instance;
} _UsageContext_default_instance_;
}  // namespace proto
}  // namespace stu3
}  // namespace fhir
}  // namespace google
namespace protobuf_proto_2fstu3_2fmetadatatypes_2eproto {
static void InitDefaultsBackboneElement() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_BackboneElement_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::BackboneElement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::BackboneElement::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BackboneElement =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBackboneElement}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsContactDetail() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_ContactDetail_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::ContactDetail();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::ContactDetail::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ContactDetail =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsContactDetail}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsContributor() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_Contributor_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Contributor();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::Contributor::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Contributor =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsContributor}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_ContributorTypeCode.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ContactDetail.base,}};

static void InitDefaultsDataRequirement_CodeFilter_ValueSet() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_DataRequirement_CodeFilter_ValueSet_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSet::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DataRequirement_CodeFilter_ValueSet =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDataRequirement_CodeFilter_ValueSet}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsDataRequirement_CodeFilter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_DataRequirement_CodeFilter_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::DataRequirement_CodeFilter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::DataRequirement_CodeFilter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_DataRequirement_CodeFilter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDataRequirement_CodeFilter}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_DataRequirement_CodeFilter_ValueSet.base,}};

static void InitDefaultsDataRequirement_DateFilter_Value() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_DataRequirement_DateFilter_Value_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::DataRequirement_DateFilter_Value();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::DataRequirement_DateFilter_Value::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DataRequirement_DateFilter_Value =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDataRequirement_DateFilter_Value}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsDataRequirement_DateFilter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_DataRequirement_DateFilter_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::DataRequirement_DateFilter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::DataRequirement_DateFilter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_DataRequirement_DateFilter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDataRequirement_DateFilter}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_DataRequirement_DateFilter_Value.base,}};

static void InitDefaultsDataRequirement() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_DataRequirement_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::DataRequirement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::DataRequirement::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_DataRequirement =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsDataRequirement}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_FHIRAllTypesCode.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_DataRequirement_CodeFilter.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_DataRequirement_DateFilter.base,}};

static void InitDefaultsElement() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_Element_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Element();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::Element::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Element =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsElement}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsElementDefinition_Slicing_Discriminator() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_ElementDefinition_Slicing_Discriminator_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::ElementDefinition_Slicing_Discriminator();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::ElementDefinition_Slicing_Discriminator::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ElementDefinition_Slicing_Discriminator =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsElementDefinition_Slicing_Discriminator}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_DiscriminatorTypeCode.base,}};

static void InitDefaultsElementDefinition_Slicing() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_ElementDefinition_Slicing_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::ElementDefinition_Slicing();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::ElementDefinition_Slicing::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ElementDefinition_Slicing =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsElementDefinition_Slicing}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_Slicing_Discriminator.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_SlicingRulesCode.base,}};

static void InitDefaultsElementDefinition_Base() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_ElementDefinition_Base_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::ElementDefinition_Base();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::ElementDefinition_Base::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ElementDefinition_Base =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsElementDefinition_Base}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsElementDefinition_TypeRef() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_ElementDefinition_TypeRef_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::ElementDefinition_TypeRef();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::ElementDefinition_TypeRef::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ElementDefinition_TypeRef =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsElementDefinition_TypeRef}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_AggregationModeCode.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_ReferenceVersionRulesCode.base,}};

static void InitDefaultsElementDefinition_DefaultValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::ElementDefinition_DefaultValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::ElementDefinition_DefaultValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ElementDefinition_DefaultValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsElementDefinition_DefaultValue}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsElementDefinition_Fixed() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::ElementDefinition_Fixed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::ElementDefinition_Fixed::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ElementDefinition_Fixed =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsElementDefinition_Fixed}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsElementDefinition_Pattern() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::ElementDefinition_Pattern();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::ElementDefinition_Pattern::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ElementDefinition_Pattern =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsElementDefinition_Pattern}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsElementDefinition_Example_Value() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::ElementDefinition_Example_Value();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::ElementDefinition_Example_Value::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ElementDefinition_Example_Value =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsElementDefinition_Example_Value}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsElementDefinition_Example() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_ElementDefinition_Example_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::ElementDefinition_Example();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::ElementDefinition_Example::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ElementDefinition_Example =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsElementDefinition_Example}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_Example_Value.base,}};

static void InitDefaultsElementDefinition_MinValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_ElementDefinition_MinValue_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::ElementDefinition_MinValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::ElementDefinition_MinValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ElementDefinition_MinValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsElementDefinition_MinValue}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsElementDefinition_MaxValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_ElementDefinition_MaxValue_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::ElementDefinition_MaxValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::ElementDefinition_MaxValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ElementDefinition_MaxValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsElementDefinition_MaxValue}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsElementDefinition_Constraint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_ElementDefinition_Constraint_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::ElementDefinition_Constraint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::ElementDefinition_Constraint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ElementDefinition_Constraint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsElementDefinition_Constraint}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_ConstraintSeverityCode.base,}};

static void InitDefaultsElementDefinition_ElementDefinitionBinding_ValueSet() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_ElementDefinition_ElementDefinitionBinding_ValueSet_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSet::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ElementDefinition_ElementDefinitionBinding_ValueSet =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsElementDefinition_ElementDefinitionBinding_ValueSet}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsElementDefinition_ElementDefinitionBinding() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_ElementDefinition_ElementDefinitionBinding_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ElementDefinition_ElementDefinitionBinding =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsElementDefinition_ElementDefinitionBinding}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_BindingStrengthCode.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_ElementDefinitionBinding_ValueSet.base,}};

static void InitDefaultsElementDefinition_Mapping() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_ElementDefinition_Mapping_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::ElementDefinition_Mapping();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::ElementDefinition_Mapping::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ElementDefinition_Mapping =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsElementDefinition_Mapping}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsElementDefinition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_ElementDefinition_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::ElementDefinition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::ElementDefinition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<14> scc_info_ElementDefinition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 14, InitDefaultsElementDefinition}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_PropertyRepresentationCode.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_Slicing.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_Base.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_TypeRef.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_DefaultValue.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_Fixed.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_Pattern.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_Example.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_MinValue.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_MaxValue.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_Constraint.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_ElementDefinitionBinding.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_Mapping.base,}};

static void InitDefaultsNarrative() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_Narrative_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Narrative();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::Narrative::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Narrative =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsNarrative}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_NarrativeStatusCode.base,
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Xhtml.base,}};

static void InitDefaultsParameterDefinition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_ParameterDefinition_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::ParameterDefinition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::ParameterDefinition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ParameterDefinition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsParameterDefinition}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_OperationParameterUseCode.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_FHIRAllTypesCode.base,}};

static void InitDefaultsRelatedArtifact() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_RelatedArtifact_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::RelatedArtifact();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::RelatedArtifact::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RelatedArtifact =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRelatedArtifact}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_RelatedArtifactTypeCode.base,}};

static void InitDefaultsResource() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_Resource_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Resource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::Resource::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Resource =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsResource}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsTriggerDefinition_EventTiming() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_TriggerDefinition_EventTiming_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::TriggerDefinition_EventTiming();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::TriggerDefinition_EventTiming::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TriggerDefinition_EventTiming =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTriggerDefinition_EventTiming}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsTriggerDefinition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_TriggerDefinition_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::TriggerDefinition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::TriggerDefinition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_TriggerDefinition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsTriggerDefinition}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_TriggerTypeCode.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_TriggerDefinition_EventTiming.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_DataRequirement.base,}};

static void InitDefaultsUsageContext_Value() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_UsageContext_Value_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::UsageContext_Value();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::UsageContext_Value::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsageContext_Value =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsageContext_Value}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsageContext() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_UsageContext_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::UsageContext();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::UsageContext::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UsageContext =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUsageContext}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_UsageContext_Value.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_BackboneElement.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ContactDetail.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Contributor.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataRequirement_CodeFilter_ValueSet.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataRequirement_CodeFilter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataRequirement_DateFilter_Value.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataRequirement_DateFilter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataRequirement.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Element.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ElementDefinition_Slicing_Discriminator.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ElementDefinition_Slicing.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ElementDefinition_Base.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ElementDefinition_TypeRef.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ElementDefinition_DefaultValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ElementDefinition_Fixed.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ElementDefinition_Pattern.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ElementDefinition_Example_Value.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ElementDefinition_Example.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ElementDefinition_MinValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ElementDefinition_MaxValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ElementDefinition_Constraint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ElementDefinition_ElementDefinitionBinding_ValueSet.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ElementDefinition_ElementDefinitionBinding.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ElementDefinition_Mapping.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ElementDefinition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Narrative.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ParameterDefinition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RelatedArtifact.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Resource.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TriggerDefinition_EventTiming.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TriggerDefinition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsageContext_Value.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsageContext.base);
}

::google::protobuf::Metadata file_level_metadata[33];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::BackboneElement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::BackboneElement, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::BackboneElement, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::BackboneElement, modifier_extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ContactDetail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ContactDetail, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ContactDetail, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ContactDetail, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ContactDetail, telecom_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Contributor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Contributor, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Contributor, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Contributor, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Contributor, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Contributor, contact_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSet, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSet, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSetDefaultTypeInternal, string_value_),
  offsetof(::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSetDefaultTypeInternal, reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSet, value_set_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DataRequirement_CodeFilter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DataRequirement_CodeFilter, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DataRequirement_CodeFilter, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DataRequirement_CodeFilter, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DataRequirement_CodeFilter, value_set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DataRequirement_CodeFilter, value_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DataRequirement_CodeFilter, value_coding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DataRequirement_CodeFilter, value_codeable_concept_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DataRequirement_DateFilter_Value, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DataRequirement_DateFilter_Value, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::proto::DataRequirement_DateFilter_ValueDefaultTypeInternal, date_time_),
  offsetof(::google::fhir::stu3::proto::DataRequirement_DateFilter_ValueDefaultTypeInternal, period_),
  offsetof(::google::fhir::stu3::proto::DataRequirement_DateFilter_ValueDefaultTypeInternal, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DataRequirement_DateFilter_Value, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DataRequirement_DateFilter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DataRequirement_DateFilter, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DataRequirement_DateFilter, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DataRequirement_DateFilter, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DataRequirement_DateFilter, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DataRequirement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DataRequirement, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DataRequirement, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DataRequirement, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DataRequirement, profile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DataRequirement, must_support_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DataRequirement, code_filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DataRequirement, date_filter_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Element, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Element, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Element, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Slicing_Discriminator, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Slicing_Discriminator, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Slicing_Discriminator, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Slicing_Discriminator, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Slicing_Discriminator, path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Slicing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Slicing, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Slicing, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Slicing, discriminator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Slicing, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Slicing, ordered_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Slicing, rules_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Base, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Base, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Base, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Base, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Base, min_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Base, max_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_TypeRef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_TypeRef, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_TypeRef, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_TypeRef, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_TypeRef, profile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_TypeRef, target_profile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_TypeRef, aggregation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_TypeRef, versioning_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_DefaultValue, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_DefaultValue, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, base64_binary_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, boolean_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, code_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, date_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, date_time_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, decimal_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, id_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, instant_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, integer_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, markdown_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, oid_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, positive_int_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, string_value_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, time_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, unsigned_int_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, uri_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, address_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, age_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, annotation_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, attachment_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, codeable_concept_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, coding_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, contact_point_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, count_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, distance_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, duration_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, human_name_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, identifier_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, money_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, period_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, quantity_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, range_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, ratio_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, reference_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, sampled_data_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, signature_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, timing_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_DefaultValueDefaultTypeInternal, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_DefaultValue, default_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Fixed, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Fixed, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, base64_binary_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, boolean_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, code_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, date_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, date_time_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, decimal_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, id_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, instant_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, integer_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, markdown_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, oid_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, positive_int_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, string_value_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, time_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, unsigned_int_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, uri_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, address_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, age_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, annotation_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, attachment_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, codeable_concept_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, coding_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, contact_point_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, count_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, distance_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, duration_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, human_name_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, identifier_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, money_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, period_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, quantity_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, range_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, ratio_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, reference_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, sampled_data_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, signature_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, timing_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_FixedDefaultTypeInternal, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Fixed, fixed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Pattern, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Pattern, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, base64_binary_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, boolean_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, code_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, date_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, date_time_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, decimal_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, id_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, instant_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, integer_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, markdown_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, oid_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, positive_int_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, string_value_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, time_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, unsigned_int_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, uri_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, address_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, age_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, annotation_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, attachment_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, codeable_concept_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, coding_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, contact_point_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, count_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, distance_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, duration_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, human_name_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, identifier_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, money_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, period_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, quantity_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, range_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, ratio_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, reference_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, sampled_data_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, signature_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, timing_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_PatternDefaultTypeInternal, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Pattern, pattern_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Example_Value, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Example_Value, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, base64_binary_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, boolean_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, code_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, date_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, date_time_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, decimal_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, id_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, instant_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, integer_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, markdown_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, oid_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, positive_int_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, string_value_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, time_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, unsigned_int_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, uri_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, address_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, age_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, annotation_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, attachment_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, codeable_concept_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, coding_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, contact_point_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, count_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, distance_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, duration_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, human_name_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, identifier_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, money_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, period_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, quantity_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, range_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, ratio_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, reference_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, sampled_data_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, signature_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, timing_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_Example_ValueDefaultTypeInternal, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Example_Value, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Example, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Example, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Example, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Example, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Example, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_MinValue, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_MinValue, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::proto::ElementDefinition_MinValueDefaultTypeInternal, date_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_MinValueDefaultTypeInternal, date_time_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_MinValueDefaultTypeInternal, instant_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_MinValueDefaultTypeInternal, time_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_MinValueDefaultTypeInternal, decimal_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_MinValueDefaultTypeInternal, integer_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_MinValueDefaultTypeInternal, positive_int_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_MinValueDefaultTypeInternal, unsigned_int_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_MinValueDefaultTypeInternal, quantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_MinValue, min_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_MaxValue, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_MaxValue, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::proto::ElementDefinition_MaxValueDefaultTypeInternal, date_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_MaxValueDefaultTypeInternal, date_time_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_MaxValueDefaultTypeInternal, instant_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_MaxValueDefaultTypeInternal, time_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_MaxValueDefaultTypeInternal, decimal_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_MaxValueDefaultTypeInternal, integer_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_MaxValueDefaultTypeInternal, positive_int_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_MaxValueDefaultTypeInternal, unsigned_int_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_MaxValueDefaultTypeInternal, quantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_MaxValue, max_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Constraint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Constraint, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Constraint, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Constraint, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Constraint, requirements_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Constraint, severity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Constraint, human_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Constraint, expression_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Constraint, xpath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Constraint, source_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSet, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSet, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSetDefaultTypeInternal, uri_),
  offsetof(::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSetDefaultTypeInternal, reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSet, value_set_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding, strength_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding, value_set_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Mapping, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Mapping, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Mapping, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Mapping, identity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Mapping, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Mapping, map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition_Mapping, comment_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, representation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, slice_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, slicing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, short__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, definition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, comment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, requirements_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, alias_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, min_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, base_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, content_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, default_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, meaning_when_missing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, order_meaning_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, fixed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, pattern_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, example_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, min_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, max_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, max_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, condition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, constraint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, must_support_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, is_modifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, is_summary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, binding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ElementDefinition, mapping_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Narrative, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Narrative, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Narrative, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Narrative, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Narrative, div_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ParameterDefinition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ParameterDefinition, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ParameterDefinition, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ParameterDefinition, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ParameterDefinition, use_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ParameterDefinition, min_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ParameterDefinition, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ParameterDefinition, documentation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ParameterDefinition, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ParameterDefinition, profile_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::RelatedArtifact, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::RelatedArtifact, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::RelatedArtifact, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::RelatedArtifact, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::RelatedArtifact, display_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::RelatedArtifact, citation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::RelatedArtifact, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::RelatedArtifact, document_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::RelatedArtifact, resource_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Resource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Resource, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Resource, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Resource, implicit_rules_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Resource, language_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::TriggerDefinition_EventTiming, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::TriggerDefinition_EventTiming, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::proto::TriggerDefinition_EventTimingDefaultTypeInternal, timing_),
  offsetof(::google::fhir::stu3::proto::TriggerDefinition_EventTimingDefaultTypeInternal, reference_),
  offsetof(::google::fhir::stu3::proto::TriggerDefinition_EventTimingDefaultTypeInternal, date_),
  offsetof(::google::fhir::stu3::proto::TriggerDefinition_EventTimingDefaultTypeInternal, date_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::TriggerDefinition_EventTiming, event_timing_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::TriggerDefinition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::TriggerDefinition, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::TriggerDefinition, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::TriggerDefinition, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::TriggerDefinition, event_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::TriggerDefinition, event_timing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::TriggerDefinition, event_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::UsageContext_Value, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::UsageContext_Value, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::proto::UsageContext_ValueDefaultTypeInternal, codeable_concept_),
  offsetof(::google::fhir::stu3::proto::UsageContext_ValueDefaultTypeInternal, quantity_),
  offsetof(::google::fhir::stu3::proto::UsageContext_ValueDefaultTypeInternal, range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::UsageContext_Value, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::UsageContext, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::UsageContext, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::UsageContext, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::UsageContext, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::UsageContext, value_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::fhir::stu3::proto::BackboneElement)},
  { 8, -1, sizeof(::google::fhir::stu3::proto::ContactDetail)},
  { 17, -1, sizeof(::google::fhir::stu3::proto::Contributor)},
  { 27, -1, sizeof(::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSet)},
  { 35, -1, sizeof(::google::fhir::stu3::proto::DataRequirement_CodeFilter)},
  { 47, -1, sizeof(::google::fhir::stu3::proto::DataRequirement_DateFilter_Value)},
  { 56, -1, sizeof(::google::fhir::stu3::proto::DataRequirement_DateFilter)},
  { 65, -1, sizeof(::google::fhir::stu3::proto::DataRequirement)},
  { 77, -1, sizeof(::google::fhir::stu3::proto::Element)},
  { 84, -1, sizeof(::google::fhir::stu3::proto::ElementDefinition_Slicing_Discriminator)},
  { 93, -1, sizeof(::google::fhir::stu3::proto::ElementDefinition_Slicing)},
  { 104, -1, sizeof(::google::fhir::stu3::proto::ElementDefinition_Base)},
  { 114, -1, sizeof(::google::fhir::stu3::proto::ElementDefinition_TypeRef)},
  { 126, -1, sizeof(::google::fhir::stu3::proto::ElementDefinition_DefaultValue)},
  { 170, -1, sizeof(::google::fhir::stu3::proto::ElementDefinition_Fixed)},
  { 214, -1, sizeof(::google::fhir::stu3::proto::ElementDefinition_Pattern)},
  { 258, -1, sizeof(::google::fhir::stu3::proto::ElementDefinition_Example_Value)},
  { 302, -1, sizeof(::google::fhir::stu3::proto::ElementDefinition_Example)},
  { 311, -1, sizeof(::google::fhir::stu3::proto::ElementDefinition_MinValue)},
  { 326, -1, sizeof(::google::fhir::stu3::proto::ElementDefinition_MaxValue)},
  { 341, -1, sizeof(::google::fhir::stu3::proto::ElementDefinition_Constraint)},
  { 355, -1, sizeof(::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSet)},
  { 363, -1, sizeof(::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding)},
  { 373, -1, sizeof(::google::fhir::stu3::proto::ElementDefinition_Mapping)},
  { 384, -1, sizeof(::google::fhir::stu3::proto::ElementDefinition)},
  { 423, -1, sizeof(::google::fhir::stu3::proto::Narrative)},
  { 432, -1, sizeof(::google::fhir::stu3::proto::ParameterDefinition)},
  { 446, -1, sizeof(::google::fhir::stu3::proto::RelatedArtifact)},
  { 459, -1, sizeof(::google::fhir::stu3::proto::Resource)},
  { 468, -1, sizeof(::google::fhir::stu3::proto::TriggerDefinition_EventTiming)},
  { 478, -1, sizeof(::google::fhir::stu3::proto::TriggerDefinition)},
  { 489, -1, sizeof(::google::fhir::stu3::proto::UsageContext_Value)},
  { 498, -1, sizeof(::google::fhir::stu3::proto::UsageContext)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_BackboneElement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_ContactDetail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Contributor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_DataRequirement_CodeFilter_ValueSet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_DataRequirement_CodeFilter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_DataRequirement_DateFilter_Value_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_DataRequirement_DateFilter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_DataRequirement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Element_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_ElementDefinition_Slicing_Discriminator_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_ElementDefinition_Slicing_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_ElementDefinition_Base_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_ElementDefinition_TypeRef_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_ElementDefinition_Example_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_ElementDefinition_MinValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_ElementDefinition_MaxValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_ElementDefinition_Constraint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_ElementDefinition_ElementDefinitionBinding_ValueSet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_ElementDefinition_ElementDefinitionBinding_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_ElementDefinition_Mapping_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_ElementDefinition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Narrative_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_ParameterDefinition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_RelatedArtifact_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Resource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_TriggerDefinition_EventTiming_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_TriggerDefinition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_UsageContext_Value_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_UsageContext_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "proto/stu3/metadatatypes.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 33);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\036proto/stu3/metadatatypes.proto\022\026google"
      ".fhir.stu3.proto\032\034proto/stu3/annotations"
      ".proto\032\026proto/stu3/codes.proto\032\032proto/st"
      "u3/datatypes.proto\"\367\001\n\017BackboneElement\022*"
      "\n\002id\030\001 \001(\0132\036.google.fhir.stu3.proto.Stri"
      "ng\0224\n\textension\030\002 \003(\0132!.google.fhir.stu3"
      ".proto.Extension\022=\n\022modifier_extension\030\003"
      " \003(\0132!.google.fhir.stu3.proto.Extension:"
      "C\300\237\343\266\005\002\262\376\344\227\0067http://hl7.org/fhir/Structu"
      "reDefinition/BackboneElement\"\231\002\n\rContact"
      "Detail\022*\n\002id\030\001 \001(\0132\036.google.fhir.stu3.pr"
      "oto.String\0224\n\textension\030\002 \003(\0132!.google.f"
      "hir.stu3.proto.Extension\022,\n\004name\030\003 \001(\0132\036"
      ".google.fhir.stu3.proto.String\0225\n\007teleco"
      "m\030\004 \003(\0132$.google.fhir.stu3.proto.Contact"
      "Point:A\300\237\343\266\005\002\262\376\344\227\0065http://hl7.org/fhir/S"
      "tructureDefinition/ContactDetail\"\341\002\n\013Con"
      "tributor\022*\n\002id\030\001 \001(\0132\036.google.fhir.stu3."
      "proto.String\0224\n\textension\030\002 \003(\0132!.google"
      ".fhir.stu3.proto.Extension\022A\n\004type\030\003 \001(\013"
      "2+.google.fhir.stu3.proto.ContributorTyp"
      "eCodeB\006\360\320\207\353\004\001\0224\n\004name\030\004 \001(\0132\036.google.fhi"
      "r.stu3.proto.StringB\006\360\320\207\353\004\001\0226\n\007contact\030\005"
      " \003(\0132%.google.fhir.stu3.proto.ContactDet"
      "ail:\?\300\237\343\266\005\002\262\376\344\227\0063http://hl7.org/fhir/Str"
      "uctureDefinition/Contributor\"\222\014\n\017DataReq"
      "uirement\022*\n\002id\030\001 \001(\0132\036.google.fhir.stu3."
      "proto.String\0224\n\textension\030\002 \003(\0132!.google"
      ".fhir.stu3.proto.Extension\022>\n\004type\030\003 \001(\013"
      "2(.google.fhir.stu3.proto.FHIRAllTypesCo"
      "deB\006\360\320\207\353\004\001\022,\n\007profile\030\004 \003(\0132\033.google.fhi"
      "r.stu3.proto.Uri\0224\n\014must_support\030\005 \003(\0132\036"
      ".google.fhir.stu3.proto.String\022G\n\013code_f"
      "ilter\030\006 \003(\01322.google.fhir.stu3.proto.Dat"
      "aRequirement.CodeFilter\022G\n\013date_filter\030\007"
      " \003(\01322.google.fhir.stu3.proto.DataRequir"
      "ement.DateFilter\032\367\004\n\nCodeFilter\022*\n\002id\030\001 "
      "\001(\0132\036.google.fhir.stu3.proto.String\0224\n\te"
      "xtension\030\002 \003(\0132!.google.fhir.stu3.proto."
      "Extension\0224\n\004path\030\003 \001(\0132\036.google.fhir.st"
      "u3.proto.StringB\006\360\320\207\353\004\001\022V\n\tvalue_set\030\004 \001"
      "(\0132;.google.fhir.stu3.proto.DataRequirem"
      "ent.CodeFilter.ValueSetB\006\370\341\343\311\005\001\0220\n\nvalue"
      "_code\030\005 \003(\0132\034.google.fhir.stu3.proto.Cod"
      "e\0224\n\014value_coding\030\006 \003(\0132\036.google.fhir.st"
      "u3.proto.Coding\022G\n\026value_codeable_concep"
      "t\030\007 \003(\0132\'.google.fhir.stu3.proto.Codeabl"
      "eConcept\032\307\001\n\010ValueSet\022>\n\014string_value\030\001 "
      "\001(\0132\036.google.fhir.stu3.proto.StringH\000R\006s"
      "tring\022n\n\treference\030\002 \001(\0132!.google.fhir.s"
      "tu3.proto.ReferenceB6\362\377\374\302\0060http://hl7.or"
      "g/fhir/StructureDefinition/ValueSetH\000B\013\n"
      "\tvalue_set\032\247\003\n\nDateFilter\022*\n\002id\030\001 \001(\0132\036."
      "google.fhir.stu3.proto.String\0224\n\textensi"
      "on\030\002 \003(\0132!.google.fhir.stu3.proto.Extens"
      "ion\0224\n\004path\030\003 \001(\0132\036.google.fhir.stu3.pro"
      "to.StringB\006\360\320\207\353\004\001\022O\n\005value\030\004 \001(\01328.googl"
      "e.fhir.stu3.proto.DataRequirement.DateFi"
      "lter.ValueB\006\370\341\343\311\005\001\032\257\001\n\005Value\0225\n\tdate_tim"
      "e\030\001 \001(\0132 .google.fhir.stu3.proto.DateTim"
      "eH\000\0220\n\006period\030\002 \001(\0132\036.google.fhir.stu3.p"
      "roto.PeriodH\000\0224\n\010duration\030\003 \001(\0132 .google"
      ".fhir.stu3.proto.DurationH\000B\007\n\005value:C\300\237"
      "\343\266\005\002\262\376\344\227\0067http://hl7.org/fhir/StructureD"
      "efinition/DataRequirement\"\250\001\n\007Element\022*\n"
      "\002id\030\001 \001(\0132\036.google.fhir.stu3.proto.Strin"
      "g\0224\n\textension\030\002 \003(\0132!.google.fhir.stu3."
      "proto.Extension:;\300\237\343\266\005\002\262\376\344\227\006/http://hl7."
      "org/fhir/StructureDefinition/Element\"\347n\n"
      "\021ElementDefinition\022*\n\002id\030\001 \001(\0132\036.google."
      "fhir.stu3.proto.String\0224\n\textension\030\002 \003("
      "\0132!.google.fhir.stu3.proto.Extension\0224\n\004"
      "path\030\003 \001(\0132\036.google.fhir.stu3.proto.Stri"
      "ngB\006\360\320\207\353\004\001\022J\n\016representation\030\004 \003(\01322.goo"
      "gle.fhir.stu3.proto.PropertyRepresentati"
      "onCode\0222\n\nslice_name\030\005 \001(\0132\036.google.fhir"
      ".stu3.proto.String\022-\n\005label\030\006 \001(\0132\036.goog"
      "le.fhir.stu3.proto.String\022,\n\004code\030\007 \003(\0132"
      "\036.google.fhir.stu3.proto.Coding\022B\n\007slici"
      "ng\030\010 \001(\01321.google.fhir.stu3.proto.Elemen"
      "tDefinition.Slicing\022-\n\005short\030\t \001(\0132\036.goo"
      "gle.fhir.stu3.proto.String\0224\n\ndefinition"
      "\030\n \001(\0132 .google.fhir.stu3.proto.Markdown"
      "\0221\n\007comment\030\013 \001(\0132 .google.fhir.stu3.pro"
      "to.Markdown\0226\n\014requirements\030\014 \001(\0132 .goog"
      "le.fhir.stu3.proto.Markdown\022-\n\005alias\030\r \003"
      "(\0132\036.google.fhir.stu3.proto.String\0220\n\003mi"
      "n\030\016 \001(\0132#.google.fhir.stu3.proto.Unsigne"
      "dInt\022+\n\003max\030\017 \001(\0132\036.google.fhir.stu3.pro"
      "to.String\022<\n\004base\030\020 \001(\0132..google.fhir.st"
      "u3.proto.ElementDefinition.Base\0226\n\021conte"
      "nt_reference\030\021 \001(\0132\033.google.fhir.stu3.pr"
      "oto.Uri\022\?\n\004type\030\022 \003(\01321.google.fhir.stu3"
      ".proto.ElementDefinition.TypeRef\022U\n\rdefa"
      "ult_value\030\023 \001(\01326.google.fhir.stu3.proto"
      ".ElementDefinition.DefaultValueB\006\370\341\343\311\005\001\022"
      ">\n\024meaning_when_missing\030\024 \001(\0132 .google.f"
      "hir.stu3.proto.Markdown\0225\n\rorder_meaning"
      "\030\025 \001(\0132\036.google.fhir.stu3.proto.String\022F"
      "\n\005fixed\030\026 \001(\0132/.google.fhir.stu3.proto.E"
      "lementDefinition.FixedB\006\370\341\343\311\005\001\022J\n\007patter"
      "n\030\027 \001(\01321.google.fhir.stu3.proto.Element"
      "Definition.PatternB\006\370\341\343\311\005\001\022B\n\007example\030\030 "
      "\003(\01321.google.fhir.stu3.proto.ElementDefi"
      "nition.Example\022M\n\tmin_value\030\031 \001(\01322.goog"
      "le.fhir.stu3.proto.ElementDefinition.Min"
      "ValueB\006\370\341\343\311\005\001\022M\n\tmax_value\030\032 \001(\01322.googl"
      "e.fhir.stu3.proto.ElementDefinition.MaxV"
      "alueB\006\370\341\343\311\005\001\0223\n\nmax_length\030\033 \001(\0132\037.googl"
      "e.fhir.stu3.proto.Integer\022-\n\tcondition\030\034"
      " \003(\0132\032.google.fhir.stu3.proto.Id\022H\n\ncons"
      "traint\030\035 \003(\01324.google.fhir.stu3.proto.El"
      "ementDefinition.Constraint\0225\n\014must_suppo"
      "rt\030\036 \001(\0132\037.google.fhir.stu3.proto.Boolea"
      "n\0224\n\013is_modifier\030\037 \001(\0132\037.google.fhir.stu"
      "3.proto.Boolean\0223\n\nis_summary\030  \001(\0132\037.go"
      "ogle.fhir.stu3.proto.Boolean\022S\n\007binding\030"
      "! \001(\0132B.google.fhir.stu3.proto.ElementDe"
      "finition.ElementDefinitionBinding\022B\n\007map"
      "ping\030\" \003(\01321.google.fhir.stu3.proto.Elem"
      "entDefinition.Mapping\032\332\004\n\007Slicing\022*\n\002id\030"
      "\001 \001(\0132\036.google.fhir.stu3.proto.String\0224\n"
      "\textension\030\002 \003(\0132!.google.fhir.stu3.prot"
      "o.Extension\022V\n\rdiscriminator\030\003 \003(\0132\?.goo"
      "gle.fhir.stu3.proto.ElementDefinition.Sl"
      "icing.Discriminator\0223\n\013description\030\004 \001(\013"
      "2\036.google.fhir.stu3.proto.String\0220\n\007orde"
      "red\030\005 \001(\0132\037.google.fhir.stu3.proto.Boole"
      "an\022\?\n\005rules\030\006 \001(\0132(.google.fhir.stu3.pro"
      "to.SlicingRulesCodeB\006\360\320\207\353\004\001\032\354\001\n\rDiscrimi"
      "nator\022*\n\002id\030\001 \001(\0132\036.google.fhir.stu3.pro"
      "to.String\0224\n\textension\030\002 \003(\0132!.google.fh"
      "ir.stu3.proto.Extension\022C\n\004type\030\003 \001(\0132-."
      "google.fhir.stu3.proto.DiscriminatorType"
      "CodeB\006\360\320\207\353\004\001\0224\n\004path\030\004 \001(\0132\036.google.fhir"
      ".stu3.proto.StringB\006\360\320\207\353\004\001\032\215\002\n\004Base\022*\n\002i"
      "d\030\001 \001(\0132\036.google.fhir.stu3.proto.String\022"
      "4\n\textension\030\002 \003(\0132!.google.fhir.stu3.pr"
      "oto.Extension\0224\n\004path\030\003 \001(\0132\036.google.fhi"
      "r.stu3.proto.StringB\006\360\320\207\353\004\001\0228\n\003min\030\004 \001(\013"
      "2#.google.fhir.stu3.proto.UnsignedIntB\006\360"
      "\320\207\353\004\001\0223\n\003max\030\005 \001(\0132\036.google.fhir.stu3.pr"
      "oto.StringB\006\360\320\207\353\004\001\032\212\003\n\007TypeRef\022*\n\002id\030\001 \001"
      "(\0132\036.google.fhir.stu3.proto.String\0224\n\tex"
      "tension\030\002 \003(\0132!.google.fhir.stu3.proto.E"
      "xtension\0221\n\004code\030\003 \001(\0132\033.google.fhir.stu"
      "3.proto.UriB\006\360\320\207\353\004\001\022,\n\007profile\030\004 \001(\0132\033.g"
      "oogle.fhir.stu3.proto.Uri\0223\n\016target_prof"
      "ile\030\005 \001(\0132\033.google.fhir.stu3.proto.Uri\022@"
      "\n\013aggregation\030\006 \003(\0132+.google.fhir.stu3.p"
      "roto.AggregationModeCode\022E\n\nversioning\030\007"
      " \001(\01321.google.fhir.stu3.proto.ReferenceV"
      "ersionRulesCode\032\377\017\n\014DefaultValue\022=\n\rbase"
      "64_binary\030\001 \001(\0132$.google.fhir.stu3.proto"
      ".Base64BinaryH\000\0222\n\007boolean\030\002 \001(\0132\037.googl"
      "e.fhir.stu3.proto.BooleanH\000\022,\n\004code\030\003 \001("
      "\0132\034.google.fhir.stu3.proto.CodeH\000\022,\n\004dat"
      "e\030\004 \001(\0132\034.google.fhir.stu3.proto.DateH\000\022"
      "5\n\tdate_time\030\005 \001(\0132 .google.fhir.stu3.pr"
      "oto.DateTimeH\000\0222\n\007decimal\030\006 \001(\0132\037.google"
      ".fhir.stu3.proto.DecimalH\000\022(\n\002id\030\007 \001(\0132\032"
      ".google.fhir.stu3.proto.IdH\000\0222\n\007instant\030"
      "\010 \001(\0132\037.google.fhir.stu3.proto.InstantH\000"
      "\0222\n\007integer\030\t \001(\0132\037.google.fhir.stu3.pro"
      "to.IntegerH\000\0224\n\010markdown\030\n \001(\0132 .google."
      "fhir.stu3.proto.MarkdownH\000\022*\n\003oid\030\013 \001(\0132"
      "\033.google.fhir.stu3.proto.OidH\000\022;\n\014positi"
      "ve_int\030\014 \001(\0132#.google.fhir.stu3.proto.Po"
      "sitiveIntH\000\022>\n\014string_value\030\r \001(\0132\036.goog"
      "le.fhir.stu3.proto.StringH\000R\006string\022,\n\004t"
      "ime\030\016 \001(\0132\034.google.fhir.stu3.proto.TimeH"
      "\000\022;\n\014unsigned_int\030\017 \001(\0132#.google.fhir.st"
      "u3.proto.UnsignedIntH\000\022*\n\003uri\030\020 \001(\0132\033.go"
      "ogle.fhir.stu3.proto.UriH\000\0222\n\007address\030\021 "
      "\001(\0132\037.google.fhir.stu3.proto.AddressH\000\022*"
      "\n\003age\030\022 \001(\0132\033.google.fhir.stu3.proto.Age"
      "H\000\0228\n\nannotation\030\023 \001(\0132\".google.fhir.stu"
      "3.proto.AnnotationH\000\0228\n\nattachment\030\024 \001(\013"
      "2\".google.fhir.stu3.proto.AttachmentH\000\022C"
      "\n\020codeable_concept\030\025 \001(\0132\'.google.fhir.s"
      "tu3.proto.CodeableConceptH\000\0220\n\006coding\030\026 "
      "\001(\0132\036.google.fhir.stu3.proto.CodingH\000\022=\n"
      "\rcontact_point\030\027 \001(\0132$.google.fhir.stu3."
      "proto.ContactPointH\000\022.\n\005count\030\030 \001(\0132\035.go"
      "ogle.fhir.stu3.proto.CountH\000\0224\n\010distance"
      "\030\031 \001(\0132 .google.fhir.stu3.proto.Distance"
      "H\000\0224\n\010duration\030\032 \001(\0132 .google.fhir.stu3."
      "proto.DurationH\000\0227\n\nhuman_name\030\033 \001(\0132!.g"
      "oogle.fhir.stu3.proto.HumanNameH\000\0228\n\nide"
      "ntifier\030\034 \001(\0132\".google.fhir.stu3.proto.I"
      "dentifierH\000\022.\n\005money\030\035 \001(\0132\035.google.fhir"
      ".stu3.proto.MoneyH\000\0220\n\006period\030\036 \001(\0132\036.go"
      "ogle.fhir.stu3.proto.PeriodH\000\0224\n\010quantit"
      "y\030\037 \001(\0132 .google.fhir.stu3.proto.Quantit"
      "yH\000\022.\n\005range\030  \001(\0132\035.google.fhir.stu3.pr"
      "oto.RangeH\000\022.\n\005ratio\030! \001(\0132\035.google.fhir"
      ".stu3.proto.RatioH\000\0226\n\treference\030\" \001(\0132!"
      ".google.fhir.stu3.proto.ReferenceH\000\022;\n\014s"
      "ampled_data\030# \001(\0132#.google.fhir.stu3.pro"
      "to.SampledDataH\000\0226\n\tsignature\030$ \001(\0132!.go"
      "ogle.fhir.stu3.proto.SignatureH\000\0220\n\006timi"
      "ng\030% \001(\0132\036.google.fhir.stu3.proto.Timing"
      "H\000\022,\n\004meta\030& \001(\0132\034.google.fhir.stu3.prot"
      "o.MetaH\000B\017\n\rdefault_value\032\360\017\n\005Fixed\022=\n\rb"
      "ase64_binary\030\001 \001(\0132$.google.fhir.stu3.pr"
      "oto.Base64BinaryH\000\0222\n\007boolean\030\002 \001(\0132\037.go"
      "ogle.fhir.stu3.proto.BooleanH\000\022,\n\004code\030\003"
      " \001(\0132\034.google.fhir.stu3.proto.CodeH\000\022,\n\004"
      "date\030\004 \001(\0132\034.google.fhir.stu3.proto.Date"
      "H\000\0225\n\tdate_time\030\005 \001(\0132 .google.fhir.stu3"
      ".proto.DateTimeH\000\0222\n\007decimal\030\006 \001(\0132\037.goo"
      "gle.fhir.stu3.proto.DecimalH\000\022(\n\002id\030\007 \001("
      "\0132\032.google.fhir.stu3.proto.IdH\000\0222\n\007insta"
      "nt\030\010 \001(\0132\037.google.fhir.stu3.proto.Instan"
      "tH\000\0222\n\007integer\030\t \001(\0132\037.google.fhir.stu3."
      "proto.IntegerH\000\0224\n\010markdown\030\n \001(\0132 .goog"
      "le.fhir.stu3.proto.MarkdownH\000\022*\n\003oid\030\013 \001"
      "(\0132\033.google.fhir.stu3.proto.OidH\000\022;\n\014pos"
      "itive_int\030\014 \001(\0132#.google.fhir.stu3.proto"
      ".PositiveIntH\000\022>\n\014string_value\030\r \001(\0132\036.g"
      "oogle.fhir.stu3.proto.StringH\000R\006string\022,"
      "\n\004time\030\016 \001(\0132\034.google.fhir.stu3.proto.Ti"
      "meH\000\022;\n\014unsigned_int\030\017 \001(\0132#.google.fhir"
      ".stu3.proto.UnsignedIntH\000\022*\n\003uri\030\020 \001(\0132\033"
      ".google.fhir.stu3.proto.UriH\000\0222\n\007address"
      "\030\021 \001(\0132\037.google.fhir.stu3.proto.AddressH"
      "\000\022*\n\003age\030\022 \001(\0132\033.google.fhir.stu3.proto."
      "AgeH\000\0228\n\nannotation\030\023 \001(\0132\".google.fhir."
      "stu3.proto.AnnotationH\000\0228\n\nattachment\030\024 "
      "\001(\0132\".google.fhir.stu3.proto.AttachmentH"
      "\000\022C\n\020codeable_concept\030\025 \001(\0132\'.google.fhi"
      "r.stu3.proto.CodeableConceptH\000\0220\n\006coding"
      "\030\026 \001(\0132\036.google.fhir.stu3.proto.CodingH\000"
      "\022=\n\rcontact_point\030\027 \001(\0132$.google.fhir.st"
      "u3.proto.ContactPointH\000\022.\n\005count\030\030 \001(\0132\035"
      ".google.fhir.stu3.proto.CountH\000\0224\n\010dista"
      "nce\030\031 \001(\0132 .google.fhir.stu3.proto.Dista"
      "nceH\000\0224\n\010duration\030\032 \001(\0132 .google.fhir.st"
      "u3.proto.DurationH\000\0227\n\nhuman_name\030\033 \001(\0132"
      "!.google.fhir.stu3.proto.HumanNameH\000\0228\n\n"
      "identifier\030\034 \001(\0132\".google.fhir.stu3.prot"
      "o.IdentifierH\000\022.\n\005money\030\035 \001(\0132\035.google.f"
      "hir.stu3.proto.MoneyH\000\0220\n\006period\030\036 \001(\0132\036"
      ".google.fhir.stu3.proto.PeriodH\000\0224\n\010quan"
      "tity\030\037 \001(\0132 .google.fhir.stu3.proto.Quan"
      "tityH\000\022.\n\005range\030  \001(\0132\035.google.fhir.stu3"
      ".proto.RangeH\000\022.\n\005ratio\030! \001(\0132\035.google.f"
      "hir.stu3.proto.RatioH\000\0226\n\treference\030\" \001("
      "\0132!.google.fhir.stu3.proto.ReferenceH\000\022;"
      "\n\014sampled_data\030# \001(\0132#.google.fhir.stu3."
      "proto.SampledDataH\000\0226\n\tsignature\030$ \001(\0132!"
      ".google.fhir.stu3.proto.SignatureH\000\0220\n\006t"
      "iming\030% \001(\0132\036.google.fhir.stu3.proto.Tim"
      "ingH\000\022,\n\004meta\030& \001(\0132\034.google.fhir.stu3.p"
      "roto.MetaH\000B\007\n\005fixed\032\364\017\n\007Pattern\022=\n\rbase"
      "64_binary\030\001 \001(\0132$.google.fhir.stu3.proto"
      ".Base64BinaryH\000\0222\n\007boolean\030\002 \001(\0132\037.googl"
      "e.fhir.stu3.proto.BooleanH\000\022,\n\004code\030\003 \001("
      "\0132\034.google.fhir.stu3.proto.CodeH\000\022,\n\004dat"
      "e\030\004 \001(\0132\034.google.fhir.stu3.proto.DateH\000\022"
      "5\n\tdate_time\030\005 \001(\0132 .google.fhir.stu3.pr"
      "oto.DateTimeH\000\0222\n\007decimal\030\006 \001(\0132\037.google"
      ".fhir.stu3.proto.DecimalH\000\022(\n\002id\030\007 \001(\0132\032"
      ".google.fhir.stu3.proto.IdH\000\0222\n\007instant\030"
      "\010 \001(\0132\037.google.fhir.stu3.proto.InstantH\000"
      "\0222\n\007integer\030\t \001(\0132\037.google.fhir.stu3.pro"
      "to.IntegerH\000\0224\n\010markdown\030\n \001(\0132 .google."
      "fhir.stu3.proto.MarkdownH\000\022*\n\003oid\030\013 \001(\0132"
      "\033.google.fhir.stu3.proto.OidH\000\022;\n\014positi"
      "ve_int\030\014 \001(\0132#.google.fhir.stu3.proto.Po"
      "sitiveIntH\000\022>\n\014string_value\030\r \001(\0132\036.goog"
      "le.fhir.stu3.proto.StringH\000R\006string\022,\n\004t"
      "ime\030\016 \001(\0132\034.google.fhir.stu3.proto.TimeH"
      "\000\022;\n\014unsigned_int\030\017 \001(\0132#.google.fhir.st"
      "u3.proto.UnsignedIntH\000\022*\n\003uri\030\020 \001(\0132\033.go"
      "ogle.fhir.stu3.proto.UriH\000\0222\n\007address\030\021 "
      "\001(\0132\037.google.fhir.stu3.proto.AddressH\000\022*"
      "\n\003age\030\022 \001(\0132\033.google.fhir.stu3.proto.Age"
      "H\000\0228\n\nannotation\030\023 \001(\0132\".google.fhir.stu"
      "3.proto.AnnotationH\000\0228\n\nattachment\030\024 \001(\013"
      "2\".google.fhir.stu3.proto.AttachmentH\000\022C"
      "\n\020codeable_concept\030\025 \001(\0132\'.google.fhir.s"
      "tu3.proto.CodeableConceptH\000\0220\n\006coding\030\026 "
      "\001(\0132\036.google.fhir.stu3.proto.CodingH\000\022=\n"
      "\rcontact_point\030\027 \001(\0132$.google.fhir.stu3."
      "proto.ContactPointH\000\022.\n\005count\030\030 \001(\0132\035.go"
      "ogle.fhir.stu3.proto.CountH\000\0224\n\010distance"
      "\030\031 \001(\0132 .google.fhir.stu3.proto.Distance"
      "H\000\0224\n\010duration\030\032 \001(\0132 .google.fhir.stu3."
      "proto.DurationH\000\0227\n\nhuman_name\030\033 \001(\0132!.g"
      "oogle.fhir.stu3.proto.HumanNameH\000\0228\n\nide"
      "ntifier\030\034 \001(\0132\".google.fhir.stu3.proto.I"
      "dentifierH\000\022.\n\005money\030\035 \001(\0132\035.google.fhir"
      ".stu3.proto.MoneyH\000\0220\n\006period\030\036 \001(\0132\036.go"
      "ogle.fhir.stu3.proto.PeriodH\000\0224\n\010quantit"
      "y\030\037 \001(\0132 .google.fhir.stu3.proto.Quantit"
      "yH\000\022.\n\005range\030  \001(\0132\035.google.fhir.stu3.pr"
      "oto.RangeH\000\022.\n\005ratio\030! \001(\0132\035.google.fhir"
      ".stu3.proto.RatioH\000\0226\n\treference\030\" \001(\0132!"
      ".google.fhir.stu3.proto.ReferenceH\000\022;\n\014s"
      "ampled_data\030# \001(\0132#.google.fhir.stu3.pro"
      "to.SampledDataH\000\0226\n\tsignature\030$ \001(\0132!.go"
      "ogle.fhir.stu3.proto.SignatureH\000\0220\n\006timi"
      "ng\030% \001(\0132\036.google.fhir.stu3.proto.Timing"
      "H\000\022,\n\004meta\030& \001(\0132\034.google.fhir.stu3.prot"
      "o.MetaH\000B\t\n\007pattern\032\353\021\n\007Example\022*\n\002id\030\001 "
      "\001(\0132\036.google.fhir.stu3.proto.String\0224\n\te"
      "xtension\030\002 \003(\0132!.google.fhir.stu3.proto."
      "Extension\0225\n\005label\030\003 \001(\0132\036.google.fhir.s"
      "tu3.proto.StringB\006\360\320\207\353\004\001\022T\n\005value\030\004 \001(\0132"
      "7.google.fhir.stu3.proto.ElementDefiniti"
      "on.Example.ValueB\014\370\341\343\311\005\001\360\320\207\353\004\001\032\360\017\n\005Value"
      "\022=\n\rbase64_binary\030\001 \001(\0132$.google.fhir.st"
      "u3.proto.Base64BinaryH\000\0222\n\007boolean\030\002 \001(\013"
      "2\037.google.fhir.stu3.proto.BooleanH\000\022,\n\004c"
      "ode\030\003 \001(\0132\034.google.fhir.stu3.proto.CodeH"
      "\000\022,\n\004date\030\004 \001(\0132\034.google.fhir.stu3.proto"
      ".DateH\000\0225\n\tdate_time\030\005 \001(\0132 .google.fhir"
      ".stu3.proto.DateTimeH\000\0222\n\007decimal\030\006 \001(\0132"
      "\037.google.fhir.stu3.proto.DecimalH\000\022(\n\002id"
      "\030\007 \001(\0132\032.google.fhir.stu3.proto.IdH\000\0222\n\007"
      "instant\030\010 \001(\0132\037.google.fhir.stu3.proto.I"
      "nstantH\000\0222\n\007integer\030\t \001(\0132\037.google.fhir."
      "stu3.proto.IntegerH\000\0224\n\010markdown\030\n \001(\0132 "
      ".google.fhir.stu3.proto.MarkdownH\000\022*\n\003oi"
      "d\030\013 \001(\0132\033.google.fhir.stu3.proto.OidH\000\022;"
      "\n\014positive_int\030\014 \001(\0132#.google.fhir.stu3."
      "proto.PositiveIntH\000\022>\n\014string_value\030\r \001("
      "\0132\036.google.fhir.stu3.proto.StringH\000R\006str"
      "ing\022,\n\004time\030\016 \001(\0132\034.google.fhir.stu3.pro"
      "to.TimeH\000\022;\n\014unsigned_int\030\017 \001(\0132#.google"
      ".fhir.stu3.proto.UnsignedIntH\000\022*\n\003uri\030\020 "
      "\001(\0132\033.google.fhir.stu3.proto.UriH\000\0222\n\007ad"
      "dress\030\021 \001(\0132\037.google.fhir.stu3.proto.Add"
      "ressH\000\022*\n\003age\030\022 \001(\0132\033.google.fhir.stu3.p"
      "roto.AgeH\000\0228\n\nannotation\030\023 \001(\0132\".google."
      "fhir.stu3.proto.AnnotationH\000\0228\n\nattachme"
      "nt\030\024 \001(\0132\".google.fhir.stu3.proto.Attach"
      "mentH\000\022C\n\020codeable_concept\030\025 \001(\0132\'.googl"
      "e.fhir.stu3.proto.CodeableConceptH\000\0220\n\006c"
      "oding\030\026 \001(\0132\036.google.fhir.stu3.proto.Cod"
      "ingH\000\022=\n\rcontact_point\030\027 \001(\0132$.google.fh"
      "ir.stu3.proto.ContactPointH\000\022.\n\005count\030\030 "
      "\001(\0132\035.google.fhir.stu3.proto.CountH\000\0224\n\010"
      "distance\030\031 \001(\0132 .google.fhir.stu3.proto."
      "DistanceH\000\0224\n\010duration\030\032 \001(\0132 .google.fh"
      "ir.stu3.proto.DurationH\000\0227\n\nhuman_name\030\033"
      " \001(\0132!.google.fhir.stu3.proto.HumanNameH"
      "\000\0228\n\nidentifier\030\034 \001(\0132\".google.fhir.stu3"
      ".proto.IdentifierH\000\022.\n\005money\030\035 \001(\0132\035.goo"
      "gle.fhir.stu3.proto.MoneyH\000\0220\n\006period\030\036 "
      "\001(\0132\036.google.fhir.stu3.proto.PeriodH\000\0224\n"
      "\010quantity\030\037 \001(\0132 .google.fhir.stu3.proto"
      ".QuantityH\000\022.\n\005range\030  \001(\0132\035.google.fhir"
      ".stu3.proto.RangeH\000\022.\n\005ratio\030! \001(\0132\035.goo"
      "gle.fhir.stu3.proto.RatioH\000\0226\n\treference"
      "\030\" \001(\0132!.google.fhir.stu3.proto.Referenc"
      "eH\000\022;\n\014sampled_data\030# \001(\0132#.google.fhir."
      "stu3.proto.SampledDataH\000\0226\n\tsignature\030$ "
      "\001(\0132!.google.fhir.stu3.proto.SignatureH\000"
      "\0220\n\006timing\030% \001(\0132\036.google.fhir.stu3.prot"
      "o.TimingH\000\022,\n\004meta\030& \001(\0132\034.google.fhir.s"
      "tu3.proto.MetaH\000B\007\n\005value\032\366\003\n\010MinValue\022,"
      "\n\004date\030\001 \001(\0132\034.google.fhir.stu3.proto.Da"
      "teH\000\0225\n\tdate_time\030\002 \001(\0132 .google.fhir.st"
      "u3.proto.DateTimeH\000\0222\n\007instant\030\003 \001(\0132\037.g"
      "oogle.fhir.stu3.proto.InstantH\000\022,\n\004time\030"
      "\004 \001(\0132\034.google.fhir.stu3.proto.TimeH\000\0222\n"
      "\007decimal\030\005 \001(\0132\037.google.fhir.stu3.proto."
      "DecimalH\000\0222\n\007integer\030\006 \001(\0132\037.google.fhir"
      ".stu3.proto.IntegerH\000\022;\n\014positive_int\030\007 "
      "\001(\0132#.google.fhir.stu3.proto.PositiveInt"
      "H\000\022;\n\014unsigned_int\030\010 \001(\0132#.google.fhir.s"
      "tu3.proto.UnsignedIntH\000\0224\n\010quantity\030\t \001("
      "\0132 .google.fhir.stu3.proto.QuantityH\000B\013\n"
      "\tmin_value\032\366\003\n\010MaxValue\022,\n\004date\030\001 \001(\0132\034."
      "google.fhir.stu3.proto.DateH\000\0225\n\tdate_ti"
      "me\030\002 \001(\0132 .google.fhir.stu3.proto.DateTi"
      "meH\000\0222\n\007instant\030\003 \001(\0132\037.google.fhir.stu3"
      ".proto.InstantH\000\022,\n\004time\030\004 \001(\0132\034.google."
      "fhir.stu3.proto.TimeH\000\0222\n\007decimal\030\005 \001(\0132"
      "\037.google.fhir.stu3.proto.DecimalH\000\0222\n\007in"
      "teger\030\006 \001(\0132\037.google.fhir.stu3.proto.Int"
      "egerH\000\022;\n\014positive_int\030\007 \001(\0132#.google.fh"
      "ir.stu3.proto.PositiveIntH\000\022;\n\014unsigned_"
      "int\030\010 \001(\0132#.google.fhir.stu3.proto.Unsig"
      "nedIntH\000\0224\n\010quantity\030\t \001(\0132 .google.fhir"
      ".stu3.proto.QuantityH\000B\013\n\tmax_value\032\356\003\n\n"
      "Constraint\022*\n\002id\030\001 \001(\0132\036.google.fhir.stu"
      "3.proto.String\0224\n\textension\030\002 \003(\0132!.goog"
      "le.fhir.stu3.proto.Extension\022/\n\003key\030\003 \001("
      "\0132\032.google.fhir.stu3.proto.IdB\006\360\320\207\353\004\001\0224\n"
      "\014requirements\030\004 \001(\0132\036.google.fhir.stu3.p"
      "roto.String\022H\n\010severity\030\005 \001(\0132..google.f"
      "hir.stu3.proto.ConstraintSeverityCodeB\006\360"
      "\320\207\353\004\001\0225\n\005human\030\006 \001(\0132\036.google.fhir.stu3."
      "proto.StringB\006\360\320\207\353\004\001\022:\n\nexpression\030\007 \001(\013"
      "2\036.google.fhir.stu3.proto.StringB\006\360\320\207\353\004\001"
      "\022-\n\005xpath\030\010 \001(\0132\036.google.fhir.stu3.proto"
      ".String\022+\n\006source\030\t \001(\0132\033.google.fhir.st"
      "u3.proto.Uri\032\226\004\n\030ElementDefinitionBindin"
      "g\022*\n\002id\030\001 \001(\0132\036.google.fhir.stu3.proto.S"
      "tring\0224\n\textension\030\002 \003(\0132!.google.fhir.s"
      "tu3.proto.Extension\022E\n\010strength\030\003 \001(\0132+."
      "google.fhir.stu3.proto.BindingStrengthCo"
      "deB\006\360\320\207\353\004\001\0223\n\013description\030\004 \001(\0132\036.google"
      ".fhir.stu3.proto.String\022f\n\tvalue_set\030\005 \001"
      "(\0132K.google.fhir.stu3.proto.ElementDefin"
      "ition.ElementDefinitionBinding.ValueSetB"
      "\006\370\341\343\311\005\001\032\263\001\n\010ValueSet\022*\n\003uri\030\001 \001(\0132\033.goog"
      "le.fhir.stu3.proto.UriH\000\022n\n\treference\030\002 "
      "\001(\0132!.google.fhir.stu3.proto.ReferenceB6"
      "\362\377\374\302\0060http://hl7.org/fhir/StructureDefin"
      "ition/ValueSetH\000B\013\n\tvalue_set\032\277\002\n\007Mappin"
      "g\022*\n\002id\030\001 \001(\0132\036.google.fhir.stu3.proto.S"
      "tring\0224\n\textension\030\002 \003(\0132!.google.fhir.s"
      "tu3.proto.Extension\0224\n\010identity\030\003 \001(\0132\032."
      "google.fhir.stu3.proto.IdB\006\360\320\207\353\004\001\0226\n\010lan"
      "guage\030\004 \001(\0132$.google.fhir.stu3.proto.Mim"
      "eTypeCode\0223\n\003map\030\005 \001(\0132\036.google.fhir.stu"
      "3.proto.StringB\006\360\320\207\353\004\001\022/\n\007comment\030\006 \001(\0132"
      "\036.google.fhir.stu3.proto.String:E\300\237\343\266\005\002\262"
      "\376\344\227\0069http://hl7.org/fhir/StructureDefini"
      "tion/ElementDefinition\"\245\002\n\tNarrative\022*\n\002"
      "id\030\001 \001(\0132\036.google.fhir.stu3.proto.String"
      "\0224\n\textension\030\002 \003(\0132!.google.fhir.stu3.p"
      "roto.Extension\022C\n\006status\030\003 \001(\0132+.google."
      "fhir.stu3.proto.NarrativeStatusCodeB\006\360\320\207"
      "\353\004\001\0222\n\003div\030\004 \001(\0132\035.google.fhir.stu3.prot"
      "o.XhtmlB\006\360\320\207\353\004\001:=\300\237\343\266\005\002\262\376\344\227\0061http://hl7."
      "org/fhir/StructureDefinition/Narrative\"\375"
      "\004\n\023ParameterDefinition\022*\n\002id\030\001 \001(\0132\036.goo"
      "gle.fhir.stu3.proto.String\0224\n\textension\030"
      "\002 \003(\0132!.google.fhir.stu3.proto.Extension"
      "\022*\n\004name\030\003 \001(\0132\034.google.fhir.stu3.proto."
      "Code\022F\n\003use\030\004 \001(\01321.google.fhir.stu3.pro"
      "to.OperationParameterUseCodeB\006\360\320\207\353\004\001\022,\n\003"
      "min\030\005 \001(\0132\037.google.fhir.stu3.proto.Integ"
      "er\022+\n\003max\030\006 \001(\0132\036.google.fhir.stu3.proto"
      ".String\0225\n\rdocumentation\030\007 \001(\0132\036.google."
      "fhir.stu3.proto.String\022>\n\004type\030\010 \001(\0132(.g"
      "oogle.fhir.stu3.proto.FHIRAllTypesCodeB\006"
      "\360\320\207\353\004\001\022u\n\007profile\030\t \001(\0132!.google.fhir.st"
      "u3.proto.ReferenceBA\362\377\374\302\006;http://hl7.org"
      "/fhir/StructureDefinition/StructureDefin"
      "ition:G\300\237\343\266\005\002\262\376\344\227\006;http://hl7.org/fhir/S"
      "tructureDefinition/ParameterDefinition\"\257"
      "\004\n\017RelatedArtifact\022*\n\002id\030\001 \001(\0132\036.google."
      "fhir.stu3.proto.String\0224\n\textension\030\002 \003("
      "\0132!.google.fhir.stu3.proto.Extension\022E\n\004"
      "type\030\003 \001(\0132/.google.fhir.stu3.proto.Rela"
      "tedArtifactTypeCodeB\006\360\320\207\353\004\001\022/\n\007display\030\004"
      " \001(\0132\036.google.fhir.stu3.proto.String\0220\n\010"
      "citation\030\005 \001(\0132\036.google.fhir.stu3.proto."
      "String\022(\n\003url\030\006 \001(\0132\033.google.fhir.stu3.p"
      "roto.Uri\0224\n\010document\030\007 \001(\0132\".google.fhir"
      ".stu3.proto.Attachment\022k\n\010resource\030\010 \001(\013"
      "2!.google.fhir.stu3.proto.ReferenceB6\362\377\374"
      "\302\0060http://hl7.org/fhir/StructureDefiniti"
      "on/Resource:C\300\237\343\266\005\002\262\376\344\227\0067http://hl7.org/"
      "fhir/StructureDefinition/RelatedArtifact"
      "\"\211\002\n\010Resource\022&\n\002id\030\001 \001(\0132\032.google.fhir."
      "stu3.proto.Id\022*\n\004meta\030\002 \001(\0132\034.google.fhi"
      "r.stu3.proto.Meta\0223\n\016implicit_rules\030\003 \001("
      "\0132\033.google.fhir.stu3.proto.Uri\0226\n\010langua"
      "ge\030\004 \001(\0132$.google.fhir.stu3.proto.Langua"
      "geCode:<\300\237\343\266\005\003\262\376\344\227\0060http://hl7.org/fhir/"
      "StructureDefinition/Resource\"\350\005\n\021Trigger"
      "Definition\022*\n\002id\030\001 \001(\0132\036.google.fhir.stu"
      "3.proto.String\0224\n\textension\030\002 \003(\0132!.goog"
      "le.fhir.stu3.proto.Extension\022=\n\004type\030\003 \001"
      "(\0132\'.google.fhir.stu3.proto.TriggerTypeC"
      "odeB\006\360\320\207\353\004\001\0222\n\nevent_name\030\004 \001(\0132\036.google"
      ".fhir.stu3.proto.String\022S\n\014event_timing\030"
      "\005 \001(\01325.google.fhir.stu3.proto.TriggerDe"
      "finition.EventTimingB\006\370\341\343\311\005\001\022;\n\nevent_da"
      "ta\030\006 \001(\0132\'.google.fhir.stu3.proto.DataRe"
      "quirement\032\244\002\n\013EventTiming\0220\n\006timing\030\001 \001("
      "\0132\036.google.fhir.stu3.proto.TimingH\000\022n\n\tr"
      "eference\030\002 \001(\0132!.google.fhir.stu3.proto."
      "ReferenceB6\362\377\374\302\0060http://hl7.org/fhir/Str"
      "uctureDefinition/ScheduleH\000\022,\n\004date\030\003 \001("
      "\0132\034.google.fhir.stu3.proto.DateH\000\0225\n\tdat"
      "e_time\030\004 \001(\0132 .google.fhir.stu3.proto.Da"
      "teTimeH\000B\016\n\014event_timing:E\300\237\343\266\005\002\262\376\344\227\0069ht"
      "tp://hl7.org/fhir/StructureDefinition/Tr"
      "iggerDefinition\"\357\003\n\014UsageContext\022*\n\002id\030\001"
      " \001(\0132\036.google.fhir.stu3.proto.String\0224\n\t"
      "extension\030\002 \003(\0132!.google.fhir.stu3.proto"
      ".Extension\0224\n\004code\030\003 \001(\0132\036.google.fhir.s"
      "tu3.proto.CodingB\006\360\320\207\353\004\001\022G\n\005value\030\004 \001(\0132"
      "*.google.fhir.stu3.proto.UsageContext.Va"
      "lueB\014\370\341\343\311\005\001\360\320\207\353\004\001\032\273\001\n\005Value\022C\n\020codeable_"
      "concept\030\001 \001(\0132\'.google.fhir.stu3.proto.C"
      "odeableConceptH\000\0224\n\010quantity\030\002 \001(\0132 .goo"
      "gle.fhir.stu3.proto.QuantityH\000\022.\n\005range\030"
      "\003 \001(\0132\035.google.fhir.stu3.proto.RangeH\000B\007"
      "\n\005value:@\300\237\343\266\005\002\262\376\344\227\0064http://hl7.org/fhir"
      "/StructureDefinition/UsageContextB\036\n\032com"
      ".google.fhir.stu3.protoP\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 19993);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/stu3/metadatatypes.proto", &protobuf_RegisterTypes);
  ::protobuf_proto_2fstu3_2fannotations_2eproto::AddDescriptors();
  ::protobuf_proto_2fstu3_2fcodes_2eproto::AddDescriptors();
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_proto_2fstu3_2fmetadatatypes_2eproto
namespace google {
namespace fhir {
namespace stu3 {
namespace proto {

// ===================================================================

void BackboneElement::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_BackboneElement_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
void BackboneElement::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void BackboneElement::clear_extension() {
  extension_.Clear();
}
void BackboneElement::clear_modifier_extension() {
  modifier_extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BackboneElement::kIdFieldNumber;
const int BackboneElement::kExtensionFieldNumber;
const int BackboneElement::kModifierExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BackboneElement::BackboneElement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_BackboneElement.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.BackboneElement)
}
BackboneElement::BackboneElement(const BackboneElement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.BackboneElement)
}

void BackboneElement::SharedCtor() {
  id_ = NULL;
}

BackboneElement::~BackboneElement() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.BackboneElement)
  SharedDtor();
}

void BackboneElement::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void BackboneElement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BackboneElement::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BackboneElement& BackboneElement::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_BackboneElement.base);
  return *internal_default_instance();
}


void BackboneElement::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.BackboneElement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  _internal_metadata_.Clear();
}

bool BackboneElement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.BackboneElement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.BackboneElement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.BackboneElement)
  return false;
#undef DO_
}

void BackboneElement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.BackboneElement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.BackboneElement)
}

::google::protobuf::uint8* BackboneElement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.BackboneElement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.BackboneElement)
  return target;
}

size_t BackboneElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.BackboneElement)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BackboneElement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.BackboneElement)
  GOOGLE_DCHECK_NE(&from, this);
  const BackboneElement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BackboneElement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.BackboneElement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.BackboneElement)
    MergeFrom(*source);
  }
}

void BackboneElement::MergeFrom(const BackboneElement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.BackboneElement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
}

void BackboneElement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.BackboneElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BackboneElement::CopyFrom(const BackboneElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.BackboneElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BackboneElement::IsInitialized() const {
  return true;
}

void BackboneElement::Swap(BackboneElement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BackboneElement::InternalSwap(BackboneElement* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BackboneElement::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ContactDetail::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_ContactDetail_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ContactDetail_default_instance_._instance.get_mutable()->name_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
void ContactDetail::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void ContactDetail::clear_extension() {
  extension_.Clear();
}
void ContactDetail::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void ContactDetail::clear_telecom() {
  telecom_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContactDetail::kIdFieldNumber;
const int ContactDetail::kExtensionFieldNumber;
const int ContactDetail::kNameFieldNumber;
const int ContactDetail::kTelecomFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContactDetail::ContactDetail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ContactDetail.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.ContactDetail)
}
ContactDetail::ContactDetail(const ContactDetail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      telecom_(from.telecom_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::google::fhir::stu3::proto::String(*from.name_);
  } else {
    name_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.ContactDetail)
}

void ContactDetail::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&name_) -
      reinterpret_cast<char*>(&id_)) + sizeof(name_));
}

ContactDetail::~ContactDetail() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.ContactDetail)
  SharedDtor();
}

void ContactDetail::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete name_;
}

void ContactDetail::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ContactDetail::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ContactDetail& ContactDetail::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ContactDetail.base);
  return *internal_default_instance();
}


void ContactDetail::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.ContactDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  telecom_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  _internal_metadata_.Clear();
}

bool ContactDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.ContactDetail)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ContactPoint telecom = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_telecom()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.ContactDetail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.ContactDetail)
  return false;
#undef DO_
}

void ContactDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.ContactDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.String name = 3;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_name(), output);
  }

  // repeated .google.fhir.stu3.proto.ContactPoint telecom = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->telecom_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->telecom(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.ContactDetail)
}

::google::protobuf::uint8* ContactDetail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.ContactDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.String name = 3;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_name(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ContactPoint telecom = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->telecom_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->telecom(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.ContactDetail)
  return target;
}

size_t ContactDetail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.ContactDetail)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.ContactPoint telecom = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->telecom_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->telecom(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.String name = 3;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *name_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ContactDetail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.ContactDetail)
  GOOGLE_DCHECK_NE(&from, this);
  const ContactDetail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContactDetail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.ContactDetail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.ContactDetail)
    MergeFrom(*source);
  }
}

void ContactDetail::MergeFrom(const ContactDetail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.ContactDetail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  telecom_.MergeFrom(from.telecom_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_name()) {
    mutable_name()->::google::fhir::stu3::proto::String::MergeFrom(from.name());
  }
}

void ContactDetail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.ContactDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContactDetail::CopyFrom(const ContactDetail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.ContactDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContactDetail::IsInitialized() const {
  return true;
}

void ContactDetail::Swap(ContactDetail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContactDetail::InternalSwap(ContactDetail* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&telecom_)->InternalSwap(CastToBase(&other->telecom_));
  swap(id_, other->id_);
  swap(name_, other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ContactDetail::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Contributor::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Contributor_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Contributor_default_instance_._instance.get_mutable()->type_ = const_cast< ::google::fhir::stu3::proto::ContributorTypeCode*>(
      ::google::fhir::stu3::proto::ContributorTypeCode::internal_default_instance());
  ::google::fhir::stu3::proto::_Contributor_default_instance_._instance.get_mutable()->name_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
void Contributor::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void Contributor::clear_extension() {
  extension_.Clear();
}
void Contributor::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
}
void Contributor::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Contributor::kIdFieldNumber;
const int Contributor::kExtensionFieldNumber;
const int Contributor::kTypeFieldNumber;
const int Contributor::kNameFieldNumber;
const int Contributor::kContactFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Contributor::Contributor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_Contributor.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Contributor)
}
Contributor::Contributor(const Contributor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      contact_(from.contact_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_type()) {
    type_ = new ::google::fhir::stu3::proto::ContributorTypeCode(*from.type_);
  } else {
    type_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::google::fhir::stu3::proto::String(*from.name_);
  } else {
    name_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Contributor)
}

void Contributor::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&name_) -
      reinterpret_cast<char*>(&id_)) + sizeof(name_));
}

Contributor::~Contributor() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Contributor)
  SharedDtor();
}

void Contributor::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete type_;
  if (this != internal_default_instance()) delete name_;
}

void Contributor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Contributor::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Contributor& Contributor::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_Contributor.base);
  return *internal_default_instance();
}


void Contributor::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Contributor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  contact_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  _internal_metadata_.Clear();
}

bool Contributor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Contributor)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ContributorTypeCode type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String name = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ContactDetail contact = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_contact()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Contributor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Contributor)
  return false;
#undef DO_
}

void Contributor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Contributor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.ContributorTypeCode type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_type(), output);
  }

  // .google.fhir.stu3.proto.String name = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_name(), output);
  }

  // repeated .google.fhir.stu3.proto.ContactDetail contact = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contact_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->contact(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Contributor)
}

::google::protobuf::uint8* Contributor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Contributor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.ContributorTypeCode type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_type(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String name = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_name(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ContactDetail contact = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contact_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->contact(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Contributor)
  return target;
}

size_t Contributor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Contributor)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.ContactDetail contact = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->contact_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->contact(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.ContributorTypeCode type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  // .google.fhir.stu3.proto.String name = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *name_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Contributor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Contributor)
  GOOGLE_DCHECK_NE(&from, this);
  const Contributor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Contributor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Contributor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Contributor)
    MergeFrom(*source);
  }
}

void Contributor::MergeFrom(const Contributor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Contributor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  contact_.MergeFrom(from.contact_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_type()) {
    mutable_type()->::google::fhir::stu3::proto::ContributorTypeCode::MergeFrom(from.type());
  }
  if (from.has_name()) {
    mutable_name()->::google::fhir::stu3::proto::String::MergeFrom(from.name());
  }
}

void Contributor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Contributor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Contributor::CopyFrom(const Contributor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Contributor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Contributor::IsInitialized() const {
  return true;
}

void Contributor::Swap(Contributor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Contributor::InternalSwap(Contributor* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&contact_)->InternalSwap(CastToBase(&other->contact_));
  swap(id_, other->id_);
  swap(type_, other->type_);
  swap(name_, other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Contributor::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataRequirement_CodeFilter_ValueSet::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_DataRequirement_CodeFilter_ValueSet_default_instance_.string_value_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_DataRequirement_CodeFilter_ValueSet_default_instance_.reference_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
}
void DataRequirement_CodeFilter_ValueSet::set_allocated_string_value(::google::fhir::stu3::proto::String* string_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value_set();
  if (string_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      string_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, string_value, submessage_arena);
    }
    set_has_string_value();
    value_set_.string_value_ = string_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet.string_value)
}
void DataRequirement_CodeFilter_ValueSet::clear_string_value() {
  if (has_string_value()) {
    delete value_set_.string_value_;
    clear_has_value_set();
  }
}
void DataRequirement_CodeFilter_ValueSet::set_allocated_reference(::google::fhir::stu3::proto::Reference* reference) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value_set();
  if (reference) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reference = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reference, submessage_arena);
    }
    set_has_reference();
    value_set_.reference_ = reference;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet.reference)
}
void DataRequirement_CodeFilter_ValueSet::clear_reference() {
  if (has_reference()) {
    delete value_set_.reference_;
    clear_has_value_set();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataRequirement_CodeFilter_ValueSet::kStringValueFieldNumber;
const int DataRequirement_CodeFilter_ValueSet::kReferenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataRequirement_CodeFilter_ValueSet::DataRequirement_CodeFilter_ValueSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_DataRequirement_CodeFilter_ValueSet.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet)
}
DataRequirement_CodeFilter_ValueSet::DataRequirement_CodeFilter_ValueSet(const DataRequirement_CodeFilter_ValueSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_value_set();
  switch (from.value_set_case()) {
    case kStringValue: {
      mutable_string_value()->::google::fhir::stu3::proto::String::MergeFrom(from.string_value());
      break;
    }
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case VALUE_SET_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet)
}

void DataRequirement_CodeFilter_ValueSet::SharedCtor() {
  clear_has_value_set();
}

DataRequirement_CodeFilter_ValueSet::~DataRequirement_CodeFilter_ValueSet() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet)
  SharedDtor();
}

void DataRequirement_CodeFilter_ValueSet::SharedDtor() {
  if (has_value_set()) {
    clear_value_set();
  }
}

void DataRequirement_CodeFilter_ValueSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataRequirement_CodeFilter_ValueSet::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataRequirement_CodeFilter_ValueSet& DataRequirement_CodeFilter_ValueSet::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_DataRequirement_CodeFilter_ValueSet.base);
  return *internal_default_instance();
}


void DataRequirement_CodeFilter_ValueSet::clear_value_set() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet)
  switch (value_set_case()) {
    case kStringValue: {
      delete value_set_.string_value_;
      break;
    }
    case kReference: {
      delete value_set_.reference_;
      break;
    }
    case VALUE_SET_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_SET_NOT_SET;
}


void DataRequirement_CodeFilter_ValueSet::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value_set();
  _internal_metadata_.Clear();
}

bool DataRequirement_CodeFilter_ValueSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String string_value = 1[json_name = "string"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_string_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ValueSet"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet)
  return false;
#undef DO_
}

void DataRequirement_CodeFilter_ValueSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String string_value = 1[json_name = "string"];
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_string_value(), output);
  }

  // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ValueSet"];
  if (has_reference()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_reference(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet)
}

::google::protobuf::uint8* DataRequirement_CodeFilter_ValueSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String string_value = 1[json_name = "string"];
  if (has_string_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_string_value(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ValueSet"];
  if (has_reference()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_reference(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet)
  return target;
}

size_t DataRequirement_CodeFilter_ValueSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (value_set_case()) {
    // .google.fhir.stu3.proto.String string_value = 1[json_name = "string"];
    case kStringValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_set_.string_value_);
      break;
    }
    // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ValueSet"];
    case kReference: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_set_.reference_);
      break;
    }
    case VALUE_SET_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataRequirement_CodeFilter_ValueSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet)
  GOOGLE_DCHECK_NE(&from, this);
  const DataRequirement_CodeFilter_ValueSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataRequirement_CodeFilter_ValueSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet)
    MergeFrom(*source);
  }
}

void DataRequirement_CodeFilter_ValueSet::MergeFrom(const DataRequirement_CodeFilter_ValueSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_set_case()) {
    case kStringValue: {
      mutable_string_value()->::google::fhir::stu3::proto::String::MergeFrom(from.string_value());
      break;
    }
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case VALUE_SET_NOT_SET: {
      break;
    }
  }
}

void DataRequirement_CodeFilter_ValueSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataRequirement_CodeFilter_ValueSet::CopyFrom(const DataRequirement_CodeFilter_ValueSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataRequirement_CodeFilter_ValueSet::IsInitialized() const {
  return true;
}

void DataRequirement_CodeFilter_ValueSet::Swap(DataRequirement_CodeFilter_ValueSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataRequirement_CodeFilter_ValueSet::InternalSwap(DataRequirement_CodeFilter_ValueSet* other) {
  using std::swap;
  swap(value_set_, other->value_set_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataRequirement_CodeFilter_ValueSet::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataRequirement_CodeFilter::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_DataRequirement_CodeFilter_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_DataRequirement_CodeFilter_default_instance_._instance.get_mutable()->path_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_DataRequirement_CodeFilter_default_instance_._instance.get_mutable()->value_set_ = const_cast< ::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSet*>(
      ::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSet::internal_default_instance());
}
void DataRequirement_CodeFilter::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void DataRequirement_CodeFilter::clear_extension() {
  extension_.Clear();
}
void DataRequirement_CodeFilter::clear_path() {
  if (GetArenaNoVirtual() == NULL && path_ != NULL) {
    delete path_;
  }
  path_ = NULL;
}
void DataRequirement_CodeFilter::clear_value_code() {
  value_code_.Clear();
}
void DataRequirement_CodeFilter::clear_value_coding() {
  value_coding_.Clear();
}
void DataRequirement_CodeFilter::clear_value_codeable_concept() {
  value_codeable_concept_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataRequirement_CodeFilter::kIdFieldNumber;
const int DataRequirement_CodeFilter::kExtensionFieldNumber;
const int DataRequirement_CodeFilter::kPathFieldNumber;
const int DataRequirement_CodeFilter::kValueSetFieldNumber;
const int DataRequirement_CodeFilter::kValueCodeFieldNumber;
const int DataRequirement_CodeFilter::kValueCodingFieldNumber;
const int DataRequirement_CodeFilter::kValueCodeableConceptFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataRequirement_CodeFilter::DataRequirement_CodeFilter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_DataRequirement_CodeFilter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.DataRequirement.CodeFilter)
}
DataRequirement_CodeFilter::DataRequirement_CodeFilter(const DataRequirement_CodeFilter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      value_code_(from.value_code_),
      value_coding_(from.value_coding_),
      value_codeable_concept_(from.value_codeable_concept_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_path()) {
    path_ = new ::google::fhir::stu3::proto::String(*from.path_);
  } else {
    path_ = NULL;
  }
  if (from.has_value_set()) {
    value_set_ = new ::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSet(*from.value_set_);
  } else {
    value_set_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.DataRequirement.CodeFilter)
}

void DataRequirement_CodeFilter::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_set_) -
      reinterpret_cast<char*>(&id_)) + sizeof(value_set_));
}

DataRequirement_CodeFilter::~DataRequirement_CodeFilter() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.DataRequirement.CodeFilter)
  SharedDtor();
}

void DataRequirement_CodeFilter::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete path_;
  if (this != internal_default_instance()) delete value_set_;
}

void DataRequirement_CodeFilter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataRequirement_CodeFilter::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataRequirement_CodeFilter& DataRequirement_CodeFilter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_DataRequirement_CodeFilter.base);
  return *internal_default_instance();
}


void DataRequirement_CodeFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.DataRequirement.CodeFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  value_code_.Clear();
  value_coding_.Clear();
  value_codeable_concept_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && path_ != NULL) {
    delete path_;
  }
  path_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_set_ != NULL) {
    delete value_set_;
  }
  value_set_ = NULL;
  _internal_metadata_.Clear();
}

bool DataRequirement_CodeFilter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.DataRequirement.CodeFilter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String path = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet value_set = 4 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_set()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Code value_code = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_value_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Coding value_coding = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_value_coding()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept value_codeable_concept = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_value_codeable_concept()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.DataRequirement.CodeFilter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.DataRequirement.CodeFilter)
  return false;
#undef DO_
}

void DataRequirement_CodeFilter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.DataRequirement.CodeFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.String path = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_path()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_path(), output);
  }

  // .google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet value_set = 4 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_value_set()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_value_set(), output);
  }

  // repeated .google.fhir.stu3.proto.Code value_code = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->value_code_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->value_code(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Coding value_coding = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->value_coding_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->value_coding(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept value_codeable_concept = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->value_codeable_concept_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->value_codeable_concept(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.DataRequirement.CodeFilter)
}

::google::protobuf::uint8* DataRequirement_CodeFilter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.DataRequirement.CodeFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.String path = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_path()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_path(), deterministic, target);
  }

  // .google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet value_set = 4 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_value_set()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_value_set(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Code value_code = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->value_code_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->value_code(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Coding value_coding = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->value_coding_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->value_coding(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept value_codeable_concept = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->value_codeable_concept_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->value_codeable_concept(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.DataRequirement.CodeFilter)
  return target;
}

size_t DataRequirement_CodeFilter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.DataRequirement.CodeFilter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Code value_code = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->value_code_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->value_code(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Coding value_coding = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->value_coding_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->value_coding(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept value_codeable_concept = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->value_codeable_concept_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->value_codeable_concept(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.String path = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *path_);
  }

  // .google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet value_set = 4 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_value_set()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_set_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataRequirement_CodeFilter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.DataRequirement.CodeFilter)
  GOOGLE_DCHECK_NE(&from, this);
  const DataRequirement_CodeFilter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataRequirement_CodeFilter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.DataRequirement.CodeFilter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.DataRequirement.CodeFilter)
    MergeFrom(*source);
  }
}

void DataRequirement_CodeFilter::MergeFrom(const DataRequirement_CodeFilter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.DataRequirement.CodeFilter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  value_code_.MergeFrom(from.value_code_);
  value_coding_.MergeFrom(from.value_coding_);
  value_codeable_concept_.MergeFrom(from.value_codeable_concept_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_path()) {
    mutable_path()->::google::fhir::stu3::proto::String::MergeFrom(from.path());
  }
  if (from.has_value_set()) {
    mutable_value_set()->::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSet::MergeFrom(from.value_set());
  }
}

void DataRequirement_CodeFilter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.DataRequirement.CodeFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataRequirement_CodeFilter::CopyFrom(const DataRequirement_CodeFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.DataRequirement.CodeFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataRequirement_CodeFilter::IsInitialized() const {
  return true;
}

void DataRequirement_CodeFilter::Swap(DataRequirement_CodeFilter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataRequirement_CodeFilter::InternalSwap(DataRequirement_CodeFilter* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&value_code_)->InternalSwap(CastToBase(&other->value_code_));
  CastToBase(&value_coding_)->InternalSwap(CastToBase(&other->value_coding_));
  CastToBase(&value_codeable_concept_)->InternalSwap(CastToBase(&other->value_codeable_concept_));
  swap(id_, other->id_);
  swap(path_, other->path_);
  swap(value_set_, other->value_set_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataRequirement_CodeFilter::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataRequirement_DateFilter_Value::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_DataRequirement_DateFilter_Value_default_instance_.date_time_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::proto::_DataRequirement_DateFilter_Value_default_instance_.period_ = const_cast< ::google::fhir::stu3::proto::Period*>(
      ::google::fhir::stu3::proto::Period::internal_default_instance());
  ::google::fhir::stu3::proto::_DataRequirement_DateFilter_Value_default_instance_.duration_ = const_cast< ::google::fhir::stu3::proto::Duration*>(
      ::google::fhir::stu3::proto::Duration::internal_default_instance());
}
void DataRequirement_DateFilter_Value::set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (date_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date_time, submessage_arena);
    }
    set_has_date_time();
    value_.date_time_ = date_time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DataRequirement.DateFilter.Value.date_time)
}
void DataRequirement_DateFilter_Value::clear_date_time() {
  if (has_date_time()) {
    delete value_.date_time_;
    clear_has_value();
  }
}
void DataRequirement_DateFilter_Value::set_allocated_period(::google::fhir::stu3::proto::Period* period) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (period) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      period = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, period, submessage_arena);
    }
    set_has_period();
    value_.period_ = period;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DataRequirement.DateFilter.Value.period)
}
void DataRequirement_DateFilter_Value::clear_period() {
  if (has_period()) {
    delete value_.period_;
    clear_has_value();
  }
}
void DataRequirement_DateFilter_Value::set_allocated_duration(::google::fhir::stu3::proto::Duration* duration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (duration) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      duration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, duration, submessage_arena);
    }
    set_has_duration();
    value_.duration_ = duration;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DataRequirement.DateFilter.Value.duration)
}
void DataRequirement_DateFilter_Value::clear_duration() {
  if (has_duration()) {
    delete value_.duration_;
    clear_has_value();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataRequirement_DateFilter_Value::kDateTimeFieldNumber;
const int DataRequirement_DateFilter_Value::kPeriodFieldNumber;
const int DataRequirement_DateFilter_Value::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataRequirement_DateFilter_Value::DataRequirement_DateFilter_Value()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_DataRequirement_DateFilter_Value.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.DataRequirement.DateFilter.Value)
}
DataRequirement_DateFilter_Value::DataRequirement_DateFilter_Value(const DataRequirement_DateFilter_Value& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case kDuration: {
      mutable_duration()->::google::fhir::stu3::proto::Duration::MergeFrom(from.duration());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.DataRequirement.DateFilter.Value)
}

void DataRequirement_DateFilter_Value::SharedCtor() {
  clear_has_value();
}

DataRequirement_DateFilter_Value::~DataRequirement_DateFilter_Value() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.DataRequirement.DateFilter.Value)
  SharedDtor();
}

void DataRequirement_DateFilter_Value::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
}

void DataRequirement_DateFilter_Value::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataRequirement_DateFilter_Value::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataRequirement_DateFilter_Value& DataRequirement_DateFilter_Value::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_DataRequirement_DateFilter_Value.base);
  return *internal_default_instance();
}


void DataRequirement_DateFilter_Value::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.proto.DataRequirement.DateFilter.Value)
  switch (value_case()) {
    case kDateTime: {
      delete value_.date_time_;
      break;
    }
    case kPeriod: {
      delete value_.period_;
      break;
    }
    case kDuration: {
      delete value_.duration_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void DataRequirement_DateFilter_Value::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.DataRequirement.DateFilter.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear();
}

bool DataRequirement_DateFilter_Value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.DataRequirement.DateFilter.Value)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.DateTime date_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Period period = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Duration duration = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.DataRequirement.DateFilter.Value)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.DataRequirement.DateFilter.Value)
  return false;
#undef DO_
}

void DataRequirement_DateFilter_Value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.DataRequirement.DateFilter.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.DateTime date_time = 1;
  if (has_date_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_date_time(), output);
  }

  // .google.fhir.stu3.proto.Period period = 2;
  if (has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_period(), output);
  }

  // .google.fhir.stu3.proto.Duration duration = 3;
  if (has_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_duration(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.DataRequirement.DateFilter.Value)
}

::google::protobuf::uint8* DataRequirement_DateFilter_Value::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.DataRequirement.DateFilter.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.DateTime date_time = 1;
  if (has_date_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_date_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Period period = 2;
  if (has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_period(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Duration duration = 3;
  if (has_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_duration(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.DataRequirement.DateFilter.Value)
  return target;
}

size_t DataRequirement_DateFilter_Value::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.DataRequirement.DateFilter.Value)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (value_case()) {
    // .google.fhir.stu3.proto.DateTime date_time = 1;
    case kDateTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.date_time_);
      break;
    }
    // .google.fhir.stu3.proto.Period period = 2;
    case kPeriod: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.period_);
      break;
    }
    // .google.fhir.stu3.proto.Duration duration = 3;
    case kDuration: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.duration_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataRequirement_DateFilter_Value::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.DataRequirement.DateFilter.Value)
  GOOGLE_DCHECK_NE(&from, this);
  const DataRequirement_DateFilter_Value* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataRequirement_DateFilter_Value>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.DataRequirement.DateFilter.Value)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.DataRequirement.DateFilter.Value)
    MergeFrom(*source);
  }
}

void DataRequirement_DateFilter_Value::MergeFrom(const DataRequirement_DateFilter_Value& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.DataRequirement.DateFilter.Value)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case kDuration: {
      mutable_duration()->::google::fhir::stu3::proto::Duration::MergeFrom(from.duration());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void DataRequirement_DateFilter_Value::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.DataRequirement.DateFilter.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataRequirement_DateFilter_Value::CopyFrom(const DataRequirement_DateFilter_Value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.DataRequirement.DateFilter.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataRequirement_DateFilter_Value::IsInitialized() const {
  return true;
}

void DataRequirement_DateFilter_Value::Swap(DataRequirement_DateFilter_Value* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataRequirement_DateFilter_Value::InternalSwap(DataRequirement_DateFilter_Value* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataRequirement_DateFilter_Value::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataRequirement_DateFilter::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_DataRequirement_DateFilter_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_DataRequirement_DateFilter_default_instance_._instance.get_mutable()->path_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_DataRequirement_DateFilter_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::fhir::stu3::proto::DataRequirement_DateFilter_Value*>(
      ::google::fhir::stu3::proto::DataRequirement_DateFilter_Value::internal_default_instance());
}
void DataRequirement_DateFilter::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void DataRequirement_DateFilter::clear_extension() {
  extension_.Clear();
}
void DataRequirement_DateFilter::clear_path() {
  if (GetArenaNoVirtual() == NULL && path_ != NULL) {
    delete path_;
  }
  path_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataRequirement_DateFilter::kIdFieldNumber;
const int DataRequirement_DateFilter::kExtensionFieldNumber;
const int DataRequirement_DateFilter::kPathFieldNumber;
const int DataRequirement_DateFilter::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataRequirement_DateFilter::DataRequirement_DateFilter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_DataRequirement_DateFilter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.DataRequirement.DateFilter)
}
DataRequirement_DateFilter::DataRequirement_DateFilter(const DataRequirement_DateFilter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_path()) {
    path_ = new ::google::fhir::stu3::proto::String(*from.path_);
  } else {
    path_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::google::fhir::stu3::proto::DataRequirement_DateFilter_Value(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.DataRequirement.DateFilter)
}

void DataRequirement_DateFilter::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&id_)) + sizeof(value_));
}

DataRequirement_DateFilter::~DataRequirement_DateFilter() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.DataRequirement.DateFilter)
  SharedDtor();
}

void DataRequirement_DateFilter::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete path_;
  if (this != internal_default_instance()) delete value_;
}

void DataRequirement_DateFilter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataRequirement_DateFilter::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataRequirement_DateFilter& DataRequirement_DateFilter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_DataRequirement_DateFilter.base);
  return *internal_default_instance();
}


void DataRequirement_DateFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.DataRequirement.DateFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && path_ != NULL) {
    delete path_;
  }
  path_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  _internal_metadata_.Clear();
}

bool DataRequirement_DateFilter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.DataRequirement.DateFilter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String path = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DataRequirement.DateFilter.Value value = 4 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.DataRequirement.DateFilter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.DataRequirement.DateFilter)
  return false;
#undef DO_
}

void DataRequirement_DateFilter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.DataRequirement.DateFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.String path = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_path()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_path(), output);
  }

  // .google.fhir.stu3.proto.DataRequirement.DateFilter.Value value = 4 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.DataRequirement.DateFilter)
}

::google::protobuf::uint8* DataRequirement_DateFilter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.DataRequirement.DateFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.String path = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_path()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_path(), deterministic, target);
  }

  // .google.fhir.stu3.proto.DataRequirement.DateFilter.Value value = 4 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_value(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.DataRequirement.DateFilter)
  return target;
}

size_t DataRequirement_DateFilter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.DataRequirement.DateFilter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.String path = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *path_);
  }

  // .google.fhir.stu3.proto.DataRequirement.DateFilter.Value value = 4 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataRequirement_DateFilter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.DataRequirement.DateFilter)
  GOOGLE_DCHECK_NE(&from, this);
  const DataRequirement_DateFilter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataRequirement_DateFilter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.DataRequirement.DateFilter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.DataRequirement.DateFilter)
    MergeFrom(*source);
  }
}

void DataRequirement_DateFilter::MergeFrom(const DataRequirement_DateFilter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.DataRequirement.DateFilter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_path()) {
    mutable_path()->::google::fhir::stu3::proto::String::MergeFrom(from.path());
  }
  if (from.has_value()) {
    mutable_value()->::google::fhir::stu3::proto::DataRequirement_DateFilter_Value::MergeFrom(from.value());
  }
}

void DataRequirement_DateFilter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.DataRequirement.DateFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataRequirement_DateFilter::CopyFrom(const DataRequirement_DateFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.DataRequirement.DateFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataRequirement_DateFilter::IsInitialized() const {
  return true;
}

void DataRequirement_DateFilter::Swap(DataRequirement_DateFilter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataRequirement_DateFilter::InternalSwap(DataRequirement_DateFilter* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(path_, other->path_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataRequirement_DateFilter::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataRequirement::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_DataRequirement_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_DataRequirement_default_instance_._instance.get_mutable()->type_ = const_cast< ::google::fhir::stu3::proto::FHIRAllTypesCode*>(
      ::google::fhir::stu3::proto::FHIRAllTypesCode::internal_default_instance());
}
void DataRequirement::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void DataRequirement::clear_extension() {
  extension_.Clear();
}
void DataRequirement::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
}
void DataRequirement::clear_profile() {
  profile_.Clear();
}
void DataRequirement::clear_must_support() {
  must_support_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataRequirement::kIdFieldNumber;
const int DataRequirement::kExtensionFieldNumber;
const int DataRequirement::kTypeFieldNumber;
const int DataRequirement::kProfileFieldNumber;
const int DataRequirement::kMustSupportFieldNumber;
const int DataRequirement::kCodeFilterFieldNumber;
const int DataRequirement::kDateFilterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataRequirement::DataRequirement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_DataRequirement.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.DataRequirement)
}
DataRequirement::DataRequirement(const DataRequirement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      profile_(from.profile_),
      must_support_(from.must_support_),
      code_filter_(from.code_filter_),
      date_filter_(from.date_filter_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_type()) {
    type_ = new ::google::fhir::stu3::proto::FHIRAllTypesCode(*from.type_);
  } else {
    type_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.DataRequirement)
}

void DataRequirement::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
}

DataRequirement::~DataRequirement() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.DataRequirement)
  SharedDtor();
}

void DataRequirement::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete type_;
}

void DataRequirement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataRequirement::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataRequirement& DataRequirement::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_DataRequirement.base);
  return *internal_default_instance();
}


void DataRequirement::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.DataRequirement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  profile_.Clear();
  must_support_.Clear();
  code_filter_.Clear();
  date_filter_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  _internal_metadata_.Clear();
}

bool DataRequirement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.DataRequirement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.FHIRAllTypesCode type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Uri profile = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_profile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.String must_support = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_must_support()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.DataRequirement.CodeFilter code_filter = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_code_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.DataRequirement.DateFilter date_filter = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_date_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.DataRequirement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.DataRequirement)
  return false;
#undef DO_
}

void DataRequirement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.DataRequirement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.FHIRAllTypesCode type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_type(), output);
  }

  // repeated .google.fhir.stu3.proto.Uri profile = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->profile_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->profile(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.String must_support = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->must_support_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->must_support(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.DataRequirement.CodeFilter code_filter = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->code_filter_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->code_filter(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.DataRequirement.DateFilter date_filter = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->date_filter_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->date_filter(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.DataRequirement)
}

::google::protobuf::uint8* DataRequirement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.DataRequirement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.FHIRAllTypesCode type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_type(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Uri profile = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->profile_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->profile(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.String must_support = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->must_support_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->must_support(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.DataRequirement.CodeFilter code_filter = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->code_filter_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->code_filter(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.DataRequirement.DateFilter date_filter = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->date_filter_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->date_filter(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.DataRequirement)
  return target;
}

size_t DataRequirement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.DataRequirement)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Uri profile = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->profile_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->profile(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.String must_support = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->must_support_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->must_support(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.DataRequirement.CodeFilter code_filter = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->code_filter_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->code_filter(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.DataRequirement.DateFilter date_filter = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->date_filter_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->date_filter(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.FHIRAllTypesCode type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataRequirement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.DataRequirement)
  GOOGLE_DCHECK_NE(&from, this);
  const DataRequirement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataRequirement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.DataRequirement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.DataRequirement)
    MergeFrom(*source);
  }
}

void DataRequirement::MergeFrom(const DataRequirement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.DataRequirement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  profile_.MergeFrom(from.profile_);
  must_support_.MergeFrom(from.must_support_);
  code_filter_.MergeFrom(from.code_filter_);
  date_filter_.MergeFrom(from.date_filter_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_type()) {
    mutable_type()->::google::fhir::stu3::proto::FHIRAllTypesCode::MergeFrom(from.type());
  }
}

void DataRequirement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.DataRequirement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataRequirement::CopyFrom(const DataRequirement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.DataRequirement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataRequirement::IsInitialized() const {
  return true;
}

void DataRequirement::Swap(DataRequirement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataRequirement::InternalSwap(DataRequirement* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&profile_)->InternalSwap(CastToBase(&other->profile_));
  CastToBase(&must_support_)->InternalSwap(CastToBase(&other->must_support_));
  CastToBase(&code_filter_)->InternalSwap(CastToBase(&other->code_filter_));
  CastToBase(&date_filter_)->InternalSwap(CastToBase(&other->date_filter_));
  swap(id_, other->id_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataRequirement::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Element::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Element_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
void Element::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void Element::clear_extension() {
  extension_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Element::kIdFieldNumber;
const int Element::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Element::Element()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_Element.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Element)
}
Element::Element(const Element& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Element)
}

void Element::SharedCtor() {
  id_ = NULL;
}

Element::~Element() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Element)
  SharedDtor();
}

void Element::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void Element::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Element::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Element& Element::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_Element.base);
  return *internal_default_instance();
}


void Element::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Element)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  _internal_metadata_.Clear();
}

bool Element::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Element)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Element)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Element)
  return false;
#undef DO_
}

void Element::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Element)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Element)
}

::google::protobuf::uint8* Element::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Element)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Element)
  return target;
}

size_t Element::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Element)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Element::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Element)
  GOOGLE_DCHECK_NE(&from, this);
  const Element* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Element>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Element)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Element)
    MergeFrom(*source);
  }
}

void Element::MergeFrom(const Element& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Element)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
}

void Element::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Element)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Element::CopyFrom(const Element& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Element)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Element::IsInitialized() const {
  return true;
}

void Element::Swap(Element* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Element::InternalSwap(Element* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Element::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ElementDefinition_Slicing_Discriminator::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_ElementDefinition_Slicing_Discriminator_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Slicing_Discriminator_default_instance_._instance.get_mutable()->type_ = const_cast< ::google::fhir::stu3::proto::DiscriminatorTypeCode*>(
      ::google::fhir::stu3::proto::DiscriminatorTypeCode::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Slicing_Discriminator_default_instance_._instance.get_mutable()->path_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
void ElementDefinition_Slicing_Discriminator::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void ElementDefinition_Slicing_Discriminator::clear_extension() {
  extension_.Clear();
}
void ElementDefinition_Slicing_Discriminator::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
}
void ElementDefinition_Slicing_Discriminator::clear_path() {
  if (GetArenaNoVirtual() == NULL && path_ != NULL) {
    delete path_;
  }
  path_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ElementDefinition_Slicing_Discriminator::kIdFieldNumber;
const int ElementDefinition_Slicing_Discriminator::kExtensionFieldNumber;
const int ElementDefinition_Slicing_Discriminator::kTypeFieldNumber;
const int ElementDefinition_Slicing_Discriminator::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ElementDefinition_Slicing_Discriminator::ElementDefinition_Slicing_Discriminator()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_Slicing_Discriminator.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator)
}
ElementDefinition_Slicing_Discriminator::ElementDefinition_Slicing_Discriminator(const ElementDefinition_Slicing_Discriminator& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_type()) {
    type_ = new ::google::fhir::stu3::proto::DiscriminatorTypeCode(*from.type_);
  } else {
    type_ = NULL;
  }
  if (from.has_path()) {
    path_ = new ::google::fhir::stu3::proto::String(*from.path_);
  } else {
    path_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator)
}

void ElementDefinition_Slicing_Discriminator::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&path_) -
      reinterpret_cast<char*>(&id_)) + sizeof(path_));
}

ElementDefinition_Slicing_Discriminator::~ElementDefinition_Slicing_Discriminator() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator)
  SharedDtor();
}

void ElementDefinition_Slicing_Discriminator::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete type_;
  if (this != internal_default_instance()) delete path_;
}

void ElementDefinition_Slicing_Discriminator::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ElementDefinition_Slicing_Discriminator::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ElementDefinition_Slicing_Discriminator& ElementDefinition_Slicing_Discriminator::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_Slicing_Discriminator.base);
  return *internal_default_instance();
}


void ElementDefinition_Slicing_Discriminator::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  if (GetArenaNoVirtual() == NULL && path_ != NULL) {
    delete path_;
  }
  path_ = NULL;
  _internal_metadata_.Clear();
}

bool ElementDefinition_Slicing_Discriminator::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DiscriminatorTypeCode type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String path = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator)
  return false;
#undef DO_
}

void ElementDefinition_Slicing_Discriminator::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.DiscriminatorTypeCode type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_type(), output);
  }

  // .google.fhir.stu3.proto.String path = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_path()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_path(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator)
}

::google::protobuf::uint8* ElementDefinition_Slicing_Discriminator::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.DiscriminatorTypeCode type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_type(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String path = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_path()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_path(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator)
  return target;
}

size_t ElementDefinition_Slicing_Discriminator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.DiscriminatorTypeCode type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  // .google.fhir.stu3.proto.String path = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *path_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ElementDefinition_Slicing_Discriminator::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator)
  GOOGLE_DCHECK_NE(&from, this);
  const ElementDefinition_Slicing_Discriminator* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ElementDefinition_Slicing_Discriminator>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator)
    MergeFrom(*source);
  }
}

void ElementDefinition_Slicing_Discriminator::MergeFrom(const ElementDefinition_Slicing_Discriminator& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_type()) {
    mutable_type()->::google::fhir::stu3::proto::DiscriminatorTypeCode::MergeFrom(from.type());
  }
  if (from.has_path()) {
    mutable_path()->::google::fhir::stu3::proto::String::MergeFrom(from.path());
  }
}

void ElementDefinition_Slicing_Discriminator::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ElementDefinition_Slicing_Discriminator::CopyFrom(const ElementDefinition_Slicing_Discriminator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ElementDefinition_Slicing_Discriminator::IsInitialized() const {
  return true;
}

void ElementDefinition_Slicing_Discriminator::Swap(ElementDefinition_Slicing_Discriminator* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ElementDefinition_Slicing_Discriminator::InternalSwap(ElementDefinition_Slicing_Discriminator* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(type_, other->type_);
  swap(path_, other->path_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ElementDefinition_Slicing_Discriminator::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ElementDefinition_Slicing::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_ElementDefinition_Slicing_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Slicing_default_instance_._instance.get_mutable()->description_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Slicing_default_instance_._instance.get_mutable()->ordered_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Slicing_default_instance_._instance.get_mutable()->rules_ = const_cast< ::google::fhir::stu3::proto::SlicingRulesCode*>(
      ::google::fhir::stu3::proto::SlicingRulesCode::internal_default_instance());
}
void ElementDefinition_Slicing::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void ElementDefinition_Slicing::clear_extension() {
  extension_.Clear();
}
void ElementDefinition_Slicing::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
}
void ElementDefinition_Slicing::clear_ordered() {
  if (GetArenaNoVirtual() == NULL && ordered_ != NULL) {
    delete ordered_;
  }
  ordered_ = NULL;
}
void ElementDefinition_Slicing::clear_rules() {
  if (GetArenaNoVirtual() == NULL && rules_ != NULL) {
    delete rules_;
  }
  rules_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ElementDefinition_Slicing::kIdFieldNumber;
const int ElementDefinition_Slicing::kExtensionFieldNumber;
const int ElementDefinition_Slicing::kDiscriminatorFieldNumber;
const int ElementDefinition_Slicing::kDescriptionFieldNumber;
const int ElementDefinition_Slicing::kOrderedFieldNumber;
const int ElementDefinition_Slicing::kRulesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ElementDefinition_Slicing::ElementDefinition_Slicing()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_Slicing.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.ElementDefinition.Slicing)
}
ElementDefinition_Slicing::ElementDefinition_Slicing(const ElementDefinition_Slicing& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      discriminator_(from.discriminator_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_description()) {
    description_ = new ::google::fhir::stu3::proto::String(*from.description_);
  } else {
    description_ = NULL;
  }
  if (from.has_ordered()) {
    ordered_ = new ::google::fhir::stu3::proto::Boolean(*from.ordered_);
  } else {
    ordered_ = NULL;
  }
  if (from.has_rules()) {
    rules_ = new ::google::fhir::stu3::proto::SlicingRulesCode(*from.rules_);
  } else {
    rules_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.ElementDefinition.Slicing)
}

void ElementDefinition_Slicing::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rules_) -
      reinterpret_cast<char*>(&id_)) + sizeof(rules_));
}

ElementDefinition_Slicing::~ElementDefinition_Slicing() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.ElementDefinition.Slicing)
  SharedDtor();
}

void ElementDefinition_Slicing::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete description_;
  if (this != internal_default_instance()) delete ordered_;
  if (this != internal_default_instance()) delete rules_;
}

void ElementDefinition_Slicing::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ElementDefinition_Slicing::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ElementDefinition_Slicing& ElementDefinition_Slicing::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_Slicing.base);
  return *internal_default_instance();
}


void ElementDefinition_Slicing::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.ElementDefinition.Slicing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  discriminator_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
  if (GetArenaNoVirtual() == NULL && ordered_ != NULL) {
    delete ordered_;
  }
  ordered_ = NULL;
  if (GetArenaNoVirtual() == NULL && rules_ != NULL) {
    delete rules_;
  }
  rules_ = NULL;
  _internal_metadata_.Clear();
}

bool ElementDefinition_Slicing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.ElementDefinition.Slicing)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator discriminator = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_discriminator()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String description = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Boolean ordered = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ordered()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.SlicingRulesCode rules = 6 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.ElementDefinition.Slicing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.ElementDefinition.Slicing)
  return false;
#undef DO_
}

void ElementDefinition_Slicing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.ElementDefinition.Slicing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator discriminator = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->discriminator_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->discriminator(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.String description = 4;
  if (this->has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_description(), output);
  }

  // .google.fhir.stu3.proto.Boolean ordered = 5;
  if (this->has_ordered()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_ordered(), output);
  }

  // .google.fhir.stu3.proto.SlicingRulesCode rules = 6 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_rules()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_rules(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.ElementDefinition.Slicing)
}

::google::protobuf::uint8* ElementDefinition_Slicing::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.ElementDefinition.Slicing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator discriminator = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->discriminator_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->discriminator(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.String description = 4;
  if (this->has_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_description(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Boolean ordered = 5;
  if (this->has_ordered()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_ordered(), deterministic, target);
  }

  // .google.fhir.stu3.proto.SlicingRulesCode rules = 6 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_rules()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_rules(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.ElementDefinition.Slicing)
  return target;
}

size_t ElementDefinition_Slicing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.ElementDefinition.Slicing)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator discriminator = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->discriminator_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->discriminator(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.String description = 4;
  if (this->has_description()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *description_);
  }

  // .google.fhir.stu3.proto.Boolean ordered = 5;
  if (this->has_ordered()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ordered_);
  }

  // .google.fhir.stu3.proto.SlicingRulesCode rules = 6 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_rules()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rules_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ElementDefinition_Slicing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.ElementDefinition.Slicing)
  GOOGLE_DCHECK_NE(&from, this);
  const ElementDefinition_Slicing* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ElementDefinition_Slicing>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.ElementDefinition.Slicing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.ElementDefinition.Slicing)
    MergeFrom(*source);
  }
}

void ElementDefinition_Slicing::MergeFrom(const ElementDefinition_Slicing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.ElementDefinition.Slicing)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  discriminator_.MergeFrom(from.discriminator_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_description()) {
    mutable_description()->::google::fhir::stu3::proto::String::MergeFrom(from.description());
  }
  if (from.has_ordered()) {
    mutable_ordered()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.ordered());
  }
  if (from.has_rules()) {
    mutable_rules()->::google::fhir::stu3::proto::SlicingRulesCode::MergeFrom(from.rules());
  }
}

void ElementDefinition_Slicing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.ElementDefinition.Slicing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ElementDefinition_Slicing::CopyFrom(const ElementDefinition_Slicing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.ElementDefinition.Slicing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ElementDefinition_Slicing::IsInitialized() const {
  return true;
}

void ElementDefinition_Slicing::Swap(ElementDefinition_Slicing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ElementDefinition_Slicing::InternalSwap(ElementDefinition_Slicing* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&discriminator_)->InternalSwap(CastToBase(&other->discriminator_));
  swap(id_, other->id_);
  swap(description_, other->description_);
  swap(ordered_, other->ordered_);
  swap(rules_, other->rules_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ElementDefinition_Slicing::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ElementDefinition_Base::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_ElementDefinition_Base_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Base_default_instance_._instance.get_mutable()->path_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Base_default_instance_._instance.get_mutable()->min_ = const_cast< ::google::fhir::stu3::proto::UnsignedInt*>(
      ::google::fhir::stu3::proto::UnsignedInt::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Base_default_instance_._instance.get_mutable()->max_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
void ElementDefinition_Base::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void ElementDefinition_Base::clear_extension() {
  extension_.Clear();
}
void ElementDefinition_Base::clear_path() {
  if (GetArenaNoVirtual() == NULL && path_ != NULL) {
    delete path_;
  }
  path_ = NULL;
}
void ElementDefinition_Base::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
void ElementDefinition_Base::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ElementDefinition_Base::kIdFieldNumber;
const int ElementDefinition_Base::kExtensionFieldNumber;
const int ElementDefinition_Base::kPathFieldNumber;
const int ElementDefinition_Base::kMinFieldNumber;
const int ElementDefinition_Base::kMaxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ElementDefinition_Base::ElementDefinition_Base()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_Base.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.ElementDefinition.Base)
}
ElementDefinition_Base::ElementDefinition_Base(const ElementDefinition_Base& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_path()) {
    path_ = new ::google::fhir::stu3::proto::String(*from.path_);
  } else {
    path_ = NULL;
  }
  if (from.has_min()) {
    min_ = new ::google::fhir::stu3::proto::UnsignedInt(*from.min_);
  } else {
    min_ = NULL;
  }
  if (from.has_max()) {
    max_ = new ::google::fhir::stu3::proto::String(*from.max_);
  } else {
    max_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.ElementDefinition.Base)
}

void ElementDefinition_Base::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_) -
      reinterpret_cast<char*>(&id_)) + sizeof(max_));
}

ElementDefinition_Base::~ElementDefinition_Base() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.ElementDefinition.Base)
  SharedDtor();
}

void ElementDefinition_Base::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete path_;
  if (this != internal_default_instance()) delete min_;
  if (this != internal_default_instance()) delete max_;
}

void ElementDefinition_Base::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ElementDefinition_Base::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ElementDefinition_Base& ElementDefinition_Base::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_Base.base);
  return *internal_default_instance();
}


void ElementDefinition_Base::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.ElementDefinition.Base)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && path_ != NULL) {
    delete path_;
  }
  path_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  _internal_metadata_.Clear();
}

bool ElementDefinition_Base::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.ElementDefinition.Base)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String path = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.UnsignedInt min = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String max = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.ElementDefinition.Base)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.ElementDefinition.Base)
  return false;
#undef DO_
}

void ElementDefinition_Base::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.ElementDefinition.Base)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.String path = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_path()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_path(), output);
  }

  // .google.fhir.stu3.proto.UnsignedInt min = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_min(), output);
  }

  // .google.fhir.stu3.proto.String max = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_max(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.ElementDefinition.Base)
}

::google::protobuf::uint8* ElementDefinition_Base::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.ElementDefinition.Base)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.String path = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_path()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_path(), deterministic, target);
  }

  // .google.fhir.stu3.proto.UnsignedInt min = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_min(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String max = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_max(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.ElementDefinition.Base)
  return target;
}

size_t ElementDefinition_Base::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.ElementDefinition.Base)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.String path = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *path_);
  }

  // .google.fhir.stu3.proto.UnsignedInt min = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_min()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *min_);
  }

  // .google.fhir.stu3.proto.String max = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_max()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *max_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ElementDefinition_Base::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.ElementDefinition.Base)
  GOOGLE_DCHECK_NE(&from, this);
  const ElementDefinition_Base* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ElementDefinition_Base>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.ElementDefinition.Base)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.ElementDefinition.Base)
    MergeFrom(*source);
  }
}

void ElementDefinition_Base::MergeFrom(const ElementDefinition_Base& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.ElementDefinition.Base)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_path()) {
    mutable_path()->::google::fhir::stu3::proto::String::MergeFrom(from.path());
  }
  if (from.has_min()) {
    mutable_min()->::google::fhir::stu3::proto::UnsignedInt::MergeFrom(from.min());
  }
  if (from.has_max()) {
    mutable_max()->::google::fhir::stu3::proto::String::MergeFrom(from.max());
  }
}

void ElementDefinition_Base::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.ElementDefinition.Base)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ElementDefinition_Base::CopyFrom(const ElementDefinition_Base& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.ElementDefinition.Base)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ElementDefinition_Base::IsInitialized() const {
  return true;
}

void ElementDefinition_Base::Swap(ElementDefinition_Base* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ElementDefinition_Base::InternalSwap(ElementDefinition_Base* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(path_, other->path_);
  swap(min_, other->min_);
  swap(max_, other->max_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ElementDefinition_Base::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ElementDefinition_TypeRef::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_ElementDefinition_TypeRef_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_TypeRef_default_instance_._instance.get_mutable()->code_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_TypeRef_default_instance_._instance.get_mutable()->profile_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_TypeRef_default_instance_._instance.get_mutable()->target_profile_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_TypeRef_default_instance_._instance.get_mutable()->versioning_ = const_cast< ::google::fhir::stu3::proto::ReferenceVersionRulesCode*>(
      ::google::fhir::stu3::proto::ReferenceVersionRulesCode::internal_default_instance());
}
void ElementDefinition_TypeRef::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void ElementDefinition_TypeRef::clear_extension() {
  extension_.Clear();
}
void ElementDefinition_TypeRef::clear_code() {
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
}
void ElementDefinition_TypeRef::clear_profile() {
  if (GetArenaNoVirtual() == NULL && profile_ != NULL) {
    delete profile_;
  }
  profile_ = NULL;
}
void ElementDefinition_TypeRef::clear_target_profile() {
  if (GetArenaNoVirtual() == NULL && target_profile_ != NULL) {
    delete target_profile_;
  }
  target_profile_ = NULL;
}
void ElementDefinition_TypeRef::clear_aggregation() {
  aggregation_.Clear();
}
void ElementDefinition_TypeRef::clear_versioning() {
  if (GetArenaNoVirtual() == NULL && versioning_ != NULL) {
    delete versioning_;
  }
  versioning_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ElementDefinition_TypeRef::kIdFieldNumber;
const int ElementDefinition_TypeRef::kExtensionFieldNumber;
const int ElementDefinition_TypeRef::kCodeFieldNumber;
const int ElementDefinition_TypeRef::kProfileFieldNumber;
const int ElementDefinition_TypeRef::kTargetProfileFieldNumber;
const int ElementDefinition_TypeRef::kAggregationFieldNumber;
const int ElementDefinition_TypeRef::kVersioningFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ElementDefinition_TypeRef::ElementDefinition_TypeRef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_TypeRef.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.ElementDefinition.TypeRef)
}
ElementDefinition_TypeRef::ElementDefinition_TypeRef(const ElementDefinition_TypeRef& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      aggregation_(from.aggregation_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_code()) {
    code_ = new ::google::fhir::stu3::proto::Uri(*from.code_);
  } else {
    code_ = NULL;
  }
  if (from.has_profile()) {
    profile_ = new ::google::fhir::stu3::proto::Uri(*from.profile_);
  } else {
    profile_ = NULL;
  }
  if (from.has_target_profile()) {
    target_profile_ = new ::google::fhir::stu3::proto::Uri(*from.target_profile_);
  } else {
    target_profile_ = NULL;
  }
  if (from.has_versioning()) {
    versioning_ = new ::google::fhir::stu3::proto::ReferenceVersionRulesCode(*from.versioning_);
  } else {
    versioning_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.ElementDefinition.TypeRef)
}

void ElementDefinition_TypeRef::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&versioning_) -
      reinterpret_cast<char*>(&id_)) + sizeof(versioning_));
}

ElementDefinition_TypeRef::~ElementDefinition_TypeRef() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.ElementDefinition.TypeRef)
  SharedDtor();
}

void ElementDefinition_TypeRef::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete code_;
  if (this != internal_default_instance()) delete profile_;
  if (this != internal_default_instance()) delete target_profile_;
  if (this != internal_default_instance()) delete versioning_;
}

void ElementDefinition_TypeRef::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ElementDefinition_TypeRef::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ElementDefinition_TypeRef& ElementDefinition_TypeRef::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_TypeRef.base);
  return *internal_default_instance();
}


void ElementDefinition_TypeRef::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.ElementDefinition.TypeRef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  aggregation_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
  if (GetArenaNoVirtual() == NULL && profile_ != NULL) {
    delete profile_;
  }
  profile_ = NULL;
  if (GetArenaNoVirtual() == NULL && target_profile_ != NULL) {
    delete target_profile_;
  }
  target_profile_ = NULL;
  if (GetArenaNoVirtual() == NULL && versioning_ != NULL) {
    delete versioning_;
  }
  versioning_ = NULL;
  _internal_metadata_.Clear();
}

bool ElementDefinition_TypeRef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.ElementDefinition.TypeRef)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri code = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri profile = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_profile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri target_profile = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target_profile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.AggregationModeCode aggregation = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_aggregation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceVersionRulesCode versioning = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_versioning()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.ElementDefinition.TypeRef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.ElementDefinition.TypeRef)
  return false;
#undef DO_
}

void ElementDefinition_TypeRef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.ElementDefinition.TypeRef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Uri code = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_code(), output);
  }

  // .google.fhir.stu3.proto.Uri profile = 4;
  if (this->has_profile()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_profile(), output);
  }

  // .google.fhir.stu3.proto.Uri target_profile = 5;
  if (this->has_target_profile()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_target_profile(), output);
  }

  // repeated .google.fhir.stu3.proto.AggregationModeCode aggregation = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->aggregation_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->aggregation(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.ReferenceVersionRulesCode versioning = 7;
  if (this->has_versioning()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_versioning(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.ElementDefinition.TypeRef)
}

::google::protobuf::uint8* ElementDefinition_TypeRef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.ElementDefinition.TypeRef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri code = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_code(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri profile = 4;
  if (this->has_profile()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_profile(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri target_profile = 5;
  if (this->has_target_profile()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_target_profile(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.AggregationModeCode aggregation = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->aggregation_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->aggregation(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceVersionRulesCode versioning = 7;
  if (this->has_versioning()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_versioning(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.ElementDefinition.TypeRef)
  return target;
}

size_t ElementDefinition_TypeRef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.ElementDefinition.TypeRef)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.AggregationModeCode aggregation = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->aggregation_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->aggregation(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Uri code = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *code_);
  }

  // .google.fhir.stu3.proto.Uri profile = 4;
  if (this->has_profile()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *profile_);
  }

  // .google.fhir.stu3.proto.Uri target_profile = 5;
  if (this->has_target_profile()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *target_profile_);
  }

  // .google.fhir.stu3.proto.ReferenceVersionRulesCode versioning = 7;
  if (this->has_versioning()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *versioning_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ElementDefinition_TypeRef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.ElementDefinition.TypeRef)
  GOOGLE_DCHECK_NE(&from, this);
  const ElementDefinition_TypeRef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ElementDefinition_TypeRef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.ElementDefinition.TypeRef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.ElementDefinition.TypeRef)
    MergeFrom(*source);
  }
}

void ElementDefinition_TypeRef::MergeFrom(const ElementDefinition_TypeRef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.ElementDefinition.TypeRef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  aggregation_.MergeFrom(from.aggregation_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_code()) {
    mutable_code()->::google::fhir::stu3::proto::Uri::MergeFrom(from.code());
  }
  if (from.has_profile()) {
    mutable_profile()->::google::fhir::stu3::proto::Uri::MergeFrom(from.profile());
  }
  if (from.has_target_profile()) {
    mutable_target_profile()->::google::fhir::stu3::proto::Uri::MergeFrom(from.target_profile());
  }
  if (from.has_versioning()) {
    mutable_versioning()->::google::fhir::stu3::proto::ReferenceVersionRulesCode::MergeFrom(from.versioning());
  }
}

void ElementDefinition_TypeRef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.ElementDefinition.TypeRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ElementDefinition_TypeRef::CopyFrom(const ElementDefinition_TypeRef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.ElementDefinition.TypeRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ElementDefinition_TypeRef::IsInitialized() const {
  return true;
}

void ElementDefinition_TypeRef::Swap(ElementDefinition_TypeRef* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ElementDefinition_TypeRef::InternalSwap(ElementDefinition_TypeRef* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&aggregation_)->InternalSwap(CastToBase(&other->aggregation_));
  swap(id_, other->id_);
  swap(code_, other->code_);
  swap(profile_, other->profile_);
  swap(target_profile_, other->target_profile_);
  swap(versioning_, other->versioning_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ElementDefinition_TypeRef::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ElementDefinition_DefaultValue::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.base64_binary_ = const_cast< ::google::fhir::stu3::proto::Base64Binary*>(
      ::google::fhir::stu3::proto::Base64Binary::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.boolean_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.code_ = const_cast< ::google::fhir::stu3::proto::Code*>(
      ::google::fhir::stu3::proto::Code::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.date_ = const_cast< ::google::fhir::stu3::proto::Date*>(
      ::google::fhir::stu3::proto::Date::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.date_time_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.decimal_ = const_cast< ::google::fhir::stu3::proto::Decimal*>(
      ::google::fhir::stu3::proto::Decimal::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.id_ = const_cast< ::google::fhir::stu3::proto::Id*>(
      ::google::fhir::stu3::proto::Id::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.instant_ = const_cast< ::google::fhir::stu3::proto::Instant*>(
      ::google::fhir::stu3::proto::Instant::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.integer_ = const_cast< ::google::fhir::stu3::proto::Integer*>(
      ::google::fhir::stu3::proto::Integer::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.markdown_ = const_cast< ::google::fhir::stu3::proto::Markdown*>(
      ::google::fhir::stu3::proto::Markdown::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.oid_ = const_cast< ::google::fhir::stu3::proto::Oid*>(
      ::google::fhir::stu3::proto::Oid::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.positive_int_ = const_cast< ::google::fhir::stu3::proto::PositiveInt*>(
      ::google::fhir::stu3::proto::PositiveInt::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.string_value_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.time_ = const_cast< ::google::fhir::stu3::proto::Time*>(
      ::google::fhir::stu3::proto::Time::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.unsigned_int_ = const_cast< ::google::fhir::stu3::proto::UnsignedInt*>(
      ::google::fhir::stu3::proto::UnsignedInt::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.uri_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.address_ = const_cast< ::google::fhir::stu3::proto::Address*>(
      ::google::fhir::stu3::proto::Address::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.age_ = const_cast< ::google::fhir::stu3::proto::Age*>(
      ::google::fhir::stu3::proto::Age::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.annotation_ = const_cast< ::google::fhir::stu3::proto::Annotation*>(
      ::google::fhir::stu3::proto::Annotation::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.attachment_ = const_cast< ::google::fhir::stu3::proto::Attachment*>(
      ::google::fhir::stu3::proto::Attachment::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.codeable_concept_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.coding_ = const_cast< ::google::fhir::stu3::proto::Coding*>(
      ::google::fhir::stu3::proto::Coding::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.contact_point_ = const_cast< ::google::fhir::stu3::proto::ContactPoint*>(
      ::google::fhir::stu3::proto::ContactPoint::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.count_ = const_cast< ::google::fhir::stu3::proto::Count*>(
      ::google::fhir::stu3::proto::Count::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.distance_ = const_cast< ::google::fhir::stu3::proto::Distance*>(
      ::google::fhir::stu3::proto::Distance::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.duration_ = const_cast< ::google::fhir::stu3::proto::Duration*>(
      ::google::fhir::stu3::proto::Duration::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.human_name_ = const_cast< ::google::fhir::stu3::proto::HumanName*>(
      ::google::fhir::stu3::proto::HumanName::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.identifier_ = const_cast< ::google::fhir::stu3::proto::Identifier*>(
      ::google::fhir::stu3::proto::Identifier::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.money_ = const_cast< ::google::fhir::stu3::proto::Money*>(
      ::google::fhir::stu3::proto::Money::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.period_ = const_cast< ::google::fhir::stu3::proto::Period*>(
      ::google::fhir::stu3::proto::Period::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.quantity_ = const_cast< ::google::fhir::stu3::proto::Quantity*>(
      ::google::fhir::stu3::proto::Quantity::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.range_ = const_cast< ::google::fhir::stu3::proto::Range*>(
      ::google::fhir::stu3::proto::Range::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.ratio_ = const_cast< ::google::fhir::stu3::proto::Ratio*>(
      ::google::fhir::stu3::proto::Ratio::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.reference_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.sampled_data_ = const_cast< ::google::fhir::stu3::proto::SampledData*>(
      ::google::fhir::stu3::proto::SampledData::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.signature_ = const_cast< ::google::fhir::stu3::proto::Signature*>(
      ::google::fhir::stu3::proto::Signature::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.timing_ = const_cast< ::google::fhir::stu3::proto::Timing*>(
      ::google::fhir::stu3::proto::Timing::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_.meta_ = const_cast< ::google::fhir::stu3::proto::Meta*>(
      ::google::fhir::stu3::proto::Meta::internal_default_instance());
}
void ElementDefinition_DefaultValue::set_allocated_base64_binary(::google::fhir::stu3::proto::Base64Binary* base64_binary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (base64_binary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      base64_binary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, base64_binary, submessage_arena);
    }
    set_has_base64_binary();
    default_value_.base64_binary_ = base64_binary;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.base64_binary)
}
void ElementDefinition_DefaultValue::clear_base64_binary() {
  if (has_base64_binary()) {
    delete default_value_.base64_binary_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_boolean(::google::fhir::stu3::proto::Boolean* boolean) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (boolean) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      boolean = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, boolean, submessage_arena);
    }
    set_has_boolean();
    default_value_.boolean_ = boolean;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.boolean)
}
void ElementDefinition_DefaultValue::clear_boolean() {
  if (has_boolean()) {
    delete default_value_.boolean_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_code(::google::fhir::stu3::proto::Code* code) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (code) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      code = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, code, submessage_arena);
    }
    set_has_code();
    default_value_.code_ = code;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.code)
}
void ElementDefinition_DefaultValue::clear_code() {
  if (has_code()) {
    delete default_value_.code_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_date(::google::fhir::stu3::proto::Date* date) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (date) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date, submessage_arena);
    }
    set_has_date();
    default_value_.date_ = date;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.date)
}
void ElementDefinition_DefaultValue::clear_date() {
  if (has_date()) {
    delete default_value_.date_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (date_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date_time, submessage_arena);
    }
    set_has_date_time();
    default_value_.date_time_ = date_time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.date_time)
}
void ElementDefinition_DefaultValue::clear_date_time() {
  if (has_date_time()) {
    delete default_value_.date_time_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_decimal(::google::fhir::stu3::proto::Decimal* decimal) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (decimal) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      decimal = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, decimal, submessage_arena);
    }
    set_has_decimal();
    default_value_.decimal_ = decimal;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.decimal)
}
void ElementDefinition_DefaultValue::clear_decimal() {
  if (has_decimal()) {
    delete default_value_.decimal_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_id(::google::fhir::stu3::proto::Id* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    set_has_id();
    default_value_.id_ = id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.id)
}
void ElementDefinition_DefaultValue::clear_id() {
  if (has_id()) {
    delete default_value_.id_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_instant(::google::fhir::stu3::proto::Instant* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    set_has_instant();
    default_value_.instant_ = instant;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.instant)
}
void ElementDefinition_DefaultValue::clear_instant() {
  if (has_instant()) {
    delete default_value_.instant_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_integer(::google::fhir::stu3::proto::Integer* integer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (integer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      integer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, integer, submessage_arena);
    }
    set_has_integer();
    default_value_.integer_ = integer;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.integer)
}
void ElementDefinition_DefaultValue::clear_integer() {
  if (has_integer()) {
    delete default_value_.integer_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_markdown(::google::fhir::stu3::proto::Markdown* markdown) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (markdown) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      markdown = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, markdown, submessage_arena);
    }
    set_has_markdown();
    default_value_.markdown_ = markdown;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.markdown)
}
void ElementDefinition_DefaultValue::clear_markdown() {
  if (has_markdown()) {
    delete default_value_.markdown_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_oid(::google::fhir::stu3::proto::Oid* oid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (oid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      oid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, oid, submessage_arena);
    }
    set_has_oid();
    default_value_.oid_ = oid;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.oid)
}
void ElementDefinition_DefaultValue::clear_oid() {
  if (has_oid()) {
    delete default_value_.oid_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_positive_int(::google::fhir::stu3::proto::PositiveInt* positive_int) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (positive_int) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      positive_int = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, positive_int, submessage_arena);
    }
    set_has_positive_int();
    default_value_.positive_int_ = positive_int;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.positive_int)
}
void ElementDefinition_DefaultValue::clear_positive_int() {
  if (has_positive_int()) {
    delete default_value_.positive_int_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_string_value(::google::fhir::stu3::proto::String* string_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (string_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      string_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, string_value, submessage_arena);
    }
    set_has_string_value();
    default_value_.string_value_ = string_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.string_value)
}
void ElementDefinition_DefaultValue::clear_string_value() {
  if (has_string_value()) {
    delete default_value_.string_value_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_time(::google::fhir::stu3::proto::Time* time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time, submessage_arena);
    }
    set_has_time();
    default_value_.time_ = time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.time)
}
void ElementDefinition_DefaultValue::clear_time() {
  if (has_time()) {
    delete default_value_.time_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_unsigned_int(::google::fhir::stu3::proto::UnsignedInt* unsigned_int) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (unsigned_int) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      unsigned_int = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, unsigned_int, submessage_arena);
    }
    set_has_unsigned_int();
    default_value_.unsigned_int_ = unsigned_int;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.unsigned_int)
}
void ElementDefinition_DefaultValue::clear_unsigned_int() {
  if (has_unsigned_int()) {
    delete default_value_.unsigned_int_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_uri(::google::fhir::stu3::proto::Uri* uri) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (uri) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      uri = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uri, submessage_arena);
    }
    set_has_uri();
    default_value_.uri_ = uri;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.uri)
}
void ElementDefinition_DefaultValue::clear_uri() {
  if (has_uri()) {
    delete default_value_.uri_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_address(::google::fhir::stu3::proto::Address* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    set_has_address();
    default_value_.address_ = address;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.address)
}
void ElementDefinition_DefaultValue::clear_address() {
  if (has_address()) {
    delete default_value_.address_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_age(::google::fhir::stu3::proto::Age* age) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (age) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      age = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, age, submessage_arena);
    }
    set_has_age();
    default_value_.age_ = age;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.age)
}
void ElementDefinition_DefaultValue::clear_age() {
  if (has_age()) {
    delete default_value_.age_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_annotation(::google::fhir::stu3::proto::Annotation* annotation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (annotation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      annotation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, annotation, submessage_arena);
    }
    set_has_annotation();
    default_value_.annotation_ = annotation;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.annotation)
}
void ElementDefinition_DefaultValue::clear_annotation() {
  if (has_annotation()) {
    delete default_value_.annotation_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_attachment(::google::fhir::stu3::proto::Attachment* attachment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (attachment) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      attachment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, attachment, submessage_arena);
    }
    set_has_attachment();
    default_value_.attachment_ = attachment;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.attachment)
}
void ElementDefinition_DefaultValue::clear_attachment() {
  if (has_attachment()) {
    delete default_value_.attachment_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (codeable_concept) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      codeable_concept = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, codeable_concept, submessage_arena);
    }
    set_has_codeable_concept();
    default_value_.codeable_concept_ = codeable_concept;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.codeable_concept)
}
void ElementDefinition_DefaultValue::clear_codeable_concept() {
  if (has_codeable_concept()) {
    delete default_value_.codeable_concept_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_coding(::google::fhir::stu3::proto::Coding* coding) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (coding) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      coding = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, coding, submessage_arena);
    }
    set_has_coding();
    default_value_.coding_ = coding;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.coding)
}
void ElementDefinition_DefaultValue::clear_coding() {
  if (has_coding()) {
    delete default_value_.coding_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_contact_point(::google::fhir::stu3::proto::ContactPoint* contact_point) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (contact_point) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      contact_point = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, contact_point, submessage_arena);
    }
    set_has_contact_point();
    default_value_.contact_point_ = contact_point;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.contact_point)
}
void ElementDefinition_DefaultValue::clear_contact_point() {
  if (has_contact_point()) {
    delete default_value_.contact_point_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_count(::google::fhir::stu3::proto::Count* count) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (count) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      count = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, count, submessage_arena);
    }
    set_has_count();
    default_value_.count_ = count;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.count)
}
void ElementDefinition_DefaultValue::clear_count() {
  if (has_count()) {
    delete default_value_.count_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_distance(::google::fhir::stu3::proto::Distance* distance) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (distance) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      distance = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, distance, submessage_arena);
    }
    set_has_distance();
    default_value_.distance_ = distance;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.distance)
}
void ElementDefinition_DefaultValue::clear_distance() {
  if (has_distance()) {
    delete default_value_.distance_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_duration(::google::fhir::stu3::proto::Duration* duration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (duration) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      duration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, duration, submessage_arena);
    }
    set_has_duration();
    default_value_.duration_ = duration;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.duration)
}
void ElementDefinition_DefaultValue::clear_duration() {
  if (has_duration()) {
    delete default_value_.duration_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_human_name(::google::fhir::stu3::proto::HumanName* human_name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (human_name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      human_name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, human_name, submessage_arena);
    }
    set_has_human_name();
    default_value_.human_name_ = human_name;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.human_name)
}
void ElementDefinition_DefaultValue::clear_human_name() {
  if (has_human_name()) {
    delete default_value_.human_name_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_identifier(::google::fhir::stu3::proto::Identifier* identifier) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (identifier) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      identifier = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, identifier, submessage_arena);
    }
    set_has_identifier();
    default_value_.identifier_ = identifier;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.identifier)
}
void ElementDefinition_DefaultValue::clear_identifier() {
  if (has_identifier()) {
    delete default_value_.identifier_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_money(::google::fhir::stu3::proto::Money* money) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (money) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      money = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, money, submessage_arena);
    }
    set_has_money();
    default_value_.money_ = money;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.money)
}
void ElementDefinition_DefaultValue::clear_money() {
  if (has_money()) {
    delete default_value_.money_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_period(::google::fhir::stu3::proto::Period* period) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (period) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      period = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, period, submessage_arena);
    }
    set_has_period();
    default_value_.period_ = period;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.period)
}
void ElementDefinition_DefaultValue::clear_period() {
  if (has_period()) {
    delete default_value_.period_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_quantity(::google::fhir::stu3::proto::Quantity* quantity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (quantity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      quantity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, quantity, submessage_arena);
    }
    set_has_quantity();
    default_value_.quantity_ = quantity;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.quantity)
}
void ElementDefinition_DefaultValue::clear_quantity() {
  if (has_quantity()) {
    delete default_value_.quantity_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_range(::google::fhir::stu3::proto::Range* range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (range) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, range, submessage_arena);
    }
    set_has_range();
    default_value_.range_ = range;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.range)
}
void ElementDefinition_DefaultValue::clear_range() {
  if (has_range()) {
    delete default_value_.range_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_ratio(::google::fhir::stu3::proto::Ratio* ratio) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (ratio) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ratio = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ratio, submessage_arena);
    }
    set_has_ratio();
    default_value_.ratio_ = ratio;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.ratio)
}
void ElementDefinition_DefaultValue::clear_ratio() {
  if (has_ratio()) {
    delete default_value_.ratio_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_reference(::google::fhir::stu3::proto::Reference* reference) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (reference) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reference = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reference, submessage_arena);
    }
    set_has_reference();
    default_value_.reference_ = reference;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.reference)
}
void ElementDefinition_DefaultValue::clear_reference() {
  if (has_reference()) {
    delete default_value_.reference_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_sampled_data(::google::fhir::stu3::proto::SampledData* sampled_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (sampled_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sampled_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sampled_data, submessage_arena);
    }
    set_has_sampled_data();
    default_value_.sampled_data_ = sampled_data;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.sampled_data)
}
void ElementDefinition_DefaultValue::clear_sampled_data() {
  if (has_sampled_data()) {
    delete default_value_.sampled_data_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_signature(::google::fhir::stu3::proto::Signature* signature) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (signature) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      signature = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, signature, submessage_arena);
    }
    set_has_signature();
    default_value_.signature_ = signature;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.signature)
}
void ElementDefinition_DefaultValue::clear_signature() {
  if (has_signature()) {
    delete default_value_.signature_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_timing(::google::fhir::stu3::proto::Timing* timing) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (timing) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timing = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timing, submessage_arena);
    }
    set_has_timing();
    default_value_.timing_ = timing;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.timing)
}
void ElementDefinition_DefaultValue::clear_timing() {
  if (has_timing()) {
    delete default_value_.timing_;
    clear_has_default_value();
  }
}
void ElementDefinition_DefaultValue::set_allocated_meta(::google::fhir::stu3::proto::Meta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_default_value();
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    set_has_meta();
    default_value_.meta_ = meta;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.DefaultValue.meta)
}
void ElementDefinition_DefaultValue::clear_meta() {
  if (has_meta()) {
    delete default_value_.meta_;
    clear_has_default_value();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ElementDefinition_DefaultValue::kBase64BinaryFieldNumber;
const int ElementDefinition_DefaultValue::kBooleanFieldNumber;
const int ElementDefinition_DefaultValue::kCodeFieldNumber;
const int ElementDefinition_DefaultValue::kDateFieldNumber;
const int ElementDefinition_DefaultValue::kDateTimeFieldNumber;
const int ElementDefinition_DefaultValue::kDecimalFieldNumber;
const int ElementDefinition_DefaultValue::kIdFieldNumber;
const int ElementDefinition_DefaultValue::kInstantFieldNumber;
const int ElementDefinition_DefaultValue::kIntegerFieldNumber;
const int ElementDefinition_DefaultValue::kMarkdownFieldNumber;
const int ElementDefinition_DefaultValue::kOidFieldNumber;
const int ElementDefinition_DefaultValue::kPositiveIntFieldNumber;
const int ElementDefinition_DefaultValue::kStringValueFieldNumber;
const int ElementDefinition_DefaultValue::kTimeFieldNumber;
const int ElementDefinition_DefaultValue::kUnsignedIntFieldNumber;
const int ElementDefinition_DefaultValue::kUriFieldNumber;
const int ElementDefinition_DefaultValue::kAddressFieldNumber;
const int ElementDefinition_DefaultValue::kAgeFieldNumber;
const int ElementDefinition_DefaultValue::kAnnotationFieldNumber;
const int ElementDefinition_DefaultValue::kAttachmentFieldNumber;
const int ElementDefinition_DefaultValue::kCodeableConceptFieldNumber;
const int ElementDefinition_DefaultValue::kCodingFieldNumber;
const int ElementDefinition_DefaultValue::kContactPointFieldNumber;
const int ElementDefinition_DefaultValue::kCountFieldNumber;
const int ElementDefinition_DefaultValue::kDistanceFieldNumber;
const int ElementDefinition_DefaultValue::kDurationFieldNumber;
const int ElementDefinition_DefaultValue::kHumanNameFieldNumber;
const int ElementDefinition_DefaultValue::kIdentifierFieldNumber;
const int ElementDefinition_DefaultValue::kMoneyFieldNumber;
const int ElementDefinition_DefaultValue::kPeriodFieldNumber;
const int ElementDefinition_DefaultValue::kQuantityFieldNumber;
const int ElementDefinition_DefaultValue::kRangeFieldNumber;
const int ElementDefinition_DefaultValue::kRatioFieldNumber;
const int ElementDefinition_DefaultValue::kReferenceFieldNumber;
const int ElementDefinition_DefaultValue::kSampledDataFieldNumber;
const int ElementDefinition_DefaultValue::kSignatureFieldNumber;
const int ElementDefinition_DefaultValue::kTimingFieldNumber;
const int ElementDefinition_DefaultValue::kMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ElementDefinition_DefaultValue::ElementDefinition_DefaultValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_DefaultValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.ElementDefinition.DefaultValue)
}
ElementDefinition_DefaultValue::ElementDefinition_DefaultValue(const ElementDefinition_DefaultValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_default_value();
  switch (from.default_value_case()) {
    case kBase64Binary: {
      mutable_base64_binary()->::google::fhir::stu3::proto::Base64Binary::MergeFrom(from.base64_binary());
      break;
    }
    case kBoolean: {
      mutable_boolean()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.boolean());
      break;
    }
    case kCode: {
      mutable_code()->::google::fhir::stu3::proto::Code::MergeFrom(from.code());
      break;
    }
    case kDate: {
      mutable_date()->::google::fhir::stu3::proto::Date::MergeFrom(from.date());
      break;
    }
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kDecimal: {
      mutable_decimal()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.decimal());
      break;
    }
    case kId: {
      mutable_id()->::google::fhir::stu3::proto::Id::MergeFrom(from.id());
      break;
    }
    case kInstant: {
      mutable_instant()->::google::fhir::stu3::proto::Instant::MergeFrom(from.instant());
      break;
    }
    case kInteger: {
      mutable_integer()->::google::fhir::stu3::proto::Integer::MergeFrom(from.integer());
      break;
    }
    case kMarkdown: {
      mutable_markdown()->::google::fhir::stu3::proto::Markdown::MergeFrom(from.markdown());
      break;
    }
    case kOid: {
      mutable_oid()->::google::fhir::stu3::proto::Oid::MergeFrom(from.oid());
      break;
    }
    case kPositiveInt: {
      mutable_positive_int()->::google::fhir::stu3::proto::PositiveInt::MergeFrom(from.positive_int());
      break;
    }
    case kStringValue: {
      mutable_string_value()->::google::fhir::stu3::proto::String::MergeFrom(from.string_value());
      break;
    }
    case kTime: {
      mutable_time()->::google::fhir::stu3::proto::Time::MergeFrom(from.time());
      break;
    }
    case kUnsignedInt: {
      mutable_unsigned_int()->::google::fhir::stu3::proto::UnsignedInt::MergeFrom(from.unsigned_int());
      break;
    }
    case kUri: {
      mutable_uri()->::google::fhir::stu3::proto::Uri::MergeFrom(from.uri());
      break;
    }
    case kAddress: {
      mutable_address()->::google::fhir::stu3::proto::Address::MergeFrom(from.address());
      break;
    }
    case kAge: {
      mutable_age()->::google::fhir::stu3::proto::Age::MergeFrom(from.age());
      break;
    }
    case kAnnotation: {
      mutable_annotation()->::google::fhir::stu3::proto::Annotation::MergeFrom(from.annotation());
      break;
    }
    case kAttachment: {
      mutable_attachment()->::google::fhir::stu3::proto::Attachment::MergeFrom(from.attachment());
      break;
    }
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case kCoding: {
      mutable_coding()->::google::fhir::stu3::proto::Coding::MergeFrom(from.coding());
      break;
    }
    case kContactPoint: {
      mutable_contact_point()->::google::fhir::stu3::proto::ContactPoint::MergeFrom(from.contact_point());
      break;
    }
    case kCount: {
      mutable_count()->::google::fhir::stu3::proto::Count::MergeFrom(from.count());
      break;
    }
    case kDistance: {
      mutable_distance()->::google::fhir::stu3::proto::Distance::MergeFrom(from.distance());
      break;
    }
    case kDuration: {
      mutable_duration()->::google::fhir::stu3::proto::Duration::MergeFrom(from.duration());
      break;
    }
    case kHumanName: {
      mutable_human_name()->::google::fhir::stu3::proto::HumanName::MergeFrom(from.human_name());
      break;
    }
    case kIdentifier: {
      mutable_identifier()->::google::fhir::stu3::proto::Identifier::MergeFrom(from.identifier());
      break;
    }
    case kMoney: {
      mutable_money()->::google::fhir::stu3::proto::Money::MergeFrom(from.money());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case kQuantity: {
      mutable_quantity()->::google::fhir::stu3::proto::Quantity::MergeFrom(from.quantity());
      break;
    }
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case kRatio: {
      mutable_ratio()->::google::fhir::stu3::proto::Ratio::MergeFrom(from.ratio());
      break;
    }
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case kSampledData: {
      mutable_sampled_data()->::google::fhir::stu3::proto::SampledData::MergeFrom(from.sampled_data());
      break;
    }
    case kSignature: {
      mutable_signature()->::google::fhir::stu3::proto::Signature::MergeFrom(from.signature());
      break;
    }
    case kTiming: {
      mutable_timing()->::google::fhir::stu3::proto::Timing::MergeFrom(from.timing());
      break;
    }
    case kMeta: {
      mutable_meta()->::google::fhir::stu3::proto::Meta::MergeFrom(from.meta());
      break;
    }
    case DEFAULT_VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.ElementDefinition.DefaultValue)
}

void ElementDefinition_DefaultValue::SharedCtor() {
  clear_has_default_value();
}

ElementDefinition_DefaultValue::~ElementDefinition_DefaultValue() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.ElementDefinition.DefaultValue)
  SharedDtor();
}

void ElementDefinition_DefaultValue::SharedDtor() {
  if (has_default_value()) {
    clear_default_value();
  }
}

void ElementDefinition_DefaultValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ElementDefinition_DefaultValue::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ElementDefinition_DefaultValue& ElementDefinition_DefaultValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_DefaultValue.base);
  return *internal_default_instance();
}


void ElementDefinition_DefaultValue::clear_default_value() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.proto.ElementDefinition.DefaultValue)
  switch (default_value_case()) {
    case kBase64Binary: {
      delete default_value_.base64_binary_;
      break;
    }
    case kBoolean: {
      delete default_value_.boolean_;
      break;
    }
    case kCode: {
      delete default_value_.code_;
      break;
    }
    case kDate: {
      delete default_value_.date_;
      break;
    }
    case kDateTime: {
      delete default_value_.date_time_;
      break;
    }
    case kDecimal: {
      delete default_value_.decimal_;
      break;
    }
    case kId: {
      delete default_value_.id_;
      break;
    }
    case kInstant: {
      delete default_value_.instant_;
      break;
    }
    case kInteger: {
      delete default_value_.integer_;
      break;
    }
    case kMarkdown: {
      delete default_value_.markdown_;
      break;
    }
    case kOid: {
      delete default_value_.oid_;
      break;
    }
    case kPositiveInt: {
      delete default_value_.positive_int_;
      break;
    }
    case kStringValue: {
      delete default_value_.string_value_;
      break;
    }
    case kTime: {
      delete default_value_.time_;
      break;
    }
    case kUnsignedInt: {
      delete default_value_.unsigned_int_;
      break;
    }
    case kUri: {
      delete default_value_.uri_;
      break;
    }
    case kAddress: {
      delete default_value_.address_;
      break;
    }
    case kAge: {
      delete default_value_.age_;
      break;
    }
    case kAnnotation: {
      delete default_value_.annotation_;
      break;
    }
    case kAttachment: {
      delete default_value_.attachment_;
      break;
    }
    case kCodeableConcept: {
      delete default_value_.codeable_concept_;
      break;
    }
    case kCoding: {
      delete default_value_.coding_;
      break;
    }
    case kContactPoint: {
      delete default_value_.contact_point_;
      break;
    }
    case kCount: {
      delete default_value_.count_;
      break;
    }
    case kDistance: {
      delete default_value_.distance_;
      break;
    }
    case kDuration: {
      delete default_value_.duration_;
      break;
    }
    case kHumanName: {
      delete default_value_.human_name_;
      break;
    }
    case kIdentifier: {
      delete default_value_.identifier_;
      break;
    }
    case kMoney: {
      delete default_value_.money_;
      break;
    }
    case kPeriod: {
      delete default_value_.period_;
      break;
    }
    case kQuantity: {
      delete default_value_.quantity_;
      break;
    }
    case kRange: {
      delete default_value_.range_;
      break;
    }
    case kRatio: {
      delete default_value_.ratio_;
      break;
    }
    case kReference: {
      delete default_value_.reference_;
      break;
    }
    case kSampledData: {
      delete default_value_.sampled_data_;
      break;
    }
    case kSignature: {
      delete default_value_.signature_;
      break;
    }
    case kTiming: {
      delete default_value_.timing_;
      break;
    }
    case kMeta: {
      delete default_value_.meta_;
      break;
    }
    case DEFAULT_VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DEFAULT_VALUE_NOT_SET;
}


void ElementDefinition_DefaultValue::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.ElementDefinition.DefaultValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_default_value();
  _internal_metadata_.Clear();
}

bool ElementDefinition_DefaultValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.ElementDefinition.DefaultValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Base64Binary base64_binary = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base64_binary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Boolean boolean = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_boolean()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Code code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Date date = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DateTime date_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Decimal decimal = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_decimal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Id id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Instant instant = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Integer integer = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_integer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Markdown markdown = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_markdown()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Oid oid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_oid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.PositiveInt positive_int = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_positive_int()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String string_value = 13[json_name = "string"];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_string_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Time time = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_unsigned_int()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri uri = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uri()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Address address = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Age age = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_age()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Annotation annotation = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_annotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Attachment attachment = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_attachment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_codeable_concept()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Coding coding = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_coding()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ContactPoint contact_point = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_contact_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Count count = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_count()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Distance distance = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_distance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Duration duration = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.HumanName human_name = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_human_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Identifier identifier = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Money money = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_money()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Period period = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Quantity quantity = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_quantity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Range range = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Ratio ratio = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ratio()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference reference = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.SampledData sampled_data = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 282 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sampled_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Signature signature = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 290 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Timing timing = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 298 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Meta meta = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 306 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.ElementDefinition.DefaultValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.ElementDefinition.DefaultValue)
  return false;
#undef DO_
}

void ElementDefinition_DefaultValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.ElementDefinition.DefaultValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Base64Binary base64_binary = 1;
  if (has_base64_binary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_base64_binary(), output);
  }

  // .google.fhir.stu3.proto.Boolean boolean = 2;
  if (has_boolean()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_boolean(), output);
  }

  // .google.fhir.stu3.proto.Code code = 3;
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_code(), output);
  }

  // .google.fhir.stu3.proto.Date date = 4;
  if (has_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_date(), output);
  }

  // .google.fhir.stu3.proto.DateTime date_time = 5;
  if (has_date_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_date_time(), output);
  }

  // .google.fhir.stu3.proto.Decimal decimal = 6;
  if (has_decimal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_decimal(), output);
  }

  // .google.fhir.stu3.proto.Id id = 7;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_id(), output);
  }

  // .google.fhir.stu3.proto.Instant instant = 8;
  if (has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_instant(), output);
  }

  // .google.fhir.stu3.proto.Integer integer = 9;
  if (has_integer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_integer(), output);
  }

  // .google.fhir.stu3.proto.Markdown markdown = 10;
  if (has_markdown()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_markdown(), output);
  }

  // .google.fhir.stu3.proto.Oid oid = 11;
  if (has_oid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_oid(), output);
  }

  // .google.fhir.stu3.proto.PositiveInt positive_int = 12;
  if (has_positive_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_positive_int(), output);
  }

  // .google.fhir.stu3.proto.String string_value = 13[json_name = "string"];
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_string_value(), output);
  }

  // .google.fhir.stu3.proto.Time time = 14;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_time(), output);
  }

  // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
  if (has_unsigned_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_unsigned_int(), output);
  }

  // .google.fhir.stu3.proto.Uri uri = 16;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_uri(), output);
  }

  // .google.fhir.stu3.proto.Address address = 17;
  if (has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_address(), output);
  }

  // .google.fhir.stu3.proto.Age age = 18;
  if (has_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_age(), output);
  }

  // .google.fhir.stu3.proto.Annotation annotation = 19;
  if (has_annotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_annotation(), output);
  }

  // .google.fhir.stu3.proto.Attachment attachment = 20;
  if (has_attachment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_attachment(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
  if (has_codeable_concept()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_codeable_concept(), output);
  }

  // .google.fhir.stu3.proto.Coding coding = 22;
  if (has_coding()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->_internal_coding(), output);
  }

  // .google.fhir.stu3.proto.ContactPoint contact_point = 23;
  if (has_contact_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->_internal_contact_point(), output);
  }

  // .google.fhir.stu3.proto.Count count = 24;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->_internal_count(), output);
  }

  // .google.fhir.stu3.proto.Distance distance = 25;
  if (has_distance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->_internal_distance(), output);
  }

  // .google.fhir.stu3.proto.Duration duration = 26;
  if (has_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->_internal_duration(), output);
  }

  // .google.fhir.stu3.proto.HumanName human_name = 27;
  if (has_human_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->_internal_human_name(), output);
  }

  // .google.fhir.stu3.proto.Identifier identifier = 28;
  if (has_identifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, this->_internal_identifier(), output);
  }

  // .google.fhir.stu3.proto.Money money = 29;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, this->_internal_money(), output);
  }

  // .google.fhir.stu3.proto.Period period = 30;
  if (has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, this->_internal_period(), output);
  }

  // .google.fhir.stu3.proto.Quantity quantity = 31;
  if (has_quantity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, this->_internal_quantity(), output);
  }

  // .google.fhir.stu3.proto.Range range = 32;
  if (has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32, this->_internal_range(), output);
  }

  // .google.fhir.stu3.proto.Ratio ratio = 33;
  if (has_ratio()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33, this->_internal_ratio(), output);
  }

  // .google.fhir.stu3.proto.Reference reference = 34;
  if (has_reference()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      34, this->_internal_reference(), output);
  }

  // .google.fhir.stu3.proto.SampledData sampled_data = 35;
  if (has_sampled_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      35, this->_internal_sampled_data(), output);
  }

  // .google.fhir.stu3.proto.Signature signature = 36;
  if (has_signature()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      36, this->_internal_signature(), output);
  }

  // .google.fhir.stu3.proto.Timing timing = 37;
  if (has_timing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      37, this->_internal_timing(), output);
  }

  // .google.fhir.stu3.proto.Meta meta = 38;
  if (has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      38, this->_internal_meta(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.ElementDefinition.DefaultValue)
}

::google::protobuf::uint8* ElementDefinition_DefaultValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.ElementDefinition.DefaultValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Base64Binary base64_binary = 1;
  if (has_base64_binary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_base64_binary(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Boolean boolean = 2;
  if (has_boolean()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_boolean(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Code code = 3;
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_code(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Date date = 4;
  if (has_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_date(), deterministic, target);
  }

  // .google.fhir.stu3.proto.DateTime date_time = 5;
  if (has_date_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_date_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Decimal decimal = 6;
  if (has_decimal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_decimal(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Id id = 7;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Instant instant = 8;
  if (has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_instant(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Integer integer = 9;
  if (has_integer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_integer(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Markdown markdown = 10;
  if (has_markdown()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_markdown(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Oid oid = 11;
  if (has_oid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_oid(), deterministic, target);
  }

  // .google.fhir.stu3.proto.PositiveInt positive_int = 12;
  if (has_positive_int()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_positive_int(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String string_value = 13[json_name = "string"];
  if (has_string_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_string_value(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Time time = 14;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
  if (has_unsigned_int()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_unsigned_int(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri uri = 16;
  if (has_uri()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_uri(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Address address = 17;
  if (has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_address(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Age age = 18;
  if (has_age()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_age(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Annotation annotation = 19;
  if (has_annotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_annotation(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Attachment attachment = 20;
  if (has_attachment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_attachment(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
  if (has_codeable_concept()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_codeable_concept(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Coding coding = 22;
  if (has_coding()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->_internal_coding(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ContactPoint contact_point = 23;
  if (has_contact_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->_internal_contact_point(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Count count = 24;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->_internal_count(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Distance distance = 25;
  if (has_distance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->_internal_distance(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Duration duration = 26;
  if (has_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, this->_internal_duration(), deterministic, target);
  }

  // .google.fhir.stu3.proto.HumanName human_name = 27;
  if (has_human_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, this->_internal_human_name(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Identifier identifier = 28;
  if (has_identifier()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, this->_internal_identifier(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Money money = 29;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29, this->_internal_money(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Period period = 30;
  if (has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, this->_internal_period(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Quantity quantity = 31;
  if (has_quantity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        31, this->_internal_quantity(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Range range = 32;
  if (has_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        32, this->_internal_range(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Ratio ratio = 33;
  if (has_ratio()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        33, this->_internal_ratio(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference reference = 34;
  if (has_reference()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        34, this->_internal_reference(), deterministic, target);
  }

  // .google.fhir.stu3.proto.SampledData sampled_data = 35;
  if (has_sampled_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        35, this->_internal_sampled_data(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Signature signature = 36;
  if (has_signature()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        36, this->_internal_signature(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Timing timing = 37;
  if (has_timing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        37, this->_internal_timing(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Meta meta = 38;
  if (has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        38, this->_internal_meta(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.ElementDefinition.DefaultValue)
  return target;
}

size_t ElementDefinition_DefaultValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.ElementDefinition.DefaultValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (default_value_case()) {
    // .google.fhir.stu3.proto.Base64Binary base64_binary = 1;
    case kBase64Binary: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.base64_binary_);
      break;
    }
    // .google.fhir.stu3.proto.Boolean boolean = 2;
    case kBoolean: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.boolean_);
      break;
    }
    // .google.fhir.stu3.proto.Code code = 3;
    case kCode: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.code_);
      break;
    }
    // .google.fhir.stu3.proto.Date date = 4;
    case kDate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.date_);
      break;
    }
    // .google.fhir.stu3.proto.DateTime date_time = 5;
    case kDateTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.date_time_);
      break;
    }
    // .google.fhir.stu3.proto.Decimal decimal = 6;
    case kDecimal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.decimal_);
      break;
    }
    // .google.fhir.stu3.proto.Id id = 7;
    case kId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.id_);
      break;
    }
    // .google.fhir.stu3.proto.Instant instant = 8;
    case kInstant: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.instant_);
      break;
    }
    // .google.fhir.stu3.proto.Integer integer = 9;
    case kInteger: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.integer_);
      break;
    }
    // .google.fhir.stu3.proto.Markdown markdown = 10;
    case kMarkdown: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.markdown_);
      break;
    }
    // .google.fhir.stu3.proto.Oid oid = 11;
    case kOid: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.oid_);
      break;
    }
    // .google.fhir.stu3.proto.PositiveInt positive_int = 12;
    case kPositiveInt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.positive_int_);
      break;
    }
    // .google.fhir.stu3.proto.String string_value = 13[json_name = "string"];
    case kStringValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.string_value_);
      break;
    }
    // .google.fhir.stu3.proto.Time time = 14;
    case kTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.time_);
      break;
    }
    // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
    case kUnsignedInt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.unsigned_int_);
      break;
    }
    // .google.fhir.stu3.proto.Uri uri = 16;
    case kUri: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.uri_);
      break;
    }
    // .google.fhir.stu3.proto.Address address = 17;
    case kAddress: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.address_);
      break;
    }
    // .google.fhir.stu3.proto.Age age = 18;
    case kAge: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.age_);
      break;
    }
    // .google.fhir.stu3.proto.Annotation annotation = 19;
    case kAnnotation: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.annotation_);
      break;
    }
    // .google.fhir.stu3.proto.Attachment attachment = 20;
    case kAttachment: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.attachment_);
      break;
    }
    // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
    case kCodeableConcept: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.codeable_concept_);
      break;
    }
    // .google.fhir.stu3.proto.Coding coding = 22;
    case kCoding: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.coding_);
      break;
    }
    // .google.fhir.stu3.proto.ContactPoint contact_point = 23;
    case kContactPoint: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.contact_point_);
      break;
    }
    // .google.fhir.stu3.proto.Count count = 24;
    case kCount: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.count_);
      break;
    }
    // .google.fhir.stu3.proto.Distance distance = 25;
    case kDistance: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.distance_);
      break;
    }
    // .google.fhir.stu3.proto.Duration duration = 26;
    case kDuration: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.duration_);
      break;
    }
    // .google.fhir.stu3.proto.HumanName human_name = 27;
    case kHumanName: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.human_name_);
      break;
    }
    // .google.fhir.stu3.proto.Identifier identifier = 28;
    case kIdentifier: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.identifier_);
      break;
    }
    // .google.fhir.stu3.proto.Money money = 29;
    case kMoney: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.money_);
      break;
    }
    // .google.fhir.stu3.proto.Period period = 30;
    case kPeriod: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.period_);
      break;
    }
    // .google.fhir.stu3.proto.Quantity quantity = 31;
    case kQuantity: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.quantity_);
      break;
    }
    // .google.fhir.stu3.proto.Range range = 32;
    case kRange: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.range_);
      break;
    }
    // .google.fhir.stu3.proto.Ratio ratio = 33;
    case kRatio: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.ratio_);
      break;
    }
    // .google.fhir.stu3.proto.Reference reference = 34;
    case kReference: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.reference_);
      break;
    }
    // .google.fhir.stu3.proto.SampledData sampled_data = 35;
    case kSampledData: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.sampled_data_);
      break;
    }
    // .google.fhir.stu3.proto.Signature signature = 36;
    case kSignature: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.signature_);
      break;
    }
    // .google.fhir.stu3.proto.Timing timing = 37;
    case kTiming: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.timing_);
      break;
    }
    // .google.fhir.stu3.proto.Meta meta = 38;
    case kMeta: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *default_value_.meta_);
      break;
    }
    case DEFAULT_VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ElementDefinition_DefaultValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.ElementDefinition.DefaultValue)
  GOOGLE_DCHECK_NE(&from, this);
  const ElementDefinition_DefaultValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ElementDefinition_DefaultValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.ElementDefinition.DefaultValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.ElementDefinition.DefaultValue)
    MergeFrom(*source);
  }
}

void ElementDefinition_DefaultValue::MergeFrom(const ElementDefinition_DefaultValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.ElementDefinition.DefaultValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.default_value_case()) {
    case kBase64Binary: {
      mutable_base64_binary()->::google::fhir::stu3::proto::Base64Binary::MergeFrom(from.base64_binary());
      break;
    }
    case kBoolean: {
      mutable_boolean()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.boolean());
      break;
    }
    case kCode: {
      mutable_code()->::google::fhir::stu3::proto::Code::MergeFrom(from.code());
      break;
    }
    case kDate: {
      mutable_date()->::google::fhir::stu3::proto::Date::MergeFrom(from.date());
      break;
    }
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kDecimal: {
      mutable_decimal()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.decimal());
      break;
    }
    case kId: {
      mutable_id()->::google::fhir::stu3::proto::Id::MergeFrom(from.id());
      break;
    }
    case kInstant: {
      mutable_instant()->::google::fhir::stu3::proto::Instant::MergeFrom(from.instant());
      break;
    }
    case kInteger: {
      mutable_integer()->::google::fhir::stu3::proto::Integer::MergeFrom(from.integer());
      break;
    }
    case kMarkdown: {
      mutable_markdown()->::google::fhir::stu3::proto::Markdown::MergeFrom(from.markdown());
      break;
    }
    case kOid: {
      mutable_oid()->::google::fhir::stu3::proto::Oid::MergeFrom(from.oid());
      break;
    }
    case kPositiveInt: {
      mutable_positive_int()->::google::fhir::stu3::proto::PositiveInt::MergeFrom(from.positive_int());
      break;
    }
    case kStringValue: {
      mutable_string_value()->::google::fhir::stu3::proto::String::MergeFrom(from.string_value());
      break;
    }
    case kTime: {
      mutable_time()->::google::fhir::stu3::proto::Time::MergeFrom(from.time());
      break;
    }
    case kUnsignedInt: {
      mutable_unsigned_int()->::google::fhir::stu3::proto::UnsignedInt::MergeFrom(from.unsigned_int());
      break;
    }
    case kUri: {
      mutable_uri()->::google::fhir::stu3::proto::Uri::MergeFrom(from.uri());
      break;
    }
    case kAddress: {
      mutable_address()->::google::fhir::stu3::proto::Address::MergeFrom(from.address());
      break;
    }
    case kAge: {
      mutable_age()->::google::fhir::stu3::proto::Age::MergeFrom(from.age());
      break;
    }
    case kAnnotation: {
      mutable_annotation()->::google::fhir::stu3::proto::Annotation::MergeFrom(from.annotation());
      break;
    }
    case kAttachment: {
      mutable_attachment()->::google::fhir::stu3::proto::Attachment::MergeFrom(from.attachment());
      break;
    }
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case kCoding: {
      mutable_coding()->::google::fhir::stu3::proto::Coding::MergeFrom(from.coding());
      break;
    }
    case kContactPoint: {
      mutable_contact_point()->::google::fhir::stu3::proto::ContactPoint::MergeFrom(from.contact_point());
      break;
    }
    case kCount: {
      mutable_count()->::google::fhir::stu3::proto::Count::MergeFrom(from.count());
      break;
    }
    case kDistance: {
      mutable_distance()->::google::fhir::stu3::proto::Distance::MergeFrom(from.distance());
      break;
    }
    case kDuration: {
      mutable_duration()->::google::fhir::stu3::proto::Duration::MergeFrom(from.duration());
      break;
    }
    case kHumanName: {
      mutable_human_name()->::google::fhir::stu3::proto::HumanName::MergeFrom(from.human_name());
      break;
    }
    case kIdentifier: {
      mutable_identifier()->::google::fhir::stu3::proto::Identifier::MergeFrom(from.identifier());
      break;
    }
    case kMoney: {
      mutable_money()->::google::fhir::stu3::proto::Money::MergeFrom(from.money());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case kQuantity: {
      mutable_quantity()->::google::fhir::stu3::proto::Quantity::MergeFrom(from.quantity());
      break;
    }
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case kRatio: {
      mutable_ratio()->::google::fhir::stu3::proto::Ratio::MergeFrom(from.ratio());
      break;
    }
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case kSampledData: {
      mutable_sampled_data()->::google::fhir::stu3::proto::SampledData::MergeFrom(from.sampled_data());
      break;
    }
    case kSignature: {
      mutable_signature()->::google::fhir::stu3::proto::Signature::MergeFrom(from.signature());
      break;
    }
    case kTiming: {
      mutable_timing()->::google::fhir::stu3::proto::Timing::MergeFrom(from.timing());
      break;
    }
    case kMeta: {
      mutable_meta()->::google::fhir::stu3::proto::Meta::MergeFrom(from.meta());
      break;
    }
    case DEFAULT_VALUE_NOT_SET: {
      break;
    }
  }
}

void ElementDefinition_DefaultValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.ElementDefinition.DefaultValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ElementDefinition_DefaultValue::CopyFrom(const ElementDefinition_DefaultValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.ElementDefinition.DefaultValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ElementDefinition_DefaultValue::IsInitialized() const {
  return true;
}

void ElementDefinition_DefaultValue::Swap(ElementDefinition_DefaultValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ElementDefinition_DefaultValue::InternalSwap(ElementDefinition_DefaultValue* other) {
  using std::swap;
  swap(default_value_, other->default_value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ElementDefinition_DefaultValue::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ElementDefinition_Fixed::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.base64_binary_ = const_cast< ::google::fhir::stu3::proto::Base64Binary*>(
      ::google::fhir::stu3::proto::Base64Binary::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.boolean_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.code_ = const_cast< ::google::fhir::stu3::proto::Code*>(
      ::google::fhir::stu3::proto::Code::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.date_ = const_cast< ::google::fhir::stu3::proto::Date*>(
      ::google::fhir::stu3::proto::Date::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.date_time_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.decimal_ = const_cast< ::google::fhir::stu3::proto::Decimal*>(
      ::google::fhir::stu3::proto::Decimal::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.id_ = const_cast< ::google::fhir::stu3::proto::Id*>(
      ::google::fhir::stu3::proto::Id::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.instant_ = const_cast< ::google::fhir::stu3::proto::Instant*>(
      ::google::fhir::stu3::proto::Instant::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.integer_ = const_cast< ::google::fhir::stu3::proto::Integer*>(
      ::google::fhir::stu3::proto::Integer::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.markdown_ = const_cast< ::google::fhir::stu3::proto::Markdown*>(
      ::google::fhir::stu3::proto::Markdown::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.oid_ = const_cast< ::google::fhir::stu3::proto::Oid*>(
      ::google::fhir::stu3::proto::Oid::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.positive_int_ = const_cast< ::google::fhir::stu3::proto::PositiveInt*>(
      ::google::fhir::stu3::proto::PositiveInt::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.string_value_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.time_ = const_cast< ::google::fhir::stu3::proto::Time*>(
      ::google::fhir::stu3::proto::Time::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.unsigned_int_ = const_cast< ::google::fhir::stu3::proto::UnsignedInt*>(
      ::google::fhir::stu3::proto::UnsignedInt::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.uri_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.address_ = const_cast< ::google::fhir::stu3::proto::Address*>(
      ::google::fhir::stu3::proto::Address::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.age_ = const_cast< ::google::fhir::stu3::proto::Age*>(
      ::google::fhir::stu3::proto::Age::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.annotation_ = const_cast< ::google::fhir::stu3::proto::Annotation*>(
      ::google::fhir::stu3::proto::Annotation::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.attachment_ = const_cast< ::google::fhir::stu3::proto::Attachment*>(
      ::google::fhir::stu3::proto::Attachment::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.codeable_concept_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.coding_ = const_cast< ::google::fhir::stu3::proto::Coding*>(
      ::google::fhir::stu3::proto::Coding::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.contact_point_ = const_cast< ::google::fhir::stu3::proto::ContactPoint*>(
      ::google::fhir::stu3::proto::ContactPoint::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.count_ = const_cast< ::google::fhir::stu3::proto::Count*>(
      ::google::fhir::stu3::proto::Count::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.distance_ = const_cast< ::google::fhir::stu3::proto::Distance*>(
      ::google::fhir::stu3::proto::Distance::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.duration_ = const_cast< ::google::fhir::stu3::proto::Duration*>(
      ::google::fhir::stu3::proto::Duration::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.human_name_ = const_cast< ::google::fhir::stu3::proto::HumanName*>(
      ::google::fhir::stu3::proto::HumanName::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.identifier_ = const_cast< ::google::fhir::stu3::proto::Identifier*>(
      ::google::fhir::stu3::proto::Identifier::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.money_ = const_cast< ::google::fhir::stu3::proto::Money*>(
      ::google::fhir::stu3::proto::Money::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.period_ = const_cast< ::google::fhir::stu3::proto::Period*>(
      ::google::fhir::stu3::proto::Period::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.quantity_ = const_cast< ::google::fhir::stu3::proto::Quantity*>(
      ::google::fhir::stu3::proto::Quantity::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.range_ = const_cast< ::google::fhir::stu3::proto::Range*>(
      ::google::fhir::stu3::proto::Range::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.ratio_ = const_cast< ::google::fhir::stu3::proto::Ratio*>(
      ::google::fhir::stu3::proto::Ratio::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.reference_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.sampled_data_ = const_cast< ::google::fhir::stu3::proto::SampledData*>(
      ::google::fhir::stu3::proto::SampledData::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.signature_ = const_cast< ::google::fhir::stu3::proto::Signature*>(
      ::google::fhir::stu3::proto::Signature::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.timing_ = const_cast< ::google::fhir::stu3::proto::Timing*>(
      ::google::fhir::stu3::proto::Timing::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_.meta_ = const_cast< ::google::fhir::stu3::proto::Meta*>(
      ::google::fhir::stu3::proto::Meta::internal_default_instance());
}
void ElementDefinition_Fixed::set_allocated_base64_binary(::google::fhir::stu3::proto::Base64Binary* base64_binary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (base64_binary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      base64_binary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, base64_binary, submessage_arena);
    }
    set_has_base64_binary();
    fixed_.base64_binary_ = base64_binary;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.base64_binary)
}
void ElementDefinition_Fixed::clear_base64_binary() {
  if (has_base64_binary()) {
    delete fixed_.base64_binary_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_boolean(::google::fhir::stu3::proto::Boolean* boolean) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (boolean) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      boolean = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, boolean, submessage_arena);
    }
    set_has_boolean();
    fixed_.boolean_ = boolean;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.boolean)
}
void ElementDefinition_Fixed::clear_boolean() {
  if (has_boolean()) {
    delete fixed_.boolean_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_code(::google::fhir::stu3::proto::Code* code) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (code) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      code = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, code, submessage_arena);
    }
    set_has_code();
    fixed_.code_ = code;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.code)
}
void ElementDefinition_Fixed::clear_code() {
  if (has_code()) {
    delete fixed_.code_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_date(::google::fhir::stu3::proto::Date* date) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (date) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date, submessage_arena);
    }
    set_has_date();
    fixed_.date_ = date;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.date)
}
void ElementDefinition_Fixed::clear_date() {
  if (has_date()) {
    delete fixed_.date_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (date_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date_time, submessage_arena);
    }
    set_has_date_time();
    fixed_.date_time_ = date_time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.date_time)
}
void ElementDefinition_Fixed::clear_date_time() {
  if (has_date_time()) {
    delete fixed_.date_time_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_decimal(::google::fhir::stu3::proto::Decimal* decimal) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (decimal) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      decimal = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, decimal, submessage_arena);
    }
    set_has_decimal();
    fixed_.decimal_ = decimal;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.decimal)
}
void ElementDefinition_Fixed::clear_decimal() {
  if (has_decimal()) {
    delete fixed_.decimal_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_id(::google::fhir::stu3::proto::Id* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    set_has_id();
    fixed_.id_ = id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.id)
}
void ElementDefinition_Fixed::clear_id() {
  if (has_id()) {
    delete fixed_.id_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_instant(::google::fhir::stu3::proto::Instant* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    set_has_instant();
    fixed_.instant_ = instant;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.instant)
}
void ElementDefinition_Fixed::clear_instant() {
  if (has_instant()) {
    delete fixed_.instant_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_integer(::google::fhir::stu3::proto::Integer* integer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (integer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      integer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, integer, submessage_arena);
    }
    set_has_integer();
    fixed_.integer_ = integer;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.integer)
}
void ElementDefinition_Fixed::clear_integer() {
  if (has_integer()) {
    delete fixed_.integer_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_markdown(::google::fhir::stu3::proto::Markdown* markdown) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (markdown) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      markdown = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, markdown, submessage_arena);
    }
    set_has_markdown();
    fixed_.markdown_ = markdown;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.markdown)
}
void ElementDefinition_Fixed::clear_markdown() {
  if (has_markdown()) {
    delete fixed_.markdown_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_oid(::google::fhir::stu3::proto::Oid* oid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (oid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      oid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, oid, submessage_arena);
    }
    set_has_oid();
    fixed_.oid_ = oid;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.oid)
}
void ElementDefinition_Fixed::clear_oid() {
  if (has_oid()) {
    delete fixed_.oid_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_positive_int(::google::fhir::stu3::proto::PositiveInt* positive_int) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (positive_int) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      positive_int = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, positive_int, submessage_arena);
    }
    set_has_positive_int();
    fixed_.positive_int_ = positive_int;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.positive_int)
}
void ElementDefinition_Fixed::clear_positive_int() {
  if (has_positive_int()) {
    delete fixed_.positive_int_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_string_value(::google::fhir::stu3::proto::String* string_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (string_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      string_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, string_value, submessage_arena);
    }
    set_has_string_value();
    fixed_.string_value_ = string_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.string_value)
}
void ElementDefinition_Fixed::clear_string_value() {
  if (has_string_value()) {
    delete fixed_.string_value_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_time(::google::fhir::stu3::proto::Time* time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time, submessage_arena);
    }
    set_has_time();
    fixed_.time_ = time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.time)
}
void ElementDefinition_Fixed::clear_time() {
  if (has_time()) {
    delete fixed_.time_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_unsigned_int(::google::fhir::stu3::proto::UnsignedInt* unsigned_int) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (unsigned_int) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      unsigned_int = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, unsigned_int, submessage_arena);
    }
    set_has_unsigned_int();
    fixed_.unsigned_int_ = unsigned_int;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.unsigned_int)
}
void ElementDefinition_Fixed::clear_unsigned_int() {
  if (has_unsigned_int()) {
    delete fixed_.unsigned_int_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_uri(::google::fhir::stu3::proto::Uri* uri) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (uri) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      uri = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uri, submessage_arena);
    }
    set_has_uri();
    fixed_.uri_ = uri;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.uri)
}
void ElementDefinition_Fixed::clear_uri() {
  if (has_uri()) {
    delete fixed_.uri_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_address(::google::fhir::stu3::proto::Address* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    set_has_address();
    fixed_.address_ = address;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.address)
}
void ElementDefinition_Fixed::clear_address() {
  if (has_address()) {
    delete fixed_.address_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_age(::google::fhir::stu3::proto::Age* age) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (age) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      age = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, age, submessage_arena);
    }
    set_has_age();
    fixed_.age_ = age;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.age)
}
void ElementDefinition_Fixed::clear_age() {
  if (has_age()) {
    delete fixed_.age_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_annotation(::google::fhir::stu3::proto::Annotation* annotation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (annotation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      annotation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, annotation, submessage_arena);
    }
    set_has_annotation();
    fixed_.annotation_ = annotation;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.annotation)
}
void ElementDefinition_Fixed::clear_annotation() {
  if (has_annotation()) {
    delete fixed_.annotation_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_attachment(::google::fhir::stu3::proto::Attachment* attachment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (attachment) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      attachment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, attachment, submessage_arena);
    }
    set_has_attachment();
    fixed_.attachment_ = attachment;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.attachment)
}
void ElementDefinition_Fixed::clear_attachment() {
  if (has_attachment()) {
    delete fixed_.attachment_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (codeable_concept) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      codeable_concept = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, codeable_concept, submessage_arena);
    }
    set_has_codeable_concept();
    fixed_.codeable_concept_ = codeable_concept;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.codeable_concept)
}
void ElementDefinition_Fixed::clear_codeable_concept() {
  if (has_codeable_concept()) {
    delete fixed_.codeable_concept_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_coding(::google::fhir::stu3::proto::Coding* coding) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (coding) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      coding = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, coding, submessage_arena);
    }
    set_has_coding();
    fixed_.coding_ = coding;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.coding)
}
void ElementDefinition_Fixed::clear_coding() {
  if (has_coding()) {
    delete fixed_.coding_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_contact_point(::google::fhir::stu3::proto::ContactPoint* contact_point) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (contact_point) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      contact_point = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, contact_point, submessage_arena);
    }
    set_has_contact_point();
    fixed_.contact_point_ = contact_point;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.contact_point)
}
void ElementDefinition_Fixed::clear_contact_point() {
  if (has_contact_point()) {
    delete fixed_.contact_point_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_count(::google::fhir::stu3::proto::Count* count) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (count) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      count = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, count, submessage_arena);
    }
    set_has_count();
    fixed_.count_ = count;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.count)
}
void ElementDefinition_Fixed::clear_count() {
  if (has_count()) {
    delete fixed_.count_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_distance(::google::fhir::stu3::proto::Distance* distance) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (distance) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      distance = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, distance, submessage_arena);
    }
    set_has_distance();
    fixed_.distance_ = distance;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.distance)
}
void ElementDefinition_Fixed::clear_distance() {
  if (has_distance()) {
    delete fixed_.distance_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_duration(::google::fhir::stu3::proto::Duration* duration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (duration) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      duration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, duration, submessage_arena);
    }
    set_has_duration();
    fixed_.duration_ = duration;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.duration)
}
void ElementDefinition_Fixed::clear_duration() {
  if (has_duration()) {
    delete fixed_.duration_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_human_name(::google::fhir::stu3::proto::HumanName* human_name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (human_name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      human_name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, human_name, submessage_arena);
    }
    set_has_human_name();
    fixed_.human_name_ = human_name;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.human_name)
}
void ElementDefinition_Fixed::clear_human_name() {
  if (has_human_name()) {
    delete fixed_.human_name_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_identifier(::google::fhir::stu3::proto::Identifier* identifier) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (identifier) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      identifier = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, identifier, submessage_arena);
    }
    set_has_identifier();
    fixed_.identifier_ = identifier;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.identifier)
}
void ElementDefinition_Fixed::clear_identifier() {
  if (has_identifier()) {
    delete fixed_.identifier_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_money(::google::fhir::stu3::proto::Money* money) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (money) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      money = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, money, submessage_arena);
    }
    set_has_money();
    fixed_.money_ = money;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.money)
}
void ElementDefinition_Fixed::clear_money() {
  if (has_money()) {
    delete fixed_.money_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_period(::google::fhir::stu3::proto::Period* period) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (period) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      period = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, period, submessage_arena);
    }
    set_has_period();
    fixed_.period_ = period;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.period)
}
void ElementDefinition_Fixed::clear_period() {
  if (has_period()) {
    delete fixed_.period_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_quantity(::google::fhir::stu3::proto::Quantity* quantity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (quantity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      quantity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, quantity, submessage_arena);
    }
    set_has_quantity();
    fixed_.quantity_ = quantity;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.quantity)
}
void ElementDefinition_Fixed::clear_quantity() {
  if (has_quantity()) {
    delete fixed_.quantity_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_range(::google::fhir::stu3::proto::Range* range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (range) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, range, submessage_arena);
    }
    set_has_range();
    fixed_.range_ = range;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.range)
}
void ElementDefinition_Fixed::clear_range() {
  if (has_range()) {
    delete fixed_.range_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_ratio(::google::fhir::stu3::proto::Ratio* ratio) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (ratio) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ratio = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ratio, submessage_arena);
    }
    set_has_ratio();
    fixed_.ratio_ = ratio;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.ratio)
}
void ElementDefinition_Fixed::clear_ratio() {
  if (has_ratio()) {
    delete fixed_.ratio_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_reference(::google::fhir::stu3::proto::Reference* reference) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (reference) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reference = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reference, submessage_arena);
    }
    set_has_reference();
    fixed_.reference_ = reference;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.reference)
}
void ElementDefinition_Fixed::clear_reference() {
  if (has_reference()) {
    delete fixed_.reference_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_sampled_data(::google::fhir::stu3::proto::SampledData* sampled_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (sampled_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sampled_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sampled_data, submessage_arena);
    }
    set_has_sampled_data();
    fixed_.sampled_data_ = sampled_data;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.sampled_data)
}
void ElementDefinition_Fixed::clear_sampled_data() {
  if (has_sampled_data()) {
    delete fixed_.sampled_data_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_signature(::google::fhir::stu3::proto::Signature* signature) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (signature) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      signature = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, signature, submessage_arena);
    }
    set_has_signature();
    fixed_.signature_ = signature;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.signature)
}
void ElementDefinition_Fixed::clear_signature() {
  if (has_signature()) {
    delete fixed_.signature_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_timing(::google::fhir::stu3::proto::Timing* timing) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (timing) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timing = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timing, submessage_arena);
    }
    set_has_timing();
    fixed_.timing_ = timing;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.timing)
}
void ElementDefinition_Fixed::clear_timing() {
  if (has_timing()) {
    delete fixed_.timing_;
    clear_has_fixed();
  }
}
void ElementDefinition_Fixed::set_allocated_meta(::google::fhir::stu3::proto::Meta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fixed();
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    set_has_meta();
    fixed_.meta_ = meta;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Fixed.meta)
}
void ElementDefinition_Fixed::clear_meta() {
  if (has_meta()) {
    delete fixed_.meta_;
    clear_has_fixed();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ElementDefinition_Fixed::kBase64BinaryFieldNumber;
const int ElementDefinition_Fixed::kBooleanFieldNumber;
const int ElementDefinition_Fixed::kCodeFieldNumber;
const int ElementDefinition_Fixed::kDateFieldNumber;
const int ElementDefinition_Fixed::kDateTimeFieldNumber;
const int ElementDefinition_Fixed::kDecimalFieldNumber;
const int ElementDefinition_Fixed::kIdFieldNumber;
const int ElementDefinition_Fixed::kInstantFieldNumber;
const int ElementDefinition_Fixed::kIntegerFieldNumber;
const int ElementDefinition_Fixed::kMarkdownFieldNumber;
const int ElementDefinition_Fixed::kOidFieldNumber;
const int ElementDefinition_Fixed::kPositiveIntFieldNumber;
const int ElementDefinition_Fixed::kStringValueFieldNumber;
const int ElementDefinition_Fixed::kTimeFieldNumber;
const int ElementDefinition_Fixed::kUnsignedIntFieldNumber;
const int ElementDefinition_Fixed::kUriFieldNumber;
const int ElementDefinition_Fixed::kAddressFieldNumber;
const int ElementDefinition_Fixed::kAgeFieldNumber;
const int ElementDefinition_Fixed::kAnnotationFieldNumber;
const int ElementDefinition_Fixed::kAttachmentFieldNumber;
const int ElementDefinition_Fixed::kCodeableConceptFieldNumber;
const int ElementDefinition_Fixed::kCodingFieldNumber;
const int ElementDefinition_Fixed::kContactPointFieldNumber;
const int ElementDefinition_Fixed::kCountFieldNumber;
const int ElementDefinition_Fixed::kDistanceFieldNumber;
const int ElementDefinition_Fixed::kDurationFieldNumber;
const int ElementDefinition_Fixed::kHumanNameFieldNumber;
const int ElementDefinition_Fixed::kIdentifierFieldNumber;
const int ElementDefinition_Fixed::kMoneyFieldNumber;
const int ElementDefinition_Fixed::kPeriodFieldNumber;
const int ElementDefinition_Fixed::kQuantityFieldNumber;
const int ElementDefinition_Fixed::kRangeFieldNumber;
const int ElementDefinition_Fixed::kRatioFieldNumber;
const int ElementDefinition_Fixed::kReferenceFieldNumber;
const int ElementDefinition_Fixed::kSampledDataFieldNumber;
const int ElementDefinition_Fixed::kSignatureFieldNumber;
const int ElementDefinition_Fixed::kTimingFieldNumber;
const int ElementDefinition_Fixed::kMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ElementDefinition_Fixed::ElementDefinition_Fixed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_Fixed.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.ElementDefinition.Fixed)
}
ElementDefinition_Fixed::ElementDefinition_Fixed(const ElementDefinition_Fixed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_fixed();
  switch (from.fixed_case()) {
    case kBase64Binary: {
      mutable_base64_binary()->::google::fhir::stu3::proto::Base64Binary::MergeFrom(from.base64_binary());
      break;
    }
    case kBoolean: {
      mutable_boolean()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.boolean());
      break;
    }
    case kCode: {
      mutable_code()->::google::fhir::stu3::proto::Code::MergeFrom(from.code());
      break;
    }
    case kDate: {
      mutable_date()->::google::fhir::stu3::proto::Date::MergeFrom(from.date());
      break;
    }
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kDecimal: {
      mutable_decimal()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.decimal());
      break;
    }
    case kId: {
      mutable_id()->::google::fhir::stu3::proto::Id::MergeFrom(from.id());
      break;
    }
    case kInstant: {
      mutable_instant()->::google::fhir::stu3::proto::Instant::MergeFrom(from.instant());
      break;
    }
    case kInteger: {
      mutable_integer()->::google::fhir::stu3::proto::Integer::MergeFrom(from.integer());
      break;
    }
    case kMarkdown: {
      mutable_markdown()->::google::fhir::stu3::proto::Markdown::MergeFrom(from.markdown());
      break;
    }
    case kOid: {
      mutable_oid()->::google::fhir::stu3::proto::Oid::MergeFrom(from.oid());
      break;
    }
    case kPositiveInt: {
      mutable_positive_int()->::google::fhir::stu3::proto::PositiveInt::MergeFrom(from.positive_int());
      break;
    }
    case kStringValue: {
      mutable_string_value()->::google::fhir::stu3::proto::String::MergeFrom(from.string_value());
      break;
    }
    case kTime: {
      mutable_time()->::google::fhir::stu3::proto::Time::MergeFrom(from.time());
      break;
    }
    case kUnsignedInt: {
      mutable_unsigned_int()->::google::fhir::stu3::proto::UnsignedInt::MergeFrom(from.unsigned_int());
      break;
    }
    case kUri: {
      mutable_uri()->::google::fhir::stu3::proto::Uri::MergeFrom(from.uri());
      break;
    }
    case kAddress: {
      mutable_address()->::google::fhir::stu3::proto::Address::MergeFrom(from.address());
      break;
    }
    case kAge: {
      mutable_age()->::google::fhir::stu3::proto::Age::MergeFrom(from.age());
      break;
    }
    case kAnnotation: {
      mutable_annotation()->::google::fhir::stu3::proto::Annotation::MergeFrom(from.annotation());
      break;
    }
    case kAttachment: {
      mutable_attachment()->::google::fhir::stu3::proto::Attachment::MergeFrom(from.attachment());
      break;
    }
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case kCoding: {
      mutable_coding()->::google::fhir::stu3::proto::Coding::MergeFrom(from.coding());
      break;
    }
    case kContactPoint: {
      mutable_contact_point()->::google::fhir::stu3::proto::ContactPoint::MergeFrom(from.contact_point());
      break;
    }
    case kCount: {
      mutable_count()->::google::fhir::stu3::proto::Count::MergeFrom(from.count());
      break;
    }
    case kDistance: {
      mutable_distance()->::google::fhir::stu3::proto::Distance::MergeFrom(from.distance());
      break;
    }
    case kDuration: {
      mutable_duration()->::google::fhir::stu3::proto::Duration::MergeFrom(from.duration());
      break;
    }
    case kHumanName: {
      mutable_human_name()->::google::fhir::stu3::proto::HumanName::MergeFrom(from.human_name());
      break;
    }
    case kIdentifier: {
      mutable_identifier()->::google::fhir::stu3::proto::Identifier::MergeFrom(from.identifier());
      break;
    }
    case kMoney: {
      mutable_money()->::google::fhir::stu3::proto::Money::MergeFrom(from.money());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case kQuantity: {
      mutable_quantity()->::google::fhir::stu3::proto::Quantity::MergeFrom(from.quantity());
      break;
    }
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case kRatio: {
      mutable_ratio()->::google::fhir::stu3::proto::Ratio::MergeFrom(from.ratio());
      break;
    }
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case kSampledData: {
      mutable_sampled_data()->::google::fhir::stu3::proto::SampledData::MergeFrom(from.sampled_data());
      break;
    }
    case kSignature: {
      mutable_signature()->::google::fhir::stu3::proto::Signature::MergeFrom(from.signature());
      break;
    }
    case kTiming: {
      mutable_timing()->::google::fhir::stu3::proto::Timing::MergeFrom(from.timing());
      break;
    }
    case kMeta: {
      mutable_meta()->::google::fhir::stu3::proto::Meta::MergeFrom(from.meta());
      break;
    }
    case FIXED_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.ElementDefinition.Fixed)
}

void ElementDefinition_Fixed::SharedCtor() {
  clear_has_fixed();
}

ElementDefinition_Fixed::~ElementDefinition_Fixed() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.ElementDefinition.Fixed)
  SharedDtor();
}

void ElementDefinition_Fixed::SharedDtor() {
  if (has_fixed()) {
    clear_fixed();
  }
}

void ElementDefinition_Fixed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ElementDefinition_Fixed::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ElementDefinition_Fixed& ElementDefinition_Fixed::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_Fixed.base);
  return *internal_default_instance();
}


void ElementDefinition_Fixed::clear_fixed() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.proto.ElementDefinition.Fixed)
  switch (fixed_case()) {
    case kBase64Binary: {
      delete fixed_.base64_binary_;
      break;
    }
    case kBoolean: {
      delete fixed_.boolean_;
      break;
    }
    case kCode: {
      delete fixed_.code_;
      break;
    }
    case kDate: {
      delete fixed_.date_;
      break;
    }
    case kDateTime: {
      delete fixed_.date_time_;
      break;
    }
    case kDecimal: {
      delete fixed_.decimal_;
      break;
    }
    case kId: {
      delete fixed_.id_;
      break;
    }
    case kInstant: {
      delete fixed_.instant_;
      break;
    }
    case kInteger: {
      delete fixed_.integer_;
      break;
    }
    case kMarkdown: {
      delete fixed_.markdown_;
      break;
    }
    case kOid: {
      delete fixed_.oid_;
      break;
    }
    case kPositiveInt: {
      delete fixed_.positive_int_;
      break;
    }
    case kStringValue: {
      delete fixed_.string_value_;
      break;
    }
    case kTime: {
      delete fixed_.time_;
      break;
    }
    case kUnsignedInt: {
      delete fixed_.unsigned_int_;
      break;
    }
    case kUri: {
      delete fixed_.uri_;
      break;
    }
    case kAddress: {
      delete fixed_.address_;
      break;
    }
    case kAge: {
      delete fixed_.age_;
      break;
    }
    case kAnnotation: {
      delete fixed_.annotation_;
      break;
    }
    case kAttachment: {
      delete fixed_.attachment_;
      break;
    }
    case kCodeableConcept: {
      delete fixed_.codeable_concept_;
      break;
    }
    case kCoding: {
      delete fixed_.coding_;
      break;
    }
    case kContactPoint: {
      delete fixed_.contact_point_;
      break;
    }
    case kCount: {
      delete fixed_.count_;
      break;
    }
    case kDistance: {
      delete fixed_.distance_;
      break;
    }
    case kDuration: {
      delete fixed_.duration_;
      break;
    }
    case kHumanName: {
      delete fixed_.human_name_;
      break;
    }
    case kIdentifier: {
      delete fixed_.identifier_;
      break;
    }
    case kMoney: {
      delete fixed_.money_;
      break;
    }
    case kPeriod: {
      delete fixed_.period_;
      break;
    }
    case kQuantity: {
      delete fixed_.quantity_;
      break;
    }
    case kRange: {
      delete fixed_.range_;
      break;
    }
    case kRatio: {
      delete fixed_.ratio_;
      break;
    }
    case kReference: {
      delete fixed_.reference_;
      break;
    }
    case kSampledData: {
      delete fixed_.sampled_data_;
      break;
    }
    case kSignature: {
      delete fixed_.signature_;
      break;
    }
    case kTiming: {
      delete fixed_.timing_;
      break;
    }
    case kMeta: {
      delete fixed_.meta_;
      break;
    }
    case FIXED_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FIXED_NOT_SET;
}


void ElementDefinition_Fixed::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.ElementDefinition.Fixed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_fixed();
  _internal_metadata_.Clear();
}

bool ElementDefinition_Fixed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.ElementDefinition.Fixed)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Base64Binary base64_binary = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base64_binary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Boolean boolean = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_boolean()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Code code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Date date = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DateTime date_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Decimal decimal = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_decimal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Id id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Instant instant = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Integer integer = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_integer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Markdown markdown = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_markdown()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Oid oid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_oid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.PositiveInt positive_int = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_positive_int()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String string_value = 13[json_name = "string"];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_string_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Time time = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_unsigned_int()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri uri = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uri()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Address address = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Age age = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_age()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Annotation annotation = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_annotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Attachment attachment = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_attachment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_codeable_concept()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Coding coding = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_coding()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ContactPoint contact_point = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_contact_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Count count = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_count()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Distance distance = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_distance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Duration duration = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.HumanName human_name = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_human_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Identifier identifier = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Money money = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_money()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Period period = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Quantity quantity = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_quantity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Range range = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Ratio ratio = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ratio()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference reference = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.SampledData sampled_data = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 282 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sampled_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Signature signature = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 290 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Timing timing = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 298 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Meta meta = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 306 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.ElementDefinition.Fixed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.ElementDefinition.Fixed)
  return false;
#undef DO_
}

void ElementDefinition_Fixed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.ElementDefinition.Fixed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Base64Binary base64_binary = 1;
  if (has_base64_binary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_base64_binary(), output);
  }

  // .google.fhir.stu3.proto.Boolean boolean = 2;
  if (has_boolean()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_boolean(), output);
  }

  // .google.fhir.stu3.proto.Code code = 3;
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_code(), output);
  }

  // .google.fhir.stu3.proto.Date date = 4;
  if (has_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_date(), output);
  }

  // .google.fhir.stu3.proto.DateTime date_time = 5;
  if (has_date_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_date_time(), output);
  }

  // .google.fhir.stu3.proto.Decimal decimal = 6;
  if (has_decimal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_decimal(), output);
  }

  // .google.fhir.stu3.proto.Id id = 7;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_id(), output);
  }

  // .google.fhir.stu3.proto.Instant instant = 8;
  if (has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_instant(), output);
  }

  // .google.fhir.stu3.proto.Integer integer = 9;
  if (has_integer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_integer(), output);
  }

  // .google.fhir.stu3.proto.Markdown markdown = 10;
  if (has_markdown()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_markdown(), output);
  }

  // .google.fhir.stu3.proto.Oid oid = 11;
  if (has_oid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_oid(), output);
  }

  // .google.fhir.stu3.proto.PositiveInt positive_int = 12;
  if (has_positive_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_positive_int(), output);
  }

  // .google.fhir.stu3.proto.String string_value = 13[json_name = "string"];
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_string_value(), output);
  }

  // .google.fhir.stu3.proto.Time time = 14;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_time(), output);
  }

  // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
  if (has_unsigned_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_unsigned_int(), output);
  }

  // .google.fhir.stu3.proto.Uri uri = 16;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_uri(), output);
  }

  // .google.fhir.stu3.proto.Address address = 17;
  if (has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_address(), output);
  }

  // .google.fhir.stu3.proto.Age age = 18;
  if (has_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_age(), output);
  }

  // .google.fhir.stu3.proto.Annotation annotation = 19;
  if (has_annotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_annotation(), output);
  }

  // .google.fhir.stu3.proto.Attachment attachment = 20;
  if (has_attachment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_attachment(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
  if (has_codeable_concept()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_codeable_concept(), output);
  }

  // .google.fhir.stu3.proto.Coding coding = 22;
  if (has_coding()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->_internal_coding(), output);
  }

  // .google.fhir.stu3.proto.ContactPoint contact_point = 23;
  if (has_contact_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->_internal_contact_point(), output);
  }

  // .google.fhir.stu3.proto.Count count = 24;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->_internal_count(), output);
  }

  // .google.fhir.stu3.proto.Distance distance = 25;
  if (has_distance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->_internal_distance(), output);
  }

  // .google.fhir.stu3.proto.Duration duration = 26;
  if (has_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->_internal_duration(), output);
  }

  // .google.fhir.stu3.proto.HumanName human_name = 27;
  if (has_human_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->_internal_human_name(), output);
  }

  // .google.fhir.stu3.proto.Identifier identifier = 28;
  if (has_identifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, this->_internal_identifier(), output);
  }

  // .google.fhir.stu3.proto.Money money = 29;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, this->_internal_money(), output);
  }

  // .google.fhir.stu3.proto.Period period = 30;
  if (has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, this->_internal_period(), output);
  }

  // .google.fhir.stu3.proto.Quantity quantity = 31;
  if (has_quantity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, this->_internal_quantity(), output);
  }

  // .google.fhir.stu3.proto.Range range = 32;
  if (has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32, this->_internal_range(), output);
  }

  // .google.fhir.stu3.proto.Ratio ratio = 33;
  if (has_ratio()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33, this->_internal_ratio(), output);
  }

  // .google.fhir.stu3.proto.Reference reference = 34;
  if (has_reference()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      34, this->_internal_reference(), output);
  }

  // .google.fhir.stu3.proto.SampledData sampled_data = 35;
  if (has_sampled_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      35, this->_internal_sampled_data(), output);
  }

  // .google.fhir.stu3.proto.Signature signature = 36;
  if (has_signature()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      36, this->_internal_signature(), output);
  }

  // .google.fhir.stu3.proto.Timing timing = 37;
  if (has_timing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      37, this->_internal_timing(), output);
  }

  // .google.fhir.stu3.proto.Meta meta = 38;
  if (has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      38, this->_internal_meta(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.ElementDefinition.Fixed)
}

::google::protobuf::uint8* ElementDefinition_Fixed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.ElementDefinition.Fixed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Base64Binary base64_binary = 1;
  if (has_base64_binary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_base64_binary(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Boolean boolean = 2;
  if (has_boolean()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_boolean(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Code code = 3;
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_code(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Date date = 4;
  if (has_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_date(), deterministic, target);
  }

  // .google.fhir.stu3.proto.DateTime date_time = 5;
  if (has_date_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_date_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Decimal decimal = 6;
  if (has_decimal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_decimal(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Id id = 7;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Instant instant = 8;
  if (has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_instant(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Integer integer = 9;
  if (has_integer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_integer(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Markdown markdown = 10;
  if (has_markdown()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_markdown(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Oid oid = 11;
  if (has_oid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_oid(), deterministic, target);
  }

  // .google.fhir.stu3.proto.PositiveInt positive_int = 12;
  if (has_positive_int()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_positive_int(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String string_value = 13[json_name = "string"];
  if (has_string_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_string_value(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Time time = 14;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
  if (has_unsigned_int()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_unsigned_int(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri uri = 16;
  if (has_uri()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_uri(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Address address = 17;
  if (has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_address(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Age age = 18;
  if (has_age()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_age(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Annotation annotation = 19;
  if (has_annotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_annotation(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Attachment attachment = 20;
  if (has_attachment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_attachment(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
  if (has_codeable_concept()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_codeable_concept(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Coding coding = 22;
  if (has_coding()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->_internal_coding(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ContactPoint contact_point = 23;
  if (has_contact_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->_internal_contact_point(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Count count = 24;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->_internal_count(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Distance distance = 25;
  if (has_distance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->_internal_distance(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Duration duration = 26;
  if (has_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, this->_internal_duration(), deterministic, target);
  }

  // .google.fhir.stu3.proto.HumanName human_name = 27;
  if (has_human_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, this->_internal_human_name(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Identifier identifier = 28;
  if (has_identifier()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, this->_internal_identifier(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Money money = 29;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29, this->_internal_money(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Period period = 30;
  if (has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, this->_internal_period(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Quantity quantity = 31;
  if (has_quantity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        31, this->_internal_quantity(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Range range = 32;
  if (has_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        32, this->_internal_range(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Ratio ratio = 33;
  if (has_ratio()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        33, this->_internal_ratio(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference reference = 34;
  if (has_reference()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        34, this->_internal_reference(), deterministic, target);
  }

  // .google.fhir.stu3.proto.SampledData sampled_data = 35;
  if (has_sampled_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        35, this->_internal_sampled_data(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Signature signature = 36;
  if (has_signature()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        36, this->_internal_signature(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Timing timing = 37;
  if (has_timing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        37, this->_internal_timing(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Meta meta = 38;
  if (has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        38, this->_internal_meta(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.ElementDefinition.Fixed)
  return target;
}

size_t ElementDefinition_Fixed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.ElementDefinition.Fixed)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (fixed_case()) {
    // .google.fhir.stu3.proto.Base64Binary base64_binary = 1;
    case kBase64Binary: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.base64_binary_);
      break;
    }
    // .google.fhir.stu3.proto.Boolean boolean = 2;
    case kBoolean: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.boolean_);
      break;
    }
    // .google.fhir.stu3.proto.Code code = 3;
    case kCode: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.code_);
      break;
    }
    // .google.fhir.stu3.proto.Date date = 4;
    case kDate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.date_);
      break;
    }
    // .google.fhir.stu3.proto.DateTime date_time = 5;
    case kDateTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.date_time_);
      break;
    }
    // .google.fhir.stu3.proto.Decimal decimal = 6;
    case kDecimal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.decimal_);
      break;
    }
    // .google.fhir.stu3.proto.Id id = 7;
    case kId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.id_);
      break;
    }
    // .google.fhir.stu3.proto.Instant instant = 8;
    case kInstant: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.instant_);
      break;
    }
    // .google.fhir.stu3.proto.Integer integer = 9;
    case kInteger: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.integer_);
      break;
    }
    // .google.fhir.stu3.proto.Markdown markdown = 10;
    case kMarkdown: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.markdown_);
      break;
    }
    // .google.fhir.stu3.proto.Oid oid = 11;
    case kOid: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.oid_);
      break;
    }
    // .google.fhir.stu3.proto.PositiveInt positive_int = 12;
    case kPositiveInt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.positive_int_);
      break;
    }
    // .google.fhir.stu3.proto.String string_value = 13[json_name = "string"];
    case kStringValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.string_value_);
      break;
    }
    // .google.fhir.stu3.proto.Time time = 14;
    case kTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.time_);
      break;
    }
    // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
    case kUnsignedInt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.unsigned_int_);
      break;
    }
    // .google.fhir.stu3.proto.Uri uri = 16;
    case kUri: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.uri_);
      break;
    }
    // .google.fhir.stu3.proto.Address address = 17;
    case kAddress: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.address_);
      break;
    }
    // .google.fhir.stu3.proto.Age age = 18;
    case kAge: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.age_);
      break;
    }
    // .google.fhir.stu3.proto.Annotation annotation = 19;
    case kAnnotation: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.annotation_);
      break;
    }
    // .google.fhir.stu3.proto.Attachment attachment = 20;
    case kAttachment: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.attachment_);
      break;
    }
    // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
    case kCodeableConcept: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.codeable_concept_);
      break;
    }
    // .google.fhir.stu3.proto.Coding coding = 22;
    case kCoding: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.coding_);
      break;
    }
    // .google.fhir.stu3.proto.ContactPoint contact_point = 23;
    case kContactPoint: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.contact_point_);
      break;
    }
    // .google.fhir.stu3.proto.Count count = 24;
    case kCount: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.count_);
      break;
    }
    // .google.fhir.stu3.proto.Distance distance = 25;
    case kDistance: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.distance_);
      break;
    }
    // .google.fhir.stu3.proto.Duration duration = 26;
    case kDuration: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.duration_);
      break;
    }
    // .google.fhir.stu3.proto.HumanName human_name = 27;
    case kHumanName: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.human_name_);
      break;
    }
    // .google.fhir.stu3.proto.Identifier identifier = 28;
    case kIdentifier: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.identifier_);
      break;
    }
    // .google.fhir.stu3.proto.Money money = 29;
    case kMoney: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.money_);
      break;
    }
    // .google.fhir.stu3.proto.Period period = 30;
    case kPeriod: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.period_);
      break;
    }
    // .google.fhir.stu3.proto.Quantity quantity = 31;
    case kQuantity: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.quantity_);
      break;
    }
    // .google.fhir.stu3.proto.Range range = 32;
    case kRange: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.range_);
      break;
    }
    // .google.fhir.stu3.proto.Ratio ratio = 33;
    case kRatio: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.ratio_);
      break;
    }
    // .google.fhir.stu3.proto.Reference reference = 34;
    case kReference: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.reference_);
      break;
    }
    // .google.fhir.stu3.proto.SampledData sampled_data = 35;
    case kSampledData: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.sampled_data_);
      break;
    }
    // .google.fhir.stu3.proto.Signature signature = 36;
    case kSignature: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.signature_);
      break;
    }
    // .google.fhir.stu3.proto.Timing timing = 37;
    case kTiming: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.timing_);
      break;
    }
    // .google.fhir.stu3.proto.Meta meta = 38;
    case kMeta: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fixed_.meta_);
      break;
    }
    case FIXED_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ElementDefinition_Fixed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.ElementDefinition.Fixed)
  GOOGLE_DCHECK_NE(&from, this);
  const ElementDefinition_Fixed* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ElementDefinition_Fixed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.ElementDefinition.Fixed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.ElementDefinition.Fixed)
    MergeFrom(*source);
  }
}

void ElementDefinition_Fixed::MergeFrom(const ElementDefinition_Fixed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.ElementDefinition.Fixed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.fixed_case()) {
    case kBase64Binary: {
      mutable_base64_binary()->::google::fhir::stu3::proto::Base64Binary::MergeFrom(from.base64_binary());
      break;
    }
    case kBoolean: {
      mutable_boolean()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.boolean());
      break;
    }
    case kCode: {
      mutable_code()->::google::fhir::stu3::proto::Code::MergeFrom(from.code());
      break;
    }
    case kDate: {
      mutable_date()->::google::fhir::stu3::proto::Date::MergeFrom(from.date());
      break;
    }
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kDecimal: {
      mutable_decimal()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.decimal());
      break;
    }
    case kId: {
      mutable_id()->::google::fhir::stu3::proto::Id::MergeFrom(from.id());
      break;
    }
    case kInstant: {
      mutable_instant()->::google::fhir::stu3::proto::Instant::MergeFrom(from.instant());
      break;
    }
    case kInteger: {
      mutable_integer()->::google::fhir::stu3::proto::Integer::MergeFrom(from.integer());
      break;
    }
    case kMarkdown: {
      mutable_markdown()->::google::fhir::stu3::proto::Markdown::MergeFrom(from.markdown());
      break;
    }
    case kOid: {
      mutable_oid()->::google::fhir::stu3::proto::Oid::MergeFrom(from.oid());
      break;
    }
    case kPositiveInt: {
      mutable_positive_int()->::google::fhir::stu3::proto::PositiveInt::MergeFrom(from.positive_int());
      break;
    }
    case kStringValue: {
      mutable_string_value()->::google::fhir::stu3::proto::String::MergeFrom(from.string_value());
      break;
    }
    case kTime: {
      mutable_time()->::google::fhir::stu3::proto::Time::MergeFrom(from.time());
      break;
    }
    case kUnsignedInt: {
      mutable_unsigned_int()->::google::fhir::stu3::proto::UnsignedInt::MergeFrom(from.unsigned_int());
      break;
    }
    case kUri: {
      mutable_uri()->::google::fhir::stu3::proto::Uri::MergeFrom(from.uri());
      break;
    }
    case kAddress: {
      mutable_address()->::google::fhir::stu3::proto::Address::MergeFrom(from.address());
      break;
    }
    case kAge: {
      mutable_age()->::google::fhir::stu3::proto::Age::MergeFrom(from.age());
      break;
    }
    case kAnnotation: {
      mutable_annotation()->::google::fhir::stu3::proto::Annotation::MergeFrom(from.annotation());
      break;
    }
    case kAttachment: {
      mutable_attachment()->::google::fhir::stu3::proto::Attachment::MergeFrom(from.attachment());
      break;
    }
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case kCoding: {
      mutable_coding()->::google::fhir::stu3::proto::Coding::MergeFrom(from.coding());
      break;
    }
    case kContactPoint: {
      mutable_contact_point()->::google::fhir::stu3::proto::ContactPoint::MergeFrom(from.contact_point());
      break;
    }
    case kCount: {
      mutable_count()->::google::fhir::stu3::proto::Count::MergeFrom(from.count());
      break;
    }
    case kDistance: {
      mutable_distance()->::google::fhir::stu3::proto::Distance::MergeFrom(from.distance());
      break;
    }
    case kDuration: {
      mutable_duration()->::google::fhir::stu3::proto::Duration::MergeFrom(from.duration());
      break;
    }
    case kHumanName: {
      mutable_human_name()->::google::fhir::stu3::proto::HumanName::MergeFrom(from.human_name());
      break;
    }
    case kIdentifier: {
      mutable_identifier()->::google::fhir::stu3::proto::Identifier::MergeFrom(from.identifier());
      break;
    }
    case kMoney: {
      mutable_money()->::google::fhir::stu3::proto::Money::MergeFrom(from.money());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case kQuantity: {
      mutable_quantity()->::google::fhir::stu3::proto::Quantity::MergeFrom(from.quantity());
      break;
    }
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case kRatio: {
      mutable_ratio()->::google::fhir::stu3::proto::Ratio::MergeFrom(from.ratio());
      break;
    }
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case kSampledData: {
      mutable_sampled_data()->::google::fhir::stu3::proto::SampledData::MergeFrom(from.sampled_data());
      break;
    }
    case kSignature: {
      mutable_signature()->::google::fhir::stu3::proto::Signature::MergeFrom(from.signature());
      break;
    }
    case kTiming: {
      mutable_timing()->::google::fhir::stu3::proto::Timing::MergeFrom(from.timing());
      break;
    }
    case kMeta: {
      mutable_meta()->::google::fhir::stu3::proto::Meta::MergeFrom(from.meta());
      break;
    }
    case FIXED_NOT_SET: {
      break;
    }
  }
}

void ElementDefinition_Fixed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.ElementDefinition.Fixed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ElementDefinition_Fixed::CopyFrom(const ElementDefinition_Fixed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.ElementDefinition.Fixed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ElementDefinition_Fixed::IsInitialized() const {
  return true;
}

void ElementDefinition_Fixed::Swap(ElementDefinition_Fixed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ElementDefinition_Fixed::InternalSwap(ElementDefinition_Fixed* other) {
  using std::swap;
  swap(fixed_, other->fixed_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ElementDefinition_Fixed::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ElementDefinition_Pattern::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.base64_binary_ = const_cast< ::google::fhir::stu3::proto::Base64Binary*>(
      ::google::fhir::stu3::proto::Base64Binary::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.boolean_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.code_ = const_cast< ::google::fhir::stu3::proto::Code*>(
      ::google::fhir::stu3::proto::Code::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.date_ = const_cast< ::google::fhir::stu3::proto::Date*>(
      ::google::fhir::stu3::proto::Date::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.date_time_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.decimal_ = const_cast< ::google::fhir::stu3::proto::Decimal*>(
      ::google::fhir::stu3::proto::Decimal::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.id_ = const_cast< ::google::fhir::stu3::proto::Id*>(
      ::google::fhir::stu3::proto::Id::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.instant_ = const_cast< ::google::fhir::stu3::proto::Instant*>(
      ::google::fhir::stu3::proto::Instant::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.integer_ = const_cast< ::google::fhir::stu3::proto::Integer*>(
      ::google::fhir::stu3::proto::Integer::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.markdown_ = const_cast< ::google::fhir::stu3::proto::Markdown*>(
      ::google::fhir::stu3::proto::Markdown::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.oid_ = const_cast< ::google::fhir::stu3::proto::Oid*>(
      ::google::fhir::stu3::proto::Oid::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.positive_int_ = const_cast< ::google::fhir::stu3::proto::PositiveInt*>(
      ::google::fhir::stu3::proto::PositiveInt::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.string_value_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.time_ = const_cast< ::google::fhir::stu3::proto::Time*>(
      ::google::fhir::stu3::proto::Time::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.unsigned_int_ = const_cast< ::google::fhir::stu3::proto::UnsignedInt*>(
      ::google::fhir::stu3::proto::UnsignedInt::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.uri_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.address_ = const_cast< ::google::fhir::stu3::proto::Address*>(
      ::google::fhir::stu3::proto::Address::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.age_ = const_cast< ::google::fhir::stu3::proto::Age*>(
      ::google::fhir::stu3::proto::Age::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.annotation_ = const_cast< ::google::fhir::stu3::proto::Annotation*>(
      ::google::fhir::stu3::proto::Annotation::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.attachment_ = const_cast< ::google::fhir::stu3::proto::Attachment*>(
      ::google::fhir::stu3::proto::Attachment::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.codeable_concept_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.coding_ = const_cast< ::google::fhir::stu3::proto::Coding*>(
      ::google::fhir::stu3::proto::Coding::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.contact_point_ = const_cast< ::google::fhir::stu3::proto::ContactPoint*>(
      ::google::fhir::stu3::proto::ContactPoint::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.count_ = const_cast< ::google::fhir::stu3::proto::Count*>(
      ::google::fhir::stu3::proto::Count::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.distance_ = const_cast< ::google::fhir::stu3::proto::Distance*>(
      ::google::fhir::stu3::proto::Distance::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.duration_ = const_cast< ::google::fhir::stu3::proto::Duration*>(
      ::google::fhir::stu3::proto::Duration::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.human_name_ = const_cast< ::google::fhir::stu3::proto::HumanName*>(
      ::google::fhir::stu3::proto::HumanName::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.identifier_ = const_cast< ::google::fhir::stu3::proto::Identifier*>(
      ::google::fhir::stu3::proto::Identifier::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.money_ = const_cast< ::google::fhir::stu3::proto::Money*>(
      ::google::fhir::stu3::proto::Money::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.period_ = const_cast< ::google::fhir::stu3::proto::Period*>(
      ::google::fhir::stu3::proto::Period::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.quantity_ = const_cast< ::google::fhir::stu3::proto::Quantity*>(
      ::google::fhir::stu3::proto::Quantity::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.range_ = const_cast< ::google::fhir::stu3::proto::Range*>(
      ::google::fhir::stu3::proto::Range::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.ratio_ = const_cast< ::google::fhir::stu3::proto::Ratio*>(
      ::google::fhir::stu3::proto::Ratio::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.reference_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.sampled_data_ = const_cast< ::google::fhir::stu3::proto::SampledData*>(
      ::google::fhir::stu3::proto::SampledData::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.signature_ = const_cast< ::google::fhir::stu3::proto::Signature*>(
      ::google::fhir::stu3::proto::Signature::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.timing_ = const_cast< ::google::fhir::stu3::proto::Timing*>(
      ::google::fhir::stu3::proto::Timing::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_.meta_ = const_cast< ::google::fhir::stu3::proto::Meta*>(
      ::google::fhir::stu3::proto::Meta::internal_default_instance());
}
void ElementDefinition_Pattern::set_allocated_base64_binary(::google::fhir::stu3::proto::Base64Binary* base64_binary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (base64_binary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      base64_binary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, base64_binary, submessage_arena);
    }
    set_has_base64_binary();
    pattern_.base64_binary_ = base64_binary;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.base64_binary)
}
void ElementDefinition_Pattern::clear_base64_binary() {
  if (has_base64_binary()) {
    delete pattern_.base64_binary_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_boolean(::google::fhir::stu3::proto::Boolean* boolean) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (boolean) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      boolean = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, boolean, submessage_arena);
    }
    set_has_boolean();
    pattern_.boolean_ = boolean;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.boolean)
}
void ElementDefinition_Pattern::clear_boolean() {
  if (has_boolean()) {
    delete pattern_.boolean_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_code(::google::fhir::stu3::proto::Code* code) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (code) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      code = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, code, submessage_arena);
    }
    set_has_code();
    pattern_.code_ = code;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.code)
}
void ElementDefinition_Pattern::clear_code() {
  if (has_code()) {
    delete pattern_.code_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_date(::google::fhir::stu3::proto::Date* date) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (date) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date, submessage_arena);
    }
    set_has_date();
    pattern_.date_ = date;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.date)
}
void ElementDefinition_Pattern::clear_date() {
  if (has_date()) {
    delete pattern_.date_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (date_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date_time, submessage_arena);
    }
    set_has_date_time();
    pattern_.date_time_ = date_time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.date_time)
}
void ElementDefinition_Pattern::clear_date_time() {
  if (has_date_time()) {
    delete pattern_.date_time_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_decimal(::google::fhir::stu3::proto::Decimal* decimal) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (decimal) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      decimal = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, decimal, submessage_arena);
    }
    set_has_decimal();
    pattern_.decimal_ = decimal;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.decimal)
}
void ElementDefinition_Pattern::clear_decimal() {
  if (has_decimal()) {
    delete pattern_.decimal_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_id(::google::fhir::stu3::proto::Id* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    set_has_id();
    pattern_.id_ = id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.id)
}
void ElementDefinition_Pattern::clear_id() {
  if (has_id()) {
    delete pattern_.id_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_instant(::google::fhir::stu3::proto::Instant* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    set_has_instant();
    pattern_.instant_ = instant;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.instant)
}
void ElementDefinition_Pattern::clear_instant() {
  if (has_instant()) {
    delete pattern_.instant_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_integer(::google::fhir::stu3::proto::Integer* integer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (integer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      integer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, integer, submessage_arena);
    }
    set_has_integer();
    pattern_.integer_ = integer;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.integer)
}
void ElementDefinition_Pattern::clear_integer() {
  if (has_integer()) {
    delete pattern_.integer_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_markdown(::google::fhir::stu3::proto::Markdown* markdown) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (markdown) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      markdown = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, markdown, submessage_arena);
    }
    set_has_markdown();
    pattern_.markdown_ = markdown;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.markdown)
}
void ElementDefinition_Pattern::clear_markdown() {
  if (has_markdown()) {
    delete pattern_.markdown_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_oid(::google::fhir::stu3::proto::Oid* oid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (oid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      oid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, oid, submessage_arena);
    }
    set_has_oid();
    pattern_.oid_ = oid;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.oid)
}
void ElementDefinition_Pattern::clear_oid() {
  if (has_oid()) {
    delete pattern_.oid_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_positive_int(::google::fhir::stu3::proto::PositiveInt* positive_int) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (positive_int) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      positive_int = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, positive_int, submessage_arena);
    }
    set_has_positive_int();
    pattern_.positive_int_ = positive_int;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.positive_int)
}
void ElementDefinition_Pattern::clear_positive_int() {
  if (has_positive_int()) {
    delete pattern_.positive_int_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_string_value(::google::fhir::stu3::proto::String* string_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (string_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      string_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, string_value, submessage_arena);
    }
    set_has_string_value();
    pattern_.string_value_ = string_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.string_value)
}
void ElementDefinition_Pattern::clear_string_value() {
  if (has_string_value()) {
    delete pattern_.string_value_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_time(::google::fhir::stu3::proto::Time* time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time, submessage_arena);
    }
    set_has_time();
    pattern_.time_ = time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.time)
}
void ElementDefinition_Pattern::clear_time() {
  if (has_time()) {
    delete pattern_.time_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_unsigned_int(::google::fhir::stu3::proto::UnsignedInt* unsigned_int) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (unsigned_int) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      unsigned_int = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, unsigned_int, submessage_arena);
    }
    set_has_unsigned_int();
    pattern_.unsigned_int_ = unsigned_int;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.unsigned_int)
}
void ElementDefinition_Pattern::clear_unsigned_int() {
  if (has_unsigned_int()) {
    delete pattern_.unsigned_int_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_uri(::google::fhir::stu3::proto::Uri* uri) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (uri) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      uri = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uri, submessage_arena);
    }
    set_has_uri();
    pattern_.uri_ = uri;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.uri)
}
void ElementDefinition_Pattern::clear_uri() {
  if (has_uri()) {
    delete pattern_.uri_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_address(::google::fhir::stu3::proto::Address* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    set_has_address();
    pattern_.address_ = address;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.address)
}
void ElementDefinition_Pattern::clear_address() {
  if (has_address()) {
    delete pattern_.address_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_age(::google::fhir::stu3::proto::Age* age) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (age) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      age = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, age, submessage_arena);
    }
    set_has_age();
    pattern_.age_ = age;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.age)
}
void ElementDefinition_Pattern::clear_age() {
  if (has_age()) {
    delete pattern_.age_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_annotation(::google::fhir::stu3::proto::Annotation* annotation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (annotation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      annotation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, annotation, submessage_arena);
    }
    set_has_annotation();
    pattern_.annotation_ = annotation;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.annotation)
}
void ElementDefinition_Pattern::clear_annotation() {
  if (has_annotation()) {
    delete pattern_.annotation_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_attachment(::google::fhir::stu3::proto::Attachment* attachment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (attachment) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      attachment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, attachment, submessage_arena);
    }
    set_has_attachment();
    pattern_.attachment_ = attachment;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.attachment)
}
void ElementDefinition_Pattern::clear_attachment() {
  if (has_attachment()) {
    delete pattern_.attachment_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (codeable_concept) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      codeable_concept = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, codeable_concept, submessage_arena);
    }
    set_has_codeable_concept();
    pattern_.codeable_concept_ = codeable_concept;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.codeable_concept)
}
void ElementDefinition_Pattern::clear_codeable_concept() {
  if (has_codeable_concept()) {
    delete pattern_.codeable_concept_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_coding(::google::fhir::stu3::proto::Coding* coding) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (coding) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      coding = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, coding, submessage_arena);
    }
    set_has_coding();
    pattern_.coding_ = coding;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.coding)
}
void ElementDefinition_Pattern::clear_coding() {
  if (has_coding()) {
    delete pattern_.coding_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_contact_point(::google::fhir::stu3::proto::ContactPoint* contact_point) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (contact_point) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      contact_point = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, contact_point, submessage_arena);
    }
    set_has_contact_point();
    pattern_.contact_point_ = contact_point;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.contact_point)
}
void ElementDefinition_Pattern::clear_contact_point() {
  if (has_contact_point()) {
    delete pattern_.contact_point_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_count(::google::fhir::stu3::proto::Count* count) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (count) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      count = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, count, submessage_arena);
    }
    set_has_count();
    pattern_.count_ = count;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.count)
}
void ElementDefinition_Pattern::clear_count() {
  if (has_count()) {
    delete pattern_.count_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_distance(::google::fhir::stu3::proto::Distance* distance) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (distance) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      distance = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, distance, submessage_arena);
    }
    set_has_distance();
    pattern_.distance_ = distance;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.distance)
}
void ElementDefinition_Pattern::clear_distance() {
  if (has_distance()) {
    delete pattern_.distance_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_duration(::google::fhir::stu3::proto::Duration* duration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (duration) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      duration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, duration, submessage_arena);
    }
    set_has_duration();
    pattern_.duration_ = duration;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.duration)
}
void ElementDefinition_Pattern::clear_duration() {
  if (has_duration()) {
    delete pattern_.duration_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_human_name(::google::fhir::stu3::proto::HumanName* human_name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (human_name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      human_name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, human_name, submessage_arena);
    }
    set_has_human_name();
    pattern_.human_name_ = human_name;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.human_name)
}
void ElementDefinition_Pattern::clear_human_name() {
  if (has_human_name()) {
    delete pattern_.human_name_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_identifier(::google::fhir::stu3::proto::Identifier* identifier) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (identifier) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      identifier = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, identifier, submessage_arena);
    }
    set_has_identifier();
    pattern_.identifier_ = identifier;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.identifier)
}
void ElementDefinition_Pattern::clear_identifier() {
  if (has_identifier()) {
    delete pattern_.identifier_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_money(::google::fhir::stu3::proto::Money* money) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (money) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      money = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, money, submessage_arena);
    }
    set_has_money();
    pattern_.money_ = money;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.money)
}
void ElementDefinition_Pattern::clear_money() {
  if (has_money()) {
    delete pattern_.money_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_period(::google::fhir::stu3::proto::Period* period) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (period) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      period = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, period, submessage_arena);
    }
    set_has_period();
    pattern_.period_ = period;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.period)
}
void ElementDefinition_Pattern::clear_period() {
  if (has_period()) {
    delete pattern_.period_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_quantity(::google::fhir::stu3::proto::Quantity* quantity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (quantity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      quantity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, quantity, submessage_arena);
    }
    set_has_quantity();
    pattern_.quantity_ = quantity;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.quantity)
}
void ElementDefinition_Pattern::clear_quantity() {
  if (has_quantity()) {
    delete pattern_.quantity_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_range(::google::fhir::stu3::proto::Range* range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (range) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, range, submessage_arena);
    }
    set_has_range();
    pattern_.range_ = range;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.range)
}
void ElementDefinition_Pattern::clear_range() {
  if (has_range()) {
    delete pattern_.range_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_ratio(::google::fhir::stu3::proto::Ratio* ratio) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (ratio) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ratio = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ratio, submessage_arena);
    }
    set_has_ratio();
    pattern_.ratio_ = ratio;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.ratio)
}
void ElementDefinition_Pattern::clear_ratio() {
  if (has_ratio()) {
    delete pattern_.ratio_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_reference(::google::fhir::stu3::proto::Reference* reference) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (reference) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reference = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reference, submessage_arena);
    }
    set_has_reference();
    pattern_.reference_ = reference;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.reference)
}
void ElementDefinition_Pattern::clear_reference() {
  if (has_reference()) {
    delete pattern_.reference_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_sampled_data(::google::fhir::stu3::proto::SampledData* sampled_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (sampled_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sampled_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sampled_data, submessage_arena);
    }
    set_has_sampled_data();
    pattern_.sampled_data_ = sampled_data;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.sampled_data)
}
void ElementDefinition_Pattern::clear_sampled_data() {
  if (has_sampled_data()) {
    delete pattern_.sampled_data_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_signature(::google::fhir::stu3::proto::Signature* signature) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (signature) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      signature = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, signature, submessage_arena);
    }
    set_has_signature();
    pattern_.signature_ = signature;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.signature)
}
void ElementDefinition_Pattern::clear_signature() {
  if (has_signature()) {
    delete pattern_.signature_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_timing(::google::fhir::stu3::proto::Timing* timing) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (timing) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timing = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timing, submessage_arena);
    }
    set_has_timing();
    pattern_.timing_ = timing;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.timing)
}
void ElementDefinition_Pattern::clear_timing() {
  if (has_timing()) {
    delete pattern_.timing_;
    clear_has_pattern();
  }
}
void ElementDefinition_Pattern::set_allocated_meta(::google::fhir::stu3::proto::Meta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_pattern();
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    set_has_meta();
    pattern_.meta_ = meta;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Pattern.meta)
}
void ElementDefinition_Pattern::clear_meta() {
  if (has_meta()) {
    delete pattern_.meta_;
    clear_has_pattern();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ElementDefinition_Pattern::kBase64BinaryFieldNumber;
const int ElementDefinition_Pattern::kBooleanFieldNumber;
const int ElementDefinition_Pattern::kCodeFieldNumber;
const int ElementDefinition_Pattern::kDateFieldNumber;
const int ElementDefinition_Pattern::kDateTimeFieldNumber;
const int ElementDefinition_Pattern::kDecimalFieldNumber;
const int ElementDefinition_Pattern::kIdFieldNumber;
const int ElementDefinition_Pattern::kInstantFieldNumber;
const int ElementDefinition_Pattern::kIntegerFieldNumber;
const int ElementDefinition_Pattern::kMarkdownFieldNumber;
const int ElementDefinition_Pattern::kOidFieldNumber;
const int ElementDefinition_Pattern::kPositiveIntFieldNumber;
const int ElementDefinition_Pattern::kStringValueFieldNumber;
const int ElementDefinition_Pattern::kTimeFieldNumber;
const int ElementDefinition_Pattern::kUnsignedIntFieldNumber;
const int ElementDefinition_Pattern::kUriFieldNumber;
const int ElementDefinition_Pattern::kAddressFieldNumber;
const int ElementDefinition_Pattern::kAgeFieldNumber;
const int ElementDefinition_Pattern::kAnnotationFieldNumber;
const int ElementDefinition_Pattern::kAttachmentFieldNumber;
const int ElementDefinition_Pattern::kCodeableConceptFieldNumber;
const int ElementDefinition_Pattern::kCodingFieldNumber;
const int ElementDefinition_Pattern::kContactPointFieldNumber;
const int ElementDefinition_Pattern::kCountFieldNumber;
const int ElementDefinition_Pattern::kDistanceFieldNumber;
const int ElementDefinition_Pattern::kDurationFieldNumber;
const int ElementDefinition_Pattern::kHumanNameFieldNumber;
const int ElementDefinition_Pattern::kIdentifierFieldNumber;
const int ElementDefinition_Pattern::kMoneyFieldNumber;
const int ElementDefinition_Pattern::kPeriodFieldNumber;
const int ElementDefinition_Pattern::kQuantityFieldNumber;
const int ElementDefinition_Pattern::kRangeFieldNumber;
const int ElementDefinition_Pattern::kRatioFieldNumber;
const int ElementDefinition_Pattern::kReferenceFieldNumber;
const int ElementDefinition_Pattern::kSampledDataFieldNumber;
const int ElementDefinition_Pattern::kSignatureFieldNumber;
const int ElementDefinition_Pattern::kTimingFieldNumber;
const int ElementDefinition_Pattern::kMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ElementDefinition_Pattern::ElementDefinition_Pattern()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_Pattern.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.ElementDefinition.Pattern)
}
ElementDefinition_Pattern::ElementDefinition_Pattern(const ElementDefinition_Pattern& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_pattern();
  switch (from.pattern_case()) {
    case kBase64Binary: {
      mutable_base64_binary()->::google::fhir::stu3::proto::Base64Binary::MergeFrom(from.base64_binary());
      break;
    }
    case kBoolean: {
      mutable_boolean()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.boolean());
      break;
    }
    case kCode: {
      mutable_code()->::google::fhir::stu3::proto::Code::MergeFrom(from.code());
      break;
    }
    case kDate: {
      mutable_date()->::google::fhir::stu3::proto::Date::MergeFrom(from.date());
      break;
    }
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kDecimal: {
      mutable_decimal()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.decimal());
      break;
    }
    case kId: {
      mutable_id()->::google::fhir::stu3::proto::Id::MergeFrom(from.id());
      break;
    }
    case kInstant: {
      mutable_instant()->::google::fhir::stu3::proto::Instant::MergeFrom(from.instant());
      break;
    }
    case kInteger: {
      mutable_integer()->::google::fhir::stu3::proto::Integer::MergeFrom(from.integer());
      break;
    }
    case kMarkdown: {
      mutable_markdown()->::google::fhir::stu3::proto::Markdown::MergeFrom(from.markdown());
      break;
    }
    case kOid: {
      mutable_oid()->::google::fhir::stu3::proto::Oid::MergeFrom(from.oid());
      break;
    }
    case kPositiveInt: {
      mutable_positive_int()->::google::fhir::stu3::proto::PositiveInt::MergeFrom(from.positive_int());
      break;
    }
    case kStringValue: {
      mutable_string_value()->::google::fhir::stu3::proto::String::MergeFrom(from.string_value());
      break;
    }
    case kTime: {
      mutable_time()->::google::fhir::stu3::proto::Time::MergeFrom(from.time());
      break;
    }
    case kUnsignedInt: {
      mutable_unsigned_int()->::google::fhir::stu3::proto::UnsignedInt::MergeFrom(from.unsigned_int());
      break;
    }
    case kUri: {
      mutable_uri()->::google::fhir::stu3::proto::Uri::MergeFrom(from.uri());
      break;
    }
    case kAddress: {
      mutable_address()->::google::fhir::stu3::proto::Address::MergeFrom(from.address());
      break;
    }
    case kAge: {
      mutable_age()->::google::fhir::stu3::proto::Age::MergeFrom(from.age());
      break;
    }
    case kAnnotation: {
      mutable_annotation()->::google::fhir::stu3::proto::Annotation::MergeFrom(from.annotation());
      break;
    }
    case kAttachment: {
      mutable_attachment()->::google::fhir::stu3::proto::Attachment::MergeFrom(from.attachment());
      break;
    }
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case kCoding: {
      mutable_coding()->::google::fhir::stu3::proto::Coding::MergeFrom(from.coding());
      break;
    }
    case kContactPoint: {
      mutable_contact_point()->::google::fhir::stu3::proto::ContactPoint::MergeFrom(from.contact_point());
      break;
    }
    case kCount: {
      mutable_count()->::google::fhir::stu3::proto::Count::MergeFrom(from.count());
      break;
    }
    case kDistance: {
      mutable_distance()->::google::fhir::stu3::proto::Distance::MergeFrom(from.distance());
      break;
    }
    case kDuration: {
      mutable_duration()->::google::fhir::stu3::proto::Duration::MergeFrom(from.duration());
      break;
    }
    case kHumanName: {
      mutable_human_name()->::google::fhir::stu3::proto::HumanName::MergeFrom(from.human_name());
      break;
    }
    case kIdentifier: {
      mutable_identifier()->::google::fhir::stu3::proto::Identifier::MergeFrom(from.identifier());
      break;
    }
    case kMoney: {
      mutable_money()->::google::fhir::stu3::proto::Money::MergeFrom(from.money());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case kQuantity: {
      mutable_quantity()->::google::fhir::stu3::proto::Quantity::MergeFrom(from.quantity());
      break;
    }
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case kRatio: {
      mutable_ratio()->::google::fhir::stu3::proto::Ratio::MergeFrom(from.ratio());
      break;
    }
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case kSampledData: {
      mutable_sampled_data()->::google::fhir::stu3::proto::SampledData::MergeFrom(from.sampled_data());
      break;
    }
    case kSignature: {
      mutable_signature()->::google::fhir::stu3::proto::Signature::MergeFrom(from.signature());
      break;
    }
    case kTiming: {
      mutable_timing()->::google::fhir::stu3::proto::Timing::MergeFrom(from.timing());
      break;
    }
    case kMeta: {
      mutable_meta()->::google::fhir::stu3::proto::Meta::MergeFrom(from.meta());
      break;
    }
    case PATTERN_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.ElementDefinition.Pattern)
}

void ElementDefinition_Pattern::SharedCtor() {
  clear_has_pattern();
}

ElementDefinition_Pattern::~ElementDefinition_Pattern() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.ElementDefinition.Pattern)
  SharedDtor();
}

void ElementDefinition_Pattern::SharedDtor() {
  if (has_pattern()) {
    clear_pattern();
  }
}

void ElementDefinition_Pattern::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ElementDefinition_Pattern::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ElementDefinition_Pattern& ElementDefinition_Pattern::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_Pattern.base);
  return *internal_default_instance();
}


void ElementDefinition_Pattern::clear_pattern() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.proto.ElementDefinition.Pattern)
  switch (pattern_case()) {
    case kBase64Binary: {
      delete pattern_.base64_binary_;
      break;
    }
    case kBoolean: {
      delete pattern_.boolean_;
      break;
    }
    case kCode: {
      delete pattern_.code_;
      break;
    }
    case kDate: {
      delete pattern_.date_;
      break;
    }
    case kDateTime: {
      delete pattern_.date_time_;
      break;
    }
    case kDecimal: {
      delete pattern_.decimal_;
      break;
    }
    case kId: {
      delete pattern_.id_;
      break;
    }
    case kInstant: {
      delete pattern_.instant_;
      break;
    }
    case kInteger: {
      delete pattern_.integer_;
      break;
    }
    case kMarkdown: {
      delete pattern_.markdown_;
      break;
    }
    case kOid: {
      delete pattern_.oid_;
      break;
    }
    case kPositiveInt: {
      delete pattern_.positive_int_;
      break;
    }
    case kStringValue: {
      delete pattern_.string_value_;
      break;
    }
    case kTime: {
      delete pattern_.time_;
      break;
    }
    case kUnsignedInt: {
      delete pattern_.unsigned_int_;
      break;
    }
    case kUri: {
      delete pattern_.uri_;
      break;
    }
    case kAddress: {
      delete pattern_.address_;
      break;
    }
    case kAge: {
      delete pattern_.age_;
      break;
    }
    case kAnnotation: {
      delete pattern_.annotation_;
      break;
    }
    case kAttachment: {
      delete pattern_.attachment_;
      break;
    }
    case kCodeableConcept: {
      delete pattern_.codeable_concept_;
      break;
    }
    case kCoding: {
      delete pattern_.coding_;
      break;
    }
    case kContactPoint: {
      delete pattern_.contact_point_;
      break;
    }
    case kCount: {
      delete pattern_.count_;
      break;
    }
    case kDistance: {
      delete pattern_.distance_;
      break;
    }
    case kDuration: {
      delete pattern_.duration_;
      break;
    }
    case kHumanName: {
      delete pattern_.human_name_;
      break;
    }
    case kIdentifier: {
      delete pattern_.identifier_;
      break;
    }
    case kMoney: {
      delete pattern_.money_;
      break;
    }
    case kPeriod: {
      delete pattern_.period_;
      break;
    }
    case kQuantity: {
      delete pattern_.quantity_;
      break;
    }
    case kRange: {
      delete pattern_.range_;
      break;
    }
    case kRatio: {
      delete pattern_.ratio_;
      break;
    }
    case kReference: {
      delete pattern_.reference_;
      break;
    }
    case kSampledData: {
      delete pattern_.sampled_data_;
      break;
    }
    case kSignature: {
      delete pattern_.signature_;
      break;
    }
    case kTiming: {
      delete pattern_.timing_;
      break;
    }
    case kMeta: {
      delete pattern_.meta_;
      break;
    }
    case PATTERN_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PATTERN_NOT_SET;
}


void ElementDefinition_Pattern::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.ElementDefinition.Pattern)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_pattern();
  _internal_metadata_.Clear();
}

bool ElementDefinition_Pattern::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.ElementDefinition.Pattern)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Base64Binary base64_binary = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base64_binary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Boolean boolean = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_boolean()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Code code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Date date = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DateTime date_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Decimal decimal = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_decimal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Id id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Instant instant = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Integer integer = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_integer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Markdown markdown = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_markdown()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Oid oid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_oid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.PositiveInt positive_int = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_positive_int()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String string_value = 13[json_name = "string"];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_string_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Time time = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_unsigned_int()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri uri = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uri()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Address address = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Age age = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_age()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Annotation annotation = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_annotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Attachment attachment = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_attachment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_codeable_concept()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Coding coding = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_coding()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ContactPoint contact_point = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_contact_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Count count = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_count()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Distance distance = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_distance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Duration duration = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.HumanName human_name = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_human_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Identifier identifier = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Money money = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_money()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Period period = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Quantity quantity = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_quantity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Range range = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Ratio ratio = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ratio()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference reference = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.SampledData sampled_data = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 282 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sampled_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Signature signature = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 290 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Timing timing = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 298 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Meta meta = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 306 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.ElementDefinition.Pattern)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.ElementDefinition.Pattern)
  return false;
#undef DO_
}

void ElementDefinition_Pattern::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.ElementDefinition.Pattern)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Base64Binary base64_binary = 1;
  if (has_base64_binary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_base64_binary(), output);
  }

  // .google.fhir.stu3.proto.Boolean boolean = 2;
  if (has_boolean()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_boolean(), output);
  }

  // .google.fhir.stu3.proto.Code code = 3;
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_code(), output);
  }

  // .google.fhir.stu3.proto.Date date = 4;
  if (has_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_date(), output);
  }

  // .google.fhir.stu3.proto.DateTime date_time = 5;
  if (has_date_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_date_time(), output);
  }

  // .google.fhir.stu3.proto.Decimal decimal = 6;
  if (has_decimal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_decimal(), output);
  }

  // .google.fhir.stu3.proto.Id id = 7;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_id(), output);
  }

  // .google.fhir.stu3.proto.Instant instant = 8;
  if (has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_instant(), output);
  }

  // .google.fhir.stu3.proto.Integer integer = 9;
  if (has_integer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_integer(), output);
  }

  // .google.fhir.stu3.proto.Markdown markdown = 10;
  if (has_markdown()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_markdown(), output);
  }

  // .google.fhir.stu3.proto.Oid oid = 11;
  if (has_oid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_oid(), output);
  }

  // .google.fhir.stu3.proto.PositiveInt positive_int = 12;
  if (has_positive_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_positive_int(), output);
  }

  // .google.fhir.stu3.proto.String string_value = 13[json_name = "string"];
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_string_value(), output);
  }

  // .google.fhir.stu3.proto.Time time = 14;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_time(), output);
  }

  // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
  if (has_unsigned_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_unsigned_int(), output);
  }

  // .google.fhir.stu3.proto.Uri uri = 16;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_uri(), output);
  }

  // .google.fhir.stu3.proto.Address address = 17;
  if (has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_address(), output);
  }

  // .google.fhir.stu3.proto.Age age = 18;
  if (has_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_age(), output);
  }

  // .google.fhir.stu3.proto.Annotation annotation = 19;
  if (has_annotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_annotation(), output);
  }

  // .google.fhir.stu3.proto.Attachment attachment = 20;
  if (has_attachment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_attachment(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
  if (has_codeable_concept()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_codeable_concept(), output);
  }

  // .google.fhir.stu3.proto.Coding coding = 22;
  if (has_coding()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->_internal_coding(), output);
  }

  // .google.fhir.stu3.proto.ContactPoint contact_point = 23;
  if (has_contact_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->_internal_contact_point(), output);
  }

  // .google.fhir.stu3.proto.Count count = 24;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->_internal_count(), output);
  }

  // .google.fhir.stu3.proto.Distance distance = 25;
  if (has_distance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->_internal_distance(), output);
  }

  // .google.fhir.stu3.proto.Duration duration = 26;
  if (has_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->_internal_duration(), output);
  }

  // .google.fhir.stu3.proto.HumanName human_name = 27;
  if (has_human_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->_internal_human_name(), output);
  }

  // .google.fhir.stu3.proto.Identifier identifier = 28;
  if (has_identifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, this->_internal_identifier(), output);
  }

  // .google.fhir.stu3.proto.Money money = 29;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, this->_internal_money(), output);
  }

  // .google.fhir.stu3.proto.Period period = 30;
  if (has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, this->_internal_period(), output);
  }

  // .google.fhir.stu3.proto.Quantity quantity = 31;
  if (has_quantity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, this->_internal_quantity(), output);
  }

  // .google.fhir.stu3.proto.Range range = 32;
  if (has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32, this->_internal_range(), output);
  }

  // .google.fhir.stu3.proto.Ratio ratio = 33;
  if (has_ratio()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33, this->_internal_ratio(), output);
  }

  // .google.fhir.stu3.proto.Reference reference = 34;
  if (has_reference()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      34, this->_internal_reference(), output);
  }

  // .google.fhir.stu3.proto.SampledData sampled_data = 35;
  if (has_sampled_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      35, this->_internal_sampled_data(), output);
  }

  // .google.fhir.stu3.proto.Signature signature = 36;
  if (has_signature()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      36, this->_internal_signature(), output);
  }

  // .google.fhir.stu3.proto.Timing timing = 37;
  if (has_timing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      37, this->_internal_timing(), output);
  }

  // .google.fhir.stu3.proto.Meta meta = 38;
  if (has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      38, this->_internal_meta(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.ElementDefinition.Pattern)
}

::google::protobuf::uint8* ElementDefinition_Pattern::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.ElementDefinition.Pattern)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Base64Binary base64_binary = 1;
  if (has_base64_binary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_base64_binary(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Boolean boolean = 2;
  if (has_boolean()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_boolean(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Code code = 3;
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_code(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Date date = 4;
  if (has_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_date(), deterministic, target);
  }

  // .google.fhir.stu3.proto.DateTime date_time = 5;
  if (has_date_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_date_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Decimal decimal = 6;
  if (has_decimal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_decimal(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Id id = 7;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Instant instant = 8;
  if (has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_instant(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Integer integer = 9;
  if (has_integer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_integer(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Markdown markdown = 10;
  if (has_markdown()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_markdown(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Oid oid = 11;
  if (has_oid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_oid(), deterministic, target);
  }

  // .google.fhir.stu3.proto.PositiveInt positive_int = 12;
  if (has_positive_int()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_positive_int(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String string_value = 13[json_name = "string"];
  if (has_string_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_string_value(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Time time = 14;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
  if (has_unsigned_int()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_unsigned_int(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri uri = 16;
  if (has_uri()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_uri(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Address address = 17;
  if (has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_address(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Age age = 18;
  if (has_age()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_age(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Annotation annotation = 19;
  if (has_annotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_annotation(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Attachment attachment = 20;
  if (has_attachment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_attachment(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
  if (has_codeable_concept()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_codeable_concept(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Coding coding = 22;
  if (has_coding()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->_internal_coding(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ContactPoint contact_point = 23;
  if (has_contact_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->_internal_contact_point(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Count count = 24;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->_internal_count(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Distance distance = 25;
  if (has_distance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->_internal_distance(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Duration duration = 26;
  if (has_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, this->_internal_duration(), deterministic, target);
  }

  // .google.fhir.stu3.proto.HumanName human_name = 27;
  if (has_human_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, this->_internal_human_name(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Identifier identifier = 28;
  if (has_identifier()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, this->_internal_identifier(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Money money = 29;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29, this->_internal_money(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Period period = 30;
  if (has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, this->_internal_period(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Quantity quantity = 31;
  if (has_quantity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        31, this->_internal_quantity(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Range range = 32;
  if (has_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        32, this->_internal_range(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Ratio ratio = 33;
  if (has_ratio()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        33, this->_internal_ratio(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference reference = 34;
  if (has_reference()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        34, this->_internal_reference(), deterministic, target);
  }

  // .google.fhir.stu3.proto.SampledData sampled_data = 35;
  if (has_sampled_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        35, this->_internal_sampled_data(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Signature signature = 36;
  if (has_signature()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        36, this->_internal_signature(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Timing timing = 37;
  if (has_timing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        37, this->_internal_timing(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Meta meta = 38;
  if (has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        38, this->_internal_meta(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.ElementDefinition.Pattern)
  return target;
}

size_t ElementDefinition_Pattern::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.ElementDefinition.Pattern)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (pattern_case()) {
    // .google.fhir.stu3.proto.Base64Binary base64_binary = 1;
    case kBase64Binary: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.base64_binary_);
      break;
    }
    // .google.fhir.stu3.proto.Boolean boolean = 2;
    case kBoolean: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.boolean_);
      break;
    }
    // .google.fhir.stu3.proto.Code code = 3;
    case kCode: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.code_);
      break;
    }
    // .google.fhir.stu3.proto.Date date = 4;
    case kDate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.date_);
      break;
    }
    // .google.fhir.stu3.proto.DateTime date_time = 5;
    case kDateTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.date_time_);
      break;
    }
    // .google.fhir.stu3.proto.Decimal decimal = 6;
    case kDecimal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.decimal_);
      break;
    }
    // .google.fhir.stu3.proto.Id id = 7;
    case kId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.id_);
      break;
    }
    // .google.fhir.stu3.proto.Instant instant = 8;
    case kInstant: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.instant_);
      break;
    }
    // .google.fhir.stu3.proto.Integer integer = 9;
    case kInteger: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.integer_);
      break;
    }
    // .google.fhir.stu3.proto.Markdown markdown = 10;
    case kMarkdown: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.markdown_);
      break;
    }
    // .google.fhir.stu3.proto.Oid oid = 11;
    case kOid: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.oid_);
      break;
    }
    // .google.fhir.stu3.proto.PositiveInt positive_int = 12;
    case kPositiveInt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.positive_int_);
      break;
    }
    // .google.fhir.stu3.proto.String string_value = 13[json_name = "string"];
    case kStringValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.string_value_);
      break;
    }
    // .google.fhir.stu3.proto.Time time = 14;
    case kTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.time_);
      break;
    }
    // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
    case kUnsignedInt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.unsigned_int_);
      break;
    }
    // .google.fhir.stu3.proto.Uri uri = 16;
    case kUri: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.uri_);
      break;
    }
    // .google.fhir.stu3.proto.Address address = 17;
    case kAddress: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.address_);
      break;
    }
    // .google.fhir.stu3.proto.Age age = 18;
    case kAge: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.age_);
      break;
    }
    // .google.fhir.stu3.proto.Annotation annotation = 19;
    case kAnnotation: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.annotation_);
      break;
    }
    // .google.fhir.stu3.proto.Attachment attachment = 20;
    case kAttachment: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.attachment_);
      break;
    }
    // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
    case kCodeableConcept: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.codeable_concept_);
      break;
    }
    // .google.fhir.stu3.proto.Coding coding = 22;
    case kCoding: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.coding_);
      break;
    }
    // .google.fhir.stu3.proto.ContactPoint contact_point = 23;
    case kContactPoint: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.contact_point_);
      break;
    }
    // .google.fhir.stu3.proto.Count count = 24;
    case kCount: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.count_);
      break;
    }
    // .google.fhir.stu3.proto.Distance distance = 25;
    case kDistance: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.distance_);
      break;
    }
    // .google.fhir.stu3.proto.Duration duration = 26;
    case kDuration: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.duration_);
      break;
    }
    // .google.fhir.stu3.proto.HumanName human_name = 27;
    case kHumanName: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.human_name_);
      break;
    }
    // .google.fhir.stu3.proto.Identifier identifier = 28;
    case kIdentifier: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.identifier_);
      break;
    }
    // .google.fhir.stu3.proto.Money money = 29;
    case kMoney: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.money_);
      break;
    }
    // .google.fhir.stu3.proto.Period period = 30;
    case kPeriod: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.period_);
      break;
    }
    // .google.fhir.stu3.proto.Quantity quantity = 31;
    case kQuantity: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.quantity_);
      break;
    }
    // .google.fhir.stu3.proto.Range range = 32;
    case kRange: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.range_);
      break;
    }
    // .google.fhir.stu3.proto.Ratio ratio = 33;
    case kRatio: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.ratio_);
      break;
    }
    // .google.fhir.stu3.proto.Reference reference = 34;
    case kReference: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.reference_);
      break;
    }
    // .google.fhir.stu3.proto.SampledData sampled_data = 35;
    case kSampledData: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.sampled_data_);
      break;
    }
    // .google.fhir.stu3.proto.Signature signature = 36;
    case kSignature: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.signature_);
      break;
    }
    // .google.fhir.stu3.proto.Timing timing = 37;
    case kTiming: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.timing_);
      break;
    }
    // .google.fhir.stu3.proto.Meta meta = 38;
    case kMeta: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pattern_.meta_);
      break;
    }
    case PATTERN_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ElementDefinition_Pattern::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.ElementDefinition.Pattern)
  GOOGLE_DCHECK_NE(&from, this);
  const ElementDefinition_Pattern* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ElementDefinition_Pattern>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.ElementDefinition.Pattern)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.ElementDefinition.Pattern)
    MergeFrom(*source);
  }
}

void ElementDefinition_Pattern::MergeFrom(const ElementDefinition_Pattern& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.ElementDefinition.Pattern)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.pattern_case()) {
    case kBase64Binary: {
      mutable_base64_binary()->::google::fhir::stu3::proto::Base64Binary::MergeFrom(from.base64_binary());
      break;
    }
    case kBoolean: {
      mutable_boolean()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.boolean());
      break;
    }
    case kCode: {
      mutable_code()->::google::fhir::stu3::proto::Code::MergeFrom(from.code());
      break;
    }
    case kDate: {
      mutable_date()->::google::fhir::stu3::proto::Date::MergeFrom(from.date());
      break;
    }
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kDecimal: {
      mutable_decimal()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.decimal());
      break;
    }
    case kId: {
      mutable_id()->::google::fhir::stu3::proto::Id::MergeFrom(from.id());
      break;
    }
    case kInstant: {
      mutable_instant()->::google::fhir::stu3::proto::Instant::MergeFrom(from.instant());
      break;
    }
    case kInteger: {
      mutable_integer()->::google::fhir::stu3::proto::Integer::MergeFrom(from.integer());
      break;
    }
    case kMarkdown: {
      mutable_markdown()->::google::fhir::stu3::proto::Markdown::MergeFrom(from.markdown());
      break;
    }
    case kOid: {
      mutable_oid()->::google::fhir::stu3::proto::Oid::MergeFrom(from.oid());
      break;
    }
    case kPositiveInt: {
      mutable_positive_int()->::google::fhir::stu3::proto::PositiveInt::MergeFrom(from.positive_int());
      break;
    }
    case kStringValue: {
      mutable_string_value()->::google::fhir::stu3::proto::String::MergeFrom(from.string_value());
      break;
    }
    case kTime: {
      mutable_time()->::google::fhir::stu3::proto::Time::MergeFrom(from.time());
      break;
    }
    case kUnsignedInt: {
      mutable_unsigned_int()->::google::fhir::stu3::proto::UnsignedInt::MergeFrom(from.unsigned_int());
      break;
    }
    case kUri: {
      mutable_uri()->::google::fhir::stu3::proto::Uri::MergeFrom(from.uri());
      break;
    }
    case kAddress: {
      mutable_address()->::google::fhir::stu3::proto::Address::MergeFrom(from.address());
      break;
    }
    case kAge: {
      mutable_age()->::google::fhir::stu3::proto::Age::MergeFrom(from.age());
      break;
    }
    case kAnnotation: {
      mutable_annotation()->::google::fhir::stu3::proto::Annotation::MergeFrom(from.annotation());
      break;
    }
    case kAttachment: {
      mutable_attachment()->::google::fhir::stu3::proto::Attachment::MergeFrom(from.attachment());
      break;
    }
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case kCoding: {
      mutable_coding()->::google::fhir::stu3::proto::Coding::MergeFrom(from.coding());
      break;
    }
    case kContactPoint: {
      mutable_contact_point()->::google::fhir::stu3::proto::ContactPoint::MergeFrom(from.contact_point());
      break;
    }
    case kCount: {
      mutable_count()->::google::fhir::stu3::proto::Count::MergeFrom(from.count());
      break;
    }
    case kDistance: {
      mutable_distance()->::google::fhir::stu3::proto::Distance::MergeFrom(from.distance());
      break;
    }
    case kDuration: {
      mutable_duration()->::google::fhir::stu3::proto::Duration::MergeFrom(from.duration());
      break;
    }
    case kHumanName: {
      mutable_human_name()->::google::fhir::stu3::proto::HumanName::MergeFrom(from.human_name());
      break;
    }
    case kIdentifier: {
      mutable_identifier()->::google::fhir::stu3::proto::Identifier::MergeFrom(from.identifier());
      break;
    }
    case kMoney: {
      mutable_money()->::google::fhir::stu3::proto::Money::MergeFrom(from.money());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case kQuantity: {
      mutable_quantity()->::google::fhir::stu3::proto::Quantity::MergeFrom(from.quantity());
      break;
    }
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case kRatio: {
      mutable_ratio()->::google::fhir::stu3::proto::Ratio::MergeFrom(from.ratio());
      break;
    }
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case kSampledData: {
      mutable_sampled_data()->::google::fhir::stu3::proto::SampledData::MergeFrom(from.sampled_data());
      break;
    }
    case kSignature: {
      mutable_signature()->::google::fhir::stu3::proto::Signature::MergeFrom(from.signature());
      break;
    }
    case kTiming: {
      mutable_timing()->::google::fhir::stu3::proto::Timing::MergeFrom(from.timing());
      break;
    }
    case kMeta: {
      mutable_meta()->::google::fhir::stu3::proto::Meta::MergeFrom(from.meta());
      break;
    }
    case PATTERN_NOT_SET: {
      break;
    }
  }
}

void ElementDefinition_Pattern::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.ElementDefinition.Pattern)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ElementDefinition_Pattern::CopyFrom(const ElementDefinition_Pattern& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.ElementDefinition.Pattern)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ElementDefinition_Pattern::IsInitialized() const {
  return true;
}

void ElementDefinition_Pattern::Swap(ElementDefinition_Pattern* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ElementDefinition_Pattern::InternalSwap(ElementDefinition_Pattern* other) {
  using std::swap;
  swap(pattern_, other->pattern_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ElementDefinition_Pattern::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ElementDefinition_Example_Value::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.base64_binary_ = const_cast< ::google::fhir::stu3::proto::Base64Binary*>(
      ::google::fhir::stu3::proto::Base64Binary::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.boolean_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.code_ = const_cast< ::google::fhir::stu3::proto::Code*>(
      ::google::fhir::stu3::proto::Code::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.date_ = const_cast< ::google::fhir::stu3::proto::Date*>(
      ::google::fhir::stu3::proto::Date::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.date_time_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.decimal_ = const_cast< ::google::fhir::stu3::proto::Decimal*>(
      ::google::fhir::stu3::proto::Decimal::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.id_ = const_cast< ::google::fhir::stu3::proto::Id*>(
      ::google::fhir::stu3::proto::Id::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.instant_ = const_cast< ::google::fhir::stu3::proto::Instant*>(
      ::google::fhir::stu3::proto::Instant::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.integer_ = const_cast< ::google::fhir::stu3::proto::Integer*>(
      ::google::fhir::stu3::proto::Integer::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.markdown_ = const_cast< ::google::fhir::stu3::proto::Markdown*>(
      ::google::fhir::stu3::proto::Markdown::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.oid_ = const_cast< ::google::fhir::stu3::proto::Oid*>(
      ::google::fhir::stu3::proto::Oid::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.positive_int_ = const_cast< ::google::fhir::stu3::proto::PositiveInt*>(
      ::google::fhir::stu3::proto::PositiveInt::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.string_value_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.time_ = const_cast< ::google::fhir::stu3::proto::Time*>(
      ::google::fhir::stu3::proto::Time::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.unsigned_int_ = const_cast< ::google::fhir::stu3::proto::UnsignedInt*>(
      ::google::fhir::stu3::proto::UnsignedInt::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.uri_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.address_ = const_cast< ::google::fhir::stu3::proto::Address*>(
      ::google::fhir::stu3::proto::Address::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.age_ = const_cast< ::google::fhir::stu3::proto::Age*>(
      ::google::fhir::stu3::proto::Age::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.annotation_ = const_cast< ::google::fhir::stu3::proto::Annotation*>(
      ::google::fhir::stu3::proto::Annotation::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.attachment_ = const_cast< ::google::fhir::stu3::proto::Attachment*>(
      ::google::fhir::stu3::proto::Attachment::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.codeable_concept_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.coding_ = const_cast< ::google::fhir::stu3::proto::Coding*>(
      ::google::fhir::stu3::proto::Coding::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.contact_point_ = const_cast< ::google::fhir::stu3::proto::ContactPoint*>(
      ::google::fhir::stu3::proto::ContactPoint::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.count_ = const_cast< ::google::fhir::stu3::proto::Count*>(
      ::google::fhir::stu3::proto::Count::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.distance_ = const_cast< ::google::fhir::stu3::proto::Distance*>(
      ::google::fhir::stu3::proto::Distance::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.duration_ = const_cast< ::google::fhir::stu3::proto::Duration*>(
      ::google::fhir::stu3::proto::Duration::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.human_name_ = const_cast< ::google::fhir::stu3::proto::HumanName*>(
      ::google::fhir::stu3::proto::HumanName::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.identifier_ = const_cast< ::google::fhir::stu3::proto::Identifier*>(
      ::google::fhir::stu3::proto::Identifier::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.money_ = const_cast< ::google::fhir::stu3::proto::Money*>(
      ::google::fhir::stu3::proto::Money::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.period_ = const_cast< ::google::fhir::stu3::proto::Period*>(
      ::google::fhir::stu3::proto::Period::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.quantity_ = const_cast< ::google::fhir::stu3::proto::Quantity*>(
      ::google::fhir::stu3::proto::Quantity::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.range_ = const_cast< ::google::fhir::stu3::proto::Range*>(
      ::google::fhir::stu3::proto::Range::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.ratio_ = const_cast< ::google::fhir::stu3::proto::Ratio*>(
      ::google::fhir::stu3::proto::Ratio::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.reference_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.sampled_data_ = const_cast< ::google::fhir::stu3::proto::SampledData*>(
      ::google::fhir::stu3::proto::SampledData::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.signature_ = const_cast< ::google::fhir::stu3::proto::Signature*>(
      ::google::fhir::stu3::proto::Signature::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.timing_ = const_cast< ::google::fhir::stu3::proto::Timing*>(
      ::google::fhir::stu3::proto::Timing::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_.meta_ = const_cast< ::google::fhir::stu3::proto::Meta*>(
      ::google::fhir::stu3::proto::Meta::internal_default_instance());
}
void ElementDefinition_Example_Value::set_allocated_base64_binary(::google::fhir::stu3::proto::Base64Binary* base64_binary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (base64_binary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      base64_binary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, base64_binary, submessage_arena);
    }
    set_has_base64_binary();
    value_.base64_binary_ = base64_binary;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.base64_binary)
}
void ElementDefinition_Example_Value::clear_base64_binary() {
  if (has_base64_binary()) {
    delete value_.base64_binary_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_boolean(::google::fhir::stu3::proto::Boolean* boolean) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (boolean) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      boolean = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, boolean, submessage_arena);
    }
    set_has_boolean();
    value_.boolean_ = boolean;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.boolean)
}
void ElementDefinition_Example_Value::clear_boolean() {
  if (has_boolean()) {
    delete value_.boolean_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_code(::google::fhir::stu3::proto::Code* code) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (code) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      code = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, code, submessage_arena);
    }
    set_has_code();
    value_.code_ = code;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.code)
}
void ElementDefinition_Example_Value::clear_code() {
  if (has_code()) {
    delete value_.code_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_date(::google::fhir::stu3::proto::Date* date) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (date) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date, submessage_arena);
    }
    set_has_date();
    value_.date_ = date;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.date)
}
void ElementDefinition_Example_Value::clear_date() {
  if (has_date()) {
    delete value_.date_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (date_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date_time, submessage_arena);
    }
    set_has_date_time();
    value_.date_time_ = date_time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.date_time)
}
void ElementDefinition_Example_Value::clear_date_time() {
  if (has_date_time()) {
    delete value_.date_time_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_decimal(::google::fhir::stu3::proto::Decimal* decimal) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (decimal) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      decimal = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, decimal, submessage_arena);
    }
    set_has_decimal();
    value_.decimal_ = decimal;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.decimal)
}
void ElementDefinition_Example_Value::clear_decimal() {
  if (has_decimal()) {
    delete value_.decimal_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_id(::google::fhir::stu3::proto::Id* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    set_has_id();
    value_.id_ = id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.id)
}
void ElementDefinition_Example_Value::clear_id() {
  if (has_id()) {
    delete value_.id_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_instant(::google::fhir::stu3::proto::Instant* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    set_has_instant();
    value_.instant_ = instant;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.instant)
}
void ElementDefinition_Example_Value::clear_instant() {
  if (has_instant()) {
    delete value_.instant_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_integer(::google::fhir::stu3::proto::Integer* integer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (integer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      integer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, integer, submessage_arena);
    }
    set_has_integer();
    value_.integer_ = integer;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.integer)
}
void ElementDefinition_Example_Value::clear_integer() {
  if (has_integer()) {
    delete value_.integer_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_markdown(::google::fhir::stu3::proto::Markdown* markdown) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (markdown) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      markdown = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, markdown, submessage_arena);
    }
    set_has_markdown();
    value_.markdown_ = markdown;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.markdown)
}
void ElementDefinition_Example_Value::clear_markdown() {
  if (has_markdown()) {
    delete value_.markdown_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_oid(::google::fhir::stu3::proto::Oid* oid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (oid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      oid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, oid, submessage_arena);
    }
    set_has_oid();
    value_.oid_ = oid;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.oid)
}
void ElementDefinition_Example_Value::clear_oid() {
  if (has_oid()) {
    delete value_.oid_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_positive_int(::google::fhir::stu3::proto::PositiveInt* positive_int) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (positive_int) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      positive_int = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, positive_int, submessage_arena);
    }
    set_has_positive_int();
    value_.positive_int_ = positive_int;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.positive_int)
}
void ElementDefinition_Example_Value::clear_positive_int() {
  if (has_positive_int()) {
    delete value_.positive_int_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_string_value(::google::fhir::stu3::proto::String* string_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (string_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      string_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, string_value, submessage_arena);
    }
    set_has_string_value();
    value_.string_value_ = string_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.string_value)
}
void ElementDefinition_Example_Value::clear_string_value() {
  if (has_string_value()) {
    delete value_.string_value_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_time(::google::fhir::stu3::proto::Time* time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time, submessage_arena);
    }
    set_has_time();
    value_.time_ = time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.time)
}
void ElementDefinition_Example_Value::clear_time() {
  if (has_time()) {
    delete value_.time_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_unsigned_int(::google::fhir::stu3::proto::UnsignedInt* unsigned_int) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (unsigned_int) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      unsigned_int = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, unsigned_int, submessage_arena);
    }
    set_has_unsigned_int();
    value_.unsigned_int_ = unsigned_int;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.unsigned_int)
}
void ElementDefinition_Example_Value::clear_unsigned_int() {
  if (has_unsigned_int()) {
    delete value_.unsigned_int_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_uri(::google::fhir::stu3::proto::Uri* uri) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (uri) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      uri = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uri, submessage_arena);
    }
    set_has_uri();
    value_.uri_ = uri;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.uri)
}
void ElementDefinition_Example_Value::clear_uri() {
  if (has_uri()) {
    delete value_.uri_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_address(::google::fhir::stu3::proto::Address* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    set_has_address();
    value_.address_ = address;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.address)
}
void ElementDefinition_Example_Value::clear_address() {
  if (has_address()) {
    delete value_.address_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_age(::google::fhir::stu3::proto::Age* age) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (age) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      age = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, age, submessage_arena);
    }
    set_has_age();
    value_.age_ = age;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.age)
}
void ElementDefinition_Example_Value::clear_age() {
  if (has_age()) {
    delete value_.age_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_annotation(::google::fhir::stu3::proto::Annotation* annotation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (annotation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      annotation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, annotation, submessage_arena);
    }
    set_has_annotation();
    value_.annotation_ = annotation;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.annotation)
}
void ElementDefinition_Example_Value::clear_annotation() {
  if (has_annotation()) {
    delete value_.annotation_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_attachment(::google::fhir::stu3::proto::Attachment* attachment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (attachment) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      attachment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, attachment, submessage_arena);
    }
    set_has_attachment();
    value_.attachment_ = attachment;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.attachment)
}
void ElementDefinition_Example_Value::clear_attachment() {
  if (has_attachment()) {
    delete value_.attachment_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (codeable_concept) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      codeable_concept = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, codeable_concept, submessage_arena);
    }
    set_has_codeable_concept();
    value_.codeable_concept_ = codeable_concept;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.codeable_concept)
}
void ElementDefinition_Example_Value::clear_codeable_concept() {
  if (has_codeable_concept()) {
    delete value_.codeable_concept_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_coding(::google::fhir::stu3::proto::Coding* coding) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (coding) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      coding = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, coding, submessage_arena);
    }
    set_has_coding();
    value_.coding_ = coding;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.coding)
}
void ElementDefinition_Example_Value::clear_coding() {
  if (has_coding()) {
    delete value_.coding_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_contact_point(::google::fhir::stu3::proto::ContactPoint* contact_point) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (contact_point) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      contact_point = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, contact_point, submessage_arena);
    }
    set_has_contact_point();
    value_.contact_point_ = contact_point;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.contact_point)
}
void ElementDefinition_Example_Value::clear_contact_point() {
  if (has_contact_point()) {
    delete value_.contact_point_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_count(::google::fhir::stu3::proto::Count* count) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (count) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      count = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, count, submessage_arena);
    }
    set_has_count();
    value_.count_ = count;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.count)
}
void ElementDefinition_Example_Value::clear_count() {
  if (has_count()) {
    delete value_.count_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_distance(::google::fhir::stu3::proto::Distance* distance) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (distance) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      distance = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, distance, submessage_arena);
    }
    set_has_distance();
    value_.distance_ = distance;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.distance)
}
void ElementDefinition_Example_Value::clear_distance() {
  if (has_distance()) {
    delete value_.distance_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_duration(::google::fhir::stu3::proto::Duration* duration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (duration) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      duration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, duration, submessage_arena);
    }
    set_has_duration();
    value_.duration_ = duration;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.duration)
}
void ElementDefinition_Example_Value::clear_duration() {
  if (has_duration()) {
    delete value_.duration_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_human_name(::google::fhir::stu3::proto::HumanName* human_name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (human_name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      human_name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, human_name, submessage_arena);
    }
    set_has_human_name();
    value_.human_name_ = human_name;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.human_name)
}
void ElementDefinition_Example_Value::clear_human_name() {
  if (has_human_name()) {
    delete value_.human_name_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_identifier(::google::fhir::stu3::proto::Identifier* identifier) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (identifier) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      identifier = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, identifier, submessage_arena);
    }
    set_has_identifier();
    value_.identifier_ = identifier;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.identifier)
}
void ElementDefinition_Example_Value::clear_identifier() {
  if (has_identifier()) {
    delete value_.identifier_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_money(::google::fhir::stu3::proto::Money* money) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (money) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      money = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, money, submessage_arena);
    }
    set_has_money();
    value_.money_ = money;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.money)
}
void ElementDefinition_Example_Value::clear_money() {
  if (has_money()) {
    delete value_.money_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_period(::google::fhir::stu3::proto::Period* period) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (period) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      period = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, period, submessage_arena);
    }
    set_has_period();
    value_.period_ = period;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.period)
}
void ElementDefinition_Example_Value::clear_period() {
  if (has_period()) {
    delete value_.period_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_quantity(::google::fhir::stu3::proto::Quantity* quantity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (quantity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      quantity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, quantity, submessage_arena);
    }
    set_has_quantity();
    value_.quantity_ = quantity;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.quantity)
}
void ElementDefinition_Example_Value::clear_quantity() {
  if (has_quantity()) {
    delete value_.quantity_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_range(::google::fhir::stu3::proto::Range* range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (range) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, range, submessage_arena);
    }
    set_has_range();
    value_.range_ = range;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.range)
}
void ElementDefinition_Example_Value::clear_range() {
  if (has_range()) {
    delete value_.range_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_ratio(::google::fhir::stu3::proto::Ratio* ratio) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (ratio) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ratio = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ratio, submessage_arena);
    }
    set_has_ratio();
    value_.ratio_ = ratio;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.ratio)
}
void ElementDefinition_Example_Value::clear_ratio() {
  if (has_ratio()) {
    delete value_.ratio_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_reference(::google::fhir::stu3::proto::Reference* reference) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (reference) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reference = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reference, submessage_arena);
    }
    set_has_reference();
    value_.reference_ = reference;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.reference)
}
void ElementDefinition_Example_Value::clear_reference() {
  if (has_reference()) {
    delete value_.reference_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_sampled_data(::google::fhir::stu3::proto::SampledData* sampled_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (sampled_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sampled_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sampled_data, submessage_arena);
    }
    set_has_sampled_data();
    value_.sampled_data_ = sampled_data;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.sampled_data)
}
void ElementDefinition_Example_Value::clear_sampled_data() {
  if (has_sampled_data()) {
    delete value_.sampled_data_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_signature(::google::fhir::stu3::proto::Signature* signature) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (signature) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      signature = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, signature, submessage_arena);
    }
    set_has_signature();
    value_.signature_ = signature;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.signature)
}
void ElementDefinition_Example_Value::clear_signature() {
  if (has_signature()) {
    delete value_.signature_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_timing(::google::fhir::stu3::proto::Timing* timing) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (timing) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timing = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timing, submessage_arena);
    }
    set_has_timing();
    value_.timing_ = timing;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.timing)
}
void ElementDefinition_Example_Value::clear_timing() {
  if (has_timing()) {
    delete value_.timing_;
    clear_has_value();
  }
}
void ElementDefinition_Example_Value::set_allocated_meta(::google::fhir::stu3::proto::Meta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    set_has_meta();
    value_.meta_ = meta;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.Value.meta)
}
void ElementDefinition_Example_Value::clear_meta() {
  if (has_meta()) {
    delete value_.meta_;
    clear_has_value();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ElementDefinition_Example_Value::kBase64BinaryFieldNumber;
const int ElementDefinition_Example_Value::kBooleanFieldNumber;
const int ElementDefinition_Example_Value::kCodeFieldNumber;
const int ElementDefinition_Example_Value::kDateFieldNumber;
const int ElementDefinition_Example_Value::kDateTimeFieldNumber;
const int ElementDefinition_Example_Value::kDecimalFieldNumber;
const int ElementDefinition_Example_Value::kIdFieldNumber;
const int ElementDefinition_Example_Value::kInstantFieldNumber;
const int ElementDefinition_Example_Value::kIntegerFieldNumber;
const int ElementDefinition_Example_Value::kMarkdownFieldNumber;
const int ElementDefinition_Example_Value::kOidFieldNumber;
const int ElementDefinition_Example_Value::kPositiveIntFieldNumber;
const int ElementDefinition_Example_Value::kStringValueFieldNumber;
const int ElementDefinition_Example_Value::kTimeFieldNumber;
const int ElementDefinition_Example_Value::kUnsignedIntFieldNumber;
const int ElementDefinition_Example_Value::kUriFieldNumber;
const int ElementDefinition_Example_Value::kAddressFieldNumber;
const int ElementDefinition_Example_Value::kAgeFieldNumber;
const int ElementDefinition_Example_Value::kAnnotationFieldNumber;
const int ElementDefinition_Example_Value::kAttachmentFieldNumber;
const int ElementDefinition_Example_Value::kCodeableConceptFieldNumber;
const int ElementDefinition_Example_Value::kCodingFieldNumber;
const int ElementDefinition_Example_Value::kContactPointFieldNumber;
const int ElementDefinition_Example_Value::kCountFieldNumber;
const int ElementDefinition_Example_Value::kDistanceFieldNumber;
const int ElementDefinition_Example_Value::kDurationFieldNumber;
const int ElementDefinition_Example_Value::kHumanNameFieldNumber;
const int ElementDefinition_Example_Value::kIdentifierFieldNumber;
const int ElementDefinition_Example_Value::kMoneyFieldNumber;
const int ElementDefinition_Example_Value::kPeriodFieldNumber;
const int ElementDefinition_Example_Value::kQuantityFieldNumber;
const int ElementDefinition_Example_Value::kRangeFieldNumber;
const int ElementDefinition_Example_Value::kRatioFieldNumber;
const int ElementDefinition_Example_Value::kReferenceFieldNumber;
const int ElementDefinition_Example_Value::kSampledDataFieldNumber;
const int ElementDefinition_Example_Value::kSignatureFieldNumber;
const int ElementDefinition_Example_Value::kTimingFieldNumber;
const int ElementDefinition_Example_Value::kMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ElementDefinition_Example_Value::ElementDefinition_Example_Value()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_Example_Value.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.ElementDefinition.Example.Value)
}
ElementDefinition_Example_Value::ElementDefinition_Example_Value(const ElementDefinition_Example_Value& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kBase64Binary: {
      mutable_base64_binary()->::google::fhir::stu3::proto::Base64Binary::MergeFrom(from.base64_binary());
      break;
    }
    case kBoolean: {
      mutable_boolean()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.boolean());
      break;
    }
    case kCode: {
      mutable_code()->::google::fhir::stu3::proto::Code::MergeFrom(from.code());
      break;
    }
    case kDate: {
      mutable_date()->::google::fhir::stu3::proto::Date::MergeFrom(from.date());
      break;
    }
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kDecimal: {
      mutable_decimal()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.decimal());
      break;
    }
    case kId: {
      mutable_id()->::google::fhir::stu3::proto::Id::MergeFrom(from.id());
      break;
    }
    case kInstant: {
      mutable_instant()->::google::fhir::stu3::proto::Instant::MergeFrom(from.instant());
      break;
    }
    case kInteger: {
      mutable_integer()->::google::fhir::stu3::proto::Integer::MergeFrom(from.integer());
      break;
    }
    case kMarkdown: {
      mutable_markdown()->::google::fhir::stu3::proto::Markdown::MergeFrom(from.markdown());
      break;
    }
    case kOid: {
      mutable_oid()->::google::fhir::stu3::proto::Oid::MergeFrom(from.oid());
      break;
    }
    case kPositiveInt: {
      mutable_positive_int()->::google::fhir::stu3::proto::PositiveInt::MergeFrom(from.positive_int());
      break;
    }
    case kStringValue: {
      mutable_string_value()->::google::fhir::stu3::proto::String::MergeFrom(from.string_value());
      break;
    }
    case kTime: {
      mutable_time()->::google::fhir::stu3::proto::Time::MergeFrom(from.time());
      break;
    }
    case kUnsignedInt: {
      mutable_unsigned_int()->::google::fhir::stu3::proto::UnsignedInt::MergeFrom(from.unsigned_int());
      break;
    }
    case kUri: {
      mutable_uri()->::google::fhir::stu3::proto::Uri::MergeFrom(from.uri());
      break;
    }
    case kAddress: {
      mutable_address()->::google::fhir::stu3::proto::Address::MergeFrom(from.address());
      break;
    }
    case kAge: {
      mutable_age()->::google::fhir::stu3::proto::Age::MergeFrom(from.age());
      break;
    }
    case kAnnotation: {
      mutable_annotation()->::google::fhir::stu3::proto::Annotation::MergeFrom(from.annotation());
      break;
    }
    case kAttachment: {
      mutable_attachment()->::google::fhir::stu3::proto::Attachment::MergeFrom(from.attachment());
      break;
    }
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case kCoding: {
      mutable_coding()->::google::fhir::stu3::proto::Coding::MergeFrom(from.coding());
      break;
    }
    case kContactPoint: {
      mutable_contact_point()->::google::fhir::stu3::proto::ContactPoint::MergeFrom(from.contact_point());
      break;
    }
    case kCount: {
      mutable_count()->::google::fhir::stu3::proto::Count::MergeFrom(from.count());
      break;
    }
    case kDistance: {
      mutable_distance()->::google::fhir::stu3::proto::Distance::MergeFrom(from.distance());
      break;
    }
    case kDuration: {
      mutable_duration()->::google::fhir::stu3::proto::Duration::MergeFrom(from.duration());
      break;
    }
    case kHumanName: {
      mutable_human_name()->::google::fhir::stu3::proto::HumanName::MergeFrom(from.human_name());
      break;
    }
    case kIdentifier: {
      mutable_identifier()->::google::fhir::stu3::proto::Identifier::MergeFrom(from.identifier());
      break;
    }
    case kMoney: {
      mutable_money()->::google::fhir::stu3::proto::Money::MergeFrom(from.money());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case kQuantity: {
      mutable_quantity()->::google::fhir::stu3::proto::Quantity::MergeFrom(from.quantity());
      break;
    }
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case kRatio: {
      mutable_ratio()->::google::fhir::stu3::proto::Ratio::MergeFrom(from.ratio());
      break;
    }
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case kSampledData: {
      mutable_sampled_data()->::google::fhir::stu3::proto::SampledData::MergeFrom(from.sampled_data());
      break;
    }
    case kSignature: {
      mutable_signature()->::google::fhir::stu3::proto::Signature::MergeFrom(from.signature());
      break;
    }
    case kTiming: {
      mutable_timing()->::google::fhir::stu3::proto::Timing::MergeFrom(from.timing());
      break;
    }
    case kMeta: {
      mutable_meta()->::google::fhir::stu3::proto::Meta::MergeFrom(from.meta());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.ElementDefinition.Example.Value)
}

void ElementDefinition_Example_Value::SharedCtor() {
  clear_has_value();
}

ElementDefinition_Example_Value::~ElementDefinition_Example_Value() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.ElementDefinition.Example.Value)
  SharedDtor();
}

void ElementDefinition_Example_Value::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
}

void ElementDefinition_Example_Value::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ElementDefinition_Example_Value::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ElementDefinition_Example_Value& ElementDefinition_Example_Value::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_Example_Value.base);
  return *internal_default_instance();
}


void ElementDefinition_Example_Value::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.proto.ElementDefinition.Example.Value)
  switch (value_case()) {
    case kBase64Binary: {
      delete value_.base64_binary_;
      break;
    }
    case kBoolean: {
      delete value_.boolean_;
      break;
    }
    case kCode: {
      delete value_.code_;
      break;
    }
    case kDate: {
      delete value_.date_;
      break;
    }
    case kDateTime: {
      delete value_.date_time_;
      break;
    }
    case kDecimal: {
      delete value_.decimal_;
      break;
    }
    case kId: {
      delete value_.id_;
      break;
    }
    case kInstant: {
      delete value_.instant_;
      break;
    }
    case kInteger: {
      delete value_.integer_;
      break;
    }
    case kMarkdown: {
      delete value_.markdown_;
      break;
    }
    case kOid: {
      delete value_.oid_;
      break;
    }
    case kPositiveInt: {
      delete value_.positive_int_;
      break;
    }
    case kStringValue: {
      delete value_.string_value_;
      break;
    }
    case kTime: {
      delete value_.time_;
      break;
    }
    case kUnsignedInt: {
      delete value_.unsigned_int_;
      break;
    }
    case kUri: {
      delete value_.uri_;
      break;
    }
    case kAddress: {
      delete value_.address_;
      break;
    }
    case kAge: {
      delete value_.age_;
      break;
    }
    case kAnnotation: {
      delete value_.annotation_;
      break;
    }
    case kAttachment: {
      delete value_.attachment_;
      break;
    }
    case kCodeableConcept: {
      delete value_.codeable_concept_;
      break;
    }
    case kCoding: {
      delete value_.coding_;
      break;
    }
    case kContactPoint: {
      delete value_.contact_point_;
      break;
    }
    case kCount: {
      delete value_.count_;
      break;
    }
    case kDistance: {
      delete value_.distance_;
      break;
    }
    case kDuration: {
      delete value_.duration_;
      break;
    }
    case kHumanName: {
      delete value_.human_name_;
      break;
    }
    case kIdentifier: {
      delete value_.identifier_;
      break;
    }
    case kMoney: {
      delete value_.money_;
      break;
    }
    case kPeriod: {
      delete value_.period_;
      break;
    }
    case kQuantity: {
      delete value_.quantity_;
      break;
    }
    case kRange: {
      delete value_.range_;
      break;
    }
    case kRatio: {
      delete value_.ratio_;
      break;
    }
    case kReference: {
      delete value_.reference_;
      break;
    }
    case kSampledData: {
      delete value_.sampled_data_;
      break;
    }
    case kSignature: {
      delete value_.signature_;
      break;
    }
    case kTiming: {
      delete value_.timing_;
      break;
    }
    case kMeta: {
      delete value_.meta_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void ElementDefinition_Example_Value::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.ElementDefinition.Example.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear();
}

bool ElementDefinition_Example_Value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.ElementDefinition.Example.Value)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Base64Binary base64_binary = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base64_binary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Boolean boolean = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_boolean()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Code code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Date date = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DateTime date_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Decimal decimal = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_decimal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Id id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Instant instant = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Integer integer = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_integer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Markdown markdown = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_markdown()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Oid oid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_oid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.PositiveInt positive_int = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_positive_int()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String string_value = 13[json_name = "string"];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_string_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Time time = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_unsigned_int()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri uri = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uri()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Address address = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Age age = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_age()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Annotation annotation = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_annotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Attachment attachment = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_attachment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_codeable_concept()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Coding coding = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_coding()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ContactPoint contact_point = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_contact_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Count count = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_count()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Distance distance = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_distance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Duration duration = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.HumanName human_name = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_human_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Identifier identifier = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Money money = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_money()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Period period = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Quantity quantity = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_quantity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Range range = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Ratio ratio = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ratio()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference reference = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.SampledData sampled_data = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 282 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sampled_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Signature signature = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 290 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Timing timing = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 298 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Meta meta = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 306 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.ElementDefinition.Example.Value)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.ElementDefinition.Example.Value)
  return false;
#undef DO_
}

void ElementDefinition_Example_Value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.ElementDefinition.Example.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Base64Binary base64_binary = 1;
  if (has_base64_binary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_base64_binary(), output);
  }

  // .google.fhir.stu3.proto.Boolean boolean = 2;
  if (has_boolean()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_boolean(), output);
  }

  // .google.fhir.stu3.proto.Code code = 3;
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_code(), output);
  }

  // .google.fhir.stu3.proto.Date date = 4;
  if (has_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_date(), output);
  }

  // .google.fhir.stu3.proto.DateTime date_time = 5;
  if (has_date_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_date_time(), output);
  }

  // .google.fhir.stu3.proto.Decimal decimal = 6;
  if (has_decimal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_decimal(), output);
  }

  // .google.fhir.stu3.proto.Id id = 7;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_id(), output);
  }

  // .google.fhir.stu3.proto.Instant instant = 8;
  if (has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_instant(), output);
  }

  // .google.fhir.stu3.proto.Integer integer = 9;
  if (has_integer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_integer(), output);
  }

  // .google.fhir.stu3.proto.Markdown markdown = 10;
  if (has_markdown()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_markdown(), output);
  }

  // .google.fhir.stu3.proto.Oid oid = 11;
  if (has_oid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_oid(), output);
  }

  // .google.fhir.stu3.proto.PositiveInt positive_int = 12;
  if (has_positive_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_positive_int(), output);
  }

  // .google.fhir.stu3.proto.String string_value = 13[json_name = "string"];
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_string_value(), output);
  }

  // .google.fhir.stu3.proto.Time time = 14;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_time(), output);
  }

  // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
  if (has_unsigned_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_unsigned_int(), output);
  }

  // .google.fhir.stu3.proto.Uri uri = 16;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_uri(), output);
  }

  // .google.fhir.stu3.proto.Address address = 17;
  if (has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_address(), output);
  }

  // .google.fhir.stu3.proto.Age age = 18;
  if (has_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_age(), output);
  }

  // .google.fhir.stu3.proto.Annotation annotation = 19;
  if (has_annotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_annotation(), output);
  }

  // .google.fhir.stu3.proto.Attachment attachment = 20;
  if (has_attachment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_attachment(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
  if (has_codeable_concept()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_codeable_concept(), output);
  }

  // .google.fhir.stu3.proto.Coding coding = 22;
  if (has_coding()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->_internal_coding(), output);
  }

  // .google.fhir.stu3.proto.ContactPoint contact_point = 23;
  if (has_contact_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->_internal_contact_point(), output);
  }

  // .google.fhir.stu3.proto.Count count = 24;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->_internal_count(), output);
  }

  // .google.fhir.stu3.proto.Distance distance = 25;
  if (has_distance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->_internal_distance(), output);
  }

  // .google.fhir.stu3.proto.Duration duration = 26;
  if (has_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->_internal_duration(), output);
  }

  // .google.fhir.stu3.proto.HumanName human_name = 27;
  if (has_human_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->_internal_human_name(), output);
  }

  // .google.fhir.stu3.proto.Identifier identifier = 28;
  if (has_identifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, this->_internal_identifier(), output);
  }

  // .google.fhir.stu3.proto.Money money = 29;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, this->_internal_money(), output);
  }

  // .google.fhir.stu3.proto.Period period = 30;
  if (has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, this->_internal_period(), output);
  }

  // .google.fhir.stu3.proto.Quantity quantity = 31;
  if (has_quantity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, this->_internal_quantity(), output);
  }

  // .google.fhir.stu3.proto.Range range = 32;
  if (has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32, this->_internal_range(), output);
  }

  // .google.fhir.stu3.proto.Ratio ratio = 33;
  if (has_ratio()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33, this->_internal_ratio(), output);
  }

  // .google.fhir.stu3.proto.Reference reference = 34;
  if (has_reference()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      34, this->_internal_reference(), output);
  }

  // .google.fhir.stu3.proto.SampledData sampled_data = 35;
  if (has_sampled_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      35, this->_internal_sampled_data(), output);
  }

  // .google.fhir.stu3.proto.Signature signature = 36;
  if (has_signature()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      36, this->_internal_signature(), output);
  }

  // .google.fhir.stu3.proto.Timing timing = 37;
  if (has_timing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      37, this->_internal_timing(), output);
  }

  // .google.fhir.stu3.proto.Meta meta = 38;
  if (has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      38, this->_internal_meta(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.ElementDefinition.Example.Value)
}

::google::protobuf::uint8* ElementDefinition_Example_Value::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.ElementDefinition.Example.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Base64Binary base64_binary = 1;
  if (has_base64_binary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_base64_binary(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Boolean boolean = 2;
  if (has_boolean()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_boolean(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Code code = 3;
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_code(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Date date = 4;
  if (has_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_date(), deterministic, target);
  }

  // .google.fhir.stu3.proto.DateTime date_time = 5;
  if (has_date_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_date_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Decimal decimal = 6;
  if (has_decimal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_decimal(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Id id = 7;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Instant instant = 8;
  if (has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_instant(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Integer integer = 9;
  if (has_integer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_integer(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Markdown markdown = 10;
  if (has_markdown()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_markdown(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Oid oid = 11;
  if (has_oid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_oid(), deterministic, target);
  }

  // .google.fhir.stu3.proto.PositiveInt positive_int = 12;
  if (has_positive_int()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_positive_int(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String string_value = 13[json_name = "string"];
  if (has_string_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_string_value(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Time time = 14;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
  if (has_unsigned_int()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_unsigned_int(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri uri = 16;
  if (has_uri()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_uri(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Address address = 17;
  if (has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_address(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Age age = 18;
  if (has_age()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_age(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Annotation annotation = 19;
  if (has_annotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_annotation(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Attachment attachment = 20;
  if (has_attachment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_attachment(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
  if (has_codeable_concept()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_codeable_concept(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Coding coding = 22;
  if (has_coding()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->_internal_coding(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ContactPoint contact_point = 23;
  if (has_contact_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->_internal_contact_point(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Count count = 24;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->_internal_count(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Distance distance = 25;
  if (has_distance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->_internal_distance(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Duration duration = 26;
  if (has_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, this->_internal_duration(), deterministic, target);
  }

  // .google.fhir.stu3.proto.HumanName human_name = 27;
  if (has_human_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, this->_internal_human_name(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Identifier identifier = 28;
  if (has_identifier()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, this->_internal_identifier(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Money money = 29;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29, this->_internal_money(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Period period = 30;
  if (has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, this->_internal_period(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Quantity quantity = 31;
  if (has_quantity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        31, this->_internal_quantity(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Range range = 32;
  if (has_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        32, this->_internal_range(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Ratio ratio = 33;
  if (has_ratio()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        33, this->_internal_ratio(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference reference = 34;
  if (has_reference()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        34, this->_internal_reference(), deterministic, target);
  }

  // .google.fhir.stu3.proto.SampledData sampled_data = 35;
  if (has_sampled_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        35, this->_internal_sampled_data(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Signature signature = 36;
  if (has_signature()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        36, this->_internal_signature(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Timing timing = 37;
  if (has_timing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        37, this->_internal_timing(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Meta meta = 38;
  if (has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        38, this->_internal_meta(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.ElementDefinition.Example.Value)
  return target;
}

size_t ElementDefinition_Example_Value::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.ElementDefinition.Example.Value)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (value_case()) {
    // .google.fhir.stu3.proto.Base64Binary base64_binary = 1;
    case kBase64Binary: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.base64_binary_);
      break;
    }
    // .google.fhir.stu3.proto.Boolean boolean = 2;
    case kBoolean: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.boolean_);
      break;
    }
    // .google.fhir.stu3.proto.Code code = 3;
    case kCode: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.code_);
      break;
    }
    // .google.fhir.stu3.proto.Date date = 4;
    case kDate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.date_);
      break;
    }
    // .google.fhir.stu3.proto.DateTime date_time = 5;
    case kDateTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.date_time_);
      break;
    }
    // .google.fhir.stu3.proto.Decimal decimal = 6;
    case kDecimal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.decimal_);
      break;
    }
    // .google.fhir.stu3.proto.Id id = 7;
    case kId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.id_);
      break;
    }
    // .google.fhir.stu3.proto.Instant instant = 8;
    case kInstant: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.instant_);
      break;
    }
    // .google.fhir.stu3.proto.Integer integer = 9;
    case kInteger: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.integer_);
      break;
    }
    // .google.fhir.stu3.proto.Markdown markdown = 10;
    case kMarkdown: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.markdown_);
      break;
    }
    // .google.fhir.stu3.proto.Oid oid = 11;
    case kOid: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.oid_);
      break;
    }
    // .google.fhir.stu3.proto.PositiveInt positive_int = 12;
    case kPositiveInt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.positive_int_);
      break;
    }
    // .google.fhir.stu3.proto.String string_value = 13[json_name = "string"];
    case kStringValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.string_value_);
      break;
    }
    // .google.fhir.stu3.proto.Time time = 14;
    case kTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.time_);
      break;
    }
    // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
    case kUnsignedInt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.unsigned_int_);
      break;
    }
    // .google.fhir.stu3.proto.Uri uri = 16;
    case kUri: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.uri_);
      break;
    }
    // .google.fhir.stu3.proto.Address address = 17;
    case kAddress: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.address_);
      break;
    }
    // .google.fhir.stu3.proto.Age age = 18;
    case kAge: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.age_);
      break;
    }
    // .google.fhir.stu3.proto.Annotation annotation = 19;
    case kAnnotation: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.annotation_);
      break;
    }
    // .google.fhir.stu3.proto.Attachment attachment = 20;
    case kAttachment: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.attachment_);
      break;
    }
    // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
    case kCodeableConcept: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.codeable_concept_);
      break;
    }
    // .google.fhir.stu3.proto.Coding coding = 22;
    case kCoding: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.coding_);
      break;
    }
    // .google.fhir.stu3.proto.ContactPoint contact_point = 23;
    case kContactPoint: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.contact_point_);
      break;
    }
    // .google.fhir.stu3.proto.Count count = 24;
    case kCount: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.count_);
      break;
    }
    // .google.fhir.stu3.proto.Distance distance = 25;
    case kDistance: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.distance_);
      break;
    }
    // .google.fhir.stu3.proto.Duration duration = 26;
    case kDuration: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.duration_);
      break;
    }
    // .google.fhir.stu3.proto.HumanName human_name = 27;
    case kHumanName: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.human_name_);
      break;
    }
    // .google.fhir.stu3.proto.Identifier identifier = 28;
    case kIdentifier: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.identifier_);
      break;
    }
    // .google.fhir.stu3.proto.Money money = 29;
    case kMoney: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.money_);
      break;
    }
    // .google.fhir.stu3.proto.Period period = 30;
    case kPeriod: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.period_);
      break;
    }
    // .google.fhir.stu3.proto.Quantity quantity = 31;
    case kQuantity: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.quantity_);
      break;
    }
    // .google.fhir.stu3.proto.Range range = 32;
    case kRange: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.range_);
      break;
    }
    // .google.fhir.stu3.proto.Ratio ratio = 33;
    case kRatio: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.ratio_);
      break;
    }
    // .google.fhir.stu3.proto.Reference reference = 34;
    case kReference: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.reference_);
      break;
    }
    // .google.fhir.stu3.proto.SampledData sampled_data = 35;
    case kSampledData: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.sampled_data_);
      break;
    }
    // .google.fhir.stu3.proto.Signature signature = 36;
    case kSignature: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.signature_);
      break;
    }
    // .google.fhir.stu3.proto.Timing timing = 37;
    case kTiming: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.timing_);
      break;
    }
    // .google.fhir.stu3.proto.Meta meta = 38;
    case kMeta: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.meta_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ElementDefinition_Example_Value::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.ElementDefinition.Example.Value)
  GOOGLE_DCHECK_NE(&from, this);
  const ElementDefinition_Example_Value* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ElementDefinition_Example_Value>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.ElementDefinition.Example.Value)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.ElementDefinition.Example.Value)
    MergeFrom(*source);
  }
}

void ElementDefinition_Example_Value::MergeFrom(const ElementDefinition_Example_Value& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.ElementDefinition.Example.Value)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kBase64Binary: {
      mutable_base64_binary()->::google::fhir::stu3::proto::Base64Binary::MergeFrom(from.base64_binary());
      break;
    }
    case kBoolean: {
      mutable_boolean()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.boolean());
      break;
    }
    case kCode: {
      mutable_code()->::google::fhir::stu3::proto::Code::MergeFrom(from.code());
      break;
    }
    case kDate: {
      mutable_date()->::google::fhir::stu3::proto::Date::MergeFrom(from.date());
      break;
    }
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kDecimal: {
      mutable_decimal()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.decimal());
      break;
    }
    case kId: {
      mutable_id()->::google::fhir::stu3::proto::Id::MergeFrom(from.id());
      break;
    }
    case kInstant: {
      mutable_instant()->::google::fhir::stu3::proto::Instant::MergeFrom(from.instant());
      break;
    }
    case kInteger: {
      mutable_integer()->::google::fhir::stu3::proto::Integer::MergeFrom(from.integer());
      break;
    }
    case kMarkdown: {
      mutable_markdown()->::google::fhir::stu3::proto::Markdown::MergeFrom(from.markdown());
      break;
    }
    case kOid: {
      mutable_oid()->::google::fhir::stu3::proto::Oid::MergeFrom(from.oid());
      break;
    }
    case kPositiveInt: {
      mutable_positive_int()->::google::fhir::stu3::proto::PositiveInt::MergeFrom(from.positive_int());
      break;
    }
    case kStringValue: {
      mutable_string_value()->::google::fhir::stu3::proto::String::MergeFrom(from.string_value());
      break;
    }
    case kTime: {
      mutable_time()->::google::fhir::stu3::proto::Time::MergeFrom(from.time());
      break;
    }
    case kUnsignedInt: {
      mutable_unsigned_int()->::google::fhir::stu3::proto::UnsignedInt::MergeFrom(from.unsigned_int());
      break;
    }
    case kUri: {
      mutable_uri()->::google::fhir::stu3::proto::Uri::MergeFrom(from.uri());
      break;
    }
    case kAddress: {
      mutable_address()->::google::fhir::stu3::proto::Address::MergeFrom(from.address());
      break;
    }
    case kAge: {
      mutable_age()->::google::fhir::stu3::proto::Age::MergeFrom(from.age());
      break;
    }
    case kAnnotation: {
      mutable_annotation()->::google::fhir::stu3::proto::Annotation::MergeFrom(from.annotation());
      break;
    }
    case kAttachment: {
      mutable_attachment()->::google::fhir::stu3::proto::Attachment::MergeFrom(from.attachment());
      break;
    }
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case kCoding: {
      mutable_coding()->::google::fhir::stu3::proto::Coding::MergeFrom(from.coding());
      break;
    }
    case kContactPoint: {
      mutable_contact_point()->::google::fhir::stu3::proto::ContactPoint::MergeFrom(from.contact_point());
      break;
    }
    case kCount: {
      mutable_count()->::google::fhir::stu3::proto::Count::MergeFrom(from.count());
      break;
    }
    case kDistance: {
      mutable_distance()->::google::fhir::stu3::proto::Distance::MergeFrom(from.distance());
      break;
    }
    case kDuration: {
      mutable_duration()->::google::fhir::stu3::proto::Duration::MergeFrom(from.duration());
      break;
    }
    case kHumanName: {
      mutable_human_name()->::google::fhir::stu3::proto::HumanName::MergeFrom(from.human_name());
      break;
    }
    case kIdentifier: {
      mutable_identifier()->::google::fhir::stu3::proto::Identifier::MergeFrom(from.identifier());
      break;
    }
    case kMoney: {
      mutable_money()->::google::fhir::stu3::proto::Money::MergeFrom(from.money());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case kQuantity: {
      mutable_quantity()->::google::fhir::stu3::proto::Quantity::MergeFrom(from.quantity());
      break;
    }
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case kRatio: {
      mutable_ratio()->::google::fhir::stu3::proto::Ratio::MergeFrom(from.ratio());
      break;
    }
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case kSampledData: {
      mutable_sampled_data()->::google::fhir::stu3::proto::SampledData::MergeFrom(from.sampled_data());
      break;
    }
    case kSignature: {
      mutable_signature()->::google::fhir::stu3::proto::Signature::MergeFrom(from.signature());
      break;
    }
    case kTiming: {
      mutable_timing()->::google::fhir::stu3::proto::Timing::MergeFrom(from.timing());
      break;
    }
    case kMeta: {
      mutable_meta()->::google::fhir::stu3::proto::Meta::MergeFrom(from.meta());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void ElementDefinition_Example_Value::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.ElementDefinition.Example.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ElementDefinition_Example_Value::CopyFrom(const ElementDefinition_Example_Value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.ElementDefinition.Example.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ElementDefinition_Example_Value::IsInitialized() const {
  return true;
}

void ElementDefinition_Example_Value::Swap(ElementDefinition_Example_Value* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ElementDefinition_Example_Value::InternalSwap(ElementDefinition_Example_Value* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ElementDefinition_Example_Value::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ElementDefinition_Example::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_ElementDefinition_Example_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_default_instance_._instance.get_mutable()->label_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Example_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::fhir::stu3::proto::ElementDefinition_Example_Value*>(
      ::google::fhir::stu3::proto::ElementDefinition_Example_Value::internal_default_instance());
}
void ElementDefinition_Example::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void ElementDefinition_Example::clear_extension() {
  extension_.Clear();
}
void ElementDefinition_Example::clear_label() {
  if (GetArenaNoVirtual() == NULL && label_ != NULL) {
    delete label_;
  }
  label_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ElementDefinition_Example::kIdFieldNumber;
const int ElementDefinition_Example::kExtensionFieldNumber;
const int ElementDefinition_Example::kLabelFieldNumber;
const int ElementDefinition_Example::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ElementDefinition_Example::ElementDefinition_Example()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_Example.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.ElementDefinition.Example)
}
ElementDefinition_Example::ElementDefinition_Example(const ElementDefinition_Example& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_label()) {
    label_ = new ::google::fhir::stu3::proto::String(*from.label_);
  } else {
    label_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::google::fhir::stu3::proto::ElementDefinition_Example_Value(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.ElementDefinition.Example)
}

void ElementDefinition_Example::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&id_)) + sizeof(value_));
}

ElementDefinition_Example::~ElementDefinition_Example() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.ElementDefinition.Example)
  SharedDtor();
}

void ElementDefinition_Example::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete label_;
  if (this != internal_default_instance()) delete value_;
}

void ElementDefinition_Example::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ElementDefinition_Example::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ElementDefinition_Example& ElementDefinition_Example::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_Example.base);
  return *internal_default_instance();
}


void ElementDefinition_Example::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.ElementDefinition.Example)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && label_ != NULL) {
    delete label_;
  }
  label_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  _internal_metadata_.Clear();
}

bool ElementDefinition_Example::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.ElementDefinition.Example)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String label = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_label()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ElementDefinition.Example.Value value = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.ElementDefinition.Example)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.ElementDefinition.Example)
  return false;
#undef DO_
}

void ElementDefinition_Example::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.ElementDefinition.Example)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.String label = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_label()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_label(), output);
  }

  // .google.fhir.stu3.proto.ElementDefinition.Example.Value value = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.ElementDefinition.Example)
}

::google::protobuf::uint8* ElementDefinition_Example::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.ElementDefinition.Example)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.String label = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_label()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_label(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ElementDefinition.Example.Value value = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_value(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.ElementDefinition.Example)
  return target;
}

size_t ElementDefinition_Example::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.ElementDefinition.Example)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.String label = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_label()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *label_);
  }

  // .google.fhir.stu3.proto.ElementDefinition.Example.Value value = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ElementDefinition_Example::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.ElementDefinition.Example)
  GOOGLE_DCHECK_NE(&from, this);
  const ElementDefinition_Example* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ElementDefinition_Example>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.ElementDefinition.Example)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.ElementDefinition.Example)
    MergeFrom(*source);
  }
}

void ElementDefinition_Example::MergeFrom(const ElementDefinition_Example& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.ElementDefinition.Example)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_label()) {
    mutable_label()->::google::fhir::stu3::proto::String::MergeFrom(from.label());
  }
  if (from.has_value()) {
    mutable_value()->::google::fhir::stu3::proto::ElementDefinition_Example_Value::MergeFrom(from.value());
  }
}

void ElementDefinition_Example::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.ElementDefinition.Example)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ElementDefinition_Example::CopyFrom(const ElementDefinition_Example& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.ElementDefinition.Example)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ElementDefinition_Example::IsInitialized() const {
  return true;
}

void ElementDefinition_Example::Swap(ElementDefinition_Example* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ElementDefinition_Example::InternalSwap(ElementDefinition_Example* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(label_, other->label_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ElementDefinition_Example::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ElementDefinition_MinValue::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_ElementDefinition_MinValue_default_instance_.date_ = const_cast< ::google::fhir::stu3::proto::Date*>(
      ::google::fhir::stu3::proto::Date::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_MinValue_default_instance_.date_time_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_MinValue_default_instance_.instant_ = const_cast< ::google::fhir::stu3::proto::Instant*>(
      ::google::fhir::stu3::proto::Instant::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_MinValue_default_instance_.time_ = const_cast< ::google::fhir::stu3::proto::Time*>(
      ::google::fhir::stu3::proto::Time::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_MinValue_default_instance_.decimal_ = const_cast< ::google::fhir::stu3::proto::Decimal*>(
      ::google::fhir::stu3::proto::Decimal::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_MinValue_default_instance_.integer_ = const_cast< ::google::fhir::stu3::proto::Integer*>(
      ::google::fhir::stu3::proto::Integer::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_MinValue_default_instance_.positive_int_ = const_cast< ::google::fhir::stu3::proto::PositiveInt*>(
      ::google::fhir::stu3::proto::PositiveInt::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_MinValue_default_instance_.unsigned_int_ = const_cast< ::google::fhir::stu3::proto::UnsignedInt*>(
      ::google::fhir::stu3::proto::UnsignedInt::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_MinValue_default_instance_.quantity_ = const_cast< ::google::fhir::stu3::proto::Quantity*>(
      ::google::fhir::stu3::proto::Quantity::internal_default_instance());
}
void ElementDefinition_MinValue::set_allocated_date(::google::fhir::stu3::proto::Date* date) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_min_value();
  if (date) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date, submessage_arena);
    }
    set_has_date();
    min_value_.date_ = date;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.MinValue.date)
}
void ElementDefinition_MinValue::clear_date() {
  if (has_date()) {
    delete min_value_.date_;
    clear_has_min_value();
  }
}
void ElementDefinition_MinValue::set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_min_value();
  if (date_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date_time, submessage_arena);
    }
    set_has_date_time();
    min_value_.date_time_ = date_time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.MinValue.date_time)
}
void ElementDefinition_MinValue::clear_date_time() {
  if (has_date_time()) {
    delete min_value_.date_time_;
    clear_has_min_value();
  }
}
void ElementDefinition_MinValue::set_allocated_instant(::google::fhir::stu3::proto::Instant* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_min_value();
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    set_has_instant();
    min_value_.instant_ = instant;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.MinValue.instant)
}
void ElementDefinition_MinValue::clear_instant() {
  if (has_instant()) {
    delete min_value_.instant_;
    clear_has_min_value();
  }
}
void ElementDefinition_MinValue::set_allocated_time(::google::fhir::stu3::proto::Time* time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_min_value();
  if (time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time, submessage_arena);
    }
    set_has_time();
    min_value_.time_ = time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.MinValue.time)
}
void ElementDefinition_MinValue::clear_time() {
  if (has_time()) {
    delete min_value_.time_;
    clear_has_min_value();
  }
}
void ElementDefinition_MinValue::set_allocated_decimal(::google::fhir::stu3::proto::Decimal* decimal) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_min_value();
  if (decimal) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      decimal = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, decimal, submessage_arena);
    }
    set_has_decimal();
    min_value_.decimal_ = decimal;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.MinValue.decimal)
}
void ElementDefinition_MinValue::clear_decimal() {
  if (has_decimal()) {
    delete min_value_.decimal_;
    clear_has_min_value();
  }
}
void ElementDefinition_MinValue::set_allocated_integer(::google::fhir::stu3::proto::Integer* integer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_min_value();
  if (integer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      integer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, integer, submessage_arena);
    }
    set_has_integer();
    min_value_.integer_ = integer;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.MinValue.integer)
}
void ElementDefinition_MinValue::clear_integer() {
  if (has_integer()) {
    delete min_value_.integer_;
    clear_has_min_value();
  }
}
void ElementDefinition_MinValue::set_allocated_positive_int(::google::fhir::stu3::proto::PositiveInt* positive_int) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_min_value();
  if (positive_int) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      positive_int = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, positive_int, submessage_arena);
    }
    set_has_positive_int();
    min_value_.positive_int_ = positive_int;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.MinValue.positive_int)
}
void ElementDefinition_MinValue::clear_positive_int() {
  if (has_positive_int()) {
    delete min_value_.positive_int_;
    clear_has_min_value();
  }
}
void ElementDefinition_MinValue::set_allocated_unsigned_int(::google::fhir::stu3::proto::UnsignedInt* unsigned_int) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_min_value();
  if (unsigned_int) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      unsigned_int = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, unsigned_int, submessage_arena);
    }
    set_has_unsigned_int();
    min_value_.unsigned_int_ = unsigned_int;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.MinValue.unsigned_int)
}
void ElementDefinition_MinValue::clear_unsigned_int() {
  if (has_unsigned_int()) {
    delete min_value_.unsigned_int_;
    clear_has_min_value();
  }
}
void ElementDefinition_MinValue::set_allocated_quantity(::google::fhir::stu3::proto::Quantity* quantity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_min_value();
  if (quantity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      quantity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, quantity, submessage_arena);
    }
    set_has_quantity();
    min_value_.quantity_ = quantity;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.MinValue.quantity)
}
void ElementDefinition_MinValue::clear_quantity() {
  if (has_quantity()) {
    delete min_value_.quantity_;
    clear_has_min_value();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ElementDefinition_MinValue::kDateFieldNumber;
const int ElementDefinition_MinValue::kDateTimeFieldNumber;
const int ElementDefinition_MinValue::kInstantFieldNumber;
const int ElementDefinition_MinValue::kTimeFieldNumber;
const int ElementDefinition_MinValue::kDecimalFieldNumber;
const int ElementDefinition_MinValue::kIntegerFieldNumber;
const int ElementDefinition_MinValue::kPositiveIntFieldNumber;
const int ElementDefinition_MinValue::kUnsignedIntFieldNumber;
const int ElementDefinition_MinValue::kQuantityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ElementDefinition_MinValue::ElementDefinition_MinValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_MinValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.ElementDefinition.MinValue)
}
ElementDefinition_MinValue::ElementDefinition_MinValue(const ElementDefinition_MinValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_min_value();
  switch (from.min_value_case()) {
    case kDate: {
      mutable_date()->::google::fhir::stu3::proto::Date::MergeFrom(from.date());
      break;
    }
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kInstant: {
      mutable_instant()->::google::fhir::stu3::proto::Instant::MergeFrom(from.instant());
      break;
    }
    case kTime: {
      mutable_time()->::google::fhir::stu3::proto::Time::MergeFrom(from.time());
      break;
    }
    case kDecimal: {
      mutable_decimal()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.decimal());
      break;
    }
    case kInteger: {
      mutable_integer()->::google::fhir::stu3::proto::Integer::MergeFrom(from.integer());
      break;
    }
    case kPositiveInt: {
      mutable_positive_int()->::google::fhir::stu3::proto::PositiveInt::MergeFrom(from.positive_int());
      break;
    }
    case kUnsignedInt: {
      mutable_unsigned_int()->::google::fhir::stu3::proto::UnsignedInt::MergeFrom(from.unsigned_int());
      break;
    }
    case kQuantity: {
      mutable_quantity()->::google::fhir::stu3::proto::Quantity::MergeFrom(from.quantity());
      break;
    }
    case MIN_VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.ElementDefinition.MinValue)
}

void ElementDefinition_MinValue::SharedCtor() {
  clear_has_min_value();
}

ElementDefinition_MinValue::~ElementDefinition_MinValue() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.ElementDefinition.MinValue)
  SharedDtor();
}

void ElementDefinition_MinValue::SharedDtor() {
  if (has_min_value()) {
    clear_min_value();
  }
}

void ElementDefinition_MinValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ElementDefinition_MinValue::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ElementDefinition_MinValue& ElementDefinition_MinValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_MinValue.base);
  return *internal_default_instance();
}


void ElementDefinition_MinValue::clear_min_value() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.proto.ElementDefinition.MinValue)
  switch (min_value_case()) {
    case kDate: {
      delete min_value_.date_;
      break;
    }
    case kDateTime: {
      delete min_value_.date_time_;
      break;
    }
    case kInstant: {
      delete min_value_.instant_;
      break;
    }
    case kTime: {
      delete min_value_.time_;
      break;
    }
    case kDecimal: {
      delete min_value_.decimal_;
      break;
    }
    case kInteger: {
      delete min_value_.integer_;
      break;
    }
    case kPositiveInt: {
      delete min_value_.positive_int_;
      break;
    }
    case kUnsignedInt: {
      delete min_value_.unsigned_int_;
      break;
    }
    case kQuantity: {
      delete min_value_.quantity_;
      break;
    }
    case MIN_VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MIN_VALUE_NOT_SET;
}


void ElementDefinition_MinValue::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.ElementDefinition.MinValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_min_value();
  _internal_metadata_.Clear();
}

bool ElementDefinition_MinValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.ElementDefinition.MinValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Date date = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DateTime date_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Instant instant = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Time time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Decimal decimal = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_decimal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Integer integer = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_integer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.PositiveInt positive_int = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_positive_int()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_unsigned_int()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Quantity quantity = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_quantity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.ElementDefinition.MinValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.ElementDefinition.MinValue)
  return false;
#undef DO_
}

void ElementDefinition_MinValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.ElementDefinition.MinValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Date date = 1;
  if (has_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_date(), output);
  }

  // .google.fhir.stu3.proto.DateTime date_time = 2;
  if (has_date_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_date_time(), output);
  }

  // .google.fhir.stu3.proto.Instant instant = 3;
  if (has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_instant(), output);
  }

  // .google.fhir.stu3.proto.Time time = 4;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_time(), output);
  }

  // .google.fhir.stu3.proto.Decimal decimal = 5;
  if (has_decimal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_decimal(), output);
  }

  // .google.fhir.stu3.proto.Integer integer = 6;
  if (has_integer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_integer(), output);
  }

  // .google.fhir.stu3.proto.PositiveInt positive_int = 7;
  if (has_positive_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_positive_int(), output);
  }

  // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 8;
  if (has_unsigned_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_unsigned_int(), output);
  }

  // .google.fhir.stu3.proto.Quantity quantity = 9;
  if (has_quantity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_quantity(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.ElementDefinition.MinValue)
}

::google::protobuf::uint8* ElementDefinition_MinValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.ElementDefinition.MinValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Date date = 1;
  if (has_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_date(), deterministic, target);
  }

  // .google.fhir.stu3.proto.DateTime date_time = 2;
  if (has_date_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_date_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Instant instant = 3;
  if (has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_instant(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Time time = 4;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Decimal decimal = 5;
  if (has_decimal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_decimal(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Integer integer = 6;
  if (has_integer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_integer(), deterministic, target);
  }

  // .google.fhir.stu3.proto.PositiveInt positive_int = 7;
  if (has_positive_int()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_positive_int(), deterministic, target);
  }

  // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 8;
  if (has_unsigned_int()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_unsigned_int(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Quantity quantity = 9;
  if (has_quantity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_quantity(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.ElementDefinition.MinValue)
  return target;
}

size_t ElementDefinition_MinValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.ElementDefinition.MinValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (min_value_case()) {
    // .google.fhir.stu3.proto.Date date = 1;
    case kDate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *min_value_.date_);
      break;
    }
    // .google.fhir.stu3.proto.DateTime date_time = 2;
    case kDateTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *min_value_.date_time_);
      break;
    }
    // .google.fhir.stu3.proto.Instant instant = 3;
    case kInstant: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *min_value_.instant_);
      break;
    }
    // .google.fhir.stu3.proto.Time time = 4;
    case kTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *min_value_.time_);
      break;
    }
    // .google.fhir.stu3.proto.Decimal decimal = 5;
    case kDecimal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *min_value_.decimal_);
      break;
    }
    // .google.fhir.stu3.proto.Integer integer = 6;
    case kInteger: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *min_value_.integer_);
      break;
    }
    // .google.fhir.stu3.proto.PositiveInt positive_int = 7;
    case kPositiveInt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *min_value_.positive_int_);
      break;
    }
    // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 8;
    case kUnsignedInt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *min_value_.unsigned_int_);
      break;
    }
    // .google.fhir.stu3.proto.Quantity quantity = 9;
    case kQuantity: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *min_value_.quantity_);
      break;
    }
    case MIN_VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ElementDefinition_MinValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.ElementDefinition.MinValue)
  GOOGLE_DCHECK_NE(&from, this);
  const ElementDefinition_MinValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ElementDefinition_MinValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.ElementDefinition.MinValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.ElementDefinition.MinValue)
    MergeFrom(*source);
  }
}

void ElementDefinition_MinValue::MergeFrom(const ElementDefinition_MinValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.ElementDefinition.MinValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.min_value_case()) {
    case kDate: {
      mutable_date()->::google::fhir::stu3::proto::Date::MergeFrom(from.date());
      break;
    }
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kInstant: {
      mutable_instant()->::google::fhir::stu3::proto::Instant::MergeFrom(from.instant());
      break;
    }
    case kTime: {
      mutable_time()->::google::fhir::stu3::proto::Time::MergeFrom(from.time());
      break;
    }
    case kDecimal: {
      mutable_decimal()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.decimal());
      break;
    }
    case kInteger: {
      mutable_integer()->::google::fhir::stu3::proto::Integer::MergeFrom(from.integer());
      break;
    }
    case kPositiveInt: {
      mutable_positive_int()->::google::fhir::stu3::proto::PositiveInt::MergeFrom(from.positive_int());
      break;
    }
    case kUnsignedInt: {
      mutable_unsigned_int()->::google::fhir::stu3::proto::UnsignedInt::MergeFrom(from.unsigned_int());
      break;
    }
    case kQuantity: {
      mutable_quantity()->::google::fhir::stu3::proto::Quantity::MergeFrom(from.quantity());
      break;
    }
    case MIN_VALUE_NOT_SET: {
      break;
    }
  }
}

void ElementDefinition_MinValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.ElementDefinition.MinValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ElementDefinition_MinValue::CopyFrom(const ElementDefinition_MinValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.ElementDefinition.MinValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ElementDefinition_MinValue::IsInitialized() const {
  return true;
}

void ElementDefinition_MinValue::Swap(ElementDefinition_MinValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ElementDefinition_MinValue::InternalSwap(ElementDefinition_MinValue* other) {
  using std::swap;
  swap(min_value_, other->min_value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ElementDefinition_MinValue::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ElementDefinition_MaxValue::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_ElementDefinition_MaxValue_default_instance_.date_ = const_cast< ::google::fhir::stu3::proto::Date*>(
      ::google::fhir::stu3::proto::Date::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_MaxValue_default_instance_.date_time_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_MaxValue_default_instance_.instant_ = const_cast< ::google::fhir::stu3::proto::Instant*>(
      ::google::fhir::stu3::proto::Instant::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_MaxValue_default_instance_.time_ = const_cast< ::google::fhir::stu3::proto::Time*>(
      ::google::fhir::stu3::proto::Time::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_MaxValue_default_instance_.decimal_ = const_cast< ::google::fhir::stu3::proto::Decimal*>(
      ::google::fhir::stu3::proto::Decimal::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_MaxValue_default_instance_.integer_ = const_cast< ::google::fhir::stu3::proto::Integer*>(
      ::google::fhir::stu3::proto::Integer::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_MaxValue_default_instance_.positive_int_ = const_cast< ::google::fhir::stu3::proto::PositiveInt*>(
      ::google::fhir::stu3::proto::PositiveInt::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_MaxValue_default_instance_.unsigned_int_ = const_cast< ::google::fhir::stu3::proto::UnsignedInt*>(
      ::google::fhir::stu3::proto::UnsignedInt::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_MaxValue_default_instance_.quantity_ = const_cast< ::google::fhir::stu3::proto::Quantity*>(
      ::google::fhir::stu3::proto::Quantity::internal_default_instance());
}
void ElementDefinition_MaxValue::set_allocated_date(::google::fhir::stu3::proto::Date* date) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_max_value();
  if (date) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date, submessage_arena);
    }
    set_has_date();
    max_value_.date_ = date;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.MaxValue.date)
}
void ElementDefinition_MaxValue::clear_date() {
  if (has_date()) {
    delete max_value_.date_;
    clear_has_max_value();
  }
}
void ElementDefinition_MaxValue::set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_max_value();
  if (date_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date_time, submessage_arena);
    }
    set_has_date_time();
    max_value_.date_time_ = date_time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.MaxValue.date_time)
}
void ElementDefinition_MaxValue::clear_date_time() {
  if (has_date_time()) {
    delete max_value_.date_time_;
    clear_has_max_value();
  }
}
void ElementDefinition_MaxValue::set_allocated_instant(::google::fhir::stu3::proto::Instant* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_max_value();
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    set_has_instant();
    max_value_.instant_ = instant;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.MaxValue.instant)
}
void ElementDefinition_MaxValue::clear_instant() {
  if (has_instant()) {
    delete max_value_.instant_;
    clear_has_max_value();
  }
}
void ElementDefinition_MaxValue::set_allocated_time(::google::fhir::stu3::proto::Time* time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_max_value();
  if (time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time, submessage_arena);
    }
    set_has_time();
    max_value_.time_ = time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.MaxValue.time)
}
void ElementDefinition_MaxValue::clear_time() {
  if (has_time()) {
    delete max_value_.time_;
    clear_has_max_value();
  }
}
void ElementDefinition_MaxValue::set_allocated_decimal(::google::fhir::stu3::proto::Decimal* decimal) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_max_value();
  if (decimal) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      decimal = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, decimal, submessage_arena);
    }
    set_has_decimal();
    max_value_.decimal_ = decimal;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.MaxValue.decimal)
}
void ElementDefinition_MaxValue::clear_decimal() {
  if (has_decimal()) {
    delete max_value_.decimal_;
    clear_has_max_value();
  }
}
void ElementDefinition_MaxValue::set_allocated_integer(::google::fhir::stu3::proto::Integer* integer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_max_value();
  if (integer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      integer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, integer, submessage_arena);
    }
    set_has_integer();
    max_value_.integer_ = integer;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.MaxValue.integer)
}
void ElementDefinition_MaxValue::clear_integer() {
  if (has_integer()) {
    delete max_value_.integer_;
    clear_has_max_value();
  }
}
void ElementDefinition_MaxValue::set_allocated_positive_int(::google::fhir::stu3::proto::PositiveInt* positive_int) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_max_value();
  if (positive_int) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      positive_int = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, positive_int, submessage_arena);
    }
    set_has_positive_int();
    max_value_.positive_int_ = positive_int;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.MaxValue.positive_int)
}
void ElementDefinition_MaxValue::clear_positive_int() {
  if (has_positive_int()) {
    delete max_value_.positive_int_;
    clear_has_max_value();
  }
}
void ElementDefinition_MaxValue::set_allocated_unsigned_int(::google::fhir::stu3::proto::UnsignedInt* unsigned_int) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_max_value();
  if (unsigned_int) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      unsigned_int = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, unsigned_int, submessage_arena);
    }
    set_has_unsigned_int();
    max_value_.unsigned_int_ = unsigned_int;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.MaxValue.unsigned_int)
}
void ElementDefinition_MaxValue::clear_unsigned_int() {
  if (has_unsigned_int()) {
    delete max_value_.unsigned_int_;
    clear_has_max_value();
  }
}
void ElementDefinition_MaxValue::set_allocated_quantity(::google::fhir::stu3::proto::Quantity* quantity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_max_value();
  if (quantity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      quantity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, quantity, submessage_arena);
    }
    set_has_quantity();
    max_value_.quantity_ = quantity;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.MaxValue.quantity)
}
void ElementDefinition_MaxValue::clear_quantity() {
  if (has_quantity()) {
    delete max_value_.quantity_;
    clear_has_max_value();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ElementDefinition_MaxValue::kDateFieldNumber;
const int ElementDefinition_MaxValue::kDateTimeFieldNumber;
const int ElementDefinition_MaxValue::kInstantFieldNumber;
const int ElementDefinition_MaxValue::kTimeFieldNumber;
const int ElementDefinition_MaxValue::kDecimalFieldNumber;
const int ElementDefinition_MaxValue::kIntegerFieldNumber;
const int ElementDefinition_MaxValue::kPositiveIntFieldNumber;
const int ElementDefinition_MaxValue::kUnsignedIntFieldNumber;
const int ElementDefinition_MaxValue::kQuantityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ElementDefinition_MaxValue::ElementDefinition_MaxValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_MaxValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.ElementDefinition.MaxValue)
}
ElementDefinition_MaxValue::ElementDefinition_MaxValue(const ElementDefinition_MaxValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_max_value();
  switch (from.max_value_case()) {
    case kDate: {
      mutable_date()->::google::fhir::stu3::proto::Date::MergeFrom(from.date());
      break;
    }
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kInstant: {
      mutable_instant()->::google::fhir::stu3::proto::Instant::MergeFrom(from.instant());
      break;
    }
    case kTime: {
      mutable_time()->::google::fhir::stu3::proto::Time::MergeFrom(from.time());
      break;
    }
    case kDecimal: {
      mutable_decimal()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.decimal());
      break;
    }
    case kInteger: {
      mutable_integer()->::google::fhir::stu3::proto::Integer::MergeFrom(from.integer());
      break;
    }
    case kPositiveInt: {
      mutable_positive_int()->::google::fhir::stu3::proto::PositiveInt::MergeFrom(from.positive_int());
      break;
    }
    case kUnsignedInt: {
      mutable_unsigned_int()->::google::fhir::stu3::proto::UnsignedInt::MergeFrom(from.unsigned_int());
      break;
    }
    case kQuantity: {
      mutable_quantity()->::google::fhir::stu3::proto::Quantity::MergeFrom(from.quantity());
      break;
    }
    case MAX_VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.ElementDefinition.MaxValue)
}

void ElementDefinition_MaxValue::SharedCtor() {
  clear_has_max_value();
}

ElementDefinition_MaxValue::~ElementDefinition_MaxValue() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.ElementDefinition.MaxValue)
  SharedDtor();
}

void ElementDefinition_MaxValue::SharedDtor() {
  if (has_max_value()) {
    clear_max_value();
  }
}

void ElementDefinition_MaxValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ElementDefinition_MaxValue::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ElementDefinition_MaxValue& ElementDefinition_MaxValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_MaxValue.base);
  return *internal_default_instance();
}


void ElementDefinition_MaxValue::clear_max_value() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.proto.ElementDefinition.MaxValue)
  switch (max_value_case()) {
    case kDate: {
      delete max_value_.date_;
      break;
    }
    case kDateTime: {
      delete max_value_.date_time_;
      break;
    }
    case kInstant: {
      delete max_value_.instant_;
      break;
    }
    case kTime: {
      delete max_value_.time_;
      break;
    }
    case kDecimal: {
      delete max_value_.decimal_;
      break;
    }
    case kInteger: {
      delete max_value_.integer_;
      break;
    }
    case kPositiveInt: {
      delete max_value_.positive_int_;
      break;
    }
    case kUnsignedInt: {
      delete max_value_.unsigned_int_;
      break;
    }
    case kQuantity: {
      delete max_value_.quantity_;
      break;
    }
    case MAX_VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MAX_VALUE_NOT_SET;
}


void ElementDefinition_MaxValue::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.ElementDefinition.MaxValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_max_value();
  _internal_metadata_.Clear();
}

bool ElementDefinition_MaxValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.ElementDefinition.MaxValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Date date = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DateTime date_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Instant instant = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Time time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Decimal decimal = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_decimal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Integer integer = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_integer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.PositiveInt positive_int = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_positive_int()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_unsigned_int()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Quantity quantity = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_quantity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.ElementDefinition.MaxValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.ElementDefinition.MaxValue)
  return false;
#undef DO_
}

void ElementDefinition_MaxValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.ElementDefinition.MaxValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Date date = 1;
  if (has_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_date(), output);
  }

  // .google.fhir.stu3.proto.DateTime date_time = 2;
  if (has_date_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_date_time(), output);
  }

  // .google.fhir.stu3.proto.Instant instant = 3;
  if (has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_instant(), output);
  }

  // .google.fhir.stu3.proto.Time time = 4;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_time(), output);
  }

  // .google.fhir.stu3.proto.Decimal decimal = 5;
  if (has_decimal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_decimal(), output);
  }

  // .google.fhir.stu3.proto.Integer integer = 6;
  if (has_integer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_integer(), output);
  }

  // .google.fhir.stu3.proto.PositiveInt positive_int = 7;
  if (has_positive_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_positive_int(), output);
  }

  // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 8;
  if (has_unsigned_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_unsigned_int(), output);
  }

  // .google.fhir.stu3.proto.Quantity quantity = 9;
  if (has_quantity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_quantity(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.ElementDefinition.MaxValue)
}

::google::protobuf::uint8* ElementDefinition_MaxValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.ElementDefinition.MaxValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Date date = 1;
  if (has_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_date(), deterministic, target);
  }

  // .google.fhir.stu3.proto.DateTime date_time = 2;
  if (has_date_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_date_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Instant instant = 3;
  if (has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_instant(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Time time = 4;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Decimal decimal = 5;
  if (has_decimal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_decimal(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Integer integer = 6;
  if (has_integer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_integer(), deterministic, target);
  }

  // .google.fhir.stu3.proto.PositiveInt positive_int = 7;
  if (has_positive_int()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_positive_int(), deterministic, target);
  }

  // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 8;
  if (has_unsigned_int()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_unsigned_int(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Quantity quantity = 9;
  if (has_quantity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_quantity(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.ElementDefinition.MaxValue)
  return target;
}

size_t ElementDefinition_MaxValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.ElementDefinition.MaxValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (max_value_case()) {
    // .google.fhir.stu3.proto.Date date = 1;
    case kDate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *max_value_.date_);
      break;
    }
    // .google.fhir.stu3.proto.DateTime date_time = 2;
    case kDateTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *max_value_.date_time_);
      break;
    }
    // .google.fhir.stu3.proto.Instant instant = 3;
    case kInstant: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *max_value_.instant_);
      break;
    }
    // .google.fhir.stu3.proto.Time time = 4;
    case kTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *max_value_.time_);
      break;
    }
    // .google.fhir.stu3.proto.Decimal decimal = 5;
    case kDecimal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *max_value_.decimal_);
      break;
    }
    // .google.fhir.stu3.proto.Integer integer = 6;
    case kInteger: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *max_value_.integer_);
      break;
    }
    // .google.fhir.stu3.proto.PositiveInt positive_int = 7;
    case kPositiveInt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *max_value_.positive_int_);
      break;
    }
    // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 8;
    case kUnsignedInt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *max_value_.unsigned_int_);
      break;
    }
    // .google.fhir.stu3.proto.Quantity quantity = 9;
    case kQuantity: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *max_value_.quantity_);
      break;
    }
    case MAX_VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ElementDefinition_MaxValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.ElementDefinition.MaxValue)
  GOOGLE_DCHECK_NE(&from, this);
  const ElementDefinition_MaxValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ElementDefinition_MaxValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.ElementDefinition.MaxValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.ElementDefinition.MaxValue)
    MergeFrom(*source);
  }
}

void ElementDefinition_MaxValue::MergeFrom(const ElementDefinition_MaxValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.ElementDefinition.MaxValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.max_value_case()) {
    case kDate: {
      mutable_date()->::google::fhir::stu3::proto::Date::MergeFrom(from.date());
      break;
    }
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kInstant: {
      mutable_instant()->::google::fhir::stu3::proto::Instant::MergeFrom(from.instant());
      break;
    }
    case kTime: {
      mutable_time()->::google::fhir::stu3::proto::Time::MergeFrom(from.time());
      break;
    }
    case kDecimal: {
      mutable_decimal()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.decimal());
      break;
    }
    case kInteger: {
      mutable_integer()->::google::fhir::stu3::proto::Integer::MergeFrom(from.integer());
      break;
    }
    case kPositiveInt: {
      mutable_positive_int()->::google::fhir::stu3::proto::PositiveInt::MergeFrom(from.positive_int());
      break;
    }
    case kUnsignedInt: {
      mutable_unsigned_int()->::google::fhir::stu3::proto::UnsignedInt::MergeFrom(from.unsigned_int());
      break;
    }
    case kQuantity: {
      mutable_quantity()->::google::fhir::stu3::proto::Quantity::MergeFrom(from.quantity());
      break;
    }
    case MAX_VALUE_NOT_SET: {
      break;
    }
  }
}

void ElementDefinition_MaxValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.ElementDefinition.MaxValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ElementDefinition_MaxValue::CopyFrom(const ElementDefinition_MaxValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.ElementDefinition.MaxValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ElementDefinition_MaxValue::IsInitialized() const {
  return true;
}

void ElementDefinition_MaxValue::Swap(ElementDefinition_MaxValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ElementDefinition_MaxValue::InternalSwap(ElementDefinition_MaxValue* other) {
  using std::swap;
  swap(max_value_, other->max_value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ElementDefinition_MaxValue::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ElementDefinition_Constraint::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_ElementDefinition_Constraint_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Constraint_default_instance_._instance.get_mutable()->key_ = const_cast< ::google::fhir::stu3::proto::Id*>(
      ::google::fhir::stu3::proto::Id::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Constraint_default_instance_._instance.get_mutable()->requirements_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Constraint_default_instance_._instance.get_mutable()->severity_ = const_cast< ::google::fhir::stu3::proto::ConstraintSeverityCode*>(
      ::google::fhir::stu3::proto::ConstraintSeverityCode::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Constraint_default_instance_._instance.get_mutable()->human_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Constraint_default_instance_._instance.get_mutable()->expression_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Constraint_default_instance_._instance.get_mutable()->xpath_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Constraint_default_instance_._instance.get_mutable()->source_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
}
void ElementDefinition_Constraint::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void ElementDefinition_Constraint::clear_extension() {
  extension_.Clear();
}
void ElementDefinition_Constraint::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
}
void ElementDefinition_Constraint::clear_requirements() {
  if (GetArenaNoVirtual() == NULL && requirements_ != NULL) {
    delete requirements_;
  }
  requirements_ = NULL;
}
void ElementDefinition_Constraint::clear_severity() {
  if (GetArenaNoVirtual() == NULL && severity_ != NULL) {
    delete severity_;
  }
  severity_ = NULL;
}
void ElementDefinition_Constraint::clear_human() {
  if (GetArenaNoVirtual() == NULL && human_ != NULL) {
    delete human_;
  }
  human_ = NULL;
}
void ElementDefinition_Constraint::clear_expression() {
  if (GetArenaNoVirtual() == NULL && expression_ != NULL) {
    delete expression_;
  }
  expression_ = NULL;
}
void ElementDefinition_Constraint::clear_xpath() {
  if (GetArenaNoVirtual() == NULL && xpath_ != NULL) {
    delete xpath_;
  }
  xpath_ = NULL;
}
void ElementDefinition_Constraint::clear_source() {
  if (GetArenaNoVirtual() == NULL && source_ != NULL) {
    delete source_;
  }
  source_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ElementDefinition_Constraint::kIdFieldNumber;
const int ElementDefinition_Constraint::kExtensionFieldNumber;
const int ElementDefinition_Constraint::kKeyFieldNumber;
const int ElementDefinition_Constraint::kRequirementsFieldNumber;
const int ElementDefinition_Constraint::kSeverityFieldNumber;
const int ElementDefinition_Constraint::kHumanFieldNumber;
const int ElementDefinition_Constraint::kExpressionFieldNumber;
const int ElementDefinition_Constraint::kXpathFieldNumber;
const int ElementDefinition_Constraint::kSourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ElementDefinition_Constraint::ElementDefinition_Constraint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_Constraint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.ElementDefinition.Constraint)
}
ElementDefinition_Constraint::ElementDefinition_Constraint(const ElementDefinition_Constraint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_key()) {
    key_ = new ::google::fhir::stu3::proto::Id(*from.key_);
  } else {
    key_ = NULL;
  }
  if (from.has_requirements()) {
    requirements_ = new ::google::fhir::stu3::proto::String(*from.requirements_);
  } else {
    requirements_ = NULL;
  }
  if (from.has_severity()) {
    severity_ = new ::google::fhir::stu3::proto::ConstraintSeverityCode(*from.severity_);
  } else {
    severity_ = NULL;
  }
  if (from.has_human()) {
    human_ = new ::google::fhir::stu3::proto::String(*from.human_);
  } else {
    human_ = NULL;
  }
  if (from.has_expression()) {
    expression_ = new ::google::fhir::stu3::proto::String(*from.expression_);
  } else {
    expression_ = NULL;
  }
  if (from.has_xpath()) {
    xpath_ = new ::google::fhir::stu3::proto::String(*from.xpath_);
  } else {
    xpath_ = NULL;
  }
  if (from.has_source()) {
    source_ = new ::google::fhir::stu3::proto::Uri(*from.source_);
  } else {
    source_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.ElementDefinition.Constraint)
}

void ElementDefinition_Constraint::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&source_) -
      reinterpret_cast<char*>(&id_)) + sizeof(source_));
}

ElementDefinition_Constraint::~ElementDefinition_Constraint() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.ElementDefinition.Constraint)
  SharedDtor();
}

void ElementDefinition_Constraint::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete key_;
  if (this != internal_default_instance()) delete requirements_;
  if (this != internal_default_instance()) delete severity_;
  if (this != internal_default_instance()) delete human_;
  if (this != internal_default_instance()) delete expression_;
  if (this != internal_default_instance()) delete xpath_;
  if (this != internal_default_instance()) delete source_;
}

void ElementDefinition_Constraint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ElementDefinition_Constraint::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ElementDefinition_Constraint& ElementDefinition_Constraint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_Constraint.base);
  return *internal_default_instance();
}


void ElementDefinition_Constraint::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.ElementDefinition.Constraint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  if (GetArenaNoVirtual() == NULL && requirements_ != NULL) {
    delete requirements_;
  }
  requirements_ = NULL;
  if (GetArenaNoVirtual() == NULL && severity_ != NULL) {
    delete severity_;
  }
  severity_ = NULL;
  if (GetArenaNoVirtual() == NULL && human_ != NULL) {
    delete human_;
  }
  human_ = NULL;
  if (GetArenaNoVirtual() == NULL && expression_ != NULL) {
    delete expression_;
  }
  expression_ = NULL;
  if (GetArenaNoVirtual() == NULL && xpath_ != NULL) {
    delete xpath_;
  }
  xpath_ = NULL;
  if (GetArenaNoVirtual() == NULL && source_ != NULL) {
    delete source_;
  }
  source_ = NULL;
  _internal_metadata_.Clear();
}

bool ElementDefinition_Constraint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.ElementDefinition.Constraint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Id key = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String requirements = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_requirements()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ConstraintSeverityCode severity = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_severity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String human = 6 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_human()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String expression = 7 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expression()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String xpath = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_xpath()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri source = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.ElementDefinition.Constraint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.ElementDefinition.Constraint)
  return false;
#undef DO_
}

void ElementDefinition_Constraint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.ElementDefinition.Constraint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Id key = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_key(), output);
  }

  // .google.fhir.stu3.proto.String requirements = 4;
  if (this->has_requirements()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_requirements(), output);
  }

  // .google.fhir.stu3.proto.ConstraintSeverityCode severity = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_severity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_severity(), output);
  }

  // .google.fhir.stu3.proto.String human = 6 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_human()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_human(), output);
  }

  // .google.fhir.stu3.proto.String expression = 7 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_expression()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_expression(), output);
  }

  // .google.fhir.stu3.proto.String xpath = 8;
  if (this->has_xpath()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_xpath(), output);
  }

  // .google.fhir.stu3.proto.Uri source = 9;
  if (this->has_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_source(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.ElementDefinition.Constraint)
}

::google::protobuf::uint8* ElementDefinition_Constraint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.ElementDefinition.Constraint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Id key = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_key(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String requirements = 4;
  if (this->has_requirements()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_requirements(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ConstraintSeverityCode severity = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_severity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_severity(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String human = 6 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_human()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_human(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String expression = 7 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_expression()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_expression(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String xpath = 8;
  if (this->has_xpath()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_xpath(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri source = 9;
  if (this->has_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_source(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.ElementDefinition.Constraint)
  return target;
}

size_t ElementDefinition_Constraint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.ElementDefinition.Constraint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Id key = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *key_);
  }

  // .google.fhir.stu3.proto.String requirements = 4;
  if (this->has_requirements()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *requirements_);
  }

  // .google.fhir.stu3.proto.ConstraintSeverityCode severity = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_severity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *severity_);
  }

  // .google.fhir.stu3.proto.String human = 6 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_human()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *human_);
  }

  // .google.fhir.stu3.proto.String expression = 7 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_expression()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expression_);
  }

  // .google.fhir.stu3.proto.String xpath = 8;
  if (this->has_xpath()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *xpath_);
  }

  // .google.fhir.stu3.proto.Uri source = 9;
  if (this->has_source()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *source_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ElementDefinition_Constraint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.ElementDefinition.Constraint)
  GOOGLE_DCHECK_NE(&from, this);
  const ElementDefinition_Constraint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ElementDefinition_Constraint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.ElementDefinition.Constraint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.ElementDefinition.Constraint)
    MergeFrom(*source);
  }
}

void ElementDefinition_Constraint::MergeFrom(const ElementDefinition_Constraint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.ElementDefinition.Constraint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_key()) {
    mutable_key()->::google::fhir::stu3::proto::Id::MergeFrom(from.key());
  }
  if (from.has_requirements()) {
    mutable_requirements()->::google::fhir::stu3::proto::String::MergeFrom(from.requirements());
  }
  if (from.has_severity()) {
    mutable_severity()->::google::fhir::stu3::proto::ConstraintSeverityCode::MergeFrom(from.severity());
  }
  if (from.has_human()) {
    mutable_human()->::google::fhir::stu3::proto::String::MergeFrom(from.human());
  }
  if (from.has_expression()) {
    mutable_expression()->::google::fhir::stu3::proto::String::MergeFrom(from.expression());
  }
  if (from.has_xpath()) {
    mutable_xpath()->::google::fhir::stu3::proto::String::MergeFrom(from.xpath());
  }
  if (from.has_source()) {
    mutable_source()->::google::fhir::stu3::proto::Uri::MergeFrom(from.source());
  }
}

void ElementDefinition_Constraint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.ElementDefinition.Constraint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ElementDefinition_Constraint::CopyFrom(const ElementDefinition_Constraint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.ElementDefinition.Constraint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ElementDefinition_Constraint::IsInitialized() const {
  return true;
}

void ElementDefinition_Constraint::Swap(ElementDefinition_Constraint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ElementDefinition_Constraint::InternalSwap(ElementDefinition_Constraint* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(key_, other->key_);
  swap(requirements_, other->requirements_);
  swap(severity_, other->severity_);
  swap(human_, other->human_);
  swap(expression_, other->expression_);
  swap(xpath_, other->xpath_);
  swap(source_, other->source_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ElementDefinition_Constraint::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ElementDefinition_ElementDefinitionBinding_ValueSet::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_ElementDefinition_ElementDefinitionBinding_ValueSet_default_instance_.uri_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_ElementDefinitionBinding_ValueSet_default_instance_.reference_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
}
void ElementDefinition_ElementDefinitionBinding_ValueSet::set_allocated_uri(::google::fhir::stu3::proto::Uri* uri) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value_set();
  if (uri) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      uri = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uri, submessage_arena);
    }
    set_has_uri();
    value_set_.uri_ = uri;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet.uri)
}
void ElementDefinition_ElementDefinitionBinding_ValueSet::clear_uri() {
  if (has_uri()) {
    delete value_set_.uri_;
    clear_has_value_set();
  }
}
void ElementDefinition_ElementDefinitionBinding_ValueSet::set_allocated_reference(::google::fhir::stu3::proto::Reference* reference) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value_set();
  if (reference) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reference = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reference, submessage_arena);
    }
    set_has_reference();
    value_set_.reference_ = reference;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet.reference)
}
void ElementDefinition_ElementDefinitionBinding_ValueSet::clear_reference() {
  if (has_reference()) {
    delete value_set_.reference_;
    clear_has_value_set();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ElementDefinition_ElementDefinitionBinding_ValueSet::kUriFieldNumber;
const int ElementDefinition_ElementDefinitionBinding_ValueSet::kReferenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ElementDefinition_ElementDefinitionBinding_ValueSet::ElementDefinition_ElementDefinitionBinding_ValueSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_ElementDefinitionBinding_ValueSet.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet)
}
ElementDefinition_ElementDefinitionBinding_ValueSet::ElementDefinition_ElementDefinitionBinding_ValueSet(const ElementDefinition_ElementDefinitionBinding_ValueSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_value_set();
  switch (from.value_set_case()) {
    case kUri: {
      mutable_uri()->::google::fhir::stu3::proto::Uri::MergeFrom(from.uri());
      break;
    }
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case VALUE_SET_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet)
}

void ElementDefinition_ElementDefinitionBinding_ValueSet::SharedCtor() {
  clear_has_value_set();
}

ElementDefinition_ElementDefinitionBinding_ValueSet::~ElementDefinition_ElementDefinitionBinding_ValueSet() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet)
  SharedDtor();
}

void ElementDefinition_ElementDefinitionBinding_ValueSet::SharedDtor() {
  if (has_value_set()) {
    clear_value_set();
  }
}

void ElementDefinition_ElementDefinitionBinding_ValueSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ElementDefinition_ElementDefinitionBinding_ValueSet::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ElementDefinition_ElementDefinitionBinding_ValueSet& ElementDefinition_ElementDefinitionBinding_ValueSet::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_ElementDefinitionBinding_ValueSet.base);
  return *internal_default_instance();
}


void ElementDefinition_ElementDefinitionBinding_ValueSet::clear_value_set() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet)
  switch (value_set_case()) {
    case kUri: {
      delete value_set_.uri_;
      break;
    }
    case kReference: {
      delete value_set_.reference_;
      break;
    }
    case VALUE_SET_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_SET_NOT_SET;
}


void ElementDefinition_ElementDefinitionBinding_ValueSet::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value_set();
  _internal_metadata_.Clear();
}

bool ElementDefinition_ElementDefinitionBinding_ValueSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Uri uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uri()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ValueSet"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet)
  return false;
#undef DO_
}

void ElementDefinition_ElementDefinitionBinding_ValueSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Uri uri = 1;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_uri(), output);
  }

  // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ValueSet"];
  if (has_reference()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_reference(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet)
}

::google::protobuf::uint8* ElementDefinition_ElementDefinitionBinding_ValueSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Uri uri = 1;
  if (has_uri()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_uri(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ValueSet"];
  if (has_reference()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_reference(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet)
  return target;
}

size_t ElementDefinition_ElementDefinitionBinding_ValueSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (value_set_case()) {
    // .google.fhir.stu3.proto.Uri uri = 1;
    case kUri: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_set_.uri_);
      break;
    }
    // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ValueSet"];
    case kReference: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_set_.reference_);
      break;
    }
    case VALUE_SET_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ElementDefinition_ElementDefinitionBinding_ValueSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet)
  GOOGLE_DCHECK_NE(&from, this);
  const ElementDefinition_ElementDefinitionBinding_ValueSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ElementDefinition_ElementDefinitionBinding_ValueSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet)
    MergeFrom(*source);
  }
}

void ElementDefinition_ElementDefinitionBinding_ValueSet::MergeFrom(const ElementDefinition_ElementDefinitionBinding_ValueSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_set_case()) {
    case kUri: {
      mutable_uri()->::google::fhir::stu3::proto::Uri::MergeFrom(from.uri());
      break;
    }
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case VALUE_SET_NOT_SET: {
      break;
    }
  }
}

void ElementDefinition_ElementDefinitionBinding_ValueSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ElementDefinition_ElementDefinitionBinding_ValueSet::CopyFrom(const ElementDefinition_ElementDefinitionBinding_ValueSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ElementDefinition_ElementDefinitionBinding_ValueSet::IsInitialized() const {
  return true;
}

void ElementDefinition_ElementDefinitionBinding_ValueSet::Swap(ElementDefinition_ElementDefinitionBinding_ValueSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ElementDefinition_ElementDefinitionBinding_ValueSet::InternalSwap(ElementDefinition_ElementDefinitionBinding_ValueSet* other) {
  using std::swap;
  swap(value_set_, other->value_set_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ElementDefinition_ElementDefinitionBinding_ValueSet::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ElementDefinition_ElementDefinitionBinding::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_ElementDefinition_ElementDefinitionBinding_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_ElementDefinitionBinding_default_instance_._instance.get_mutable()->strength_ = const_cast< ::google::fhir::stu3::proto::BindingStrengthCode*>(
      ::google::fhir::stu3::proto::BindingStrengthCode::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_ElementDefinitionBinding_default_instance_._instance.get_mutable()->description_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_ElementDefinitionBinding_default_instance_._instance.get_mutable()->value_set_ = const_cast< ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSet*>(
      ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSet::internal_default_instance());
}
void ElementDefinition_ElementDefinitionBinding::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void ElementDefinition_ElementDefinitionBinding::clear_extension() {
  extension_.Clear();
}
void ElementDefinition_ElementDefinitionBinding::clear_strength() {
  if (GetArenaNoVirtual() == NULL && strength_ != NULL) {
    delete strength_;
  }
  strength_ = NULL;
}
void ElementDefinition_ElementDefinitionBinding::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ElementDefinition_ElementDefinitionBinding::kIdFieldNumber;
const int ElementDefinition_ElementDefinitionBinding::kExtensionFieldNumber;
const int ElementDefinition_ElementDefinitionBinding::kStrengthFieldNumber;
const int ElementDefinition_ElementDefinitionBinding::kDescriptionFieldNumber;
const int ElementDefinition_ElementDefinitionBinding::kValueSetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ElementDefinition_ElementDefinitionBinding::ElementDefinition_ElementDefinitionBinding()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_ElementDefinitionBinding.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding)
}
ElementDefinition_ElementDefinitionBinding::ElementDefinition_ElementDefinitionBinding(const ElementDefinition_ElementDefinitionBinding& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_strength()) {
    strength_ = new ::google::fhir::stu3::proto::BindingStrengthCode(*from.strength_);
  } else {
    strength_ = NULL;
  }
  if (from.has_description()) {
    description_ = new ::google::fhir::stu3::proto::String(*from.description_);
  } else {
    description_ = NULL;
  }
  if (from.has_value_set()) {
    value_set_ = new ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSet(*from.value_set_);
  } else {
    value_set_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding)
}

void ElementDefinition_ElementDefinitionBinding::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_set_) -
      reinterpret_cast<char*>(&id_)) + sizeof(value_set_));
}

ElementDefinition_ElementDefinitionBinding::~ElementDefinition_ElementDefinitionBinding() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding)
  SharedDtor();
}

void ElementDefinition_ElementDefinitionBinding::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete strength_;
  if (this != internal_default_instance()) delete description_;
  if (this != internal_default_instance()) delete value_set_;
}

void ElementDefinition_ElementDefinitionBinding::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ElementDefinition_ElementDefinitionBinding::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ElementDefinition_ElementDefinitionBinding& ElementDefinition_ElementDefinitionBinding::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_ElementDefinitionBinding.base);
  return *internal_default_instance();
}


void ElementDefinition_ElementDefinitionBinding::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && strength_ != NULL) {
    delete strength_;
  }
  strength_ = NULL;
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_set_ != NULL) {
    delete value_set_;
  }
  value_set_ = NULL;
  _internal_metadata_.Clear();
}

bool ElementDefinition_ElementDefinitionBinding::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.BindingStrengthCode strength = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_strength()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String description = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet value_set = 5 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_set()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding)
  return false;
#undef DO_
}

void ElementDefinition_ElementDefinitionBinding::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.BindingStrengthCode strength = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_strength()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_strength(), output);
  }

  // .google.fhir.stu3.proto.String description = 4;
  if (this->has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_description(), output);
  }

  // .google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet value_set = 5 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_value_set()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_value_set(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding)
}

::google::protobuf::uint8* ElementDefinition_ElementDefinitionBinding::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.BindingStrengthCode strength = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_strength()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_strength(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String description = 4;
  if (this->has_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_description(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet value_set = 5 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_value_set()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_value_set(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding)
  return target;
}

size_t ElementDefinition_ElementDefinitionBinding::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.BindingStrengthCode strength = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_strength()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *strength_);
  }

  // .google.fhir.stu3.proto.String description = 4;
  if (this->has_description()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *description_);
  }

  // .google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet value_set = 5 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_value_set()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_set_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ElementDefinition_ElementDefinitionBinding::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding)
  GOOGLE_DCHECK_NE(&from, this);
  const ElementDefinition_ElementDefinitionBinding* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ElementDefinition_ElementDefinitionBinding>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding)
    MergeFrom(*source);
  }
}

void ElementDefinition_ElementDefinitionBinding::MergeFrom(const ElementDefinition_ElementDefinitionBinding& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_strength()) {
    mutable_strength()->::google::fhir::stu3::proto::BindingStrengthCode::MergeFrom(from.strength());
  }
  if (from.has_description()) {
    mutable_description()->::google::fhir::stu3::proto::String::MergeFrom(from.description());
  }
  if (from.has_value_set()) {
    mutable_value_set()->::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSet::MergeFrom(from.value_set());
  }
}

void ElementDefinition_ElementDefinitionBinding::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ElementDefinition_ElementDefinitionBinding::CopyFrom(const ElementDefinition_ElementDefinitionBinding& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ElementDefinition_ElementDefinitionBinding::IsInitialized() const {
  return true;
}

void ElementDefinition_ElementDefinitionBinding::Swap(ElementDefinition_ElementDefinitionBinding* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ElementDefinition_ElementDefinitionBinding::InternalSwap(ElementDefinition_ElementDefinitionBinding* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(strength_, other->strength_);
  swap(description_, other->description_);
  swap(value_set_, other->value_set_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ElementDefinition_ElementDefinitionBinding::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ElementDefinition_Mapping::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_ElementDefinition_Mapping_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Mapping_default_instance_._instance.get_mutable()->identity_ = const_cast< ::google::fhir::stu3::proto::Id*>(
      ::google::fhir::stu3::proto::Id::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Mapping_default_instance_._instance.get_mutable()->language_ = const_cast< ::google::fhir::stu3::proto::MimeTypeCode*>(
      ::google::fhir::stu3::proto::MimeTypeCode::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Mapping_default_instance_._instance.get_mutable()->map_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_Mapping_default_instance_._instance.get_mutable()->comment_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
void ElementDefinition_Mapping::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void ElementDefinition_Mapping::clear_extension() {
  extension_.Clear();
}
void ElementDefinition_Mapping::clear_identity() {
  if (GetArenaNoVirtual() == NULL && identity_ != NULL) {
    delete identity_;
  }
  identity_ = NULL;
}
void ElementDefinition_Mapping::clear_language() {
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
}
void ElementDefinition_Mapping::clear_map() {
  if (GetArenaNoVirtual() == NULL && map_ != NULL) {
    delete map_;
  }
  map_ = NULL;
}
void ElementDefinition_Mapping::clear_comment() {
  if (GetArenaNoVirtual() == NULL && comment_ != NULL) {
    delete comment_;
  }
  comment_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ElementDefinition_Mapping::kIdFieldNumber;
const int ElementDefinition_Mapping::kExtensionFieldNumber;
const int ElementDefinition_Mapping::kIdentityFieldNumber;
const int ElementDefinition_Mapping::kLanguageFieldNumber;
const int ElementDefinition_Mapping::kMapFieldNumber;
const int ElementDefinition_Mapping::kCommentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ElementDefinition_Mapping::ElementDefinition_Mapping()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_Mapping.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.ElementDefinition.Mapping)
}
ElementDefinition_Mapping::ElementDefinition_Mapping(const ElementDefinition_Mapping& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_identity()) {
    identity_ = new ::google::fhir::stu3::proto::Id(*from.identity_);
  } else {
    identity_ = NULL;
  }
  if (from.has_language()) {
    language_ = new ::google::fhir::stu3::proto::MimeTypeCode(*from.language_);
  } else {
    language_ = NULL;
  }
  if (from.has_map()) {
    map_ = new ::google::fhir::stu3::proto::String(*from.map_);
  } else {
    map_ = NULL;
  }
  if (from.has_comment()) {
    comment_ = new ::google::fhir::stu3::proto::String(*from.comment_);
  } else {
    comment_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.ElementDefinition.Mapping)
}

void ElementDefinition_Mapping::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&comment_) -
      reinterpret_cast<char*>(&id_)) + sizeof(comment_));
}

ElementDefinition_Mapping::~ElementDefinition_Mapping() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.ElementDefinition.Mapping)
  SharedDtor();
}

void ElementDefinition_Mapping::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete identity_;
  if (this != internal_default_instance()) delete language_;
  if (this != internal_default_instance()) delete map_;
  if (this != internal_default_instance()) delete comment_;
}

void ElementDefinition_Mapping::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ElementDefinition_Mapping::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ElementDefinition_Mapping& ElementDefinition_Mapping::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition_Mapping.base);
  return *internal_default_instance();
}


void ElementDefinition_Mapping::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.ElementDefinition.Mapping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && identity_ != NULL) {
    delete identity_;
  }
  identity_ = NULL;
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
  if (GetArenaNoVirtual() == NULL && map_ != NULL) {
    delete map_;
  }
  map_ = NULL;
  if (GetArenaNoVirtual() == NULL && comment_ != NULL) {
    delete comment_;
  }
  comment_ = NULL;
  _internal_metadata_.Clear();
}

bool ElementDefinition_Mapping::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.ElementDefinition.Mapping)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Id identity = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_identity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.MimeTypeCode language = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_language()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String map = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_map()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String comment = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_comment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.ElementDefinition.Mapping)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.ElementDefinition.Mapping)
  return false;
#undef DO_
}

void ElementDefinition_Mapping::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.ElementDefinition.Mapping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Id identity = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_identity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_identity(), output);
  }

  // .google.fhir.stu3.proto.MimeTypeCode language = 4;
  if (this->has_language()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_language(), output);
  }

  // .google.fhir.stu3.proto.String map = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_map(), output);
  }

  // .google.fhir.stu3.proto.String comment = 6;
  if (this->has_comment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_comment(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.ElementDefinition.Mapping)
}

::google::protobuf::uint8* ElementDefinition_Mapping::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.ElementDefinition.Mapping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Id identity = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_identity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_identity(), deterministic, target);
  }

  // .google.fhir.stu3.proto.MimeTypeCode language = 4;
  if (this->has_language()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_language(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String map = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_map()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_map(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String comment = 6;
  if (this->has_comment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_comment(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.ElementDefinition.Mapping)
  return target;
}

size_t ElementDefinition_Mapping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.ElementDefinition.Mapping)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Id identity = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_identity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *identity_);
  }

  // .google.fhir.stu3.proto.MimeTypeCode language = 4;
  if (this->has_language()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *language_);
  }

  // .google.fhir.stu3.proto.String map = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_map()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *map_);
  }

  // .google.fhir.stu3.proto.String comment = 6;
  if (this->has_comment()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *comment_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ElementDefinition_Mapping::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.ElementDefinition.Mapping)
  GOOGLE_DCHECK_NE(&from, this);
  const ElementDefinition_Mapping* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ElementDefinition_Mapping>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.ElementDefinition.Mapping)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.ElementDefinition.Mapping)
    MergeFrom(*source);
  }
}

void ElementDefinition_Mapping::MergeFrom(const ElementDefinition_Mapping& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.ElementDefinition.Mapping)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_identity()) {
    mutable_identity()->::google::fhir::stu3::proto::Id::MergeFrom(from.identity());
  }
  if (from.has_language()) {
    mutable_language()->::google::fhir::stu3::proto::MimeTypeCode::MergeFrom(from.language());
  }
  if (from.has_map()) {
    mutable_map()->::google::fhir::stu3::proto::String::MergeFrom(from.map());
  }
  if (from.has_comment()) {
    mutable_comment()->::google::fhir::stu3::proto::String::MergeFrom(from.comment());
  }
}

void ElementDefinition_Mapping::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.ElementDefinition.Mapping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ElementDefinition_Mapping::CopyFrom(const ElementDefinition_Mapping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.ElementDefinition.Mapping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ElementDefinition_Mapping::IsInitialized() const {
  return true;
}

void ElementDefinition_Mapping::Swap(ElementDefinition_Mapping* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ElementDefinition_Mapping::InternalSwap(ElementDefinition_Mapping* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(identity_, other->identity_);
  swap(language_, other->language_);
  swap(map_, other->map_);
  swap(comment_, other->comment_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ElementDefinition_Mapping::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ElementDefinition::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_ElementDefinition_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_default_instance_._instance.get_mutable()->path_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_default_instance_._instance.get_mutable()->slice_name_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_default_instance_._instance.get_mutable()->label_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_default_instance_._instance.get_mutable()->slicing_ = const_cast< ::google::fhir::stu3::proto::ElementDefinition_Slicing*>(
      ::google::fhir::stu3::proto::ElementDefinition_Slicing::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_default_instance_._instance.get_mutable()->short__ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_default_instance_._instance.get_mutable()->definition_ = const_cast< ::google::fhir::stu3::proto::Markdown*>(
      ::google::fhir::stu3::proto::Markdown::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_default_instance_._instance.get_mutable()->comment_ = const_cast< ::google::fhir::stu3::proto::Markdown*>(
      ::google::fhir::stu3::proto::Markdown::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_default_instance_._instance.get_mutable()->requirements_ = const_cast< ::google::fhir::stu3::proto::Markdown*>(
      ::google::fhir::stu3::proto::Markdown::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_default_instance_._instance.get_mutable()->min_ = const_cast< ::google::fhir::stu3::proto::UnsignedInt*>(
      ::google::fhir::stu3::proto::UnsignedInt::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_default_instance_._instance.get_mutable()->max_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_default_instance_._instance.get_mutable()->base_ = const_cast< ::google::fhir::stu3::proto::ElementDefinition_Base*>(
      ::google::fhir::stu3::proto::ElementDefinition_Base::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_default_instance_._instance.get_mutable()->content_reference_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_default_instance_._instance.get_mutable()->default_value_ = const_cast< ::google::fhir::stu3::proto::ElementDefinition_DefaultValue*>(
      ::google::fhir::stu3::proto::ElementDefinition_DefaultValue::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_default_instance_._instance.get_mutable()->meaning_when_missing_ = const_cast< ::google::fhir::stu3::proto::Markdown*>(
      ::google::fhir::stu3::proto::Markdown::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_default_instance_._instance.get_mutable()->order_meaning_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_default_instance_._instance.get_mutable()->fixed_ = const_cast< ::google::fhir::stu3::proto::ElementDefinition_Fixed*>(
      ::google::fhir::stu3::proto::ElementDefinition_Fixed::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_default_instance_._instance.get_mutable()->pattern_ = const_cast< ::google::fhir::stu3::proto::ElementDefinition_Pattern*>(
      ::google::fhir::stu3::proto::ElementDefinition_Pattern::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_default_instance_._instance.get_mutable()->min_value_ = const_cast< ::google::fhir::stu3::proto::ElementDefinition_MinValue*>(
      ::google::fhir::stu3::proto::ElementDefinition_MinValue::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_default_instance_._instance.get_mutable()->max_value_ = const_cast< ::google::fhir::stu3::proto::ElementDefinition_MaxValue*>(
      ::google::fhir::stu3::proto::ElementDefinition_MaxValue::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_default_instance_._instance.get_mutable()->max_length_ = const_cast< ::google::fhir::stu3::proto::Integer*>(
      ::google::fhir::stu3::proto::Integer::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_default_instance_._instance.get_mutable()->must_support_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_default_instance_._instance.get_mutable()->is_modifier_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_default_instance_._instance.get_mutable()->is_summary_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
  ::google::fhir::stu3::proto::_ElementDefinition_default_instance_._instance.get_mutable()->binding_ = const_cast< ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding*>(
      ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding::internal_default_instance());
}
void ElementDefinition::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void ElementDefinition::clear_extension() {
  extension_.Clear();
}
void ElementDefinition::clear_path() {
  if (GetArenaNoVirtual() == NULL && path_ != NULL) {
    delete path_;
  }
  path_ = NULL;
}
void ElementDefinition::clear_representation() {
  representation_.Clear();
}
void ElementDefinition::clear_slice_name() {
  if (GetArenaNoVirtual() == NULL && slice_name_ != NULL) {
    delete slice_name_;
  }
  slice_name_ = NULL;
}
void ElementDefinition::clear_label() {
  if (GetArenaNoVirtual() == NULL && label_ != NULL) {
    delete label_;
  }
  label_ = NULL;
}
void ElementDefinition::clear_code() {
  code_.Clear();
}
void ElementDefinition::clear_short_() {
  if (GetArenaNoVirtual() == NULL && short__ != NULL) {
    delete short__;
  }
  short__ = NULL;
}
void ElementDefinition::clear_definition() {
  if (GetArenaNoVirtual() == NULL && definition_ != NULL) {
    delete definition_;
  }
  definition_ = NULL;
}
void ElementDefinition::clear_comment() {
  if (GetArenaNoVirtual() == NULL && comment_ != NULL) {
    delete comment_;
  }
  comment_ = NULL;
}
void ElementDefinition::clear_requirements() {
  if (GetArenaNoVirtual() == NULL && requirements_ != NULL) {
    delete requirements_;
  }
  requirements_ = NULL;
}
void ElementDefinition::clear_alias() {
  alias_.Clear();
}
void ElementDefinition::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
void ElementDefinition::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void ElementDefinition::clear_content_reference() {
  if (GetArenaNoVirtual() == NULL && content_reference_ != NULL) {
    delete content_reference_;
  }
  content_reference_ = NULL;
}
void ElementDefinition::clear_meaning_when_missing() {
  if (GetArenaNoVirtual() == NULL && meaning_when_missing_ != NULL) {
    delete meaning_when_missing_;
  }
  meaning_when_missing_ = NULL;
}
void ElementDefinition::clear_order_meaning() {
  if (GetArenaNoVirtual() == NULL && order_meaning_ != NULL) {
    delete order_meaning_;
  }
  order_meaning_ = NULL;
}
void ElementDefinition::clear_max_length() {
  if (GetArenaNoVirtual() == NULL && max_length_ != NULL) {
    delete max_length_;
  }
  max_length_ = NULL;
}
void ElementDefinition::clear_condition() {
  condition_.Clear();
}
void ElementDefinition::clear_must_support() {
  if (GetArenaNoVirtual() == NULL && must_support_ != NULL) {
    delete must_support_;
  }
  must_support_ = NULL;
}
void ElementDefinition::clear_is_modifier() {
  if (GetArenaNoVirtual() == NULL && is_modifier_ != NULL) {
    delete is_modifier_;
  }
  is_modifier_ = NULL;
}
void ElementDefinition::clear_is_summary() {
  if (GetArenaNoVirtual() == NULL && is_summary_ != NULL) {
    delete is_summary_;
  }
  is_summary_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ElementDefinition::kIdFieldNumber;
const int ElementDefinition::kExtensionFieldNumber;
const int ElementDefinition::kPathFieldNumber;
const int ElementDefinition::kRepresentationFieldNumber;
const int ElementDefinition::kSliceNameFieldNumber;
const int ElementDefinition::kLabelFieldNumber;
const int ElementDefinition::kCodeFieldNumber;
const int ElementDefinition::kSlicingFieldNumber;
const int ElementDefinition::kShortFieldNumber;
const int ElementDefinition::kDefinitionFieldNumber;
const int ElementDefinition::kCommentFieldNumber;
const int ElementDefinition::kRequirementsFieldNumber;
const int ElementDefinition::kAliasFieldNumber;
const int ElementDefinition::kMinFieldNumber;
const int ElementDefinition::kMaxFieldNumber;
const int ElementDefinition::kBaseFieldNumber;
const int ElementDefinition::kContentReferenceFieldNumber;
const int ElementDefinition::kTypeFieldNumber;
const int ElementDefinition::kDefaultValueFieldNumber;
const int ElementDefinition::kMeaningWhenMissingFieldNumber;
const int ElementDefinition::kOrderMeaningFieldNumber;
const int ElementDefinition::kFixedFieldNumber;
const int ElementDefinition::kPatternFieldNumber;
const int ElementDefinition::kExampleFieldNumber;
const int ElementDefinition::kMinValueFieldNumber;
const int ElementDefinition::kMaxValueFieldNumber;
const int ElementDefinition::kMaxLengthFieldNumber;
const int ElementDefinition::kConditionFieldNumber;
const int ElementDefinition::kConstraintFieldNumber;
const int ElementDefinition::kMustSupportFieldNumber;
const int ElementDefinition::kIsModifierFieldNumber;
const int ElementDefinition::kIsSummaryFieldNumber;
const int ElementDefinition::kBindingFieldNumber;
const int ElementDefinition::kMappingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ElementDefinition::ElementDefinition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.ElementDefinition)
}
ElementDefinition::ElementDefinition(const ElementDefinition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      representation_(from.representation_),
      code_(from.code_),
      alias_(from.alias_),
      type_(from.type_),
      example_(from.example_),
      condition_(from.condition_),
      constraint_(from.constraint_),
      mapping_(from.mapping_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_path()) {
    path_ = new ::google::fhir::stu3::proto::String(*from.path_);
  } else {
    path_ = NULL;
  }
  if (from.has_slice_name()) {
    slice_name_ = new ::google::fhir::stu3::proto::String(*from.slice_name_);
  } else {
    slice_name_ = NULL;
  }
  if (from.has_label()) {
    label_ = new ::google::fhir::stu3::proto::String(*from.label_);
  } else {
    label_ = NULL;
  }
  if (from.has_slicing()) {
    slicing_ = new ::google::fhir::stu3::proto::ElementDefinition_Slicing(*from.slicing_);
  } else {
    slicing_ = NULL;
  }
  if (from.has_short_()) {
    short__ = new ::google::fhir::stu3::proto::String(*from.short__);
  } else {
    short__ = NULL;
  }
  if (from.has_definition()) {
    definition_ = new ::google::fhir::stu3::proto::Markdown(*from.definition_);
  } else {
    definition_ = NULL;
  }
  if (from.has_comment()) {
    comment_ = new ::google::fhir::stu3::proto::Markdown(*from.comment_);
  } else {
    comment_ = NULL;
  }
  if (from.has_requirements()) {
    requirements_ = new ::google::fhir::stu3::proto::Markdown(*from.requirements_);
  } else {
    requirements_ = NULL;
  }
  if (from.has_min()) {
    min_ = new ::google::fhir::stu3::proto::UnsignedInt(*from.min_);
  } else {
    min_ = NULL;
  }
  if (from.has_max()) {
    max_ = new ::google::fhir::stu3::proto::String(*from.max_);
  } else {
    max_ = NULL;
  }
  if (from.has_base()) {
    base_ = new ::google::fhir::stu3::proto::ElementDefinition_Base(*from.base_);
  } else {
    base_ = NULL;
  }
  if (from.has_content_reference()) {
    content_reference_ = new ::google::fhir::stu3::proto::Uri(*from.content_reference_);
  } else {
    content_reference_ = NULL;
  }
  if (from.has_default_value()) {
    default_value_ = new ::google::fhir::stu3::proto::ElementDefinition_DefaultValue(*from.default_value_);
  } else {
    default_value_ = NULL;
  }
  if (from.has_meaning_when_missing()) {
    meaning_when_missing_ = new ::google::fhir::stu3::proto::Markdown(*from.meaning_when_missing_);
  } else {
    meaning_when_missing_ = NULL;
  }
  if (from.has_order_meaning()) {
    order_meaning_ = new ::google::fhir::stu3::proto::String(*from.order_meaning_);
  } else {
    order_meaning_ = NULL;
  }
  if (from.has_fixed()) {
    fixed_ = new ::google::fhir::stu3::proto::ElementDefinition_Fixed(*from.fixed_);
  } else {
    fixed_ = NULL;
  }
  if (from.has_pattern()) {
    pattern_ = new ::google::fhir::stu3::proto::ElementDefinition_Pattern(*from.pattern_);
  } else {
    pattern_ = NULL;
  }
  if (from.has_min_value()) {
    min_value_ = new ::google::fhir::stu3::proto::ElementDefinition_MinValue(*from.min_value_);
  } else {
    min_value_ = NULL;
  }
  if (from.has_max_value()) {
    max_value_ = new ::google::fhir::stu3::proto::ElementDefinition_MaxValue(*from.max_value_);
  } else {
    max_value_ = NULL;
  }
  if (from.has_max_length()) {
    max_length_ = new ::google::fhir::stu3::proto::Integer(*from.max_length_);
  } else {
    max_length_ = NULL;
  }
  if (from.has_must_support()) {
    must_support_ = new ::google::fhir::stu3::proto::Boolean(*from.must_support_);
  } else {
    must_support_ = NULL;
  }
  if (from.has_is_modifier()) {
    is_modifier_ = new ::google::fhir::stu3::proto::Boolean(*from.is_modifier_);
  } else {
    is_modifier_ = NULL;
  }
  if (from.has_is_summary()) {
    is_summary_ = new ::google::fhir::stu3::proto::Boolean(*from.is_summary_);
  } else {
    is_summary_ = NULL;
  }
  if (from.has_binding()) {
    binding_ = new ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding(*from.binding_);
  } else {
    binding_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.ElementDefinition)
}

void ElementDefinition::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&binding_) -
      reinterpret_cast<char*>(&id_)) + sizeof(binding_));
}

ElementDefinition::~ElementDefinition() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.ElementDefinition)
  SharedDtor();
}

void ElementDefinition::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete path_;
  if (this != internal_default_instance()) delete slice_name_;
  if (this != internal_default_instance()) delete label_;
  if (this != internal_default_instance()) delete slicing_;
  if (this != internal_default_instance()) delete short__;
  if (this != internal_default_instance()) delete definition_;
  if (this != internal_default_instance()) delete comment_;
  if (this != internal_default_instance()) delete requirements_;
  if (this != internal_default_instance()) delete min_;
  if (this != internal_default_instance()) delete max_;
  if (this != internal_default_instance()) delete base_;
  if (this != internal_default_instance()) delete content_reference_;
  if (this != internal_default_instance()) delete default_value_;
  if (this != internal_default_instance()) delete meaning_when_missing_;
  if (this != internal_default_instance()) delete order_meaning_;
  if (this != internal_default_instance()) delete fixed_;
  if (this != internal_default_instance()) delete pattern_;
  if (this != internal_default_instance()) delete min_value_;
  if (this != internal_default_instance()) delete max_value_;
  if (this != internal_default_instance()) delete max_length_;
  if (this != internal_default_instance()) delete must_support_;
  if (this != internal_default_instance()) delete is_modifier_;
  if (this != internal_default_instance()) delete is_summary_;
  if (this != internal_default_instance()) delete binding_;
}

void ElementDefinition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ElementDefinition::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ElementDefinition& ElementDefinition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ElementDefinition.base);
  return *internal_default_instance();
}


void ElementDefinition::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.ElementDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  representation_.Clear();
  code_.Clear();
  alias_.Clear();
  type_.Clear();
  example_.Clear();
  condition_.Clear();
  constraint_.Clear();
  mapping_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && path_ != NULL) {
    delete path_;
  }
  path_ = NULL;
  if (GetArenaNoVirtual() == NULL && slice_name_ != NULL) {
    delete slice_name_;
  }
  slice_name_ = NULL;
  if (GetArenaNoVirtual() == NULL && label_ != NULL) {
    delete label_;
  }
  label_ = NULL;
  if (GetArenaNoVirtual() == NULL && slicing_ != NULL) {
    delete slicing_;
  }
  slicing_ = NULL;
  if (GetArenaNoVirtual() == NULL && short__ != NULL) {
    delete short__;
  }
  short__ = NULL;
  if (GetArenaNoVirtual() == NULL && definition_ != NULL) {
    delete definition_;
  }
  definition_ = NULL;
  if (GetArenaNoVirtual() == NULL && comment_ != NULL) {
    delete comment_;
  }
  comment_ = NULL;
  if (GetArenaNoVirtual() == NULL && requirements_ != NULL) {
    delete requirements_;
  }
  requirements_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  if (GetArenaNoVirtual() == NULL && base_ != NULL) {
    delete base_;
  }
  base_ = NULL;
  if (GetArenaNoVirtual() == NULL && content_reference_ != NULL) {
    delete content_reference_;
  }
  content_reference_ = NULL;
  if (GetArenaNoVirtual() == NULL && default_value_ != NULL) {
    delete default_value_;
  }
  default_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && meaning_when_missing_ != NULL) {
    delete meaning_when_missing_;
  }
  meaning_when_missing_ = NULL;
  if (GetArenaNoVirtual() == NULL && order_meaning_ != NULL) {
    delete order_meaning_;
  }
  order_meaning_ = NULL;
  if (GetArenaNoVirtual() == NULL && fixed_ != NULL) {
    delete fixed_;
  }
  fixed_ = NULL;
  if (GetArenaNoVirtual() == NULL && pattern_ != NULL) {
    delete pattern_;
  }
  pattern_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_value_ != NULL) {
    delete min_value_;
  }
  min_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_value_ != NULL) {
    delete max_value_;
  }
  max_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_length_ != NULL) {
    delete max_length_;
  }
  max_length_ = NULL;
  if (GetArenaNoVirtual() == NULL && must_support_ != NULL) {
    delete must_support_;
  }
  must_support_ = NULL;
  if (GetArenaNoVirtual() == NULL && is_modifier_ != NULL) {
    delete is_modifier_;
  }
  is_modifier_ = NULL;
  if (GetArenaNoVirtual() == NULL && is_summary_ != NULL) {
    delete is_summary_;
  }
  is_summary_ = NULL;
  if (GetArenaNoVirtual() == NULL && binding_ != NULL) {
    delete binding_;
  }
  binding_ = NULL;
  _internal_metadata_.Clear();
}

bool ElementDefinition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.ElementDefinition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String path = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.PropertyRepresentationCode representation = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_representation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String slice_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_slice_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String label = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_label()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Coding code = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ElementDefinition.Slicing slicing = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_slicing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String short = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_short_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Markdown definition = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_definition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Markdown comment = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_comment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Markdown requirements = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_requirements()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.String alias = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_alias()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.UnsignedInt min = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String max = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ElementDefinition.Base base = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri content_reference = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_content_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ElementDefinition.TypeRef type = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ElementDefinition.DefaultValue default_value = 19 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_default_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Markdown meaning_when_missing = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meaning_when_missing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String order_meaning = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_order_meaning()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ElementDefinition.Fixed fixed = 22 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fixed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ElementDefinition.Pattern pattern = 23 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pattern()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ElementDefinition.Example example = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_example()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ElementDefinition.MinValue min_value = 25 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ElementDefinition.MaxValue max_value = 26 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Integer max_length = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_length()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Id condition = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_condition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ElementDefinition.Constraint constraint = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_constraint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Boolean must_support = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_must_support()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Boolean is_modifier = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_is_modifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Boolean is_summary = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_is_summary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding binding = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_binding()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ElementDefinition.Mapping mapping = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_mapping()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.ElementDefinition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.ElementDefinition)
  return false;
#undef DO_
}

void ElementDefinition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.ElementDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.String path = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_path()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_path(), output);
  }

  // repeated .google.fhir.stu3.proto.PropertyRepresentationCode representation = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->representation_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->representation(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.String slice_name = 5;
  if (this->has_slice_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_slice_name(), output);
  }

  // .google.fhir.stu3.proto.String label = 6;
  if (this->has_label()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_label(), output);
  }

  // repeated .google.fhir.stu3.proto.Coding code = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->code_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->code(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.ElementDefinition.Slicing slicing = 8;
  if (this->has_slicing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_slicing(), output);
  }

  // .google.fhir.stu3.proto.String short = 9;
  if (this->has_short_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_short_(), output);
  }

  // .google.fhir.stu3.proto.Markdown definition = 10;
  if (this->has_definition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_definition(), output);
  }

  // .google.fhir.stu3.proto.Markdown comment = 11;
  if (this->has_comment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_comment(), output);
  }

  // .google.fhir.stu3.proto.Markdown requirements = 12;
  if (this->has_requirements()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_requirements(), output);
  }

  // repeated .google.fhir.stu3.proto.String alias = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alias_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13,
      this->alias(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.UnsignedInt min = 14;
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_min(), output);
  }

  // .google.fhir.stu3.proto.String max = 15;
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_max(), output);
  }

  // .google.fhir.stu3.proto.ElementDefinition.Base base = 16;
  if (this->has_base()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_base(), output);
  }

  // .google.fhir.stu3.proto.Uri content_reference = 17;
  if (this->has_content_reference()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_content_reference(), output);
  }

  // repeated .google.fhir.stu3.proto.ElementDefinition.TypeRef type = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->type_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18,
      this->type(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.ElementDefinition.DefaultValue default_value = 19 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_default_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_default_value(), output);
  }

  // .google.fhir.stu3.proto.Markdown meaning_when_missing = 20;
  if (this->has_meaning_when_missing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_meaning_when_missing(), output);
  }

  // .google.fhir.stu3.proto.String order_meaning = 21;
  if (this->has_order_meaning()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_order_meaning(), output);
  }

  // .google.fhir.stu3.proto.ElementDefinition.Fixed fixed = 22 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_fixed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->_internal_fixed(), output);
  }

  // .google.fhir.stu3.proto.ElementDefinition.Pattern pattern = 23 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_pattern()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->_internal_pattern(), output);
  }

  // repeated .google.fhir.stu3.proto.ElementDefinition.Example example = 24;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->example_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24,
      this->example(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.ElementDefinition.MinValue min_value = 25 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_min_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->_internal_min_value(), output);
  }

  // .google.fhir.stu3.proto.ElementDefinition.MaxValue max_value = 26 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_max_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->_internal_max_value(), output);
  }

  // .google.fhir.stu3.proto.Integer max_length = 27;
  if (this->has_max_length()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->_internal_max_length(), output);
  }

  // repeated .google.fhir.stu3.proto.Id condition = 28;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->condition_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28,
      this->condition(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.ElementDefinition.Constraint constraint = 29;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->constraint_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29,
      this->constraint(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Boolean must_support = 30;
  if (this->has_must_support()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, this->_internal_must_support(), output);
  }

  // .google.fhir.stu3.proto.Boolean is_modifier = 31;
  if (this->has_is_modifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, this->_internal_is_modifier(), output);
  }

  // .google.fhir.stu3.proto.Boolean is_summary = 32;
  if (this->has_is_summary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32, this->_internal_is_summary(), output);
  }

  // .google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding binding = 33;
  if (this->has_binding()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33, this->_internal_binding(), output);
  }

  // repeated .google.fhir.stu3.proto.ElementDefinition.Mapping mapping = 34;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mapping_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      34,
      this->mapping(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.ElementDefinition)
}

::google::protobuf::uint8* ElementDefinition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.ElementDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.String path = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_path()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_path(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.PropertyRepresentationCode representation = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->representation_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->representation(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.String slice_name = 5;
  if (this->has_slice_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_slice_name(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String label = 6;
  if (this->has_label()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_label(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Coding code = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->code_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->code(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.ElementDefinition.Slicing slicing = 8;
  if (this->has_slicing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_slicing(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String short = 9;
  if (this->has_short_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_short_(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Markdown definition = 10;
  if (this->has_definition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_definition(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Markdown comment = 11;
  if (this->has_comment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_comment(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Markdown requirements = 12;
  if (this->has_requirements()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_requirements(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.String alias = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alias_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->alias(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.UnsignedInt min = 14;
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_min(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String max = 15;
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_max(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ElementDefinition.Base base = 16;
  if (this->has_base()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_base(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri content_reference = 17;
  if (this->has_content_reference()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_content_reference(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ElementDefinition.TypeRef type = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->type_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->type(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.ElementDefinition.DefaultValue default_value = 19 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_default_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_default_value(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Markdown meaning_when_missing = 20;
  if (this->has_meaning_when_missing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_meaning_when_missing(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String order_meaning = 21;
  if (this->has_order_meaning()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_order_meaning(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ElementDefinition.Fixed fixed = 22 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_fixed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->_internal_fixed(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ElementDefinition.Pattern pattern = 23 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_pattern()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->_internal_pattern(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ElementDefinition.Example example = 24;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->example_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->example(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.ElementDefinition.MinValue min_value = 25 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_min_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->_internal_min_value(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ElementDefinition.MaxValue max_value = 26 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_max_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, this->_internal_max_value(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Integer max_length = 27;
  if (this->has_max_length()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, this->_internal_max_length(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Id condition = 28;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->condition_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, this->condition(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ElementDefinition.Constraint constraint = 29;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->constraint_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29, this->constraint(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Boolean must_support = 30;
  if (this->has_must_support()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, this->_internal_must_support(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Boolean is_modifier = 31;
  if (this->has_is_modifier()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        31, this->_internal_is_modifier(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Boolean is_summary = 32;
  if (this->has_is_summary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        32, this->_internal_is_summary(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding binding = 33;
  if (this->has_binding()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        33, this->_internal_binding(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ElementDefinition.Mapping mapping = 34;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mapping_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        34, this->mapping(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.ElementDefinition)
  return target;
}

size_t ElementDefinition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.ElementDefinition)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.PropertyRepresentationCode representation = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->representation_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->representation(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Coding code = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->code_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->code(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.String alias = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->alias_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->alias(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.ElementDefinition.TypeRef type = 18;
  {
    unsigned int count = static_cast<unsigned int>(this->type_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->type(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.ElementDefinition.Example example = 24;
  {
    unsigned int count = static_cast<unsigned int>(this->example_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->example(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Id condition = 28;
  {
    unsigned int count = static_cast<unsigned int>(this->condition_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->condition(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.ElementDefinition.Constraint constraint = 29;
  {
    unsigned int count = static_cast<unsigned int>(this->constraint_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->constraint(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.ElementDefinition.Mapping mapping = 34;
  {
    unsigned int count = static_cast<unsigned int>(this->mapping_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->mapping(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.String path = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *path_);
  }

  // .google.fhir.stu3.proto.String slice_name = 5;
  if (this->has_slice_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *slice_name_);
  }

  // .google.fhir.stu3.proto.String label = 6;
  if (this->has_label()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *label_);
  }

  // .google.fhir.stu3.proto.ElementDefinition.Slicing slicing = 8;
  if (this->has_slicing()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *slicing_);
  }

  // .google.fhir.stu3.proto.String short = 9;
  if (this->has_short_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *short__);
  }

  // .google.fhir.stu3.proto.Markdown definition = 10;
  if (this->has_definition()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *definition_);
  }

  // .google.fhir.stu3.proto.Markdown comment = 11;
  if (this->has_comment()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *comment_);
  }

  // .google.fhir.stu3.proto.Markdown requirements = 12;
  if (this->has_requirements()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *requirements_);
  }

  // .google.fhir.stu3.proto.UnsignedInt min = 14;
  if (this->has_min()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *min_);
  }

  // .google.fhir.stu3.proto.String max = 15;
  if (this->has_max()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *max_);
  }

  // .google.fhir.stu3.proto.ElementDefinition.Base base = 16;
  if (this->has_base()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *base_);
  }

  // .google.fhir.stu3.proto.Uri content_reference = 17;
  if (this->has_content_reference()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *content_reference_);
  }

  // .google.fhir.stu3.proto.ElementDefinition.DefaultValue default_value = 19 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_default_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *default_value_);
  }

  // .google.fhir.stu3.proto.Markdown meaning_when_missing = 20;
  if (this->has_meaning_when_missing()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *meaning_when_missing_);
  }

  // .google.fhir.stu3.proto.String order_meaning = 21;
  if (this->has_order_meaning()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *order_meaning_);
  }

  // .google.fhir.stu3.proto.ElementDefinition.Fixed fixed = 22 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_fixed()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *fixed_);
  }

  // .google.fhir.stu3.proto.ElementDefinition.Pattern pattern = 23 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_pattern()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pattern_);
  }

  // .google.fhir.stu3.proto.ElementDefinition.MinValue min_value = 25 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_min_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *min_value_);
  }

  // .google.fhir.stu3.proto.ElementDefinition.MaxValue max_value = 26 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_max_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *max_value_);
  }

  // .google.fhir.stu3.proto.Integer max_length = 27;
  if (this->has_max_length()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *max_length_);
  }

  // .google.fhir.stu3.proto.Boolean must_support = 30;
  if (this->has_must_support()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *must_support_);
  }

  // .google.fhir.stu3.proto.Boolean is_modifier = 31;
  if (this->has_is_modifier()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *is_modifier_);
  }

  // .google.fhir.stu3.proto.Boolean is_summary = 32;
  if (this->has_is_summary()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *is_summary_);
  }

  // .google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding binding = 33;
  if (this->has_binding()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *binding_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ElementDefinition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.ElementDefinition)
  GOOGLE_DCHECK_NE(&from, this);
  const ElementDefinition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ElementDefinition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.ElementDefinition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.ElementDefinition)
    MergeFrom(*source);
  }
}

void ElementDefinition::MergeFrom(const ElementDefinition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.ElementDefinition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  representation_.MergeFrom(from.representation_);
  code_.MergeFrom(from.code_);
  alias_.MergeFrom(from.alias_);
  type_.MergeFrom(from.type_);
  example_.MergeFrom(from.example_);
  condition_.MergeFrom(from.condition_);
  constraint_.MergeFrom(from.constraint_);
  mapping_.MergeFrom(from.mapping_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_path()) {
    mutable_path()->::google::fhir::stu3::proto::String::MergeFrom(from.path());
  }
  if (from.has_slice_name()) {
    mutable_slice_name()->::google::fhir::stu3::proto::String::MergeFrom(from.slice_name());
  }
  if (from.has_label()) {
    mutable_label()->::google::fhir::stu3::proto::String::MergeFrom(from.label());
  }
  if (from.has_slicing()) {
    mutable_slicing()->::google::fhir::stu3::proto::ElementDefinition_Slicing::MergeFrom(from.slicing());
  }
  if (from.has_short_()) {
    mutable_short_()->::google::fhir::stu3::proto::String::MergeFrom(from.short_());
  }
  if (from.has_definition()) {
    mutable_definition()->::google::fhir::stu3::proto::Markdown::MergeFrom(from.definition());
  }
  if (from.has_comment()) {
    mutable_comment()->::google::fhir::stu3::proto::Markdown::MergeFrom(from.comment());
  }
  if (from.has_requirements()) {
    mutable_requirements()->::google::fhir::stu3::proto::Markdown::MergeFrom(from.requirements());
  }
  if (from.has_min()) {
    mutable_min()->::google::fhir::stu3::proto::UnsignedInt::MergeFrom(from.min());
  }
  if (from.has_max()) {
    mutable_max()->::google::fhir::stu3::proto::String::MergeFrom(from.max());
  }
  if (from.has_base()) {
    mutable_base()->::google::fhir::stu3::proto::ElementDefinition_Base::MergeFrom(from.base());
  }
  if (from.has_content_reference()) {
    mutable_content_reference()->::google::fhir::stu3::proto::Uri::MergeFrom(from.content_reference());
  }
  if (from.has_default_value()) {
    mutable_default_value()->::google::fhir::stu3::proto::ElementDefinition_DefaultValue::MergeFrom(from.default_value());
  }
  if (from.has_meaning_when_missing()) {
    mutable_meaning_when_missing()->::google::fhir::stu3::proto::Markdown::MergeFrom(from.meaning_when_missing());
  }
  if (from.has_order_meaning()) {
    mutable_order_meaning()->::google::fhir::stu3::proto::String::MergeFrom(from.order_meaning());
  }
  if (from.has_fixed()) {
    mutable_fixed()->::google::fhir::stu3::proto::ElementDefinition_Fixed::MergeFrom(from.fixed());
  }
  if (from.has_pattern()) {
    mutable_pattern()->::google::fhir::stu3::proto::ElementDefinition_Pattern::MergeFrom(from.pattern());
  }
  if (from.has_min_value()) {
    mutable_min_value()->::google::fhir::stu3::proto::ElementDefinition_MinValue::MergeFrom(from.min_value());
  }
  if (from.has_max_value()) {
    mutable_max_value()->::google::fhir::stu3::proto::ElementDefinition_MaxValue::MergeFrom(from.max_value());
  }
  if (from.has_max_length()) {
    mutable_max_length()->::google::fhir::stu3::proto::Integer::MergeFrom(from.max_length());
  }
  if (from.has_must_support()) {
    mutable_must_support()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.must_support());
  }
  if (from.has_is_modifier()) {
    mutable_is_modifier()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.is_modifier());
  }
  if (from.has_is_summary()) {
    mutable_is_summary()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.is_summary());
  }
  if (from.has_binding()) {
    mutable_binding()->::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding::MergeFrom(from.binding());
  }
}

void ElementDefinition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.ElementDefinition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ElementDefinition::CopyFrom(const ElementDefinition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.ElementDefinition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ElementDefinition::IsInitialized() const {
  return true;
}

void ElementDefinition::Swap(ElementDefinition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ElementDefinition::InternalSwap(ElementDefinition* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&representation_)->InternalSwap(CastToBase(&other->representation_));
  CastToBase(&code_)->InternalSwap(CastToBase(&other->code_));
  CastToBase(&alias_)->InternalSwap(CastToBase(&other->alias_));
  CastToBase(&type_)->InternalSwap(CastToBase(&other->type_));
  CastToBase(&example_)->InternalSwap(CastToBase(&other->example_));
  CastToBase(&condition_)->InternalSwap(CastToBase(&other->condition_));
  CastToBase(&constraint_)->InternalSwap(CastToBase(&other->constraint_));
  CastToBase(&mapping_)->InternalSwap(CastToBase(&other->mapping_));
  swap(id_, other->id_);
  swap(path_, other->path_);
  swap(slice_name_, other->slice_name_);
  swap(label_, other->label_);
  swap(slicing_, other->slicing_);
  swap(short__, other->short__);
  swap(definition_, other->definition_);
  swap(comment_, other->comment_);
  swap(requirements_, other->requirements_);
  swap(min_, other->min_);
  swap(max_, other->max_);
  swap(base_, other->base_);
  swap(content_reference_, other->content_reference_);
  swap(default_value_, other->default_value_);
  swap(meaning_when_missing_, other->meaning_when_missing_);
  swap(order_meaning_, other->order_meaning_);
  swap(fixed_, other->fixed_);
  swap(pattern_, other->pattern_);
  swap(min_value_, other->min_value_);
  swap(max_value_, other->max_value_);
  swap(max_length_, other->max_length_);
  swap(must_support_, other->must_support_);
  swap(is_modifier_, other->is_modifier_);
  swap(is_summary_, other->is_summary_);
  swap(binding_, other->binding_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ElementDefinition::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Narrative::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Narrative_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Narrative_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::fhir::stu3::proto::NarrativeStatusCode*>(
      ::google::fhir::stu3::proto::NarrativeStatusCode::internal_default_instance());
  ::google::fhir::stu3::proto::_Narrative_default_instance_._instance.get_mutable()->div_ = const_cast< ::google::fhir::stu3::proto::Xhtml*>(
      ::google::fhir::stu3::proto::Xhtml::internal_default_instance());
}
void Narrative::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void Narrative::clear_extension() {
  extension_.Clear();
}
void Narrative::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
void Narrative::clear_div() {
  if (GetArenaNoVirtual() == NULL && div_ != NULL) {
    delete div_;
  }
  div_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Narrative::kIdFieldNumber;
const int Narrative::kExtensionFieldNumber;
const int Narrative::kStatusFieldNumber;
const int Narrative::kDivFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Narrative::Narrative()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_Narrative.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Narrative)
}
Narrative::Narrative(const Narrative& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_status()) {
    status_ = new ::google::fhir::stu3::proto::NarrativeStatusCode(*from.status_);
  } else {
    status_ = NULL;
  }
  if (from.has_div()) {
    div_ = new ::google::fhir::stu3::proto::Xhtml(*from.div_);
  } else {
    div_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Narrative)
}

void Narrative::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&div_) -
      reinterpret_cast<char*>(&id_)) + sizeof(div_));
}

Narrative::~Narrative() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Narrative)
  SharedDtor();
}

void Narrative::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete div_;
}

void Narrative::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Narrative::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Narrative& Narrative::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_Narrative.base);
  return *internal_default_instance();
}


void Narrative::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Narrative)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  if (GetArenaNoVirtual() == NULL && div_ != NULL) {
    delete div_;
  }
  div_ = NULL;
  _internal_metadata_.Clear();
}

bool Narrative::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Narrative)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.NarrativeStatusCode status = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Xhtml div = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_div()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Narrative)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Narrative)
  return false;
#undef DO_
}

void Narrative::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Narrative)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.NarrativeStatusCode status = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_status(), output);
  }

  // .google.fhir.stu3.proto.Xhtml div = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_div()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_div(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Narrative)
}

::google::protobuf::uint8* Narrative::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Narrative)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.NarrativeStatusCode status = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_status(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Xhtml div = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_div()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_div(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Narrative)
  return target;
}

size_t Narrative::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Narrative)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.NarrativeStatusCode status = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .google.fhir.stu3.proto.Xhtml div = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_div()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *div_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Narrative::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Narrative)
  GOOGLE_DCHECK_NE(&from, this);
  const Narrative* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Narrative>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Narrative)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Narrative)
    MergeFrom(*source);
  }
}

void Narrative::MergeFrom(const Narrative& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Narrative)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_status()) {
    mutable_status()->::google::fhir::stu3::proto::NarrativeStatusCode::MergeFrom(from.status());
  }
  if (from.has_div()) {
    mutable_div()->::google::fhir::stu3::proto::Xhtml::MergeFrom(from.div());
  }
}

void Narrative::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Narrative)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Narrative::CopyFrom(const Narrative& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Narrative)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Narrative::IsInitialized() const {
  return true;
}

void Narrative::Swap(Narrative* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Narrative::InternalSwap(Narrative* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(status_, other->status_);
  swap(div_, other->div_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Narrative::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ParameterDefinition::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_ParameterDefinition_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ParameterDefinition_default_instance_._instance.get_mutable()->name_ = const_cast< ::google::fhir::stu3::proto::Code*>(
      ::google::fhir::stu3::proto::Code::internal_default_instance());
  ::google::fhir::stu3::proto::_ParameterDefinition_default_instance_._instance.get_mutable()->use_ = const_cast< ::google::fhir::stu3::proto::OperationParameterUseCode*>(
      ::google::fhir::stu3::proto::OperationParameterUseCode::internal_default_instance());
  ::google::fhir::stu3::proto::_ParameterDefinition_default_instance_._instance.get_mutable()->min_ = const_cast< ::google::fhir::stu3::proto::Integer*>(
      ::google::fhir::stu3::proto::Integer::internal_default_instance());
  ::google::fhir::stu3::proto::_ParameterDefinition_default_instance_._instance.get_mutable()->max_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ParameterDefinition_default_instance_._instance.get_mutable()->documentation_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ParameterDefinition_default_instance_._instance.get_mutable()->type_ = const_cast< ::google::fhir::stu3::proto::FHIRAllTypesCode*>(
      ::google::fhir::stu3::proto::FHIRAllTypesCode::internal_default_instance());
  ::google::fhir::stu3::proto::_ParameterDefinition_default_instance_._instance.get_mutable()->profile_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
}
void ParameterDefinition::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void ParameterDefinition::clear_extension() {
  extension_.Clear();
}
void ParameterDefinition::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void ParameterDefinition::clear_use() {
  if (GetArenaNoVirtual() == NULL && use_ != NULL) {
    delete use_;
  }
  use_ = NULL;
}
void ParameterDefinition::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
void ParameterDefinition::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void ParameterDefinition::clear_documentation() {
  if (GetArenaNoVirtual() == NULL && documentation_ != NULL) {
    delete documentation_;
  }
  documentation_ = NULL;
}
void ParameterDefinition::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
}
void ParameterDefinition::clear_profile() {
  if (GetArenaNoVirtual() == NULL && profile_ != NULL) {
    delete profile_;
  }
  profile_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParameterDefinition::kIdFieldNumber;
const int ParameterDefinition::kExtensionFieldNumber;
const int ParameterDefinition::kNameFieldNumber;
const int ParameterDefinition::kUseFieldNumber;
const int ParameterDefinition::kMinFieldNumber;
const int ParameterDefinition::kMaxFieldNumber;
const int ParameterDefinition::kDocumentationFieldNumber;
const int ParameterDefinition::kTypeFieldNumber;
const int ParameterDefinition::kProfileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParameterDefinition::ParameterDefinition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ParameterDefinition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.ParameterDefinition)
}
ParameterDefinition::ParameterDefinition(const ParameterDefinition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::google::fhir::stu3::proto::Code(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_use()) {
    use_ = new ::google::fhir::stu3::proto::OperationParameterUseCode(*from.use_);
  } else {
    use_ = NULL;
  }
  if (from.has_min()) {
    min_ = new ::google::fhir::stu3::proto::Integer(*from.min_);
  } else {
    min_ = NULL;
  }
  if (from.has_max()) {
    max_ = new ::google::fhir::stu3::proto::String(*from.max_);
  } else {
    max_ = NULL;
  }
  if (from.has_documentation()) {
    documentation_ = new ::google::fhir::stu3::proto::String(*from.documentation_);
  } else {
    documentation_ = NULL;
  }
  if (from.has_type()) {
    type_ = new ::google::fhir::stu3::proto::FHIRAllTypesCode(*from.type_);
  } else {
    type_ = NULL;
  }
  if (from.has_profile()) {
    profile_ = new ::google::fhir::stu3::proto::Reference(*from.profile_);
  } else {
    profile_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.ParameterDefinition)
}

void ParameterDefinition::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&profile_) -
      reinterpret_cast<char*>(&id_)) + sizeof(profile_));
}

ParameterDefinition::~ParameterDefinition() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.ParameterDefinition)
  SharedDtor();
}

void ParameterDefinition::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete use_;
  if (this != internal_default_instance()) delete min_;
  if (this != internal_default_instance()) delete max_;
  if (this != internal_default_instance()) delete documentation_;
  if (this != internal_default_instance()) delete type_;
  if (this != internal_default_instance()) delete profile_;
}

void ParameterDefinition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ParameterDefinition::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParameterDefinition& ParameterDefinition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_ParameterDefinition.base);
  return *internal_default_instance();
}


void ParameterDefinition::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.ParameterDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && use_ != NULL) {
    delete use_;
  }
  use_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  if (GetArenaNoVirtual() == NULL && documentation_ != NULL) {
    delete documentation_;
  }
  documentation_ = NULL;
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  if (GetArenaNoVirtual() == NULL && profile_ != NULL) {
    delete profile_;
  }
  profile_ = NULL;
  _internal_metadata_.Clear();
}

bool ParameterDefinition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.ParameterDefinition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Code name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.OperationParameterUseCode use = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_use()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Integer min = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String max = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String documentation = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_documentation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.FHIRAllTypesCode type = 8 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference profile = 9 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/StructureDefinition"];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_profile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.ParameterDefinition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.ParameterDefinition)
  return false;
#undef DO_
}

void ParameterDefinition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.ParameterDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Code name = 3;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_name(), output);
  }

  // .google.fhir.stu3.proto.OperationParameterUseCode use = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_use()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_use(), output);
  }

  // .google.fhir.stu3.proto.Integer min = 5;
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_min(), output);
  }

  // .google.fhir.stu3.proto.String max = 6;
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_max(), output);
  }

  // .google.fhir.stu3.proto.String documentation = 7;
  if (this->has_documentation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_documentation(), output);
  }

  // .google.fhir.stu3.proto.FHIRAllTypesCode type = 8 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_type(), output);
  }

  // .google.fhir.stu3.proto.Reference profile = 9 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/StructureDefinition"];
  if (this->has_profile()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_profile(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.ParameterDefinition)
}

::google::protobuf::uint8* ParameterDefinition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.ParameterDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Code name = 3;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_name(), deterministic, target);
  }

  // .google.fhir.stu3.proto.OperationParameterUseCode use = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_use()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_use(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Integer min = 5;
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_min(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String max = 6;
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_max(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String documentation = 7;
  if (this->has_documentation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_documentation(), deterministic, target);
  }

  // .google.fhir.stu3.proto.FHIRAllTypesCode type = 8 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_type(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference profile = 9 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/StructureDefinition"];
  if (this->has_profile()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_profile(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.ParameterDefinition)
  return target;
}

size_t ParameterDefinition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.ParameterDefinition)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Code name = 3;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *name_);
  }

  // .google.fhir.stu3.proto.OperationParameterUseCode use = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_use()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *use_);
  }

  // .google.fhir.stu3.proto.Integer min = 5;
  if (this->has_min()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *min_);
  }

  // .google.fhir.stu3.proto.String max = 6;
  if (this->has_max()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *max_);
  }

  // .google.fhir.stu3.proto.String documentation = 7;
  if (this->has_documentation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *documentation_);
  }

  // .google.fhir.stu3.proto.FHIRAllTypesCode type = 8 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  // .google.fhir.stu3.proto.Reference profile = 9 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/StructureDefinition"];
  if (this->has_profile()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *profile_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParameterDefinition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.ParameterDefinition)
  GOOGLE_DCHECK_NE(&from, this);
  const ParameterDefinition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParameterDefinition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.ParameterDefinition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.ParameterDefinition)
    MergeFrom(*source);
  }
}

void ParameterDefinition::MergeFrom(const ParameterDefinition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.ParameterDefinition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_name()) {
    mutable_name()->::google::fhir::stu3::proto::Code::MergeFrom(from.name());
  }
  if (from.has_use()) {
    mutable_use()->::google::fhir::stu3::proto::OperationParameterUseCode::MergeFrom(from.use());
  }
  if (from.has_min()) {
    mutable_min()->::google::fhir::stu3::proto::Integer::MergeFrom(from.min());
  }
  if (from.has_max()) {
    mutable_max()->::google::fhir::stu3::proto::String::MergeFrom(from.max());
  }
  if (from.has_documentation()) {
    mutable_documentation()->::google::fhir::stu3::proto::String::MergeFrom(from.documentation());
  }
  if (from.has_type()) {
    mutable_type()->::google::fhir::stu3::proto::FHIRAllTypesCode::MergeFrom(from.type());
  }
  if (from.has_profile()) {
    mutable_profile()->::google::fhir::stu3::proto::Reference::MergeFrom(from.profile());
  }
}

void ParameterDefinition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.ParameterDefinition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParameterDefinition::CopyFrom(const ParameterDefinition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.ParameterDefinition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParameterDefinition::IsInitialized() const {
  return true;
}

void ParameterDefinition::Swap(ParameterDefinition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParameterDefinition::InternalSwap(ParameterDefinition* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(name_, other->name_);
  swap(use_, other->use_);
  swap(min_, other->min_);
  swap(max_, other->max_);
  swap(documentation_, other->documentation_);
  swap(type_, other->type_);
  swap(profile_, other->profile_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ParameterDefinition::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RelatedArtifact::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_RelatedArtifact_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_RelatedArtifact_default_instance_._instance.get_mutable()->type_ = const_cast< ::google::fhir::stu3::proto::RelatedArtifactTypeCode*>(
      ::google::fhir::stu3::proto::RelatedArtifactTypeCode::internal_default_instance());
  ::google::fhir::stu3::proto::_RelatedArtifact_default_instance_._instance.get_mutable()->display_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_RelatedArtifact_default_instance_._instance.get_mutable()->citation_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_RelatedArtifact_default_instance_._instance.get_mutable()->url_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::proto::_RelatedArtifact_default_instance_._instance.get_mutable()->document_ = const_cast< ::google::fhir::stu3::proto::Attachment*>(
      ::google::fhir::stu3::proto::Attachment::internal_default_instance());
  ::google::fhir::stu3::proto::_RelatedArtifact_default_instance_._instance.get_mutable()->resource_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
}
void RelatedArtifact::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void RelatedArtifact::clear_extension() {
  extension_.Clear();
}
void RelatedArtifact::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
}
void RelatedArtifact::clear_display() {
  if (GetArenaNoVirtual() == NULL && display_ != NULL) {
    delete display_;
  }
  display_ = NULL;
}
void RelatedArtifact::clear_citation() {
  if (GetArenaNoVirtual() == NULL && citation_ != NULL) {
    delete citation_;
  }
  citation_ = NULL;
}
void RelatedArtifact::clear_url() {
  if (GetArenaNoVirtual() == NULL && url_ != NULL) {
    delete url_;
  }
  url_ = NULL;
}
void RelatedArtifact::clear_document() {
  if (GetArenaNoVirtual() == NULL && document_ != NULL) {
    delete document_;
  }
  document_ = NULL;
}
void RelatedArtifact::clear_resource() {
  if (GetArenaNoVirtual() == NULL && resource_ != NULL) {
    delete resource_;
  }
  resource_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RelatedArtifact::kIdFieldNumber;
const int RelatedArtifact::kExtensionFieldNumber;
const int RelatedArtifact::kTypeFieldNumber;
const int RelatedArtifact::kDisplayFieldNumber;
const int RelatedArtifact::kCitationFieldNumber;
const int RelatedArtifact::kUrlFieldNumber;
const int RelatedArtifact::kDocumentFieldNumber;
const int RelatedArtifact::kResourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RelatedArtifact::RelatedArtifact()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_RelatedArtifact.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.RelatedArtifact)
}
RelatedArtifact::RelatedArtifact(const RelatedArtifact& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_type()) {
    type_ = new ::google::fhir::stu3::proto::RelatedArtifactTypeCode(*from.type_);
  } else {
    type_ = NULL;
  }
  if (from.has_display()) {
    display_ = new ::google::fhir::stu3::proto::String(*from.display_);
  } else {
    display_ = NULL;
  }
  if (from.has_citation()) {
    citation_ = new ::google::fhir::stu3::proto::String(*from.citation_);
  } else {
    citation_ = NULL;
  }
  if (from.has_url()) {
    url_ = new ::google::fhir::stu3::proto::Uri(*from.url_);
  } else {
    url_ = NULL;
  }
  if (from.has_document()) {
    document_ = new ::google::fhir::stu3::proto::Attachment(*from.document_);
  } else {
    document_ = NULL;
  }
  if (from.has_resource()) {
    resource_ = new ::google::fhir::stu3::proto::Reference(*from.resource_);
  } else {
    resource_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.RelatedArtifact)
}

void RelatedArtifact::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resource_) -
      reinterpret_cast<char*>(&id_)) + sizeof(resource_));
}

RelatedArtifact::~RelatedArtifact() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.RelatedArtifact)
  SharedDtor();
}

void RelatedArtifact::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete type_;
  if (this != internal_default_instance()) delete display_;
  if (this != internal_default_instance()) delete citation_;
  if (this != internal_default_instance()) delete url_;
  if (this != internal_default_instance()) delete document_;
  if (this != internal_default_instance()) delete resource_;
}

void RelatedArtifact::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RelatedArtifact::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RelatedArtifact& RelatedArtifact::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_RelatedArtifact.base);
  return *internal_default_instance();
}


void RelatedArtifact::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.RelatedArtifact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  if (GetArenaNoVirtual() == NULL && display_ != NULL) {
    delete display_;
  }
  display_ = NULL;
  if (GetArenaNoVirtual() == NULL && citation_ != NULL) {
    delete citation_;
  }
  citation_ = NULL;
  if (GetArenaNoVirtual() == NULL && url_ != NULL) {
    delete url_;
  }
  url_ = NULL;
  if (GetArenaNoVirtual() == NULL && document_ != NULL) {
    delete document_;
  }
  document_ = NULL;
  if (GetArenaNoVirtual() == NULL && resource_ != NULL) {
    delete resource_;
  }
  resource_ = NULL;
  _internal_metadata_.Clear();
}

bool RelatedArtifact::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.RelatedArtifact)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.RelatedArtifactTypeCode type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String display = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_display()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String citation = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_citation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri url = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Attachment document = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_document()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference resource = 8 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resource()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.RelatedArtifact)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.RelatedArtifact)
  return false;
#undef DO_
}

void RelatedArtifact::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.RelatedArtifact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.RelatedArtifactTypeCode type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_type(), output);
  }

  // .google.fhir.stu3.proto.String display = 4;
  if (this->has_display()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_display(), output);
  }

  // .google.fhir.stu3.proto.String citation = 5;
  if (this->has_citation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_citation(), output);
  }

  // .google.fhir.stu3.proto.Uri url = 6;
  if (this->has_url()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_url(), output);
  }

  // .google.fhir.stu3.proto.Attachment document = 7;
  if (this->has_document()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_document(), output);
  }

  // .google.fhir.stu3.proto.Reference resource = 8 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
  if (this->has_resource()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_resource(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.RelatedArtifact)
}

::google::protobuf::uint8* RelatedArtifact::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.RelatedArtifact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.RelatedArtifactTypeCode type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_type(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String display = 4;
  if (this->has_display()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_display(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String citation = 5;
  if (this->has_citation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_citation(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri url = 6;
  if (this->has_url()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_url(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Attachment document = 7;
  if (this->has_document()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_document(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference resource = 8 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
  if (this->has_resource()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_resource(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.RelatedArtifact)
  return target;
}

size_t RelatedArtifact::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.RelatedArtifact)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.RelatedArtifactTypeCode type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  // .google.fhir.stu3.proto.String display = 4;
  if (this->has_display()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *display_);
  }

  // .google.fhir.stu3.proto.String citation = 5;
  if (this->has_citation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *citation_);
  }

  // .google.fhir.stu3.proto.Uri url = 6;
  if (this->has_url()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *url_);
  }

  // .google.fhir.stu3.proto.Attachment document = 7;
  if (this->has_document()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *document_);
  }

  // .google.fhir.stu3.proto.Reference resource = 8 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
  if (this->has_resource()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *resource_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RelatedArtifact::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.RelatedArtifact)
  GOOGLE_DCHECK_NE(&from, this);
  const RelatedArtifact* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RelatedArtifact>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.RelatedArtifact)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.RelatedArtifact)
    MergeFrom(*source);
  }
}

void RelatedArtifact::MergeFrom(const RelatedArtifact& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.RelatedArtifact)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_type()) {
    mutable_type()->::google::fhir::stu3::proto::RelatedArtifactTypeCode::MergeFrom(from.type());
  }
  if (from.has_display()) {
    mutable_display()->::google::fhir::stu3::proto::String::MergeFrom(from.display());
  }
  if (from.has_citation()) {
    mutable_citation()->::google::fhir::stu3::proto::String::MergeFrom(from.citation());
  }
  if (from.has_url()) {
    mutable_url()->::google::fhir::stu3::proto::Uri::MergeFrom(from.url());
  }
  if (from.has_document()) {
    mutable_document()->::google::fhir::stu3::proto::Attachment::MergeFrom(from.document());
  }
  if (from.has_resource()) {
    mutable_resource()->::google::fhir::stu3::proto::Reference::MergeFrom(from.resource());
  }
}

void RelatedArtifact::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.RelatedArtifact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RelatedArtifact::CopyFrom(const RelatedArtifact& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.RelatedArtifact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RelatedArtifact::IsInitialized() const {
  return true;
}

void RelatedArtifact::Swap(RelatedArtifact* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RelatedArtifact::InternalSwap(RelatedArtifact* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(type_, other->type_);
  swap(display_, other->display_);
  swap(citation_, other->citation_);
  swap(url_, other->url_);
  swap(document_, other->document_);
  swap(resource_, other->resource_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RelatedArtifact::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Resource::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Resource_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::Id*>(
      ::google::fhir::stu3::proto::Id::internal_default_instance());
  ::google::fhir::stu3::proto::_Resource_default_instance_._instance.get_mutable()->meta_ = const_cast< ::google::fhir::stu3::proto::Meta*>(
      ::google::fhir::stu3::proto::Meta::internal_default_instance());
  ::google::fhir::stu3::proto::_Resource_default_instance_._instance.get_mutable()->implicit_rules_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::proto::_Resource_default_instance_._instance.get_mutable()->language_ = const_cast< ::google::fhir::stu3::proto::LanguageCode*>(
      ::google::fhir::stu3::proto::LanguageCode::internal_default_instance());
}
void Resource::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void Resource::clear_meta() {
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
}
void Resource::clear_implicit_rules() {
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
}
void Resource::clear_language() {
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Resource::kIdFieldNumber;
const int Resource::kMetaFieldNumber;
const int Resource::kImplicitRulesFieldNumber;
const int Resource::kLanguageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Resource::Resource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_Resource.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Resource)
}
Resource::Resource(const Resource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::Id(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_meta()) {
    meta_ = new ::google::fhir::stu3::proto::Meta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  if (from.has_implicit_rules()) {
    implicit_rules_ = new ::google::fhir::stu3::proto::Uri(*from.implicit_rules_);
  } else {
    implicit_rules_ = NULL;
  }
  if (from.has_language()) {
    language_ = new ::google::fhir::stu3::proto::LanguageCode(*from.language_);
  } else {
    language_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Resource)
}

void Resource::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&language_) -
      reinterpret_cast<char*>(&id_)) + sizeof(language_));
}

Resource::~Resource() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Resource)
  SharedDtor();
}

void Resource::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete implicit_rules_;
  if (this != internal_default_instance()) delete language_;
}

void Resource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Resource::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Resource& Resource::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_Resource.base);
  return *internal_default_instance();
}


void Resource::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Resource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
  _internal_metadata_.Clear();
}

bool Resource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Resource)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Id id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Meta meta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri implicit_rules = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_implicit_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.LanguageCode language = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_language()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Resource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Resource)
  return false;
#undef DO_
}

void Resource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Resource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_meta(), output);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_implicit_rules(), output);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_language(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Resource)
}

::google::protobuf::uint8* Resource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Resource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_meta(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_implicit_rules(), deterministic, target);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_language(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Resource)
  return target;
}

size_t Resource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Resource)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *implicit_rules_);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *language_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Resource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Resource)
  GOOGLE_DCHECK_NE(&from, this);
  const Resource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Resource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Resource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Resource)
    MergeFrom(*source);
  }
}

void Resource::MergeFrom(const Resource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Resource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::Id::MergeFrom(from.id());
  }
  if (from.has_meta()) {
    mutable_meta()->::google::fhir::stu3::proto::Meta::MergeFrom(from.meta());
  }
  if (from.has_implicit_rules()) {
    mutable_implicit_rules()->::google::fhir::stu3::proto::Uri::MergeFrom(from.implicit_rules());
  }
  if (from.has_language()) {
    mutable_language()->::google::fhir::stu3::proto::LanguageCode::MergeFrom(from.language());
  }
}

void Resource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Resource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Resource::CopyFrom(const Resource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Resource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Resource::IsInitialized() const {
  return true;
}

void Resource::Swap(Resource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Resource::InternalSwap(Resource* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(meta_, other->meta_);
  swap(implicit_rules_, other->implicit_rules_);
  swap(language_, other->language_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Resource::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TriggerDefinition_EventTiming::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_TriggerDefinition_EventTiming_default_instance_.timing_ = const_cast< ::google::fhir::stu3::proto::Timing*>(
      ::google::fhir::stu3::proto::Timing::internal_default_instance());
  ::google::fhir::stu3::proto::_TriggerDefinition_EventTiming_default_instance_.reference_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::proto::_TriggerDefinition_EventTiming_default_instance_.date_ = const_cast< ::google::fhir::stu3::proto::Date*>(
      ::google::fhir::stu3::proto::Date::internal_default_instance());
  ::google::fhir::stu3::proto::_TriggerDefinition_EventTiming_default_instance_.date_time_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
}
void TriggerDefinition_EventTiming::set_allocated_timing(::google::fhir::stu3::proto::Timing* timing) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_event_timing();
  if (timing) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timing = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timing, submessage_arena);
    }
    set_has_timing();
    event_timing_.timing_ = timing;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.TriggerDefinition.EventTiming.timing)
}
void TriggerDefinition_EventTiming::clear_timing() {
  if (has_timing()) {
    delete event_timing_.timing_;
    clear_has_event_timing();
  }
}
void TriggerDefinition_EventTiming::set_allocated_reference(::google::fhir::stu3::proto::Reference* reference) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_event_timing();
  if (reference) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reference = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reference, submessage_arena);
    }
    set_has_reference();
    event_timing_.reference_ = reference;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.TriggerDefinition.EventTiming.reference)
}
void TriggerDefinition_EventTiming::clear_reference() {
  if (has_reference()) {
    delete event_timing_.reference_;
    clear_has_event_timing();
  }
}
void TriggerDefinition_EventTiming::set_allocated_date(::google::fhir::stu3::proto::Date* date) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_event_timing();
  if (date) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date, submessage_arena);
    }
    set_has_date();
    event_timing_.date_ = date;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.TriggerDefinition.EventTiming.date)
}
void TriggerDefinition_EventTiming::clear_date() {
  if (has_date()) {
    delete event_timing_.date_;
    clear_has_event_timing();
  }
}
void TriggerDefinition_EventTiming::set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_event_timing();
  if (date_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date_time, submessage_arena);
    }
    set_has_date_time();
    event_timing_.date_time_ = date_time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.TriggerDefinition.EventTiming.date_time)
}
void TriggerDefinition_EventTiming::clear_date_time() {
  if (has_date_time()) {
    delete event_timing_.date_time_;
    clear_has_event_timing();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TriggerDefinition_EventTiming::kTimingFieldNumber;
const int TriggerDefinition_EventTiming::kReferenceFieldNumber;
const int TriggerDefinition_EventTiming::kDateFieldNumber;
const int TriggerDefinition_EventTiming::kDateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TriggerDefinition_EventTiming::TriggerDefinition_EventTiming()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_TriggerDefinition_EventTiming.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.TriggerDefinition.EventTiming)
}
TriggerDefinition_EventTiming::TriggerDefinition_EventTiming(const TriggerDefinition_EventTiming& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_event_timing();
  switch (from.event_timing_case()) {
    case kTiming: {
      mutable_timing()->::google::fhir::stu3::proto::Timing::MergeFrom(from.timing());
      break;
    }
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case kDate: {
      mutable_date()->::google::fhir::stu3::proto::Date::MergeFrom(from.date());
      break;
    }
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case EVENT_TIMING_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.TriggerDefinition.EventTiming)
}

void TriggerDefinition_EventTiming::SharedCtor() {
  clear_has_event_timing();
}

TriggerDefinition_EventTiming::~TriggerDefinition_EventTiming() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.TriggerDefinition.EventTiming)
  SharedDtor();
}

void TriggerDefinition_EventTiming::SharedDtor() {
  if (has_event_timing()) {
    clear_event_timing();
  }
}

void TriggerDefinition_EventTiming::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TriggerDefinition_EventTiming::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TriggerDefinition_EventTiming& TriggerDefinition_EventTiming::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_TriggerDefinition_EventTiming.base);
  return *internal_default_instance();
}


void TriggerDefinition_EventTiming::clear_event_timing() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.proto.TriggerDefinition.EventTiming)
  switch (event_timing_case()) {
    case kTiming: {
      delete event_timing_.timing_;
      break;
    }
    case kReference: {
      delete event_timing_.reference_;
      break;
    }
    case kDate: {
      delete event_timing_.date_;
      break;
    }
    case kDateTime: {
      delete event_timing_.date_time_;
      break;
    }
    case EVENT_TIMING_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EVENT_TIMING_NOT_SET;
}


void TriggerDefinition_EventTiming::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.TriggerDefinition.EventTiming)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_event_timing();
  _internal_metadata_.Clear();
}

bool TriggerDefinition_EventTiming::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.TriggerDefinition.EventTiming)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Timing timing = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Schedule"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Date date = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DateTime date_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.TriggerDefinition.EventTiming)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.TriggerDefinition.EventTiming)
  return false;
#undef DO_
}

void TriggerDefinition_EventTiming::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.TriggerDefinition.EventTiming)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Timing timing = 1;
  if (has_timing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_timing(), output);
  }

  // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Schedule"];
  if (has_reference()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_reference(), output);
  }

  // .google.fhir.stu3.proto.Date date = 3;
  if (has_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_date(), output);
  }

  // .google.fhir.stu3.proto.DateTime date_time = 4;
  if (has_date_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_date_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.TriggerDefinition.EventTiming)
}

::google::protobuf::uint8* TriggerDefinition_EventTiming::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.TriggerDefinition.EventTiming)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Timing timing = 1;
  if (has_timing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_timing(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Schedule"];
  if (has_reference()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_reference(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Date date = 3;
  if (has_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_date(), deterministic, target);
  }

  // .google.fhir.stu3.proto.DateTime date_time = 4;
  if (has_date_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_date_time(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.TriggerDefinition.EventTiming)
  return target;
}

size_t TriggerDefinition_EventTiming::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.TriggerDefinition.EventTiming)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (event_timing_case()) {
    // .google.fhir.stu3.proto.Timing timing = 1;
    case kTiming: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *event_timing_.timing_);
      break;
    }
    // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Schedule"];
    case kReference: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *event_timing_.reference_);
      break;
    }
    // .google.fhir.stu3.proto.Date date = 3;
    case kDate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *event_timing_.date_);
      break;
    }
    // .google.fhir.stu3.proto.DateTime date_time = 4;
    case kDateTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *event_timing_.date_time_);
      break;
    }
    case EVENT_TIMING_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TriggerDefinition_EventTiming::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.TriggerDefinition.EventTiming)
  GOOGLE_DCHECK_NE(&from, this);
  const TriggerDefinition_EventTiming* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TriggerDefinition_EventTiming>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.TriggerDefinition.EventTiming)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.TriggerDefinition.EventTiming)
    MergeFrom(*source);
  }
}

void TriggerDefinition_EventTiming::MergeFrom(const TriggerDefinition_EventTiming& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.TriggerDefinition.EventTiming)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.event_timing_case()) {
    case kTiming: {
      mutable_timing()->::google::fhir::stu3::proto::Timing::MergeFrom(from.timing());
      break;
    }
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case kDate: {
      mutable_date()->::google::fhir::stu3::proto::Date::MergeFrom(from.date());
      break;
    }
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case EVENT_TIMING_NOT_SET: {
      break;
    }
  }
}

void TriggerDefinition_EventTiming::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.TriggerDefinition.EventTiming)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TriggerDefinition_EventTiming::CopyFrom(const TriggerDefinition_EventTiming& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.TriggerDefinition.EventTiming)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TriggerDefinition_EventTiming::IsInitialized() const {
  return true;
}

void TriggerDefinition_EventTiming::Swap(TriggerDefinition_EventTiming* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TriggerDefinition_EventTiming::InternalSwap(TriggerDefinition_EventTiming* other) {
  using std::swap;
  swap(event_timing_, other->event_timing_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TriggerDefinition_EventTiming::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TriggerDefinition::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_TriggerDefinition_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_TriggerDefinition_default_instance_._instance.get_mutable()->type_ = const_cast< ::google::fhir::stu3::proto::TriggerTypeCode*>(
      ::google::fhir::stu3::proto::TriggerTypeCode::internal_default_instance());
  ::google::fhir::stu3::proto::_TriggerDefinition_default_instance_._instance.get_mutable()->event_name_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_TriggerDefinition_default_instance_._instance.get_mutable()->event_timing_ = const_cast< ::google::fhir::stu3::proto::TriggerDefinition_EventTiming*>(
      ::google::fhir::stu3::proto::TriggerDefinition_EventTiming::internal_default_instance());
  ::google::fhir::stu3::proto::_TriggerDefinition_default_instance_._instance.get_mutable()->event_data_ = const_cast< ::google::fhir::stu3::proto::DataRequirement*>(
      ::google::fhir::stu3::proto::DataRequirement::internal_default_instance());
}
void TriggerDefinition::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void TriggerDefinition::clear_extension() {
  extension_.Clear();
}
void TriggerDefinition::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
}
void TriggerDefinition::clear_event_name() {
  if (GetArenaNoVirtual() == NULL && event_name_ != NULL) {
    delete event_name_;
  }
  event_name_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TriggerDefinition::kIdFieldNumber;
const int TriggerDefinition::kExtensionFieldNumber;
const int TriggerDefinition::kTypeFieldNumber;
const int TriggerDefinition::kEventNameFieldNumber;
const int TriggerDefinition::kEventTimingFieldNumber;
const int TriggerDefinition::kEventDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TriggerDefinition::TriggerDefinition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_TriggerDefinition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.TriggerDefinition)
}
TriggerDefinition::TriggerDefinition(const TriggerDefinition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_type()) {
    type_ = new ::google::fhir::stu3::proto::TriggerTypeCode(*from.type_);
  } else {
    type_ = NULL;
  }
  if (from.has_event_name()) {
    event_name_ = new ::google::fhir::stu3::proto::String(*from.event_name_);
  } else {
    event_name_ = NULL;
  }
  if (from.has_event_timing()) {
    event_timing_ = new ::google::fhir::stu3::proto::TriggerDefinition_EventTiming(*from.event_timing_);
  } else {
    event_timing_ = NULL;
  }
  if (from.has_event_data()) {
    event_data_ = new ::google::fhir::stu3::proto::DataRequirement(*from.event_data_);
  } else {
    event_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.TriggerDefinition)
}

void TriggerDefinition::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&event_data_) -
      reinterpret_cast<char*>(&id_)) + sizeof(event_data_));
}

TriggerDefinition::~TriggerDefinition() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.TriggerDefinition)
  SharedDtor();
}

void TriggerDefinition::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete type_;
  if (this != internal_default_instance()) delete event_name_;
  if (this != internal_default_instance()) delete event_timing_;
  if (this != internal_default_instance()) delete event_data_;
}

void TriggerDefinition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TriggerDefinition::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TriggerDefinition& TriggerDefinition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_TriggerDefinition.base);
  return *internal_default_instance();
}


void TriggerDefinition::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.TriggerDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  if (GetArenaNoVirtual() == NULL && event_name_ != NULL) {
    delete event_name_;
  }
  event_name_ = NULL;
  if (GetArenaNoVirtual() == NULL && event_timing_ != NULL) {
    delete event_timing_;
  }
  event_timing_ = NULL;
  if (GetArenaNoVirtual() == NULL && event_data_ != NULL) {
    delete event_data_;
  }
  event_data_ = NULL;
  _internal_metadata_.Clear();
}

bool TriggerDefinition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.TriggerDefinition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.TriggerTypeCode type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String event_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.TriggerDefinition.EventTiming event_timing = 5 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event_timing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DataRequirement event_data = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.TriggerDefinition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.TriggerDefinition)
  return false;
#undef DO_
}

void TriggerDefinition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.TriggerDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.TriggerTypeCode type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_type(), output);
  }

  // .google.fhir.stu3.proto.String event_name = 4;
  if (this->has_event_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_event_name(), output);
  }

  // .google.fhir.stu3.proto.TriggerDefinition.EventTiming event_timing = 5 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_event_timing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_event_timing(), output);
  }

  // .google.fhir.stu3.proto.DataRequirement event_data = 6;
  if (this->has_event_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_event_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.TriggerDefinition)
}

::google::protobuf::uint8* TriggerDefinition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.TriggerDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.TriggerTypeCode type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_type(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String event_name = 4;
  if (this->has_event_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_event_name(), deterministic, target);
  }

  // .google.fhir.stu3.proto.TriggerDefinition.EventTiming event_timing = 5 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_event_timing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_event_timing(), deterministic, target);
  }

  // .google.fhir.stu3.proto.DataRequirement event_data = 6;
  if (this->has_event_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_event_data(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.TriggerDefinition)
  return target;
}

size_t TriggerDefinition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.TriggerDefinition)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.TriggerTypeCode type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  // .google.fhir.stu3.proto.String event_name = 4;
  if (this->has_event_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *event_name_);
  }

  // .google.fhir.stu3.proto.TriggerDefinition.EventTiming event_timing = 5 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_event_timing()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *event_timing_);
  }

  // .google.fhir.stu3.proto.DataRequirement event_data = 6;
  if (this->has_event_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *event_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TriggerDefinition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.TriggerDefinition)
  GOOGLE_DCHECK_NE(&from, this);
  const TriggerDefinition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TriggerDefinition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.TriggerDefinition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.TriggerDefinition)
    MergeFrom(*source);
  }
}

void TriggerDefinition::MergeFrom(const TriggerDefinition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.TriggerDefinition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_type()) {
    mutable_type()->::google::fhir::stu3::proto::TriggerTypeCode::MergeFrom(from.type());
  }
  if (from.has_event_name()) {
    mutable_event_name()->::google::fhir::stu3::proto::String::MergeFrom(from.event_name());
  }
  if (from.has_event_timing()) {
    mutable_event_timing()->::google::fhir::stu3::proto::TriggerDefinition_EventTiming::MergeFrom(from.event_timing());
  }
  if (from.has_event_data()) {
    mutable_event_data()->::google::fhir::stu3::proto::DataRequirement::MergeFrom(from.event_data());
  }
}

void TriggerDefinition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.TriggerDefinition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TriggerDefinition::CopyFrom(const TriggerDefinition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.TriggerDefinition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TriggerDefinition::IsInitialized() const {
  return true;
}

void TriggerDefinition::Swap(TriggerDefinition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TriggerDefinition::InternalSwap(TriggerDefinition* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(type_, other->type_);
  swap(event_name_, other->event_name_);
  swap(event_timing_, other->event_timing_);
  swap(event_data_, other->event_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TriggerDefinition::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsageContext_Value::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_UsageContext_Value_default_instance_.codeable_concept_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::proto::_UsageContext_Value_default_instance_.quantity_ = const_cast< ::google::fhir::stu3::proto::Quantity*>(
      ::google::fhir::stu3::proto::Quantity::internal_default_instance());
  ::google::fhir::stu3::proto::_UsageContext_Value_default_instance_.range_ = const_cast< ::google::fhir::stu3::proto::Range*>(
      ::google::fhir::stu3::proto::Range::internal_default_instance());
}
void UsageContext_Value::set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (codeable_concept) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      codeable_concept = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, codeable_concept, submessage_arena);
    }
    set_has_codeable_concept();
    value_.codeable_concept_ = codeable_concept;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.UsageContext.Value.codeable_concept)
}
void UsageContext_Value::clear_codeable_concept() {
  if (has_codeable_concept()) {
    delete value_.codeable_concept_;
    clear_has_value();
  }
}
void UsageContext_Value::set_allocated_quantity(::google::fhir::stu3::proto::Quantity* quantity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (quantity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      quantity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, quantity, submessage_arena);
    }
    set_has_quantity();
    value_.quantity_ = quantity;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.UsageContext.Value.quantity)
}
void UsageContext_Value::clear_quantity() {
  if (has_quantity()) {
    delete value_.quantity_;
    clear_has_value();
  }
}
void UsageContext_Value::set_allocated_range(::google::fhir::stu3::proto::Range* range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (range) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, range, submessage_arena);
    }
    set_has_range();
    value_.range_ = range;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.UsageContext.Value.range)
}
void UsageContext_Value::clear_range() {
  if (has_range()) {
    delete value_.range_;
    clear_has_value();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsageContext_Value::kCodeableConceptFieldNumber;
const int UsageContext_Value::kQuantityFieldNumber;
const int UsageContext_Value::kRangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsageContext_Value::UsageContext_Value()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_UsageContext_Value.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.UsageContext.Value)
}
UsageContext_Value::UsageContext_Value(const UsageContext_Value& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case kQuantity: {
      mutable_quantity()->::google::fhir::stu3::proto::Quantity::MergeFrom(from.quantity());
      break;
    }
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.UsageContext.Value)
}

void UsageContext_Value::SharedCtor() {
  clear_has_value();
}

UsageContext_Value::~UsageContext_Value() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.UsageContext.Value)
  SharedDtor();
}

void UsageContext_Value::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
}

void UsageContext_Value::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsageContext_Value::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsageContext_Value& UsageContext_Value::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_UsageContext_Value.base);
  return *internal_default_instance();
}


void UsageContext_Value::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.proto.UsageContext.Value)
  switch (value_case()) {
    case kCodeableConcept: {
      delete value_.codeable_concept_;
      break;
    }
    case kQuantity: {
      delete value_.quantity_;
      break;
    }
    case kRange: {
      delete value_.range_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void UsageContext_Value::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.UsageContext.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear();
}

bool UsageContext_Value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.UsageContext.Value)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_codeable_concept()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Quantity quantity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_quantity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Range range = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.UsageContext.Value)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.UsageContext.Value)
  return false;
#undef DO_
}

void UsageContext_Value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.UsageContext.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
  if (has_codeable_concept()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_codeable_concept(), output);
  }

  // .google.fhir.stu3.proto.Quantity quantity = 2;
  if (has_quantity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_quantity(), output);
  }

  // .google.fhir.stu3.proto.Range range = 3;
  if (has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_range(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.UsageContext.Value)
}

::google::protobuf::uint8* UsageContext_Value::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.UsageContext.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
  if (has_codeable_concept()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_codeable_concept(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Quantity quantity = 2;
  if (has_quantity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_quantity(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Range range = 3;
  if (has_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_range(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.UsageContext.Value)
  return target;
}

size_t UsageContext_Value::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.UsageContext.Value)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (value_case()) {
    // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
    case kCodeableConcept: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.codeable_concept_);
      break;
    }
    // .google.fhir.stu3.proto.Quantity quantity = 2;
    case kQuantity: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.quantity_);
      break;
    }
    // .google.fhir.stu3.proto.Range range = 3;
    case kRange: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.range_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsageContext_Value::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.UsageContext.Value)
  GOOGLE_DCHECK_NE(&from, this);
  const UsageContext_Value* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsageContext_Value>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.UsageContext.Value)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.UsageContext.Value)
    MergeFrom(*source);
  }
}

void UsageContext_Value::MergeFrom(const UsageContext_Value& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.UsageContext.Value)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case kQuantity: {
      mutable_quantity()->::google::fhir::stu3::proto::Quantity::MergeFrom(from.quantity());
      break;
    }
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void UsageContext_Value::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.UsageContext.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsageContext_Value::CopyFrom(const UsageContext_Value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.UsageContext.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsageContext_Value::IsInitialized() const {
  return true;
}

void UsageContext_Value::Swap(UsageContext_Value* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsageContext_Value::InternalSwap(UsageContext_Value* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsageContext_Value::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsageContext::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_UsageContext_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_UsageContext_default_instance_._instance.get_mutable()->code_ = const_cast< ::google::fhir::stu3::proto::Coding*>(
      ::google::fhir::stu3::proto::Coding::internal_default_instance());
  ::google::fhir::stu3::proto::_UsageContext_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::fhir::stu3::proto::UsageContext_Value*>(
      ::google::fhir::stu3::proto::UsageContext_Value::internal_default_instance());
}
void UsageContext::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsageContext::clear_extension() {
  extension_.Clear();
}
void UsageContext::clear_code() {
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsageContext::kIdFieldNumber;
const int UsageContext::kExtensionFieldNumber;
const int UsageContext::kCodeFieldNumber;
const int UsageContext::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsageContext::UsageContext()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_UsageContext.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.UsageContext)
}
UsageContext::UsageContext(const UsageContext& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_code()) {
    code_ = new ::google::fhir::stu3::proto::Coding(*from.code_);
  } else {
    code_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::google::fhir::stu3::proto::UsageContext_Value(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.UsageContext)
}

void UsageContext::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&id_)) + sizeof(value_));
}

UsageContext::~UsageContext() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.UsageContext)
  SharedDtor();
}

void UsageContext::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete code_;
  if (this != internal_default_instance()) delete value_;
}

void UsageContext::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsageContext::descriptor() {
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsageContext& UsageContext::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_UsageContext.base);
  return *internal_default_instance();
}


void UsageContext::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.UsageContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  _internal_metadata_.Clear();
}

bool UsageContext::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.UsageContext)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Coding code = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.UsageContext.Value value = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.UsageContext)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.UsageContext)
  return false;
#undef DO_
}

void UsageContext::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.UsageContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Coding code = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_code(), output);
  }

  // .google.fhir.stu3.proto.UsageContext.Value value = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.UsageContext)
}

::google::protobuf::uint8* UsageContext::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.UsageContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Coding code = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_code(), deterministic, target);
  }

  // .google.fhir.stu3.proto.UsageContext.Value value = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_value(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.UsageContext)
  return target;
}

size_t UsageContext::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.UsageContext)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Coding code = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *code_);
  }

  // .google.fhir.stu3.proto.UsageContext.Value value = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsageContext::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.UsageContext)
  GOOGLE_DCHECK_NE(&from, this);
  const UsageContext* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsageContext>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.UsageContext)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.UsageContext)
    MergeFrom(*source);
  }
}

void UsageContext::MergeFrom(const UsageContext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.UsageContext)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_code()) {
    mutable_code()->::google::fhir::stu3::proto::Coding::MergeFrom(from.code());
  }
  if (from.has_value()) {
    mutable_value()->::google::fhir::stu3::proto::UsageContext_Value::MergeFrom(from.value());
  }
}

void UsageContext::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.UsageContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsageContext::CopyFrom(const UsageContext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.UsageContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsageContext::IsInitialized() const {
  return true;
}

void UsageContext::Swap(UsageContext* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsageContext::InternalSwap(UsageContext* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(code_, other->code_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsageContext::GetMetadata() const {
  protobuf_proto_2fstu3_2fmetadatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace stu3
}  // namespace fhir
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::BackboneElement* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::BackboneElement >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::BackboneElement >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::ContactDetail* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::ContactDetail >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::ContactDetail >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Contributor* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Contributor >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Contributor >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSet* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSet >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::DataRequirement_CodeFilter* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::DataRequirement_CodeFilter >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::DataRequirement_CodeFilter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::DataRequirement_DateFilter_Value* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::DataRequirement_DateFilter_Value >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::DataRequirement_DateFilter_Value >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::DataRequirement_DateFilter* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::DataRequirement_DateFilter >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::DataRequirement_DateFilter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::DataRequirement* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::DataRequirement >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::DataRequirement >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Element* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Element >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Element >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::ElementDefinition_Slicing_Discriminator* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::ElementDefinition_Slicing_Discriminator >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::ElementDefinition_Slicing_Discriminator >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::ElementDefinition_Slicing* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::ElementDefinition_Slicing >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::ElementDefinition_Slicing >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::ElementDefinition_Base* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::ElementDefinition_Base >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::ElementDefinition_Base >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::ElementDefinition_TypeRef* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::ElementDefinition_TypeRef >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::ElementDefinition_TypeRef >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::ElementDefinition_DefaultValue* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::ElementDefinition_DefaultValue >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::ElementDefinition_DefaultValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::ElementDefinition_Fixed* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::ElementDefinition_Fixed >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::ElementDefinition_Fixed >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::ElementDefinition_Pattern* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::ElementDefinition_Pattern >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::ElementDefinition_Pattern >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::ElementDefinition_Example_Value* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::ElementDefinition_Example_Value >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::ElementDefinition_Example_Value >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::ElementDefinition_Example* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::ElementDefinition_Example >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::ElementDefinition_Example >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::ElementDefinition_MinValue* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::ElementDefinition_MinValue >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::ElementDefinition_MinValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::ElementDefinition_MaxValue* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::ElementDefinition_MaxValue >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::ElementDefinition_MaxValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::ElementDefinition_Constraint* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::ElementDefinition_Constraint >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::ElementDefinition_Constraint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSet* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSet >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::ElementDefinition_Mapping* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::ElementDefinition_Mapping >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::ElementDefinition_Mapping >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::ElementDefinition* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::ElementDefinition >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::ElementDefinition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Narrative* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Narrative >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Narrative >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::ParameterDefinition* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::ParameterDefinition >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::ParameterDefinition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::RelatedArtifact* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::RelatedArtifact >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::RelatedArtifact >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Resource* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Resource >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Resource >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::TriggerDefinition_EventTiming* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::TriggerDefinition_EventTiming >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::TriggerDefinition_EventTiming >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::TriggerDefinition* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::TriggerDefinition >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::TriggerDefinition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::UsageContext_Value* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::UsageContext_Value >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::UsageContext_Value >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::UsageContext* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::UsageContext >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::UsageContext >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
