// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/stu3/codes.proto

#ifndef PROTOBUF_INCLUDED_proto_2fstu3_2fcodes_2eproto
#define PROTOBUF_INCLUDED_proto_2fstu3_2fcodes_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "proto/stu3/annotations.pb.h"
#include "proto/stu3/datatypes.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto 

namespace protobuf_proto_2fstu3_2fcodes_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[299];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_proto_2fstu3_2fcodes_2eproto
namespace google {
namespace fhir {
namespace stu3 {
namespace proto {
class AbstractTypeCode;
class AbstractTypeCodeDefaultTypeInternal;
extern AbstractTypeCodeDefaultTypeInternal _AbstractTypeCode_default_instance_;
class AccountStatusCode;
class AccountStatusCodeDefaultTypeInternal;
extern AccountStatusCodeDefaultTypeInternal _AccountStatusCode_default_instance_;
class ActionCardinalityBehaviorCode;
class ActionCardinalityBehaviorCodeDefaultTypeInternal;
extern ActionCardinalityBehaviorCodeDefaultTypeInternal _ActionCardinalityBehaviorCode_default_instance_;
class ActionConditionKindCode;
class ActionConditionKindCodeDefaultTypeInternal;
extern ActionConditionKindCodeDefaultTypeInternal _ActionConditionKindCode_default_instance_;
class ActionGroupingBehaviorCode;
class ActionGroupingBehaviorCodeDefaultTypeInternal;
extern ActionGroupingBehaviorCodeDefaultTypeInternal _ActionGroupingBehaviorCode_default_instance_;
class ActionListCode;
class ActionListCodeDefaultTypeInternal;
extern ActionListCodeDefaultTypeInternal _ActionListCode_default_instance_;
class ActionParticipantTypeCode;
class ActionParticipantTypeCodeDefaultTypeInternal;
extern ActionParticipantTypeCodeDefaultTypeInternal _ActionParticipantTypeCode_default_instance_;
class ActionPrecheckBehaviorCode;
class ActionPrecheckBehaviorCodeDefaultTypeInternal;
extern ActionPrecheckBehaviorCodeDefaultTypeInternal _ActionPrecheckBehaviorCode_default_instance_;
class ActionRelationshipTypeCode;
class ActionRelationshipTypeCodeDefaultTypeInternal;
extern ActionRelationshipTypeCodeDefaultTypeInternal _ActionRelationshipTypeCode_default_instance_;
class ActionRequiredBehaviorCode;
class ActionRequiredBehaviorCodeDefaultTypeInternal;
extern ActionRequiredBehaviorCodeDefaultTypeInternal _ActionRequiredBehaviorCode_default_instance_;
class ActionSelectionBehaviorCode;
class ActionSelectionBehaviorCodeDefaultTypeInternal;
extern ActionSelectionBehaviorCodeDefaultTypeInternal _ActionSelectionBehaviorCode_default_instance_;
class ActionTypeCode;
class ActionTypeCodeDefaultTypeInternal;
extern ActionTypeCodeDefaultTypeInternal _ActionTypeCode_default_instance_;
class ActivityDefinitionCategoryCode;
class ActivityDefinitionCategoryCodeDefaultTypeInternal;
extern ActivityDefinitionCategoryCodeDefaultTypeInternal _ActivityDefinitionCategoryCode_default_instance_;
class AdministrativeGenderCode;
class AdministrativeGenderCodeDefaultTypeInternal;
extern AdministrativeGenderCodeDefaultTypeInternal _AdministrativeGenderCode_default_instance_;
class AdmitSourceCode;
class AdmitSourceCodeDefaultTypeInternal;
extern AdmitSourceCodeDefaultTypeInternal _AdmitSourceCode_default_instance_;
class AdverseEventCategoryCode;
class AdverseEventCategoryCodeDefaultTypeInternal;
extern AdverseEventCategoryCodeDefaultTypeInternal _AdverseEventCategoryCode_default_instance_;
class AdverseEventCausalityAssessmentCode;
class AdverseEventCausalityAssessmentCodeDefaultTypeInternal;
extern AdverseEventCausalityAssessmentCodeDefaultTypeInternal _AdverseEventCausalityAssessmentCode_default_instance_;
class AdverseEventCausalityCode;
class AdverseEventCausalityCodeDefaultTypeInternal;
extern AdverseEventCausalityCodeDefaultTypeInternal _AdverseEventCausalityCode_default_instance_;
class AdverseEventCausalityMethodCode;
class AdverseEventCausalityMethodCodeDefaultTypeInternal;
extern AdverseEventCausalityMethodCodeDefaultTypeInternal _AdverseEventCausalityMethodCode_default_instance_;
class AdverseEventCausalityResultCode;
class AdverseEventCausalityResultCodeDefaultTypeInternal;
extern AdverseEventCausalityResultCodeDefaultTypeInternal _AdverseEventCausalityResultCode_default_instance_;
class AdverseEventOutcomeCode;
class AdverseEventOutcomeCodeDefaultTypeInternal;
extern AdverseEventOutcomeCodeDefaultTypeInternal _AdverseEventOutcomeCode_default_instance_;
class AdverseEventSeriousnessCode;
class AdverseEventSeriousnessCodeDefaultTypeInternal;
extern AdverseEventSeriousnessCodeDefaultTypeInternal _AdverseEventSeriousnessCode_default_instance_;
class AggregationModeCode;
class AggregationModeCodeDefaultTypeInternal;
extern AggregationModeCodeDefaultTypeInternal _AggregationModeCode_default_instance_;
class AllergyIntoleranceCategoryCode;
class AllergyIntoleranceCategoryCodeDefaultTypeInternal;
extern AllergyIntoleranceCategoryCodeDefaultTypeInternal _AllergyIntoleranceCategoryCode_default_instance_;
class AllergyIntoleranceCertaintyCode;
class AllergyIntoleranceCertaintyCodeDefaultTypeInternal;
extern AllergyIntoleranceCertaintyCodeDefaultTypeInternal _AllergyIntoleranceCertaintyCode_default_instance_;
class AllergyIntoleranceClinicalStatusCode;
class AllergyIntoleranceClinicalStatusCodeDefaultTypeInternal;
extern AllergyIntoleranceClinicalStatusCodeDefaultTypeInternal _AllergyIntoleranceClinicalStatusCode_default_instance_;
class AllergyIntoleranceCriticalityCode;
class AllergyIntoleranceCriticalityCodeDefaultTypeInternal;
extern AllergyIntoleranceCriticalityCodeDefaultTypeInternal _AllergyIntoleranceCriticalityCode_default_instance_;
class AllergyIntoleranceSeverityCode;
class AllergyIntoleranceSeverityCodeDefaultTypeInternal;
extern AllergyIntoleranceSeverityCodeDefaultTypeInternal _AllergyIntoleranceSeverityCode_default_instance_;
class AllergyIntoleranceSubstanceExposureRiskCode;
class AllergyIntoleranceSubstanceExposureRiskCodeDefaultTypeInternal;
extern AllergyIntoleranceSubstanceExposureRiskCodeDefaultTypeInternal _AllergyIntoleranceSubstanceExposureRiskCode_default_instance_;
class AllergyIntoleranceTypeCode;
class AllergyIntoleranceTypeCodeDefaultTypeInternal;
extern AllergyIntoleranceTypeCodeDefaultTypeInternal _AllergyIntoleranceTypeCode_default_instance_;
class AllergyIntoleranceVerificationStatusCode;
class AllergyIntoleranceVerificationStatusCodeDefaultTypeInternal;
extern AllergyIntoleranceVerificationStatusCodeDefaultTypeInternal _AllergyIntoleranceVerificationStatusCode_default_instance_;
class AppointmentStatusCode;
class AppointmentStatusCodeDefaultTypeInternal;
extern AppointmentStatusCodeDefaultTypeInternal _AppointmentStatusCode_default_instance_;
class AssertionDirectionTypeCode;
class AssertionDirectionTypeCodeDefaultTypeInternal;
extern AssertionDirectionTypeCodeDefaultTypeInternal _AssertionDirectionTypeCode_default_instance_;
class AssertionOperatorTypeCode;
class AssertionOperatorTypeCodeDefaultTypeInternal;
extern AssertionOperatorTypeCodeDefaultTypeInternal _AssertionOperatorTypeCode_default_instance_;
class AssertionResponseTypesCode;
class AssertionResponseTypesCodeDefaultTypeInternal;
extern AssertionResponseTypesCodeDefaultTypeInternal _AssertionResponseTypesCode_default_instance_;
class AuditEventActionCode;
class AuditEventActionCodeDefaultTypeInternal;
extern AuditEventActionCodeDefaultTypeInternal _AuditEventActionCode_default_instance_;
class AuditEventAgentNetworkTypeCode;
class AuditEventAgentNetworkTypeCodeDefaultTypeInternal;
extern AuditEventAgentNetworkTypeCodeDefaultTypeInternal _AuditEventAgentNetworkTypeCode_default_instance_;
class AuditEventOutcomeCode;
class AuditEventOutcomeCodeDefaultTypeInternal;
extern AuditEventOutcomeCodeDefaultTypeInternal _AuditEventOutcomeCode_default_instance_;
class BasicResourceTypesCode;
class BasicResourceTypesCodeDefaultTypeInternal;
extern BasicResourceTypesCodeDefaultTypeInternal _BasicResourceTypesCode_default_instance_;
class BindingStrengthCode;
class BindingStrengthCodeDefaultTypeInternal;
extern BindingStrengthCodeDefaultTypeInternal _BindingStrengthCode_default_instance_;
class BundleTypeCode;
class BundleTypeCodeDefaultTypeInternal;
extern BundleTypeCodeDefaultTypeInternal _BundleTypeCode_default_instance_;
class CapabilityStatementKindCode;
class CapabilityStatementKindCodeDefaultTypeInternal;
extern CapabilityStatementKindCodeDefaultTypeInternal _CapabilityStatementKindCode_default_instance_;
class CarePlanActivityCategoryCode;
class CarePlanActivityCategoryCodeDefaultTypeInternal;
extern CarePlanActivityCategoryCodeDefaultTypeInternal _CarePlanActivityCategoryCode_default_instance_;
class CarePlanActivityStatusCode;
class CarePlanActivityStatusCodeDefaultTypeInternal;
extern CarePlanActivityStatusCodeDefaultTypeInternal _CarePlanActivityStatusCode_default_instance_;
class CarePlanIntentCode;
class CarePlanIntentCodeDefaultTypeInternal;
extern CarePlanIntentCodeDefaultTypeInternal _CarePlanIntentCode_default_instance_;
class CarePlanStatusCode;
class CarePlanStatusCodeDefaultTypeInternal;
extern CarePlanStatusCodeDefaultTypeInternal _CarePlanStatusCode_default_instance_;
class CareTeamCategoryCode;
class CareTeamCategoryCodeDefaultTypeInternal;
extern CareTeamCategoryCodeDefaultTypeInternal _CareTeamCategoryCode_default_instance_;
class CareTeamStatusCode;
class CareTeamStatusCodeDefaultTypeInternal;
extern CareTeamStatusCodeDefaultTypeInternal _CareTeamStatusCode_default_instance_;
class ChargeItemStatusCode;
class ChargeItemStatusCodeDefaultTypeInternal;
extern ChargeItemStatusCodeDefaultTypeInternal _ChargeItemStatusCode_default_instance_;
class ChoiceListOrientationCode;
class ChoiceListOrientationCodeDefaultTypeInternal;
extern ChoiceListOrientationCodeDefaultTypeInternal _ChoiceListOrientationCode_default_instance_;
class ClaimPayeeResourceTypeCode;
class ClaimPayeeResourceTypeCodeDefaultTypeInternal;
extern ClaimPayeeResourceTypeCodeDefaultTypeInternal _ClaimPayeeResourceTypeCode_default_instance_;
class ClassificationOrContextCode;
class ClassificationOrContextCodeDefaultTypeInternal;
extern ClassificationOrContextCodeDefaultTypeInternal _ClassificationOrContextCode_default_instance_;
class ClinicalImpressionStatusCode;
class ClinicalImpressionStatusCodeDefaultTypeInternal;
extern ClinicalImpressionStatusCodeDefaultTypeInternal _ClinicalImpressionStatusCode_default_instance_;
class CodeSystemContentModeCode;
class CodeSystemContentModeCodeDefaultTypeInternal;
extern CodeSystemContentModeCodeDefaultTypeInternal _CodeSystemContentModeCode_default_instance_;
class CodeSystemHierarchyMeaningCode;
class CodeSystemHierarchyMeaningCodeDefaultTypeInternal;
extern CodeSystemHierarchyMeaningCodeDefaultTypeInternal _CodeSystemHierarchyMeaningCode_default_instance_;
class CommonTagsCode;
class CommonTagsCodeDefaultTypeInternal;
extern CommonTagsCodeDefaultTypeInternal _CommonTagsCode_default_instance_;
class CommunicationCategoryCode;
class CommunicationCategoryCodeDefaultTypeInternal;
extern CommunicationCategoryCodeDefaultTypeInternal _CommunicationCategoryCode_default_instance_;
class CommunicationNotDoneReasonCode;
class CommunicationNotDoneReasonCodeDefaultTypeInternal;
extern CommunicationNotDoneReasonCodeDefaultTypeInternal _CommunicationNotDoneReasonCode_default_instance_;
class CompartmentTypeCode;
class CompartmentTypeCodeDefaultTypeInternal;
extern CompartmentTypeCodeDefaultTypeInternal _CompartmentTypeCode_default_instance_;
class CompositeMeasureScoringCode;
class CompositeMeasureScoringCodeDefaultTypeInternal;
extern CompositeMeasureScoringCodeDefaultTypeInternal _CompositeMeasureScoringCode_default_instance_;
class CompositionAttestationModeCode;
class CompositionAttestationModeCodeDefaultTypeInternal;
extern CompositionAttestationModeCodeDefaultTypeInternal _CompositionAttestationModeCode_default_instance_;
class CompositionStatusCode;
class CompositionStatusCodeDefaultTypeInternal;
extern CompositionStatusCodeDefaultTypeInternal _CompositionStatusCode_default_instance_;
class ConceptMapEquivalenceCode;
class ConceptMapEquivalenceCodeDefaultTypeInternal;
extern ConceptMapEquivalenceCodeDefaultTypeInternal _ConceptMapEquivalenceCode_default_instance_;
class ConceptMapGroupUnmappedModeCode;
class ConceptMapGroupUnmappedModeCodeDefaultTypeInternal;
extern ConceptMapGroupUnmappedModeCodeDefaultTypeInternal _ConceptMapGroupUnmappedModeCode_default_instance_;
class ConditionCategoryCodesCode;
class ConditionCategoryCodesCodeDefaultTypeInternal;
extern ConditionCategoryCodesCodeDefaultTypeInternal _ConditionCategoryCodesCode_default_instance_;
class ConditionClinicalStatusCodesCode;
class ConditionClinicalStatusCodesCodeDefaultTypeInternal;
extern ConditionClinicalStatusCodesCodeDefaultTypeInternal _ConditionClinicalStatusCodesCode_default_instance_;
class ConditionStateCode;
class ConditionStateCodeDefaultTypeInternal;
extern ConditionStateCodeDefaultTypeInternal _ConditionStateCode_default_instance_;
class ConditionVerificationStatusCode;
class ConditionVerificationStatusCodeDefaultTypeInternal;
extern ConditionVerificationStatusCodeDefaultTypeInternal _ConditionVerificationStatusCode_default_instance_;
class ConditionalDeleteStatusCode;
class ConditionalDeleteStatusCodeDefaultTypeInternal;
extern ConditionalDeleteStatusCodeDefaultTypeInternal _ConditionalDeleteStatusCode_default_instance_;
class ConditionalReadStatusCode;
class ConditionalReadStatusCodeDefaultTypeInternal;
extern ConditionalReadStatusCodeDefaultTypeInternal _ConditionalReadStatusCode_default_instance_;
class ConfidentialityClassificationCode;
class ConfidentialityClassificationCodeDefaultTypeInternal;
extern ConfidentialityClassificationCodeDefaultTypeInternal _ConfidentialityClassificationCode_default_instance_;
class ConformanceExpectationCode;
class ConformanceExpectationCodeDefaultTypeInternal;
extern ConformanceExpectationCodeDefaultTypeInternal _ConformanceExpectationCode_default_instance_;
class ConsentDataMeaningCode;
class ConsentDataMeaningCodeDefaultTypeInternal;
extern ConsentDataMeaningCodeDefaultTypeInternal _ConsentDataMeaningCode_default_instance_;
class ConsentExceptTypeCode;
class ConsentExceptTypeCodeDefaultTypeInternal;
extern ConsentExceptTypeCodeDefaultTypeInternal _ConsentExceptTypeCode_default_instance_;
class ConsentStateCode;
class ConsentStateCodeDefaultTypeInternal;
extern ConsentStateCodeDefaultTypeInternal _ConsentStateCode_default_instance_;
class ConstraintSeverityCode;
class ConstraintSeverityCodeDefaultTypeInternal;
extern ConstraintSeverityCodeDefaultTypeInternal _ConstraintSeverityCode_default_instance_;
class ContactEntityTypeCode;
class ContactEntityTypeCodeDefaultTypeInternal;
extern ContactEntityTypeCodeDefaultTypeInternal _ContactEntityTypeCode_default_instance_;
class ContentTypeCode;
class ContentTypeCodeDefaultTypeInternal;
extern ContentTypeCodeDefaultTypeInternal _ContentTypeCode_default_instance_;
class ContractResourceStatusCode;
class ContractResourceStatusCodeDefaultTypeInternal;
extern ContractResourceStatusCodeDefaultTypeInternal _ContractResourceStatusCode_default_instance_;
class ContributorTypeCode;
class ContributorTypeCodeDefaultTypeInternal;
extern ContributorTypeCodeDefaultTypeInternal _ContributorTypeCode_default_instance_;
class CopyNumberEventCode;
class CopyNumberEventCodeDefaultTypeInternal;
extern CopyNumberEventCodeDefaultTypeInternal _CopyNumberEventCode_default_instance_;
class DataAbsentReasonCode;
class DataAbsentReasonCodeDefaultTypeInternal;
extern DataAbsentReasonCodeDefaultTypeInternal _DataAbsentReasonCode_default_instance_;
class DataElementStringencyCode;
class DataElementStringencyCodeDefaultTypeInternal;
extern DataElementStringencyCodeDefaultTypeInternal _DataElementStringencyCode_default_instance_;
class DataTypeCode;
class DataTypeCodeDefaultTypeInternal;
extern DataTypeCodeDefaultTypeInternal _DataTypeCode_default_instance_;
class DefinitionStatusCode;
class DefinitionStatusCodeDefaultTypeInternal;
extern DefinitionStatusCodeDefaultTypeInternal _DefinitionStatusCode_default_instance_;
class DefinitionTopicCode;
class DefinitionTopicCodeDefaultTypeInternal;
extern DefinitionTopicCodeDefaultTypeInternal _DefinitionTopicCode_default_instance_;
class DetectedIssueSeverityCode;
class DetectedIssueSeverityCodeDefaultTypeInternal;
extern DetectedIssueSeverityCodeDefaultTypeInternal _DetectedIssueSeverityCode_default_instance_;
class DeviceComponentOperationalStatusCode;
class DeviceComponentOperationalStatusCodeDefaultTypeInternal;
extern DeviceComponentOperationalStatusCodeDefaultTypeInternal _DeviceComponentOperationalStatusCode_default_instance_;
class DeviceComponentParameterGroupCode;
class DeviceComponentParameterGroupCodeDefaultTypeInternal;
extern DeviceComponentParameterGroupCodeDefaultTypeInternal _DeviceComponentParameterGroupCode_default_instance_;
class DeviceMetricCalibrationStateCode;
class DeviceMetricCalibrationStateCodeDefaultTypeInternal;
extern DeviceMetricCalibrationStateCodeDefaultTypeInternal _DeviceMetricCalibrationStateCode_default_instance_;
class DeviceMetricCalibrationTypeCode;
class DeviceMetricCalibrationTypeCodeDefaultTypeInternal;
extern DeviceMetricCalibrationTypeCodeDefaultTypeInternal _DeviceMetricCalibrationTypeCode_default_instance_;
class DeviceMetricCategoryCode;
class DeviceMetricCategoryCodeDefaultTypeInternal;
extern DeviceMetricCategoryCodeDefaultTypeInternal _DeviceMetricCategoryCode_default_instance_;
class DeviceMetricColorCode;
class DeviceMetricColorCodeDefaultTypeInternal;
extern DeviceMetricColorCodeDefaultTypeInternal _DeviceMetricColorCode_default_instance_;
class DeviceMetricOperationalStatusCode;
class DeviceMetricOperationalStatusCodeDefaultTypeInternal;
extern DeviceMetricOperationalStatusCodeDefaultTypeInternal _DeviceMetricOperationalStatusCode_default_instance_;
class DeviceSpecificationSpecTypeCode;
class DeviceSpecificationSpecTypeCodeDefaultTypeInternal;
extern DeviceSpecificationSpecTypeCodeDefaultTypeInternal _DeviceSpecificationSpecTypeCode_default_instance_;
class DeviceUseStatementStatusCode;
class DeviceUseStatementStatusCodeDefaultTypeInternal;
extern DeviceUseStatementStatusCodeDefaultTypeInternal _DeviceUseStatementStatusCode_default_instance_;
class DiagnosisRoleCode;
class DiagnosisRoleCodeDefaultTypeInternal;
extern DiagnosisRoleCodeDefaultTypeInternal _DiagnosisRoleCode_default_instance_;
class DiagnosticReportStatusCode;
class DiagnosticReportStatusCodeDefaultTypeInternal;
extern DiagnosticReportStatusCodeDefaultTypeInternal _DiagnosticReportStatusCode_default_instance_;
class DietCode;
class DietCodeDefaultTypeInternal;
extern DietCodeDefaultTypeInternal _DietCode_default_instance_;
class DigitalMediaTypeCode;
class DigitalMediaTypeCodeDefaultTypeInternal;
extern DigitalMediaTypeCodeDefaultTypeInternal _DigitalMediaTypeCode_default_instance_;
class DischargeDispositionCode;
class DischargeDispositionCodeDefaultTypeInternal;
extern DischargeDispositionCodeDefaultTypeInternal _DischargeDispositionCode_default_instance_;
class DiscriminatorTypeCode;
class DiscriminatorTypeCodeDefaultTypeInternal;
extern DiscriminatorTypeCodeDefaultTypeInternal _DiscriminatorTypeCode_default_instance_;
class DocumentModeCode;
class DocumentModeCodeDefaultTypeInternal;
extern DocumentModeCodeDefaultTypeInternal _DocumentModeCode_default_instance_;
class DocumentReferenceStatusCode;
class DocumentReferenceStatusCodeDefaultTypeInternal;
extern DocumentReferenceStatusCodeDefaultTypeInternal _DocumentReferenceStatusCode_default_instance_;
class DocumentRelationshipTypeCode;
class DocumentRelationshipTypeCodeDefaultTypeInternal;
extern DocumentRelationshipTypeCodeDefaultTypeInternal _DocumentRelationshipTypeCode_default_instance_;
class EncounterLocationStatusCode;
class EncounterLocationStatusCodeDefaultTypeInternal;
extern EncounterLocationStatusCodeDefaultTypeInternal _EncounterLocationStatusCode_default_instance_;
class EncounterStatusCode;
class EncounterStatusCodeDefaultTypeInternal;
extern EncounterStatusCodeDefaultTypeInternal _EncounterStatusCode_default_instance_;
class EncounterTypeCode;
class EncounterTypeCodeDefaultTypeInternal;
extern EncounterTypeCodeDefaultTypeInternal _EncounterTypeCode_default_instance_;
class EndpointStatusCode;
class EndpointStatusCodeDefaultTypeInternal;
extern EndpointStatusCodeDefaultTypeInternal _EndpointStatusCode_default_instance_;
class EnteralFormulaAdditiveTypeCodeCode;
class EnteralFormulaAdditiveTypeCodeCodeDefaultTypeInternal;
extern EnteralFormulaAdditiveTypeCodeCodeDefaultTypeInternal _EnteralFormulaAdditiveTypeCodeCode_default_instance_;
class EntityNamePartQualifierCode;
class EntityNamePartQualifierCodeDefaultTypeInternal;
extern EntityNamePartQualifierCodeDefaultTypeInternal _EntityNamePartQualifierCode_default_instance_;
class EpisodeOfCareStatusCode;
class EpisodeOfCareStatusCodeDefaultTypeInternal;
extern EpisodeOfCareStatusCodeDefaultTypeInternal _EpisodeOfCareStatusCode_default_instance_;
class EpisodeOfCareTypeCode;
class EpisodeOfCareTypeCodeDefaultTypeInternal;
extern EpisodeOfCareTypeCodeDefaultTypeInternal _EpisodeOfCareTypeCode_default_instance_;
class EventCapabilityModeCode;
class EventCapabilityModeCodeDefaultTypeInternal;
extern EventCapabilityModeCodeDefaultTypeInternal _EventCapabilityModeCode_default_instance_;
class EventStatusCode;
class EventStatusCodeDefaultTypeInternal;
extern EventStatusCodeDefaultTypeInternal _EventStatusCode_default_instance_;
class ExampleMessageReasonCodesCode;
class ExampleMessageReasonCodesCodeDefaultTypeInternal;
extern ExampleMessageReasonCodesCodeDefaultTypeInternal _ExampleMessageReasonCodesCode_default_instance_;
class ExampleUseCodesforListCode;
class ExampleUseCodesforListCodeDefaultTypeInternal;
extern ExampleUseCodesforListCodeDefaultTypeInternal _ExampleUseCodesforListCode_default_instance_;
class ExplanationOfBenefitStatusCode;
class ExplanationOfBenefitStatusCodeDefaultTypeInternal;
extern ExplanationOfBenefitStatusCodeDefaultTypeInternal _ExplanationOfBenefitStatusCode_default_instance_;
class ExtensionContextCode;
class ExtensionContextCodeDefaultTypeInternal;
extern ExtensionContextCodeDefaultTypeInternal _ExtensionContextCode_default_instance_;
class FHIRAllTypesCode;
class FHIRAllTypesCodeDefaultTypeInternal;
extern FHIRAllTypesCodeDefaultTypeInternal _FHIRAllTypesCode_default_instance_;
class FHIRDefinedTypeCode;
class FHIRDefinedTypeCodeDefaultTypeInternal;
extern FHIRDefinedTypeCodeDefaultTypeInternal _FHIRDefinedTypeCode_default_instance_;
class FHIRDefinedTypeExtCode;
class FHIRDefinedTypeExtCodeDefaultTypeInternal;
extern FHIRDefinedTypeExtCodeDefaultTypeInternal _FHIRDefinedTypeExtCode_default_instance_;
class FHIRDeviceStatusCode;
class FHIRDeviceStatusCodeDefaultTypeInternal;
extern FHIRDeviceStatusCodeDefaultTypeInternal _FHIRDeviceStatusCode_default_instance_;
class FHIRSubstanceStatusCode;
class FHIRSubstanceStatusCodeDefaultTypeInternal;
extern FHIRSubstanceStatusCodeDefaultTypeInternal _FHIRSubstanceStatusCode_default_instance_;
class FamilyHistoryNotDoneReasonCode;
class FamilyHistoryNotDoneReasonCodeDefaultTypeInternal;
extern FamilyHistoryNotDoneReasonCodeDefaultTypeInternal _FamilyHistoryNotDoneReasonCode_default_instance_;
class FamilyHistoryStatusCode;
class FamilyHistoryStatusCodeDefaultTypeInternal;
extern FamilyHistoryStatusCodeDefaultTypeInternal _FamilyHistoryStatusCode_default_instance_;
class FilterOperatorCode;
class FilterOperatorCodeDefaultTypeInternal;
extern FilterOperatorCodeDefaultTypeInternal _FilterOperatorCode_default_instance_;
class FinancialResourceStatusCode;
class FinancialResourceStatusCodeDefaultTypeInternal;
extern FinancialResourceStatusCodeDefaultTypeInternal _FinancialResourceStatusCode_default_instance_;
class FlagCategoryCode;
class FlagCategoryCodeDefaultTypeInternal;
extern FlagCategoryCodeDefaultTypeInternal _FlagCategoryCode_default_instance_;
class FlagPriorityCodesCode;
class FlagPriorityCodesCodeDefaultTypeInternal;
extern FlagPriorityCodesCodeDefaultTypeInternal _FlagPriorityCodesCode_default_instance_;
class FlagStatusCode;
class FlagStatusCodeDefaultTypeInternal;
extern FlagStatusCodeDefaultTypeInternal _FlagStatusCode_default_instance_;
class GenderStatusCode;
class GenderStatusCodeDefaultTypeInternal;
extern GenderStatusCodeDefaultTypeInternal _GenderStatusCode_default_instance_;
class GoalAcceptanceStatusCode;
class GoalAcceptanceStatusCodeDefaultTypeInternal;
extern GoalAcceptanceStatusCodeDefaultTypeInternal _GoalAcceptanceStatusCode_default_instance_;
class GoalCategoryCode;
class GoalCategoryCodeDefaultTypeInternal;
extern GoalCategoryCodeDefaultTypeInternal _GoalCategoryCode_default_instance_;
class GoalPriorityCode;
class GoalPriorityCodeDefaultTypeInternal;
extern GoalPriorityCodeDefaultTypeInternal _GoalPriorityCode_default_instance_;
class GoalRelationshipTypeCode;
class GoalRelationshipTypeCodeDefaultTypeInternal;
extern GoalRelationshipTypeCodeDefaultTypeInternal _GoalRelationshipTypeCode_default_instance_;
class GoalStatusCode;
class GoalStatusCodeDefaultTypeInternal;
extern GoalStatusCodeDefaultTypeInternal _GoalStatusCode_default_instance_;
class GoalStatusReasonCode;
class GoalStatusReasonCodeDefaultTypeInternal;
extern GoalStatusReasonCodeDefaultTypeInternal _GoalStatusReasonCode_default_instance_;
class GraphCompartmentRuleCode;
class GraphCompartmentRuleCodeDefaultTypeInternal;
extern GraphCompartmentRuleCodeDefaultTypeInternal _GraphCompartmentRuleCode_default_instance_;
class GroupTypeCode;
class GroupTypeCodeDefaultTypeInternal;
extern GroupTypeCodeDefaultTypeInternal _GroupTypeCode_default_instance_;
class GuidanceResponseStatusCode;
class GuidanceResponseStatusCodeDefaultTypeInternal;
extern GuidanceResponseStatusCodeDefaultTypeInternal _GuidanceResponseStatusCode_default_instance_;
class GuideDependencyTypeCode;
class GuideDependencyTypeCodeDefaultTypeInternal;
extern GuideDependencyTypeCodeDefaultTypeInternal _GuideDependencyTypeCode_default_instance_;
class GuidePageKindCode;
class GuidePageKindCodeDefaultTypeInternal;
extern GuidePageKindCodeDefaultTypeInternal _GuidePageKindCode_default_instance_;
class HL7WorkgroupCode;
class HL7WorkgroupCodeDefaultTypeInternal;
extern HL7WorkgroupCodeDefaultTypeInternal _HL7WorkgroupCode_default_instance_;
class HTTPVerbCode;
class HTTPVerbCodeDefaultTypeInternal;
extern HTTPVerbCodeDefaultTypeInternal _HTTPVerbCode_default_instance_;
class HumanNameAssemblyOrderCode;
class HumanNameAssemblyOrderCodeDefaultTypeInternal;
extern HumanNameAssemblyOrderCodeDefaultTypeInternal _HumanNameAssemblyOrderCode_default_instance_;
class IdentityAssuranceLevelCode;
class IdentityAssuranceLevelCodeDefaultTypeInternal;
extern IdentityAssuranceLevelCodeDefaultTypeInternal _IdentityAssuranceLevelCode_default_instance_;
class ImmunizationOriginCodesCode;
class ImmunizationOriginCodesCodeDefaultTypeInternal;
extern ImmunizationOriginCodesCodeDefaultTypeInternal _ImmunizationOriginCodesCode_default_instance_;
class ImmunizationRecommendationDateCriterionCodesCode;
class ImmunizationRecommendationDateCriterionCodesCodeDefaultTypeInternal;
extern ImmunizationRecommendationDateCriterionCodesCodeDefaultTypeInternal _ImmunizationRecommendationDateCriterionCodesCode_default_instance_;
class ImmunizationRecommendationStatusCodesCode;
class ImmunizationRecommendationStatusCodesCodeDefaultTypeInternal;
extern ImmunizationRecommendationStatusCodesCodeDefaultTypeInternal _ImmunizationRecommendationStatusCodesCode_default_instance_;
class ImmunizationStatusCodesCode;
class ImmunizationStatusCodesCodeDefaultTypeInternal;
extern ImmunizationStatusCodesCodeDefaultTypeInternal _ImmunizationStatusCodesCode_default_instance_;
class ImplantStatusCode;
class ImplantStatusCodeDefaultTypeInternal;
extern ImplantStatusCodeDefaultTypeInternal _ImplantStatusCode_default_instance_;
class InstanceAvailabilityCode;
class InstanceAvailabilityCodeDefaultTypeInternal;
extern InstanceAvailabilityCodeDefaultTypeInternal _InstanceAvailabilityCode_default_instance_;
class IssueSeverityCode;
class IssueSeverityCodeDefaultTypeInternal;
extern IssueSeverityCodeDefaultTypeInternal _IssueSeverityCode_default_instance_;
class IssueTypeCode;
class IssueTypeCodeDefaultTypeInternal;
extern IssueTypeCodeDefaultTypeInternal _IssueTypeCode_default_instance_;
class LibraryTypeCode;
class LibraryTypeCodeDefaultTypeInternal;
extern LibraryTypeCodeDefaultTypeInternal _LibraryTypeCode_default_instance_;
class LinkTypeCode;
class LinkTypeCodeDefaultTypeInternal;
extern LinkTypeCodeDefaultTypeInternal _LinkTypeCode_default_instance_;
class LinkageTypeCode;
class LinkageTypeCodeDefaultTypeInternal;
extern LinkageTypeCodeDefaultTypeInternal _LinkageTypeCode_default_instance_;
class ListEmptyReasonsCode;
class ListEmptyReasonsCodeDefaultTypeInternal;
extern ListEmptyReasonsCodeDefaultTypeInternal _ListEmptyReasonsCode_default_instance_;
class ListModeCode;
class ListModeCodeDefaultTypeInternal;
extern ListModeCodeDefaultTypeInternal _ListModeCode_default_instance_;
class ListOrderCodesCode;
class ListOrderCodesCodeDefaultTypeInternal;
extern ListOrderCodesCodeDefaultTypeInternal _ListOrderCodesCode_default_instance_;
class ListStatusCode;
class ListStatusCodeDefaultTypeInternal;
extern ListStatusCodeDefaultTypeInternal _ListStatusCode_default_instance_;
class LocationModeCode;
class LocationModeCodeDefaultTypeInternal;
extern LocationModeCodeDefaultTypeInternal _LocationModeCode_default_instance_;
class LocationStatusCode;
class LocationStatusCodeDefaultTypeInternal;
extern LocationStatusCodeDefaultTypeInternal _LocationStatusCode_default_instance_;
class LocationTypeCode;
class LocationTypeCodeDefaultTypeInternal;
extern LocationTypeCodeDefaultTypeInternal _LocationTypeCode_default_instance_;
class MatchGradeCode;
class MatchGradeCodeDefaultTypeInternal;
extern MatchGradeCodeDefaultTypeInternal _MatchGradeCode_default_instance_;
class MaxOccursCode;
class MaxOccursCodeDefaultTypeInternal;
extern MaxOccursCodeDefaultTypeInternal _MaxOccursCode_default_instance_;
class MeasmntPrincipleCode;
class MeasmntPrincipleCodeDefaultTypeInternal;
extern MeasmntPrincipleCodeDefaultTypeInternal _MeasmntPrincipleCode_default_instance_;
class MeasureDataUsageCode;
class MeasureDataUsageCodeDefaultTypeInternal;
extern MeasureDataUsageCodeDefaultTypeInternal _MeasureDataUsageCode_default_instance_;
class MeasurePopulationTypeCode;
class MeasurePopulationTypeCodeDefaultTypeInternal;
extern MeasurePopulationTypeCodeDefaultTypeInternal _MeasurePopulationTypeCode_default_instance_;
class MeasureReportStatusCode;
class MeasureReportStatusCodeDefaultTypeInternal;
extern MeasureReportStatusCodeDefaultTypeInternal _MeasureReportStatusCode_default_instance_;
class MeasureReportTypeCode;
class MeasureReportTypeCodeDefaultTypeInternal;
extern MeasureReportTypeCodeDefaultTypeInternal _MeasureReportTypeCode_default_instance_;
class MeasureScoringCode;
class MeasureScoringCodeDefaultTypeInternal;
extern MeasureScoringCodeDefaultTypeInternal _MeasureScoringCode_default_instance_;
class MeasureTypeCode;
class MeasureTypeCodeDefaultTypeInternal;
extern MeasureTypeCodeDefaultTypeInternal _MeasureTypeCode_default_instance_;
class MedicationAdministrationCategoryCode;
class MedicationAdministrationCategoryCodeDefaultTypeInternal;
extern MedicationAdministrationCategoryCodeDefaultTypeInternal _MedicationAdministrationCategoryCode_default_instance_;
class MedicationAdministrationStatusCode;
class MedicationAdministrationStatusCodeDefaultTypeInternal;
extern MedicationAdministrationStatusCodeDefaultTypeInternal _MedicationAdministrationStatusCode_default_instance_;
class MedicationContainerCode;
class MedicationContainerCodeDefaultTypeInternal;
extern MedicationContainerCodeDefaultTypeInternal _MedicationContainerCode_default_instance_;
class MedicationDispenseCategoryCode;
class MedicationDispenseCategoryCodeDefaultTypeInternal;
extern MedicationDispenseCategoryCodeDefaultTypeInternal _MedicationDispenseCategoryCode_default_instance_;
class MedicationDispenseStatusCode;
class MedicationDispenseStatusCodeDefaultTypeInternal;
extern MedicationDispenseStatusCodeDefaultTypeInternal _MedicationDispenseStatusCode_default_instance_;
class MedicationRequestCategoryCode;
class MedicationRequestCategoryCodeDefaultTypeInternal;
extern MedicationRequestCategoryCodeDefaultTypeInternal _MedicationRequestCategoryCode_default_instance_;
class MedicationRequestIntentCode;
class MedicationRequestIntentCodeDefaultTypeInternal;
extern MedicationRequestIntentCodeDefaultTypeInternal _MedicationRequestIntentCode_default_instance_;
class MedicationRequestPriorityCode;
class MedicationRequestPriorityCodeDefaultTypeInternal;
extern MedicationRequestPriorityCodeDefaultTypeInternal _MedicationRequestPriorityCode_default_instance_;
class MedicationRequestStatusCode;
class MedicationRequestStatusCodeDefaultTypeInternal;
extern MedicationRequestStatusCodeDefaultTypeInternal _MedicationRequestStatusCode_default_instance_;
class MedicationStatementCategoryCode;
class MedicationStatementCategoryCodeDefaultTypeInternal;
extern MedicationStatementCategoryCodeDefaultTypeInternal _MedicationStatementCategoryCode_default_instance_;
class MedicationStatementStatusCode;
class MedicationStatementStatusCodeDefaultTypeInternal;
extern MedicationStatementStatusCodeDefaultTypeInternal _MedicationStatementStatusCode_default_instance_;
class MedicationStatementTakenCode;
class MedicationStatementTakenCodeDefaultTypeInternal;
extern MedicationStatementTakenCodeDefaultTypeInternal _MedicationStatementTakenCode_default_instance_;
class MedicationStatusCode;
class MedicationStatusCodeDefaultTypeInternal;
extern MedicationStatusCodeDefaultTypeInternal _MedicationStatusCode_default_instance_;
class MessageEventCode;
class MessageEventCodeDefaultTypeInternal;
extern MessageEventCodeDefaultTypeInternal _MessageEventCode_default_instance_;
class MessageHeaderResponseRequestCode;
class MessageHeaderResponseRequestCodeDefaultTypeInternal;
extern MessageHeaderResponseRequestCodeDefaultTypeInternal _MessageHeaderResponseRequestCode_default_instance_;
class MessageSignificanceCategoryCode;
class MessageSignificanceCategoryCodeDefaultTypeInternal;
extern MessageSignificanceCategoryCodeDefaultTypeInternal _MessageSignificanceCategoryCode_default_instance_;
class MessageTransportCode;
class MessageTransportCodeDefaultTypeInternal;
extern MessageTransportCodeDefaultTypeInternal _MessageTransportCode_default_instance_;
class NameRepresentationUseCode;
class NameRepresentationUseCodeDefaultTypeInternal;
extern NameRepresentationUseCodeDefaultTypeInternal _NameRepresentationUseCode_default_instance_;
class NamingSystemIdentifierTypeCode;
class NamingSystemIdentifierTypeCodeDefaultTypeInternal;
extern NamingSystemIdentifierTypeCodeDefaultTypeInternal _NamingSystemIdentifierTypeCode_default_instance_;
class NamingSystemTypeCode;
class NamingSystemTypeCodeDefaultTypeInternal;
extern NamingSystemTypeCodeDefaultTypeInternal _NamingSystemTypeCode_default_instance_;
class NarrativeStatusCode;
class NarrativeStatusCodeDefaultTypeInternal;
extern NarrativeStatusCodeDefaultTypeInternal _NarrativeStatusCode_default_instance_;
class NoteTypeCode;
class NoteTypeCodeDefaultTypeInternal;
extern NoteTypeCodeDefaultTypeInternal _NoteTypeCode_default_instance_;
class NullFlavorCode;
class NullFlavorCodeDefaultTypeInternal;
extern NullFlavorCodeDefaultTypeInternal _NullFlavorCode_default_instance_;
class NutritionOrderStatusCode;
class NutritionOrderStatusCodeDefaultTypeInternal;
extern NutritionOrderStatusCodeDefaultTypeInternal _NutritionOrderStatusCode_default_instance_;
class ObservationCategoryCodesCode;
class ObservationCategoryCodesCodeDefaultTypeInternal;
extern ObservationCategoryCodesCodeDefaultTypeInternal _ObservationCategoryCodesCode_default_instance_;
class ObservationReferenceRangeMeaningCodesCode;
class ObservationReferenceRangeMeaningCodesCodeDefaultTypeInternal;
extern ObservationReferenceRangeMeaningCodesCodeDefaultTypeInternal _ObservationReferenceRangeMeaningCodesCode_default_instance_;
class ObservationRelationshipTypeCode;
class ObservationRelationshipTypeCodeDefaultTypeInternal;
extern ObservationRelationshipTypeCodeDefaultTypeInternal _ObservationRelationshipTypeCode_default_instance_;
class ObservationStatusCode;
class ObservationStatusCodeDefaultTypeInternal;
extern ObservationStatusCodeDefaultTypeInternal _ObservationStatusCode_default_instance_;
class OperationKindCode;
class OperationKindCodeDefaultTypeInternal;
extern OperationKindCodeDefaultTypeInternal _OperationKindCode_default_instance_;
class OperationOutcomeCodesCode;
class OperationOutcomeCodesCodeDefaultTypeInternal;
extern OperationOutcomeCodesCodeDefaultTypeInternal _OperationOutcomeCodesCode_default_instance_;
class OperationParameterUseCode;
class OperationParameterUseCodeDefaultTypeInternal;
extern OperationParameterUseCodeDefaultTypeInternal _OperationParameterUseCode_default_instance_;
class OrganizationTypeCode;
class OrganizationTypeCodeDefaultTypeInternal;
extern OrganizationTypeCodeDefaultTypeInternal _OrganizationTypeCode_default_instance_;
class ParticipantRequiredCode;
class ParticipantRequiredCodeDefaultTypeInternal;
extern ParticipantRequiredCodeDefaultTypeInternal _ParticipantRequiredCode_default_instance_;
class ParticipationStatusCode;
class ParticipationStatusCodeDefaultTypeInternal;
extern ParticipationStatusCodeDefaultTypeInternal _ParticipationStatusCode_default_instance_;
class PayeeResourceTypeCode;
class PayeeResourceTypeCodeDefaultTypeInternal;
extern PayeeResourceTypeCodeDefaultTypeInternal _PayeeResourceTypeCode_default_instance_;
class PlanDefinitionTypeCode;
class PlanDefinitionTypeCodeDefaultTypeInternal;
extern PlanDefinitionTypeCodeDefaultTypeInternal _PlanDefinitionTypeCode_default_instance_;
class PostalAddressUseTypeCode;
class PostalAddressUseTypeCodeDefaultTypeInternal;
extern PostalAddressUseTypeCodeDefaultTypeInternal _PostalAddressUseTypeCode_default_instance_;
class PractitionerRoleCode;
class PractitionerRoleCodeDefaultTypeInternal;
extern PractitionerRoleCodeDefaultTypeInternal _PractitionerRoleCode_default_instance_;
class PractitionerSpecialtyCode;
class PractitionerSpecialtyCodeDefaultTypeInternal;
extern PractitionerSpecialtyCodeDefaultTypeInternal _PractitionerSpecialtyCode_default_instance_;
class ProbabilityDistributionTypeCode;
class ProbabilityDistributionTypeCodeDefaultTypeInternal;
extern ProbabilityDistributionTypeCodeDefaultTypeInternal _ProbabilityDistributionTypeCode_default_instance_;
class ProcedureProgressStatusCodesCode;
class ProcedureProgressStatusCodesCodeDefaultTypeInternal;
extern ProcedureProgressStatusCodesCodeDefaultTypeInternal _ProcedureProgressStatusCodesCode_default_instance_;
class PropertyRepresentationCode;
class PropertyRepresentationCodeDefaultTypeInternal;
extern PropertyRepresentationCodeDefaultTypeInternal _PropertyRepresentationCode_default_instance_;
class PropertyTypeCode;
class PropertyTypeCodeDefaultTypeInternal;
extern PropertyTypeCodeDefaultTypeInternal _PropertyTypeCode_default_instance_;
class ProvenanceEntityRoleCode;
class ProvenanceEntityRoleCodeDefaultTypeInternal;
extern ProvenanceEntityRoleCodeDefaultTypeInternal _ProvenanceEntityRoleCode_default_instance_;
class PublicationStatusCode;
class PublicationStatusCodeDefaultTypeInternal;
extern PublicationStatusCodeDefaultTypeInternal _PublicationStatusCode_default_instance_;
class QualityTypeCode;
class QualityTypeCodeDefaultTypeInternal;
extern QualityTypeCodeDefaultTypeInternal _QualityTypeCode_default_instance_;
class QuestionnaireItemTypeCode;
class QuestionnaireItemTypeCodeDefaultTypeInternal;
extern QuestionnaireItemTypeCodeDefaultTypeInternal _QuestionnaireItemTypeCode_default_instance_;
class QuestionnaireItemUIControlCodesCode;
class QuestionnaireItemUIControlCodesCodeDefaultTypeInternal;
extern QuestionnaireItemUIControlCodesCodeDefaultTypeInternal _QuestionnaireItemUIControlCodesCode_default_instance_;
class QuestionnaireItemUsageModeCode;
class QuestionnaireItemUsageModeCodeDefaultTypeInternal;
extern QuestionnaireItemUsageModeCodeDefaultTypeInternal _QuestionnaireItemUsageModeCode_default_instance_;
class QuestionnaireResponseStatusCode;
class QuestionnaireResponseStatusCodeDefaultTypeInternal;
extern QuestionnaireResponseStatusCodeDefaultTypeInternal _QuestionnaireResponseStatusCode_default_instance_;
class QuestionnaireTextCategoriesCode;
class QuestionnaireTextCategoriesCodeDefaultTypeInternal;
extern QuestionnaireTextCategoriesCodeDefaultTypeInternal _QuestionnaireTextCategoriesCode_default_instance_;
class ReasonMedicationGivenCodesCode;
class ReasonMedicationGivenCodesCodeDefaultTypeInternal;
extern ReasonMedicationGivenCodesCodeDefaultTypeInternal _ReasonMedicationGivenCodesCode_default_instance_;
class ReferenceHandlingPolicyCode;
class ReferenceHandlingPolicyCodeDefaultTypeInternal;
extern ReferenceHandlingPolicyCodeDefaultTypeInternal _ReferenceHandlingPolicyCode_default_instance_;
class ReferenceVersionRulesCode;
class ReferenceVersionRulesCodeDefaultTypeInternal;
extern ReferenceVersionRulesCodeDefaultTypeInternal _ReferenceVersionRulesCode_default_instance_;
class ReferralMethodCode;
class ReferralMethodCodeDefaultTypeInternal;
extern ReferralMethodCodeDefaultTypeInternal _ReferralMethodCode_default_instance_;
class RelatedArtifactTypeCode;
class RelatedArtifactTypeCodeDefaultTypeInternal;
extern RelatedArtifactTypeCodeDefaultTypeInternal _RelatedArtifactTypeCode_default_instance_;
class RepositoryTypeCode;
class RepositoryTypeCodeDefaultTypeInternal;
extern RepositoryTypeCodeDefaultTypeInternal _RepositoryTypeCode_default_instance_;
class RequestIntentCode;
class RequestIntentCodeDefaultTypeInternal;
extern RequestIntentCodeDefaultTypeInternal _RequestIntentCode_default_instance_;
class RequestPriorityCode;
class RequestPriorityCodeDefaultTypeInternal;
extern RequestPriorityCodeDefaultTypeInternal _RequestPriorityCode_default_instance_;
class RequestStatusCode;
class RequestStatusCodeDefaultTypeInternal;
extern RequestStatusCodeDefaultTypeInternal _RequestStatusCode_default_instance_;
class ResearchStudyStatusCode;
class ResearchStudyStatusCodeDefaultTypeInternal;
extern ResearchStudyStatusCodeDefaultTypeInternal _ResearchStudyStatusCode_default_instance_;
class ResearchSubjectStatusCode;
class ResearchSubjectStatusCodeDefaultTypeInternal;
extern ResearchSubjectStatusCodeDefaultTypeInternal _ResearchSubjectStatusCode_default_instance_;
class ResourceTypeCode;
class ResourceTypeCodeDefaultTypeInternal;
extern ResourceTypeCodeDefaultTypeInternal _ResourceTypeCode_default_instance_;
class ResourceValidationModeCode;
class ResourceValidationModeCodeDefaultTypeInternal;
extern ResourceValidationModeCodeDefaultTypeInternal _ResourceValidationModeCode_default_instance_;
class ResourceVersionPolicyCode;
class ResourceVersionPolicyCodeDefaultTypeInternal;
extern ResourceVersionPolicyCodeDefaultTypeInternal _ResourceVersionPolicyCode_default_instance_;
class ResponseTypeCode;
class ResponseTypeCodeDefaultTypeInternal;
extern ResponseTypeCodeDefaultTypeInternal _ResponseTypeCode_default_instance_;
class RestfulCapabilityModeCode;
class RestfulCapabilityModeCodeDefaultTypeInternal;
extern RestfulCapabilityModeCodeDefaultTypeInternal _RestfulCapabilityModeCode_default_instance_;
class RestfulSecurityServiceCode;
class RestfulSecurityServiceCodeDefaultTypeInternal;
extern RestfulSecurityServiceCodeDefaultTypeInternal _RestfulSecurityServiceCode_default_instance_;
class RiskProbabilityCode;
class RiskProbabilityCodeDefaultTypeInternal;
extern RiskProbabilityCodeDefaultTypeInternal _RiskProbabilityCode_default_instance_;
class SearchComparatorCode;
class SearchComparatorCodeDefaultTypeInternal;
extern SearchComparatorCodeDefaultTypeInternal _SearchComparatorCode_default_instance_;
class SearchEntryModeCode;
class SearchEntryModeCodeDefaultTypeInternal;
extern SearchEntryModeCodeDefaultTypeInternal _SearchEntryModeCode_default_instance_;
class SearchModifierCodeCode;
class SearchModifierCodeCodeDefaultTypeInternal;
extern SearchModifierCodeCodeDefaultTypeInternal _SearchModifierCodeCode_default_instance_;
class SearchParamTypeCode;
class SearchParamTypeCodeDefaultTypeInternal;
extern SearchParamTypeCodeDefaultTypeInternal _SearchParamTypeCode_default_instance_;
class SequenceTypeCode;
class SequenceTypeCodeDefaultTypeInternal;
extern SequenceTypeCodeDefaultTypeInternal _SequenceTypeCode_default_instance_;
class ServiceProvisionConditionsCode;
class ServiceProvisionConditionsCodeDefaultTypeInternal;
extern ServiceProvisionConditionsCodeDefaultTypeInternal _ServiceProvisionConditionsCode_default_instance_;
class SlicingRulesCode;
class SlicingRulesCodeDefaultTypeInternal;
extern SlicingRulesCodeDefaultTypeInternal _SlicingRulesCode_default_instance_;
class SlotStatusCode;
class SlotStatusCodeDefaultTypeInternal;
extern SlotStatusCodeDefaultTypeInternal _SlotStatusCode_default_instance_;
class SpecialArrangementsCode;
class SpecialArrangementsCodeDefaultTypeInternal;
extern SpecialArrangementsCodeDefaultTypeInternal _SpecialArrangementsCode_default_instance_;
class SpecialValuesCode;
class SpecialValuesCodeDefaultTypeInternal;
extern SpecialValuesCodeDefaultTypeInternal _SpecialValuesCode_default_instance_;
class SpecimenStatusCode;
class SpecimenStatusCodeDefaultTypeInternal;
extern SpecimenStatusCodeDefaultTypeInternal _SpecimenStatusCode_default_instance_;
class StatisticsCodeCode;
class StatisticsCodeCodeDefaultTypeInternal;
extern StatisticsCodeCodeDefaultTypeInternal _StatisticsCodeCode_default_instance_;
class StructureDefinitionKindCode;
class StructureDefinitionKindCodeDefaultTypeInternal;
extern StructureDefinitionKindCodeDefaultTypeInternal _StructureDefinitionKindCode_default_instance_;
class StructureMapContextTypeCode;
class StructureMapContextTypeCodeDefaultTypeInternal;
extern StructureMapContextTypeCodeDefaultTypeInternal _StructureMapContextTypeCode_default_instance_;
class StructureMapGroupTypeModeCode;
class StructureMapGroupTypeModeCodeDefaultTypeInternal;
extern StructureMapGroupTypeModeCodeDefaultTypeInternal _StructureMapGroupTypeModeCode_default_instance_;
class StructureMapInputModeCode;
class StructureMapInputModeCodeDefaultTypeInternal;
extern StructureMapInputModeCodeDefaultTypeInternal _StructureMapInputModeCode_default_instance_;
class StructureMapModelModeCode;
class StructureMapModelModeCodeDefaultTypeInternal;
extern StructureMapModelModeCodeDefaultTypeInternal _StructureMapModelModeCode_default_instance_;
class StructureMapSourceListModeCode;
class StructureMapSourceListModeCodeDefaultTypeInternal;
extern StructureMapSourceListModeCodeDefaultTypeInternal _StructureMapSourceListModeCode_default_instance_;
class StructureMapTargetListModeCode;
class StructureMapTargetListModeCodeDefaultTypeInternal;
extern StructureMapTargetListModeCodeDefaultTypeInternal _StructureMapTargetListModeCode_default_instance_;
class StructureMapTransformCode;
class StructureMapTransformCodeDefaultTypeInternal;
extern StructureMapTransformCodeDefaultTypeInternal _StructureMapTransformCode_default_instance_;
class SubscriptionChannelTypeCode;
class SubscriptionChannelTypeCodeDefaultTypeInternal;
extern SubscriptionChannelTypeCodeDefaultTypeInternal _SubscriptionChannelTypeCode_default_instance_;
class SubscriptionStatusCode;
class SubscriptionStatusCodeDefaultTypeInternal;
extern SubscriptionStatusCodeDefaultTypeInternal _SubscriptionStatusCode_default_instance_;
class SubscriptionTagCode;
class SubscriptionTagCodeDefaultTypeInternal;
extern SubscriptionTagCodeDefaultTypeInternal _SubscriptionTagCode_default_instance_;
class SubstanceCategoryCodesCode;
class SubstanceCategoryCodesCodeDefaultTypeInternal;
extern SubstanceCategoryCodesCodeDefaultTypeInternal _SubstanceCategoryCodesCode_default_instance_;
class SupplyDeliveryStatusCode;
class SupplyDeliveryStatusCodeDefaultTypeInternal;
extern SupplyDeliveryStatusCodeDefaultTypeInternal _SupplyDeliveryStatusCode_default_instance_;
class SupplyItemTypeCode;
class SupplyItemTypeCodeDefaultTypeInternal;
extern SupplyItemTypeCodeDefaultTypeInternal _SupplyItemTypeCode_default_instance_;
class SupplyRequestReasonCode;
class SupplyRequestReasonCodeDefaultTypeInternal;
extern SupplyRequestReasonCodeDefaultTypeInternal _SupplyRequestReasonCode_default_instance_;
class SupplyRequestStatusCode;
class SupplyRequestStatusCodeDefaultTypeInternal;
extern SupplyRequestStatusCodeDefaultTypeInternal _SupplyRequestStatusCode_default_instance_;
class SupplyTypeCode;
class SupplyTypeCodeDefaultTypeInternal;
extern SupplyTypeCodeDefaultTypeInternal _SupplyTypeCode_default_instance_;
class SystemRestfulInteractionCode;
class SystemRestfulInteractionCodeDefaultTypeInternal;
extern SystemRestfulInteractionCodeDefaultTypeInternal _SystemRestfulInteractionCode_default_instance_;
class SystemVersionProcessingModeCode;
class SystemVersionProcessingModeCodeDefaultTypeInternal;
extern SystemVersionProcessingModeCodeDefaultTypeInternal _SystemVersionProcessingModeCode_default_instance_;
class TaskPerformerTypeCode;
class TaskPerformerTypeCodeDefaultTypeInternal;
extern TaskPerformerTypeCodeDefaultTypeInternal _TaskPerformerTypeCode_default_instance_;
class TaskStatusCode;
class TaskStatusCodeDefaultTypeInternal;
extern TaskStatusCodeDefaultTypeInternal _TaskStatusCode_default_instance_;
class TemplateStatusCodeCode;
class TemplateStatusCodeCodeDefaultTypeInternal;
extern TemplateStatusCodeCodeDefaultTypeInternal _TemplateStatusCodeCode_default_instance_;
class TestReportActionResultCode;
class TestReportActionResultCodeDefaultTypeInternal;
extern TestReportActionResultCodeDefaultTypeInternal _TestReportActionResultCode_default_instance_;
class TestReportParticipantTypeCode;
class TestReportParticipantTypeCodeDefaultTypeInternal;
extern TestReportParticipantTypeCodeDefaultTypeInternal _TestReportParticipantTypeCode_default_instance_;
class TestReportResultCode;
class TestReportResultCodeDefaultTypeInternal;
extern TestReportResultCodeDefaultTypeInternal _TestReportResultCode_default_instance_;
class TestReportStatusCode;
class TestReportStatusCodeDefaultTypeInternal;
extern TestReportStatusCodeDefaultTypeInternal _TestReportStatusCode_default_instance_;
class TestScriptOperationCodeCode;
class TestScriptOperationCodeCodeDefaultTypeInternal;
extern TestScriptOperationCodeCodeDefaultTypeInternal _TestScriptOperationCodeCode_default_instance_;
class TestScriptProfileDestinationTypeCode;
class TestScriptProfileDestinationTypeCodeDefaultTypeInternal;
extern TestScriptProfileDestinationTypeCodeDefaultTypeInternal _TestScriptProfileDestinationTypeCode_default_instance_;
class TestScriptProfileOriginTypeCode;
class TestScriptProfileOriginTypeCodeDefaultTypeInternal;
extern TestScriptProfileOriginTypeCodeDefaultTypeInternal _TestScriptProfileOriginTypeCode_default_instance_;
class TestScriptRequestMethodCodeCode;
class TestScriptRequestMethodCodeCodeDefaultTypeInternal;
extern TestScriptRequestMethodCodeCodeDefaultTypeInternal _TestScriptRequestMethodCodeCode_default_instance_;
class TransactionModeCode;
class TransactionModeCodeDefaultTypeInternal;
extern TransactionModeCodeDefaultTypeInternal _TransactionModeCode_default_instance_;
class TriggerTypeCode;
class TriggerTypeCodeDefaultTypeInternal;
extern TriggerTypeCodeDefaultTypeInternal _TriggerTypeCode_default_instance_;
class TypeDerivationRuleCode;
class TypeDerivationRuleCodeDefaultTypeInternal;
extern TypeDerivationRuleCodeDefaultTypeInternal _TypeDerivationRuleCode_default_instance_;
class TypeRestfulInteractionCode;
class TypeRestfulInteractionCodeDefaultTypeInternal;
extern TypeRestfulInteractionCodeDefaultTypeInternal _TypeRestfulInteractionCode_default_instance_;
class UDIEntryTypeCode;
class UDIEntryTypeCodeDefaultTypeInternal;
extern UDIEntryTypeCodeDefaultTypeInternal _UDIEntryTypeCode_default_instance_;
class UnknownContentCodeCode;
class UnknownContentCodeCodeDefaultTypeInternal;
extern UnknownContentCodeCodeDefaultTypeInternal _UnknownContentCodeCode_default_instance_;
class UsageContextTypeCode;
class UsageContextTypeCodeDefaultTypeInternal;
extern UsageContextTypeCodeDefaultTypeInternal _UsageContextTypeCode_default_instance_;
class UseCode;
class UseCodeDefaultTypeInternal;
extern UseCodeDefaultTypeInternal _UseCode_default_instance_;
class VaccinationProtocolDoseStatusReasoncodesCode;
class VaccinationProtocolDoseStatusReasoncodesCodeDefaultTypeInternal;
extern VaccinationProtocolDoseStatusReasoncodesCodeDefaultTypeInternal _VaccinationProtocolDoseStatusReasoncodesCode_default_instance_;
class VaccinationProtocolDoseStatuscodesCode;
class VaccinationProtocolDoseStatuscodesCodeDefaultTypeInternal;
extern VaccinationProtocolDoseStatuscodesCodeDefaultTypeInternal _VaccinationProtocolDoseStatuscodesCode_default_instance_;
class VisionBaseCode;
class VisionBaseCodeDefaultTypeInternal;
extern VisionBaseCodeDefaultTypeInternal _VisionBaseCode_default_instance_;
class VisionEyesCode;
class VisionEyesCodeDefaultTypeInternal;
extern VisionEyesCodeDefaultTypeInternal _VisionEyesCode_default_instance_;
class XPathUsageTypeCode;
class XPathUsageTypeCodeDefaultTypeInternal;
extern XPathUsageTypeCodeDefaultTypeInternal _XPathUsageTypeCode_default_instance_;
class sequenceStatusCode;
class sequenceStatusCodeDefaultTypeInternal;
extern sequenceStatusCodeDefaultTypeInternal _sequenceStatusCode_default_instance_;
}  // namespace proto
}  // namespace stu3
}  // namespace fhir
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::fhir::stu3::proto::AbstractTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::AbstractTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::AccountStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::AccountStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::ActionCardinalityBehaviorCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ActionCardinalityBehaviorCode>(Arena*);
template<> ::google::fhir::stu3::proto::ActionConditionKindCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ActionConditionKindCode>(Arena*);
template<> ::google::fhir::stu3::proto::ActionGroupingBehaviorCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ActionGroupingBehaviorCode>(Arena*);
template<> ::google::fhir::stu3::proto::ActionListCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ActionListCode>(Arena*);
template<> ::google::fhir::stu3::proto::ActionParticipantTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ActionParticipantTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::ActionPrecheckBehaviorCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ActionPrecheckBehaviorCode>(Arena*);
template<> ::google::fhir::stu3::proto::ActionRelationshipTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ActionRelationshipTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::ActionRequiredBehaviorCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ActionRequiredBehaviorCode>(Arena*);
template<> ::google::fhir::stu3::proto::ActionSelectionBehaviorCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ActionSelectionBehaviorCode>(Arena*);
template<> ::google::fhir::stu3::proto::ActionTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ActionTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::ActivityDefinitionCategoryCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ActivityDefinitionCategoryCode>(Arena*);
template<> ::google::fhir::stu3::proto::AdministrativeGenderCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::AdministrativeGenderCode>(Arena*);
template<> ::google::fhir::stu3::proto::AdmitSourceCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::AdmitSourceCode>(Arena*);
template<> ::google::fhir::stu3::proto::AdverseEventCategoryCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::AdverseEventCategoryCode>(Arena*);
template<> ::google::fhir::stu3::proto::AdverseEventCausalityAssessmentCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::AdverseEventCausalityAssessmentCode>(Arena*);
template<> ::google::fhir::stu3::proto::AdverseEventCausalityCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::AdverseEventCausalityCode>(Arena*);
template<> ::google::fhir::stu3::proto::AdverseEventCausalityMethodCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::AdverseEventCausalityMethodCode>(Arena*);
template<> ::google::fhir::stu3::proto::AdverseEventCausalityResultCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::AdverseEventCausalityResultCode>(Arena*);
template<> ::google::fhir::stu3::proto::AdverseEventOutcomeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::AdverseEventOutcomeCode>(Arena*);
template<> ::google::fhir::stu3::proto::AdverseEventSeriousnessCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::AdverseEventSeriousnessCode>(Arena*);
template<> ::google::fhir::stu3::proto::AggregationModeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::AggregationModeCode>(Arena*);
template<> ::google::fhir::stu3::proto::AllergyIntoleranceCategoryCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::AllergyIntoleranceCategoryCode>(Arena*);
template<> ::google::fhir::stu3::proto::AllergyIntoleranceCertaintyCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::AllergyIntoleranceCertaintyCode>(Arena*);
template<> ::google::fhir::stu3::proto::AllergyIntoleranceClinicalStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::AllergyIntoleranceClinicalStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::AllergyIntoleranceCriticalityCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::AllergyIntoleranceCriticalityCode>(Arena*);
template<> ::google::fhir::stu3::proto::AllergyIntoleranceSeverityCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::AllergyIntoleranceSeverityCode>(Arena*);
template<> ::google::fhir::stu3::proto::AllergyIntoleranceSubstanceExposureRiskCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::AllergyIntoleranceSubstanceExposureRiskCode>(Arena*);
template<> ::google::fhir::stu3::proto::AllergyIntoleranceTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::AllergyIntoleranceTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::AllergyIntoleranceVerificationStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::AllergyIntoleranceVerificationStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::AppointmentStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::AppointmentStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::AssertionDirectionTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::AssertionDirectionTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::AssertionOperatorTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::AssertionOperatorTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::AssertionResponseTypesCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::AssertionResponseTypesCode>(Arena*);
template<> ::google::fhir::stu3::proto::AuditEventActionCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::AuditEventActionCode>(Arena*);
template<> ::google::fhir::stu3::proto::AuditEventAgentNetworkTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::AuditEventAgentNetworkTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::AuditEventOutcomeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::AuditEventOutcomeCode>(Arena*);
template<> ::google::fhir::stu3::proto::BasicResourceTypesCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::BasicResourceTypesCode>(Arena*);
template<> ::google::fhir::stu3::proto::BindingStrengthCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::BindingStrengthCode>(Arena*);
template<> ::google::fhir::stu3::proto::BundleTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::BundleTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::CapabilityStatementKindCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::CapabilityStatementKindCode>(Arena*);
template<> ::google::fhir::stu3::proto::CarePlanActivityCategoryCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::CarePlanActivityCategoryCode>(Arena*);
template<> ::google::fhir::stu3::proto::CarePlanActivityStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::CarePlanActivityStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::CarePlanIntentCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::CarePlanIntentCode>(Arena*);
template<> ::google::fhir::stu3::proto::CarePlanStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::CarePlanStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::CareTeamCategoryCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::CareTeamCategoryCode>(Arena*);
template<> ::google::fhir::stu3::proto::CareTeamStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::CareTeamStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::ChargeItemStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ChargeItemStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::ChoiceListOrientationCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ChoiceListOrientationCode>(Arena*);
template<> ::google::fhir::stu3::proto::ClaimPayeeResourceTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ClaimPayeeResourceTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::ClassificationOrContextCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ClassificationOrContextCode>(Arena*);
template<> ::google::fhir::stu3::proto::ClinicalImpressionStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ClinicalImpressionStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::CodeSystemContentModeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::CodeSystemContentModeCode>(Arena*);
template<> ::google::fhir::stu3::proto::CodeSystemHierarchyMeaningCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::CodeSystemHierarchyMeaningCode>(Arena*);
template<> ::google::fhir::stu3::proto::CommonTagsCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::CommonTagsCode>(Arena*);
template<> ::google::fhir::stu3::proto::CommunicationCategoryCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::CommunicationCategoryCode>(Arena*);
template<> ::google::fhir::stu3::proto::CommunicationNotDoneReasonCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::CommunicationNotDoneReasonCode>(Arena*);
template<> ::google::fhir::stu3::proto::CompartmentTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::CompartmentTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::CompositeMeasureScoringCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::CompositeMeasureScoringCode>(Arena*);
template<> ::google::fhir::stu3::proto::CompositionAttestationModeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::CompositionAttestationModeCode>(Arena*);
template<> ::google::fhir::stu3::proto::CompositionStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::CompositionStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::ConceptMapEquivalenceCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ConceptMapEquivalenceCode>(Arena*);
template<> ::google::fhir::stu3::proto::ConceptMapGroupUnmappedModeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ConceptMapGroupUnmappedModeCode>(Arena*);
template<> ::google::fhir::stu3::proto::ConditionCategoryCodesCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ConditionCategoryCodesCode>(Arena*);
template<> ::google::fhir::stu3::proto::ConditionClinicalStatusCodesCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ConditionClinicalStatusCodesCode>(Arena*);
template<> ::google::fhir::stu3::proto::ConditionStateCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ConditionStateCode>(Arena*);
template<> ::google::fhir::stu3::proto::ConditionVerificationStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ConditionVerificationStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::ConditionalDeleteStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ConditionalDeleteStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::ConditionalReadStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ConditionalReadStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::ConfidentialityClassificationCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ConfidentialityClassificationCode>(Arena*);
template<> ::google::fhir::stu3::proto::ConformanceExpectationCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ConformanceExpectationCode>(Arena*);
template<> ::google::fhir::stu3::proto::ConsentDataMeaningCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ConsentDataMeaningCode>(Arena*);
template<> ::google::fhir::stu3::proto::ConsentExceptTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ConsentExceptTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::ConsentStateCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ConsentStateCode>(Arena*);
template<> ::google::fhir::stu3::proto::ConstraintSeverityCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ConstraintSeverityCode>(Arena*);
template<> ::google::fhir::stu3::proto::ContactEntityTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ContactEntityTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::ContentTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ContentTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::ContractResourceStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ContractResourceStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::ContributorTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ContributorTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::CopyNumberEventCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::CopyNumberEventCode>(Arena*);
template<> ::google::fhir::stu3::proto::DataAbsentReasonCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::DataAbsentReasonCode>(Arena*);
template<> ::google::fhir::stu3::proto::DataElementStringencyCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::DataElementStringencyCode>(Arena*);
template<> ::google::fhir::stu3::proto::DataTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::DataTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::DefinitionStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::DefinitionStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::DefinitionTopicCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::DefinitionTopicCode>(Arena*);
template<> ::google::fhir::stu3::proto::DetectedIssueSeverityCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::DetectedIssueSeverityCode>(Arena*);
template<> ::google::fhir::stu3::proto::DeviceComponentOperationalStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::DeviceComponentOperationalStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::DeviceComponentParameterGroupCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::DeviceComponentParameterGroupCode>(Arena*);
template<> ::google::fhir::stu3::proto::DeviceMetricCalibrationStateCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::DeviceMetricCalibrationStateCode>(Arena*);
template<> ::google::fhir::stu3::proto::DeviceMetricCalibrationTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::DeviceMetricCalibrationTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::DeviceMetricCategoryCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::DeviceMetricCategoryCode>(Arena*);
template<> ::google::fhir::stu3::proto::DeviceMetricColorCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::DeviceMetricColorCode>(Arena*);
template<> ::google::fhir::stu3::proto::DeviceMetricOperationalStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::DeviceMetricOperationalStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::DeviceSpecificationSpecTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::DeviceSpecificationSpecTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::DeviceUseStatementStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::DeviceUseStatementStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::DiagnosisRoleCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::DiagnosisRoleCode>(Arena*);
template<> ::google::fhir::stu3::proto::DiagnosticReportStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::DiagnosticReportStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::DietCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::DietCode>(Arena*);
template<> ::google::fhir::stu3::proto::DigitalMediaTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::DigitalMediaTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::DischargeDispositionCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::DischargeDispositionCode>(Arena*);
template<> ::google::fhir::stu3::proto::DiscriminatorTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::DiscriminatorTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::DocumentModeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::DocumentModeCode>(Arena*);
template<> ::google::fhir::stu3::proto::DocumentReferenceStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::DocumentReferenceStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::DocumentRelationshipTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::DocumentRelationshipTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::EncounterLocationStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::EncounterLocationStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::EncounterStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::EncounterStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::EncounterTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::EncounterTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::EndpointStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::EndpointStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::EnteralFormulaAdditiveTypeCodeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::EnteralFormulaAdditiveTypeCodeCode>(Arena*);
template<> ::google::fhir::stu3::proto::EntityNamePartQualifierCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::EntityNamePartQualifierCode>(Arena*);
template<> ::google::fhir::stu3::proto::EpisodeOfCareStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::EpisodeOfCareStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::EpisodeOfCareTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::EpisodeOfCareTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::EventCapabilityModeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::EventCapabilityModeCode>(Arena*);
template<> ::google::fhir::stu3::proto::EventStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::EventStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::ExampleMessageReasonCodesCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ExampleMessageReasonCodesCode>(Arena*);
template<> ::google::fhir::stu3::proto::ExampleUseCodesforListCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ExampleUseCodesforListCode>(Arena*);
template<> ::google::fhir::stu3::proto::ExplanationOfBenefitStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ExplanationOfBenefitStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::ExtensionContextCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ExtensionContextCode>(Arena*);
template<> ::google::fhir::stu3::proto::FHIRAllTypesCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::FHIRAllTypesCode>(Arena*);
template<> ::google::fhir::stu3::proto::FHIRDefinedTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::FHIRDefinedTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::FHIRDefinedTypeExtCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::FHIRDefinedTypeExtCode>(Arena*);
template<> ::google::fhir::stu3::proto::FHIRDeviceStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::FHIRDeviceStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::FHIRSubstanceStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::FHIRSubstanceStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::FamilyHistoryNotDoneReasonCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::FamilyHistoryNotDoneReasonCode>(Arena*);
template<> ::google::fhir::stu3::proto::FamilyHistoryStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::FamilyHistoryStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::FilterOperatorCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::FilterOperatorCode>(Arena*);
template<> ::google::fhir::stu3::proto::FinancialResourceStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::FinancialResourceStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::FlagCategoryCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::FlagCategoryCode>(Arena*);
template<> ::google::fhir::stu3::proto::FlagPriorityCodesCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::FlagPriorityCodesCode>(Arena*);
template<> ::google::fhir::stu3::proto::FlagStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::FlagStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::GenderStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::GenderStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::GoalAcceptanceStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::GoalAcceptanceStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::GoalCategoryCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::GoalCategoryCode>(Arena*);
template<> ::google::fhir::stu3::proto::GoalPriorityCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::GoalPriorityCode>(Arena*);
template<> ::google::fhir::stu3::proto::GoalRelationshipTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::GoalRelationshipTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::GoalStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::GoalStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::GoalStatusReasonCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::GoalStatusReasonCode>(Arena*);
template<> ::google::fhir::stu3::proto::GraphCompartmentRuleCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::GraphCompartmentRuleCode>(Arena*);
template<> ::google::fhir::stu3::proto::GroupTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::GroupTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::GuidanceResponseStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::GuidanceResponseStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::GuideDependencyTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::GuideDependencyTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::GuidePageKindCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::GuidePageKindCode>(Arena*);
template<> ::google::fhir::stu3::proto::HL7WorkgroupCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::HL7WorkgroupCode>(Arena*);
template<> ::google::fhir::stu3::proto::HTTPVerbCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::HTTPVerbCode>(Arena*);
template<> ::google::fhir::stu3::proto::HumanNameAssemblyOrderCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::HumanNameAssemblyOrderCode>(Arena*);
template<> ::google::fhir::stu3::proto::IdentityAssuranceLevelCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::IdentityAssuranceLevelCode>(Arena*);
template<> ::google::fhir::stu3::proto::ImmunizationOriginCodesCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ImmunizationOriginCodesCode>(Arena*);
template<> ::google::fhir::stu3::proto::ImmunizationRecommendationDateCriterionCodesCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ImmunizationRecommendationDateCriterionCodesCode>(Arena*);
template<> ::google::fhir::stu3::proto::ImmunizationRecommendationStatusCodesCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ImmunizationRecommendationStatusCodesCode>(Arena*);
template<> ::google::fhir::stu3::proto::ImmunizationStatusCodesCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ImmunizationStatusCodesCode>(Arena*);
template<> ::google::fhir::stu3::proto::ImplantStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ImplantStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::InstanceAvailabilityCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::InstanceAvailabilityCode>(Arena*);
template<> ::google::fhir::stu3::proto::IssueSeverityCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::IssueSeverityCode>(Arena*);
template<> ::google::fhir::stu3::proto::IssueTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::IssueTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::LibraryTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::LibraryTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::LinkTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::LinkTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::LinkageTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::LinkageTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::ListEmptyReasonsCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ListEmptyReasonsCode>(Arena*);
template<> ::google::fhir::stu3::proto::ListModeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ListModeCode>(Arena*);
template<> ::google::fhir::stu3::proto::ListOrderCodesCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ListOrderCodesCode>(Arena*);
template<> ::google::fhir::stu3::proto::ListStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ListStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::LocationModeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::LocationModeCode>(Arena*);
template<> ::google::fhir::stu3::proto::LocationStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::LocationStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::LocationTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::LocationTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::MatchGradeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::MatchGradeCode>(Arena*);
template<> ::google::fhir::stu3::proto::MaxOccursCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::MaxOccursCode>(Arena*);
template<> ::google::fhir::stu3::proto::MeasmntPrincipleCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::MeasmntPrincipleCode>(Arena*);
template<> ::google::fhir::stu3::proto::MeasureDataUsageCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::MeasureDataUsageCode>(Arena*);
template<> ::google::fhir::stu3::proto::MeasurePopulationTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::MeasurePopulationTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::MeasureReportStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::MeasureReportStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::MeasureReportTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::MeasureReportTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::MeasureScoringCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::MeasureScoringCode>(Arena*);
template<> ::google::fhir::stu3::proto::MeasureTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::MeasureTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::MedicationAdministrationCategoryCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::MedicationAdministrationCategoryCode>(Arena*);
template<> ::google::fhir::stu3::proto::MedicationAdministrationStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::MedicationAdministrationStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::MedicationContainerCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::MedicationContainerCode>(Arena*);
template<> ::google::fhir::stu3::proto::MedicationDispenseCategoryCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::MedicationDispenseCategoryCode>(Arena*);
template<> ::google::fhir::stu3::proto::MedicationDispenseStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::MedicationDispenseStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::MedicationRequestCategoryCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::MedicationRequestCategoryCode>(Arena*);
template<> ::google::fhir::stu3::proto::MedicationRequestIntentCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::MedicationRequestIntentCode>(Arena*);
template<> ::google::fhir::stu3::proto::MedicationRequestPriorityCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::MedicationRequestPriorityCode>(Arena*);
template<> ::google::fhir::stu3::proto::MedicationRequestStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::MedicationRequestStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::MedicationStatementCategoryCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::MedicationStatementCategoryCode>(Arena*);
template<> ::google::fhir::stu3::proto::MedicationStatementStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::MedicationStatementStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::MedicationStatementTakenCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::MedicationStatementTakenCode>(Arena*);
template<> ::google::fhir::stu3::proto::MedicationStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::MedicationStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::MessageEventCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::MessageEventCode>(Arena*);
template<> ::google::fhir::stu3::proto::MessageHeaderResponseRequestCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::MessageHeaderResponseRequestCode>(Arena*);
template<> ::google::fhir::stu3::proto::MessageSignificanceCategoryCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::MessageSignificanceCategoryCode>(Arena*);
template<> ::google::fhir::stu3::proto::MessageTransportCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::MessageTransportCode>(Arena*);
template<> ::google::fhir::stu3::proto::NameRepresentationUseCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::NameRepresentationUseCode>(Arena*);
template<> ::google::fhir::stu3::proto::NamingSystemIdentifierTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::NamingSystemIdentifierTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::NamingSystemTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::NamingSystemTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::NarrativeStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::NarrativeStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::NoteTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::NoteTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::NullFlavorCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::NullFlavorCode>(Arena*);
template<> ::google::fhir::stu3::proto::NutritionOrderStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::NutritionOrderStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::ObservationCategoryCodesCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ObservationCategoryCodesCode>(Arena*);
template<> ::google::fhir::stu3::proto::ObservationReferenceRangeMeaningCodesCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ObservationReferenceRangeMeaningCodesCode>(Arena*);
template<> ::google::fhir::stu3::proto::ObservationRelationshipTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ObservationRelationshipTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::ObservationStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ObservationStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::OperationKindCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::OperationKindCode>(Arena*);
template<> ::google::fhir::stu3::proto::OperationOutcomeCodesCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::OperationOutcomeCodesCode>(Arena*);
template<> ::google::fhir::stu3::proto::OperationParameterUseCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::OperationParameterUseCode>(Arena*);
template<> ::google::fhir::stu3::proto::OrganizationTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::OrganizationTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::ParticipantRequiredCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ParticipantRequiredCode>(Arena*);
template<> ::google::fhir::stu3::proto::ParticipationStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ParticipationStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::PayeeResourceTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::PayeeResourceTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::PlanDefinitionTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::PlanDefinitionTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::PostalAddressUseTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::PostalAddressUseTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::PractitionerRoleCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::PractitionerRoleCode>(Arena*);
template<> ::google::fhir::stu3::proto::PractitionerSpecialtyCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::PractitionerSpecialtyCode>(Arena*);
template<> ::google::fhir::stu3::proto::ProbabilityDistributionTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ProbabilityDistributionTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::ProcedureProgressStatusCodesCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ProcedureProgressStatusCodesCode>(Arena*);
template<> ::google::fhir::stu3::proto::PropertyRepresentationCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::PropertyRepresentationCode>(Arena*);
template<> ::google::fhir::stu3::proto::PropertyTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::PropertyTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::ProvenanceEntityRoleCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ProvenanceEntityRoleCode>(Arena*);
template<> ::google::fhir::stu3::proto::PublicationStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::PublicationStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::QualityTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::QualityTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::QuestionnaireItemTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::QuestionnaireItemTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::QuestionnaireItemUIControlCodesCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::QuestionnaireItemUIControlCodesCode>(Arena*);
template<> ::google::fhir::stu3::proto::QuestionnaireItemUsageModeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::QuestionnaireItemUsageModeCode>(Arena*);
template<> ::google::fhir::stu3::proto::QuestionnaireResponseStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::QuestionnaireResponseStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::QuestionnaireTextCategoriesCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::QuestionnaireTextCategoriesCode>(Arena*);
template<> ::google::fhir::stu3::proto::ReasonMedicationGivenCodesCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ReasonMedicationGivenCodesCode>(Arena*);
template<> ::google::fhir::stu3::proto::ReferenceHandlingPolicyCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ReferenceHandlingPolicyCode>(Arena*);
template<> ::google::fhir::stu3::proto::ReferenceVersionRulesCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ReferenceVersionRulesCode>(Arena*);
template<> ::google::fhir::stu3::proto::ReferralMethodCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ReferralMethodCode>(Arena*);
template<> ::google::fhir::stu3::proto::RelatedArtifactTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::RelatedArtifactTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::RepositoryTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::RepositoryTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::RequestIntentCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::RequestIntentCode>(Arena*);
template<> ::google::fhir::stu3::proto::RequestPriorityCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::RequestPriorityCode>(Arena*);
template<> ::google::fhir::stu3::proto::RequestStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::RequestStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::ResearchStudyStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ResearchStudyStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::ResearchSubjectStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ResearchSubjectStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::ResourceTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ResourceTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::ResourceValidationModeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ResourceValidationModeCode>(Arena*);
template<> ::google::fhir::stu3::proto::ResourceVersionPolicyCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ResourceVersionPolicyCode>(Arena*);
template<> ::google::fhir::stu3::proto::ResponseTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ResponseTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::RestfulCapabilityModeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::RestfulCapabilityModeCode>(Arena*);
template<> ::google::fhir::stu3::proto::RestfulSecurityServiceCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::RestfulSecurityServiceCode>(Arena*);
template<> ::google::fhir::stu3::proto::RiskProbabilityCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::RiskProbabilityCode>(Arena*);
template<> ::google::fhir::stu3::proto::SearchComparatorCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::SearchComparatorCode>(Arena*);
template<> ::google::fhir::stu3::proto::SearchEntryModeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::SearchEntryModeCode>(Arena*);
template<> ::google::fhir::stu3::proto::SearchModifierCodeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::SearchModifierCodeCode>(Arena*);
template<> ::google::fhir::stu3::proto::SearchParamTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::SearchParamTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::SequenceTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::SequenceTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::ServiceProvisionConditionsCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ServiceProvisionConditionsCode>(Arena*);
template<> ::google::fhir::stu3::proto::SlicingRulesCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::SlicingRulesCode>(Arena*);
template<> ::google::fhir::stu3::proto::SlotStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::SlotStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::SpecialArrangementsCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::SpecialArrangementsCode>(Arena*);
template<> ::google::fhir::stu3::proto::SpecialValuesCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::SpecialValuesCode>(Arena*);
template<> ::google::fhir::stu3::proto::SpecimenStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::SpecimenStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::StatisticsCodeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::StatisticsCodeCode>(Arena*);
template<> ::google::fhir::stu3::proto::StructureDefinitionKindCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::StructureDefinitionKindCode>(Arena*);
template<> ::google::fhir::stu3::proto::StructureMapContextTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::StructureMapContextTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::StructureMapGroupTypeModeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::StructureMapGroupTypeModeCode>(Arena*);
template<> ::google::fhir::stu3::proto::StructureMapInputModeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::StructureMapInputModeCode>(Arena*);
template<> ::google::fhir::stu3::proto::StructureMapModelModeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::StructureMapModelModeCode>(Arena*);
template<> ::google::fhir::stu3::proto::StructureMapSourceListModeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::StructureMapSourceListModeCode>(Arena*);
template<> ::google::fhir::stu3::proto::StructureMapTargetListModeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::StructureMapTargetListModeCode>(Arena*);
template<> ::google::fhir::stu3::proto::StructureMapTransformCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::StructureMapTransformCode>(Arena*);
template<> ::google::fhir::stu3::proto::SubscriptionChannelTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::SubscriptionChannelTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::SubscriptionStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::SubscriptionStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::SubscriptionTagCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::SubscriptionTagCode>(Arena*);
template<> ::google::fhir::stu3::proto::SubstanceCategoryCodesCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::SubstanceCategoryCodesCode>(Arena*);
template<> ::google::fhir::stu3::proto::SupplyDeliveryStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::SupplyDeliveryStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::SupplyItemTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::SupplyItemTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::SupplyRequestReasonCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::SupplyRequestReasonCode>(Arena*);
template<> ::google::fhir::stu3::proto::SupplyRequestStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::SupplyRequestStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::SupplyTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::SupplyTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::SystemRestfulInteractionCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::SystemRestfulInteractionCode>(Arena*);
template<> ::google::fhir::stu3::proto::SystemVersionProcessingModeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::SystemVersionProcessingModeCode>(Arena*);
template<> ::google::fhir::stu3::proto::TaskPerformerTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::TaskPerformerTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::TaskStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::TaskStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::TemplateStatusCodeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::TemplateStatusCodeCode>(Arena*);
template<> ::google::fhir::stu3::proto::TestReportActionResultCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::TestReportActionResultCode>(Arena*);
template<> ::google::fhir::stu3::proto::TestReportParticipantTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::TestReportParticipantTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::TestReportResultCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::TestReportResultCode>(Arena*);
template<> ::google::fhir::stu3::proto::TestReportStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::TestReportStatusCode>(Arena*);
template<> ::google::fhir::stu3::proto::TestScriptOperationCodeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::TestScriptOperationCodeCode>(Arena*);
template<> ::google::fhir::stu3::proto::TestScriptProfileDestinationTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::TestScriptProfileDestinationTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::TestScriptProfileOriginTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::TestScriptProfileOriginTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::TestScriptRequestMethodCodeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::TestScriptRequestMethodCodeCode>(Arena*);
template<> ::google::fhir::stu3::proto::TransactionModeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::TransactionModeCode>(Arena*);
template<> ::google::fhir::stu3::proto::TriggerTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::TriggerTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::TypeDerivationRuleCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::TypeDerivationRuleCode>(Arena*);
template<> ::google::fhir::stu3::proto::TypeRestfulInteractionCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::TypeRestfulInteractionCode>(Arena*);
template<> ::google::fhir::stu3::proto::UDIEntryTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::UDIEntryTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::UnknownContentCodeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::UnknownContentCodeCode>(Arena*);
template<> ::google::fhir::stu3::proto::UsageContextTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::UsageContextTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::UseCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::UseCode>(Arena*);
template<> ::google::fhir::stu3::proto::VaccinationProtocolDoseStatusReasoncodesCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::VaccinationProtocolDoseStatusReasoncodesCode>(Arena*);
template<> ::google::fhir::stu3::proto::VaccinationProtocolDoseStatuscodesCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::VaccinationProtocolDoseStatuscodesCode>(Arena*);
template<> ::google::fhir::stu3::proto::VisionBaseCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::VisionBaseCode>(Arena*);
template<> ::google::fhir::stu3::proto::VisionEyesCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::VisionEyesCode>(Arena*);
template<> ::google::fhir::stu3::proto::XPathUsageTypeCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::XPathUsageTypeCode>(Arena*);
template<> ::google::fhir::stu3::proto::sequenceStatusCode* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::sequenceStatusCode>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace fhir {
namespace stu3 {
namespace proto {

enum AbstractTypeCode_Value {
  AbstractTypeCode_Value_INVALID_UNINITIALIZED = 0,
  AbstractTypeCode_Value_TYPE = 1,
  AbstractTypeCode_Value_ANY = 2,
  AbstractTypeCode_Value_AbstractTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AbstractTypeCode_Value_AbstractTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AbstractTypeCode_Value_IsValid(int value);
const AbstractTypeCode_Value AbstractTypeCode_Value_Value_MIN = AbstractTypeCode_Value_INVALID_UNINITIALIZED;
const AbstractTypeCode_Value AbstractTypeCode_Value_Value_MAX = AbstractTypeCode_Value_ANY;
const int AbstractTypeCode_Value_Value_ARRAYSIZE = AbstractTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* AbstractTypeCode_Value_descriptor();
inline const ::std::string& AbstractTypeCode_Value_Name(AbstractTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    AbstractTypeCode_Value_descriptor(), value);
}
inline bool AbstractTypeCode_Value_Parse(
    const ::std::string& name, AbstractTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AbstractTypeCode_Value>(
    AbstractTypeCode_Value_descriptor(), name, value);
}
enum AggregationModeCode_Value {
  AggregationModeCode_Value_INVALID_UNINITIALIZED = 0,
  AggregationModeCode_Value_CONTAINED = 1,
  AggregationModeCode_Value_REFERENCED = 2,
  AggregationModeCode_Value_BUNDLED = 3,
  AggregationModeCode_Value_AggregationModeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AggregationModeCode_Value_AggregationModeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AggregationModeCode_Value_IsValid(int value);
const AggregationModeCode_Value AggregationModeCode_Value_Value_MIN = AggregationModeCode_Value_INVALID_UNINITIALIZED;
const AggregationModeCode_Value AggregationModeCode_Value_Value_MAX = AggregationModeCode_Value_BUNDLED;
const int AggregationModeCode_Value_Value_ARRAYSIZE = AggregationModeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* AggregationModeCode_Value_descriptor();
inline const ::std::string& AggregationModeCode_Value_Name(AggregationModeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    AggregationModeCode_Value_descriptor(), value);
}
inline bool AggregationModeCode_Value_Parse(
    const ::std::string& name, AggregationModeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AggregationModeCode_Value>(
    AggregationModeCode_Value_descriptor(), name, value);
}
enum BindingStrengthCode_Value {
  BindingStrengthCode_Value_INVALID_UNINITIALIZED = 0,
  BindingStrengthCode_Value_REQUIRED = 1,
  BindingStrengthCode_Value_EXTENSIBLE = 2,
  BindingStrengthCode_Value_PREFERRED = 3,
  BindingStrengthCode_Value_EXAMPLE = 4,
  BindingStrengthCode_Value_BindingStrengthCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BindingStrengthCode_Value_BindingStrengthCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BindingStrengthCode_Value_IsValid(int value);
const BindingStrengthCode_Value BindingStrengthCode_Value_Value_MIN = BindingStrengthCode_Value_INVALID_UNINITIALIZED;
const BindingStrengthCode_Value BindingStrengthCode_Value_Value_MAX = BindingStrengthCode_Value_EXAMPLE;
const int BindingStrengthCode_Value_Value_ARRAYSIZE = BindingStrengthCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* BindingStrengthCode_Value_descriptor();
inline const ::std::string& BindingStrengthCode_Value_Name(BindingStrengthCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    BindingStrengthCode_Value_descriptor(), value);
}
inline bool BindingStrengthCode_Value_Parse(
    const ::std::string& name, BindingStrengthCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BindingStrengthCode_Value>(
    BindingStrengthCode_Value_descriptor(), name, value);
}
enum ConstraintSeverityCode_Value {
  ConstraintSeverityCode_Value_INVALID_UNINITIALIZED = 0,
  ConstraintSeverityCode_Value_ERROR = 1,
  ConstraintSeverityCode_Value_WARNING = 2,
  ConstraintSeverityCode_Value_ConstraintSeverityCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ConstraintSeverityCode_Value_ConstraintSeverityCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ConstraintSeverityCode_Value_IsValid(int value);
const ConstraintSeverityCode_Value ConstraintSeverityCode_Value_Value_MIN = ConstraintSeverityCode_Value_INVALID_UNINITIALIZED;
const ConstraintSeverityCode_Value ConstraintSeverityCode_Value_Value_MAX = ConstraintSeverityCode_Value_WARNING;
const int ConstraintSeverityCode_Value_Value_ARRAYSIZE = ConstraintSeverityCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConstraintSeverityCode_Value_descriptor();
inline const ::std::string& ConstraintSeverityCode_Value_Name(ConstraintSeverityCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConstraintSeverityCode_Value_descriptor(), value);
}
inline bool ConstraintSeverityCode_Value_Parse(
    const ::std::string& name, ConstraintSeverityCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConstraintSeverityCode_Value>(
    ConstraintSeverityCode_Value_descriptor(), name, value);
}
enum SlicingRulesCode_Value {
  SlicingRulesCode_Value_INVALID_UNINITIALIZED = 0,
  SlicingRulesCode_Value_CLOSED = 1,
  SlicingRulesCode_Value_OPEN = 2,
  SlicingRulesCode_Value_OPEN_AT_END = 3,
  SlicingRulesCode_Value_SlicingRulesCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SlicingRulesCode_Value_SlicingRulesCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SlicingRulesCode_Value_IsValid(int value);
const SlicingRulesCode_Value SlicingRulesCode_Value_Value_MIN = SlicingRulesCode_Value_INVALID_UNINITIALIZED;
const SlicingRulesCode_Value SlicingRulesCode_Value_Value_MAX = SlicingRulesCode_Value_OPEN_AT_END;
const int SlicingRulesCode_Value_Value_ARRAYSIZE = SlicingRulesCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* SlicingRulesCode_Value_descriptor();
inline const ::std::string& SlicingRulesCode_Value_Name(SlicingRulesCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    SlicingRulesCode_Value_descriptor(), value);
}
inline bool SlicingRulesCode_Value_Parse(
    const ::std::string& name, SlicingRulesCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SlicingRulesCode_Value>(
    SlicingRulesCode_Value_descriptor(), name, value);
}
enum DiscriminatorTypeCode_Value {
  DiscriminatorTypeCode_Value_INVALID_UNINITIALIZED = 0,
  DiscriminatorTypeCode_Value_VALUE = 1,
  DiscriminatorTypeCode_Value_EXISTS = 2,
  DiscriminatorTypeCode_Value_PATTERN = 3,
  DiscriminatorTypeCode_Value_TYPE = 4,
  DiscriminatorTypeCode_Value_PROFILE = 5,
  DiscriminatorTypeCode_Value_DiscriminatorTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DiscriminatorTypeCode_Value_DiscriminatorTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DiscriminatorTypeCode_Value_IsValid(int value);
const DiscriminatorTypeCode_Value DiscriminatorTypeCode_Value_Value_MIN = DiscriminatorTypeCode_Value_INVALID_UNINITIALIZED;
const DiscriminatorTypeCode_Value DiscriminatorTypeCode_Value_Value_MAX = DiscriminatorTypeCode_Value_PROFILE;
const int DiscriminatorTypeCode_Value_Value_ARRAYSIZE = DiscriminatorTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* DiscriminatorTypeCode_Value_descriptor();
inline const ::std::string& DiscriminatorTypeCode_Value_Name(DiscriminatorTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    DiscriminatorTypeCode_Value_descriptor(), value);
}
inline bool DiscriminatorTypeCode_Value_Parse(
    const ::std::string& name, DiscriminatorTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DiscriminatorTypeCode_Value>(
    DiscriminatorTypeCode_Value_descriptor(), name, value);
}
enum PropertyRepresentationCode_Value {
  PropertyRepresentationCode_Value_INVALID_UNINITIALIZED = 0,
  PropertyRepresentationCode_Value_XML_ATTR = 1,
  PropertyRepresentationCode_Value_XML_TEXT = 2,
  PropertyRepresentationCode_Value_TYPE_ATTR = 3,
  PropertyRepresentationCode_Value_CDA_TEXT = 4,
  PropertyRepresentationCode_Value_XHTML = 5,
  PropertyRepresentationCode_Value_PropertyRepresentationCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PropertyRepresentationCode_Value_PropertyRepresentationCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PropertyRepresentationCode_Value_IsValid(int value);
const PropertyRepresentationCode_Value PropertyRepresentationCode_Value_Value_MIN = PropertyRepresentationCode_Value_INVALID_UNINITIALIZED;
const PropertyRepresentationCode_Value PropertyRepresentationCode_Value_Value_MAX = PropertyRepresentationCode_Value_XHTML;
const int PropertyRepresentationCode_Value_Value_ARRAYSIZE = PropertyRepresentationCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* PropertyRepresentationCode_Value_descriptor();
inline const ::std::string& PropertyRepresentationCode_Value_Name(PropertyRepresentationCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    PropertyRepresentationCode_Value_descriptor(), value);
}
inline bool PropertyRepresentationCode_Value_Parse(
    const ::std::string& name, PropertyRepresentationCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PropertyRepresentationCode_Value>(
    PropertyRepresentationCode_Value_descriptor(), name, value);
}
enum ReferenceVersionRulesCode_Value {
  ReferenceVersionRulesCode_Value_INVALID_UNINITIALIZED = 0,
  ReferenceVersionRulesCode_Value_EITHER = 1,
  ReferenceVersionRulesCode_Value_INDEPENDENT = 2,
  ReferenceVersionRulesCode_Value_SPECIFIC = 3,
  ReferenceVersionRulesCode_Value_ReferenceVersionRulesCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ReferenceVersionRulesCode_Value_ReferenceVersionRulesCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ReferenceVersionRulesCode_Value_IsValid(int value);
const ReferenceVersionRulesCode_Value ReferenceVersionRulesCode_Value_Value_MIN = ReferenceVersionRulesCode_Value_INVALID_UNINITIALIZED;
const ReferenceVersionRulesCode_Value ReferenceVersionRulesCode_Value_Value_MAX = ReferenceVersionRulesCode_Value_SPECIFIC;
const int ReferenceVersionRulesCode_Value_Value_ARRAYSIZE = ReferenceVersionRulesCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReferenceVersionRulesCode_Value_descriptor();
inline const ::std::string& ReferenceVersionRulesCode_Value_Name(ReferenceVersionRulesCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReferenceVersionRulesCode_Value_descriptor(), value);
}
inline bool ReferenceVersionRulesCode_Value_Parse(
    const ::std::string& name, ReferenceVersionRulesCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReferenceVersionRulesCode_Value>(
    ReferenceVersionRulesCode_Value_descriptor(), name, value);
}
enum AccountStatusCode_Value {
  AccountStatusCode_Value_INVALID_UNINITIALIZED = 0,
  AccountStatusCode_Value_ACTIVE = 1,
  AccountStatusCode_Value_INACTIVE = 2,
  AccountStatusCode_Value_ENTERED_IN_ERROR = 3,
  AccountStatusCode_Value_AccountStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AccountStatusCode_Value_AccountStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AccountStatusCode_Value_IsValid(int value);
const AccountStatusCode_Value AccountStatusCode_Value_Value_MIN = AccountStatusCode_Value_INVALID_UNINITIALIZED;
const AccountStatusCode_Value AccountStatusCode_Value_Value_MAX = AccountStatusCode_Value_ENTERED_IN_ERROR;
const int AccountStatusCode_Value_Value_ARRAYSIZE = AccountStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* AccountStatusCode_Value_descriptor();
inline const ::std::string& AccountStatusCode_Value_Name(AccountStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    AccountStatusCode_Value_descriptor(), value);
}
inline bool AccountStatusCode_Value_Parse(
    const ::std::string& name, AccountStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AccountStatusCode_Value>(
    AccountStatusCode_Value_descriptor(), name, value);
}
enum ActionCardinalityBehaviorCode_Value {
  ActionCardinalityBehaviorCode_Value_INVALID_UNINITIALIZED = 0,
  ActionCardinalityBehaviorCode_Value_SINGLE = 1,
  ActionCardinalityBehaviorCode_Value_MULTIPLE = 2,
  ActionCardinalityBehaviorCode_Value_ActionCardinalityBehaviorCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ActionCardinalityBehaviorCode_Value_ActionCardinalityBehaviorCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ActionCardinalityBehaviorCode_Value_IsValid(int value);
const ActionCardinalityBehaviorCode_Value ActionCardinalityBehaviorCode_Value_Value_MIN = ActionCardinalityBehaviorCode_Value_INVALID_UNINITIALIZED;
const ActionCardinalityBehaviorCode_Value ActionCardinalityBehaviorCode_Value_Value_MAX = ActionCardinalityBehaviorCode_Value_MULTIPLE;
const int ActionCardinalityBehaviorCode_Value_Value_ARRAYSIZE = ActionCardinalityBehaviorCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ActionCardinalityBehaviorCode_Value_descriptor();
inline const ::std::string& ActionCardinalityBehaviorCode_Value_Name(ActionCardinalityBehaviorCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ActionCardinalityBehaviorCode_Value_descriptor(), value);
}
inline bool ActionCardinalityBehaviorCode_Value_Parse(
    const ::std::string& name, ActionCardinalityBehaviorCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ActionCardinalityBehaviorCode_Value>(
    ActionCardinalityBehaviorCode_Value_descriptor(), name, value);
}
enum ActionConditionKindCode_Value {
  ActionConditionKindCode_Value_INVALID_UNINITIALIZED = 0,
  ActionConditionKindCode_Value_APPLICABILITY = 1,
  ActionConditionKindCode_Value_START = 2,
  ActionConditionKindCode_Value_STOP = 3,
  ActionConditionKindCode_Value_ActionConditionKindCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ActionConditionKindCode_Value_ActionConditionKindCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ActionConditionKindCode_Value_IsValid(int value);
const ActionConditionKindCode_Value ActionConditionKindCode_Value_Value_MIN = ActionConditionKindCode_Value_INVALID_UNINITIALIZED;
const ActionConditionKindCode_Value ActionConditionKindCode_Value_Value_MAX = ActionConditionKindCode_Value_STOP;
const int ActionConditionKindCode_Value_Value_ARRAYSIZE = ActionConditionKindCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ActionConditionKindCode_Value_descriptor();
inline const ::std::string& ActionConditionKindCode_Value_Name(ActionConditionKindCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ActionConditionKindCode_Value_descriptor(), value);
}
inline bool ActionConditionKindCode_Value_Parse(
    const ::std::string& name, ActionConditionKindCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ActionConditionKindCode_Value>(
    ActionConditionKindCode_Value_descriptor(), name, value);
}
enum ActionGroupingBehaviorCode_Value {
  ActionGroupingBehaviorCode_Value_INVALID_UNINITIALIZED = 0,
  ActionGroupingBehaviorCode_Value_VISUAL_GROUP = 1,
  ActionGroupingBehaviorCode_Value_LOGICAL_GROUP = 2,
  ActionGroupingBehaviorCode_Value_SENTENCE_GROUP = 3,
  ActionGroupingBehaviorCode_Value_ActionGroupingBehaviorCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ActionGroupingBehaviorCode_Value_ActionGroupingBehaviorCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ActionGroupingBehaviorCode_Value_IsValid(int value);
const ActionGroupingBehaviorCode_Value ActionGroupingBehaviorCode_Value_Value_MIN = ActionGroupingBehaviorCode_Value_INVALID_UNINITIALIZED;
const ActionGroupingBehaviorCode_Value ActionGroupingBehaviorCode_Value_Value_MAX = ActionGroupingBehaviorCode_Value_SENTENCE_GROUP;
const int ActionGroupingBehaviorCode_Value_Value_ARRAYSIZE = ActionGroupingBehaviorCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ActionGroupingBehaviorCode_Value_descriptor();
inline const ::std::string& ActionGroupingBehaviorCode_Value_Name(ActionGroupingBehaviorCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ActionGroupingBehaviorCode_Value_descriptor(), value);
}
inline bool ActionGroupingBehaviorCode_Value_Parse(
    const ::std::string& name, ActionGroupingBehaviorCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ActionGroupingBehaviorCode_Value>(
    ActionGroupingBehaviorCode_Value_descriptor(), name, value);
}
enum ActionListCode_Value {
  ActionListCode_Value_INVALID_UNINITIALIZED = 0,
  ActionListCode_Value_CANCEL = 1,
  ActionListCode_Value_POLL = 2,
  ActionListCode_Value_REPROCESS = 3,
  ActionListCode_Value_STATUS = 4,
  ActionListCode_Value_ActionListCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ActionListCode_Value_ActionListCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ActionListCode_Value_IsValid(int value);
const ActionListCode_Value ActionListCode_Value_Value_MIN = ActionListCode_Value_INVALID_UNINITIALIZED;
const ActionListCode_Value ActionListCode_Value_Value_MAX = ActionListCode_Value_STATUS;
const int ActionListCode_Value_Value_ARRAYSIZE = ActionListCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ActionListCode_Value_descriptor();
inline const ::std::string& ActionListCode_Value_Name(ActionListCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ActionListCode_Value_descriptor(), value);
}
inline bool ActionListCode_Value_Parse(
    const ::std::string& name, ActionListCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ActionListCode_Value>(
    ActionListCode_Value_descriptor(), name, value);
}
enum ActionParticipantTypeCode_Value {
  ActionParticipantTypeCode_Value_INVALID_UNINITIALIZED = 0,
  ActionParticipantTypeCode_Value_PATIENT = 1,
  ActionParticipantTypeCode_Value_PRACTITIONER = 2,
  ActionParticipantTypeCode_Value_RELATED_PERSON = 3,
  ActionParticipantTypeCode_Value_ActionParticipantTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ActionParticipantTypeCode_Value_ActionParticipantTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ActionParticipantTypeCode_Value_IsValid(int value);
const ActionParticipantTypeCode_Value ActionParticipantTypeCode_Value_Value_MIN = ActionParticipantTypeCode_Value_INVALID_UNINITIALIZED;
const ActionParticipantTypeCode_Value ActionParticipantTypeCode_Value_Value_MAX = ActionParticipantTypeCode_Value_RELATED_PERSON;
const int ActionParticipantTypeCode_Value_Value_ARRAYSIZE = ActionParticipantTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ActionParticipantTypeCode_Value_descriptor();
inline const ::std::string& ActionParticipantTypeCode_Value_Name(ActionParticipantTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ActionParticipantTypeCode_Value_descriptor(), value);
}
inline bool ActionParticipantTypeCode_Value_Parse(
    const ::std::string& name, ActionParticipantTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ActionParticipantTypeCode_Value>(
    ActionParticipantTypeCode_Value_descriptor(), name, value);
}
enum ActionPrecheckBehaviorCode_Value {
  ActionPrecheckBehaviorCode_Value_INVALID_UNINITIALIZED = 0,
  ActionPrecheckBehaviorCode_Value_YES = 1,
  ActionPrecheckBehaviorCode_Value_NO = 2,
  ActionPrecheckBehaviorCode_Value_ActionPrecheckBehaviorCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ActionPrecheckBehaviorCode_Value_ActionPrecheckBehaviorCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ActionPrecheckBehaviorCode_Value_IsValid(int value);
const ActionPrecheckBehaviorCode_Value ActionPrecheckBehaviorCode_Value_Value_MIN = ActionPrecheckBehaviorCode_Value_INVALID_UNINITIALIZED;
const ActionPrecheckBehaviorCode_Value ActionPrecheckBehaviorCode_Value_Value_MAX = ActionPrecheckBehaviorCode_Value_NO;
const int ActionPrecheckBehaviorCode_Value_Value_ARRAYSIZE = ActionPrecheckBehaviorCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ActionPrecheckBehaviorCode_Value_descriptor();
inline const ::std::string& ActionPrecheckBehaviorCode_Value_Name(ActionPrecheckBehaviorCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ActionPrecheckBehaviorCode_Value_descriptor(), value);
}
inline bool ActionPrecheckBehaviorCode_Value_Parse(
    const ::std::string& name, ActionPrecheckBehaviorCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ActionPrecheckBehaviorCode_Value>(
    ActionPrecheckBehaviorCode_Value_descriptor(), name, value);
}
enum ActionRelationshipTypeCode_Value {
  ActionRelationshipTypeCode_Value_INVALID_UNINITIALIZED = 0,
  ActionRelationshipTypeCode_Value_BEFORE_START = 1,
  ActionRelationshipTypeCode_Value_BEFORE = 2,
  ActionRelationshipTypeCode_Value_BEFORE_END = 3,
  ActionRelationshipTypeCode_Value_CONCURRENT_WITH_START = 4,
  ActionRelationshipTypeCode_Value_CONCURRENT = 5,
  ActionRelationshipTypeCode_Value_CONCURRENT_WITH_END = 6,
  ActionRelationshipTypeCode_Value_AFTER_START = 7,
  ActionRelationshipTypeCode_Value_AFTER = 8,
  ActionRelationshipTypeCode_Value_AFTER_END = 9,
  ActionRelationshipTypeCode_Value_ActionRelationshipTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ActionRelationshipTypeCode_Value_ActionRelationshipTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ActionRelationshipTypeCode_Value_IsValid(int value);
const ActionRelationshipTypeCode_Value ActionRelationshipTypeCode_Value_Value_MIN = ActionRelationshipTypeCode_Value_INVALID_UNINITIALIZED;
const ActionRelationshipTypeCode_Value ActionRelationshipTypeCode_Value_Value_MAX = ActionRelationshipTypeCode_Value_AFTER_END;
const int ActionRelationshipTypeCode_Value_Value_ARRAYSIZE = ActionRelationshipTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ActionRelationshipTypeCode_Value_descriptor();
inline const ::std::string& ActionRelationshipTypeCode_Value_Name(ActionRelationshipTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ActionRelationshipTypeCode_Value_descriptor(), value);
}
inline bool ActionRelationshipTypeCode_Value_Parse(
    const ::std::string& name, ActionRelationshipTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ActionRelationshipTypeCode_Value>(
    ActionRelationshipTypeCode_Value_descriptor(), name, value);
}
enum ActionRequiredBehaviorCode_Value {
  ActionRequiredBehaviorCode_Value_INVALID_UNINITIALIZED = 0,
  ActionRequiredBehaviorCode_Value_MUST = 1,
  ActionRequiredBehaviorCode_Value_COULD = 2,
  ActionRequiredBehaviorCode_Value_MUST_UNLESS_DOCUMENTED = 3,
  ActionRequiredBehaviorCode_Value_ActionRequiredBehaviorCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ActionRequiredBehaviorCode_Value_ActionRequiredBehaviorCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ActionRequiredBehaviorCode_Value_IsValid(int value);
const ActionRequiredBehaviorCode_Value ActionRequiredBehaviorCode_Value_Value_MIN = ActionRequiredBehaviorCode_Value_INVALID_UNINITIALIZED;
const ActionRequiredBehaviorCode_Value ActionRequiredBehaviorCode_Value_Value_MAX = ActionRequiredBehaviorCode_Value_MUST_UNLESS_DOCUMENTED;
const int ActionRequiredBehaviorCode_Value_Value_ARRAYSIZE = ActionRequiredBehaviorCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ActionRequiredBehaviorCode_Value_descriptor();
inline const ::std::string& ActionRequiredBehaviorCode_Value_Name(ActionRequiredBehaviorCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ActionRequiredBehaviorCode_Value_descriptor(), value);
}
inline bool ActionRequiredBehaviorCode_Value_Parse(
    const ::std::string& name, ActionRequiredBehaviorCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ActionRequiredBehaviorCode_Value>(
    ActionRequiredBehaviorCode_Value_descriptor(), name, value);
}
enum ActionSelectionBehaviorCode_Value {
  ActionSelectionBehaviorCode_Value_INVALID_UNINITIALIZED = 0,
  ActionSelectionBehaviorCode_Value_ANY = 1,
  ActionSelectionBehaviorCode_Value_ALL = 2,
  ActionSelectionBehaviorCode_Value_ALL_OR_NONE = 3,
  ActionSelectionBehaviorCode_Value_EXACTLY_ONE = 4,
  ActionSelectionBehaviorCode_Value_AT_MOST_ONE = 5,
  ActionSelectionBehaviorCode_Value_ONE_OR_MORE = 6,
  ActionSelectionBehaviorCode_Value_ActionSelectionBehaviorCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ActionSelectionBehaviorCode_Value_ActionSelectionBehaviorCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ActionSelectionBehaviorCode_Value_IsValid(int value);
const ActionSelectionBehaviorCode_Value ActionSelectionBehaviorCode_Value_Value_MIN = ActionSelectionBehaviorCode_Value_INVALID_UNINITIALIZED;
const ActionSelectionBehaviorCode_Value ActionSelectionBehaviorCode_Value_Value_MAX = ActionSelectionBehaviorCode_Value_ONE_OR_MORE;
const int ActionSelectionBehaviorCode_Value_Value_ARRAYSIZE = ActionSelectionBehaviorCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ActionSelectionBehaviorCode_Value_descriptor();
inline const ::std::string& ActionSelectionBehaviorCode_Value_Name(ActionSelectionBehaviorCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ActionSelectionBehaviorCode_Value_descriptor(), value);
}
inline bool ActionSelectionBehaviorCode_Value_Parse(
    const ::std::string& name, ActionSelectionBehaviorCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ActionSelectionBehaviorCode_Value>(
    ActionSelectionBehaviorCode_Value_descriptor(), name, value);
}
enum ActionTypeCode_Value {
  ActionTypeCode_Value_INVALID_UNINITIALIZED = 0,
  ActionTypeCode_Value_CREATE = 1,
  ActionTypeCode_Value_UPDATE = 2,
  ActionTypeCode_Value_REMOVE = 3,
  ActionTypeCode_Value_FIRE_EVENT = 4,
  ActionTypeCode_Value_ActionTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ActionTypeCode_Value_ActionTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ActionTypeCode_Value_IsValid(int value);
const ActionTypeCode_Value ActionTypeCode_Value_Value_MIN = ActionTypeCode_Value_INVALID_UNINITIALIZED;
const ActionTypeCode_Value ActionTypeCode_Value_Value_MAX = ActionTypeCode_Value_FIRE_EVENT;
const int ActionTypeCode_Value_Value_ARRAYSIZE = ActionTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ActionTypeCode_Value_descriptor();
inline const ::std::string& ActionTypeCode_Value_Name(ActionTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ActionTypeCode_Value_descriptor(), value);
}
inline bool ActionTypeCode_Value_Parse(
    const ::std::string& name, ActionTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ActionTypeCode_Value>(
    ActionTypeCode_Value_descriptor(), name, value);
}
enum ActivityDefinitionCategoryCode_Value {
  ActivityDefinitionCategoryCode_Value_INVALID_UNINITIALIZED = 0,
  ActivityDefinitionCategoryCode_Value_TREATMENT = 1,
  ActivityDefinitionCategoryCode_Value_EDUCATION = 2,
  ActivityDefinitionCategoryCode_Value_ASSESSMENT = 3,
  ActivityDefinitionCategoryCode_Value_ActivityDefinitionCategoryCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ActivityDefinitionCategoryCode_Value_ActivityDefinitionCategoryCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ActivityDefinitionCategoryCode_Value_IsValid(int value);
const ActivityDefinitionCategoryCode_Value ActivityDefinitionCategoryCode_Value_Value_MIN = ActivityDefinitionCategoryCode_Value_INVALID_UNINITIALIZED;
const ActivityDefinitionCategoryCode_Value ActivityDefinitionCategoryCode_Value_Value_MAX = ActivityDefinitionCategoryCode_Value_ASSESSMENT;
const int ActivityDefinitionCategoryCode_Value_Value_ARRAYSIZE = ActivityDefinitionCategoryCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ActivityDefinitionCategoryCode_Value_descriptor();
inline const ::std::string& ActivityDefinitionCategoryCode_Value_Name(ActivityDefinitionCategoryCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ActivityDefinitionCategoryCode_Value_descriptor(), value);
}
inline bool ActivityDefinitionCategoryCode_Value_Parse(
    const ::std::string& name, ActivityDefinitionCategoryCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ActivityDefinitionCategoryCode_Value>(
    ActivityDefinitionCategoryCode_Value_descriptor(), name, value);
}
enum AdministrativeGenderCode_Value {
  AdministrativeGenderCode_Value_INVALID_UNINITIALIZED = 0,
  AdministrativeGenderCode_Value_MALE = 1,
  AdministrativeGenderCode_Value_FEMALE = 2,
  AdministrativeGenderCode_Value_OTHER = 3,
  AdministrativeGenderCode_Value_UNKNOWN = 4,
  AdministrativeGenderCode_Value_AdministrativeGenderCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AdministrativeGenderCode_Value_AdministrativeGenderCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AdministrativeGenderCode_Value_IsValid(int value);
const AdministrativeGenderCode_Value AdministrativeGenderCode_Value_Value_MIN = AdministrativeGenderCode_Value_INVALID_UNINITIALIZED;
const AdministrativeGenderCode_Value AdministrativeGenderCode_Value_Value_MAX = AdministrativeGenderCode_Value_UNKNOWN;
const int AdministrativeGenderCode_Value_Value_ARRAYSIZE = AdministrativeGenderCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* AdministrativeGenderCode_Value_descriptor();
inline const ::std::string& AdministrativeGenderCode_Value_Name(AdministrativeGenderCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    AdministrativeGenderCode_Value_descriptor(), value);
}
inline bool AdministrativeGenderCode_Value_Parse(
    const ::std::string& name, AdministrativeGenderCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AdministrativeGenderCode_Value>(
    AdministrativeGenderCode_Value_descriptor(), name, value);
}
enum AdverseEventCategoryCode_Value {
  AdverseEventCategoryCode_Value_INVALID_UNINITIALIZED = 0,
  AdverseEventCategoryCode_Value_AE = 1,
  AdverseEventCategoryCode_Value_PAE = 2,
  AdverseEventCategoryCode_Value_AdverseEventCategoryCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AdverseEventCategoryCode_Value_AdverseEventCategoryCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AdverseEventCategoryCode_Value_IsValid(int value);
const AdverseEventCategoryCode_Value AdverseEventCategoryCode_Value_Value_MIN = AdverseEventCategoryCode_Value_INVALID_UNINITIALIZED;
const AdverseEventCategoryCode_Value AdverseEventCategoryCode_Value_Value_MAX = AdverseEventCategoryCode_Value_PAE;
const int AdverseEventCategoryCode_Value_Value_ARRAYSIZE = AdverseEventCategoryCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* AdverseEventCategoryCode_Value_descriptor();
inline const ::std::string& AdverseEventCategoryCode_Value_Name(AdverseEventCategoryCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    AdverseEventCategoryCode_Value_descriptor(), value);
}
inline bool AdverseEventCategoryCode_Value_Parse(
    const ::std::string& name, AdverseEventCategoryCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AdverseEventCategoryCode_Value>(
    AdverseEventCategoryCode_Value_descriptor(), name, value);
}
enum AdverseEventCausalityAssessmentCode_Value {
  AdverseEventCausalityAssessmentCode_Value_INVALID_UNINITIALIZED = 0,
  AdverseEventCausalityAssessmentCode_Value_ASSESS1 = 1,
  AdverseEventCausalityAssessmentCode_Value_ASSESS2 = 2,
  AdverseEventCausalityAssessmentCode_Value_AdverseEventCausalityAssessmentCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AdverseEventCausalityAssessmentCode_Value_AdverseEventCausalityAssessmentCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AdverseEventCausalityAssessmentCode_Value_IsValid(int value);
const AdverseEventCausalityAssessmentCode_Value AdverseEventCausalityAssessmentCode_Value_Value_MIN = AdverseEventCausalityAssessmentCode_Value_INVALID_UNINITIALIZED;
const AdverseEventCausalityAssessmentCode_Value AdverseEventCausalityAssessmentCode_Value_Value_MAX = AdverseEventCausalityAssessmentCode_Value_ASSESS2;
const int AdverseEventCausalityAssessmentCode_Value_Value_ARRAYSIZE = AdverseEventCausalityAssessmentCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* AdverseEventCausalityAssessmentCode_Value_descriptor();
inline const ::std::string& AdverseEventCausalityAssessmentCode_Value_Name(AdverseEventCausalityAssessmentCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    AdverseEventCausalityAssessmentCode_Value_descriptor(), value);
}
inline bool AdverseEventCausalityAssessmentCode_Value_Parse(
    const ::std::string& name, AdverseEventCausalityAssessmentCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AdverseEventCausalityAssessmentCode_Value>(
    AdverseEventCausalityAssessmentCode_Value_descriptor(), name, value);
}
enum AdverseEventCausalityCode_Value {
  AdverseEventCausalityCode_Value_INVALID_UNINITIALIZED = 0,
  AdverseEventCausalityCode_Value_CAUSALITY1 = 1,
  AdverseEventCausalityCode_Value_CAUSALITY2 = 2,
  AdverseEventCausalityCode_Value_AdverseEventCausalityCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AdverseEventCausalityCode_Value_AdverseEventCausalityCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AdverseEventCausalityCode_Value_IsValid(int value);
const AdverseEventCausalityCode_Value AdverseEventCausalityCode_Value_Value_MIN = AdverseEventCausalityCode_Value_INVALID_UNINITIALIZED;
const AdverseEventCausalityCode_Value AdverseEventCausalityCode_Value_Value_MAX = AdverseEventCausalityCode_Value_CAUSALITY2;
const int AdverseEventCausalityCode_Value_Value_ARRAYSIZE = AdverseEventCausalityCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* AdverseEventCausalityCode_Value_descriptor();
inline const ::std::string& AdverseEventCausalityCode_Value_Name(AdverseEventCausalityCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    AdverseEventCausalityCode_Value_descriptor(), value);
}
inline bool AdverseEventCausalityCode_Value_Parse(
    const ::std::string& name, AdverseEventCausalityCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AdverseEventCausalityCode_Value>(
    AdverseEventCausalityCode_Value_descriptor(), name, value);
}
enum AdverseEventCausalityMethodCode_Value {
  AdverseEventCausalityMethodCode_Value_INVALID_UNINITIALIZED = 0,
  AdverseEventCausalityMethodCode_Value_METHOD1 = 1,
  AdverseEventCausalityMethodCode_Value_METHOD2 = 2,
  AdverseEventCausalityMethodCode_Value_AdverseEventCausalityMethodCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AdverseEventCausalityMethodCode_Value_AdverseEventCausalityMethodCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AdverseEventCausalityMethodCode_Value_IsValid(int value);
const AdverseEventCausalityMethodCode_Value AdverseEventCausalityMethodCode_Value_Value_MIN = AdverseEventCausalityMethodCode_Value_INVALID_UNINITIALIZED;
const AdverseEventCausalityMethodCode_Value AdverseEventCausalityMethodCode_Value_Value_MAX = AdverseEventCausalityMethodCode_Value_METHOD2;
const int AdverseEventCausalityMethodCode_Value_Value_ARRAYSIZE = AdverseEventCausalityMethodCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* AdverseEventCausalityMethodCode_Value_descriptor();
inline const ::std::string& AdverseEventCausalityMethodCode_Value_Name(AdverseEventCausalityMethodCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    AdverseEventCausalityMethodCode_Value_descriptor(), value);
}
inline bool AdverseEventCausalityMethodCode_Value_Parse(
    const ::std::string& name, AdverseEventCausalityMethodCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AdverseEventCausalityMethodCode_Value>(
    AdverseEventCausalityMethodCode_Value_descriptor(), name, value);
}
enum AdverseEventCausalityResultCode_Value {
  AdverseEventCausalityResultCode_Value_INVALID_UNINITIALIZED = 0,
  AdverseEventCausalityResultCode_Value_RESULT1 = 1,
  AdverseEventCausalityResultCode_Value_RESULT2 = 2,
  AdverseEventCausalityResultCode_Value_AdverseEventCausalityResultCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AdverseEventCausalityResultCode_Value_AdverseEventCausalityResultCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AdverseEventCausalityResultCode_Value_IsValid(int value);
const AdverseEventCausalityResultCode_Value AdverseEventCausalityResultCode_Value_Value_MIN = AdverseEventCausalityResultCode_Value_INVALID_UNINITIALIZED;
const AdverseEventCausalityResultCode_Value AdverseEventCausalityResultCode_Value_Value_MAX = AdverseEventCausalityResultCode_Value_RESULT2;
const int AdverseEventCausalityResultCode_Value_Value_ARRAYSIZE = AdverseEventCausalityResultCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* AdverseEventCausalityResultCode_Value_descriptor();
inline const ::std::string& AdverseEventCausalityResultCode_Value_Name(AdverseEventCausalityResultCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    AdverseEventCausalityResultCode_Value_descriptor(), value);
}
inline bool AdverseEventCausalityResultCode_Value_Parse(
    const ::std::string& name, AdverseEventCausalityResultCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AdverseEventCausalityResultCode_Value>(
    AdverseEventCausalityResultCode_Value_descriptor(), name, value);
}
enum AdverseEventOutcomeCode_Value {
  AdverseEventOutcomeCode_Value_INVALID_UNINITIALIZED = 0,
  AdverseEventOutcomeCode_Value_RESOLVED = 1,
  AdverseEventOutcomeCode_Value_RECOVERING = 2,
  AdverseEventOutcomeCode_Value_ONGOING = 3,
  AdverseEventOutcomeCode_Value_RESOLVEDWITHSEQUELAE = 4,
  AdverseEventOutcomeCode_Value_FATAL = 5,
  AdverseEventOutcomeCode_Value_UNKNOWN = 6,
  AdverseEventOutcomeCode_Value_AdverseEventOutcomeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AdverseEventOutcomeCode_Value_AdverseEventOutcomeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AdverseEventOutcomeCode_Value_IsValid(int value);
const AdverseEventOutcomeCode_Value AdverseEventOutcomeCode_Value_Value_MIN = AdverseEventOutcomeCode_Value_INVALID_UNINITIALIZED;
const AdverseEventOutcomeCode_Value AdverseEventOutcomeCode_Value_Value_MAX = AdverseEventOutcomeCode_Value_UNKNOWN;
const int AdverseEventOutcomeCode_Value_Value_ARRAYSIZE = AdverseEventOutcomeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* AdverseEventOutcomeCode_Value_descriptor();
inline const ::std::string& AdverseEventOutcomeCode_Value_Name(AdverseEventOutcomeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    AdverseEventOutcomeCode_Value_descriptor(), value);
}
inline bool AdverseEventOutcomeCode_Value_Parse(
    const ::std::string& name, AdverseEventOutcomeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AdverseEventOutcomeCode_Value>(
    AdverseEventOutcomeCode_Value_descriptor(), name, value);
}
enum AdverseEventSeriousnessCode_Value {
  AdverseEventSeriousnessCode_Value_INVALID_UNINITIALIZED = 0,
  AdverseEventSeriousnessCode_Value_MILD = 1,
  AdverseEventSeriousnessCode_Value_MODERATE = 2,
  AdverseEventSeriousnessCode_Value_SEVERE = 3,
  AdverseEventSeriousnessCode_Value_AdverseEventSeriousnessCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AdverseEventSeriousnessCode_Value_AdverseEventSeriousnessCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AdverseEventSeriousnessCode_Value_IsValid(int value);
const AdverseEventSeriousnessCode_Value AdverseEventSeriousnessCode_Value_Value_MIN = AdverseEventSeriousnessCode_Value_INVALID_UNINITIALIZED;
const AdverseEventSeriousnessCode_Value AdverseEventSeriousnessCode_Value_Value_MAX = AdverseEventSeriousnessCode_Value_SEVERE;
const int AdverseEventSeriousnessCode_Value_Value_ARRAYSIZE = AdverseEventSeriousnessCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* AdverseEventSeriousnessCode_Value_descriptor();
inline const ::std::string& AdverseEventSeriousnessCode_Value_Name(AdverseEventSeriousnessCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    AdverseEventSeriousnessCode_Value_descriptor(), value);
}
inline bool AdverseEventSeriousnessCode_Value_Parse(
    const ::std::string& name, AdverseEventSeriousnessCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AdverseEventSeriousnessCode_Value>(
    AdverseEventSeriousnessCode_Value_descriptor(), name, value);
}
enum AllergyIntoleranceSubstanceExposureRiskCode_Value {
  AllergyIntoleranceSubstanceExposureRiskCode_Value_INVALID_UNINITIALIZED = 0,
  AllergyIntoleranceSubstanceExposureRiskCode_Value_KNOWN_REACTION_RISK = 1,
  AllergyIntoleranceSubstanceExposureRiskCode_Value_NO_KNOWN_REACTION_RISK = 2,
  AllergyIntoleranceSubstanceExposureRiskCode_Value_AllergyIntoleranceSubstanceExposureRiskCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AllergyIntoleranceSubstanceExposureRiskCode_Value_AllergyIntoleranceSubstanceExposureRiskCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AllergyIntoleranceSubstanceExposureRiskCode_Value_IsValid(int value);
const AllergyIntoleranceSubstanceExposureRiskCode_Value AllergyIntoleranceSubstanceExposureRiskCode_Value_Value_MIN = AllergyIntoleranceSubstanceExposureRiskCode_Value_INVALID_UNINITIALIZED;
const AllergyIntoleranceSubstanceExposureRiskCode_Value AllergyIntoleranceSubstanceExposureRiskCode_Value_Value_MAX = AllergyIntoleranceSubstanceExposureRiskCode_Value_NO_KNOWN_REACTION_RISK;
const int AllergyIntoleranceSubstanceExposureRiskCode_Value_Value_ARRAYSIZE = AllergyIntoleranceSubstanceExposureRiskCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* AllergyIntoleranceSubstanceExposureRiskCode_Value_descriptor();
inline const ::std::string& AllergyIntoleranceSubstanceExposureRiskCode_Value_Name(AllergyIntoleranceSubstanceExposureRiskCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    AllergyIntoleranceSubstanceExposureRiskCode_Value_descriptor(), value);
}
inline bool AllergyIntoleranceSubstanceExposureRiskCode_Value_Parse(
    const ::std::string& name, AllergyIntoleranceSubstanceExposureRiskCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AllergyIntoleranceSubstanceExposureRiskCode_Value>(
    AllergyIntoleranceSubstanceExposureRiskCode_Value_descriptor(), name, value);
}
enum AllergyIntoleranceClinicalStatusCode_Value {
  AllergyIntoleranceClinicalStatusCode_Value_INVALID_UNINITIALIZED = 0,
  AllergyIntoleranceClinicalStatusCode_Value_ACTIVE = 1,
  AllergyIntoleranceClinicalStatusCode_Value_INACTIVE = 2,
  AllergyIntoleranceClinicalStatusCode_Value_RESOLVED = 3,
  AllergyIntoleranceClinicalStatusCode_Value_AllergyIntoleranceClinicalStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AllergyIntoleranceClinicalStatusCode_Value_AllergyIntoleranceClinicalStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AllergyIntoleranceClinicalStatusCode_Value_IsValid(int value);
const AllergyIntoleranceClinicalStatusCode_Value AllergyIntoleranceClinicalStatusCode_Value_Value_MIN = AllergyIntoleranceClinicalStatusCode_Value_INVALID_UNINITIALIZED;
const AllergyIntoleranceClinicalStatusCode_Value AllergyIntoleranceClinicalStatusCode_Value_Value_MAX = AllergyIntoleranceClinicalStatusCode_Value_RESOLVED;
const int AllergyIntoleranceClinicalStatusCode_Value_Value_ARRAYSIZE = AllergyIntoleranceClinicalStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* AllergyIntoleranceClinicalStatusCode_Value_descriptor();
inline const ::std::string& AllergyIntoleranceClinicalStatusCode_Value_Name(AllergyIntoleranceClinicalStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    AllergyIntoleranceClinicalStatusCode_Value_descriptor(), value);
}
inline bool AllergyIntoleranceClinicalStatusCode_Value_Parse(
    const ::std::string& name, AllergyIntoleranceClinicalStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AllergyIntoleranceClinicalStatusCode_Value>(
    AllergyIntoleranceClinicalStatusCode_Value_descriptor(), name, value);
}
enum AllergyIntoleranceCategoryCode_Value {
  AllergyIntoleranceCategoryCode_Value_INVALID_UNINITIALIZED = 0,
  AllergyIntoleranceCategoryCode_Value_FOOD = 1,
  AllergyIntoleranceCategoryCode_Value_MEDICATION = 2,
  AllergyIntoleranceCategoryCode_Value_ENVIRONMENT = 3,
  AllergyIntoleranceCategoryCode_Value_BIOLOGIC = 4,
  AllergyIntoleranceCategoryCode_Value_AllergyIntoleranceCategoryCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AllergyIntoleranceCategoryCode_Value_AllergyIntoleranceCategoryCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AllergyIntoleranceCategoryCode_Value_IsValid(int value);
const AllergyIntoleranceCategoryCode_Value AllergyIntoleranceCategoryCode_Value_Value_MIN = AllergyIntoleranceCategoryCode_Value_INVALID_UNINITIALIZED;
const AllergyIntoleranceCategoryCode_Value AllergyIntoleranceCategoryCode_Value_Value_MAX = AllergyIntoleranceCategoryCode_Value_BIOLOGIC;
const int AllergyIntoleranceCategoryCode_Value_Value_ARRAYSIZE = AllergyIntoleranceCategoryCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* AllergyIntoleranceCategoryCode_Value_descriptor();
inline const ::std::string& AllergyIntoleranceCategoryCode_Value_Name(AllergyIntoleranceCategoryCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    AllergyIntoleranceCategoryCode_Value_descriptor(), value);
}
inline bool AllergyIntoleranceCategoryCode_Value_Parse(
    const ::std::string& name, AllergyIntoleranceCategoryCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AllergyIntoleranceCategoryCode_Value>(
    AllergyIntoleranceCategoryCode_Value_descriptor(), name, value);
}
enum AllergyIntoleranceCriticalityCode_Value {
  AllergyIntoleranceCriticalityCode_Value_INVALID_UNINITIALIZED = 0,
  AllergyIntoleranceCriticalityCode_Value_LOW = 1,
  AllergyIntoleranceCriticalityCode_Value_HIGH = 2,
  AllergyIntoleranceCriticalityCode_Value_UNABLE_TO_ASSESS = 3,
  AllergyIntoleranceCriticalityCode_Value_AllergyIntoleranceCriticalityCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AllergyIntoleranceCriticalityCode_Value_AllergyIntoleranceCriticalityCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AllergyIntoleranceCriticalityCode_Value_IsValid(int value);
const AllergyIntoleranceCriticalityCode_Value AllergyIntoleranceCriticalityCode_Value_Value_MIN = AllergyIntoleranceCriticalityCode_Value_INVALID_UNINITIALIZED;
const AllergyIntoleranceCriticalityCode_Value AllergyIntoleranceCriticalityCode_Value_Value_MAX = AllergyIntoleranceCriticalityCode_Value_UNABLE_TO_ASSESS;
const int AllergyIntoleranceCriticalityCode_Value_Value_ARRAYSIZE = AllergyIntoleranceCriticalityCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* AllergyIntoleranceCriticalityCode_Value_descriptor();
inline const ::std::string& AllergyIntoleranceCriticalityCode_Value_Name(AllergyIntoleranceCriticalityCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    AllergyIntoleranceCriticalityCode_Value_descriptor(), value);
}
inline bool AllergyIntoleranceCriticalityCode_Value_Parse(
    const ::std::string& name, AllergyIntoleranceCriticalityCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AllergyIntoleranceCriticalityCode_Value>(
    AllergyIntoleranceCriticalityCode_Value_descriptor(), name, value);
}
enum AllergyIntoleranceTypeCode_Value {
  AllergyIntoleranceTypeCode_Value_INVALID_UNINITIALIZED = 0,
  AllergyIntoleranceTypeCode_Value_ALLERGY = 1,
  AllergyIntoleranceTypeCode_Value_INTOLERANCE = 2,
  AllergyIntoleranceTypeCode_Value_AllergyIntoleranceTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AllergyIntoleranceTypeCode_Value_AllergyIntoleranceTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AllergyIntoleranceTypeCode_Value_IsValid(int value);
const AllergyIntoleranceTypeCode_Value AllergyIntoleranceTypeCode_Value_Value_MIN = AllergyIntoleranceTypeCode_Value_INVALID_UNINITIALIZED;
const AllergyIntoleranceTypeCode_Value AllergyIntoleranceTypeCode_Value_Value_MAX = AllergyIntoleranceTypeCode_Value_INTOLERANCE;
const int AllergyIntoleranceTypeCode_Value_Value_ARRAYSIZE = AllergyIntoleranceTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* AllergyIntoleranceTypeCode_Value_descriptor();
inline const ::std::string& AllergyIntoleranceTypeCode_Value_Name(AllergyIntoleranceTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    AllergyIntoleranceTypeCode_Value_descriptor(), value);
}
inline bool AllergyIntoleranceTypeCode_Value_Parse(
    const ::std::string& name, AllergyIntoleranceTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AllergyIntoleranceTypeCode_Value>(
    AllergyIntoleranceTypeCode_Value_descriptor(), name, value);
}
enum AllergyIntoleranceVerificationStatusCode_Value {
  AllergyIntoleranceVerificationStatusCode_Value_INVALID_UNINITIALIZED = 0,
  AllergyIntoleranceVerificationStatusCode_Value_UNCONFIRMED = 1,
  AllergyIntoleranceVerificationStatusCode_Value_CONFIRMED = 2,
  AllergyIntoleranceVerificationStatusCode_Value_REFUTED = 3,
  AllergyIntoleranceVerificationStatusCode_Value_ENTERED_IN_ERROR = 4,
  AllergyIntoleranceVerificationStatusCode_Value_AllergyIntoleranceVerificationStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AllergyIntoleranceVerificationStatusCode_Value_AllergyIntoleranceVerificationStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AllergyIntoleranceVerificationStatusCode_Value_IsValid(int value);
const AllergyIntoleranceVerificationStatusCode_Value AllergyIntoleranceVerificationStatusCode_Value_Value_MIN = AllergyIntoleranceVerificationStatusCode_Value_INVALID_UNINITIALIZED;
const AllergyIntoleranceVerificationStatusCode_Value AllergyIntoleranceVerificationStatusCode_Value_Value_MAX = AllergyIntoleranceVerificationStatusCode_Value_ENTERED_IN_ERROR;
const int AllergyIntoleranceVerificationStatusCode_Value_Value_ARRAYSIZE = AllergyIntoleranceVerificationStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* AllergyIntoleranceVerificationStatusCode_Value_descriptor();
inline const ::std::string& AllergyIntoleranceVerificationStatusCode_Value_Name(AllergyIntoleranceVerificationStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    AllergyIntoleranceVerificationStatusCode_Value_descriptor(), value);
}
inline bool AllergyIntoleranceVerificationStatusCode_Value_Parse(
    const ::std::string& name, AllergyIntoleranceVerificationStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AllergyIntoleranceVerificationStatusCode_Value>(
    AllergyIntoleranceVerificationStatusCode_Value_descriptor(), name, value);
}
enum GenderStatusCode_Value {
  GenderStatusCode_Value_INVALID_UNINITIALIZED = 0,
  GenderStatusCode_Value_NEUTERED = 1,
  GenderStatusCode_Value_INTACT = 2,
  GenderStatusCode_Value_UNKNOWN = 3,
  GenderStatusCode_Value_GenderStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GenderStatusCode_Value_GenderStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GenderStatusCode_Value_IsValid(int value);
const GenderStatusCode_Value GenderStatusCode_Value_Value_MIN = GenderStatusCode_Value_INVALID_UNINITIALIZED;
const GenderStatusCode_Value GenderStatusCode_Value_Value_MAX = GenderStatusCode_Value_UNKNOWN;
const int GenderStatusCode_Value_Value_ARRAYSIZE = GenderStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* GenderStatusCode_Value_descriptor();
inline const ::std::string& GenderStatusCode_Value_Name(GenderStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    GenderStatusCode_Value_descriptor(), value);
}
inline bool GenderStatusCode_Value_Parse(
    const ::std::string& name, GenderStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GenderStatusCode_Value>(
    GenderStatusCode_Value_descriptor(), name, value);
}
enum AppointmentStatusCode_Value {
  AppointmentStatusCode_Value_INVALID_UNINITIALIZED = 0,
  AppointmentStatusCode_Value_PROPOSED = 1,
  AppointmentStatusCode_Value_PENDING = 2,
  AppointmentStatusCode_Value_BOOKED = 3,
  AppointmentStatusCode_Value_ARRIVED = 4,
  AppointmentStatusCode_Value_FULFILLED = 5,
  AppointmentStatusCode_Value_CANCELLED = 6,
  AppointmentStatusCode_Value_NOSHOW = 7,
  AppointmentStatusCode_Value_ENTERED_IN_ERROR = 8,
  AppointmentStatusCode_Value_AppointmentStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AppointmentStatusCode_Value_AppointmentStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AppointmentStatusCode_Value_IsValid(int value);
const AppointmentStatusCode_Value AppointmentStatusCode_Value_Value_MIN = AppointmentStatusCode_Value_INVALID_UNINITIALIZED;
const AppointmentStatusCode_Value AppointmentStatusCode_Value_Value_MAX = AppointmentStatusCode_Value_ENTERED_IN_ERROR;
const int AppointmentStatusCode_Value_Value_ARRAYSIZE = AppointmentStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* AppointmentStatusCode_Value_descriptor();
inline const ::std::string& AppointmentStatusCode_Value_Name(AppointmentStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    AppointmentStatusCode_Value_descriptor(), value);
}
inline bool AppointmentStatusCode_Value_Parse(
    const ::std::string& name, AppointmentStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AppointmentStatusCode_Value>(
    AppointmentStatusCode_Value_descriptor(), name, value);
}
enum AssertionDirectionTypeCode_Value {
  AssertionDirectionTypeCode_Value_INVALID_UNINITIALIZED = 0,
  AssertionDirectionTypeCode_Value_RESPONSE = 1,
  AssertionDirectionTypeCode_Value_REQUEST = 2,
  AssertionDirectionTypeCode_Value_AssertionDirectionTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AssertionDirectionTypeCode_Value_AssertionDirectionTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AssertionDirectionTypeCode_Value_IsValid(int value);
const AssertionDirectionTypeCode_Value AssertionDirectionTypeCode_Value_Value_MIN = AssertionDirectionTypeCode_Value_INVALID_UNINITIALIZED;
const AssertionDirectionTypeCode_Value AssertionDirectionTypeCode_Value_Value_MAX = AssertionDirectionTypeCode_Value_REQUEST;
const int AssertionDirectionTypeCode_Value_Value_ARRAYSIZE = AssertionDirectionTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* AssertionDirectionTypeCode_Value_descriptor();
inline const ::std::string& AssertionDirectionTypeCode_Value_Name(AssertionDirectionTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    AssertionDirectionTypeCode_Value_descriptor(), value);
}
inline bool AssertionDirectionTypeCode_Value_Parse(
    const ::std::string& name, AssertionDirectionTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AssertionDirectionTypeCode_Value>(
    AssertionDirectionTypeCode_Value_descriptor(), name, value);
}
enum AssertionOperatorTypeCode_Value {
  AssertionOperatorTypeCode_Value_INVALID_UNINITIALIZED = 0,
  AssertionOperatorTypeCode_Value_EQUALS = 1,
  AssertionOperatorTypeCode_Value_NOTEQUALS = 2,
  AssertionOperatorTypeCode_Value_IN = 3,
  AssertionOperatorTypeCode_Value_NOTIN = 4,
  AssertionOperatorTypeCode_Value_GREATERTHAN = 5,
  AssertionOperatorTypeCode_Value_LESSTHAN = 6,
  AssertionOperatorTypeCode_Value_EMPTY = 7,
  AssertionOperatorTypeCode_Value_NOTEMPTY = 8,
  AssertionOperatorTypeCode_Value_CONTAINS = 9,
  AssertionOperatorTypeCode_Value_NOTCONTAINS = 10,
  AssertionOperatorTypeCode_Value_EVAL = 11,
  AssertionOperatorTypeCode_Value_AssertionOperatorTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AssertionOperatorTypeCode_Value_AssertionOperatorTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AssertionOperatorTypeCode_Value_IsValid(int value);
const AssertionOperatorTypeCode_Value AssertionOperatorTypeCode_Value_Value_MIN = AssertionOperatorTypeCode_Value_INVALID_UNINITIALIZED;
const AssertionOperatorTypeCode_Value AssertionOperatorTypeCode_Value_Value_MAX = AssertionOperatorTypeCode_Value_EVAL;
const int AssertionOperatorTypeCode_Value_Value_ARRAYSIZE = AssertionOperatorTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* AssertionOperatorTypeCode_Value_descriptor();
inline const ::std::string& AssertionOperatorTypeCode_Value_Name(AssertionOperatorTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    AssertionOperatorTypeCode_Value_descriptor(), value);
}
inline bool AssertionOperatorTypeCode_Value_Parse(
    const ::std::string& name, AssertionOperatorTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AssertionOperatorTypeCode_Value>(
    AssertionOperatorTypeCode_Value_descriptor(), name, value);
}
enum AssertionResponseTypesCode_Value {
  AssertionResponseTypesCode_Value_INVALID_UNINITIALIZED = 0,
  AssertionResponseTypesCode_Value_OKAY = 1,
  AssertionResponseTypesCode_Value_CREATED = 2,
  AssertionResponseTypesCode_Value_NOCONTENT = 3,
  AssertionResponseTypesCode_Value_NOTMODIFIED = 4,
  AssertionResponseTypesCode_Value_BAD = 5,
  AssertionResponseTypesCode_Value_FORBIDDEN = 6,
  AssertionResponseTypesCode_Value_NOTFOUND = 7,
  AssertionResponseTypesCode_Value_METHODNOTALLOWED = 8,
  AssertionResponseTypesCode_Value_CONFLICT = 9,
  AssertionResponseTypesCode_Value_GONE = 10,
  AssertionResponseTypesCode_Value_PRECONDITIONFAILED = 11,
  AssertionResponseTypesCode_Value_UNPROCESSABLE = 12,
  AssertionResponseTypesCode_Value_AssertionResponseTypesCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AssertionResponseTypesCode_Value_AssertionResponseTypesCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AssertionResponseTypesCode_Value_IsValid(int value);
const AssertionResponseTypesCode_Value AssertionResponseTypesCode_Value_Value_MIN = AssertionResponseTypesCode_Value_INVALID_UNINITIALIZED;
const AssertionResponseTypesCode_Value AssertionResponseTypesCode_Value_Value_MAX = AssertionResponseTypesCode_Value_UNPROCESSABLE;
const int AssertionResponseTypesCode_Value_Value_ARRAYSIZE = AssertionResponseTypesCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* AssertionResponseTypesCode_Value_descriptor();
inline const ::std::string& AssertionResponseTypesCode_Value_Name(AssertionResponseTypesCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    AssertionResponseTypesCode_Value_descriptor(), value);
}
inline bool AssertionResponseTypesCode_Value_Parse(
    const ::std::string& name, AssertionResponseTypesCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AssertionResponseTypesCode_Value>(
    AssertionResponseTypesCode_Value_descriptor(), name, value);
}
enum AuditEventActionCode_Value {
  AuditEventActionCode_Value_INVALID_UNINITIALIZED = 0,
  AuditEventActionCode_Value_C = 1,
  AuditEventActionCode_Value_R = 2,
  AuditEventActionCode_Value_U = 3,
  AuditEventActionCode_Value_D = 4,
  AuditEventActionCode_Value_E = 5,
  AuditEventActionCode_Value_AuditEventActionCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AuditEventActionCode_Value_AuditEventActionCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AuditEventActionCode_Value_IsValid(int value);
const AuditEventActionCode_Value AuditEventActionCode_Value_Value_MIN = AuditEventActionCode_Value_INVALID_UNINITIALIZED;
const AuditEventActionCode_Value AuditEventActionCode_Value_Value_MAX = AuditEventActionCode_Value_E;
const int AuditEventActionCode_Value_Value_ARRAYSIZE = AuditEventActionCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* AuditEventActionCode_Value_descriptor();
inline const ::std::string& AuditEventActionCode_Value_Name(AuditEventActionCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    AuditEventActionCode_Value_descriptor(), value);
}
inline bool AuditEventActionCode_Value_Parse(
    const ::std::string& name, AuditEventActionCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AuditEventActionCode_Value>(
    AuditEventActionCode_Value_descriptor(), name, value);
}
enum AuditEventOutcomeCode_Value {
  AuditEventOutcomeCode_Value_INVALID_UNINITIALIZED = 0,
  AuditEventOutcomeCode_Value_SUCCESS = 1,
  AuditEventOutcomeCode_Value_MINOR_FAILURE = 2,
  AuditEventOutcomeCode_Value_SERIOUS_FAILURE = 3,
  AuditEventOutcomeCode_Value_MAJOR_FAILURE = 4,
  AuditEventOutcomeCode_Value_AuditEventOutcomeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AuditEventOutcomeCode_Value_AuditEventOutcomeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AuditEventOutcomeCode_Value_IsValid(int value);
const AuditEventOutcomeCode_Value AuditEventOutcomeCode_Value_Value_MIN = AuditEventOutcomeCode_Value_INVALID_UNINITIALIZED;
const AuditEventOutcomeCode_Value AuditEventOutcomeCode_Value_Value_MAX = AuditEventOutcomeCode_Value_MAJOR_FAILURE;
const int AuditEventOutcomeCode_Value_Value_ARRAYSIZE = AuditEventOutcomeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* AuditEventOutcomeCode_Value_descriptor();
inline const ::std::string& AuditEventOutcomeCode_Value_Name(AuditEventOutcomeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    AuditEventOutcomeCode_Value_descriptor(), value);
}
inline bool AuditEventOutcomeCode_Value_Parse(
    const ::std::string& name, AuditEventOutcomeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AuditEventOutcomeCode_Value>(
    AuditEventOutcomeCode_Value_descriptor(), name, value);
}
enum BasicResourceTypesCode_Value {
  BasicResourceTypesCode_Value_INVALID_UNINITIALIZED = 0,
  BasicResourceTypesCode_Value_CONSENT = 1,
  BasicResourceTypesCode_Value_REFERRAL = 2,
  BasicResourceTypesCode_Value_ADVEVENT = 3,
  BasicResourceTypesCode_Value_APTMTREQ = 4,
  BasicResourceTypesCode_Value_TRANSFER = 5,
  BasicResourceTypesCode_Value_DIET = 6,
  BasicResourceTypesCode_Value_ADMINACT = 7,
  BasicResourceTypesCode_Value_EXPOSURE = 8,
  BasicResourceTypesCode_Value_INVESTIGATION = 9,
  BasicResourceTypesCode_Value_ACCOUNT = 10,
  BasicResourceTypesCode_Value_INVOICE = 11,
  BasicResourceTypesCode_Value_ADJUDICAT = 12,
  BasicResourceTypesCode_Value_PREDETREQ = 13,
  BasicResourceTypesCode_Value_PREDETERMINE = 14,
  BasicResourceTypesCode_Value_STUDY = 15,
  BasicResourceTypesCode_Value_PROTOCOL = 16,
  BasicResourceTypesCode_Value_BasicResourceTypesCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BasicResourceTypesCode_Value_BasicResourceTypesCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BasicResourceTypesCode_Value_IsValid(int value);
const BasicResourceTypesCode_Value BasicResourceTypesCode_Value_Value_MIN = BasicResourceTypesCode_Value_INVALID_UNINITIALIZED;
const BasicResourceTypesCode_Value BasicResourceTypesCode_Value_Value_MAX = BasicResourceTypesCode_Value_PROTOCOL;
const int BasicResourceTypesCode_Value_Value_ARRAYSIZE = BasicResourceTypesCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* BasicResourceTypesCode_Value_descriptor();
inline const ::std::string& BasicResourceTypesCode_Value_Name(BasicResourceTypesCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    BasicResourceTypesCode_Value_descriptor(), value);
}
inline bool BasicResourceTypesCode_Value_Parse(
    const ::std::string& name, BasicResourceTypesCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BasicResourceTypesCode_Value>(
    BasicResourceTypesCode_Value_descriptor(), name, value);
}
enum BundleTypeCode_Value {
  BundleTypeCode_Value_INVALID_UNINITIALIZED = 0,
  BundleTypeCode_Value_DOCUMENT = 1,
  BundleTypeCode_Value_MESSAGE = 2,
  BundleTypeCode_Value_TRANSACTION = 3,
  BundleTypeCode_Value_TRANSACTION_RESPONSE = 4,
  BundleTypeCode_Value_BATCH = 5,
  BundleTypeCode_Value_BATCH_RESPONSE = 6,
  BundleTypeCode_Value_HISTORY = 7,
  BundleTypeCode_Value_SEARCHSET = 8,
  BundleTypeCode_Value_COLLECTION = 9,
  BundleTypeCode_Value_BundleTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BundleTypeCode_Value_BundleTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BundleTypeCode_Value_IsValid(int value);
const BundleTypeCode_Value BundleTypeCode_Value_Value_MIN = BundleTypeCode_Value_INVALID_UNINITIALIZED;
const BundleTypeCode_Value BundleTypeCode_Value_Value_MAX = BundleTypeCode_Value_COLLECTION;
const int BundleTypeCode_Value_Value_ARRAYSIZE = BundleTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* BundleTypeCode_Value_descriptor();
inline const ::std::string& BundleTypeCode_Value_Name(BundleTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    BundleTypeCode_Value_descriptor(), value);
}
inline bool BundleTypeCode_Value_Parse(
    const ::std::string& name, BundleTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BundleTypeCode_Value>(
    BundleTypeCode_Value_descriptor(), name, value);
}
enum CapabilityStatementKindCode_Value {
  CapabilityStatementKindCode_Value_INVALID_UNINITIALIZED = 0,
  CapabilityStatementKindCode_Value_INSTANCE = 1,
  CapabilityStatementKindCode_Value_CAPABILITY = 2,
  CapabilityStatementKindCode_Value_REQUIREMENTS = 3,
  CapabilityStatementKindCode_Value_CapabilityStatementKindCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CapabilityStatementKindCode_Value_CapabilityStatementKindCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CapabilityStatementKindCode_Value_IsValid(int value);
const CapabilityStatementKindCode_Value CapabilityStatementKindCode_Value_Value_MIN = CapabilityStatementKindCode_Value_INVALID_UNINITIALIZED;
const CapabilityStatementKindCode_Value CapabilityStatementKindCode_Value_Value_MAX = CapabilityStatementKindCode_Value_REQUIREMENTS;
const int CapabilityStatementKindCode_Value_Value_ARRAYSIZE = CapabilityStatementKindCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* CapabilityStatementKindCode_Value_descriptor();
inline const ::std::string& CapabilityStatementKindCode_Value_Name(CapabilityStatementKindCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    CapabilityStatementKindCode_Value_descriptor(), value);
}
inline bool CapabilityStatementKindCode_Value_Parse(
    const ::std::string& name, CapabilityStatementKindCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CapabilityStatementKindCode_Value>(
    CapabilityStatementKindCode_Value_descriptor(), name, value);
}
enum CarePlanActivityCategoryCode_Value {
  CarePlanActivityCategoryCode_Value_INVALID_UNINITIALIZED = 0,
  CarePlanActivityCategoryCode_Value_DIET = 1,
  CarePlanActivityCategoryCode_Value_DRUG = 2,
  CarePlanActivityCategoryCode_Value_ENCOUNTER = 3,
  CarePlanActivityCategoryCode_Value_OBSERVATION = 4,
  CarePlanActivityCategoryCode_Value_PROCEDURE = 5,
  CarePlanActivityCategoryCode_Value_SUPPLY = 6,
  CarePlanActivityCategoryCode_Value_OTHER = 7,
  CarePlanActivityCategoryCode_Value_CarePlanActivityCategoryCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CarePlanActivityCategoryCode_Value_CarePlanActivityCategoryCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CarePlanActivityCategoryCode_Value_IsValid(int value);
const CarePlanActivityCategoryCode_Value CarePlanActivityCategoryCode_Value_Value_MIN = CarePlanActivityCategoryCode_Value_INVALID_UNINITIALIZED;
const CarePlanActivityCategoryCode_Value CarePlanActivityCategoryCode_Value_Value_MAX = CarePlanActivityCategoryCode_Value_OTHER;
const int CarePlanActivityCategoryCode_Value_Value_ARRAYSIZE = CarePlanActivityCategoryCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* CarePlanActivityCategoryCode_Value_descriptor();
inline const ::std::string& CarePlanActivityCategoryCode_Value_Name(CarePlanActivityCategoryCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    CarePlanActivityCategoryCode_Value_descriptor(), value);
}
inline bool CarePlanActivityCategoryCode_Value_Parse(
    const ::std::string& name, CarePlanActivityCategoryCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CarePlanActivityCategoryCode_Value>(
    CarePlanActivityCategoryCode_Value_descriptor(), name, value);
}
enum CarePlanActivityStatusCode_Value {
  CarePlanActivityStatusCode_Value_INVALID_UNINITIALIZED = 0,
  CarePlanActivityStatusCode_Value_NOT_STARTED = 1,
  CarePlanActivityStatusCode_Value_SCHEDULED = 2,
  CarePlanActivityStatusCode_Value_IN_PROGRESS = 3,
  CarePlanActivityStatusCode_Value_ON_HOLD = 4,
  CarePlanActivityStatusCode_Value_COMPLETED = 5,
  CarePlanActivityStatusCode_Value_CANCELLED = 6,
  CarePlanActivityStatusCode_Value_UNKNOWN = 7,
  CarePlanActivityStatusCode_Value_CarePlanActivityStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CarePlanActivityStatusCode_Value_CarePlanActivityStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CarePlanActivityStatusCode_Value_IsValid(int value);
const CarePlanActivityStatusCode_Value CarePlanActivityStatusCode_Value_Value_MIN = CarePlanActivityStatusCode_Value_INVALID_UNINITIALIZED;
const CarePlanActivityStatusCode_Value CarePlanActivityStatusCode_Value_Value_MAX = CarePlanActivityStatusCode_Value_UNKNOWN;
const int CarePlanActivityStatusCode_Value_Value_ARRAYSIZE = CarePlanActivityStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* CarePlanActivityStatusCode_Value_descriptor();
inline const ::std::string& CarePlanActivityStatusCode_Value_Name(CarePlanActivityStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    CarePlanActivityStatusCode_Value_descriptor(), value);
}
inline bool CarePlanActivityStatusCode_Value_Parse(
    const ::std::string& name, CarePlanActivityStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CarePlanActivityStatusCode_Value>(
    CarePlanActivityStatusCode_Value_descriptor(), name, value);
}
enum CarePlanIntentCode_Value {
  CarePlanIntentCode_Value_INVALID_UNINITIALIZED = 0,
  CarePlanIntentCode_Value_PROPOSAL = 1,
  CarePlanIntentCode_Value_PLAN = 2,
  CarePlanIntentCode_Value_ORDER = 3,
  CarePlanIntentCode_Value_OPTION = 4,
  CarePlanIntentCode_Value_CarePlanIntentCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CarePlanIntentCode_Value_CarePlanIntentCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CarePlanIntentCode_Value_IsValid(int value);
const CarePlanIntentCode_Value CarePlanIntentCode_Value_Value_MIN = CarePlanIntentCode_Value_INVALID_UNINITIALIZED;
const CarePlanIntentCode_Value CarePlanIntentCode_Value_Value_MAX = CarePlanIntentCode_Value_OPTION;
const int CarePlanIntentCode_Value_Value_ARRAYSIZE = CarePlanIntentCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* CarePlanIntentCode_Value_descriptor();
inline const ::std::string& CarePlanIntentCode_Value_Name(CarePlanIntentCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    CarePlanIntentCode_Value_descriptor(), value);
}
inline bool CarePlanIntentCode_Value_Parse(
    const ::std::string& name, CarePlanIntentCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CarePlanIntentCode_Value>(
    CarePlanIntentCode_Value_descriptor(), name, value);
}
enum CarePlanStatusCode_Value {
  CarePlanStatusCode_Value_INVALID_UNINITIALIZED = 0,
  CarePlanStatusCode_Value_DRAFT = 1,
  CarePlanStatusCode_Value_ACTIVE = 2,
  CarePlanStatusCode_Value_SUSPENDED = 3,
  CarePlanStatusCode_Value_COMPLETED = 4,
  CarePlanStatusCode_Value_ENTERED_IN_ERROR = 5,
  CarePlanStatusCode_Value_CANCELLED = 6,
  CarePlanStatusCode_Value_UNKNOWN = 7,
  CarePlanStatusCode_Value_CarePlanStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CarePlanStatusCode_Value_CarePlanStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CarePlanStatusCode_Value_IsValid(int value);
const CarePlanStatusCode_Value CarePlanStatusCode_Value_Value_MIN = CarePlanStatusCode_Value_INVALID_UNINITIALIZED;
const CarePlanStatusCode_Value CarePlanStatusCode_Value_Value_MAX = CarePlanStatusCode_Value_UNKNOWN;
const int CarePlanStatusCode_Value_Value_ARRAYSIZE = CarePlanStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* CarePlanStatusCode_Value_descriptor();
inline const ::std::string& CarePlanStatusCode_Value_Name(CarePlanStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    CarePlanStatusCode_Value_descriptor(), value);
}
inline bool CarePlanStatusCode_Value_Parse(
    const ::std::string& name, CarePlanStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CarePlanStatusCode_Value>(
    CarePlanStatusCode_Value_descriptor(), name, value);
}
enum CareTeamCategoryCode_Value {
  CareTeamCategoryCode_Value_INVALID_UNINITIALIZED = 0,
  CareTeamCategoryCode_Value_EVENT = 1,
  CareTeamCategoryCode_Value_ENCOUNTER = 2,
  CareTeamCategoryCode_Value_EPISODE = 3,
  CareTeamCategoryCode_Value_LONGITUDINAL = 4,
  CareTeamCategoryCode_Value_CONDITION = 5,
  CareTeamCategoryCode_Value_CLINICAL_RESEARCH = 6,
  CareTeamCategoryCode_Value_CareTeamCategoryCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CareTeamCategoryCode_Value_CareTeamCategoryCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CareTeamCategoryCode_Value_IsValid(int value);
const CareTeamCategoryCode_Value CareTeamCategoryCode_Value_Value_MIN = CareTeamCategoryCode_Value_INVALID_UNINITIALIZED;
const CareTeamCategoryCode_Value CareTeamCategoryCode_Value_Value_MAX = CareTeamCategoryCode_Value_CLINICAL_RESEARCH;
const int CareTeamCategoryCode_Value_Value_ARRAYSIZE = CareTeamCategoryCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* CareTeamCategoryCode_Value_descriptor();
inline const ::std::string& CareTeamCategoryCode_Value_Name(CareTeamCategoryCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    CareTeamCategoryCode_Value_descriptor(), value);
}
inline bool CareTeamCategoryCode_Value_Parse(
    const ::std::string& name, CareTeamCategoryCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CareTeamCategoryCode_Value>(
    CareTeamCategoryCode_Value_descriptor(), name, value);
}
enum CareTeamStatusCode_Value {
  CareTeamStatusCode_Value_INVALID_UNINITIALIZED = 0,
  CareTeamStatusCode_Value_PROPOSED = 1,
  CareTeamStatusCode_Value_ACTIVE = 2,
  CareTeamStatusCode_Value_SUSPENDED = 3,
  CareTeamStatusCode_Value_INACTIVE = 4,
  CareTeamStatusCode_Value_ENTERED_IN_ERROR = 5,
  CareTeamStatusCode_Value_CareTeamStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CareTeamStatusCode_Value_CareTeamStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CareTeamStatusCode_Value_IsValid(int value);
const CareTeamStatusCode_Value CareTeamStatusCode_Value_Value_MIN = CareTeamStatusCode_Value_INVALID_UNINITIALIZED;
const CareTeamStatusCode_Value CareTeamStatusCode_Value_Value_MAX = CareTeamStatusCode_Value_ENTERED_IN_ERROR;
const int CareTeamStatusCode_Value_Value_ARRAYSIZE = CareTeamStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* CareTeamStatusCode_Value_descriptor();
inline const ::std::string& CareTeamStatusCode_Value_Name(CareTeamStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    CareTeamStatusCode_Value_descriptor(), value);
}
inline bool CareTeamStatusCode_Value_Parse(
    const ::std::string& name, CareTeamStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CareTeamStatusCode_Value>(
    CareTeamStatusCode_Value_descriptor(), name, value);
}
enum ChargeItemStatusCode_Value {
  ChargeItemStatusCode_Value_INVALID_UNINITIALIZED = 0,
  ChargeItemStatusCode_Value_PLANNED = 1,
  ChargeItemStatusCode_Value_BILLABLE = 2,
  ChargeItemStatusCode_Value_NOT_BILLABLE = 3,
  ChargeItemStatusCode_Value_ABORTED = 4,
  ChargeItemStatusCode_Value_BILLED = 5,
  ChargeItemStatusCode_Value_ENTERED_IN_ERROR = 6,
  ChargeItemStatusCode_Value_UNKNOWN = 7,
  ChargeItemStatusCode_Value_ChargeItemStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChargeItemStatusCode_Value_ChargeItemStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChargeItemStatusCode_Value_IsValid(int value);
const ChargeItemStatusCode_Value ChargeItemStatusCode_Value_Value_MIN = ChargeItemStatusCode_Value_INVALID_UNINITIALIZED;
const ChargeItemStatusCode_Value ChargeItemStatusCode_Value_Value_MAX = ChargeItemStatusCode_Value_UNKNOWN;
const int ChargeItemStatusCode_Value_Value_ARRAYSIZE = ChargeItemStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChargeItemStatusCode_Value_descriptor();
inline const ::std::string& ChargeItemStatusCode_Value_Name(ChargeItemStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChargeItemStatusCode_Value_descriptor(), value);
}
inline bool ChargeItemStatusCode_Value_Parse(
    const ::std::string& name, ChargeItemStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChargeItemStatusCode_Value>(
    ChargeItemStatusCode_Value_descriptor(), name, value);
}
enum ChoiceListOrientationCode_Value {
  ChoiceListOrientationCode_Value_INVALID_UNINITIALIZED = 0,
  ChoiceListOrientationCode_Value_HORIZONTAL = 1,
  ChoiceListOrientationCode_Value_VERTICAL = 2,
  ChoiceListOrientationCode_Value_ChoiceListOrientationCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChoiceListOrientationCode_Value_ChoiceListOrientationCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChoiceListOrientationCode_Value_IsValid(int value);
const ChoiceListOrientationCode_Value ChoiceListOrientationCode_Value_Value_MIN = ChoiceListOrientationCode_Value_INVALID_UNINITIALIZED;
const ChoiceListOrientationCode_Value ChoiceListOrientationCode_Value_Value_MAX = ChoiceListOrientationCode_Value_VERTICAL;
const int ChoiceListOrientationCode_Value_Value_ARRAYSIZE = ChoiceListOrientationCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChoiceListOrientationCode_Value_descriptor();
inline const ::std::string& ChoiceListOrientationCode_Value_Name(ChoiceListOrientationCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChoiceListOrientationCode_Value_descriptor(), value);
}
inline bool ChoiceListOrientationCode_Value_Parse(
    const ::std::string& name, ChoiceListOrientationCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChoiceListOrientationCode_Value>(
    ChoiceListOrientationCode_Value_descriptor(), name, value);
}
enum UseCode_Value {
  UseCode_Value_INVALID_UNINITIALIZED = 0,
  UseCode_Value_COMPLETE = 1,
  UseCode_Value_PROPOSED = 2,
  UseCode_Value_EXPLORATORY = 3,
  UseCode_Value_OTHER = 4,
  UseCode_Value_UseCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UseCode_Value_UseCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UseCode_Value_IsValid(int value);
const UseCode_Value UseCode_Value_Value_MIN = UseCode_Value_INVALID_UNINITIALIZED;
const UseCode_Value UseCode_Value_Value_MAX = UseCode_Value_OTHER;
const int UseCode_Value_Value_ARRAYSIZE = UseCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* UseCode_Value_descriptor();
inline const ::std::string& UseCode_Value_Name(UseCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    UseCode_Value_descriptor(), value);
}
inline bool UseCode_Value_Parse(
    const ::std::string& name, UseCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UseCode_Value>(
    UseCode_Value_descriptor(), name, value);
}
enum ClassificationOrContextCode_Value {
  ClassificationOrContextCode_Value_INVALID_UNINITIALIZED = 0,
  ClassificationOrContextCode_Value_CLASSIFICATION = 1,
  ClassificationOrContextCode_Value_CONTEXT = 2,
  ClassificationOrContextCode_Value_ClassificationOrContextCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ClassificationOrContextCode_Value_ClassificationOrContextCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ClassificationOrContextCode_Value_IsValid(int value);
const ClassificationOrContextCode_Value ClassificationOrContextCode_Value_Value_MIN = ClassificationOrContextCode_Value_INVALID_UNINITIALIZED;
const ClassificationOrContextCode_Value ClassificationOrContextCode_Value_Value_MAX = ClassificationOrContextCode_Value_CONTEXT;
const int ClassificationOrContextCode_Value_Value_ARRAYSIZE = ClassificationOrContextCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ClassificationOrContextCode_Value_descriptor();
inline const ::std::string& ClassificationOrContextCode_Value_Name(ClassificationOrContextCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ClassificationOrContextCode_Value_descriptor(), value);
}
inline bool ClassificationOrContextCode_Value_Parse(
    const ::std::string& name, ClassificationOrContextCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClassificationOrContextCode_Value>(
    ClassificationOrContextCode_Value_descriptor(), name, value);
}
enum ClinicalImpressionStatusCode_Value {
  ClinicalImpressionStatusCode_Value_INVALID_UNINITIALIZED = 0,
  ClinicalImpressionStatusCode_Value_DRAFT = 1,
  ClinicalImpressionStatusCode_Value_COMPLETED = 2,
  ClinicalImpressionStatusCode_Value_ENTERED_IN_ERROR = 3,
  ClinicalImpressionStatusCode_Value_ClinicalImpressionStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ClinicalImpressionStatusCode_Value_ClinicalImpressionStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ClinicalImpressionStatusCode_Value_IsValid(int value);
const ClinicalImpressionStatusCode_Value ClinicalImpressionStatusCode_Value_Value_MIN = ClinicalImpressionStatusCode_Value_INVALID_UNINITIALIZED;
const ClinicalImpressionStatusCode_Value ClinicalImpressionStatusCode_Value_Value_MAX = ClinicalImpressionStatusCode_Value_ENTERED_IN_ERROR;
const int ClinicalImpressionStatusCode_Value_Value_ARRAYSIZE = ClinicalImpressionStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ClinicalImpressionStatusCode_Value_descriptor();
inline const ::std::string& ClinicalImpressionStatusCode_Value_Name(ClinicalImpressionStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ClinicalImpressionStatusCode_Value_descriptor(), value);
}
inline bool ClinicalImpressionStatusCode_Value_Parse(
    const ::std::string& name, ClinicalImpressionStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClinicalImpressionStatusCode_Value>(
    ClinicalImpressionStatusCode_Value_descriptor(), name, value);
}
enum CodeSystemContentModeCode_Value {
  CodeSystemContentModeCode_Value_INVALID_UNINITIALIZED = 0,
  CodeSystemContentModeCode_Value_NOT_PRESENT = 1,
  CodeSystemContentModeCode_Value_EXAMPLE = 2,
  CodeSystemContentModeCode_Value_FRAGMENT = 3,
  CodeSystemContentModeCode_Value_COMPLETE = 4,
  CodeSystemContentModeCode_Value_CodeSystemContentModeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CodeSystemContentModeCode_Value_CodeSystemContentModeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CodeSystemContentModeCode_Value_IsValid(int value);
const CodeSystemContentModeCode_Value CodeSystemContentModeCode_Value_Value_MIN = CodeSystemContentModeCode_Value_INVALID_UNINITIALIZED;
const CodeSystemContentModeCode_Value CodeSystemContentModeCode_Value_Value_MAX = CodeSystemContentModeCode_Value_COMPLETE;
const int CodeSystemContentModeCode_Value_Value_ARRAYSIZE = CodeSystemContentModeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* CodeSystemContentModeCode_Value_descriptor();
inline const ::std::string& CodeSystemContentModeCode_Value_Name(CodeSystemContentModeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    CodeSystemContentModeCode_Value_descriptor(), value);
}
inline bool CodeSystemContentModeCode_Value_Parse(
    const ::std::string& name, CodeSystemContentModeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CodeSystemContentModeCode_Value>(
    CodeSystemContentModeCode_Value_descriptor(), name, value);
}
enum CodeSystemHierarchyMeaningCode_Value {
  CodeSystemHierarchyMeaningCode_Value_INVALID_UNINITIALIZED = 0,
  CodeSystemHierarchyMeaningCode_Value_GROUPED_BY = 1,
  CodeSystemHierarchyMeaningCode_Value_IS_A = 2,
  CodeSystemHierarchyMeaningCode_Value_PART_OF = 3,
  CodeSystemHierarchyMeaningCode_Value_CLASSIFIED_WITH = 4,
  CodeSystemHierarchyMeaningCode_Value_CodeSystemHierarchyMeaningCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CodeSystemHierarchyMeaningCode_Value_CodeSystemHierarchyMeaningCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CodeSystemHierarchyMeaningCode_Value_IsValid(int value);
const CodeSystemHierarchyMeaningCode_Value CodeSystemHierarchyMeaningCode_Value_Value_MIN = CodeSystemHierarchyMeaningCode_Value_INVALID_UNINITIALIZED;
const CodeSystemHierarchyMeaningCode_Value CodeSystemHierarchyMeaningCode_Value_Value_MAX = CodeSystemHierarchyMeaningCode_Value_CLASSIFIED_WITH;
const int CodeSystemHierarchyMeaningCode_Value_Value_ARRAYSIZE = CodeSystemHierarchyMeaningCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* CodeSystemHierarchyMeaningCode_Value_descriptor();
inline const ::std::string& CodeSystemHierarchyMeaningCode_Value_Name(CodeSystemHierarchyMeaningCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    CodeSystemHierarchyMeaningCode_Value_descriptor(), value);
}
inline bool CodeSystemHierarchyMeaningCode_Value_Parse(
    const ::std::string& name, CodeSystemHierarchyMeaningCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CodeSystemHierarchyMeaningCode_Value>(
    CodeSystemHierarchyMeaningCode_Value_descriptor(), name, value);
}
enum CommonTagsCode_Value {
  CommonTagsCode_Value_INVALID_UNINITIALIZED = 0,
  CommonTagsCode_Value_ACTIONABLE = 1,
  CommonTagsCode_Value_CommonTagsCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CommonTagsCode_Value_CommonTagsCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CommonTagsCode_Value_IsValid(int value);
const CommonTagsCode_Value CommonTagsCode_Value_Value_MIN = CommonTagsCode_Value_INVALID_UNINITIALIZED;
const CommonTagsCode_Value CommonTagsCode_Value_Value_MAX = CommonTagsCode_Value_ACTIONABLE;
const int CommonTagsCode_Value_Value_ARRAYSIZE = CommonTagsCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* CommonTagsCode_Value_descriptor();
inline const ::std::string& CommonTagsCode_Value_Name(CommonTagsCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    CommonTagsCode_Value_descriptor(), value);
}
inline bool CommonTagsCode_Value_Parse(
    const ::std::string& name, CommonTagsCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommonTagsCode_Value>(
    CommonTagsCode_Value_descriptor(), name, value);
}
enum CommunicationCategoryCode_Value {
  CommunicationCategoryCode_Value_INVALID_UNINITIALIZED = 0,
  CommunicationCategoryCode_Value_ALERT = 1,
  CommunicationCategoryCode_Value_NOTIFICATION = 2,
  CommunicationCategoryCode_Value_REMINDER = 3,
  CommunicationCategoryCode_Value_INSTRUCTION = 4,
  CommunicationCategoryCode_Value_CommunicationCategoryCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CommunicationCategoryCode_Value_CommunicationCategoryCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CommunicationCategoryCode_Value_IsValid(int value);
const CommunicationCategoryCode_Value CommunicationCategoryCode_Value_Value_MIN = CommunicationCategoryCode_Value_INVALID_UNINITIALIZED;
const CommunicationCategoryCode_Value CommunicationCategoryCode_Value_Value_MAX = CommunicationCategoryCode_Value_INSTRUCTION;
const int CommunicationCategoryCode_Value_Value_ARRAYSIZE = CommunicationCategoryCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* CommunicationCategoryCode_Value_descriptor();
inline const ::std::string& CommunicationCategoryCode_Value_Name(CommunicationCategoryCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    CommunicationCategoryCode_Value_descriptor(), value);
}
inline bool CommunicationCategoryCode_Value_Parse(
    const ::std::string& name, CommunicationCategoryCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommunicationCategoryCode_Value>(
    CommunicationCategoryCode_Value_descriptor(), name, value);
}
enum CommunicationNotDoneReasonCode_Value {
  CommunicationNotDoneReasonCode_Value_INVALID_UNINITIALIZED = 0,
  CommunicationNotDoneReasonCode_Value_UNKNOWN = 1,
  CommunicationNotDoneReasonCode_Value_SYSTEM_ERROR = 2,
  CommunicationNotDoneReasonCode_Value_INVALID_PHONE_NUMBER = 3,
  CommunicationNotDoneReasonCode_Value_RECIPIENT_UNAVAILABLE = 4,
  CommunicationNotDoneReasonCode_Value_FAMILY_OBJECTION = 5,
  CommunicationNotDoneReasonCode_Value_PATIENT_OBJECTION = 6,
  CommunicationNotDoneReasonCode_Value_CommunicationNotDoneReasonCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CommunicationNotDoneReasonCode_Value_CommunicationNotDoneReasonCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CommunicationNotDoneReasonCode_Value_IsValid(int value);
const CommunicationNotDoneReasonCode_Value CommunicationNotDoneReasonCode_Value_Value_MIN = CommunicationNotDoneReasonCode_Value_INVALID_UNINITIALIZED;
const CommunicationNotDoneReasonCode_Value CommunicationNotDoneReasonCode_Value_Value_MAX = CommunicationNotDoneReasonCode_Value_PATIENT_OBJECTION;
const int CommunicationNotDoneReasonCode_Value_Value_ARRAYSIZE = CommunicationNotDoneReasonCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* CommunicationNotDoneReasonCode_Value_descriptor();
inline const ::std::string& CommunicationNotDoneReasonCode_Value_Name(CommunicationNotDoneReasonCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    CommunicationNotDoneReasonCode_Value_descriptor(), value);
}
inline bool CommunicationNotDoneReasonCode_Value_Parse(
    const ::std::string& name, CommunicationNotDoneReasonCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommunicationNotDoneReasonCode_Value>(
    CommunicationNotDoneReasonCode_Value_descriptor(), name, value);
}
enum CompartmentTypeCode_Value {
  CompartmentTypeCode_Value_INVALID_UNINITIALIZED = 0,
  CompartmentTypeCode_Value_PATIENT = 1,
  CompartmentTypeCode_Value_ENCOUNTER = 2,
  CompartmentTypeCode_Value_RELATEDPERSON = 3,
  CompartmentTypeCode_Value_PRACTITIONER = 4,
  CompartmentTypeCode_Value_DEVICE = 5,
  CompartmentTypeCode_Value_CompartmentTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CompartmentTypeCode_Value_CompartmentTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CompartmentTypeCode_Value_IsValid(int value);
const CompartmentTypeCode_Value CompartmentTypeCode_Value_Value_MIN = CompartmentTypeCode_Value_INVALID_UNINITIALIZED;
const CompartmentTypeCode_Value CompartmentTypeCode_Value_Value_MAX = CompartmentTypeCode_Value_DEVICE;
const int CompartmentTypeCode_Value_Value_ARRAYSIZE = CompartmentTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* CompartmentTypeCode_Value_descriptor();
inline const ::std::string& CompartmentTypeCode_Value_Name(CompartmentTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    CompartmentTypeCode_Value_descriptor(), value);
}
inline bool CompartmentTypeCode_Value_Parse(
    const ::std::string& name, CompartmentTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CompartmentTypeCode_Value>(
    CompartmentTypeCode_Value_descriptor(), name, value);
}
enum CompositeMeasureScoringCode_Value {
  CompositeMeasureScoringCode_Value_INVALID_UNINITIALIZED = 0,
  CompositeMeasureScoringCode_Value_OPPORTUNITY = 1,
  CompositeMeasureScoringCode_Value_ALL_OR_NOTHING = 2,
  CompositeMeasureScoringCode_Value_LINEAR = 3,
  CompositeMeasureScoringCode_Value_WEIGHTED = 4,
  CompositeMeasureScoringCode_Value_CompositeMeasureScoringCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CompositeMeasureScoringCode_Value_CompositeMeasureScoringCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CompositeMeasureScoringCode_Value_IsValid(int value);
const CompositeMeasureScoringCode_Value CompositeMeasureScoringCode_Value_Value_MIN = CompositeMeasureScoringCode_Value_INVALID_UNINITIALIZED;
const CompositeMeasureScoringCode_Value CompositeMeasureScoringCode_Value_Value_MAX = CompositeMeasureScoringCode_Value_WEIGHTED;
const int CompositeMeasureScoringCode_Value_Value_ARRAYSIZE = CompositeMeasureScoringCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* CompositeMeasureScoringCode_Value_descriptor();
inline const ::std::string& CompositeMeasureScoringCode_Value_Name(CompositeMeasureScoringCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    CompositeMeasureScoringCode_Value_descriptor(), value);
}
inline bool CompositeMeasureScoringCode_Value_Parse(
    const ::std::string& name, CompositeMeasureScoringCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CompositeMeasureScoringCode_Value>(
    CompositeMeasureScoringCode_Value_descriptor(), name, value);
}
enum CompositionAttestationModeCode_Value {
  CompositionAttestationModeCode_Value_INVALID_UNINITIALIZED = 0,
  CompositionAttestationModeCode_Value_PERSONAL = 1,
  CompositionAttestationModeCode_Value_PROFESSIONAL = 2,
  CompositionAttestationModeCode_Value_LEGAL = 3,
  CompositionAttestationModeCode_Value_OFFICIAL = 4,
  CompositionAttestationModeCode_Value_CompositionAttestationModeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CompositionAttestationModeCode_Value_CompositionAttestationModeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CompositionAttestationModeCode_Value_IsValid(int value);
const CompositionAttestationModeCode_Value CompositionAttestationModeCode_Value_Value_MIN = CompositionAttestationModeCode_Value_INVALID_UNINITIALIZED;
const CompositionAttestationModeCode_Value CompositionAttestationModeCode_Value_Value_MAX = CompositionAttestationModeCode_Value_OFFICIAL;
const int CompositionAttestationModeCode_Value_Value_ARRAYSIZE = CompositionAttestationModeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* CompositionAttestationModeCode_Value_descriptor();
inline const ::std::string& CompositionAttestationModeCode_Value_Name(CompositionAttestationModeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    CompositionAttestationModeCode_Value_descriptor(), value);
}
inline bool CompositionAttestationModeCode_Value_Parse(
    const ::std::string& name, CompositionAttestationModeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CompositionAttestationModeCode_Value>(
    CompositionAttestationModeCode_Value_descriptor(), name, value);
}
enum CompositionStatusCode_Value {
  CompositionStatusCode_Value_INVALID_UNINITIALIZED = 0,
  CompositionStatusCode_Value_PRELIMINARY = 1,
  CompositionStatusCode_Value_FINAL = 2,
  CompositionStatusCode_Value_AMENDED = 3,
  CompositionStatusCode_Value_ENTERED_IN_ERROR = 4,
  CompositionStatusCode_Value_CompositionStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CompositionStatusCode_Value_CompositionStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CompositionStatusCode_Value_IsValid(int value);
const CompositionStatusCode_Value CompositionStatusCode_Value_Value_MIN = CompositionStatusCode_Value_INVALID_UNINITIALIZED;
const CompositionStatusCode_Value CompositionStatusCode_Value_Value_MAX = CompositionStatusCode_Value_ENTERED_IN_ERROR;
const int CompositionStatusCode_Value_Value_ARRAYSIZE = CompositionStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* CompositionStatusCode_Value_descriptor();
inline const ::std::string& CompositionStatusCode_Value_Name(CompositionStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    CompositionStatusCode_Value_descriptor(), value);
}
inline bool CompositionStatusCode_Value_Parse(
    const ::std::string& name, CompositionStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CompositionStatusCode_Value>(
    CompositionStatusCode_Value_descriptor(), name, value);
}
enum ConceptMapEquivalenceCode_Value {
  ConceptMapEquivalenceCode_Value_INVALID_UNINITIALIZED = 0,
  ConceptMapEquivalenceCode_Value_RELATEDTO = 1,
  ConceptMapEquivalenceCode_Value_EQUIVALENT = 2,
  ConceptMapEquivalenceCode_Value_EQUAL = 3,
  ConceptMapEquivalenceCode_Value_WIDER = 4,
  ConceptMapEquivalenceCode_Value_SUBSUMES = 5,
  ConceptMapEquivalenceCode_Value_NARROWER = 6,
  ConceptMapEquivalenceCode_Value_SPECIALIZES = 7,
  ConceptMapEquivalenceCode_Value_INEXACT = 8,
  ConceptMapEquivalenceCode_Value_UNMATCHED = 9,
  ConceptMapEquivalenceCode_Value_DISJOINT = 10,
  ConceptMapEquivalenceCode_Value_ConceptMapEquivalenceCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ConceptMapEquivalenceCode_Value_ConceptMapEquivalenceCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ConceptMapEquivalenceCode_Value_IsValid(int value);
const ConceptMapEquivalenceCode_Value ConceptMapEquivalenceCode_Value_Value_MIN = ConceptMapEquivalenceCode_Value_INVALID_UNINITIALIZED;
const ConceptMapEquivalenceCode_Value ConceptMapEquivalenceCode_Value_Value_MAX = ConceptMapEquivalenceCode_Value_DISJOINT;
const int ConceptMapEquivalenceCode_Value_Value_ARRAYSIZE = ConceptMapEquivalenceCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConceptMapEquivalenceCode_Value_descriptor();
inline const ::std::string& ConceptMapEquivalenceCode_Value_Name(ConceptMapEquivalenceCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConceptMapEquivalenceCode_Value_descriptor(), value);
}
inline bool ConceptMapEquivalenceCode_Value_Parse(
    const ::std::string& name, ConceptMapEquivalenceCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConceptMapEquivalenceCode_Value>(
    ConceptMapEquivalenceCode_Value_descriptor(), name, value);
}
enum ConceptMapGroupUnmappedModeCode_Value {
  ConceptMapGroupUnmappedModeCode_Value_INVALID_UNINITIALIZED = 0,
  ConceptMapGroupUnmappedModeCode_Value_PROVIDED = 1,
  ConceptMapGroupUnmappedModeCode_Value_FIXED = 2,
  ConceptMapGroupUnmappedModeCode_Value_OTHER_MAP = 3,
  ConceptMapGroupUnmappedModeCode_Value_ConceptMapGroupUnmappedModeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ConceptMapGroupUnmappedModeCode_Value_ConceptMapGroupUnmappedModeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ConceptMapGroupUnmappedModeCode_Value_IsValid(int value);
const ConceptMapGroupUnmappedModeCode_Value ConceptMapGroupUnmappedModeCode_Value_Value_MIN = ConceptMapGroupUnmappedModeCode_Value_INVALID_UNINITIALIZED;
const ConceptMapGroupUnmappedModeCode_Value ConceptMapGroupUnmappedModeCode_Value_Value_MAX = ConceptMapGroupUnmappedModeCode_Value_OTHER_MAP;
const int ConceptMapGroupUnmappedModeCode_Value_Value_ARRAYSIZE = ConceptMapGroupUnmappedModeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConceptMapGroupUnmappedModeCode_Value_descriptor();
inline const ::std::string& ConceptMapGroupUnmappedModeCode_Value_Name(ConceptMapGroupUnmappedModeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConceptMapGroupUnmappedModeCode_Value_descriptor(), value);
}
inline bool ConceptMapGroupUnmappedModeCode_Value_Parse(
    const ::std::string& name, ConceptMapGroupUnmappedModeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConceptMapGroupUnmappedModeCode_Value>(
    ConceptMapGroupUnmappedModeCode_Value_descriptor(), name, value);
}
enum PropertyTypeCode_Value {
  PropertyTypeCode_Value_INVALID_UNINITIALIZED = 0,
  PropertyTypeCode_Value_CODE = 1,
  PropertyTypeCode_Value_CODING = 2,
  PropertyTypeCode_Value_STRING = 3,
  PropertyTypeCode_Value_INTEGER = 4,
  PropertyTypeCode_Value_BOOLEAN = 5,
  PropertyTypeCode_Value_DATETIME = 6,
  PropertyTypeCode_Value_PropertyTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PropertyTypeCode_Value_PropertyTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PropertyTypeCode_Value_IsValid(int value);
const PropertyTypeCode_Value PropertyTypeCode_Value_Value_MIN = PropertyTypeCode_Value_INVALID_UNINITIALIZED;
const PropertyTypeCode_Value PropertyTypeCode_Value_Value_MAX = PropertyTypeCode_Value_DATETIME;
const int PropertyTypeCode_Value_Value_ARRAYSIZE = PropertyTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* PropertyTypeCode_Value_descriptor();
inline const ::std::string& PropertyTypeCode_Value_Name(PropertyTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    PropertyTypeCode_Value_descriptor(), value);
}
inline bool PropertyTypeCode_Value_Parse(
    const ::std::string& name, PropertyTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PropertyTypeCode_Value>(
    PropertyTypeCode_Value_descriptor(), name, value);
}
enum ConditionalDeleteStatusCode_Value {
  ConditionalDeleteStatusCode_Value_INVALID_UNINITIALIZED = 0,
  ConditionalDeleteStatusCode_Value_NOT_SUPPORTED = 1,
  ConditionalDeleteStatusCode_Value_SINGLE = 2,
  ConditionalDeleteStatusCode_Value_MULTIPLE = 3,
  ConditionalDeleteStatusCode_Value_ConditionalDeleteStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ConditionalDeleteStatusCode_Value_ConditionalDeleteStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ConditionalDeleteStatusCode_Value_IsValid(int value);
const ConditionalDeleteStatusCode_Value ConditionalDeleteStatusCode_Value_Value_MIN = ConditionalDeleteStatusCode_Value_INVALID_UNINITIALIZED;
const ConditionalDeleteStatusCode_Value ConditionalDeleteStatusCode_Value_Value_MAX = ConditionalDeleteStatusCode_Value_MULTIPLE;
const int ConditionalDeleteStatusCode_Value_Value_ARRAYSIZE = ConditionalDeleteStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConditionalDeleteStatusCode_Value_descriptor();
inline const ::std::string& ConditionalDeleteStatusCode_Value_Name(ConditionalDeleteStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConditionalDeleteStatusCode_Value_descriptor(), value);
}
inline bool ConditionalDeleteStatusCode_Value_Parse(
    const ::std::string& name, ConditionalDeleteStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConditionalDeleteStatusCode_Value>(
    ConditionalDeleteStatusCode_Value_descriptor(), name, value);
}
enum ConditionalReadStatusCode_Value {
  ConditionalReadStatusCode_Value_INVALID_UNINITIALIZED = 0,
  ConditionalReadStatusCode_Value_NOT_SUPPORTED = 1,
  ConditionalReadStatusCode_Value_MODIFIED_SINCE = 2,
  ConditionalReadStatusCode_Value_NOT_MATCH = 3,
  ConditionalReadStatusCode_Value_FULL_SUPPORT = 4,
  ConditionalReadStatusCode_Value_ConditionalReadStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ConditionalReadStatusCode_Value_ConditionalReadStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ConditionalReadStatusCode_Value_IsValid(int value);
const ConditionalReadStatusCode_Value ConditionalReadStatusCode_Value_Value_MIN = ConditionalReadStatusCode_Value_INVALID_UNINITIALIZED;
const ConditionalReadStatusCode_Value ConditionalReadStatusCode_Value_Value_MAX = ConditionalReadStatusCode_Value_FULL_SUPPORT;
const int ConditionalReadStatusCode_Value_Value_ARRAYSIZE = ConditionalReadStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConditionalReadStatusCode_Value_descriptor();
inline const ::std::string& ConditionalReadStatusCode_Value_Name(ConditionalReadStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConditionalReadStatusCode_Value_descriptor(), value);
}
inline bool ConditionalReadStatusCode_Value_Parse(
    const ::std::string& name, ConditionalReadStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConditionalReadStatusCode_Value>(
    ConditionalReadStatusCode_Value_descriptor(), name, value);
}
enum ConditionCategoryCodesCode_Value {
  ConditionCategoryCodesCode_Value_INVALID_UNINITIALIZED = 0,
  ConditionCategoryCodesCode_Value_PROBLEM_LIST_ITEM = 1,
  ConditionCategoryCodesCode_Value_ENCOUNTER_DIAGNOSIS = 2,
  ConditionCategoryCodesCode_Value_ConditionCategoryCodesCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ConditionCategoryCodesCode_Value_ConditionCategoryCodesCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ConditionCategoryCodesCode_Value_IsValid(int value);
const ConditionCategoryCodesCode_Value ConditionCategoryCodesCode_Value_Value_MIN = ConditionCategoryCodesCode_Value_INVALID_UNINITIALIZED;
const ConditionCategoryCodesCode_Value ConditionCategoryCodesCode_Value_Value_MAX = ConditionCategoryCodesCode_Value_ENCOUNTER_DIAGNOSIS;
const int ConditionCategoryCodesCode_Value_Value_ARRAYSIZE = ConditionCategoryCodesCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConditionCategoryCodesCode_Value_descriptor();
inline const ::std::string& ConditionCategoryCodesCode_Value_Name(ConditionCategoryCodesCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConditionCategoryCodesCode_Value_descriptor(), value);
}
inline bool ConditionCategoryCodesCode_Value_Parse(
    const ::std::string& name, ConditionCategoryCodesCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConditionCategoryCodesCode_Value>(
    ConditionCategoryCodesCode_Value_descriptor(), name, value);
}
enum ConditionClinicalStatusCodesCode_Value {
  ConditionClinicalStatusCodesCode_Value_INVALID_UNINITIALIZED = 0,
  ConditionClinicalStatusCodesCode_Value_ACTIVE = 1,
  ConditionClinicalStatusCodesCode_Value_RECURRENCE = 2,
  ConditionClinicalStatusCodesCode_Value_INACTIVE = 3,
  ConditionClinicalStatusCodesCode_Value_REMISSION = 4,
  ConditionClinicalStatusCodesCode_Value_RESOLVED = 5,
  ConditionClinicalStatusCodesCode_Value_ConditionClinicalStatusCodesCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ConditionClinicalStatusCodesCode_Value_ConditionClinicalStatusCodesCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ConditionClinicalStatusCodesCode_Value_IsValid(int value);
const ConditionClinicalStatusCodesCode_Value ConditionClinicalStatusCodesCode_Value_Value_MIN = ConditionClinicalStatusCodesCode_Value_INVALID_UNINITIALIZED;
const ConditionClinicalStatusCodesCode_Value ConditionClinicalStatusCodesCode_Value_Value_MAX = ConditionClinicalStatusCodesCode_Value_RESOLVED;
const int ConditionClinicalStatusCodesCode_Value_Value_ARRAYSIZE = ConditionClinicalStatusCodesCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConditionClinicalStatusCodesCode_Value_descriptor();
inline const ::std::string& ConditionClinicalStatusCodesCode_Value_Name(ConditionClinicalStatusCodesCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConditionClinicalStatusCodesCode_Value_descriptor(), value);
}
inline bool ConditionClinicalStatusCodesCode_Value_Parse(
    const ::std::string& name, ConditionClinicalStatusCodesCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConditionClinicalStatusCodesCode_Value>(
    ConditionClinicalStatusCodesCode_Value_descriptor(), name, value);
}
enum ConditionStateCode_Value {
  ConditionStateCode_Value_INVALID_UNINITIALIZED = 0,
  ConditionStateCode_Value_ACTIVE = 1,
  ConditionStateCode_Value_INACTIVE = 2,
  ConditionStateCode_Value_RESOLVED = 3,
  ConditionStateCode_Value_ConditionStateCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ConditionStateCode_Value_ConditionStateCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ConditionStateCode_Value_IsValid(int value);
const ConditionStateCode_Value ConditionStateCode_Value_Value_MIN = ConditionStateCode_Value_INVALID_UNINITIALIZED;
const ConditionStateCode_Value ConditionStateCode_Value_Value_MAX = ConditionStateCode_Value_RESOLVED;
const int ConditionStateCode_Value_Value_ARRAYSIZE = ConditionStateCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConditionStateCode_Value_descriptor();
inline const ::std::string& ConditionStateCode_Value_Name(ConditionStateCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConditionStateCode_Value_descriptor(), value);
}
inline bool ConditionStateCode_Value_Parse(
    const ::std::string& name, ConditionStateCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConditionStateCode_Value>(
    ConditionStateCode_Value_descriptor(), name, value);
}
enum ConditionVerificationStatusCode_Value {
  ConditionVerificationStatusCode_Value_INVALID_UNINITIALIZED = 0,
  ConditionVerificationStatusCode_Value_PROVISIONAL = 1,
  ConditionVerificationStatusCode_Value_DIFFERENTIAL = 2,
  ConditionVerificationStatusCode_Value_CONFIRMED = 3,
  ConditionVerificationStatusCode_Value_REFUTED = 4,
  ConditionVerificationStatusCode_Value_ENTERED_IN_ERROR = 5,
  ConditionVerificationStatusCode_Value_UNKNOWN = 6,
  ConditionVerificationStatusCode_Value_ConditionVerificationStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ConditionVerificationStatusCode_Value_ConditionVerificationStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ConditionVerificationStatusCode_Value_IsValid(int value);
const ConditionVerificationStatusCode_Value ConditionVerificationStatusCode_Value_Value_MIN = ConditionVerificationStatusCode_Value_INVALID_UNINITIALIZED;
const ConditionVerificationStatusCode_Value ConditionVerificationStatusCode_Value_Value_MAX = ConditionVerificationStatusCode_Value_UNKNOWN;
const int ConditionVerificationStatusCode_Value_Value_ARRAYSIZE = ConditionVerificationStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConditionVerificationStatusCode_Value_descriptor();
inline const ::std::string& ConditionVerificationStatusCode_Value_Name(ConditionVerificationStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConditionVerificationStatusCode_Value_descriptor(), value);
}
inline bool ConditionVerificationStatusCode_Value_Parse(
    const ::std::string& name, ConditionVerificationStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConditionVerificationStatusCode_Value>(
    ConditionVerificationStatusCode_Value_descriptor(), name, value);
}
enum ConformanceExpectationCode_Value {
  ConformanceExpectationCode_Value_INVALID_UNINITIALIZED = 0,
  ConformanceExpectationCode_Value_SHALL = 1,
  ConformanceExpectationCode_Value_SHOULD = 2,
  ConformanceExpectationCode_Value_MAY = 3,
  ConformanceExpectationCode_Value_SHOULD_NOT = 4,
  ConformanceExpectationCode_Value_ConformanceExpectationCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ConformanceExpectationCode_Value_ConformanceExpectationCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ConformanceExpectationCode_Value_IsValid(int value);
const ConformanceExpectationCode_Value ConformanceExpectationCode_Value_Value_MIN = ConformanceExpectationCode_Value_INVALID_UNINITIALIZED;
const ConformanceExpectationCode_Value ConformanceExpectationCode_Value_Value_MAX = ConformanceExpectationCode_Value_SHOULD_NOT;
const int ConformanceExpectationCode_Value_Value_ARRAYSIZE = ConformanceExpectationCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConformanceExpectationCode_Value_descriptor();
inline const ::std::string& ConformanceExpectationCode_Value_Name(ConformanceExpectationCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConformanceExpectationCode_Value_descriptor(), value);
}
inline bool ConformanceExpectationCode_Value_Parse(
    const ::std::string& name, ConformanceExpectationCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConformanceExpectationCode_Value>(
    ConformanceExpectationCode_Value_descriptor(), name, value);
}
enum ConsentDataMeaningCode_Value {
  ConsentDataMeaningCode_Value_INVALID_UNINITIALIZED = 0,
  ConsentDataMeaningCode_Value_INSTANCE = 1,
  ConsentDataMeaningCode_Value_RELATED = 2,
  ConsentDataMeaningCode_Value_DEPENDENTS = 3,
  ConsentDataMeaningCode_Value_AUTHOREDBY = 4,
  ConsentDataMeaningCode_Value_ConsentDataMeaningCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ConsentDataMeaningCode_Value_ConsentDataMeaningCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ConsentDataMeaningCode_Value_IsValid(int value);
const ConsentDataMeaningCode_Value ConsentDataMeaningCode_Value_Value_MIN = ConsentDataMeaningCode_Value_INVALID_UNINITIALIZED;
const ConsentDataMeaningCode_Value ConsentDataMeaningCode_Value_Value_MAX = ConsentDataMeaningCode_Value_AUTHOREDBY;
const int ConsentDataMeaningCode_Value_Value_ARRAYSIZE = ConsentDataMeaningCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConsentDataMeaningCode_Value_descriptor();
inline const ::std::string& ConsentDataMeaningCode_Value_Name(ConsentDataMeaningCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConsentDataMeaningCode_Value_descriptor(), value);
}
inline bool ConsentDataMeaningCode_Value_Parse(
    const ::std::string& name, ConsentDataMeaningCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConsentDataMeaningCode_Value>(
    ConsentDataMeaningCode_Value_descriptor(), name, value);
}
enum ConsentExceptTypeCode_Value {
  ConsentExceptTypeCode_Value_INVALID_UNINITIALIZED = 0,
  ConsentExceptTypeCode_Value_DENY = 1,
  ConsentExceptTypeCode_Value_PERMIT = 2,
  ConsentExceptTypeCode_Value_ConsentExceptTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ConsentExceptTypeCode_Value_ConsentExceptTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ConsentExceptTypeCode_Value_IsValid(int value);
const ConsentExceptTypeCode_Value ConsentExceptTypeCode_Value_Value_MIN = ConsentExceptTypeCode_Value_INVALID_UNINITIALIZED;
const ConsentExceptTypeCode_Value ConsentExceptTypeCode_Value_Value_MAX = ConsentExceptTypeCode_Value_PERMIT;
const int ConsentExceptTypeCode_Value_Value_ARRAYSIZE = ConsentExceptTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConsentExceptTypeCode_Value_descriptor();
inline const ::std::string& ConsentExceptTypeCode_Value_Name(ConsentExceptTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConsentExceptTypeCode_Value_descriptor(), value);
}
inline bool ConsentExceptTypeCode_Value_Parse(
    const ::std::string& name, ConsentExceptTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConsentExceptTypeCode_Value>(
    ConsentExceptTypeCode_Value_descriptor(), name, value);
}
enum ConsentStateCode_Value {
  ConsentStateCode_Value_INVALID_UNINITIALIZED = 0,
  ConsentStateCode_Value_DRAFT = 1,
  ConsentStateCode_Value_PROPOSED = 2,
  ConsentStateCode_Value_ACTIVE = 3,
  ConsentStateCode_Value_REJECTED = 4,
  ConsentStateCode_Value_INACTIVE = 5,
  ConsentStateCode_Value_ENTERED_IN_ERROR = 6,
  ConsentStateCode_Value_ConsentStateCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ConsentStateCode_Value_ConsentStateCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ConsentStateCode_Value_IsValid(int value);
const ConsentStateCode_Value ConsentStateCode_Value_Value_MIN = ConsentStateCode_Value_INVALID_UNINITIALIZED;
const ConsentStateCode_Value ConsentStateCode_Value_Value_MAX = ConsentStateCode_Value_ENTERED_IN_ERROR;
const int ConsentStateCode_Value_Value_ARRAYSIZE = ConsentStateCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConsentStateCode_Value_descriptor();
inline const ::std::string& ConsentStateCode_Value_Name(ConsentStateCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConsentStateCode_Value_descriptor(), value);
}
inline bool ConsentStateCode_Value_Parse(
    const ::std::string& name, ConsentStateCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConsentStateCode_Value>(
    ConsentStateCode_Value_descriptor(), name, value);
}
enum ContactEntityTypeCode_Value {
  ContactEntityTypeCode_Value_INVALID_UNINITIALIZED = 0,
  ContactEntityTypeCode_Value_BILL = 1,
  ContactEntityTypeCode_Value_ADMIN = 2,
  ContactEntityTypeCode_Value_HR = 3,
  ContactEntityTypeCode_Value_PAYOR = 4,
  ContactEntityTypeCode_Value_PATINF = 5,
  ContactEntityTypeCode_Value_PRESS = 6,
  ContactEntityTypeCode_Value_ContactEntityTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ContactEntityTypeCode_Value_ContactEntityTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ContactEntityTypeCode_Value_IsValid(int value);
const ContactEntityTypeCode_Value ContactEntityTypeCode_Value_Value_MIN = ContactEntityTypeCode_Value_INVALID_UNINITIALIZED;
const ContactEntityTypeCode_Value ContactEntityTypeCode_Value_Value_MAX = ContactEntityTypeCode_Value_PRESS;
const int ContactEntityTypeCode_Value_Value_ARRAYSIZE = ContactEntityTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ContactEntityTypeCode_Value_descriptor();
inline const ::std::string& ContactEntityTypeCode_Value_Name(ContactEntityTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ContactEntityTypeCode_Value_descriptor(), value);
}
inline bool ContactEntityTypeCode_Value_Parse(
    const ::std::string& name, ContactEntityTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ContactEntityTypeCode_Value>(
    ContactEntityTypeCode_Value_descriptor(), name, value);
}
enum ContentTypeCode_Value {
  ContentTypeCode_Value_INVALID_UNINITIALIZED = 0,
  ContentTypeCode_Value_XML = 1,
  ContentTypeCode_Value_JSON = 2,
  ContentTypeCode_Value_TTL = 3,
  ContentTypeCode_Value_NONE = 4,
  ContentTypeCode_Value_ContentTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ContentTypeCode_Value_ContentTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ContentTypeCode_Value_IsValid(int value);
const ContentTypeCode_Value ContentTypeCode_Value_Value_MIN = ContentTypeCode_Value_INVALID_UNINITIALIZED;
const ContentTypeCode_Value ContentTypeCode_Value_Value_MAX = ContentTypeCode_Value_NONE;
const int ContentTypeCode_Value_Value_ARRAYSIZE = ContentTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ContentTypeCode_Value_descriptor();
inline const ::std::string& ContentTypeCode_Value_Name(ContentTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ContentTypeCode_Value_descriptor(), value);
}
inline bool ContentTypeCode_Value_Parse(
    const ::std::string& name, ContentTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ContentTypeCode_Value>(
    ContentTypeCode_Value_descriptor(), name, value);
}
enum ContractResourceStatusCode_Value {
  ContractResourceStatusCode_Value_INVALID_UNINITIALIZED = 0,
  ContractResourceStatusCode_Value_AMENDED = 1,
  ContractResourceStatusCode_Value_APPENDED = 2,
  ContractResourceStatusCode_Value_CANCELLED = 3,
  ContractResourceStatusCode_Value_DISPUTED = 4,
  ContractResourceStatusCode_Value_ENTERED_IN_ERROR = 5,
  ContractResourceStatusCode_Value_EXECUTABLE = 6,
  ContractResourceStatusCode_Value_EXECUTED = 7,
  ContractResourceStatusCode_Value_NEGOTIABLE = 8,
  ContractResourceStatusCode_Value_OFFERED = 9,
  ContractResourceStatusCode_Value_POLICY = 10,
  ContractResourceStatusCode_Value_REJECTED = 11,
  ContractResourceStatusCode_Value_RENEWED = 12,
  ContractResourceStatusCode_Value_REVOKED = 13,
  ContractResourceStatusCode_Value_RESOLVED = 14,
  ContractResourceStatusCode_Value_TERMINATED = 15,
  ContractResourceStatusCode_Value_ContractResourceStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ContractResourceStatusCode_Value_ContractResourceStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ContractResourceStatusCode_Value_IsValid(int value);
const ContractResourceStatusCode_Value ContractResourceStatusCode_Value_Value_MIN = ContractResourceStatusCode_Value_INVALID_UNINITIALIZED;
const ContractResourceStatusCode_Value ContractResourceStatusCode_Value_Value_MAX = ContractResourceStatusCode_Value_TERMINATED;
const int ContractResourceStatusCode_Value_Value_ARRAYSIZE = ContractResourceStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ContractResourceStatusCode_Value_descriptor();
inline const ::std::string& ContractResourceStatusCode_Value_Name(ContractResourceStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ContractResourceStatusCode_Value_descriptor(), value);
}
inline bool ContractResourceStatusCode_Value_Parse(
    const ::std::string& name, ContractResourceStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ContractResourceStatusCode_Value>(
    ContractResourceStatusCode_Value_descriptor(), name, value);
}
enum ContributorTypeCode_Value {
  ContributorTypeCode_Value_INVALID_UNINITIALIZED = 0,
  ContributorTypeCode_Value_AUTHOR = 1,
  ContributorTypeCode_Value_EDITOR = 2,
  ContributorTypeCode_Value_REVIEWER = 3,
  ContributorTypeCode_Value_ENDORSER = 4,
  ContributorTypeCode_Value_ContributorTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ContributorTypeCode_Value_ContributorTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ContributorTypeCode_Value_IsValid(int value);
const ContributorTypeCode_Value ContributorTypeCode_Value_Value_MIN = ContributorTypeCode_Value_INVALID_UNINITIALIZED;
const ContributorTypeCode_Value ContributorTypeCode_Value_Value_MAX = ContributorTypeCode_Value_ENDORSER;
const int ContributorTypeCode_Value_Value_ARRAYSIZE = ContributorTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ContributorTypeCode_Value_descriptor();
inline const ::std::string& ContributorTypeCode_Value_Name(ContributorTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ContributorTypeCode_Value_descriptor(), value);
}
inline bool ContributorTypeCode_Value_Parse(
    const ::std::string& name, ContributorTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ContributorTypeCode_Value>(
    ContributorTypeCode_Value_descriptor(), name, value);
}
enum CopyNumberEventCode_Value {
  CopyNumberEventCode_Value_INVALID_UNINITIALIZED = 0,
  CopyNumberEventCode_Value_AMP = 1,
  CopyNumberEventCode_Value_DEL = 2,
  CopyNumberEventCode_Value_LOF = 3,
  CopyNumberEventCode_Value_CopyNumberEventCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CopyNumberEventCode_Value_CopyNumberEventCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CopyNumberEventCode_Value_IsValid(int value);
const CopyNumberEventCode_Value CopyNumberEventCode_Value_Value_MIN = CopyNumberEventCode_Value_INVALID_UNINITIALIZED;
const CopyNumberEventCode_Value CopyNumberEventCode_Value_Value_MAX = CopyNumberEventCode_Value_LOF;
const int CopyNumberEventCode_Value_Value_ARRAYSIZE = CopyNumberEventCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* CopyNumberEventCode_Value_descriptor();
inline const ::std::string& CopyNumberEventCode_Value_Name(CopyNumberEventCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    CopyNumberEventCode_Value_descriptor(), value);
}
inline bool CopyNumberEventCode_Value_Parse(
    const ::std::string& name, CopyNumberEventCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CopyNumberEventCode_Value>(
    CopyNumberEventCode_Value_descriptor(), name, value);
}
enum DataAbsentReasonCode_Value {
  DataAbsentReasonCode_Value_INVALID_UNINITIALIZED = 0,
  DataAbsentReasonCode_Value_UNKNOWN = 1,
  DataAbsentReasonCode_Value_ASKED = 2,
  DataAbsentReasonCode_Value_TEMP = 3,
  DataAbsentReasonCode_Value_NOT_ASKED = 4,
  DataAbsentReasonCode_Value_MASKED = 5,
  DataAbsentReasonCode_Value_UNSUPPORTED = 6,
  DataAbsentReasonCode_Value_ASTEXT = 7,
  DataAbsentReasonCode_Value_ERROR = 8,
  DataAbsentReasonCode_Value_NOT_A_NUMBER = 9,
  DataAbsentReasonCode_Value_NOT_PERFORMED = 10,
  DataAbsentReasonCode_Value_DataAbsentReasonCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DataAbsentReasonCode_Value_DataAbsentReasonCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DataAbsentReasonCode_Value_IsValid(int value);
const DataAbsentReasonCode_Value DataAbsentReasonCode_Value_Value_MIN = DataAbsentReasonCode_Value_INVALID_UNINITIALIZED;
const DataAbsentReasonCode_Value DataAbsentReasonCode_Value_Value_MAX = DataAbsentReasonCode_Value_NOT_PERFORMED;
const int DataAbsentReasonCode_Value_Value_ARRAYSIZE = DataAbsentReasonCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* DataAbsentReasonCode_Value_descriptor();
inline const ::std::string& DataAbsentReasonCode_Value_Name(DataAbsentReasonCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    DataAbsentReasonCode_Value_descriptor(), value);
}
inline bool DataAbsentReasonCode_Value_Parse(
    const ::std::string& name, DataAbsentReasonCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataAbsentReasonCode_Value>(
    DataAbsentReasonCode_Value_descriptor(), name, value);
}
enum DataElementStringencyCode_Value {
  DataElementStringencyCode_Value_INVALID_UNINITIALIZED = 0,
  DataElementStringencyCode_Value_COMPARABLE = 1,
  DataElementStringencyCode_Value_FULLY_SPECIFIED = 2,
  DataElementStringencyCode_Value_EQUIVALENT = 3,
  DataElementStringencyCode_Value_CONVERTABLE = 4,
  DataElementStringencyCode_Value_SCALEABLE = 5,
  DataElementStringencyCode_Value_FLEXIBLE = 6,
  DataElementStringencyCode_Value_DataElementStringencyCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DataElementStringencyCode_Value_DataElementStringencyCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DataElementStringencyCode_Value_IsValid(int value);
const DataElementStringencyCode_Value DataElementStringencyCode_Value_Value_MIN = DataElementStringencyCode_Value_INVALID_UNINITIALIZED;
const DataElementStringencyCode_Value DataElementStringencyCode_Value_Value_MAX = DataElementStringencyCode_Value_FLEXIBLE;
const int DataElementStringencyCode_Value_Value_ARRAYSIZE = DataElementStringencyCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* DataElementStringencyCode_Value_descriptor();
inline const ::std::string& DataElementStringencyCode_Value_Name(DataElementStringencyCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    DataElementStringencyCode_Value_descriptor(), value);
}
inline bool DataElementStringencyCode_Value_Parse(
    const ::std::string& name, DataElementStringencyCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataElementStringencyCode_Value>(
    DataElementStringencyCode_Value_descriptor(), name, value);
}
enum TriggerTypeCode_Value {
  TriggerTypeCode_Value_INVALID_UNINITIALIZED = 0,
  TriggerTypeCode_Value_NAMED_EVENT = 1,
  TriggerTypeCode_Value_PERIODIC = 2,
  TriggerTypeCode_Value_DATA_ADDED = 3,
  TriggerTypeCode_Value_DATA_MODIFIED = 4,
  TriggerTypeCode_Value_DATA_REMOVED = 5,
  TriggerTypeCode_Value_DATA_ACCESSED = 6,
  TriggerTypeCode_Value_DATA_ACCESS_ENDED = 7,
  TriggerTypeCode_Value_TriggerTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TriggerTypeCode_Value_TriggerTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TriggerTypeCode_Value_IsValid(int value);
const TriggerTypeCode_Value TriggerTypeCode_Value_Value_MIN = TriggerTypeCode_Value_INVALID_UNINITIALIZED;
const TriggerTypeCode_Value TriggerTypeCode_Value_Value_MAX = TriggerTypeCode_Value_DATA_ACCESS_ENDED;
const int TriggerTypeCode_Value_Value_ARRAYSIZE = TriggerTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* TriggerTypeCode_Value_descriptor();
inline const ::std::string& TriggerTypeCode_Value_Name(TriggerTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    TriggerTypeCode_Value_descriptor(), value);
}
inline bool TriggerTypeCode_Value_Parse(
    const ::std::string& name, TriggerTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TriggerTypeCode_Value>(
    TriggerTypeCode_Value_descriptor(), name, value);
}
enum DataTypeCode_Value {
  DataTypeCode_Value_INVALID_UNINITIALIZED = 0,
  DataTypeCode_Value_ADDRESS = 1,
  DataTypeCode_Value_AGE = 2,
  DataTypeCode_Value_ANNOTATION = 3,
  DataTypeCode_Value_ATTACHMENT = 4,
  DataTypeCode_Value_BACKBONE_ELEMENT = 5,
  DataTypeCode_Value_CODEABLE_CONCEPT = 6,
  DataTypeCode_Value_CODING = 7,
  DataTypeCode_Value_CONTACT_DETAIL = 8,
  DataTypeCode_Value_CONTACT_POINT = 9,
  DataTypeCode_Value_CONTRIBUTOR = 10,
  DataTypeCode_Value_COUNT = 11,
  DataTypeCode_Value_DATA_REQUIREMENT = 12,
  DataTypeCode_Value_DISTANCE = 13,
  DataTypeCode_Value_DOSAGE = 14,
  DataTypeCode_Value_DURATION = 15,
  DataTypeCode_Value_ELEMENT = 16,
  DataTypeCode_Value_ELEMENT_DEFINITION = 17,
  DataTypeCode_Value_EXTENSION = 18,
  DataTypeCode_Value_HUMAN_NAME = 19,
  DataTypeCode_Value_IDENTIFIER = 20,
  DataTypeCode_Value_META = 21,
  DataTypeCode_Value_MONEY = 22,
  DataTypeCode_Value_NARRATIVE = 23,
  DataTypeCode_Value_PARAMETER_DEFINITION = 24,
  DataTypeCode_Value_PERIOD = 25,
  DataTypeCode_Value_QUANTITY = 26,
  DataTypeCode_Value_RANGE = 27,
  DataTypeCode_Value_RATIO = 28,
  DataTypeCode_Value_REFERENCE = 29,
  DataTypeCode_Value_RELATED_ARTIFACT = 30,
  DataTypeCode_Value_SAMPLED_DATA = 31,
  DataTypeCode_Value_SIGNATURE = 32,
  DataTypeCode_Value_SIMPLE_QUANTITY = 33,
  DataTypeCode_Value_TIMING = 34,
  DataTypeCode_Value_TRIGGER_DEFINITION = 35,
  DataTypeCode_Value_USAGE_CONTEXT = 36,
  DataTypeCode_Value_BASE64_BINARY = 37,
  DataTypeCode_Value_BOOLEAN = 38,
  DataTypeCode_Value_CODE = 39,
  DataTypeCode_Value_DATE = 40,
  DataTypeCode_Value_DATE_TIME = 41,
  DataTypeCode_Value_DECIMAL = 42,
  DataTypeCode_Value_ID = 43,
  DataTypeCode_Value_INSTANT = 44,
  DataTypeCode_Value_INTEGER = 45,
  DataTypeCode_Value_MARKDOWN = 46,
  DataTypeCode_Value_OID = 47,
  DataTypeCode_Value_POSITIVE_INT = 48,
  DataTypeCode_Value_STRING = 49,
  DataTypeCode_Value_TIME = 50,
  DataTypeCode_Value_UNSIGNED_INT = 51,
  DataTypeCode_Value_URI = 52,
  DataTypeCode_Value_UUID = 53,
  DataTypeCode_Value_XHTML = 54,
  DataTypeCode_Value_DataTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DataTypeCode_Value_DataTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DataTypeCode_Value_IsValid(int value);
const DataTypeCode_Value DataTypeCode_Value_Value_MIN = DataTypeCode_Value_INVALID_UNINITIALIZED;
const DataTypeCode_Value DataTypeCode_Value_Value_MAX = DataTypeCode_Value_XHTML;
const int DataTypeCode_Value_Value_ARRAYSIZE = DataTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* DataTypeCode_Value_descriptor();
inline const ::std::string& DataTypeCode_Value_Name(DataTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    DataTypeCode_Value_descriptor(), value);
}
inline bool DataTypeCode_Value_Parse(
    const ::std::string& name, DataTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataTypeCode_Value>(
    DataTypeCode_Value_descriptor(), name, value);
}
enum FHIRAllTypesCode_Value {
  FHIRAllTypesCode_Value_INVALID_UNINITIALIZED = 0,
  FHIRAllTypesCode_Value_ADDRESS = 1,
  FHIRAllTypesCode_Value_AGE = 2,
  FHIRAllTypesCode_Value_ANNOTATION = 3,
  FHIRAllTypesCode_Value_ATTACHMENT = 4,
  FHIRAllTypesCode_Value_BACKBONE_ELEMENT = 5,
  FHIRAllTypesCode_Value_CODEABLE_CONCEPT = 6,
  FHIRAllTypesCode_Value_CODING = 7,
  FHIRAllTypesCode_Value_CONTACT_DETAIL = 8,
  FHIRAllTypesCode_Value_CONTACT_POINT = 9,
  FHIRAllTypesCode_Value_CONTRIBUTOR = 10,
  FHIRAllTypesCode_Value_COUNT = 11,
  FHIRAllTypesCode_Value_DATA_REQUIREMENT = 12,
  FHIRAllTypesCode_Value_DISTANCE = 13,
  FHIRAllTypesCode_Value_DOSAGE = 14,
  FHIRAllTypesCode_Value_DURATION = 15,
  FHIRAllTypesCode_Value_ELEMENT = 16,
  FHIRAllTypesCode_Value_ELEMENT_DEFINITION = 17,
  FHIRAllTypesCode_Value_EXTENSION = 18,
  FHIRAllTypesCode_Value_HUMAN_NAME = 19,
  FHIRAllTypesCode_Value_IDENTIFIER = 20,
  FHIRAllTypesCode_Value_META = 21,
  FHIRAllTypesCode_Value_MONEY = 22,
  FHIRAllTypesCode_Value_NARRATIVE = 23,
  FHIRAllTypesCode_Value_PARAMETER_DEFINITION = 24,
  FHIRAllTypesCode_Value_PERIOD = 25,
  FHIRAllTypesCode_Value_QUANTITY = 26,
  FHIRAllTypesCode_Value_RANGE = 27,
  FHIRAllTypesCode_Value_RATIO = 28,
  FHIRAllTypesCode_Value_REFERENCE = 29,
  FHIRAllTypesCode_Value_RELATED_ARTIFACT = 30,
  FHIRAllTypesCode_Value_SAMPLED_DATA = 31,
  FHIRAllTypesCode_Value_SIGNATURE = 32,
  FHIRAllTypesCode_Value_SIMPLE_QUANTITY = 33,
  FHIRAllTypesCode_Value_TIMING = 34,
  FHIRAllTypesCode_Value_TRIGGER_DEFINITION = 35,
  FHIRAllTypesCode_Value_USAGE_CONTEXT = 36,
  FHIRAllTypesCode_Value_BASE64_BINARY = 37,
  FHIRAllTypesCode_Value_BOOLEAN = 38,
  FHIRAllTypesCode_Value_CODE = 39,
  FHIRAllTypesCode_Value_DATE = 40,
  FHIRAllTypesCode_Value_DATE_TIME = 41,
  FHIRAllTypesCode_Value_DECIMAL = 42,
  FHIRAllTypesCode_Value_ID = 43,
  FHIRAllTypesCode_Value_INSTANT = 44,
  FHIRAllTypesCode_Value_INTEGER = 45,
  FHIRAllTypesCode_Value_MARKDOWN = 46,
  FHIRAllTypesCode_Value_OID = 47,
  FHIRAllTypesCode_Value_POSITIVE_INT = 48,
  FHIRAllTypesCode_Value_STRING = 49,
  FHIRAllTypesCode_Value_TIME = 50,
  FHIRAllTypesCode_Value_UNSIGNED_INT = 51,
  FHIRAllTypesCode_Value_URI = 52,
  FHIRAllTypesCode_Value_UUID = 53,
  FHIRAllTypesCode_Value_XHTML = 54,
  FHIRAllTypesCode_Value_ACCOUNT = 55,
  FHIRAllTypesCode_Value_ACTIVITY_DEFINITION = 56,
  FHIRAllTypesCode_Value_ADVERSE_EVENT = 57,
  FHIRAllTypesCode_Value_ALLERGY_INTOLERANCE = 58,
  FHIRAllTypesCode_Value_APPOINTMENT = 59,
  FHIRAllTypesCode_Value_APPOINTMENT_RESPONSE = 60,
  FHIRAllTypesCode_Value_AUDIT_EVENT = 61,
  FHIRAllTypesCode_Value_BASIC = 62,
  FHIRAllTypesCode_Value_BINARY = 63,
  FHIRAllTypesCode_Value_BODY_SITE = 64,
  FHIRAllTypesCode_Value_BUNDLE = 65,
  FHIRAllTypesCode_Value_CAPABILITY_STATEMENT = 66,
  FHIRAllTypesCode_Value_CARE_PLAN = 67,
  FHIRAllTypesCode_Value_CARE_TEAM = 68,
  FHIRAllTypesCode_Value_CHARGE_ITEM = 69,
  FHIRAllTypesCode_Value_CLAIM = 70,
  FHIRAllTypesCode_Value_CLAIM_RESPONSE = 71,
  FHIRAllTypesCode_Value_CLINICAL_IMPRESSION = 72,
  FHIRAllTypesCode_Value_CODE_SYSTEM = 73,
  FHIRAllTypesCode_Value_COMMUNICATION = 74,
  FHIRAllTypesCode_Value_COMMUNICATION_REQUEST = 75,
  FHIRAllTypesCode_Value_COMPARTMENT_DEFINITION = 76,
  FHIRAllTypesCode_Value_COMPOSITION = 77,
  FHIRAllTypesCode_Value_CONCEPT_MAP = 78,
  FHIRAllTypesCode_Value_CONDITION = 79,
  FHIRAllTypesCode_Value_CONSENT = 80,
  FHIRAllTypesCode_Value_CONTRACT = 81,
  FHIRAllTypesCode_Value_COVERAGE = 82,
  FHIRAllTypesCode_Value_DATA_ELEMENT = 83,
  FHIRAllTypesCode_Value_DETECTED_ISSUE = 84,
  FHIRAllTypesCode_Value_DEVICE = 85,
  FHIRAllTypesCode_Value_DEVICE_COMPONENT = 86,
  FHIRAllTypesCode_Value_DEVICE_METRIC = 87,
  FHIRAllTypesCode_Value_DEVICE_REQUEST = 88,
  FHIRAllTypesCode_Value_DEVICE_USE_STATEMENT = 89,
  FHIRAllTypesCode_Value_DIAGNOSTIC_REPORT = 90,
  FHIRAllTypesCode_Value_DOCUMENT_MANIFEST = 91,
  FHIRAllTypesCode_Value_DOCUMENT_REFERENCE = 92,
  FHIRAllTypesCode_Value_DOMAIN_RESOURCE = 93,
  FHIRAllTypesCode_Value_ELIGIBILITY_REQUEST = 94,
  FHIRAllTypesCode_Value_ELIGIBILITY_RESPONSE = 95,
  FHIRAllTypesCode_Value_ENCOUNTER = 96,
  FHIRAllTypesCode_Value_ENDPOINT = 97,
  FHIRAllTypesCode_Value_ENROLLMENT_REQUEST = 98,
  FHIRAllTypesCode_Value_ENROLLMENT_RESPONSE = 99,
  FHIRAllTypesCode_Value_EPISODE_OF_CARE = 100,
  FHIRAllTypesCode_Value_EXPANSION_PROFILE = 101,
  FHIRAllTypesCode_Value_EXPLANATION_OF_BENEFIT = 102,
  FHIRAllTypesCode_Value_FAMILY_MEMBER_HISTORY = 103,
  FHIRAllTypesCode_Value_FLAG = 104,
  FHIRAllTypesCode_Value_GOAL = 105,
  FHIRAllTypesCode_Value_GRAPH_DEFINITION = 106,
  FHIRAllTypesCode_Value_GROUP = 107,
  FHIRAllTypesCode_Value_GUIDANCE_RESPONSE = 108,
  FHIRAllTypesCode_Value_HEALTHCARE_SERVICE = 109,
  FHIRAllTypesCode_Value_IMAGING_MANIFEST = 110,
  FHIRAllTypesCode_Value_IMAGING_STUDY = 111,
  FHIRAllTypesCode_Value_IMMUNIZATION = 112,
  FHIRAllTypesCode_Value_IMMUNIZATION_RECOMMENDATION = 113,
  FHIRAllTypesCode_Value_IMPLEMENTATION_GUIDE = 114,
  FHIRAllTypesCode_Value_LIBRARY = 115,
  FHIRAllTypesCode_Value_LINKAGE = 116,
  FHIRAllTypesCode_Value_LIST = 117,
  FHIRAllTypesCode_Value_LOCATION = 118,
  FHIRAllTypesCode_Value_MEASURE = 119,
  FHIRAllTypesCode_Value_MEASURE_REPORT = 120,
  FHIRAllTypesCode_Value_MEDIA = 121,
  FHIRAllTypesCode_Value_MEDICATION = 122,
  FHIRAllTypesCode_Value_MEDICATION_ADMINISTRATION = 123,
  FHIRAllTypesCode_Value_MEDICATION_DISPENSE = 124,
  FHIRAllTypesCode_Value_MEDICATION_REQUEST = 125,
  FHIRAllTypesCode_Value_MEDICATION_STATEMENT = 126,
  FHIRAllTypesCode_Value_MESSAGE_DEFINITION = 127,
  FHIRAllTypesCode_Value_MESSAGE_HEADER = 128,
  FHIRAllTypesCode_Value_NAMING_SYSTEM = 129,
  FHIRAllTypesCode_Value_NUTRITION_ORDER = 130,
  FHIRAllTypesCode_Value_OBSERVATION = 131,
  FHIRAllTypesCode_Value_OPERATIONDEFINITION = 132,
  FHIRAllTypesCode_Value_OPERATION_OUTCOME = 133,
  FHIRAllTypesCode_Value_ORGANIZATION = 134,
  FHIRAllTypesCode_Value_PARAMETERS = 135,
  FHIRAllTypesCode_Value_PATIENT = 136,
  FHIRAllTypesCode_Value_PAYMENT_NOTICE = 137,
  FHIRAllTypesCode_Value_PAYMENT_RECONCILIATION = 138,
  FHIRAllTypesCode_Value_PERSON = 139,
  FHIRAllTypesCode_Value_PLAN_DEFINITION = 140,
  FHIRAllTypesCode_Value_PRACTITIONER = 141,
  FHIRAllTypesCode_Value_PRACTITIONER_ROLE = 142,
  FHIRAllTypesCode_Value_PROCEDURE = 143,
  FHIRAllTypesCode_Value_PROCEDURE_REQUEST = 144,
  FHIRAllTypesCode_Value_PROCESS_REQUEST = 145,
  FHIRAllTypesCode_Value_PROCESS_RESPONSE = 146,
  FHIRAllTypesCode_Value_PROVENANCE = 147,
  FHIRAllTypesCode_Value_QUESTIONNAIRE = 148,
  FHIRAllTypesCode_Value_QUESTIONNAIRE_RESPONSE = 149,
  FHIRAllTypesCode_Value_REFERRAL_REQUEST = 150,
  FHIRAllTypesCode_Value_RELATED_PERSON = 151,
  FHIRAllTypesCode_Value_REQUEST_GROUP = 152,
  FHIRAllTypesCode_Value_RESEARCH_STUDY = 153,
  FHIRAllTypesCode_Value_RESEARCH_SUBJECT = 154,
  FHIRAllTypesCode_Value_RESOURCE = 155,
  FHIRAllTypesCode_Value_RISK_ASSESSMENT = 156,
  FHIRAllTypesCode_Value_SCHEDULE = 157,
  FHIRAllTypesCode_Value_SEARCH_PARAMETER = 158,
  FHIRAllTypesCode_Value_SEQUENCE = 159,
  FHIRAllTypesCode_Value_SERVICE_DEFINITION = 160,
  FHIRAllTypesCode_Value_SLOT = 161,
  FHIRAllTypesCode_Value_SPECIMEN = 162,
  FHIRAllTypesCode_Value_STRUCTURE_DEFINITION = 163,
  FHIRAllTypesCode_Value_STRUCTURE_MAP = 164,
  FHIRAllTypesCode_Value_SUBSCRIPTION = 165,
  FHIRAllTypesCode_Value_SUBSTANCE = 166,
  FHIRAllTypesCode_Value_SUPPLY_DELIVERY = 167,
  FHIRAllTypesCode_Value_SUPPLY_REQUEST = 168,
  FHIRAllTypesCode_Value_TASK = 169,
  FHIRAllTypesCode_Value_TEST_REPORT = 170,
  FHIRAllTypesCode_Value_TEST_SCRIPT = 171,
  FHIRAllTypesCode_Value_VALUE_SET = 172,
  FHIRAllTypesCode_Value_VISION_PRESCRIPTION = 173,
  FHIRAllTypesCode_Value_TYPE = 174,
  FHIRAllTypesCode_Value_ANY = 175,
  FHIRAllTypesCode_Value_FHIRAllTypesCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FHIRAllTypesCode_Value_FHIRAllTypesCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FHIRAllTypesCode_Value_IsValid(int value);
const FHIRAllTypesCode_Value FHIRAllTypesCode_Value_Value_MIN = FHIRAllTypesCode_Value_INVALID_UNINITIALIZED;
const FHIRAllTypesCode_Value FHIRAllTypesCode_Value_Value_MAX = FHIRAllTypesCode_Value_ANY;
const int FHIRAllTypesCode_Value_Value_ARRAYSIZE = FHIRAllTypesCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* FHIRAllTypesCode_Value_descriptor();
inline const ::std::string& FHIRAllTypesCode_Value_Name(FHIRAllTypesCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    FHIRAllTypesCode_Value_descriptor(), value);
}
inline bool FHIRAllTypesCode_Value_Parse(
    const ::std::string& name, FHIRAllTypesCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FHIRAllTypesCode_Value>(
    FHIRAllTypesCode_Value_descriptor(), name, value);
}
enum FHIRDefinedTypeCode_Value {
  FHIRDefinedTypeCode_Value_INVALID_UNINITIALIZED = 0,
  FHIRDefinedTypeCode_Value_ADDRESS = 1,
  FHIRDefinedTypeCode_Value_AGE = 2,
  FHIRDefinedTypeCode_Value_ANNOTATION = 3,
  FHIRDefinedTypeCode_Value_ATTACHMENT = 4,
  FHIRDefinedTypeCode_Value_BACKBONE_ELEMENT = 5,
  FHIRDefinedTypeCode_Value_CODEABLE_CONCEPT = 6,
  FHIRDefinedTypeCode_Value_CODING = 7,
  FHIRDefinedTypeCode_Value_CONTACT_DETAIL = 8,
  FHIRDefinedTypeCode_Value_CONTACT_POINT = 9,
  FHIRDefinedTypeCode_Value_CONTRIBUTOR = 10,
  FHIRDefinedTypeCode_Value_COUNT = 11,
  FHIRDefinedTypeCode_Value_DATA_REQUIREMENT = 12,
  FHIRDefinedTypeCode_Value_DISTANCE = 13,
  FHIRDefinedTypeCode_Value_DOSAGE = 14,
  FHIRDefinedTypeCode_Value_DURATION = 15,
  FHIRDefinedTypeCode_Value_ELEMENT = 16,
  FHIRDefinedTypeCode_Value_ELEMENT_DEFINITION = 17,
  FHIRDefinedTypeCode_Value_EXTENSION = 18,
  FHIRDefinedTypeCode_Value_HUMAN_NAME = 19,
  FHIRDefinedTypeCode_Value_IDENTIFIER = 20,
  FHIRDefinedTypeCode_Value_META = 21,
  FHIRDefinedTypeCode_Value_MONEY = 22,
  FHIRDefinedTypeCode_Value_NARRATIVE = 23,
  FHIRDefinedTypeCode_Value_PARAMETER_DEFINITION = 24,
  FHIRDefinedTypeCode_Value_PERIOD = 25,
  FHIRDefinedTypeCode_Value_QUANTITY = 26,
  FHIRDefinedTypeCode_Value_RANGE = 27,
  FHIRDefinedTypeCode_Value_RATIO = 28,
  FHIRDefinedTypeCode_Value_REFERENCE = 29,
  FHIRDefinedTypeCode_Value_RELATED_ARTIFACT = 30,
  FHIRDefinedTypeCode_Value_SAMPLED_DATA = 31,
  FHIRDefinedTypeCode_Value_SIGNATURE = 32,
  FHIRDefinedTypeCode_Value_SIMPLE_QUANTITY = 33,
  FHIRDefinedTypeCode_Value_TIMING = 34,
  FHIRDefinedTypeCode_Value_TRIGGER_DEFINITION = 35,
  FHIRDefinedTypeCode_Value_USAGE_CONTEXT = 36,
  FHIRDefinedTypeCode_Value_BASE64_BINARY = 37,
  FHIRDefinedTypeCode_Value_BOOLEAN = 38,
  FHIRDefinedTypeCode_Value_CODE = 39,
  FHIRDefinedTypeCode_Value_DATE = 40,
  FHIRDefinedTypeCode_Value_DATE_TIME = 41,
  FHIRDefinedTypeCode_Value_DECIMAL = 42,
  FHIRDefinedTypeCode_Value_ID = 43,
  FHIRDefinedTypeCode_Value_INSTANT = 44,
  FHIRDefinedTypeCode_Value_INTEGER = 45,
  FHIRDefinedTypeCode_Value_MARKDOWN = 46,
  FHIRDefinedTypeCode_Value_OID = 47,
  FHIRDefinedTypeCode_Value_POSITIVE_INT = 48,
  FHIRDefinedTypeCode_Value_STRING = 49,
  FHIRDefinedTypeCode_Value_TIME = 50,
  FHIRDefinedTypeCode_Value_UNSIGNED_INT = 51,
  FHIRDefinedTypeCode_Value_URI = 52,
  FHIRDefinedTypeCode_Value_UUID = 53,
  FHIRDefinedTypeCode_Value_XHTML = 54,
  FHIRDefinedTypeCode_Value_ACCOUNT = 55,
  FHIRDefinedTypeCode_Value_ACTIVITY_DEFINITION = 56,
  FHIRDefinedTypeCode_Value_ADVERSE_EVENT = 57,
  FHIRDefinedTypeCode_Value_ALLERGY_INTOLERANCE = 58,
  FHIRDefinedTypeCode_Value_APPOINTMENT = 59,
  FHIRDefinedTypeCode_Value_APPOINTMENT_RESPONSE = 60,
  FHIRDefinedTypeCode_Value_AUDIT_EVENT = 61,
  FHIRDefinedTypeCode_Value_BASIC = 62,
  FHIRDefinedTypeCode_Value_BINARY = 63,
  FHIRDefinedTypeCode_Value_BODY_SITE = 64,
  FHIRDefinedTypeCode_Value_BUNDLE = 65,
  FHIRDefinedTypeCode_Value_CAPABILITY_STATEMENT = 66,
  FHIRDefinedTypeCode_Value_CARE_PLAN = 67,
  FHIRDefinedTypeCode_Value_CARE_TEAM = 68,
  FHIRDefinedTypeCode_Value_CHARGE_ITEM = 69,
  FHIRDefinedTypeCode_Value_CLAIM = 70,
  FHIRDefinedTypeCode_Value_CLAIM_RESPONSE = 71,
  FHIRDefinedTypeCode_Value_CLINICAL_IMPRESSION = 72,
  FHIRDefinedTypeCode_Value_CODE_SYSTEM = 73,
  FHIRDefinedTypeCode_Value_COMMUNICATION = 74,
  FHIRDefinedTypeCode_Value_COMMUNICATION_REQUEST = 75,
  FHIRDefinedTypeCode_Value_COMPARTMENT_DEFINITION = 76,
  FHIRDefinedTypeCode_Value_COMPOSITION = 77,
  FHIRDefinedTypeCode_Value_CONCEPT_MAP = 78,
  FHIRDefinedTypeCode_Value_CONDITION = 79,
  FHIRDefinedTypeCode_Value_CONSENT = 80,
  FHIRDefinedTypeCode_Value_CONTRACT = 81,
  FHIRDefinedTypeCode_Value_COVERAGE = 82,
  FHIRDefinedTypeCode_Value_DATA_ELEMENT = 83,
  FHIRDefinedTypeCode_Value_DETECTED_ISSUE = 84,
  FHIRDefinedTypeCode_Value_DEVICE = 85,
  FHIRDefinedTypeCode_Value_DEVICE_COMPONENT = 86,
  FHIRDefinedTypeCode_Value_DEVICE_METRIC = 87,
  FHIRDefinedTypeCode_Value_DEVICE_REQUEST = 88,
  FHIRDefinedTypeCode_Value_DEVICE_USE_STATEMENT = 89,
  FHIRDefinedTypeCode_Value_DIAGNOSTIC_REPORT = 90,
  FHIRDefinedTypeCode_Value_DOCUMENT_MANIFEST = 91,
  FHIRDefinedTypeCode_Value_DOCUMENT_REFERENCE = 92,
  FHIRDefinedTypeCode_Value_DOMAIN_RESOURCE = 93,
  FHIRDefinedTypeCode_Value_ELIGIBILITY_REQUEST = 94,
  FHIRDefinedTypeCode_Value_ELIGIBILITY_RESPONSE = 95,
  FHIRDefinedTypeCode_Value_ENCOUNTER = 96,
  FHIRDefinedTypeCode_Value_ENDPOINT = 97,
  FHIRDefinedTypeCode_Value_ENROLLMENT_REQUEST = 98,
  FHIRDefinedTypeCode_Value_ENROLLMENT_RESPONSE = 99,
  FHIRDefinedTypeCode_Value_EPISODE_OF_CARE = 100,
  FHIRDefinedTypeCode_Value_EXPANSION_PROFILE = 101,
  FHIRDefinedTypeCode_Value_EXPLANATION_OF_BENEFIT = 102,
  FHIRDefinedTypeCode_Value_FAMILY_MEMBER_HISTORY = 103,
  FHIRDefinedTypeCode_Value_FLAG = 104,
  FHIRDefinedTypeCode_Value_GOAL = 105,
  FHIRDefinedTypeCode_Value_GRAPH_DEFINITION = 106,
  FHIRDefinedTypeCode_Value_GROUP = 107,
  FHIRDefinedTypeCode_Value_GUIDANCE_RESPONSE = 108,
  FHIRDefinedTypeCode_Value_HEALTHCARE_SERVICE = 109,
  FHIRDefinedTypeCode_Value_IMAGING_MANIFEST = 110,
  FHIRDefinedTypeCode_Value_IMAGING_STUDY = 111,
  FHIRDefinedTypeCode_Value_IMMUNIZATION = 112,
  FHIRDefinedTypeCode_Value_IMMUNIZATION_RECOMMENDATION = 113,
  FHIRDefinedTypeCode_Value_IMPLEMENTATION_GUIDE = 114,
  FHIRDefinedTypeCode_Value_LIBRARY = 115,
  FHIRDefinedTypeCode_Value_LINKAGE = 116,
  FHIRDefinedTypeCode_Value_LIST = 117,
  FHIRDefinedTypeCode_Value_LOCATION = 118,
  FHIRDefinedTypeCode_Value_MEASURE = 119,
  FHIRDefinedTypeCode_Value_MEASURE_REPORT = 120,
  FHIRDefinedTypeCode_Value_MEDIA = 121,
  FHIRDefinedTypeCode_Value_MEDICATION = 122,
  FHIRDefinedTypeCode_Value_MEDICATION_ADMINISTRATION = 123,
  FHIRDefinedTypeCode_Value_MEDICATION_DISPENSE = 124,
  FHIRDefinedTypeCode_Value_MEDICATION_REQUEST = 125,
  FHIRDefinedTypeCode_Value_MEDICATION_STATEMENT = 126,
  FHIRDefinedTypeCode_Value_MESSAGE_DEFINITION = 127,
  FHIRDefinedTypeCode_Value_MESSAGE_HEADER = 128,
  FHIRDefinedTypeCode_Value_NAMING_SYSTEM = 129,
  FHIRDefinedTypeCode_Value_NUTRITION_ORDER = 130,
  FHIRDefinedTypeCode_Value_OBSERVATION = 131,
  FHIRDefinedTypeCode_Value_OPERATIONDEFINITION = 132,
  FHIRDefinedTypeCode_Value_OPERATION_OUTCOME = 133,
  FHIRDefinedTypeCode_Value_ORGANIZATION = 134,
  FHIRDefinedTypeCode_Value_PARAMETERS = 135,
  FHIRDefinedTypeCode_Value_PATIENT = 136,
  FHIRDefinedTypeCode_Value_PAYMENT_NOTICE = 137,
  FHIRDefinedTypeCode_Value_PAYMENT_RECONCILIATION = 138,
  FHIRDefinedTypeCode_Value_PERSON = 139,
  FHIRDefinedTypeCode_Value_PLAN_DEFINITION = 140,
  FHIRDefinedTypeCode_Value_PRACTITIONER = 141,
  FHIRDefinedTypeCode_Value_PRACTITIONER_ROLE = 142,
  FHIRDefinedTypeCode_Value_PROCEDURE = 143,
  FHIRDefinedTypeCode_Value_PROCEDURE_REQUEST = 144,
  FHIRDefinedTypeCode_Value_PROCESS_REQUEST = 145,
  FHIRDefinedTypeCode_Value_PROCESS_RESPONSE = 146,
  FHIRDefinedTypeCode_Value_PROVENANCE = 147,
  FHIRDefinedTypeCode_Value_QUESTIONNAIRE = 148,
  FHIRDefinedTypeCode_Value_QUESTIONNAIRE_RESPONSE = 149,
  FHIRDefinedTypeCode_Value_REFERRAL_REQUEST = 150,
  FHIRDefinedTypeCode_Value_RELATED_PERSON = 151,
  FHIRDefinedTypeCode_Value_REQUEST_GROUP = 152,
  FHIRDefinedTypeCode_Value_RESEARCH_STUDY = 153,
  FHIRDefinedTypeCode_Value_RESEARCH_SUBJECT = 154,
  FHIRDefinedTypeCode_Value_RESOURCE = 155,
  FHIRDefinedTypeCode_Value_RISK_ASSESSMENT = 156,
  FHIRDefinedTypeCode_Value_SCHEDULE = 157,
  FHIRDefinedTypeCode_Value_SEARCH_PARAMETER = 158,
  FHIRDefinedTypeCode_Value_SEQUENCE = 159,
  FHIRDefinedTypeCode_Value_SERVICE_DEFINITION = 160,
  FHIRDefinedTypeCode_Value_SLOT = 161,
  FHIRDefinedTypeCode_Value_SPECIMEN = 162,
  FHIRDefinedTypeCode_Value_STRUCTURE_DEFINITION = 163,
  FHIRDefinedTypeCode_Value_STRUCTURE_MAP = 164,
  FHIRDefinedTypeCode_Value_SUBSCRIPTION = 165,
  FHIRDefinedTypeCode_Value_SUBSTANCE = 166,
  FHIRDefinedTypeCode_Value_SUPPLY_DELIVERY = 167,
  FHIRDefinedTypeCode_Value_SUPPLY_REQUEST = 168,
  FHIRDefinedTypeCode_Value_TASK = 169,
  FHIRDefinedTypeCode_Value_TEST_REPORT = 170,
  FHIRDefinedTypeCode_Value_TEST_SCRIPT = 171,
  FHIRDefinedTypeCode_Value_VALUE_SET = 172,
  FHIRDefinedTypeCode_Value_VISION_PRESCRIPTION = 173,
  FHIRDefinedTypeCode_Value_FHIRDefinedTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FHIRDefinedTypeCode_Value_FHIRDefinedTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FHIRDefinedTypeCode_Value_IsValid(int value);
const FHIRDefinedTypeCode_Value FHIRDefinedTypeCode_Value_Value_MIN = FHIRDefinedTypeCode_Value_INVALID_UNINITIALIZED;
const FHIRDefinedTypeCode_Value FHIRDefinedTypeCode_Value_Value_MAX = FHIRDefinedTypeCode_Value_VISION_PRESCRIPTION;
const int FHIRDefinedTypeCode_Value_Value_ARRAYSIZE = FHIRDefinedTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* FHIRDefinedTypeCode_Value_descriptor();
inline const ::std::string& FHIRDefinedTypeCode_Value_Name(FHIRDefinedTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    FHIRDefinedTypeCode_Value_descriptor(), value);
}
inline bool FHIRDefinedTypeCode_Value_Parse(
    const ::std::string& name, FHIRDefinedTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FHIRDefinedTypeCode_Value>(
    FHIRDefinedTypeCode_Value_descriptor(), name, value);
}
enum DefinitionStatusCode_Value {
  DefinitionStatusCode_Value_INVALID_UNINITIALIZED = 0,
  DefinitionStatusCode_Value_DRAFT = 1,
  DefinitionStatusCode_Value_ACTIVE = 2,
  DefinitionStatusCode_Value_WITHDRAWN = 3,
  DefinitionStatusCode_Value_UNKNOWN = 4,
  DefinitionStatusCode_Value_DefinitionStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DefinitionStatusCode_Value_DefinitionStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DefinitionStatusCode_Value_IsValid(int value);
const DefinitionStatusCode_Value DefinitionStatusCode_Value_Value_MIN = DefinitionStatusCode_Value_INVALID_UNINITIALIZED;
const DefinitionStatusCode_Value DefinitionStatusCode_Value_Value_MAX = DefinitionStatusCode_Value_UNKNOWN;
const int DefinitionStatusCode_Value_Value_ARRAYSIZE = DefinitionStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* DefinitionStatusCode_Value_descriptor();
inline const ::std::string& DefinitionStatusCode_Value_Name(DefinitionStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    DefinitionStatusCode_Value_descriptor(), value);
}
inline bool DefinitionStatusCode_Value_Parse(
    const ::std::string& name, DefinitionStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DefinitionStatusCode_Value>(
    DefinitionStatusCode_Value_descriptor(), name, value);
}
enum DefinitionTopicCode_Value {
  DefinitionTopicCode_Value_INVALID_UNINITIALIZED = 0,
  DefinitionTopicCode_Value_TREATMENT = 1,
  DefinitionTopicCode_Value_EDUCATION = 2,
  DefinitionTopicCode_Value_ASSESSMENT = 3,
  DefinitionTopicCode_Value_DefinitionTopicCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DefinitionTopicCode_Value_DefinitionTopicCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DefinitionTopicCode_Value_IsValid(int value);
const DefinitionTopicCode_Value DefinitionTopicCode_Value_Value_MIN = DefinitionTopicCode_Value_INVALID_UNINITIALIZED;
const DefinitionTopicCode_Value DefinitionTopicCode_Value_Value_MAX = DefinitionTopicCode_Value_ASSESSMENT;
const int DefinitionTopicCode_Value_Value_ARRAYSIZE = DefinitionTopicCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* DefinitionTopicCode_Value_descriptor();
inline const ::std::string& DefinitionTopicCode_Value_Name(DefinitionTopicCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    DefinitionTopicCode_Value_descriptor(), value);
}
inline bool DefinitionTopicCode_Value_Parse(
    const ::std::string& name, DefinitionTopicCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DefinitionTopicCode_Value>(
    DefinitionTopicCode_Value_descriptor(), name, value);
}
enum DetectedIssueSeverityCode_Value {
  DetectedIssueSeverityCode_Value_INVALID_UNINITIALIZED = 0,
  DetectedIssueSeverityCode_Value_HIGH = 1,
  DetectedIssueSeverityCode_Value_MODERATE = 2,
  DetectedIssueSeverityCode_Value_LOW = 3,
  DetectedIssueSeverityCode_Value_DetectedIssueSeverityCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DetectedIssueSeverityCode_Value_DetectedIssueSeverityCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DetectedIssueSeverityCode_Value_IsValid(int value);
const DetectedIssueSeverityCode_Value DetectedIssueSeverityCode_Value_Value_MIN = DetectedIssueSeverityCode_Value_INVALID_UNINITIALIZED;
const DetectedIssueSeverityCode_Value DetectedIssueSeverityCode_Value_Value_MAX = DetectedIssueSeverityCode_Value_LOW;
const int DetectedIssueSeverityCode_Value_Value_ARRAYSIZE = DetectedIssueSeverityCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* DetectedIssueSeverityCode_Value_descriptor();
inline const ::std::string& DetectedIssueSeverityCode_Value_Name(DetectedIssueSeverityCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    DetectedIssueSeverityCode_Value_descriptor(), value);
}
inline bool DetectedIssueSeverityCode_Value_Parse(
    const ::std::string& name, DetectedIssueSeverityCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DetectedIssueSeverityCode_Value>(
    DetectedIssueSeverityCode_Value_descriptor(), name, value);
}
enum DeviceUseStatementStatusCode_Value {
  DeviceUseStatementStatusCode_Value_INVALID_UNINITIALIZED = 0,
  DeviceUseStatementStatusCode_Value_ACTIVE = 1,
  DeviceUseStatementStatusCode_Value_COMPLETED = 2,
  DeviceUseStatementStatusCode_Value_ENTERED_IN_ERROR = 3,
  DeviceUseStatementStatusCode_Value_INTENDED = 4,
  DeviceUseStatementStatusCode_Value_STOPPED = 5,
  DeviceUseStatementStatusCode_Value_ON_HOLD = 6,
  DeviceUseStatementStatusCode_Value_DeviceUseStatementStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DeviceUseStatementStatusCode_Value_DeviceUseStatementStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DeviceUseStatementStatusCode_Value_IsValid(int value);
const DeviceUseStatementStatusCode_Value DeviceUseStatementStatusCode_Value_Value_MIN = DeviceUseStatementStatusCode_Value_INVALID_UNINITIALIZED;
const DeviceUseStatementStatusCode_Value DeviceUseStatementStatusCode_Value_Value_MAX = DeviceUseStatementStatusCode_Value_ON_HOLD;
const int DeviceUseStatementStatusCode_Value_Value_ARRAYSIZE = DeviceUseStatementStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* DeviceUseStatementStatusCode_Value_descriptor();
inline const ::std::string& DeviceUseStatementStatusCode_Value_Name(DeviceUseStatementStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    DeviceUseStatementStatusCode_Value_descriptor(), value);
}
inline bool DeviceUseStatementStatusCode_Value_Parse(
    const ::std::string& name, DeviceUseStatementStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DeviceUseStatementStatusCode_Value>(
    DeviceUseStatementStatusCode_Value_descriptor(), name, value);
}
enum FHIRDeviceStatusCode_Value {
  FHIRDeviceStatusCode_Value_INVALID_UNINITIALIZED = 0,
  FHIRDeviceStatusCode_Value_ACTIVE = 1,
  FHIRDeviceStatusCode_Value_INACTIVE = 2,
  FHIRDeviceStatusCode_Value_ENTERED_IN_ERROR = 3,
  FHIRDeviceStatusCode_Value_UNKNOWN = 4,
  FHIRDeviceStatusCode_Value_FHIRDeviceStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FHIRDeviceStatusCode_Value_FHIRDeviceStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FHIRDeviceStatusCode_Value_IsValid(int value);
const FHIRDeviceStatusCode_Value FHIRDeviceStatusCode_Value_Value_MIN = FHIRDeviceStatusCode_Value_INVALID_UNINITIALIZED;
const FHIRDeviceStatusCode_Value FHIRDeviceStatusCode_Value_Value_MAX = FHIRDeviceStatusCode_Value_UNKNOWN;
const int FHIRDeviceStatusCode_Value_Value_ARRAYSIZE = FHIRDeviceStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* FHIRDeviceStatusCode_Value_descriptor();
inline const ::std::string& FHIRDeviceStatusCode_Value_Name(FHIRDeviceStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    FHIRDeviceStatusCode_Value_descriptor(), value);
}
inline bool FHIRDeviceStatusCode_Value_Parse(
    const ::std::string& name, FHIRDeviceStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FHIRDeviceStatusCode_Value>(
    FHIRDeviceStatusCode_Value_descriptor(), name, value);
}
enum DiagnosisRoleCode_Value {
  DiagnosisRoleCode_Value_INVALID_UNINITIALIZED = 0,
  DiagnosisRoleCode_Value_AD = 1,
  DiagnosisRoleCode_Value_DD = 2,
  DiagnosisRoleCode_Value_CC = 3,
  DiagnosisRoleCode_Value_CM = 4,
  DiagnosisRoleCode_Value_PRE_OP = 5,
  DiagnosisRoleCode_Value_POST_OP = 6,
  DiagnosisRoleCode_Value_BILLING = 7,
  DiagnosisRoleCode_Value_DiagnosisRoleCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DiagnosisRoleCode_Value_DiagnosisRoleCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DiagnosisRoleCode_Value_IsValid(int value);
const DiagnosisRoleCode_Value DiagnosisRoleCode_Value_Value_MIN = DiagnosisRoleCode_Value_INVALID_UNINITIALIZED;
const DiagnosisRoleCode_Value DiagnosisRoleCode_Value_Value_MAX = DiagnosisRoleCode_Value_BILLING;
const int DiagnosisRoleCode_Value_Value_ARRAYSIZE = DiagnosisRoleCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* DiagnosisRoleCode_Value_descriptor();
inline const ::std::string& DiagnosisRoleCode_Value_Name(DiagnosisRoleCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    DiagnosisRoleCode_Value_descriptor(), value);
}
inline bool DiagnosisRoleCode_Value_Parse(
    const ::std::string& name, DiagnosisRoleCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DiagnosisRoleCode_Value>(
    DiagnosisRoleCode_Value_descriptor(), name, value);
}
enum DiagnosticReportStatusCode_Value {
  DiagnosticReportStatusCode_Value_INVALID_UNINITIALIZED = 0,
  DiagnosticReportStatusCode_Value_REGISTERED = 1,
  DiagnosticReportStatusCode_Value_PARTIAL = 2,
  DiagnosticReportStatusCode_Value_PRELIMINARY = 3,
  DiagnosticReportStatusCode_Value_FINAL = 4,
  DiagnosticReportStatusCode_Value_AMENDED = 5,
  DiagnosticReportStatusCode_Value_CORRECTED = 6,
  DiagnosticReportStatusCode_Value_APPENDED = 7,
  DiagnosticReportStatusCode_Value_CANCELLED = 8,
  DiagnosticReportStatusCode_Value_ENTERED_IN_ERROR = 9,
  DiagnosticReportStatusCode_Value_UNKNOWN = 10,
  DiagnosticReportStatusCode_Value_DiagnosticReportStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DiagnosticReportStatusCode_Value_DiagnosticReportStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DiagnosticReportStatusCode_Value_IsValid(int value);
const DiagnosticReportStatusCode_Value DiagnosticReportStatusCode_Value_Value_MIN = DiagnosticReportStatusCode_Value_INVALID_UNINITIALIZED;
const DiagnosticReportStatusCode_Value DiagnosticReportStatusCode_Value_Value_MAX = DiagnosticReportStatusCode_Value_UNKNOWN;
const int DiagnosticReportStatusCode_Value_Value_ARRAYSIZE = DiagnosticReportStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* DiagnosticReportStatusCode_Value_descriptor();
inline const ::std::string& DiagnosticReportStatusCode_Value_Name(DiagnosticReportStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    DiagnosticReportStatusCode_Value_descriptor(), value);
}
inline bool DiagnosticReportStatusCode_Value_Parse(
    const ::std::string& name, DiagnosticReportStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DiagnosticReportStatusCode_Value>(
    DiagnosticReportStatusCode_Value_descriptor(), name, value);
}
enum DigitalMediaTypeCode_Value {
  DigitalMediaTypeCode_Value_INVALID_UNINITIALIZED = 0,
  DigitalMediaTypeCode_Value_PHOTO = 1,
  DigitalMediaTypeCode_Value_VIDEO = 2,
  DigitalMediaTypeCode_Value_AUDIO = 3,
  DigitalMediaTypeCode_Value_DigitalMediaTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DigitalMediaTypeCode_Value_DigitalMediaTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DigitalMediaTypeCode_Value_IsValid(int value);
const DigitalMediaTypeCode_Value DigitalMediaTypeCode_Value_Value_MIN = DigitalMediaTypeCode_Value_INVALID_UNINITIALIZED;
const DigitalMediaTypeCode_Value DigitalMediaTypeCode_Value_Value_MAX = DigitalMediaTypeCode_Value_AUDIO;
const int DigitalMediaTypeCode_Value_Value_ARRAYSIZE = DigitalMediaTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* DigitalMediaTypeCode_Value_descriptor();
inline const ::std::string& DigitalMediaTypeCode_Value_Name(DigitalMediaTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    DigitalMediaTypeCode_Value_descriptor(), value);
}
inline bool DigitalMediaTypeCode_Value_Parse(
    const ::std::string& name, DigitalMediaTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DigitalMediaTypeCode_Value>(
    DigitalMediaTypeCode_Value_descriptor(), name, value);
}
enum DocumentModeCode_Value {
  DocumentModeCode_Value_INVALID_UNINITIALIZED = 0,
  DocumentModeCode_Value_PRODUCER = 1,
  DocumentModeCode_Value_CONSUMER = 2,
  DocumentModeCode_Value_DocumentModeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DocumentModeCode_Value_DocumentModeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DocumentModeCode_Value_IsValid(int value);
const DocumentModeCode_Value DocumentModeCode_Value_Value_MIN = DocumentModeCode_Value_INVALID_UNINITIALIZED;
const DocumentModeCode_Value DocumentModeCode_Value_Value_MAX = DocumentModeCode_Value_CONSUMER;
const int DocumentModeCode_Value_Value_ARRAYSIZE = DocumentModeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* DocumentModeCode_Value_descriptor();
inline const ::std::string& DocumentModeCode_Value_Name(DocumentModeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    DocumentModeCode_Value_descriptor(), value);
}
inline bool DocumentModeCode_Value_Parse(
    const ::std::string& name, DocumentModeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DocumentModeCode_Value>(
    DocumentModeCode_Value_descriptor(), name, value);
}
enum DocumentReferenceStatusCode_Value {
  DocumentReferenceStatusCode_Value_INVALID_UNINITIALIZED = 0,
  DocumentReferenceStatusCode_Value_CURRENT = 1,
  DocumentReferenceStatusCode_Value_SUPERSEDED = 2,
  DocumentReferenceStatusCode_Value_ENTERED_IN_ERROR = 3,
  DocumentReferenceStatusCode_Value_DocumentReferenceStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DocumentReferenceStatusCode_Value_DocumentReferenceStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DocumentReferenceStatusCode_Value_IsValid(int value);
const DocumentReferenceStatusCode_Value DocumentReferenceStatusCode_Value_Value_MIN = DocumentReferenceStatusCode_Value_INVALID_UNINITIALIZED;
const DocumentReferenceStatusCode_Value DocumentReferenceStatusCode_Value_Value_MAX = DocumentReferenceStatusCode_Value_ENTERED_IN_ERROR;
const int DocumentReferenceStatusCode_Value_Value_ARRAYSIZE = DocumentReferenceStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* DocumentReferenceStatusCode_Value_descriptor();
inline const ::std::string& DocumentReferenceStatusCode_Value_Name(DocumentReferenceStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    DocumentReferenceStatusCode_Value_descriptor(), value);
}
inline bool DocumentReferenceStatusCode_Value_Parse(
    const ::std::string& name, DocumentReferenceStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DocumentReferenceStatusCode_Value>(
    DocumentReferenceStatusCode_Value_descriptor(), name, value);
}
enum DocumentRelationshipTypeCode_Value {
  DocumentRelationshipTypeCode_Value_INVALID_UNINITIALIZED = 0,
  DocumentRelationshipTypeCode_Value_REPLACES = 1,
  DocumentRelationshipTypeCode_Value_TRANSFORMS = 2,
  DocumentRelationshipTypeCode_Value_SIGNS = 3,
  DocumentRelationshipTypeCode_Value_APPENDS = 4,
  DocumentRelationshipTypeCode_Value_DocumentRelationshipTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DocumentRelationshipTypeCode_Value_DocumentRelationshipTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DocumentRelationshipTypeCode_Value_IsValid(int value);
const DocumentRelationshipTypeCode_Value DocumentRelationshipTypeCode_Value_Value_MIN = DocumentRelationshipTypeCode_Value_INVALID_UNINITIALIZED;
const DocumentRelationshipTypeCode_Value DocumentRelationshipTypeCode_Value_Value_MAX = DocumentRelationshipTypeCode_Value_APPENDS;
const int DocumentRelationshipTypeCode_Value_Value_ARRAYSIZE = DocumentRelationshipTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* DocumentRelationshipTypeCode_Value_descriptor();
inline const ::std::string& DocumentRelationshipTypeCode_Value_Name(DocumentRelationshipTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    DocumentRelationshipTypeCode_Value_descriptor(), value);
}
inline bool DocumentRelationshipTypeCode_Value_Parse(
    const ::std::string& name, DocumentRelationshipTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DocumentRelationshipTypeCode_Value>(
    DocumentRelationshipTypeCode_Value_descriptor(), name, value);
}
enum AdmitSourceCode_Value {
  AdmitSourceCode_Value_INVALID_UNINITIALIZED = 0,
  AdmitSourceCode_Value_HOSP_TRANS = 1,
  AdmitSourceCode_Value_EMD = 2,
  AdmitSourceCode_Value_OUTP = 3,
  AdmitSourceCode_Value_BORN = 4,
  AdmitSourceCode_Value_GP = 5,
  AdmitSourceCode_Value_MP = 6,
  AdmitSourceCode_Value_NURSING = 7,
  AdmitSourceCode_Value_PSYCH = 8,
  AdmitSourceCode_Value_REHAB = 9,
  AdmitSourceCode_Value_OTHER = 10,
  AdmitSourceCode_Value_AdmitSourceCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AdmitSourceCode_Value_AdmitSourceCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AdmitSourceCode_Value_IsValid(int value);
const AdmitSourceCode_Value AdmitSourceCode_Value_Value_MIN = AdmitSourceCode_Value_INVALID_UNINITIALIZED;
const AdmitSourceCode_Value AdmitSourceCode_Value_Value_MAX = AdmitSourceCode_Value_OTHER;
const int AdmitSourceCode_Value_Value_ARRAYSIZE = AdmitSourceCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* AdmitSourceCode_Value_descriptor();
inline const ::std::string& AdmitSourceCode_Value_Name(AdmitSourceCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    AdmitSourceCode_Value_descriptor(), value);
}
inline bool AdmitSourceCode_Value_Parse(
    const ::std::string& name, AdmitSourceCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AdmitSourceCode_Value>(
    AdmitSourceCode_Value_descriptor(), name, value);
}
enum DietCode_Value {
  DietCode_Value_INVALID_UNINITIALIZED = 0,
  DietCode_Value_VEGETARIAN = 1,
  DietCode_Value_DAIRY_FREE = 2,
  DietCode_Value_NUT_FREE = 3,
  DietCode_Value_GLUTEN_FREE = 4,
  DietCode_Value_VEGAN = 5,
  DietCode_Value_HALAL = 6,
  DietCode_Value_KOSHER = 7,
  DietCode_Value_DietCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DietCode_Value_DietCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DietCode_Value_IsValid(int value);
const DietCode_Value DietCode_Value_Value_MIN = DietCode_Value_INVALID_UNINITIALIZED;
const DietCode_Value DietCode_Value_Value_MAX = DietCode_Value_KOSHER;
const int DietCode_Value_Value_ARRAYSIZE = DietCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* DietCode_Value_descriptor();
inline const ::std::string& DietCode_Value_Name(DietCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    DietCode_Value_descriptor(), value);
}
inline bool DietCode_Value_Parse(
    const ::std::string& name, DietCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DietCode_Value>(
    DietCode_Value_descriptor(), name, value);
}
enum DischargeDispositionCode_Value {
  DischargeDispositionCode_Value_INVALID_UNINITIALIZED = 0,
  DischargeDispositionCode_Value_HOME = 1,
  DischargeDispositionCode_Value_OTHER_HCF = 2,
  DischargeDispositionCode_Value_HOSP = 3,
  DischargeDispositionCode_Value_LONG = 4,
  DischargeDispositionCode_Value_AADVICE = 5,
  DischargeDispositionCode_Value_EXP = 6,
  DischargeDispositionCode_Value_PSY = 7,
  DischargeDispositionCode_Value_REHAB = 8,
  DischargeDispositionCode_Value_SNF = 9,
  DischargeDispositionCode_Value_OTH = 10,
  DischargeDispositionCode_Value_DischargeDispositionCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DischargeDispositionCode_Value_DischargeDispositionCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DischargeDispositionCode_Value_IsValid(int value);
const DischargeDispositionCode_Value DischargeDispositionCode_Value_Value_MIN = DischargeDispositionCode_Value_INVALID_UNINITIALIZED;
const DischargeDispositionCode_Value DischargeDispositionCode_Value_Value_MAX = DischargeDispositionCode_Value_OTH;
const int DischargeDispositionCode_Value_Value_ARRAYSIZE = DischargeDispositionCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* DischargeDispositionCode_Value_descriptor();
inline const ::std::string& DischargeDispositionCode_Value_Name(DischargeDispositionCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    DischargeDispositionCode_Value_descriptor(), value);
}
inline bool DischargeDispositionCode_Value_Parse(
    const ::std::string& name, DischargeDispositionCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DischargeDispositionCode_Value>(
    DischargeDispositionCode_Value_descriptor(), name, value);
}
enum EncounterLocationStatusCode_Value {
  EncounterLocationStatusCode_Value_INVALID_UNINITIALIZED = 0,
  EncounterLocationStatusCode_Value_PLANNED = 1,
  EncounterLocationStatusCode_Value_ACTIVE = 2,
  EncounterLocationStatusCode_Value_RESERVED = 3,
  EncounterLocationStatusCode_Value_COMPLETED = 4,
  EncounterLocationStatusCode_Value_EncounterLocationStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EncounterLocationStatusCode_Value_EncounterLocationStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EncounterLocationStatusCode_Value_IsValid(int value);
const EncounterLocationStatusCode_Value EncounterLocationStatusCode_Value_Value_MIN = EncounterLocationStatusCode_Value_INVALID_UNINITIALIZED;
const EncounterLocationStatusCode_Value EncounterLocationStatusCode_Value_Value_MAX = EncounterLocationStatusCode_Value_COMPLETED;
const int EncounterLocationStatusCode_Value_Value_ARRAYSIZE = EncounterLocationStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* EncounterLocationStatusCode_Value_descriptor();
inline const ::std::string& EncounterLocationStatusCode_Value_Name(EncounterLocationStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    EncounterLocationStatusCode_Value_descriptor(), value);
}
inline bool EncounterLocationStatusCode_Value_Parse(
    const ::std::string& name, EncounterLocationStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EncounterLocationStatusCode_Value>(
    EncounterLocationStatusCode_Value_descriptor(), name, value);
}
enum SpecialArrangementsCode_Value {
  SpecialArrangementsCode_Value_INVALID_UNINITIALIZED = 0,
  SpecialArrangementsCode_Value_WHEEL = 1,
  SpecialArrangementsCode_Value_ADD_BED = 2,
  SpecialArrangementsCode_Value_INT = 3,
  SpecialArrangementsCode_Value_ATT = 4,
  SpecialArrangementsCode_Value_DOG = 5,
  SpecialArrangementsCode_Value_SpecialArrangementsCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SpecialArrangementsCode_Value_SpecialArrangementsCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SpecialArrangementsCode_Value_IsValid(int value);
const SpecialArrangementsCode_Value SpecialArrangementsCode_Value_Value_MIN = SpecialArrangementsCode_Value_INVALID_UNINITIALIZED;
const SpecialArrangementsCode_Value SpecialArrangementsCode_Value_Value_MAX = SpecialArrangementsCode_Value_DOG;
const int SpecialArrangementsCode_Value_Value_ARRAYSIZE = SpecialArrangementsCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* SpecialArrangementsCode_Value_descriptor();
inline const ::std::string& SpecialArrangementsCode_Value_Name(SpecialArrangementsCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    SpecialArrangementsCode_Value_descriptor(), value);
}
inline bool SpecialArrangementsCode_Value_Parse(
    const ::std::string& name, SpecialArrangementsCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SpecialArrangementsCode_Value>(
    SpecialArrangementsCode_Value_descriptor(), name, value);
}
enum EncounterStatusCode_Value {
  EncounterStatusCode_Value_INVALID_UNINITIALIZED = 0,
  EncounterStatusCode_Value_PLANNED = 1,
  EncounterStatusCode_Value_ARRIVED = 2,
  EncounterStatusCode_Value_TRIAGED = 3,
  EncounterStatusCode_Value_IN_PROGRESS = 4,
  EncounterStatusCode_Value_ONLEAVE = 5,
  EncounterStatusCode_Value_FINISHED = 6,
  EncounterStatusCode_Value_CANCELLED = 7,
  EncounterStatusCode_Value_ENTERED_IN_ERROR = 8,
  EncounterStatusCode_Value_UNKNOWN = 9,
  EncounterStatusCode_Value_EncounterStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EncounterStatusCode_Value_EncounterStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EncounterStatusCode_Value_IsValid(int value);
const EncounterStatusCode_Value EncounterStatusCode_Value_Value_MIN = EncounterStatusCode_Value_INVALID_UNINITIALIZED;
const EncounterStatusCode_Value EncounterStatusCode_Value_Value_MAX = EncounterStatusCode_Value_UNKNOWN;
const int EncounterStatusCode_Value_Value_ARRAYSIZE = EncounterStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* EncounterStatusCode_Value_descriptor();
inline const ::std::string& EncounterStatusCode_Value_Name(EncounterStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    EncounterStatusCode_Value_descriptor(), value);
}
inline bool EncounterStatusCode_Value_Parse(
    const ::std::string& name, EncounterStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EncounterStatusCode_Value>(
    EncounterStatusCode_Value_descriptor(), name, value);
}
enum EncounterTypeCode_Value {
  EncounterTypeCode_Value_INVALID_UNINITIALIZED = 0,
  EncounterTypeCode_Value_ADMS = 1,
  EncounterTypeCode_Value_BD_BM_CLIN = 2,
  EncounterTypeCode_Value_CCS60 = 3,
  EncounterTypeCode_Value_OKI = 4,
  EncounterTypeCode_Value_EncounterTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EncounterTypeCode_Value_EncounterTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EncounterTypeCode_Value_IsValid(int value);
const EncounterTypeCode_Value EncounterTypeCode_Value_Value_MIN = EncounterTypeCode_Value_INVALID_UNINITIALIZED;
const EncounterTypeCode_Value EncounterTypeCode_Value_Value_MAX = EncounterTypeCode_Value_OKI;
const int EncounterTypeCode_Value_Value_ARRAYSIZE = EncounterTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* EncounterTypeCode_Value_descriptor();
inline const ::std::string& EncounterTypeCode_Value_Name(EncounterTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    EncounterTypeCode_Value_descriptor(), value);
}
inline bool EncounterTypeCode_Value_Parse(
    const ::std::string& name, EncounterTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EncounterTypeCode_Value>(
    EncounterTypeCode_Value_descriptor(), name, value);
}
enum EndpointStatusCode_Value {
  EndpointStatusCode_Value_INVALID_UNINITIALIZED = 0,
  EndpointStatusCode_Value_ACTIVE = 1,
  EndpointStatusCode_Value_SUSPENDED = 2,
  EndpointStatusCode_Value_ERROR = 3,
  EndpointStatusCode_Value_OFF = 4,
  EndpointStatusCode_Value_ENTERED_IN_ERROR = 5,
  EndpointStatusCode_Value_TEST = 6,
  EndpointStatusCode_Value_EndpointStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EndpointStatusCode_Value_EndpointStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EndpointStatusCode_Value_IsValid(int value);
const EndpointStatusCode_Value EndpointStatusCode_Value_Value_MIN = EndpointStatusCode_Value_INVALID_UNINITIALIZED;
const EndpointStatusCode_Value EndpointStatusCode_Value_Value_MAX = EndpointStatusCode_Value_TEST;
const int EndpointStatusCode_Value_Value_ARRAYSIZE = EndpointStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* EndpointStatusCode_Value_descriptor();
inline const ::std::string& EndpointStatusCode_Value_Name(EndpointStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    EndpointStatusCode_Value_descriptor(), value);
}
inline bool EndpointStatusCode_Value_Parse(
    const ::std::string& name, EndpointStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EndpointStatusCode_Value>(
    EndpointStatusCode_Value_descriptor(), name, value);
}
enum EntityNamePartQualifierCode_Value {
  EntityNamePartQualifierCode_Value_INVALID_UNINITIALIZED = 0,
  EntityNamePartQualifierCode_Value_LS = 1,
  EntityNamePartQualifierCode_Value_AC = 2,
  EntityNamePartQualifierCode_Value_NB = 3,
  EntityNamePartQualifierCode_Value_PR = 4,
  EntityNamePartQualifierCode_Value_HON = 5,
  EntityNamePartQualifierCode_Value_BR = 6,
  EntityNamePartQualifierCode_Value_AD = 7,
  EntityNamePartQualifierCode_Value_SP = 8,
  EntityNamePartQualifierCode_Value_MID = 9,
  EntityNamePartQualifierCode_Value_CL = 10,
  EntityNamePartQualifierCode_Value_IN = 11,
  EntityNamePartQualifierCode_Value_EntityNamePartQualifierCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EntityNamePartQualifierCode_Value_EntityNamePartQualifierCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EntityNamePartQualifierCode_Value_IsValid(int value);
const EntityNamePartQualifierCode_Value EntityNamePartQualifierCode_Value_Value_MIN = EntityNamePartQualifierCode_Value_INVALID_UNINITIALIZED;
const EntityNamePartQualifierCode_Value EntityNamePartQualifierCode_Value_Value_MAX = EntityNamePartQualifierCode_Value_IN;
const int EntityNamePartQualifierCode_Value_Value_ARRAYSIZE = EntityNamePartQualifierCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* EntityNamePartQualifierCode_Value_descriptor();
inline const ::std::string& EntityNamePartQualifierCode_Value_Name(EntityNamePartQualifierCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    EntityNamePartQualifierCode_Value_descriptor(), value);
}
inline bool EntityNamePartQualifierCode_Value_Parse(
    const ::std::string& name, EntityNamePartQualifierCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EntityNamePartQualifierCode_Value>(
    EntityNamePartQualifierCode_Value_descriptor(), name, value);
}
enum EnteralFormulaAdditiveTypeCodeCode_Value {
  EnteralFormulaAdditiveTypeCodeCode_Value_INVALID_UNINITIALIZED = 0,
  EnteralFormulaAdditiveTypeCodeCode_Value_LIPID = 1,
  EnteralFormulaAdditiveTypeCodeCode_Value_PROTEIN = 2,
  EnteralFormulaAdditiveTypeCodeCode_Value_CARBOHYDRATE = 3,
  EnteralFormulaAdditiveTypeCodeCode_Value_FIBER = 4,
  EnteralFormulaAdditiveTypeCodeCode_Value_WATER = 5,
  EnteralFormulaAdditiveTypeCodeCode_Value_EnteralFormulaAdditiveTypeCodeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EnteralFormulaAdditiveTypeCodeCode_Value_EnteralFormulaAdditiveTypeCodeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EnteralFormulaAdditiveTypeCodeCode_Value_IsValid(int value);
const EnteralFormulaAdditiveTypeCodeCode_Value EnteralFormulaAdditiveTypeCodeCode_Value_Value_MIN = EnteralFormulaAdditiveTypeCodeCode_Value_INVALID_UNINITIALIZED;
const EnteralFormulaAdditiveTypeCodeCode_Value EnteralFormulaAdditiveTypeCodeCode_Value_Value_MAX = EnteralFormulaAdditiveTypeCodeCode_Value_WATER;
const int EnteralFormulaAdditiveTypeCodeCode_Value_Value_ARRAYSIZE = EnteralFormulaAdditiveTypeCodeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnteralFormulaAdditiveTypeCodeCode_Value_descriptor();
inline const ::std::string& EnteralFormulaAdditiveTypeCodeCode_Value_Name(EnteralFormulaAdditiveTypeCodeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnteralFormulaAdditiveTypeCodeCode_Value_descriptor(), value);
}
inline bool EnteralFormulaAdditiveTypeCodeCode_Value_Parse(
    const ::std::string& name, EnteralFormulaAdditiveTypeCodeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnteralFormulaAdditiveTypeCodeCode_Value>(
    EnteralFormulaAdditiveTypeCodeCode_Value_descriptor(), name, value);
}
enum EpisodeOfCareStatusCode_Value {
  EpisodeOfCareStatusCode_Value_INVALID_UNINITIALIZED = 0,
  EpisodeOfCareStatusCode_Value_PLANNED = 1,
  EpisodeOfCareStatusCode_Value_WAITLIST = 2,
  EpisodeOfCareStatusCode_Value_ACTIVE = 3,
  EpisodeOfCareStatusCode_Value_ONHOLD = 4,
  EpisodeOfCareStatusCode_Value_FINISHED = 5,
  EpisodeOfCareStatusCode_Value_CANCELLED = 6,
  EpisodeOfCareStatusCode_Value_ENTERED_IN_ERROR = 7,
  EpisodeOfCareStatusCode_Value_EpisodeOfCareStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EpisodeOfCareStatusCode_Value_EpisodeOfCareStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EpisodeOfCareStatusCode_Value_IsValid(int value);
const EpisodeOfCareStatusCode_Value EpisodeOfCareStatusCode_Value_Value_MIN = EpisodeOfCareStatusCode_Value_INVALID_UNINITIALIZED;
const EpisodeOfCareStatusCode_Value EpisodeOfCareStatusCode_Value_Value_MAX = EpisodeOfCareStatusCode_Value_ENTERED_IN_ERROR;
const int EpisodeOfCareStatusCode_Value_Value_ARRAYSIZE = EpisodeOfCareStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* EpisodeOfCareStatusCode_Value_descriptor();
inline const ::std::string& EpisodeOfCareStatusCode_Value_Name(EpisodeOfCareStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    EpisodeOfCareStatusCode_Value_descriptor(), value);
}
inline bool EpisodeOfCareStatusCode_Value_Parse(
    const ::std::string& name, EpisodeOfCareStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EpisodeOfCareStatusCode_Value>(
    EpisodeOfCareStatusCode_Value_descriptor(), name, value);
}
enum EpisodeOfCareTypeCode_Value {
  EpisodeOfCareTypeCode_Value_INVALID_UNINITIALIZED = 0,
  EpisodeOfCareTypeCode_Value_HACC = 1,
  EpisodeOfCareTypeCode_Value_PAC = 2,
  EpisodeOfCareTypeCode_Value_DIAB = 3,
  EpisodeOfCareTypeCode_Value_DA = 4,
  EpisodeOfCareTypeCode_Value_CACP = 5,
  EpisodeOfCareTypeCode_Value_EpisodeOfCareTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EpisodeOfCareTypeCode_Value_EpisodeOfCareTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EpisodeOfCareTypeCode_Value_IsValid(int value);
const EpisodeOfCareTypeCode_Value EpisodeOfCareTypeCode_Value_Value_MIN = EpisodeOfCareTypeCode_Value_INVALID_UNINITIALIZED;
const EpisodeOfCareTypeCode_Value EpisodeOfCareTypeCode_Value_Value_MAX = EpisodeOfCareTypeCode_Value_CACP;
const int EpisodeOfCareTypeCode_Value_Value_ARRAYSIZE = EpisodeOfCareTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* EpisodeOfCareTypeCode_Value_descriptor();
inline const ::std::string& EpisodeOfCareTypeCode_Value_Name(EpisodeOfCareTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    EpisodeOfCareTypeCode_Value_descriptor(), value);
}
inline bool EpisodeOfCareTypeCode_Value_Parse(
    const ::std::string& name, EpisodeOfCareTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EpisodeOfCareTypeCode_Value>(
    EpisodeOfCareTypeCode_Value_descriptor(), name, value);
}
enum EventCapabilityModeCode_Value {
  EventCapabilityModeCode_Value_INVALID_UNINITIALIZED = 0,
  EventCapabilityModeCode_Value_SENDER = 1,
  EventCapabilityModeCode_Value_RECEIVER = 2,
  EventCapabilityModeCode_Value_EventCapabilityModeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EventCapabilityModeCode_Value_EventCapabilityModeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EventCapabilityModeCode_Value_IsValid(int value);
const EventCapabilityModeCode_Value EventCapabilityModeCode_Value_Value_MIN = EventCapabilityModeCode_Value_INVALID_UNINITIALIZED;
const EventCapabilityModeCode_Value EventCapabilityModeCode_Value_Value_MAX = EventCapabilityModeCode_Value_RECEIVER;
const int EventCapabilityModeCode_Value_Value_ARRAYSIZE = EventCapabilityModeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* EventCapabilityModeCode_Value_descriptor();
inline const ::std::string& EventCapabilityModeCode_Value_Name(EventCapabilityModeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    EventCapabilityModeCode_Value_descriptor(), value);
}
inline bool EventCapabilityModeCode_Value_Parse(
    const ::std::string& name, EventCapabilityModeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EventCapabilityModeCode_Value>(
    EventCapabilityModeCode_Value_descriptor(), name, value);
}
enum EventStatusCode_Value {
  EventStatusCode_Value_INVALID_UNINITIALIZED = 0,
  EventStatusCode_Value_PREPARATION = 1,
  EventStatusCode_Value_IN_PROGRESS = 2,
  EventStatusCode_Value_SUSPENDED = 3,
  EventStatusCode_Value_ABORTED = 4,
  EventStatusCode_Value_COMPLETED = 5,
  EventStatusCode_Value_ENTERED_IN_ERROR = 6,
  EventStatusCode_Value_UNKNOWN = 7,
  EventStatusCode_Value_EventStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EventStatusCode_Value_EventStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EventStatusCode_Value_IsValid(int value);
const EventStatusCode_Value EventStatusCode_Value_Value_MIN = EventStatusCode_Value_INVALID_UNINITIALIZED;
const EventStatusCode_Value EventStatusCode_Value_Value_MAX = EventStatusCode_Value_UNKNOWN;
const int EventStatusCode_Value_Value_ARRAYSIZE = EventStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* EventStatusCode_Value_descriptor();
inline const ::std::string& EventStatusCode_Value_Name(EventStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    EventStatusCode_Value_descriptor(), value);
}
inline bool EventStatusCode_Value_Parse(
    const ::std::string& name, EventStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EventStatusCode_Value>(
    EventStatusCode_Value_descriptor(), name, value);
}
enum ClaimPayeeResourceTypeCode_Value {
  ClaimPayeeResourceTypeCode_Value_INVALID_UNINITIALIZED = 0,
  ClaimPayeeResourceTypeCode_Value_ORGANIZATION = 1,
  ClaimPayeeResourceTypeCode_Value_PATIENT = 2,
  ClaimPayeeResourceTypeCode_Value_PRACTITIONER = 3,
  ClaimPayeeResourceTypeCode_Value_RELATEDPERSON = 4,
  ClaimPayeeResourceTypeCode_Value_ClaimPayeeResourceTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ClaimPayeeResourceTypeCode_Value_ClaimPayeeResourceTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ClaimPayeeResourceTypeCode_Value_IsValid(int value);
const ClaimPayeeResourceTypeCode_Value ClaimPayeeResourceTypeCode_Value_Value_MIN = ClaimPayeeResourceTypeCode_Value_INVALID_UNINITIALIZED;
const ClaimPayeeResourceTypeCode_Value ClaimPayeeResourceTypeCode_Value_Value_MAX = ClaimPayeeResourceTypeCode_Value_RELATEDPERSON;
const int ClaimPayeeResourceTypeCode_Value_Value_ARRAYSIZE = ClaimPayeeResourceTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ClaimPayeeResourceTypeCode_Value_descriptor();
inline const ::std::string& ClaimPayeeResourceTypeCode_Value_Name(ClaimPayeeResourceTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ClaimPayeeResourceTypeCode_Value_descriptor(), value);
}
inline bool ClaimPayeeResourceTypeCode_Value_Parse(
    const ::std::string& name, ClaimPayeeResourceTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClaimPayeeResourceTypeCode_Value>(
    ClaimPayeeResourceTypeCode_Value_descriptor(), name, value);
}
enum ExplanationOfBenefitStatusCode_Value {
  ExplanationOfBenefitStatusCode_Value_INVALID_UNINITIALIZED = 0,
  ExplanationOfBenefitStatusCode_Value_ACTIVE = 1,
  ExplanationOfBenefitStatusCode_Value_CANCELLED = 2,
  ExplanationOfBenefitStatusCode_Value_DRAFT = 3,
  ExplanationOfBenefitStatusCode_Value_ENTERED_IN_ERROR = 4,
  ExplanationOfBenefitStatusCode_Value_ExplanationOfBenefitStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ExplanationOfBenefitStatusCode_Value_ExplanationOfBenefitStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ExplanationOfBenefitStatusCode_Value_IsValid(int value);
const ExplanationOfBenefitStatusCode_Value ExplanationOfBenefitStatusCode_Value_Value_MIN = ExplanationOfBenefitStatusCode_Value_INVALID_UNINITIALIZED;
const ExplanationOfBenefitStatusCode_Value ExplanationOfBenefitStatusCode_Value_Value_MAX = ExplanationOfBenefitStatusCode_Value_ENTERED_IN_ERROR;
const int ExplanationOfBenefitStatusCode_Value_Value_ARRAYSIZE = ExplanationOfBenefitStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ExplanationOfBenefitStatusCode_Value_descriptor();
inline const ::std::string& ExplanationOfBenefitStatusCode_Value_Name(ExplanationOfBenefitStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ExplanationOfBenefitStatusCode_Value_descriptor(), value);
}
inline bool ExplanationOfBenefitStatusCode_Value_Parse(
    const ::std::string& name, ExplanationOfBenefitStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ExplanationOfBenefitStatusCode_Value>(
    ExplanationOfBenefitStatusCode_Value_descriptor(), name, value);
}
enum ExtensionContextCode_Value {
  ExtensionContextCode_Value_INVALID_UNINITIALIZED = 0,
  ExtensionContextCode_Value_RESOURCE = 1,
  ExtensionContextCode_Value_DATATYPE = 2,
  ExtensionContextCode_Value_EXTENSION = 3,
  ExtensionContextCode_Value_ExtensionContextCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ExtensionContextCode_Value_ExtensionContextCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ExtensionContextCode_Value_IsValid(int value);
const ExtensionContextCode_Value ExtensionContextCode_Value_Value_MIN = ExtensionContextCode_Value_INVALID_UNINITIALIZED;
const ExtensionContextCode_Value ExtensionContextCode_Value_Value_MAX = ExtensionContextCode_Value_EXTENSION;
const int ExtensionContextCode_Value_Value_ARRAYSIZE = ExtensionContextCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ExtensionContextCode_Value_descriptor();
inline const ::std::string& ExtensionContextCode_Value_Name(ExtensionContextCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ExtensionContextCode_Value_descriptor(), value);
}
inline bool ExtensionContextCode_Value_Parse(
    const ::std::string& name, ExtensionContextCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ExtensionContextCode_Value>(
    ExtensionContextCode_Value_descriptor(), name, value);
}
enum FilterOperatorCode_Value {
  FilterOperatorCode_Value_INVALID_UNINITIALIZED = 0,
  FilterOperatorCode_Value_EQUALS = 1,
  FilterOperatorCode_Value_IS_A = 2,
  FilterOperatorCode_Value_DESCENDENT_OF = 3,
  FilterOperatorCode_Value_IS_NOT_A = 4,
  FilterOperatorCode_Value_REGEX = 5,
  FilterOperatorCode_Value_IN = 6,
  FilterOperatorCode_Value_NOT_IN = 7,
  FilterOperatorCode_Value_GENERALIZES = 8,
  FilterOperatorCode_Value_EXISTS = 9,
  FilterOperatorCode_Value_FilterOperatorCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FilterOperatorCode_Value_FilterOperatorCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FilterOperatorCode_Value_IsValid(int value);
const FilterOperatorCode_Value FilterOperatorCode_Value_Value_MIN = FilterOperatorCode_Value_INVALID_UNINITIALIZED;
const FilterOperatorCode_Value FilterOperatorCode_Value_Value_MAX = FilterOperatorCode_Value_EXISTS;
const int FilterOperatorCode_Value_Value_ARRAYSIZE = FilterOperatorCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* FilterOperatorCode_Value_descriptor();
inline const ::std::string& FilterOperatorCode_Value_Name(FilterOperatorCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    FilterOperatorCode_Value_descriptor(), value);
}
inline bool FilterOperatorCode_Value_Parse(
    const ::std::string& name, FilterOperatorCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FilterOperatorCode_Value>(
    FilterOperatorCode_Value_descriptor(), name, value);
}
enum FlagCategoryCode_Value {
  FlagCategoryCode_Value_INVALID_UNINITIALIZED = 0,
  FlagCategoryCode_Value_DIET = 1,
  FlagCategoryCode_Value_DRUG = 2,
  FlagCategoryCode_Value_LAB = 3,
  FlagCategoryCode_Value_ADMIN = 4,
  FlagCategoryCode_Value_CONTACT = 5,
  FlagCategoryCode_Value_FlagCategoryCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FlagCategoryCode_Value_FlagCategoryCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FlagCategoryCode_Value_IsValid(int value);
const FlagCategoryCode_Value FlagCategoryCode_Value_Value_MIN = FlagCategoryCode_Value_INVALID_UNINITIALIZED;
const FlagCategoryCode_Value FlagCategoryCode_Value_Value_MAX = FlagCategoryCode_Value_CONTACT;
const int FlagCategoryCode_Value_Value_ARRAYSIZE = FlagCategoryCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* FlagCategoryCode_Value_descriptor();
inline const ::std::string& FlagCategoryCode_Value_Name(FlagCategoryCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    FlagCategoryCode_Value_descriptor(), value);
}
inline bool FlagCategoryCode_Value_Parse(
    const ::std::string& name, FlagCategoryCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FlagCategoryCode_Value>(
    FlagCategoryCode_Value_descriptor(), name, value);
}
enum FlagPriorityCodesCode_Value {
  FlagPriorityCodesCode_Value_INVALID_UNINITIALIZED = 0,
  FlagPriorityCodesCode_Value_PN = 1,
  FlagPriorityCodesCode_Value_PL = 2,
  FlagPriorityCodesCode_Value_PM = 3,
  FlagPriorityCodesCode_Value_PH = 4,
  FlagPriorityCodesCode_Value_FlagPriorityCodesCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FlagPriorityCodesCode_Value_FlagPriorityCodesCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FlagPriorityCodesCode_Value_IsValid(int value);
const FlagPriorityCodesCode_Value FlagPriorityCodesCode_Value_Value_MIN = FlagPriorityCodesCode_Value_INVALID_UNINITIALIZED;
const FlagPriorityCodesCode_Value FlagPriorityCodesCode_Value_Value_MAX = FlagPriorityCodesCode_Value_PH;
const int FlagPriorityCodesCode_Value_Value_ARRAYSIZE = FlagPriorityCodesCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* FlagPriorityCodesCode_Value_descriptor();
inline const ::std::string& FlagPriorityCodesCode_Value_Name(FlagPriorityCodesCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    FlagPriorityCodesCode_Value_descriptor(), value);
}
inline bool FlagPriorityCodesCode_Value_Parse(
    const ::std::string& name, FlagPriorityCodesCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FlagPriorityCodesCode_Value>(
    FlagPriorityCodesCode_Value_descriptor(), name, value);
}
enum FlagStatusCode_Value {
  FlagStatusCode_Value_INVALID_UNINITIALIZED = 0,
  FlagStatusCode_Value_ACTIVE = 1,
  FlagStatusCode_Value_INACTIVE = 2,
  FlagStatusCode_Value_ENTERED_IN_ERROR = 3,
  FlagStatusCode_Value_FlagStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FlagStatusCode_Value_FlagStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FlagStatusCode_Value_IsValid(int value);
const FlagStatusCode_Value FlagStatusCode_Value_Value_MIN = FlagStatusCode_Value_INVALID_UNINITIALIZED;
const FlagStatusCode_Value FlagStatusCode_Value_Value_MAX = FlagStatusCode_Value_ENTERED_IN_ERROR;
const int FlagStatusCode_Value_Value_ARRAYSIZE = FlagStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* FlagStatusCode_Value_descriptor();
inline const ::std::string& FlagStatusCode_Value_Name(FlagStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    FlagStatusCode_Value_descriptor(), value);
}
inline bool FlagStatusCode_Value_Parse(
    const ::std::string& name, FlagStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FlagStatusCode_Value>(
    FlagStatusCode_Value_descriptor(), name, value);
}
enum FinancialResourceStatusCode_Value {
  FinancialResourceStatusCode_Value_INVALID_UNINITIALIZED = 0,
  FinancialResourceStatusCode_Value_ACTIVE = 1,
  FinancialResourceStatusCode_Value_CANCELLED = 2,
  FinancialResourceStatusCode_Value_DRAFT = 3,
  FinancialResourceStatusCode_Value_ENTERED_IN_ERROR = 4,
  FinancialResourceStatusCode_Value_FinancialResourceStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FinancialResourceStatusCode_Value_FinancialResourceStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FinancialResourceStatusCode_Value_IsValid(int value);
const FinancialResourceStatusCode_Value FinancialResourceStatusCode_Value_Value_MIN = FinancialResourceStatusCode_Value_INVALID_UNINITIALIZED;
const FinancialResourceStatusCode_Value FinancialResourceStatusCode_Value_Value_MAX = FinancialResourceStatusCode_Value_ENTERED_IN_ERROR;
const int FinancialResourceStatusCode_Value_Value_ARRAYSIZE = FinancialResourceStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* FinancialResourceStatusCode_Value_descriptor();
inline const ::std::string& FinancialResourceStatusCode_Value_Name(FinancialResourceStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    FinancialResourceStatusCode_Value_descriptor(), value);
}
inline bool FinancialResourceStatusCode_Value_Parse(
    const ::std::string& name, FinancialResourceStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FinancialResourceStatusCode_Value>(
    FinancialResourceStatusCode_Value_descriptor(), name, value);
}
enum GoalAcceptanceStatusCode_Value {
  GoalAcceptanceStatusCode_Value_INVALID_UNINITIALIZED = 0,
  GoalAcceptanceStatusCode_Value_AGREE = 1,
  GoalAcceptanceStatusCode_Value_DISAGREE = 2,
  GoalAcceptanceStatusCode_Value_PENDING = 3,
  GoalAcceptanceStatusCode_Value_GoalAcceptanceStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GoalAcceptanceStatusCode_Value_GoalAcceptanceStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GoalAcceptanceStatusCode_Value_IsValid(int value);
const GoalAcceptanceStatusCode_Value GoalAcceptanceStatusCode_Value_Value_MIN = GoalAcceptanceStatusCode_Value_INVALID_UNINITIALIZED;
const GoalAcceptanceStatusCode_Value GoalAcceptanceStatusCode_Value_Value_MAX = GoalAcceptanceStatusCode_Value_PENDING;
const int GoalAcceptanceStatusCode_Value_Value_ARRAYSIZE = GoalAcceptanceStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* GoalAcceptanceStatusCode_Value_descriptor();
inline const ::std::string& GoalAcceptanceStatusCode_Value_Name(GoalAcceptanceStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    GoalAcceptanceStatusCode_Value_descriptor(), value);
}
inline bool GoalAcceptanceStatusCode_Value_Parse(
    const ::std::string& name, GoalAcceptanceStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GoalAcceptanceStatusCode_Value>(
    GoalAcceptanceStatusCode_Value_descriptor(), name, value);
}
enum GoalCategoryCode_Value {
  GoalCategoryCode_Value_INVALID_UNINITIALIZED = 0,
  GoalCategoryCode_Value_DIETARY = 1,
  GoalCategoryCode_Value_SAFETY = 2,
  GoalCategoryCode_Value_BEHAVIORAL = 3,
  GoalCategoryCode_Value_NURSING = 4,
  GoalCategoryCode_Value_PHYSIOTHERAPY = 5,
  GoalCategoryCode_Value_GoalCategoryCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GoalCategoryCode_Value_GoalCategoryCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GoalCategoryCode_Value_IsValid(int value);
const GoalCategoryCode_Value GoalCategoryCode_Value_Value_MIN = GoalCategoryCode_Value_INVALID_UNINITIALIZED;
const GoalCategoryCode_Value GoalCategoryCode_Value_Value_MAX = GoalCategoryCode_Value_PHYSIOTHERAPY;
const int GoalCategoryCode_Value_Value_ARRAYSIZE = GoalCategoryCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* GoalCategoryCode_Value_descriptor();
inline const ::std::string& GoalCategoryCode_Value_Name(GoalCategoryCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    GoalCategoryCode_Value_descriptor(), value);
}
inline bool GoalCategoryCode_Value_Parse(
    const ::std::string& name, GoalCategoryCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GoalCategoryCode_Value>(
    GoalCategoryCode_Value_descriptor(), name, value);
}
enum GoalPriorityCode_Value {
  GoalPriorityCode_Value_INVALID_UNINITIALIZED = 0,
  GoalPriorityCode_Value_HIGH_PRIORITY = 1,
  GoalPriorityCode_Value_MEDIUM_PRIORITY = 2,
  GoalPriorityCode_Value_LOW_PRIORITY = 3,
  GoalPriorityCode_Value_GoalPriorityCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GoalPriorityCode_Value_GoalPriorityCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GoalPriorityCode_Value_IsValid(int value);
const GoalPriorityCode_Value GoalPriorityCode_Value_Value_MIN = GoalPriorityCode_Value_INVALID_UNINITIALIZED;
const GoalPriorityCode_Value GoalPriorityCode_Value_Value_MAX = GoalPriorityCode_Value_LOW_PRIORITY;
const int GoalPriorityCode_Value_Value_ARRAYSIZE = GoalPriorityCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* GoalPriorityCode_Value_descriptor();
inline const ::std::string& GoalPriorityCode_Value_Name(GoalPriorityCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    GoalPriorityCode_Value_descriptor(), value);
}
inline bool GoalPriorityCode_Value_Parse(
    const ::std::string& name, GoalPriorityCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GoalPriorityCode_Value>(
    GoalPriorityCode_Value_descriptor(), name, value);
}
enum GoalRelationshipTypeCode_Value {
  GoalRelationshipTypeCode_Value_INVALID_UNINITIALIZED = 0,
  GoalRelationshipTypeCode_Value_PREDECESSOR = 1,
  GoalRelationshipTypeCode_Value_SUCCESSOR = 2,
  GoalRelationshipTypeCode_Value_REPLACEMENT = 3,
  GoalRelationshipTypeCode_Value_MILESTONE = 4,
  GoalRelationshipTypeCode_Value_OTHER = 5,
  GoalRelationshipTypeCode_Value_GoalRelationshipTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GoalRelationshipTypeCode_Value_GoalRelationshipTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GoalRelationshipTypeCode_Value_IsValid(int value);
const GoalRelationshipTypeCode_Value GoalRelationshipTypeCode_Value_Value_MIN = GoalRelationshipTypeCode_Value_INVALID_UNINITIALIZED;
const GoalRelationshipTypeCode_Value GoalRelationshipTypeCode_Value_Value_MAX = GoalRelationshipTypeCode_Value_OTHER;
const int GoalRelationshipTypeCode_Value_Value_ARRAYSIZE = GoalRelationshipTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* GoalRelationshipTypeCode_Value_descriptor();
inline const ::std::string& GoalRelationshipTypeCode_Value_Name(GoalRelationshipTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    GoalRelationshipTypeCode_Value_descriptor(), value);
}
inline bool GoalRelationshipTypeCode_Value_Parse(
    const ::std::string& name, GoalRelationshipTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GoalRelationshipTypeCode_Value>(
    GoalRelationshipTypeCode_Value_descriptor(), name, value);
}
enum GoalStatusCode_Value {
  GoalStatusCode_Value_INVALID_UNINITIALIZED = 0,
  GoalStatusCode_Value_PROPOSED = 1,
  GoalStatusCode_Value_ACCEPTED = 2,
  GoalStatusCode_Value_PLANNED = 3,
  GoalStatusCode_Value_IN_PROGRESS = 4,
  GoalStatusCode_Value_ON_TARGET = 5,
  GoalStatusCode_Value_AHEAD_OF_TARGET = 6,
  GoalStatusCode_Value_BEHIND_TARGET = 7,
  GoalStatusCode_Value_SUSTAINING = 8,
  GoalStatusCode_Value_ACHIEVED = 9,
  GoalStatusCode_Value_ON_HOLD = 10,
  GoalStatusCode_Value_CANCELLED = 11,
  GoalStatusCode_Value_ENTERED_IN_ERROR = 12,
  GoalStatusCode_Value_REJECTED = 13,
  GoalStatusCode_Value_GoalStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GoalStatusCode_Value_GoalStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GoalStatusCode_Value_IsValid(int value);
const GoalStatusCode_Value GoalStatusCode_Value_Value_MIN = GoalStatusCode_Value_INVALID_UNINITIALIZED;
const GoalStatusCode_Value GoalStatusCode_Value_Value_MAX = GoalStatusCode_Value_REJECTED;
const int GoalStatusCode_Value_Value_ARRAYSIZE = GoalStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* GoalStatusCode_Value_descriptor();
inline const ::std::string& GoalStatusCode_Value_Name(GoalStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    GoalStatusCode_Value_descriptor(), value);
}
inline bool GoalStatusCode_Value_Parse(
    const ::std::string& name, GoalStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GoalStatusCode_Value>(
    GoalStatusCode_Value_descriptor(), name, value);
}
enum GoalStatusReasonCode_Value {
  GoalStatusReasonCode_Value_INVALID_UNINITIALIZED = 0,
  GoalStatusReasonCode_Value_SURGERY = 1,
  GoalStatusReasonCode_Value_LIFE_EVENT = 2,
  GoalStatusReasonCode_Value_REPLACED = 3,
  GoalStatusReasonCode_Value_PATIENT_REQUEST = 4,
  GoalStatusReasonCode_Value_TEMP_NOT_ATTAINABLE = 5,
  GoalStatusReasonCode_Value_PERMANENT_NOT_ATTAINABLE = 6,
  GoalStatusReasonCode_Value_FINANCIAL_BARRIER = 7,
  GoalStatusReasonCode_Value_LACK_OF_TRANSPORTATION = 8,
  GoalStatusReasonCode_Value_LACK_OF_SOCIAL_SUPPORT = 9,
  GoalStatusReasonCode_Value_GoalStatusReasonCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GoalStatusReasonCode_Value_GoalStatusReasonCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GoalStatusReasonCode_Value_IsValid(int value);
const GoalStatusReasonCode_Value GoalStatusReasonCode_Value_Value_MIN = GoalStatusReasonCode_Value_INVALID_UNINITIALIZED;
const GoalStatusReasonCode_Value GoalStatusReasonCode_Value_Value_MAX = GoalStatusReasonCode_Value_LACK_OF_SOCIAL_SUPPORT;
const int GoalStatusReasonCode_Value_Value_ARRAYSIZE = GoalStatusReasonCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* GoalStatusReasonCode_Value_descriptor();
inline const ::std::string& GoalStatusReasonCode_Value_Name(GoalStatusReasonCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    GoalStatusReasonCode_Value_descriptor(), value);
}
inline bool GoalStatusReasonCode_Value_Parse(
    const ::std::string& name, GoalStatusReasonCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GoalStatusReasonCode_Value>(
    GoalStatusReasonCode_Value_descriptor(), name, value);
}
enum GraphCompartmentRuleCode_Value {
  GraphCompartmentRuleCode_Value_INVALID_UNINITIALIZED = 0,
  GraphCompartmentRuleCode_Value_IDENTICAL = 1,
  GraphCompartmentRuleCode_Value_MATCHING = 2,
  GraphCompartmentRuleCode_Value_DIFFERENT = 3,
  GraphCompartmentRuleCode_Value_CUSTOM = 4,
  GraphCompartmentRuleCode_Value_GraphCompartmentRuleCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GraphCompartmentRuleCode_Value_GraphCompartmentRuleCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GraphCompartmentRuleCode_Value_IsValid(int value);
const GraphCompartmentRuleCode_Value GraphCompartmentRuleCode_Value_Value_MIN = GraphCompartmentRuleCode_Value_INVALID_UNINITIALIZED;
const GraphCompartmentRuleCode_Value GraphCompartmentRuleCode_Value_Value_MAX = GraphCompartmentRuleCode_Value_CUSTOM;
const int GraphCompartmentRuleCode_Value_Value_ARRAYSIZE = GraphCompartmentRuleCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* GraphCompartmentRuleCode_Value_descriptor();
inline const ::std::string& GraphCompartmentRuleCode_Value_Name(GraphCompartmentRuleCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    GraphCompartmentRuleCode_Value_descriptor(), value);
}
inline bool GraphCompartmentRuleCode_Value_Parse(
    const ::std::string& name, GraphCompartmentRuleCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GraphCompartmentRuleCode_Value>(
    GraphCompartmentRuleCode_Value_descriptor(), name, value);
}
enum GroupTypeCode_Value {
  GroupTypeCode_Value_INVALID_UNINITIALIZED = 0,
  GroupTypeCode_Value_PERSON = 1,
  GroupTypeCode_Value_ANIMAL = 2,
  GroupTypeCode_Value_PRACTITIONER = 3,
  GroupTypeCode_Value_DEVICE = 4,
  GroupTypeCode_Value_MEDICATION = 5,
  GroupTypeCode_Value_SUBSTANCE = 6,
  GroupTypeCode_Value_GroupTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GroupTypeCode_Value_GroupTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GroupTypeCode_Value_IsValid(int value);
const GroupTypeCode_Value GroupTypeCode_Value_Value_MIN = GroupTypeCode_Value_INVALID_UNINITIALIZED;
const GroupTypeCode_Value GroupTypeCode_Value_Value_MAX = GroupTypeCode_Value_SUBSTANCE;
const int GroupTypeCode_Value_Value_ARRAYSIZE = GroupTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* GroupTypeCode_Value_descriptor();
inline const ::std::string& GroupTypeCode_Value_Name(GroupTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    GroupTypeCode_Value_descriptor(), value);
}
inline bool GroupTypeCode_Value_Parse(
    const ::std::string& name, GroupTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GroupTypeCode_Value>(
    GroupTypeCode_Value_descriptor(), name, value);
}
enum GuidanceResponseStatusCode_Value {
  GuidanceResponseStatusCode_Value_INVALID_UNINITIALIZED = 0,
  GuidanceResponseStatusCode_Value_SUCCESS = 1,
  GuidanceResponseStatusCode_Value_DATA_REQUESTED = 2,
  GuidanceResponseStatusCode_Value_DATA_REQUIRED = 3,
  GuidanceResponseStatusCode_Value_IN_PROGRESS = 4,
  GuidanceResponseStatusCode_Value_FAILURE = 5,
  GuidanceResponseStatusCode_Value_ENTERED_IN_ERROR = 6,
  GuidanceResponseStatusCode_Value_GuidanceResponseStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GuidanceResponseStatusCode_Value_GuidanceResponseStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GuidanceResponseStatusCode_Value_IsValid(int value);
const GuidanceResponseStatusCode_Value GuidanceResponseStatusCode_Value_Value_MIN = GuidanceResponseStatusCode_Value_INVALID_UNINITIALIZED;
const GuidanceResponseStatusCode_Value GuidanceResponseStatusCode_Value_Value_MAX = GuidanceResponseStatusCode_Value_ENTERED_IN_ERROR;
const int GuidanceResponseStatusCode_Value_Value_ARRAYSIZE = GuidanceResponseStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* GuidanceResponseStatusCode_Value_descriptor();
inline const ::std::string& GuidanceResponseStatusCode_Value_Name(GuidanceResponseStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    GuidanceResponseStatusCode_Value_descriptor(), value);
}
inline bool GuidanceResponseStatusCode_Value_Parse(
    const ::std::string& name, GuidanceResponseStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GuidanceResponseStatusCode_Value>(
    GuidanceResponseStatusCode_Value_descriptor(), name, value);
}
enum GuideDependencyTypeCode_Value {
  GuideDependencyTypeCode_Value_INVALID_UNINITIALIZED = 0,
  GuideDependencyTypeCode_Value_REFERENCE = 1,
  GuideDependencyTypeCode_Value_INCLUSION = 2,
  GuideDependencyTypeCode_Value_GuideDependencyTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GuideDependencyTypeCode_Value_GuideDependencyTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GuideDependencyTypeCode_Value_IsValid(int value);
const GuideDependencyTypeCode_Value GuideDependencyTypeCode_Value_Value_MIN = GuideDependencyTypeCode_Value_INVALID_UNINITIALIZED;
const GuideDependencyTypeCode_Value GuideDependencyTypeCode_Value_Value_MAX = GuideDependencyTypeCode_Value_INCLUSION;
const int GuideDependencyTypeCode_Value_Value_ARRAYSIZE = GuideDependencyTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* GuideDependencyTypeCode_Value_descriptor();
inline const ::std::string& GuideDependencyTypeCode_Value_Name(GuideDependencyTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    GuideDependencyTypeCode_Value_descriptor(), value);
}
inline bool GuideDependencyTypeCode_Value_Parse(
    const ::std::string& name, GuideDependencyTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GuideDependencyTypeCode_Value>(
    GuideDependencyTypeCode_Value_descriptor(), name, value);
}
enum GuidePageKindCode_Value {
  GuidePageKindCode_Value_INVALID_UNINITIALIZED = 0,
  GuidePageKindCode_Value_PAGE = 1,
  GuidePageKindCode_Value_EXAMPLE = 2,
  GuidePageKindCode_Value_LIST = 3,
  GuidePageKindCode_Value_INCLUDE = 4,
  GuidePageKindCode_Value_DIRECTORY = 5,
  GuidePageKindCode_Value_DICTIONARY = 6,
  GuidePageKindCode_Value_TOC = 7,
  GuidePageKindCode_Value_RESOURCE = 8,
  GuidePageKindCode_Value_GuidePageKindCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GuidePageKindCode_Value_GuidePageKindCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GuidePageKindCode_Value_IsValid(int value);
const GuidePageKindCode_Value GuidePageKindCode_Value_Value_MIN = GuidePageKindCode_Value_INVALID_UNINITIALIZED;
const GuidePageKindCode_Value GuidePageKindCode_Value_Value_MAX = GuidePageKindCode_Value_RESOURCE;
const int GuidePageKindCode_Value_Value_ARRAYSIZE = GuidePageKindCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* GuidePageKindCode_Value_descriptor();
inline const ::std::string& GuidePageKindCode_Value_Name(GuidePageKindCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    GuidePageKindCode_Value_descriptor(), value);
}
inline bool GuidePageKindCode_Value_Parse(
    const ::std::string& name, GuidePageKindCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GuidePageKindCode_Value>(
    GuidePageKindCode_Value_descriptor(), name, value);
}
enum FamilyHistoryNotDoneReasonCode_Value {
  FamilyHistoryNotDoneReasonCode_Value_INVALID_UNINITIALIZED = 0,
  FamilyHistoryNotDoneReasonCode_Value_SUBJECT_UNKNOWN = 1,
  FamilyHistoryNotDoneReasonCode_Value_WITHHELD = 2,
  FamilyHistoryNotDoneReasonCode_Value_UNABLE_TO_OBTAIN = 3,
  FamilyHistoryNotDoneReasonCode_Value_DEFERRED = 4,
  FamilyHistoryNotDoneReasonCode_Value_FamilyHistoryNotDoneReasonCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FamilyHistoryNotDoneReasonCode_Value_FamilyHistoryNotDoneReasonCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FamilyHistoryNotDoneReasonCode_Value_IsValid(int value);
const FamilyHistoryNotDoneReasonCode_Value FamilyHistoryNotDoneReasonCode_Value_Value_MIN = FamilyHistoryNotDoneReasonCode_Value_INVALID_UNINITIALIZED;
const FamilyHistoryNotDoneReasonCode_Value FamilyHistoryNotDoneReasonCode_Value_Value_MAX = FamilyHistoryNotDoneReasonCode_Value_DEFERRED;
const int FamilyHistoryNotDoneReasonCode_Value_Value_ARRAYSIZE = FamilyHistoryNotDoneReasonCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* FamilyHistoryNotDoneReasonCode_Value_descriptor();
inline const ::std::string& FamilyHistoryNotDoneReasonCode_Value_Name(FamilyHistoryNotDoneReasonCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    FamilyHistoryNotDoneReasonCode_Value_descriptor(), value);
}
inline bool FamilyHistoryNotDoneReasonCode_Value_Parse(
    const ::std::string& name, FamilyHistoryNotDoneReasonCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FamilyHistoryNotDoneReasonCode_Value>(
    FamilyHistoryNotDoneReasonCode_Value_descriptor(), name, value);
}
enum FamilyHistoryStatusCode_Value {
  FamilyHistoryStatusCode_Value_INVALID_UNINITIALIZED = 0,
  FamilyHistoryStatusCode_Value_PARTIAL = 1,
  FamilyHistoryStatusCode_Value_COMPLETED = 2,
  FamilyHistoryStatusCode_Value_ENTERED_IN_ERROR = 3,
  FamilyHistoryStatusCode_Value_HEALTH_UNKNOWN = 4,
  FamilyHistoryStatusCode_Value_FamilyHistoryStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FamilyHistoryStatusCode_Value_FamilyHistoryStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FamilyHistoryStatusCode_Value_IsValid(int value);
const FamilyHistoryStatusCode_Value FamilyHistoryStatusCode_Value_Value_MIN = FamilyHistoryStatusCode_Value_INVALID_UNINITIALIZED;
const FamilyHistoryStatusCode_Value FamilyHistoryStatusCode_Value_Value_MAX = FamilyHistoryStatusCode_Value_HEALTH_UNKNOWN;
const int FamilyHistoryStatusCode_Value_Value_ARRAYSIZE = FamilyHistoryStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* FamilyHistoryStatusCode_Value_descriptor();
inline const ::std::string& FamilyHistoryStatusCode_Value_Name(FamilyHistoryStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    FamilyHistoryStatusCode_Value_descriptor(), value);
}
inline bool FamilyHistoryStatusCode_Value_Parse(
    const ::std::string& name, FamilyHistoryStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FamilyHistoryStatusCode_Value>(
    FamilyHistoryStatusCode_Value_descriptor(), name, value);
}
enum HL7WorkgroupCode_Value {
  HL7WorkgroupCode_Value_INVALID_UNINITIALIZED = 0,
  HL7WorkgroupCode_Value_CBCC = 1,
  HL7WorkgroupCode_Value_CDS = 2,
  HL7WorkgroupCode_Value_CQI = 3,
  HL7WorkgroupCode_Value_CG = 4,
  HL7WorkgroupCode_Value_DEV = 5,
  HL7WorkgroupCode_Value_EHR = 6,
  HL7WorkgroupCode_Value_FHIR = 7,
  HL7WorkgroupCode_Value_FM = 8,
  HL7WorkgroupCode_Value_HSI = 9,
  HL7WorkgroupCode_Value_II = 10,
  HL7WorkgroupCode_Value_INM = 11,
  HL7WorkgroupCode_Value_ITS = 12,
  HL7WorkgroupCode_Value_OO = 13,
  HL7WorkgroupCode_Value_PA = 14,
  HL7WorkgroupCode_Value_PC = 15,
  HL7WorkgroupCode_Value_PHER = 16,
  HL7WorkgroupCode_Value_PHX = 17,
  HL7WorkgroupCode_Value_RCRIM = 18,
  HL7WorkgroupCode_Value_SD = 19,
  HL7WorkgroupCode_Value_SEC = 20,
  HL7WorkgroupCode_Value_US = 21,
  HL7WorkgroupCode_Value_VOCAB = 22,
  HL7WorkgroupCode_Value_AID = 23,
  HL7WorkgroupCode_Value_HL7WorkgroupCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  HL7WorkgroupCode_Value_HL7WorkgroupCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool HL7WorkgroupCode_Value_IsValid(int value);
const HL7WorkgroupCode_Value HL7WorkgroupCode_Value_Value_MIN = HL7WorkgroupCode_Value_INVALID_UNINITIALIZED;
const HL7WorkgroupCode_Value HL7WorkgroupCode_Value_Value_MAX = HL7WorkgroupCode_Value_AID;
const int HL7WorkgroupCode_Value_Value_ARRAYSIZE = HL7WorkgroupCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* HL7WorkgroupCode_Value_descriptor();
inline const ::std::string& HL7WorkgroupCode_Value_Name(HL7WorkgroupCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    HL7WorkgroupCode_Value_descriptor(), value);
}
inline bool HL7WorkgroupCode_Value_Parse(
    const ::std::string& name, HL7WorkgroupCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HL7WorkgroupCode_Value>(
    HL7WorkgroupCode_Value_descriptor(), name, value);
}
enum TestScriptRequestMethodCodeCode_Value {
  TestScriptRequestMethodCodeCode_Value_INVALID_UNINITIALIZED = 0,
  TestScriptRequestMethodCodeCode_Value_DELETE = 1,
  TestScriptRequestMethodCodeCode_Value_GET = 2,
  TestScriptRequestMethodCodeCode_Value_OPTIONS = 3,
  TestScriptRequestMethodCodeCode_Value_PATCH = 4,
  TestScriptRequestMethodCodeCode_Value_POST = 5,
  TestScriptRequestMethodCodeCode_Value_PUT = 6,
  TestScriptRequestMethodCodeCode_Value_TestScriptRequestMethodCodeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TestScriptRequestMethodCodeCode_Value_TestScriptRequestMethodCodeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TestScriptRequestMethodCodeCode_Value_IsValid(int value);
const TestScriptRequestMethodCodeCode_Value TestScriptRequestMethodCodeCode_Value_Value_MIN = TestScriptRequestMethodCodeCode_Value_INVALID_UNINITIALIZED;
const TestScriptRequestMethodCodeCode_Value TestScriptRequestMethodCodeCode_Value_Value_MAX = TestScriptRequestMethodCodeCode_Value_PUT;
const int TestScriptRequestMethodCodeCode_Value_Value_ARRAYSIZE = TestScriptRequestMethodCodeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* TestScriptRequestMethodCodeCode_Value_descriptor();
inline const ::std::string& TestScriptRequestMethodCodeCode_Value_Name(TestScriptRequestMethodCodeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    TestScriptRequestMethodCodeCode_Value_descriptor(), value);
}
inline bool TestScriptRequestMethodCodeCode_Value_Parse(
    const ::std::string& name, TestScriptRequestMethodCodeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestScriptRequestMethodCodeCode_Value>(
    TestScriptRequestMethodCodeCode_Value_descriptor(), name, value);
}
enum HTTPVerbCode_Value {
  HTTPVerbCode_Value_INVALID_UNINITIALIZED = 0,
  HTTPVerbCode_Value_GET = 1,
  HTTPVerbCode_Value_POST = 2,
  HTTPVerbCode_Value_PUT = 3,
  HTTPVerbCode_Value_DELETE = 4,
  HTTPVerbCode_Value_HTTPVerbCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  HTTPVerbCode_Value_HTTPVerbCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool HTTPVerbCode_Value_IsValid(int value);
const HTTPVerbCode_Value HTTPVerbCode_Value_Value_MIN = HTTPVerbCode_Value_INVALID_UNINITIALIZED;
const HTTPVerbCode_Value HTTPVerbCode_Value_Value_MAX = HTTPVerbCode_Value_DELETE;
const int HTTPVerbCode_Value_Value_ARRAYSIZE = HTTPVerbCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* HTTPVerbCode_Value_descriptor();
inline const ::std::string& HTTPVerbCode_Value_Name(HTTPVerbCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    HTTPVerbCode_Value_descriptor(), value);
}
inline bool HTTPVerbCode_Value_Parse(
    const ::std::string& name, HTTPVerbCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HTTPVerbCode_Value>(
    HTTPVerbCode_Value_descriptor(), name, value);
}
enum IdentityAssuranceLevelCode_Value {
  IdentityAssuranceLevelCode_Value_INVALID_UNINITIALIZED = 0,
  IdentityAssuranceLevelCode_Value_LEVEL1 = 1,
  IdentityAssuranceLevelCode_Value_LEVEL2 = 2,
  IdentityAssuranceLevelCode_Value_LEVEL3 = 3,
  IdentityAssuranceLevelCode_Value_LEVEL4 = 4,
  IdentityAssuranceLevelCode_Value_IdentityAssuranceLevelCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  IdentityAssuranceLevelCode_Value_IdentityAssuranceLevelCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool IdentityAssuranceLevelCode_Value_IsValid(int value);
const IdentityAssuranceLevelCode_Value IdentityAssuranceLevelCode_Value_Value_MIN = IdentityAssuranceLevelCode_Value_INVALID_UNINITIALIZED;
const IdentityAssuranceLevelCode_Value IdentityAssuranceLevelCode_Value_Value_MAX = IdentityAssuranceLevelCode_Value_LEVEL4;
const int IdentityAssuranceLevelCode_Value_Value_ARRAYSIZE = IdentityAssuranceLevelCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* IdentityAssuranceLevelCode_Value_descriptor();
inline const ::std::string& IdentityAssuranceLevelCode_Value_Name(IdentityAssuranceLevelCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    IdentityAssuranceLevelCode_Value_descriptor(), value);
}
inline bool IdentityAssuranceLevelCode_Value_Parse(
    const ::std::string& name, IdentityAssuranceLevelCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<IdentityAssuranceLevelCode_Value>(
    IdentityAssuranceLevelCode_Value_descriptor(), name, value);
}
enum ImmunizationOriginCodesCode_Value {
  ImmunizationOriginCodesCode_Value_INVALID_UNINITIALIZED = 0,
  ImmunizationOriginCodesCode_Value_PROVIDER = 1,
  ImmunizationOriginCodesCode_Value_RECORD = 2,
  ImmunizationOriginCodesCode_Value_RECALL = 3,
  ImmunizationOriginCodesCode_Value_SCHOOL = 4,
  ImmunizationOriginCodesCode_Value_ImmunizationOriginCodesCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ImmunizationOriginCodesCode_Value_ImmunizationOriginCodesCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ImmunizationOriginCodesCode_Value_IsValid(int value);
const ImmunizationOriginCodesCode_Value ImmunizationOriginCodesCode_Value_Value_MIN = ImmunizationOriginCodesCode_Value_INVALID_UNINITIALIZED;
const ImmunizationOriginCodesCode_Value ImmunizationOriginCodesCode_Value_Value_MAX = ImmunizationOriginCodesCode_Value_SCHOOL;
const int ImmunizationOriginCodesCode_Value_Value_ARRAYSIZE = ImmunizationOriginCodesCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ImmunizationOriginCodesCode_Value_descriptor();
inline const ::std::string& ImmunizationOriginCodesCode_Value_Name(ImmunizationOriginCodesCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ImmunizationOriginCodesCode_Value_descriptor(), value);
}
inline bool ImmunizationOriginCodesCode_Value_Parse(
    const ::std::string& name, ImmunizationOriginCodesCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ImmunizationOriginCodesCode_Value>(
    ImmunizationOriginCodesCode_Value_descriptor(), name, value);
}
enum ImmunizationRecommendationDateCriterionCodesCode_Value {
  ImmunizationRecommendationDateCriterionCodesCode_Value_INVALID_UNINITIALIZED = 0,
  ImmunizationRecommendationDateCriterionCodesCode_Value_DUE = 1,
  ImmunizationRecommendationDateCriterionCodesCode_Value_RECOMMENDED = 2,
  ImmunizationRecommendationDateCriterionCodesCode_Value_EARLIEST = 3,
  ImmunizationRecommendationDateCriterionCodesCode_Value_OVERDUE = 4,
  ImmunizationRecommendationDateCriterionCodesCode_Value_LATEST = 5,
  ImmunizationRecommendationDateCriterionCodesCode_Value_ImmunizationRecommendationDateCriterionCodesCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ImmunizationRecommendationDateCriterionCodesCode_Value_ImmunizationRecommendationDateCriterionCodesCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ImmunizationRecommendationDateCriterionCodesCode_Value_IsValid(int value);
const ImmunizationRecommendationDateCriterionCodesCode_Value ImmunizationRecommendationDateCriterionCodesCode_Value_Value_MIN = ImmunizationRecommendationDateCriterionCodesCode_Value_INVALID_UNINITIALIZED;
const ImmunizationRecommendationDateCriterionCodesCode_Value ImmunizationRecommendationDateCriterionCodesCode_Value_Value_MAX = ImmunizationRecommendationDateCriterionCodesCode_Value_LATEST;
const int ImmunizationRecommendationDateCriterionCodesCode_Value_Value_ARRAYSIZE = ImmunizationRecommendationDateCriterionCodesCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ImmunizationRecommendationDateCriterionCodesCode_Value_descriptor();
inline const ::std::string& ImmunizationRecommendationDateCriterionCodesCode_Value_Name(ImmunizationRecommendationDateCriterionCodesCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ImmunizationRecommendationDateCriterionCodesCode_Value_descriptor(), value);
}
inline bool ImmunizationRecommendationDateCriterionCodesCode_Value_Parse(
    const ::std::string& name, ImmunizationRecommendationDateCriterionCodesCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ImmunizationRecommendationDateCriterionCodesCode_Value>(
    ImmunizationRecommendationDateCriterionCodesCode_Value_descriptor(), name, value);
}
enum ImmunizationRecommendationStatusCodesCode_Value {
  ImmunizationRecommendationStatusCodesCode_Value_INVALID_UNINITIALIZED = 0,
  ImmunizationRecommendationStatusCodesCode_Value_DUE = 1,
  ImmunizationRecommendationStatusCodesCode_Value_OVERDUE = 2,
  ImmunizationRecommendationStatusCodesCode_Value_ImmunizationRecommendationStatusCodesCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ImmunizationRecommendationStatusCodesCode_Value_ImmunizationRecommendationStatusCodesCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ImmunizationRecommendationStatusCodesCode_Value_IsValid(int value);
const ImmunizationRecommendationStatusCodesCode_Value ImmunizationRecommendationStatusCodesCode_Value_Value_MIN = ImmunizationRecommendationStatusCodesCode_Value_INVALID_UNINITIALIZED;
const ImmunizationRecommendationStatusCodesCode_Value ImmunizationRecommendationStatusCodesCode_Value_Value_MAX = ImmunizationRecommendationStatusCodesCode_Value_OVERDUE;
const int ImmunizationRecommendationStatusCodesCode_Value_Value_ARRAYSIZE = ImmunizationRecommendationStatusCodesCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ImmunizationRecommendationStatusCodesCode_Value_descriptor();
inline const ::std::string& ImmunizationRecommendationStatusCodesCode_Value_Name(ImmunizationRecommendationStatusCodesCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ImmunizationRecommendationStatusCodesCode_Value_descriptor(), value);
}
inline bool ImmunizationRecommendationStatusCodesCode_Value_Parse(
    const ::std::string& name, ImmunizationRecommendationStatusCodesCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ImmunizationRecommendationStatusCodesCode_Value>(
    ImmunizationRecommendationStatusCodesCode_Value_descriptor(), name, value);
}
enum ImmunizationStatusCodesCode_Value {
  ImmunizationStatusCodesCode_Value_INVALID_UNINITIALIZED = 0,
  ImmunizationStatusCodesCode_Value_COMPLETED = 1,
  ImmunizationStatusCodesCode_Value_ENTERED_IN_ERROR = 2,
  ImmunizationStatusCodesCode_Value_ImmunizationStatusCodesCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ImmunizationStatusCodesCode_Value_ImmunizationStatusCodesCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ImmunizationStatusCodesCode_Value_IsValid(int value);
const ImmunizationStatusCodesCode_Value ImmunizationStatusCodesCode_Value_Value_MIN = ImmunizationStatusCodesCode_Value_INVALID_UNINITIALIZED;
const ImmunizationStatusCodesCode_Value ImmunizationStatusCodesCode_Value_Value_MAX = ImmunizationStatusCodesCode_Value_ENTERED_IN_ERROR;
const int ImmunizationStatusCodesCode_Value_Value_ARRAYSIZE = ImmunizationStatusCodesCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ImmunizationStatusCodesCode_Value_descriptor();
inline const ::std::string& ImmunizationStatusCodesCode_Value_Name(ImmunizationStatusCodesCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ImmunizationStatusCodesCode_Value_descriptor(), value);
}
inline bool ImmunizationStatusCodesCode_Value_Parse(
    const ::std::string& name, ImmunizationStatusCodesCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ImmunizationStatusCodesCode_Value>(
    ImmunizationStatusCodesCode_Value_descriptor(), name, value);
}
enum ImplantStatusCode_Value {
  ImplantStatusCode_Value_INVALID_UNINITIALIZED = 0,
  ImplantStatusCode_Value_FUNCTIONAL = 1,
  ImplantStatusCode_Value_NON_FUNCTIONAL = 2,
  ImplantStatusCode_Value_DISABLED = 3,
  ImplantStatusCode_Value_UNKNOWN = 4,
  ImplantStatusCode_Value_ImplantStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ImplantStatusCode_Value_ImplantStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ImplantStatusCode_Value_IsValid(int value);
const ImplantStatusCode_Value ImplantStatusCode_Value_Value_MIN = ImplantStatusCode_Value_INVALID_UNINITIALIZED;
const ImplantStatusCode_Value ImplantStatusCode_Value_Value_MAX = ImplantStatusCode_Value_UNKNOWN;
const int ImplantStatusCode_Value_Value_ARRAYSIZE = ImplantStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ImplantStatusCode_Value_descriptor();
inline const ::std::string& ImplantStatusCode_Value_Name(ImplantStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ImplantStatusCode_Value_descriptor(), value);
}
inline bool ImplantStatusCode_Value_Parse(
    const ::std::string& name, ImplantStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ImplantStatusCode_Value>(
    ImplantStatusCode_Value_descriptor(), name, value);
}
enum InstanceAvailabilityCode_Value {
  InstanceAvailabilityCode_Value_INVALID_UNINITIALIZED = 0,
  InstanceAvailabilityCode_Value_ONLINE = 1,
  InstanceAvailabilityCode_Value_OFFLINE = 2,
  InstanceAvailabilityCode_Value_NEARLINE = 3,
  InstanceAvailabilityCode_Value_UNAVAILABLE = 4,
  InstanceAvailabilityCode_Value_InstanceAvailabilityCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InstanceAvailabilityCode_Value_InstanceAvailabilityCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InstanceAvailabilityCode_Value_IsValid(int value);
const InstanceAvailabilityCode_Value InstanceAvailabilityCode_Value_Value_MIN = InstanceAvailabilityCode_Value_INVALID_UNINITIALIZED;
const InstanceAvailabilityCode_Value InstanceAvailabilityCode_Value_Value_MAX = InstanceAvailabilityCode_Value_UNAVAILABLE;
const int InstanceAvailabilityCode_Value_Value_ARRAYSIZE = InstanceAvailabilityCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* InstanceAvailabilityCode_Value_descriptor();
inline const ::std::string& InstanceAvailabilityCode_Value_Name(InstanceAvailabilityCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    InstanceAvailabilityCode_Value_descriptor(), value);
}
inline bool InstanceAvailabilityCode_Value_Parse(
    const ::std::string& name, InstanceAvailabilityCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InstanceAvailabilityCode_Value>(
    InstanceAvailabilityCode_Value_descriptor(), name, value);
}
enum IssueSeverityCode_Value {
  IssueSeverityCode_Value_INVALID_UNINITIALIZED = 0,
  IssueSeverityCode_Value_FATAL = 1,
  IssueSeverityCode_Value_ERROR = 2,
  IssueSeverityCode_Value_WARNING = 3,
  IssueSeverityCode_Value_INFORMATION = 4,
  IssueSeverityCode_Value_IssueSeverityCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  IssueSeverityCode_Value_IssueSeverityCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool IssueSeverityCode_Value_IsValid(int value);
const IssueSeverityCode_Value IssueSeverityCode_Value_Value_MIN = IssueSeverityCode_Value_INVALID_UNINITIALIZED;
const IssueSeverityCode_Value IssueSeverityCode_Value_Value_MAX = IssueSeverityCode_Value_INFORMATION;
const int IssueSeverityCode_Value_Value_ARRAYSIZE = IssueSeverityCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* IssueSeverityCode_Value_descriptor();
inline const ::std::string& IssueSeverityCode_Value_Name(IssueSeverityCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    IssueSeverityCode_Value_descriptor(), value);
}
inline bool IssueSeverityCode_Value_Parse(
    const ::std::string& name, IssueSeverityCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<IssueSeverityCode_Value>(
    IssueSeverityCode_Value_descriptor(), name, value);
}
enum IssueTypeCode_Value {
  IssueTypeCode_Value_INVALID_UNINITIALIZED = 0,
  IssueTypeCode_Value_INVALID = 1,
  IssueTypeCode_Value_STRUCTURE = 2,
  IssueTypeCode_Value_REQUIRED = 3,
  IssueTypeCode_Value_VALUE = 4,
  IssueTypeCode_Value_INVARIANT = 5,
  IssueTypeCode_Value_SECURITY = 6,
  IssueTypeCode_Value_LOGIN = 7,
  IssueTypeCode_Value_UNKNOWN = 8,
  IssueTypeCode_Value_EXPIRED = 9,
  IssueTypeCode_Value_FORBIDDEN = 10,
  IssueTypeCode_Value_SUPPRESSED = 11,
  IssueTypeCode_Value_PROCESSING = 12,
  IssueTypeCode_Value_NOT_SUPPORTED = 13,
  IssueTypeCode_Value_DUPLICATE = 14,
  IssueTypeCode_Value_NOT_FOUND = 15,
  IssueTypeCode_Value_TOO_LONG = 16,
  IssueTypeCode_Value_CODE_INVALID = 17,
  IssueTypeCode_Value_EXTENSION = 18,
  IssueTypeCode_Value_TOO_COSTLY = 19,
  IssueTypeCode_Value_BUSINESS_RULE = 20,
  IssueTypeCode_Value_CONFLICT = 21,
  IssueTypeCode_Value_INCOMPLETE = 22,
  IssueTypeCode_Value_TRANSIENT = 23,
  IssueTypeCode_Value_LOCK_ERROR = 24,
  IssueTypeCode_Value_NO_STORE = 25,
  IssueTypeCode_Value_EXCEPTION = 26,
  IssueTypeCode_Value_TIMEOUT = 27,
  IssueTypeCode_Value_THROTTLED = 28,
  IssueTypeCode_Value_INFORMATIONAL = 29,
  IssueTypeCode_Value_IssueTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  IssueTypeCode_Value_IssueTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool IssueTypeCode_Value_IsValid(int value);
const IssueTypeCode_Value IssueTypeCode_Value_Value_MIN = IssueTypeCode_Value_INVALID_UNINITIALIZED;
const IssueTypeCode_Value IssueTypeCode_Value_Value_MAX = IssueTypeCode_Value_INFORMATIONAL;
const int IssueTypeCode_Value_Value_ARRAYSIZE = IssueTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* IssueTypeCode_Value_descriptor();
inline const ::std::string& IssueTypeCode_Value_Name(IssueTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    IssueTypeCode_Value_descriptor(), value);
}
inline bool IssueTypeCode_Value_Parse(
    const ::std::string& name, IssueTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<IssueTypeCode_Value>(
    IssueTypeCode_Value_descriptor(), name, value);
}
enum QuestionnaireItemTypeCode_Value {
  QuestionnaireItemTypeCode_Value_INVALID_UNINITIALIZED = 0,
  QuestionnaireItemTypeCode_Value_GROUP = 1,
  QuestionnaireItemTypeCode_Value_DISPLAY = 2,
  QuestionnaireItemTypeCode_Value_QUESTION = 3,
  QuestionnaireItemTypeCode_Value_BOOLEAN = 4,
  QuestionnaireItemTypeCode_Value_DECIMAL = 5,
  QuestionnaireItemTypeCode_Value_INTEGER = 6,
  QuestionnaireItemTypeCode_Value_DATE = 7,
  QuestionnaireItemTypeCode_Value_DATE_TIME = 8,
  QuestionnaireItemTypeCode_Value_TIME = 9,
  QuestionnaireItemTypeCode_Value_STRING = 10,
  QuestionnaireItemTypeCode_Value_TEXT = 11,
  QuestionnaireItemTypeCode_Value_URL = 12,
  QuestionnaireItemTypeCode_Value_CHOICE = 13,
  QuestionnaireItemTypeCode_Value_OPEN_CHOICE = 14,
  QuestionnaireItemTypeCode_Value_ATTACHMENT = 15,
  QuestionnaireItemTypeCode_Value_REFERENCE = 16,
  QuestionnaireItemTypeCode_Value_QUANTITY = 17,
  QuestionnaireItemTypeCode_Value_QuestionnaireItemTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  QuestionnaireItemTypeCode_Value_QuestionnaireItemTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool QuestionnaireItemTypeCode_Value_IsValid(int value);
const QuestionnaireItemTypeCode_Value QuestionnaireItemTypeCode_Value_Value_MIN = QuestionnaireItemTypeCode_Value_INVALID_UNINITIALIZED;
const QuestionnaireItemTypeCode_Value QuestionnaireItemTypeCode_Value_Value_MAX = QuestionnaireItemTypeCode_Value_QUANTITY;
const int QuestionnaireItemTypeCode_Value_Value_ARRAYSIZE = QuestionnaireItemTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* QuestionnaireItemTypeCode_Value_descriptor();
inline const ::std::string& QuestionnaireItemTypeCode_Value_Name(QuestionnaireItemTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    QuestionnaireItemTypeCode_Value_descriptor(), value);
}
inline bool QuestionnaireItemTypeCode_Value_Parse(
    const ::std::string& name, QuestionnaireItemTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QuestionnaireItemTypeCode_Value>(
    QuestionnaireItemTypeCode_Value_descriptor(), name, value);
}
enum LibraryTypeCode_Value {
  LibraryTypeCode_Value_INVALID_UNINITIALIZED = 0,
  LibraryTypeCode_Value_LOGIC_LIBRARY = 1,
  LibraryTypeCode_Value_MODEL_DEFINITION = 2,
  LibraryTypeCode_Value_ASSET_COLLECTION = 3,
  LibraryTypeCode_Value_MODULE_DEFINITION = 4,
  LibraryTypeCode_Value_LibraryTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LibraryTypeCode_Value_LibraryTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LibraryTypeCode_Value_IsValid(int value);
const LibraryTypeCode_Value LibraryTypeCode_Value_Value_MIN = LibraryTypeCode_Value_INVALID_UNINITIALIZED;
const LibraryTypeCode_Value LibraryTypeCode_Value_Value_MAX = LibraryTypeCode_Value_MODULE_DEFINITION;
const int LibraryTypeCode_Value_Value_ARRAYSIZE = LibraryTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* LibraryTypeCode_Value_descriptor();
inline const ::std::string& LibraryTypeCode_Value_Name(LibraryTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    LibraryTypeCode_Value_descriptor(), value);
}
inline bool LibraryTypeCode_Value_Parse(
    const ::std::string& name, LibraryTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LibraryTypeCode_Value>(
    LibraryTypeCode_Value_descriptor(), name, value);
}
enum LinkageTypeCode_Value {
  LinkageTypeCode_Value_INVALID_UNINITIALIZED = 0,
  LinkageTypeCode_Value_SOURCE = 1,
  LinkageTypeCode_Value_ALTERNATE = 2,
  LinkageTypeCode_Value_HISTORICAL = 3,
  LinkageTypeCode_Value_LinkageTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LinkageTypeCode_Value_LinkageTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LinkageTypeCode_Value_IsValid(int value);
const LinkageTypeCode_Value LinkageTypeCode_Value_Value_MIN = LinkageTypeCode_Value_INVALID_UNINITIALIZED;
const LinkageTypeCode_Value LinkageTypeCode_Value_Value_MAX = LinkageTypeCode_Value_HISTORICAL;
const int LinkageTypeCode_Value_Value_ARRAYSIZE = LinkageTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* LinkageTypeCode_Value_descriptor();
inline const ::std::string& LinkageTypeCode_Value_Name(LinkageTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    LinkageTypeCode_Value_descriptor(), value);
}
inline bool LinkageTypeCode_Value_Parse(
    const ::std::string& name, LinkageTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LinkageTypeCode_Value>(
    LinkageTypeCode_Value_descriptor(), name, value);
}
enum LinkTypeCode_Value {
  LinkTypeCode_Value_INVALID_UNINITIALIZED = 0,
  LinkTypeCode_Value_REPLACED_BY = 1,
  LinkTypeCode_Value_REPLACES = 2,
  LinkTypeCode_Value_REFER = 3,
  LinkTypeCode_Value_SEEALSO = 4,
  LinkTypeCode_Value_LinkTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LinkTypeCode_Value_LinkTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LinkTypeCode_Value_IsValid(int value);
const LinkTypeCode_Value LinkTypeCode_Value_Value_MIN = LinkTypeCode_Value_INVALID_UNINITIALIZED;
const LinkTypeCode_Value LinkTypeCode_Value_Value_MAX = LinkTypeCode_Value_SEEALSO;
const int LinkTypeCode_Value_Value_ARRAYSIZE = LinkTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* LinkTypeCode_Value_descriptor();
inline const ::std::string& LinkTypeCode_Value_Name(LinkTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    LinkTypeCode_Value_descriptor(), value);
}
inline bool LinkTypeCode_Value_Parse(
    const ::std::string& name, LinkTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LinkTypeCode_Value>(
    LinkTypeCode_Value_descriptor(), name, value);
}
enum ListEmptyReasonsCode_Value {
  ListEmptyReasonsCode_Value_INVALID_UNINITIALIZED = 0,
  ListEmptyReasonsCode_Value_NILKNOWN = 1,
  ListEmptyReasonsCode_Value_NOTASKED = 2,
  ListEmptyReasonsCode_Value_WITHHELD = 3,
  ListEmptyReasonsCode_Value_UNAVAILABLE = 4,
  ListEmptyReasonsCode_Value_NOTSTARTED = 5,
  ListEmptyReasonsCode_Value_CLOSED = 6,
  ListEmptyReasonsCode_Value_ListEmptyReasonsCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ListEmptyReasonsCode_Value_ListEmptyReasonsCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ListEmptyReasonsCode_Value_IsValid(int value);
const ListEmptyReasonsCode_Value ListEmptyReasonsCode_Value_Value_MIN = ListEmptyReasonsCode_Value_INVALID_UNINITIALIZED;
const ListEmptyReasonsCode_Value ListEmptyReasonsCode_Value_Value_MAX = ListEmptyReasonsCode_Value_CLOSED;
const int ListEmptyReasonsCode_Value_Value_ARRAYSIZE = ListEmptyReasonsCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ListEmptyReasonsCode_Value_descriptor();
inline const ::std::string& ListEmptyReasonsCode_Value_Name(ListEmptyReasonsCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ListEmptyReasonsCode_Value_descriptor(), value);
}
inline bool ListEmptyReasonsCode_Value_Parse(
    const ::std::string& name, ListEmptyReasonsCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ListEmptyReasonsCode_Value>(
    ListEmptyReasonsCode_Value_descriptor(), name, value);
}
enum ExampleUseCodesforListCode_Value {
  ExampleUseCodesforListCode_Value_INVALID_UNINITIALIZED = 0,
  ExampleUseCodesforListCode_Value_ALERTS = 1,
  ExampleUseCodesforListCode_Value_ADVERSERXNS = 2,
  ExampleUseCodesforListCode_Value_ALLERGIES = 3,
  ExampleUseCodesforListCode_Value_MEDICATIONS = 4,
  ExampleUseCodesforListCode_Value_PROBLEMS = 5,
  ExampleUseCodesforListCode_Value_WORKLIST = 6,
  ExampleUseCodesforListCode_Value_WAITING = 7,
  ExampleUseCodesforListCode_Value_PROTOCOLS = 8,
  ExampleUseCodesforListCode_Value_PLANS = 9,
  ExampleUseCodesforListCode_Value_ExampleUseCodesforListCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ExampleUseCodesforListCode_Value_ExampleUseCodesforListCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ExampleUseCodesforListCode_Value_IsValid(int value);
const ExampleUseCodesforListCode_Value ExampleUseCodesforListCode_Value_Value_MIN = ExampleUseCodesforListCode_Value_INVALID_UNINITIALIZED;
const ExampleUseCodesforListCode_Value ExampleUseCodesforListCode_Value_Value_MAX = ExampleUseCodesforListCode_Value_PLANS;
const int ExampleUseCodesforListCode_Value_Value_ARRAYSIZE = ExampleUseCodesforListCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ExampleUseCodesforListCode_Value_descriptor();
inline const ::std::string& ExampleUseCodesforListCode_Value_Name(ExampleUseCodesforListCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ExampleUseCodesforListCode_Value_descriptor(), value);
}
inline bool ExampleUseCodesforListCode_Value_Parse(
    const ::std::string& name, ExampleUseCodesforListCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ExampleUseCodesforListCode_Value>(
    ExampleUseCodesforListCode_Value_descriptor(), name, value);
}
enum ListModeCode_Value {
  ListModeCode_Value_INVALID_UNINITIALIZED = 0,
  ListModeCode_Value_WORKING = 1,
  ListModeCode_Value_SNAPSHOT = 2,
  ListModeCode_Value_CHANGES = 3,
  ListModeCode_Value_ListModeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ListModeCode_Value_ListModeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ListModeCode_Value_IsValid(int value);
const ListModeCode_Value ListModeCode_Value_Value_MIN = ListModeCode_Value_INVALID_UNINITIALIZED;
const ListModeCode_Value ListModeCode_Value_Value_MAX = ListModeCode_Value_CHANGES;
const int ListModeCode_Value_Value_ARRAYSIZE = ListModeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ListModeCode_Value_descriptor();
inline const ::std::string& ListModeCode_Value_Name(ListModeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ListModeCode_Value_descriptor(), value);
}
inline bool ListModeCode_Value_Parse(
    const ::std::string& name, ListModeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ListModeCode_Value>(
    ListModeCode_Value_descriptor(), name, value);
}
enum ListOrderCodesCode_Value {
  ListOrderCodesCode_Value_INVALID_UNINITIALIZED = 0,
  ListOrderCodesCode_Value_USER = 1,
  ListOrderCodesCode_Value_SYSTEM = 2,
  ListOrderCodesCode_Value_EVENT_DATE = 3,
  ListOrderCodesCode_Value_ENTRY_DATE = 4,
  ListOrderCodesCode_Value_PRIORITY = 5,
  ListOrderCodesCode_Value_ALPHABETIC = 6,
  ListOrderCodesCode_Value_CATEGORY = 7,
  ListOrderCodesCode_Value_PATIENT = 8,
  ListOrderCodesCode_Value_ListOrderCodesCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ListOrderCodesCode_Value_ListOrderCodesCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ListOrderCodesCode_Value_IsValid(int value);
const ListOrderCodesCode_Value ListOrderCodesCode_Value_Value_MIN = ListOrderCodesCode_Value_INVALID_UNINITIALIZED;
const ListOrderCodesCode_Value ListOrderCodesCode_Value_Value_MAX = ListOrderCodesCode_Value_PATIENT;
const int ListOrderCodesCode_Value_Value_ARRAYSIZE = ListOrderCodesCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ListOrderCodesCode_Value_descriptor();
inline const ::std::string& ListOrderCodesCode_Value_Name(ListOrderCodesCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ListOrderCodesCode_Value_descriptor(), value);
}
inline bool ListOrderCodesCode_Value_Parse(
    const ::std::string& name, ListOrderCodesCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ListOrderCodesCode_Value>(
    ListOrderCodesCode_Value_descriptor(), name, value);
}
enum ListStatusCode_Value {
  ListStatusCode_Value_INVALID_UNINITIALIZED = 0,
  ListStatusCode_Value_CURRENT = 1,
  ListStatusCode_Value_RETIRED = 2,
  ListStatusCode_Value_ENTERED_IN_ERROR = 3,
  ListStatusCode_Value_ListStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ListStatusCode_Value_ListStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ListStatusCode_Value_IsValid(int value);
const ListStatusCode_Value ListStatusCode_Value_Value_MIN = ListStatusCode_Value_INVALID_UNINITIALIZED;
const ListStatusCode_Value ListStatusCode_Value_Value_MAX = ListStatusCode_Value_ENTERED_IN_ERROR;
const int ListStatusCode_Value_Value_ARRAYSIZE = ListStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ListStatusCode_Value_descriptor();
inline const ::std::string& ListStatusCode_Value_Name(ListStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ListStatusCode_Value_descriptor(), value);
}
inline bool ListStatusCode_Value_Parse(
    const ::std::string& name, ListStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ListStatusCode_Value>(
    ListStatusCode_Value_descriptor(), name, value);
}
enum LocationModeCode_Value {
  LocationModeCode_Value_INVALID_UNINITIALIZED = 0,
  LocationModeCode_Value_INSTANCE = 1,
  LocationModeCode_Value_KIND = 2,
  LocationModeCode_Value_LocationModeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LocationModeCode_Value_LocationModeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LocationModeCode_Value_IsValid(int value);
const LocationModeCode_Value LocationModeCode_Value_Value_MIN = LocationModeCode_Value_INVALID_UNINITIALIZED;
const LocationModeCode_Value LocationModeCode_Value_Value_MAX = LocationModeCode_Value_KIND;
const int LocationModeCode_Value_Value_ARRAYSIZE = LocationModeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* LocationModeCode_Value_descriptor();
inline const ::std::string& LocationModeCode_Value_Name(LocationModeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    LocationModeCode_Value_descriptor(), value);
}
inline bool LocationModeCode_Value_Parse(
    const ::std::string& name, LocationModeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LocationModeCode_Value>(
    LocationModeCode_Value_descriptor(), name, value);
}
enum LocationTypeCode_Value {
  LocationTypeCode_Value_INVALID_UNINITIALIZED = 0,
  LocationTypeCode_Value_SI = 1,
  LocationTypeCode_Value_BU = 2,
  LocationTypeCode_Value_WI = 3,
  LocationTypeCode_Value_WA = 4,
  LocationTypeCode_Value_LVL = 5,
  LocationTypeCode_Value_CO = 6,
  LocationTypeCode_Value_RO = 7,
  LocationTypeCode_Value_BD = 8,
  LocationTypeCode_Value_VE = 9,
  LocationTypeCode_Value_HO = 10,
  LocationTypeCode_Value_CA = 11,
  LocationTypeCode_Value_RD = 12,
  LocationTypeCode_Value_AREA = 13,
  LocationTypeCode_Value_JDN = 14,
  LocationTypeCode_Value_LocationTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LocationTypeCode_Value_LocationTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LocationTypeCode_Value_IsValid(int value);
const LocationTypeCode_Value LocationTypeCode_Value_Value_MIN = LocationTypeCode_Value_INVALID_UNINITIALIZED;
const LocationTypeCode_Value LocationTypeCode_Value_Value_MAX = LocationTypeCode_Value_JDN;
const int LocationTypeCode_Value_Value_ARRAYSIZE = LocationTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* LocationTypeCode_Value_descriptor();
inline const ::std::string& LocationTypeCode_Value_Name(LocationTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    LocationTypeCode_Value_descriptor(), value);
}
inline bool LocationTypeCode_Value_Parse(
    const ::std::string& name, LocationTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LocationTypeCode_Value>(
    LocationTypeCode_Value_descriptor(), name, value);
}
enum LocationStatusCode_Value {
  LocationStatusCode_Value_INVALID_UNINITIALIZED = 0,
  LocationStatusCode_Value_ACTIVE = 1,
  LocationStatusCode_Value_SUSPENDED = 2,
  LocationStatusCode_Value_INACTIVE = 3,
  LocationStatusCode_Value_LocationStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LocationStatusCode_Value_LocationStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LocationStatusCode_Value_IsValid(int value);
const LocationStatusCode_Value LocationStatusCode_Value_Value_MIN = LocationStatusCode_Value_INVALID_UNINITIALIZED;
const LocationStatusCode_Value LocationStatusCode_Value_Value_MAX = LocationStatusCode_Value_INACTIVE;
const int LocationStatusCode_Value_Value_ARRAYSIZE = LocationStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* LocationStatusCode_Value_descriptor();
inline const ::std::string& LocationStatusCode_Value_Name(LocationStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    LocationStatusCode_Value_descriptor(), value);
}
inline bool LocationStatusCode_Value_Parse(
    const ::std::string& name, LocationStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LocationStatusCode_Value>(
    LocationStatusCode_Value_descriptor(), name, value);
}
enum ProbabilityDistributionTypeCode_Value {
  ProbabilityDistributionTypeCode_Value_INVALID_UNINITIALIZED = 0,
  ProbabilityDistributionTypeCode_Value_B = 1,
  ProbabilityDistributionTypeCode_Value_E = 2,
  ProbabilityDistributionTypeCode_Value_F = 3,
  ProbabilityDistributionTypeCode_Value_G = 4,
  ProbabilityDistributionTypeCode_Value_LN = 5,
  ProbabilityDistributionTypeCode_Value_N = 6,
  ProbabilityDistributionTypeCode_Value_T = 7,
  ProbabilityDistributionTypeCode_Value_U = 8,
  ProbabilityDistributionTypeCode_Value_X2 = 9,
  ProbabilityDistributionTypeCode_Value_ProbabilityDistributionTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ProbabilityDistributionTypeCode_Value_ProbabilityDistributionTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ProbabilityDistributionTypeCode_Value_IsValid(int value);
const ProbabilityDistributionTypeCode_Value ProbabilityDistributionTypeCode_Value_Value_MIN = ProbabilityDistributionTypeCode_Value_INVALID_UNINITIALIZED;
const ProbabilityDistributionTypeCode_Value ProbabilityDistributionTypeCode_Value_Value_MAX = ProbabilityDistributionTypeCode_Value_X2;
const int ProbabilityDistributionTypeCode_Value_Value_ARRAYSIZE = ProbabilityDistributionTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProbabilityDistributionTypeCode_Value_descriptor();
inline const ::std::string& ProbabilityDistributionTypeCode_Value_Name(ProbabilityDistributionTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProbabilityDistributionTypeCode_Value_descriptor(), value);
}
inline bool ProbabilityDistributionTypeCode_Value_Parse(
    const ::std::string& name, ProbabilityDistributionTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProbabilityDistributionTypeCode_Value>(
    ProbabilityDistributionTypeCode_Value_descriptor(), name, value);
}
enum StructureMapContextTypeCode_Value {
  StructureMapContextTypeCode_Value_INVALID_UNINITIALIZED = 0,
  StructureMapContextTypeCode_Value_TYPE = 1,
  StructureMapContextTypeCode_Value_VARIABLE = 2,
  StructureMapContextTypeCode_Value_StructureMapContextTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  StructureMapContextTypeCode_Value_StructureMapContextTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool StructureMapContextTypeCode_Value_IsValid(int value);
const StructureMapContextTypeCode_Value StructureMapContextTypeCode_Value_Value_MIN = StructureMapContextTypeCode_Value_INVALID_UNINITIALIZED;
const StructureMapContextTypeCode_Value StructureMapContextTypeCode_Value_Value_MAX = StructureMapContextTypeCode_Value_VARIABLE;
const int StructureMapContextTypeCode_Value_Value_ARRAYSIZE = StructureMapContextTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* StructureMapContextTypeCode_Value_descriptor();
inline const ::std::string& StructureMapContextTypeCode_Value_Name(StructureMapContextTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    StructureMapContextTypeCode_Value_descriptor(), value);
}
inline bool StructureMapContextTypeCode_Value_Parse(
    const ::std::string& name, StructureMapContextTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StructureMapContextTypeCode_Value>(
    StructureMapContextTypeCode_Value_descriptor(), name, value);
}
enum StructureMapGroupTypeModeCode_Value {
  StructureMapGroupTypeModeCode_Value_INVALID_UNINITIALIZED = 0,
  StructureMapGroupTypeModeCode_Value_NONE = 1,
  StructureMapGroupTypeModeCode_Value_TYPES = 2,
  StructureMapGroupTypeModeCode_Value_TYPE_AND_TYPES = 3,
  StructureMapGroupTypeModeCode_Value_StructureMapGroupTypeModeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  StructureMapGroupTypeModeCode_Value_StructureMapGroupTypeModeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool StructureMapGroupTypeModeCode_Value_IsValid(int value);
const StructureMapGroupTypeModeCode_Value StructureMapGroupTypeModeCode_Value_Value_MIN = StructureMapGroupTypeModeCode_Value_INVALID_UNINITIALIZED;
const StructureMapGroupTypeModeCode_Value StructureMapGroupTypeModeCode_Value_Value_MAX = StructureMapGroupTypeModeCode_Value_TYPE_AND_TYPES;
const int StructureMapGroupTypeModeCode_Value_Value_ARRAYSIZE = StructureMapGroupTypeModeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* StructureMapGroupTypeModeCode_Value_descriptor();
inline const ::std::string& StructureMapGroupTypeModeCode_Value_Name(StructureMapGroupTypeModeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    StructureMapGroupTypeModeCode_Value_descriptor(), value);
}
inline bool StructureMapGroupTypeModeCode_Value_Parse(
    const ::std::string& name, StructureMapGroupTypeModeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StructureMapGroupTypeModeCode_Value>(
    StructureMapGroupTypeModeCode_Value_descriptor(), name, value);
}
enum StructureMapInputModeCode_Value {
  StructureMapInputModeCode_Value_INVALID_UNINITIALIZED = 0,
  StructureMapInputModeCode_Value_SOURCE = 1,
  StructureMapInputModeCode_Value_TARGET = 2,
  StructureMapInputModeCode_Value_StructureMapInputModeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  StructureMapInputModeCode_Value_StructureMapInputModeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool StructureMapInputModeCode_Value_IsValid(int value);
const StructureMapInputModeCode_Value StructureMapInputModeCode_Value_Value_MIN = StructureMapInputModeCode_Value_INVALID_UNINITIALIZED;
const StructureMapInputModeCode_Value StructureMapInputModeCode_Value_Value_MAX = StructureMapInputModeCode_Value_TARGET;
const int StructureMapInputModeCode_Value_Value_ARRAYSIZE = StructureMapInputModeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* StructureMapInputModeCode_Value_descriptor();
inline const ::std::string& StructureMapInputModeCode_Value_Name(StructureMapInputModeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    StructureMapInputModeCode_Value_descriptor(), value);
}
inline bool StructureMapInputModeCode_Value_Parse(
    const ::std::string& name, StructureMapInputModeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StructureMapInputModeCode_Value>(
    StructureMapInputModeCode_Value_descriptor(), name, value);
}
enum StructureMapModelModeCode_Value {
  StructureMapModelModeCode_Value_INVALID_UNINITIALIZED = 0,
  StructureMapModelModeCode_Value_SOURCE = 1,
  StructureMapModelModeCode_Value_QUERIED = 2,
  StructureMapModelModeCode_Value_TARGET = 3,
  StructureMapModelModeCode_Value_PRODUCED = 4,
  StructureMapModelModeCode_Value_StructureMapModelModeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  StructureMapModelModeCode_Value_StructureMapModelModeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool StructureMapModelModeCode_Value_IsValid(int value);
const StructureMapModelModeCode_Value StructureMapModelModeCode_Value_Value_MIN = StructureMapModelModeCode_Value_INVALID_UNINITIALIZED;
const StructureMapModelModeCode_Value StructureMapModelModeCode_Value_Value_MAX = StructureMapModelModeCode_Value_PRODUCED;
const int StructureMapModelModeCode_Value_Value_ARRAYSIZE = StructureMapModelModeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* StructureMapModelModeCode_Value_descriptor();
inline const ::std::string& StructureMapModelModeCode_Value_Name(StructureMapModelModeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    StructureMapModelModeCode_Value_descriptor(), value);
}
inline bool StructureMapModelModeCode_Value_Parse(
    const ::std::string& name, StructureMapModelModeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StructureMapModelModeCode_Value>(
    StructureMapModelModeCode_Value_descriptor(), name, value);
}
enum StructureMapSourceListModeCode_Value {
  StructureMapSourceListModeCode_Value_INVALID_UNINITIALIZED = 0,
  StructureMapSourceListModeCode_Value_FIRST = 1,
  StructureMapSourceListModeCode_Value_NOT_FIRST = 2,
  StructureMapSourceListModeCode_Value_LAST = 3,
  StructureMapSourceListModeCode_Value_NOT_LAST = 4,
  StructureMapSourceListModeCode_Value_ONLY_ONE = 5,
  StructureMapSourceListModeCode_Value_StructureMapSourceListModeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  StructureMapSourceListModeCode_Value_StructureMapSourceListModeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool StructureMapSourceListModeCode_Value_IsValid(int value);
const StructureMapSourceListModeCode_Value StructureMapSourceListModeCode_Value_Value_MIN = StructureMapSourceListModeCode_Value_INVALID_UNINITIALIZED;
const StructureMapSourceListModeCode_Value StructureMapSourceListModeCode_Value_Value_MAX = StructureMapSourceListModeCode_Value_ONLY_ONE;
const int StructureMapSourceListModeCode_Value_Value_ARRAYSIZE = StructureMapSourceListModeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* StructureMapSourceListModeCode_Value_descriptor();
inline const ::std::string& StructureMapSourceListModeCode_Value_Name(StructureMapSourceListModeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    StructureMapSourceListModeCode_Value_descriptor(), value);
}
inline bool StructureMapSourceListModeCode_Value_Parse(
    const ::std::string& name, StructureMapSourceListModeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StructureMapSourceListModeCode_Value>(
    StructureMapSourceListModeCode_Value_descriptor(), name, value);
}
enum StructureMapTargetListModeCode_Value {
  StructureMapTargetListModeCode_Value_INVALID_UNINITIALIZED = 0,
  StructureMapTargetListModeCode_Value_FIRST = 1,
  StructureMapTargetListModeCode_Value_SHARE = 2,
  StructureMapTargetListModeCode_Value_LAST = 3,
  StructureMapTargetListModeCode_Value_COLLATE = 4,
  StructureMapTargetListModeCode_Value_StructureMapTargetListModeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  StructureMapTargetListModeCode_Value_StructureMapTargetListModeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool StructureMapTargetListModeCode_Value_IsValid(int value);
const StructureMapTargetListModeCode_Value StructureMapTargetListModeCode_Value_Value_MIN = StructureMapTargetListModeCode_Value_INVALID_UNINITIALIZED;
const StructureMapTargetListModeCode_Value StructureMapTargetListModeCode_Value_Value_MAX = StructureMapTargetListModeCode_Value_COLLATE;
const int StructureMapTargetListModeCode_Value_Value_ARRAYSIZE = StructureMapTargetListModeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* StructureMapTargetListModeCode_Value_descriptor();
inline const ::std::string& StructureMapTargetListModeCode_Value_Name(StructureMapTargetListModeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    StructureMapTargetListModeCode_Value_descriptor(), value);
}
inline bool StructureMapTargetListModeCode_Value_Parse(
    const ::std::string& name, StructureMapTargetListModeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StructureMapTargetListModeCode_Value>(
    StructureMapTargetListModeCode_Value_descriptor(), name, value);
}
enum StructureMapTransformCode_Value {
  StructureMapTransformCode_Value_INVALID_UNINITIALIZED = 0,
  StructureMapTransformCode_Value_CREATE = 1,
  StructureMapTransformCode_Value_COPY = 2,
  StructureMapTransformCode_Value_TRUNCATE = 3,
  StructureMapTransformCode_Value_ESCAPE = 4,
  StructureMapTransformCode_Value_CAST = 5,
  StructureMapTransformCode_Value_APPEND = 6,
  StructureMapTransformCode_Value_TRANSLATE = 7,
  StructureMapTransformCode_Value_REFERENCE = 8,
  StructureMapTransformCode_Value_DATE_OP = 9,
  StructureMapTransformCode_Value_UUID = 10,
  StructureMapTransformCode_Value_POINTER = 11,
  StructureMapTransformCode_Value_EVALUATE = 12,
  StructureMapTransformCode_Value_CC = 13,
  StructureMapTransformCode_Value_C = 14,
  StructureMapTransformCode_Value_QTY = 15,
  StructureMapTransformCode_Value_ID = 16,
  StructureMapTransformCode_Value_CP = 17,
  StructureMapTransformCode_Value_StructureMapTransformCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  StructureMapTransformCode_Value_StructureMapTransformCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool StructureMapTransformCode_Value_IsValid(int value);
const StructureMapTransformCode_Value StructureMapTransformCode_Value_Value_MIN = StructureMapTransformCode_Value_INVALID_UNINITIALIZED;
const StructureMapTransformCode_Value StructureMapTransformCode_Value_Value_MAX = StructureMapTransformCode_Value_CP;
const int StructureMapTransformCode_Value_Value_ARRAYSIZE = StructureMapTransformCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* StructureMapTransformCode_Value_descriptor();
inline const ::std::string& StructureMapTransformCode_Value_Name(StructureMapTransformCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    StructureMapTransformCode_Value_descriptor(), value);
}
inline bool StructureMapTransformCode_Value_Parse(
    const ::std::string& name, StructureMapTransformCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StructureMapTransformCode_Value>(
    StructureMapTransformCode_Value_descriptor(), name, value);
}
enum MatchGradeCode_Value {
  MatchGradeCode_Value_INVALID_UNINITIALIZED = 0,
  MatchGradeCode_Value_CERTAIN = 1,
  MatchGradeCode_Value_PROBABLE = 2,
  MatchGradeCode_Value_POSSIBLE = 3,
  MatchGradeCode_Value_CERTAINLY_NOT = 4,
  MatchGradeCode_Value_MatchGradeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MatchGradeCode_Value_MatchGradeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MatchGradeCode_Value_IsValid(int value);
const MatchGradeCode_Value MatchGradeCode_Value_Value_MIN = MatchGradeCode_Value_INVALID_UNINITIALIZED;
const MatchGradeCode_Value MatchGradeCode_Value_Value_MAX = MatchGradeCode_Value_CERTAINLY_NOT;
const int MatchGradeCode_Value_Value_ARRAYSIZE = MatchGradeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* MatchGradeCode_Value_descriptor();
inline const ::std::string& MatchGradeCode_Value_Name(MatchGradeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    MatchGradeCode_Value_descriptor(), value);
}
inline bool MatchGradeCode_Value_Parse(
    const ::std::string& name, MatchGradeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MatchGradeCode_Value>(
    MatchGradeCode_Value_descriptor(), name, value);
}
enum MeasureDataUsageCode_Value {
  MeasureDataUsageCode_Value_INVALID_UNINITIALIZED = 0,
  MeasureDataUsageCode_Value_SUPPLEMENTAL_DATA = 1,
  MeasureDataUsageCode_Value_RISK_ADJUSTMENT_FACTOR = 2,
  MeasureDataUsageCode_Value_MeasureDataUsageCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MeasureDataUsageCode_Value_MeasureDataUsageCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MeasureDataUsageCode_Value_IsValid(int value);
const MeasureDataUsageCode_Value MeasureDataUsageCode_Value_Value_MIN = MeasureDataUsageCode_Value_INVALID_UNINITIALIZED;
const MeasureDataUsageCode_Value MeasureDataUsageCode_Value_Value_MAX = MeasureDataUsageCode_Value_RISK_ADJUSTMENT_FACTOR;
const int MeasureDataUsageCode_Value_Value_ARRAYSIZE = MeasureDataUsageCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* MeasureDataUsageCode_Value_descriptor();
inline const ::std::string& MeasureDataUsageCode_Value_Name(MeasureDataUsageCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    MeasureDataUsageCode_Value_descriptor(), value);
}
inline bool MeasureDataUsageCode_Value_Parse(
    const ::std::string& name, MeasureDataUsageCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MeasureDataUsageCode_Value>(
    MeasureDataUsageCode_Value_descriptor(), name, value);
}
enum MeasmntPrincipleCode_Value {
  MeasmntPrincipleCode_Value_INVALID_UNINITIALIZED = 0,
  MeasmntPrincipleCode_Value_OTHER = 1,
  MeasmntPrincipleCode_Value_CHEMICAL = 2,
  MeasmntPrincipleCode_Value_ELECTRICAL = 3,
  MeasmntPrincipleCode_Value_IMPEDANCE = 4,
  MeasmntPrincipleCode_Value_NUCLEAR = 5,
  MeasmntPrincipleCode_Value_OPTICAL = 6,
  MeasmntPrincipleCode_Value_THERMAL = 7,
  MeasmntPrincipleCode_Value_BIOLOGICAL = 8,
  MeasmntPrincipleCode_Value_MECHANICAL = 9,
  MeasmntPrincipleCode_Value_ACOUSTICAL = 10,
  MeasmntPrincipleCode_Value_MANUAL = 11,
  MeasmntPrincipleCode_Value_MeasmntPrincipleCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MeasmntPrincipleCode_Value_MeasmntPrincipleCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MeasmntPrincipleCode_Value_IsValid(int value);
const MeasmntPrincipleCode_Value MeasmntPrincipleCode_Value_Value_MIN = MeasmntPrincipleCode_Value_INVALID_UNINITIALIZED;
const MeasmntPrincipleCode_Value MeasmntPrincipleCode_Value_Value_MAX = MeasmntPrincipleCode_Value_MANUAL;
const int MeasmntPrincipleCode_Value_Value_ARRAYSIZE = MeasmntPrincipleCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* MeasmntPrincipleCode_Value_descriptor();
inline const ::std::string& MeasmntPrincipleCode_Value_Name(MeasmntPrincipleCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    MeasmntPrincipleCode_Value_descriptor(), value);
}
inline bool MeasmntPrincipleCode_Value_Parse(
    const ::std::string& name, MeasmntPrincipleCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MeasmntPrincipleCode_Value>(
    MeasmntPrincipleCode_Value_descriptor(), name, value);
}
enum MeasurePopulationTypeCode_Value {
  MeasurePopulationTypeCode_Value_INVALID_UNINITIALIZED = 0,
  MeasurePopulationTypeCode_Value_INITIAL_POPULATION = 1,
  MeasurePopulationTypeCode_Value_NUMERATOR = 2,
  MeasurePopulationTypeCode_Value_NUMERATOR_EXCLUSION = 3,
  MeasurePopulationTypeCode_Value_DENOMINATOR = 4,
  MeasurePopulationTypeCode_Value_DENOMINATOR_EXCLUSION = 5,
  MeasurePopulationTypeCode_Value_DENOMINATOR_EXCEPTION = 6,
  MeasurePopulationTypeCode_Value_MEASURE_POPULATION = 7,
  MeasurePopulationTypeCode_Value_MEASURE_POPULATION_EXCLUSION = 8,
  MeasurePopulationTypeCode_Value_MEASURE_OBSERVATION = 9,
  MeasurePopulationTypeCode_Value_MeasurePopulationTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MeasurePopulationTypeCode_Value_MeasurePopulationTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MeasurePopulationTypeCode_Value_IsValid(int value);
const MeasurePopulationTypeCode_Value MeasurePopulationTypeCode_Value_Value_MIN = MeasurePopulationTypeCode_Value_INVALID_UNINITIALIZED;
const MeasurePopulationTypeCode_Value MeasurePopulationTypeCode_Value_Value_MAX = MeasurePopulationTypeCode_Value_MEASURE_OBSERVATION;
const int MeasurePopulationTypeCode_Value_Value_ARRAYSIZE = MeasurePopulationTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* MeasurePopulationTypeCode_Value_descriptor();
inline const ::std::string& MeasurePopulationTypeCode_Value_Name(MeasurePopulationTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    MeasurePopulationTypeCode_Value_descriptor(), value);
}
inline bool MeasurePopulationTypeCode_Value_Parse(
    const ::std::string& name, MeasurePopulationTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MeasurePopulationTypeCode_Value>(
    MeasurePopulationTypeCode_Value_descriptor(), name, value);
}
enum MeasureReportStatusCode_Value {
  MeasureReportStatusCode_Value_INVALID_UNINITIALIZED = 0,
  MeasureReportStatusCode_Value_COMPLETE = 1,
  MeasureReportStatusCode_Value_PENDING = 2,
  MeasureReportStatusCode_Value_ERROR = 3,
  MeasureReportStatusCode_Value_MeasureReportStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MeasureReportStatusCode_Value_MeasureReportStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MeasureReportStatusCode_Value_IsValid(int value);
const MeasureReportStatusCode_Value MeasureReportStatusCode_Value_Value_MIN = MeasureReportStatusCode_Value_INVALID_UNINITIALIZED;
const MeasureReportStatusCode_Value MeasureReportStatusCode_Value_Value_MAX = MeasureReportStatusCode_Value_ERROR;
const int MeasureReportStatusCode_Value_Value_ARRAYSIZE = MeasureReportStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* MeasureReportStatusCode_Value_descriptor();
inline const ::std::string& MeasureReportStatusCode_Value_Name(MeasureReportStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    MeasureReportStatusCode_Value_descriptor(), value);
}
inline bool MeasureReportStatusCode_Value_Parse(
    const ::std::string& name, MeasureReportStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MeasureReportStatusCode_Value>(
    MeasureReportStatusCode_Value_descriptor(), name, value);
}
enum MeasureReportTypeCode_Value {
  MeasureReportTypeCode_Value_INVALID_UNINITIALIZED = 0,
  MeasureReportTypeCode_Value_INDIVIDUAL = 1,
  MeasureReportTypeCode_Value_PATIENT_LIST = 2,
  MeasureReportTypeCode_Value_SUMMARY = 3,
  MeasureReportTypeCode_Value_MeasureReportTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MeasureReportTypeCode_Value_MeasureReportTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MeasureReportTypeCode_Value_IsValid(int value);
const MeasureReportTypeCode_Value MeasureReportTypeCode_Value_Value_MIN = MeasureReportTypeCode_Value_INVALID_UNINITIALIZED;
const MeasureReportTypeCode_Value MeasureReportTypeCode_Value_Value_MAX = MeasureReportTypeCode_Value_SUMMARY;
const int MeasureReportTypeCode_Value_Value_ARRAYSIZE = MeasureReportTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* MeasureReportTypeCode_Value_descriptor();
inline const ::std::string& MeasureReportTypeCode_Value_Name(MeasureReportTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    MeasureReportTypeCode_Value_descriptor(), value);
}
inline bool MeasureReportTypeCode_Value_Parse(
    const ::std::string& name, MeasureReportTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MeasureReportTypeCode_Value>(
    MeasureReportTypeCode_Value_descriptor(), name, value);
}
enum MeasureScoringCode_Value {
  MeasureScoringCode_Value_INVALID_UNINITIALIZED = 0,
  MeasureScoringCode_Value_PROPORTION = 1,
  MeasureScoringCode_Value_RATIO = 2,
  MeasureScoringCode_Value_CONTINUOUS_VARIABLE = 3,
  MeasureScoringCode_Value_COHORT = 4,
  MeasureScoringCode_Value_MeasureScoringCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MeasureScoringCode_Value_MeasureScoringCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MeasureScoringCode_Value_IsValid(int value);
const MeasureScoringCode_Value MeasureScoringCode_Value_Value_MIN = MeasureScoringCode_Value_INVALID_UNINITIALIZED;
const MeasureScoringCode_Value MeasureScoringCode_Value_Value_MAX = MeasureScoringCode_Value_COHORT;
const int MeasureScoringCode_Value_Value_ARRAYSIZE = MeasureScoringCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* MeasureScoringCode_Value_descriptor();
inline const ::std::string& MeasureScoringCode_Value_Name(MeasureScoringCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    MeasureScoringCode_Value_descriptor(), value);
}
inline bool MeasureScoringCode_Value_Parse(
    const ::std::string& name, MeasureScoringCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MeasureScoringCode_Value>(
    MeasureScoringCode_Value_descriptor(), name, value);
}
enum MeasureTypeCode_Value {
  MeasureTypeCode_Value_INVALID_UNINITIALIZED = 0,
  MeasureTypeCode_Value_PROCESS = 1,
  MeasureTypeCode_Value_OUTCOME = 2,
  MeasureTypeCode_Value_STRUCTURE = 3,
  MeasureTypeCode_Value_PATIENT_REPORTED_OUTCOME = 4,
  MeasureTypeCode_Value_COMPOSITE = 5,
  MeasureTypeCode_Value_MeasureTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MeasureTypeCode_Value_MeasureTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MeasureTypeCode_Value_IsValid(int value);
const MeasureTypeCode_Value MeasureTypeCode_Value_Value_MIN = MeasureTypeCode_Value_INVALID_UNINITIALIZED;
const MeasureTypeCode_Value MeasureTypeCode_Value_Value_MAX = MeasureTypeCode_Value_COMPOSITE;
const int MeasureTypeCode_Value_Value_ARRAYSIZE = MeasureTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* MeasureTypeCode_Value_descriptor();
inline const ::std::string& MeasureTypeCode_Value_Name(MeasureTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    MeasureTypeCode_Value_descriptor(), value);
}
inline bool MeasureTypeCode_Value_Parse(
    const ::std::string& name, MeasureTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MeasureTypeCode_Value>(
    MeasureTypeCode_Value_descriptor(), name, value);
}
enum MedicationAdministrationCategoryCode_Value {
  MedicationAdministrationCategoryCode_Value_INVALID_UNINITIALIZED = 0,
  MedicationAdministrationCategoryCode_Value_INPATIENT = 1,
  MedicationAdministrationCategoryCode_Value_OUTPATIENT = 2,
  MedicationAdministrationCategoryCode_Value_COMMUNITY = 3,
  MedicationAdministrationCategoryCode_Value_MedicationAdministrationCategoryCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MedicationAdministrationCategoryCode_Value_MedicationAdministrationCategoryCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MedicationAdministrationCategoryCode_Value_IsValid(int value);
const MedicationAdministrationCategoryCode_Value MedicationAdministrationCategoryCode_Value_Value_MIN = MedicationAdministrationCategoryCode_Value_INVALID_UNINITIALIZED;
const MedicationAdministrationCategoryCode_Value MedicationAdministrationCategoryCode_Value_Value_MAX = MedicationAdministrationCategoryCode_Value_COMMUNITY;
const int MedicationAdministrationCategoryCode_Value_Value_ARRAYSIZE = MedicationAdministrationCategoryCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* MedicationAdministrationCategoryCode_Value_descriptor();
inline const ::std::string& MedicationAdministrationCategoryCode_Value_Name(MedicationAdministrationCategoryCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    MedicationAdministrationCategoryCode_Value_descriptor(), value);
}
inline bool MedicationAdministrationCategoryCode_Value_Parse(
    const ::std::string& name, MedicationAdministrationCategoryCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MedicationAdministrationCategoryCode_Value>(
    MedicationAdministrationCategoryCode_Value_descriptor(), name, value);
}
enum MedicationAdministrationStatusCode_Value {
  MedicationAdministrationStatusCode_Value_INVALID_UNINITIALIZED = 0,
  MedicationAdministrationStatusCode_Value_IN_PROGRESS = 1,
  MedicationAdministrationStatusCode_Value_ON_HOLD = 2,
  MedicationAdministrationStatusCode_Value_COMPLETED = 3,
  MedicationAdministrationStatusCode_Value_ENTERED_IN_ERROR = 4,
  MedicationAdministrationStatusCode_Value_STOPPED = 5,
  MedicationAdministrationStatusCode_Value_UNKNOWN = 6,
  MedicationAdministrationStatusCode_Value_MedicationAdministrationStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MedicationAdministrationStatusCode_Value_MedicationAdministrationStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MedicationAdministrationStatusCode_Value_IsValid(int value);
const MedicationAdministrationStatusCode_Value MedicationAdministrationStatusCode_Value_Value_MIN = MedicationAdministrationStatusCode_Value_INVALID_UNINITIALIZED;
const MedicationAdministrationStatusCode_Value MedicationAdministrationStatusCode_Value_Value_MAX = MedicationAdministrationStatusCode_Value_UNKNOWN;
const int MedicationAdministrationStatusCode_Value_Value_ARRAYSIZE = MedicationAdministrationStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* MedicationAdministrationStatusCode_Value_descriptor();
inline const ::std::string& MedicationAdministrationStatusCode_Value_Name(MedicationAdministrationStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    MedicationAdministrationStatusCode_Value_descriptor(), value);
}
inline bool MedicationAdministrationStatusCode_Value_Parse(
    const ::std::string& name, MedicationAdministrationStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MedicationAdministrationStatusCode_Value>(
    MedicationAdministrationStatusCode_Value_descriptor(), name, value);
}
enum MedicationDispenseCategoryCode_Value {
  MedicationDispenseCategoryCode_Value_INVALID_UNINITIALIZED = 0,
  MedicationDispenseCategoryCode_Value_INPATIENT = 1,
  MedicationDispenseCategoryCode_Value_OUTPATIENT = 2,
  MedicationDispenseCategoryCode_Value_COMMUNITY = 3,
  MedicationDispenseCategoryCode_Value_MedicationDispenseCategoryCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MedicationDispenseCategoryCode_Value_MedicationDispenseCategoryCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MedicationDispenseCategoryCode_Value_IsValid(int value);
const MedicationDispenseCategoryCode_Value MedicationDispenseCategoryCode_Value_Value_MIN = MedicationDispenseCategoryCode_Value_INVALID_UNINITIALIZED;
const MedicationDispenseCategoryCode_Value MedicationDispenseCategoryCode_Value_Value_MAX = MedicationDispenseCategoryCode_Value_COMMUNITY;
const int MedicationDispenseCategoryCode_Value_Value_ARRAYSIZE = MedicationDispenseCategoryCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* MedicationDispenseCategoryCode_Value_descriptor();
inline const ::std::string& MedicationDispenseCategoryCode_Value_Name(MedicationDispenseCategoryCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    MedicationDispenseCategoryCode_Value_descriptor(), value);
}
inline bool MedicationDispenseCategoryCode_Value_Parse(
    const ::std::string& name, MedicationDispenseCategoryCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MedicationDispenseCategoryCode_Value>(
    MedicationDispenseCategoryCode_Value_descriptor(), name, value);
}
enum MedicationDispenseStatusCode_Value {
  MedicationDispenseStatusCode_Value_INVALID_UNINITIALIZED = 0,
  MedicationDispenseStatusCode_Value_PREPARATION = 1,
  MedicationDispenseStatusCode_Value_IN_PROGRESS = 2,
  MedicationDispenseStatusCode_Value_ON_HOLD = 3,
  MedicationDispenseStatusCode_Value_COMPLETED = 4,
  MedicationDispenseStatusCode_Value_ENTERED_IN_ERROR = 5,
  MedicationDispenseStatusCode_Value_STOPPED = 6,
  MedicationDispenseStatusCode_Value_MedicationDispenseStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MedicationDispenseStatusCode_Value_MedicationDispenseStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MedicationDispenseStatusCode_Value_IsValid(int value);
const MedicationDispenseStatusCode_Value MedicationDispenseStatusCode_Value_Value_MIN = MedicationDispenseStatusCode_Value_INVALID_UNINITIALIZED;
const MedicationDispenseStatusCode_Value MedicationDispenseStatusCode_Value_Value_MAX = MedicationDispenseStatusCode_Value_STOPPED;
const int MedicationDispenseStatusCode_Value_Value_ARRAYSIZE = MedicationDispenseStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* MedicationDispenseStatusCode_Value_descriptor();
inline const ::std::string& MedicationDispenseStatusCode_Value_Name(MedicationDispenseStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    MedicationDispenseStatusCode_Value_descriptor(), value);
}
inline bool MedicationDispenseStatusCode_Value_Parse(
    const ::std::string& name, MedicationDispenseStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MedicationDispenseStatusCode_Value>(
    MedicationDispenseStatusCode_Value_descriptor(), name, value);
}
enum MedicationContainerCode_Value {
  MedicationContainerCode_Value_INVALID_UNINITIALIZED = 0,
  MedicationContainerCode_Value_AMPOULE = 1,
  MedicationContainerCode_Value_BOTTLE = 2,
  MedicationContainerCode_Value_BOX = 3,
  MedicationContainerCode_Value_CARTRIDGE = 4,
  MedicationContainerCode_Value_CONTAINER = 5,
  MedicationContainerCode_Value_TUBE = 6,
  MedicationContainerCode_Value_UNITDOSE = 7,
  MedicationContainerCode_Value_VIAL = 8,
  MedicationContainerCode_Value_MedicationContainerCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MedicationContainerCode_Value_MedicationContainerCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MedicationContainerCode_Value_IsValid(int value);
const MedicationContainerCode_Value MedicationContainerCode_Value_Value_MIN = MedicationContainerCode_Value_INVALID_UNINITIALIZED;
const MedicationContainerCode_Value MedicationContainerCode_Value_Value_MAX = MedicationContainerCode_Value_VIAL;
const int MedicationContainerCode_Value_Value_ARRAYSIZE = MedicationContainerCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* MedicationContainerCode_Value_descriptor();
inline const ::std::string& MedicationContainerCode_Value_Name(MedicationContainerCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    MedicationContainerCode_Value_descriptor(), value);
}
inline bool MedicationContainerCode_Value_Parse(
    const ::std::string& name, MedicationContainerCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MedicationContainerCode_Value>(
    MedicationContainerCode_Value_descriptor(), name, value);
}
enum MedicationRequestCategoryCode_Value {
  MedicationRequestCategoryCode_Value_INVALID_UNINITIALIZED = 0,
  MedicationRequestCategoryCode_Value_INPATIENT = 1,
  MedicationRequestCategoryCode_Value_OUTPATIENT = 2,
  MedicationRequestCategoryCode_Value_COMMUNITY = 3,
  MedicationRequestCategoryCode_Value_MedicationRequestCategoryCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MedicationRequestCategoryCode_Value_MedicationRequestCategoryCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MedicationRequestCategoryCode_Value_IsValid(int value);
const MedicationRequestCategoryCode_Value MedicationRequestCategoryCode_Value_Value_MIN = MedicationRequestCategoryCode_Value_INVALID_UNINITIALIZED;
const MedicationRequestCategoryCode_Value MedicationRequestCategoryCode_Value_Value_MAX = MedicationRequestCategoryCode_Value_COMMUNITY;
const int MedicationRequestCategoryCode_Value_Value_ARRAYSIZE = MedicationRequestCategoryCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* MedicationRequestCategoryCode_Value_descriptor();
inline const ::std::string& MedicationRequestCategoryCode_Value_Name(MedicationRequestCategoryCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    MedicationRequestCategoryCode_Value_descriptor(), value);
}
inline bool MedicationRequestCategoryCode_Value_Parse(
    const ::std::string& name, MedicationRequestCategoryCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MedicationRequestCategoryCode_Value>(
    MedicationRequestCategoryCode_Value_descriptor(), name, value);
}
enum MedicationRequestIntentCode_Value {
  MedicationRequestIntentCode_Value_INVALID_UNINITIALIZED = 0,
  MedicationRequestIntentCode_Value_PROPOSAL = 1,
  MedicationRequestIntentCode_Value_PLAN = 2,
  MedicationRequestIntentCode_Value_ORDER = 3,
  MedicationRequestIntentCode_Value_INSTANCE_ORDER = 4,
  MedicationRequestIntentCode_Value_MedicationRequestIntentCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MedicationRequestIntentCode_Value_MedicationRequestIntentCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MedicationRequestIntentCode_Value_IsValid(int value);
const MedicationRequestIntentCode_Value MedicationRequestIntentCode_Value_Value_MIN = MedicationRequestIntentCode_Value_INVALID_UNINITIALIZED;
const MedicationRequestIntentCode_Value MedicationRequestIntentCode_Value_Value_MAX = MedicationRequestIntentCode_Value_INSTANCE_ORDER;
const int MedicationRequestIntentCode_Value_Value_ARRAYSIZE = MedicationRequestIntentCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* MedicationRequestIntentCode_Value_descriptor();
inline const ::std::string& MedicationRequestIntentCode_Value_Name(MedicationRequestIntentCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    MedicationRequestIntentCode_Value_descriptor(), value);
}
inline bool MedicationRequestIntentCode_Value_Parse(
    const ::std::string& name, MedicationRequestIntentCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MedicationRequestIntentCode_Value>(
    MedicationRequestIntentCode_Value_descriptor(), name, value);
}
enum MedicationRequestPriorityCode_Value {
  MedicationRequestPriorityCode_Value_INVALID_UNINITIALIZED = 0,
  MedicationRequestPriorityCode_Value_ROUTINE = 1,
  MedicationRequestPriorityCode_Value_URGENT = 2,
  MedicationRequestPriorityCode_Value_STAT = 3,
  MedicationRequestPriorityCode_Value_ASAP = 4,
  MedicationRequestPriorityCode_Value_MedicationRequestPriorityCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MedicationRequestPriorityCode_Value_MedicationRequestPriorityCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MedicationRequestPriorityCode_Value_IsValid(int value);
const MedicationRequestPriorityCode_Value MedicationRequestPriorityCode_Value_Value_MIN = MedicationRequestPriorityCode_Value_INVALID_UNINITIALIZED;
const MedicationRequestPriorityCode_Value MedicationRequestPriorityCode_Value_Value_MAX = MedicationRequestPriorityCode_Value_ASAP;
const int MedicationRequestPriorityCode_Value_Value_ARRAYSIZE = MedicationRequestPriorityCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* MedicationRequestPriorityCode_Value_descriptor();
inline const ::std::string& MedicationRequestPriorityCode_Value_Name(MedicationRequestPriorityCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    MedicationRequestPriorityCode_Value_descriptor(), value);
}
inline bool MedicationRequestPriorityCode_Value_Parse(
    const ::std::string& name, MedicationRequestPriorityCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MedicationRequestPriorityCode_Value>(
    MedicationRequestPriorityCode_Value_descriptor(), name, value);
}
enum MedicationRequestStatusCode_Value {
  MedicationRequestStatusCode_Value_INVALID_UNINITIALIZED = 0,
  MedicationRequestStatusCode_Value_ACTIVE = 1,
  MedicationRequestStatusCode_Value_ON_HOLD = 2,
  MedicationRequestStatusCode_Value_CANCELLED = 3,
  MedicationRequestStatusCode_Value_COMPLETED = 4,
  MedicationRequestStatusCode_Value_ENTERED_IN_ERROR = 5,
  MedicationRequestStatusCode_Value_STOPPED = 6,
  MedicationRequestStatusCode_Value_DRAFT = 7,
  MedicationRequestStatusCode_Value_UNKNOWN = 8,
  MedicationRequestStatusCode_Value_MedicationRequestStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MedicationRequestStatusCode_Value_MedicationRequestStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MedicationRequestStatusCode_Value_IsValid(int value);
const MedicationRequestStatusCode_Value MedicationRequestStatusCode_Value_Value_MIN = MedicationRequestStatusCode_Value_INVALID_UNINITIALIZED;
const MedicationRequestStatusCode_Value MedicationRequestStatusCode_Value_Value_MAX = MedicationRequestStatusCode_Value_UNKNOWN;
const int MedicationRequestStatusCode_Value_Value_ARRAYSIZE = MedicationRequestStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* MedicationRequestStatusCode_Value_descriptor();
inline const ::std::string& MedicationRequestStatusCode_Value_Name(MedicationRequestStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    MedicationRequestStatusCode_Value_descriptor(), value);
}
inline bool MedicationRequestStatusCode_Value_Parse(
    const ::std::string& name, MedicationRequestStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MedicationRequestStatusCode_Value>(
    MedicationRequestStatusCode_Value_descriptor(), name, value);
}
enum MedicationStatementCategoryCode_Value {
  MedicationStatementCategoryCode_Value_INVALID_UNINITIALIZED = 0,
  MedicationStatementCategoryCode_Value_INPATIENT = 1,
  MedicationStatementCategoryCode_Value_OUTPATIENT = 2,
  MedicationStatementCategoryCode_Value_COMMUNITY = 3,
  MedicationStatementCategoryCode_Value_PATIENTSPECIFIED = 4,
  MedicationStatementCategoryCode_Value_MedicationStatementCategoryCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MedicationStatementCategoryCode_Value_MedicationStatementCategoryCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MedicationStatementCategoryCode_Value_IsValid(int value);
const MedicationStatementCategoryCode_Value MedicationStatementCategoryCode_Value_Value_MIN = MedicationStatementCategoryCode_Value_INVALID_UNINITIALIZED;
const MedicationStatementCategoryCode_Value MedicationStatementCategoryCode_Value_Value_MAX = MedicationStatementCategoryCode_Value_PATIENTSPECIFIED;
const int MedicationStatementCategoryCode_Value_Value_ARRAYSIZE = MedicationStatementCategoryCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* MedicationStatementCategoryCode_Value_descriptor();
inline const ::std::string& MedicationStatementCategoryCode_Value_Name(MedicationStatementCategoryCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    MedicationStatementCategoryCode_Value_descriptor(), value);
}
inline bool MedicationStatementCategoryCode_Value_Parse(
    const ::std::string& name, MedicationStatementCategoryCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MedicationStatementCategoryCode_Value>(
    MedicationStatementCategoryCode_Value_descriptor(), name, value);
}
enum MedicationStatementStatusCode_Value {
  MedicationStatementStatusCode_Value_INVALID_UNINITIALIZED = 0,
  MedicationStatementStatusCode_Value_ACTIVE = 1,
  MedicationStatementStatusCode_Value_COMPLETED = 2,
  MedicationStatementStatusCode_Value_ENTERED_IN_ERROR = 3,
  MedicationStatementStatusCode_Value_INTENDED = 4,
  MedicationStatementStatusCode_Value_STOPPED = 5,
  MedicationStatementStatusCode_Value_ON_HOLD = 6,
  MedicationStatementStatusCode_Value_MedicationStatementStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MedicationStatementStatusCode_Value_MedicationStatementStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MedicationStatementStatusCode_Value_IsValid(int value);
const MedicationStatementStatusCode_Value MedicationStatementStatusCode_Value_Value_MIN = MedicationStatementStatusCode_Value_INVALID_UNINITIALIZED;
const MedicationStatementStatusCode_Value MedicationStatementStatusCode_Value_Value_MAX = MedicationStatementStatusCode_Value_ON_HOLD;
const int MedicationStatementStatusCode_Value_Value_ARRAYSIZE = MedicationStatementStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* MedicationStatementStatusCode_Value_descriptor();
inline const ::std::string& MedicationStatementStatusCode_Value_Name(MedicationStatementStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    MedicationStatementStatusCode_Value_descriptor(), value);
}
inline bool MedicationStatementStatusCode_Value_Parse(
    const ::std::string& name, MedicationStatementStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MedicationStatementStatusCode_Value>(
    MedicationStatementStatusCode_Value_descriptor(), name, value);
}
enum MedicationStatementTakenCode_Value {
  MedicationStatementTakenCode_Value_INVALID_UNINITIALIZED = 0,
  MedicationStatementTakenCode_Value_Y = 1,
  MedicationStatementTakenCode_Value_N = 2,
  MedicationStatementTakenCode_Value_UNK = 3,
  MedicationStatementTakenCode_Value_NA = 4,
  MedicationStatementTakenCode_Value_MedicationStatementTakenCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MedicationStatementTakenCode_Value_MedicationStatementTakenCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MedicationStatementTakenCode_Value_IsValid(int value);
const MedicationStatementTakenCode_Value MedicationStatementTakenCode_Value_Value_MIN = MedicationStatementTakenCode_Value_INVALID_UNINITIALIZED;
const MedicationStatementTakenCode_Value MedicationStatementTakenCode_Value_Value_MAX = MedicationStatementTakenCode_Value_NA;
const int MedicationStatementTakenCode_Value_Value_ARRAYSIZE = MedicationStatementTakenCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* MedicationStatementTakenCode_Value_descriptor();
inline const ::std::string& MedicationStatementTakenCode_Value_Name(MedicationStatementTakenCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    MedicationStatementTakenCode_Value_descriptor(), value);
}
inline bool MedicationStatementTakenCode_Value_Parse(
    const ::std::string& name, MedicationStatementTakenCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MedicationStatementTakenCode_Value>(
    MedicationStatementTakenCode_Value_descriptor(), name, value);
}
enum MedicationStatusCode_Value {
  MedicationStatusCode_Value_INVALID_UNINITIALIZED = 0,
  MedicationStatusCode_Value_ACTIVE = 1,
  MedicationStatusCode_Value_INACTIVE = 2,
  MedicationStatusCode_Value_ENTERED_IN_ERROR = 3,
  MedicationStatusCode_Value_MedicationStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MedicationStatusCode_Value_MedicationStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MedicationStatusCode_Value_IsValid(int value);
const MedicationStatusCode_Value MedicationStatusCode_Value_Value_MIN = MedicationStatusCode_Value_INVALID_UNINITIALIZED;
const MedicationStatusCode_Value MedicationStatusCode_Value_Value_MAX = MedicationStatusCode_Value_ENTERED_IN_ERROR;
const int MedicationStatusCode_Value_Value_ARRAYSIZE = MedicationStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* MedicationStatusCode_Value_descriptor();
inline const ::std::string& MedicationStatusCode_Value_Name(MedicationStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    MedicationStatusCode_Value_descriptor(), value);
}
inline bool MedicationStatusCode_Value_Parse(
    const ::std::string& name, MedicationStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MedicationStatusCode_Value>(
    MedicationStatusCode_Value_descriptor(), name, value);
}
enum MessageEventCode_Value {
  MessageEventCode_Value_INVALID_UNINITIALIZED = 0,
  MessageEventCode_Value_CODE_SYSTEM_EXPAND = 1,
  MessageEventCode_Value_MEDICATION_ADMINISTRATION_COMPLETE = 2,
  MessageEventCode_Value_MEDICATION_ADMINISTRATION_NULLIFICATION = 3,
  MessageEventCode_Value_MEDICATION_ADMINISTRATION_RECORDING = 4,
  MessageEventCode_Value_MEDICATION_ADMINISTRATION_UPDATE = 5,
  MessageEventCode_Value_ADMIN_NOTIFY = 6,
  MessageEventCode_Value_COMMUNICATION_REQUEST = 7,
  MessageEventCode_Value_DIAGNOSTICREPORT_PROVIDE = 8,
  MessageEventCode_Value_OBSERVATION_PROVIDE = 9,
  MessageEventCode_Value_PATIENT_LINK = 10,
  MessageEventCode_Value_PATIENT_UNLINK = 11,
  MessageEventCode_Value_VALUESET_EXPAND = 12,
  MessageEventCode_Value_MessageEventCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MessageEventCode_Value_MessageEventCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MessageEventCode_Value_IsValid(int value);
const MessageEventCode_Value MessageEventCode_Value_Value_MIN = MessageEventCode_Value_INVALID_UNINITIALIZED;
const MessageEventCode_Value MessageEventCode_Value_Value_MAX = MessageEventCode_Value_VALUESET_EXPAND;
const int MessageEventCode_Value_Value_ARRAYSIZE = MessageEventCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageEventCode_Value_descriptor();
inline const ::std::string& MessageEventCode_Value_Name(MessageEventCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageEventCode_Value_descriptor(), value);
}
inline bool MessageEventCode_Value_Parse(
    const ::std::string& name, MessageEventCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageEventCode_Value>(
    MessageEventCode_Value_descriptor(), name, value);
}
enum MessageHeaderResponseRequestCode_Value {
  MessageHeaderResponseRequestCode_Value_INVALID_UNINITIALIZED = 0,
  MessageHeaderResponseRequestCode_Value_ALWAYS = 1,
  MessageHeaderResponseRequestCode_Value_ON_ERROR = 2,
  MessageHeaderResponseRequestCode_Value_NEVER = 3,
  MessageHeaderResponseRequestCode_Value_ON_SUCCESS = 4,
  MessageHeaderResponseRequestCode_Value_MessageHeaderResponseRequestCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MessageHeaderResponseRequestCode_Value_MessageHeaderResponseRequestCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MessageHeaderResponseRequestCode_Value_IsValid(int value);
const MessageHeaderResponseRequestCode_Value MessageHeaderResponseRequestCode_Value_Value_MIN = MessageHeaderResponseRequestCode_Value_INVALID_UNINITIALIZED;
const MessageHeaderResponseRequestCode_Value MessageHeaderResponseRequestCode_Value_Value_MAX = MessageHeaderResponseRequestCode_Value_ON_SUCCESS;
const int MessageHeaderResponseRequestCode_Value_Value_ARRAYSIZE = MessageHeaderResponseRequestCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageHeaderResponseRequestCode_Value_descriptor();
inline const ::std::string& MessageHeaderResponseRequestCode_Value_Name(MessageHeaderResponseRequestCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageHeaderResponseRequestCode_Value_descriptor(), value);
}
inline bool MessageHeaderResponseRequestCode_Value_Parse(
    const ::std::string& name, MessageHeaderResponseRequestCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageHeaderResponseRequestCode_Value>(
    MessageHeaderResponseRequestCode_Value_descriptor(), name, value);
}
enum ExampleMessageReasonCodesCode_Value {
  ExampleMessageReasonCodesCode_Value_INVALID_UNINITIALIZED = 0,
  ExampleMessageReasonCodesCode_Value_ADMIT = 1,
  ExampleMessageReasonCodesCode_Value_DISCHARGE = 2,
  ExampleMessageReasonCodesCode_Value_ABSENT = 3,
  ExampleMessageReasonCodesCode_Value_RETURN = 4,
  ExampleMessageReasonCodesCode_Value_MOVED = 5,
  ExampleMessageReasonCodesCode_Value_EDIT = 6,
  ExampleMessageReasonCodesCode_Value_ExampleMessageReasonCodesCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ExampleMessageReasonCodesCode_Value_ExampleMessageReasonCodesCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ExampleMessageReasonCodesCode_Value_IsValid(int value);
const ExampleMessageReasonCodesCode_Value ExampleMessageReasonCodesCode_Value_Value_MIN = ExampleMessageReasonCodesCode_Value_INVALID_UNINITIALIZED;
const ExampleMessageReasonCodesCode_Value ExampleMessageReasonCodesCode_Value_Value_MAX = ExampleMessageReasonCodesCode_Value_EDIT;
const int ExampleMessageReasonCodesCode_Value_Value_ARRAYSIZE = ExampleMessageReasonCodesCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ExampleMessageReasonCodesCode_Value_descriptor();
inline const ::std::string& ExampleMessageReasonCodesCode_Value_Name(ExampleMessageReasonCodesCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ExampleMessageReasonCodesCode_Value_descriptor(), value);
}
inline bool ExampleMessageReasonCodesCode_Value_Parse(
    const ::std::string& name, ExampleMessageReasonCodesCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ExampleMessageReasonCodesCode_Value>(
    ExampleMessageReasonCodesCode_Value_descriptor(), name, value);
}
enum MessageSignificanceCategoryCode_Value {
  MessageSignificanceCategoryCode_Value_INVALID_UNINITIALIZED = 0,
  MessageSignificanceCategoryCode_Value_CONSEQUENCE = 1,
  MessageSignificanceCategoryCode_Value_CURRENCY = 2,
  MessageSignificanceCategoryCode_Value_NOTIFICATION = 3,
  MessageSignificanceCategoryCode_Value_MessageSignificanceCategoryCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MessageSignificanceCategoryCode_Value_MessageSignificanceCategoryCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MessageSignificanceCategoryCode_Value_IsValid(int value);
const MessageSignificanceCategoryCode_Value MessageSignificanceCategoryCode_Value_Value_MIN = MessageSignificanceCategoryCode_Value_INVALID_UNINITIALIZED;
const MessageSignificanceCategoryCode_Value MessageSignificanceCategoryCode_Value_Value_MAX = MessageSignificanceCategoryCode_Value_NOTIFICATION;
const int MessageSignificanceCategoryCode_Value_Value_ARRAYSIZE = MessageSignificanceCategoryCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageSignificanceCategoryCode_Value_descriptor();
inline const ::std::string& MessageSignificanceCategoryCode_Value_Name(MessageSignificanceCategoryCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageSignificanceCategoryCode_Value_descriptor(), value);
}
inline bool MessageSignificanceCategoryCode_Value_Parse(
    const ::std::string& name, MessageSignificanceCategoryCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageSignificanceCategoryCode_Value>(
    MessageSignificanceCategoryCode_Value_descriptor(), name, value);
}
enum MessageTransportCode_Value {
  MessageTransportCode_Value_INVALID_UNINITIALIZED = 0,
  MessageTransportCode_Value_HTTP = 1,
  MessageTransportCode_Value_FTP = 2,
  MessageTransportCode_Value_MLLP = 3,
  MessageTransportCode_Value_MessageTransportCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MessageTransportCode_Value_MessageTransportCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MessageTransportCode_Value_IsValid(int value);
const MessageTransportCode_Value MessageTransportCode_Value_Value_MIN = MessageTransportCode_Value_INVALID_UNINITIALIZED;
const MessageTransportCode_Value MessageTransportCode_Value_Value_MAX = MessageTransportCode_Value_MLLP;
const int MessageTransportCode_Value_Value_ARRAYSIZE = MessageTransportCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageTransportCode_Value_descriptor();
inline const ::std::string& MessageTransportCode_Value_Name(MessageTransportCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageTransportCode_Value_descriptor(), value);
}
inline bool MessageTransportCode_Value_Parse(
    const ::std::string& name, MessageTransportCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageTransportCode_Value>(
    MessageTransportCode_Value_descriptor(), name, value);
}
enum DeviceMetricCalibrationStateCode_Value {
  DeviceMetricCalibrationStateCode_Value_INVALID_UNINITIALIZED = 0,
  DeviceMetricCalibrationStateCode_Value_NOT_CALIBRATED = 1,
  DeviceMetricCalibrationStateCode_Value_CALIBRATION_REQUIRED = 2,
  DeviceMetricCalibrationStateCode_Value_CALIBRATED = 3,
  DeviceMetricCalibrationStateCode_Value_UNSPECIFIED = 4,
  DeviceMetricCalibrationStateCode_Value_DeviceMetricCalibrationStateCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DeviceMetricCalibrationStateCode_Value_DeviceMetricCalibrationStateCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DeviceMetricCalibrationStateCode_Value_IsValid(int value);
const DeviceMetricCalibrationStateCode_Value DeviceMetricCalibrationStateCode_Value_Value_MIN = DeviceMetricCalibrationStateCode_Value_INVALID_UNINITIALIZED;
const DeviceMetricCalibrationStateCode_Value DeviceMetricCalibrationStateCode_Value_Value_MAX = DeviceMetricCalibrationStateCode_Value_UNSPECIFIED;
const int DeviceMetricCalibrationStateCode_Value_Value_ARRAYSIZE = DeviceMetricCalibrationStateCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* DeviceMetricCalibrationStateCode_Value_descriptor();
inline const ::std::string& DeviceMetricCalibrationStateCode_Value_Name(DeviceMetricCalibrationStateCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    DeviceMetricCalibrationStateCode_Value_descriptor(), value);
}
inline bool DeviceMetricCalibrationStateCode_Value_Parse(
    const ::std::string& name, DeviceMetricCalibrationStateCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DeviceMetricCalibrationStateCode_Value>(
    DeviceMetricCalibrationStateCode_Value_descriptor(), name, value);
}
enum DeviceMetricCalibrationTypeCode_Value {
  DeviceMetricCalibrationTypeCode_Value_INVALID_UNINITIALIZED = 0,
  DeviceMetricCalibrationTypeCode_Value_UNSPECIFIED = 1,
  DeviceMetricCalibrationTypeCode_Value_OFFSET = 2,
  DeviceMetricCalibrationTypeCode_Value_GAIN = 3,
  DeviceMetricCalibrationTypeCode_Value_TWO_POINT = 4,
  DeviceMetricCalibrationTypeCode_Value_DeviceMetricCalibrationTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DeviceMetricCalibrationTypeCode_Value_DeviceMetricCalibrationTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DeviceMetricCalibrationTypeCode_Value_IsValid(int value);
const DeviceMetricCalibrationTypeCode_Value DeviceMetricCalibrationTypeCode_Value_Value_MIN = DeviceMetricCalibrationTypeCode_Value_INVALID_UNINITIALIZED;
const DeviceMetricCalibrationTypeCode_Value DeviceMetricCalibrationTypeCode_Value_Value_MAX = DeviceMetricCalibrationTypeCode_Value_TWO_POINT;
const int DeviceMetricCalibrationTypeCode_Value_Value_ARRAYSIZE = DeviceMetricCalibrationTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* DeviceMetricCalibrationTypeCode_Value_descriptor();
inline const ::std::string& DeviceMetricCalibrationTypeCode_Value_Name(DeviceMetricCalibrationTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    DeviceMetricCalibrationTypeCode_Value_descriptor(), value);
}
inline bool DeviceMetricCalibrationTypeCode_Value_Parse(
    const ::std::string& name, DeviceMetricCalibrationTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DeviceMetricCalibrationTypeCode_Value>(
    DeviceMetricCalibrationTypeCode_Value_descriptor(), name, value);
}
enum DeviceMetricCategoryCode_Value {
  DeviceMetricCategoryCode_Value_INVALID_UNINITIALIZED = 0,
  DeviceMetricCategoryCode_Value_MEASUREMENT = 1,
  DeviceMetricCategoryCode_Value_SETTING = 2,
  DeviceMetricCategoryCode_Value_CALCULATION = 3,
  DeviceMetricCategoryCode_Value_UNSPECIFIED = 4,
  DeviceMetricCategoryCode_Value_DeviceMetricCategoryCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DeviceMetricCategoryCode_Value_DeviceMetricCategoryCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DeviceMetricCategoryCode_Value_IsValid(int value);
const DeviceMetricCategoryCode_Value DeviceMetricCategoryCode_Value_Value_MIN = DeviceMetricCategoryCode_Value_INVALID_UNINITIALIZED;
const DeviceMetricCategoryCode_Value DeviceMetricCategoryCode_Value_Value_MAX = DeviceMetricCategoryCode_Value_UNSPECIFIED;
const int DeviceMetricCategoryCode_Value_Value_ARRAYSIZE = DeviceMetricCategoryCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* DeviceMetricCategoryCode_Value_descriptor();
inline const ::std::string& DeviceMetricCategoryCode_Value_Name(DeviceMetricCategoryCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    DeviceMetricCategoryCode_Value_descriptor(), value);
}
inline bool DeviceMetricCategoryCode_Value_Parse(
    const ::std::string& name, DeviceMetricCategoryCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DeviceMetricCategoryCode_Value>(
    DeviceMetricCategoryCode_Value_descriptor(), name, value);
}
enum DeviceMetricColorCode_Value {
  DeviceMetricColorCode_Value_INVALID_UNINITIALIZED = 0,
  DeviceMetricColorCode_Value_BLACK = 1,
  DeviceMetricColorCode_Value_RED = 2,
  DeviceMetricColorCode_Value_GREEN = 3,
  DeviceMetricColorCode_Value_YELLOW = 4,
  DeviceMetricColorCode_Value_BLUE = 5,
  DeviceMetricColorCode_Value_MAGENTA = 6,
  DeviceMetricColorCode_Value_CYAN = 7,
  DeviceMetricColorCode_Value_WHITE = 8,
  DeviceMetricColorCode_Value_DeviceMetricColorCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DeviceMetricColorCode_Value_DeviceMetricColorCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DeviceMetricColorCode_Value_IsValid(int value);
const DeviceMetricColorCode_Value DeviceMetricColorCode_Value_Value_MIN = DeviceMetricColorCode_Value_INVALID_UNINITIALIZED;
const DeviceMetricColorCode_Value DeviceMetricColorCode_Value_Value_MAX = DeviceMetricColorCode_Value_WHITE;
const int DeviceMetricColorCode_Value_Value_ARRAYSIZE = DeviceMetricColorCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* DeviceMetricColorCode_Value_descriptor();
inline const ::std::string& DeviceMetricColorCode_Value_Name(DeviceMetricColorCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    DeviceMetricColorCode_Value_descriptor(), value);
}
inline bool DeviceMetricColorCode_Value_Parse(
    const ::std::string& name, DeviceMetricColorCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DeviceMetricColorCode_Value>(
    DeviceMetricColorCode_Value_descriptor(), name, value);
}
enum DeviceMetricOperationalStatusCode_Value {
  DeviceMetricOperationalStatusCode_Value_INVALID_UNINITIALIZED = 0,
  DeviceMetricOperationalStatusCode_Value_ON = 1,
  DeviceMetricOperationalStatusCode_Value_OFF = 2,
  DeviceMetricOperationalStatusCode_Value_STANDBY = 3,
  DeviceMetricOperationalStatusCode_Value_ENTERED_IN_ERROR = 4,
  DeviceMetricOperationalStatusCode_Value_DeviceMetricOperationalStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DeviceMetricOperationalStatusCode_Value_DeviceMetricOperationalStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DeviceMetricOperationalStatusCode_Value_IsValid(int value);
const DeviceMetricOperationalStatusCode_Value DeviceMetricOperationalStatusCode_Value_Value_MIN = DeviceMetricOperationalStatusCode_Value_INVALID_UNINITIALIZED;
const DeviceMetricOperationalStatusCode_Value DeviceMetricOperationalStatusCode_Value_Value_MAX = DeviceMetricOperationalStatusCode_Value_ENTERED_IN_ERROR;
const int DeviceMetricOperationalStatusCode_Value_Value_ARRAYSIZE = DeviceMetricOperationalStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* DeviceMetricOperationalStatusCode_Value_descriptor();
inline const ::std::string& DeviceMetricOperationalStatusCode_Value_Name(DeviceMetricOperationalStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    DeviceMetricOperationalStatusCode_Value_descriptor(), value);
}
inline bool DeviceMetricOperationalStatusCode_Value_Parse(
    const ::std::string& name, DeviceMetricOperationalStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DeviceMetricOperationalStatusCode_Value>(
    DeviceMetricOperationalStatusCode_Value_descriptor(), name, value);
}
enum HumanNameAssemblyOrderCode_Value {
  HumanNameAssemblyOrderCode_Value_INVALID_UNINITIALIZED = 0,
  HumanNameAssemblyOrderCode_Value_NL1 = 1,
  HumanNameAssemblyOrderCode_Value_NL2 = 2,
  HumanNameAssemblyOrderCode_Value_NL3 = 3,
  HumanNameAssemblyOrderCode_Value_NL4 = 4,
  HumanNameAssemblyOrderCode_Value_HumanNameAssemblyOrderCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  HumanNameAssemblyOrderCode_Value_HumanNameAssemblyOrderCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool HumanNameAssemblyOrderCode_Value_IsValid(int value);
const HumanNameAssemblyOrderCode_Value HumanNameAssemblyOrderCode_Value_Value_MIN = HumanNameAssemblyOrderCode_Value_INVALID_UNINITIALIZED;
const HumanNameAssemblyOrderCode_Value HumanNameAssemblyOrderCode_Value_Value_MAX = HumanNameAssemblyOrderCode_Value_NL4;
const int HumanNameAssemblyOrderCode_Value_Value_ARRAYSIZE = HumanNameAssemblyOrderCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* HumanNameAssemblyOrderCode_Value_descriptor();
inline const ::std::string& HumanNameAssemblyOrderCode_Value_Name(HumanNameAssemblyOrderCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    HumanNameAssemblyOrderCode_Value_descriptor(), value);
}
inline bool HumanNameAssemblyOrderCode_Value_Parse(
    const ::std::string& name, HumanNameAssemblyOrderCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HumanNameAssemblyOrderCode_Value>(
    HumanNameAssemblyOrderCode_Value_descriptor(), name, value);
}
enum NameRepresentationUseCode_Value {
  NameRepresentationUseCode_Value_INVALID_UNINITIALIZED = 0,
  NameRepresentationUseCode_Value_ABC = 1,
  NameRepresentationUseCode_Value_IDE = 2,
  NameRepresentationUseCode_Value_SYL = 3,
  NameRepresentationUseCode_Value_NameRepresentationUseCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  NameRepresentationUseCode_Value_NameRepresentationUseCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool NameRepresentationUseCode_Value_IsValid(int value);
const NameRepresentationUseCode_Value NameRepresentationUseCode_Value_Value_MIN = NameRepresentationUseCode_Value_INVALID_UNINITIALIZED;
const NameRepresentationUseCode_Value NameRepresentationUseCode_Value_Value_MAX = NameRepresentationUseCode_Value_SYL;
const int NameRepresentationUseCode_Value_Value_ARRAYSIZE = NameRepresentationUseCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* NameRepresentationUseCode_Value_descriptor();
inline const ::std::string& NameRepresentationUseCode_Value_Name(NameRepresentationUseCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    NameRepresentationUseCode_Value_descriptor(), value);
}
inline bool NameRepresentationUseCode_Value_Parse(
    const ::std::string& name, NameRepresentationUseCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NameRepresentationUseCode_Value>(
    NameRepresentationUseCode_Value_descriptor(), name, value);
}
enum NamingSystemIdentifierTypeCode_Value {
  NamingSystemIdentifierTypeCode_Value_INVALID_UNINITIALIZED = 0,
  NamingSystemIdentifierTypeCode_Value_OID = 1,
  NamingSystemIdentifierTypeCode_Value_UUID = 2,
  NamingSystemIdentifierTypeCode_Value_URI = 3,
  NamingSystemIdentifierTypeCode_Value_OTHER = 4,
  NamingSystemIdentifierTypeCode_Value_NamingSystemIdentifierTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  NamingSystemIdentifierTypeCode_Value_NamingSystemIdentifierTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool NamingSystemIdentifierTypeCode_Value_IsValid(int value);
const NamingSystemIdentifierTypeCode_Value NamingSystemIdentifierTypeCode_Value_Value_MIN = NamingSystemIdentifierTypeCode_Value_INVALID_UNINITIALIZED;
const NamingSystemIdentifierTypeCode_Value NamingSystemIdentifierTypeCode_Value_Value_MAX = NamingSystemIdentifierTypeCode_Value_OTHER;
const int NamingSystemIdentifierTypeCode_Value_Value_ARRAYSIZE = NamingSystemIdentifierTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* NamingSystemIdentifierTypeCode_Value_descriptor();
inline const ::std::string& NamingSystemIdentifierTypeCode_Value_Name(NamingSystemIdentifierTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    NamingSystemIdentifierTypeCode_Value_descriptor(), value);
}
inline bool NamingSystemIdentifierTypeCode_Value_Parse(
    const ::std::string& name, NamingSystemIdentifierTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NamingSystemIdentifierTypeCode_Value>(
    NamingSystemIdentifierTypeCode_Value_descriptor(), name, value);
}
enum NamingSystemTypeCode_Value {
  NamingSystemTypeCode_Value_INVALID_UNINITIALIZED = 0,
  NamingSystemTypeCode_Value_CODESYSTEM = 1,
  NamingSystemTypeCode_Value_IDENTIFIER = 2,
  NamingSystemTypeCode_Value_ROOT = 3,
  NamingSystemTypeCode_Value_NamingSystemTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  NamingSystemTypeCode_Value_NamingSystemTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool NamingSystemTypeCode_Value_IsValid(int value);
const NamingSystemTypeCode_Value NamingSystemTypeCode_Value_Value_MIN = NamingSystemTypeCode_Value_INVALID_UNINITIALIZED;
const NamingSystemTypeCode_Value NamingSystemTypeCode_Value_Value_MAX = NamingSystemTypeCode_Value_ROOT;
const int NamingSystemTypeCode_Value_Value_ARRAYSIZE = NamingSystemTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* NamingSystemTypeCode_Value_descriptor();
inline const ::std::string& NamingSystemTypeCode_Value_Name(NamingSystemTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    NamingSystemTypeCode_Value_descriptor(), value);
}
inline bool NamingSystemTypeCode_Value_Parse(
    const ::std::string& name, NamingSystemTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NamingSystemTypeCode_Value>(
    NamingSystemTypeCode_Value_descriptor(), name, value);
}
enum AuditEventAgentNetworkTypeCode_Value {
  AuditEventAgentNetworkTypeCode_Value_INVALID_UNINITIALIZED = 0,
  AuditEventAgentNetworkTypeCode_Value_MACHINE_NAME = 1,
  AuditEventAgentNetworkTypeCode_Value_IP_ADDRESS = 2,
  AuditEventAgentNetworkTypeCode_Value_TELEPHONE_NUMBER = 3,
  AuditEventAgentNetworkTypeCode_Value_EMAIL_ADDRESS = 4,
  AuditEventAgentNetworkTypeCode_Value_URI = 5,
  AuditEventAgentNetworkTypeCode_Value_AuditEventAgentNetworkTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AuditEventAgentNetworkTypeCode_Value_AuditEventAgentNetworkTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AuditEventAgentNetworkTypeCode_Value_IsValid(int value);
const AuditEventAgentNetworkTypeCode_Value AuditEventAgentNetworkTypeCode_Value_Value_MIN = AuditEventAgentNetworkTypeCode_Value_INVALID_UNINITIALIZED;
const AuditEventAgentNetworkTypeCode_Value AuditEventAgentNetworkTypeCode_Value_Value_MAX = AuditEventAgentNetworkTypeCode_Value_URI;
const int AuditEventAgentNetworkTypeCode_Value_Value_ARRAYSIZE = AuditEventAgentNetworkTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* AuditEventAgentNetworkTypeCode_Value_descriptor();
inline const ::std::string& AuditEventAgentNetworkTypeCode_Value_Name(AuditEventAgentNetworkTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    AuditEventAgentNetworkTypeCode_Value_descriptor(), value);
}
inline bool AuditEventAgentNetworkTypeCode_Value_Parse(
    const ::std::string& name, AuditEventAgentNetworkTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AuditEventAgentNetworkTypeCode_Value>(
    AuditEventAgentNetworkTypeCode_Value_descriptor(), name, value);
}
enum NoteTypeCode_Value {
  NoteTypeCode_Value_INVALID_UNINITIALIZED = 0,
  NoteTypeCode_Value_DISPLAY = 1,
  NoteTypeCode_Value_PRINT = 2,
  NoteTypeCode_Value_PRINTOPER = 3,
  NoteTypeCode_Value_NoteTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  NoteTypeCode_Value_NoteTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool NoteTypeCode_Value_IsValid(int value);
const NoteTypeCode_Value NoteTypeCode_Value_Value_MIN = NoteTypeCode_Value_INVALID_UNINITIALIZED;
const NoteTypeCode_Value NoteTypeCode_Value_Value_MAX = NoteTypeCode_Value_PRINTOPER;
const int NoteTypeCode_Value_Value_ARRAYSIZE = NoteTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* NoteTypeCode_Value_descriptor();
inline const ::std::string& NoteTypeCode_Value_Name(NoteTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    NoteTypeCode_Value_descriptor(), value);
}
inline bool NoteTypeCode_Value_Parse(
    const ::std::string& name, NoteTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NoteTypeCode_Value>(
    NoteTypeCode_Value_descriptor(), name, value);
}
enum NullFlavorCode_Value {
  NullFlavorCode_Value_INVALID_UNINITIALIZED = 0,
  NullFlavorCode_Value_NI = 1,
  NullFlavorCode_Value_INV = 2,
  NullFlavorCode_Value_DER = 3,
  NullFlavorCode_Value_OTH = 4,
  NullFlavorCode_Value_NINF = 5,
  NullFlavorCode_Value_PINF = 6,
  NullFlavorCode_Value_UNC = 7,
  NullFlavorCode_Value_MSK = 8,
  NullFlavorCode_Value_NA = 9,
  NullFlavorCode_Value_UNK = 10,
  NullFlavorCode_Value_ASKU = 11,
  NullFlavorCode_Value_NAV = 12,
  NullFlavorCode_Value_NASK = 13,
  NullFlavorCode_Value_NAVU = 14,
  NullFlavorCode_Value_QS = 15,
  NullFlavorCode_Value_TRC = 16,
  NullFlavorCode_Value_NP = 17,
  NullFlavorCode_Value_NullFlavorCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  NullFlavorCode_Value_NullFlavorCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool NullFlavorCode_Value_IsValid(int value);
const NullFlavorCode_Value NullFlavorCode_Value_Value_MIN = NullFlavorCode_Value_INVALID_UNINITIALIZED;
const NullFlavorCode_Value NullFlavorCode_Value_Value_MAX = NullFlavorCode_Value_NP;
const int NullFlavorCode_Value_Value_ARRAYSIZE = NullFlavorCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* NullFlavorCode_Value_descriptor();
inline const ::std::string& NullFlavorCode_Value_Name(NullFlavorCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    NullFlavorCode_Value_descriptor(), value);
}
inline bool NullFlavorCode_Value_Parse(
    const ::std::string& name, NullFlavorCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NullFlavorCode_Value>(
    NullFlavorCode_Value_descriptor(), name, value);
}
enum NutritionOrderStatusCode_Value {
  NutritionOrderStatusCode_Value_INVALID_UNINITIALIZED = 0,
  NutritionOrderStatusCode_Value_PROPOSED = 1,
  NutritionOrderStatusCode_Value_DRAFT = 2,
  NutritionOrderStatusCode_Value_PLANNED = 3,
  NutritionOrderStatusCode_Value_REQUESTED = 4,
  NutritionOrderStatusCode_Value_ACTIVE = 5,
  NutritionOrderStatusCode_Value_ON_HOLD = 6,
  NutritionOrderStatusCode_Value_COMPLETED = 7,
  NutritionOrderStatusCode_Value_CANCELLED = 8,
  NutritionOrderStatusCode_Value_ENTERED_IN_ERROR = 9,
  NutritionOrderStatusCode_Value_NutritionOrderStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  NutritionOrderStatusCode_Value_NutritionOrderStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool NutritionOrderStatusCode_Value_IsValid(int value);
const NutritionOrderStatusCode_Value NutritionOrderStatusCode_Value_Value_MIN = NutritionOrderStatusCode_Value_INVALID_UNINITIALIZED;
const NutritionOrderStatusCode_Value NutritionOrderStatusCode_Value_Value_MAX = NutritionOrderStatusCode_Value_ENTERED_IN_ERROR;
const int NutritionOrderStatusCode_Value_Value_ARRAYSIZE = NutritionOrderStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* NutritionOrderStatusCode_Value_descriptor();
inline const ::std::string& NutritionOrderStatusCode_Value_Name(NutritionOrderStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    NutritionOrderStatusCode_Value_descriptor(), value);
}
inline bool NutritionOrderStatusCode_Value_Parse(
    const ::std::string& name, NutritionOrderStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NutritionOrderStatusCode_Value>(
    NutritionOrderStatusCode_Value_descriptor(), name, value);
}
enum ObservationCategoryCodesCode_Value {
  ObservationCategoryCodesCode_Value_INVALID_UNINITIALIZED = 0,
  ObservationCategoryCodesCode_Value_SOCIAL_HISTORY = 1,
  ObservationCategoryCodesCode_Value_VITAL_SIGNS = 2,
  ObservationCategoryCodesCode_Value_IMAGING = 3,
  ObservationCategoryCodesCode_Value_LABORATORY = 4,
  ObservationCategoryCodesCode_Value_PROCEDURE = 5,
  ObservationCategoryCodesCode_Value_SURVEY = 6,
  ObservationCategoryCodesCode_Value_EXAM = 7,
  ObservationCategoryCodesCode_Value_THERAPY = 8,
  ObservationCategoryCodesCode_Value_ObservationCategoryCodesCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ObservationCategoryCodesCode_Value_ObservationCategoryCodesCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ObservationCategoryCodesCode_Value_IsValid(int value);
const ObservationCategoryCodesCode_Value ObservationCategoryCodesCode_Value_Value_MIN = ObservationCategoryCodesCode_Value_INVALID_UNINITIALIZED;
const ObservationCategoryCodesCode_Value ObservationCategoryCodesCode_Value_Value_MAX = ObservationCategoryCodesCode_Value_THERAPY;
const int ObservationCategoryCodesCode_Value_Value_ARRAYSIZE = ObservationCategoryCodesCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ObservationCategoryCodesCode_Value_descriptor();
inline const ::std::string& ObservationCategoryCodesCode_Value_Name(ObservationCategoryCodesCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ObservationCategoryCodesCode_Value_descriptor(), value);
}
inline bool ObservationCategoryCodesCode_Value_Parse(
    const ::std::string& name, ObservationCategoryCodesCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ObservationCategoryCodesCode_Value>(
    ObservationCategoryCodesCode_Value_descriptor(), name, value);
}
enum ObservationRelationshipTypeCode_Value {
  ObservationRelationshipTypeCode_Value_INVALID_UNINITIALIZED = 0,
  ObservationRelationshipTypeCode_Value_HAS_MEMBER = 1,
  ObservationRelationshipTypeCode_Value_DERIVED_FROM = 2,
  ObservationRelationshipTypeCode_Value_SEQUEL_TO = 3,
  ObservationRelationshipTypeCode_Value_REPLACES = 4,
  ObservationRelationshipTypeCode_Value_QUALIFIED_BY = 5,
  ObservationRelationshipTypeCode_Value_INTERFERED_BY = 6,
  ObservationRelationshipTypeCode_Value_ObservationRelationshipTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ObservationRelationshipTypeCode_Value_ObservationRelationshipTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ObservationRelationshipTypeCode_Value_IsValid(int value);
const ObservationRelationshipTypeCode_Value ObservationRelationshipTypeCode_Value_Value_MIN = ObservationRelationshipTypeCode_Value_INVALID_UNINITIALIZED;
const ObservationRelationshipTypeCode_Value ObservationRelationshipTypeCode_Value_Value_MAX = ObservationRelationshipTypeCode_Value_INTERFERED_BY;
const int ObservationRelationshipTypeCode_Value_Value_ARRAYSIZE = ObservationRelationshipTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ObservationRelationshipTypeCode_Value_descriptor();
inline const ::std::string& ObservationRelationshipTypeCode_Value_Name(ObservationRelationshipTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ObservationRelationshipTypeCode_Value_descriptor(), value);
}
inline bool ObservationRelationshipTypeCode_Value_Parse(
    const ::std::string& name, ObservationRelationshipTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ObservationRelationshipTypeCode_Value>(
    ObservationRelationshipTypeCode_Value_descriptor(), name, value);
}
enum StatisticsCodeCode_Value {
  StatisticsCodeCode_Value_INVALID_UNINITIALIZED = 0,
  StatisticsCodeCode_Value_AVERAGE = 1,
  StatisticsCodeCode_Value_MAXIMUM = 2,
  StatisticsCodeCode_Value_MINIMUM = 3,
  StatisticsCodeCode_Value_COUNT = 4,
  StatisticsCodeCode_Value_TOTALCOUNT = 5,
  StatisticsCodeCode_Value_MEDIAN = 6,
  StatisticsCodeCode_Value_STD_DEV = 7,
  StatisticsCodeCode_Value_SUM = 8,
  StatisticsCodeCode_Value_VARIANCE = 9,
  StatisticsCodeCode_Value_TWENTY_PERCENT = 10,
  StatisticsCodeCode_Value_EIGHTY_PERCENT = 11,
  StatisticsCodeCode_Value_FOUR_LOWER = 12,
  StatisticsCodeCode_Value_FOUR_UPPER = 13,
  StatisticsCodeCode_Value_FOUR_DEV = 14,
  StatisticsCodeCode_Value_FIVE_ONE = 15,
  StatisticsCodeCode_Value_FIVE_TWO = 16,
  StatisticsCodeCode_Value_FIVE_THREE = 17,
  StatisticsCodeCode_Value_FIVE_FOUR = 18,
  StatisticsCodeCode_Value_SKEW = 19,
  StatisticsCodeCode_Value_KURTOSIS = 20,
  StatisticsCodeCode_Value_REGRESSION = 21,
  StatisticsCodeCode_Value_StatisticsCodeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  StatisticsCodeCode_Value_StatisticsCodeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool StatisticsCodeCode_Value_IsValid(int value);
const StatisticsCodeCode_Value StatisticsCodeCode_Value_Value_MIN = StatisticsCodeCode_Value_INVALID_UNINITIALIZED;
const StatisticsCodeCode_Value StatisticsCodeCode_Value_Value_MAX = StatisticsCodeCode_Value_REGRESSION;
const int StatisticsCodeCode_Value_Value_ARRAYSIZE = StatisticsCodeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* StatisticsCodeCode_Value_descriptor();
inline const ::std::string& StatisticsCodeCode_Value_Name(StatisticsCodeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    StatisticsCodeCode_Value_descriptor(), value);
}
inline bool StatisticsCodeCode_Value_Parse(
    const ::std::string& name, StatisticsCodeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StatisticsCodeCode_Value>(
    StatisticsCodeCode_Value_descriptor(), name, value);
}
enum ObservationStatusCode_Value {
  ObservationStatusCode_Value_INVALID_UNINITIALIZED = 0,
  ObservationStatusCode_Value_REGISTERED = 1,
  ObservationStatusCode_Value_PRELIMINARY = 2,
  ObservationStatusCode_Value_FINAL = 3,
  ObservationStatusCode_Value_AMENDED = 4,
  ObservationStatusCode_Value_CORRECTED = 5,
  ObservationStatusCode_Value_CANCELLED = 6,
  ObservationStatusCode_Value_ENTERED_IN_ERROR = 7,
  ObservationStatusCode_Value_UNKNOWN = 8,
  ObservationStatusCode_Value_ObservationStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ObservationStatusCode_Value_ObservationStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ObservationStatusCode_Value_IsValid(int value);
const ObservationStatusCode_Value ObservationStatusCode_Value_Value_MIN = ObservationStatusCode_Value_INVALID_UNINITIALIZED;
const ObservationStatusCode_Value ObservationStatusCode_Value_Value_MAX = ObservationStatusCode_Value_UNKNOWN;
const int ObservationStatusCode_Value_Value_ARRAYSIZE = ObservationStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ObservationStatusCode_Value_descriptor();
inline const ::std::string& ObservationStatusCode_Value_Name(ObservationStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ObservationStatusCode_Value_descriptor(), value);
}
inline bool ObservationStatusCode_Value_Parse(
    const ::std::string& name, ObservationStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ObservationStatusCode_Value>(
    ObservationStatusCode_Value_descriptor(), name, value);
}
enum DeviceComponentOperationalStatusCode_Value {
  DeviceComponentOperationalStatusCode_Value_INVALID_UNINITIALIZED = 0,
  DeviceComponentOperationalStatusCode_Value_OFF = 1,
  DeviceComponentOperationalStatusCode_Value_ON = 2,
  DeviceComponentOperationalStatusCode_Value_NOT_READY = 3,
  DeviceComponentOperationalStatusCode_Value_STANDBY = 4,
  DeviceComponentOperationalStatusCode_Value_TRANSDUC_DISCON = 5,
  DeviceComponentOperationalStatusCode_Value_HW_DISCON = 6,
  DeviceComponentOperationalStatusCode_Value_ENTERED_IN_ERROR = 7,
  DeviceComponentOperationalStatusCode_Value_DeviceComponentOperationalStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DeviceComponentOperationalStatusCode_Value_DeviceComponentOperationalStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DeviceComponentOperationalStatusCode_Value_IsValid(int value);
const DeviceComponentOperationalStatusCode_Value DeviceComponentOperationalStatusCode_Value_Value_MIN = DeviceComponentOperationalStatusCode_Value_INVALID_UNINITIALIZED;
const DeviceComponentOperationalStatusCode_Value DeviceComponentOperationalStatusCode_Value_Value_MAX = DeviceComponentOperationalStatusCode_Value_ENTERED_IN_ERROR;
const int DeviceComponentOperationalStatusCode_Value_Value_ARRAYSIZE = DeviceComponentOperationalStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* DeviceComponentOperationalStatusCode_Value_descriptor();
inline const ::std::string& DeviceComponentOperationalStatusCode_Value_Name(DeviceComponentOperationalStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    DeviceComponentOperationalStatusCode_Value_descriptor(), value);
}
inline bool DeviceComponentOperationalStatusCode_Value_Parse(
    const ::std::string& name, DeviceComponentOperationalStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DeviceComponentOperationalStatusCode_Value>(
    DeviceComponentOperationalStatusCode_Value_descriptor(), name, value);
}
enum OperationKindCode_Value {
  OperationKindCode_Value_INVALID_UNINITIALIZED = 0,
  OperationKindCode_Value_OPERATION = 1,
  OperationKindCode_Value_QUERY = 2,
  OperationKindCode_Value_OperationKindCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OperationKindCode_Value_OperationKindCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OperationKindCode_Value_IsValid(int value);
const OperationKindCode_Value OperationKindCode_Value_Value_MIN = OperationKindCode_Value_INVALID_UNINITIALIZED;
const OperationKindCode_Value OperationKindCode_Value_Value_MAX = OperationKindCode_Value_QUERY;
const int OperationKindCode_Value_Value_ARRAYSIZE = OperationKindCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* OperationKindCode_Value_descriptor();
inline const ::std::string& OperationKindCode_Value_Name(OperationKindCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    OperationKindCode_Value_descriptor(), value);
}
inline bool OperationKindCode_Value_Parse(
    const ::std::string& name, OperationKindCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OperationKindCode_Value>(
    OperationKindCode_Value_descriptor(), name, value);
}
enum OperationOutcomeCodesCode_Value {
  OperationOutcomeCodesCode_Value_INVALID_UNINITIALIZED = 0,
  OperationOutcomeCodesCode_Value_MSG_AUTH_REQUIRED = 1,
  OperationOutcomeCodesCode_Value_MSG_BAD_FORMAT = 2,
  OperationOutcomeCodesCode_Value_MSG_BAD_SYNTAX = 3,
  OperationOutcomeCodesCode_Value_MSG_CANT_PARSE_CONTENT = 4,
  OperationOutcomeCodesCode_Value_MSG_CANT_PARSE_ROOT = 5,
  OperationOutcomeCodesCode_Value_MSG_CREATED = 6,
  OperationOutcomeCodesCode_Value_MSG_DATE_FORMAT = 7,
  OperationOutcomeCodesCode_Value_MSG_DELETED = 8,
  OperationOutcomeCodesCode_Value_MSG_DELETED_DONE = 9,
  OperationOutcomeCodesCode_Value_MSG_DELETED_ID = 10,
  OperationOutcomeCodesCode_Value_MSG_DUPLICATE_ID = 11,
  OperationOutcomeCodesCode_Value_MSG_ERROR_PARSING = 12,
  OperationOutcomeCodesCode_Value_MSG_ID_INVALID = 13,
  OperationOutcomeCodesCode_Value_MSG_ID_TOO_LONG = 14,
  OperationOutcomeCodesCode_Value_MSG_INVALID_ID = 15,
  OperationOutcomeCodesCode_Value_MSG_JSON_OBJECT = 16,
  OperationOutcomeCodesCode_Value_MSG_LOCAL_FAIL = 17,
  OperationOutcomeCodesCode_Value_MSG_NO_MATCH = 18,
  OperationOutcomeCodesCode_Value_MSG_NO_EXIST = 19,
  OperationOutcomeCodesCode_Value_MSG_NO_MODULE = 20,
  OperationOutcomeCodesCode_Value_MSG_NO_SUMMARY = 21,
  OperationOutcomeCodesCode_Value_MSG_OP_NOT_ALLOWED = 22,
  OperationOutcomeCodesCode_Value_MSG_PARAM_CHAINED = 23,
  OperationOutcomeCodesCode_Value_MSG_PARAM_NO_REPEAT = 24,
  OperationOutcomeCodesCode_Value_MSG_PARAM_UNKNOWN = 25,
  OperationOutcomeCodesCode_Value_MSG_PARAM_INVALID = 26,
  OperationOutcomeCodesCode_Value_MSG_PARAM_MODIFIER_INVALID = 27,
  OperationOutcomeCodesCode_Value_MSG_RESOURCE_EXAMPLE_PROTECTED = 28,
  OperationOutcomeCodesCode_Value_MSG_RESOURCE_ID_FAIL = 29,
  OperationOutcomeCodesCode_Value_MSG_RESOURCE_NOT_ALLOWED = 30,
  OperationOutcomeCodesCode_Value_MSG_RESOURCE_REQUIRED = 31,
  OperationOutcomeCodesCode_Value_MSG_RESOURCE_ID_MISMATCH = 32,
  OperationOutcomeCodesCode_Value_MSG_RESOURCE_ID_MISSING = 33,
  OperationOutcomeCodesCode_Value_MSG_RESOURCE_TYPE_MISMATCH = 34,
  OperationOutcomeCodesCode_Value_MSG_SORT_UNKNOWN = 35,
  OperationOutcomeCodesCode_Value_MSG_TRANSACTION_DUPLICATE_ID = 36,
  OperationOutcomeCodesCode_Value_MSG_TRANSACTION_MISSING_ID = 37,
  OperationOutcomeCodesCode_Value_MSG_UNHANDLED_NODE_TYPE = 38,
  OperationOutcomeCodesCode_Value_MSG_UNKNOWN_CONTENT = 39,
  OperationOutcomeCodesCode_Value_MSG_UNKNOWN_OPERATION = 40,
  OperationOutcomeCodesCode_Value_MSG_UNKNOWN_TYPE = 41,
  OperationOutcomeCodesCode_Value_MSG_UPDATED = 42,
  OperationOutcomeCodesCode_Value_MSG_VERSION_AWARE = 43,
  OperationOutcomeCodesCode_Value_MSG_VERSION_AWARE_CONFLICT = 44,
  OperationOutcomeCodesCode_Value_MSG_VERSION_AWARE_URL = 45,
  OperationOutcomeCodesCode_Value_MSG_WRONG_NS = 46,
  OperationOutcomeCodesCode_Value_SEARCH_MULTIPLE = 47,
  OperationOutcomeCodesCode_Value_UPDATE_MULTIPLE_MATCHES = 48,
  OperationOutcomeCodesCode_Value_DELETE_MULTIPLE_MATCHES = 49,
  OperationOutcomeCodesCode_Value_SEARCH_NONE = 50,
  OperationOutcomeCodesCode_Value_OperationOutcomeCodesCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OperationOutcomeCodesCode_Value_OperationOutcomeCodesCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OperationOutcomeCodesCode_Value_IsValid(int value);
const OperationOutcomeCodesCode_Value OperationOutcomeCodesCode_Value_Value_MIN = OperationOutcomeCodesCode_Value_INVALID_UNINITIALIZED;
const OperationOutcomeCodesCode_Value OperationOutcomeCodesCode_Value_Value_MAX = OperationOutcomeCodesCode_Value_SEARCH_NONE;
const int OperationOutcomeCodesCode_Value_Value_ARRAYSIZE = OperationOutcomeCodesCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* OperationOutcomeCodesCode_Value_descriptor();
inline const ::std::string& OperationOutcomeCodesCode_Value_Name(OperationOutcomeCodesCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    OperationOutcomeCodesCode_Value_descriptor(), value);
}
inline bool OperationOutcomeCodesCode_Value_Parse(
    const ::std::string& name, OperationOutcomeCodesCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OperationOutcomeCodesCode_Value>(
    OperationOutcomeCodesCode_Value_descriptor(), name, value);
}
enum NarrativeStatusCode_Value {
  NarrativeStatusCode_Value_INVALID_UNINITIALIZED = 0,
  NarrativeStatusCode_Value_GENERATED = 1,
  NarrativeStatusCode_Value_EXTENSIONS = 2,
  NarrativeStatusCode_Value_ADDITIONAL = 3,
  NarrativeStatusCode_Value_EMPTY = 4,
  NarrativeStatusCode_Value_NarrativeStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  NarrativeStatusCode_Value_NarrativeStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool NarrativeStatusCode_Value_IsValid(int value);
const NarrativeStatusCode_Value NarrativeStatusCode_Value_Value_MIN = NarrativeStatusCode_Value_INVALID_UNINITIALIZED;
const NarrativeStatusCode_Value NarrativeStatusCode_Value_Value_MAX = NarrativeStatusCode_Value_EMPTY;
const int NarrativeStatusCode_Value_Value_ARRAYSIZE = NarrativeStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* NarrativeStatusCode_Value_descriptor();
inline const ::std::string& NarrativeStatusCode_Value_Name(NarrativeStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    NarrativeStatusCode_Value_descriptor(), value);
}
inline bool NarrativeStatusCode_Value_Parse(
    const ::std::string& name, NarrativeStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NarrativeStatusCode_Value>(
    NarrativeStatusCode_Value_descriptor(), name, value);
}
enum OperationParameterUseCode_Value {
  OperationParameterUseCode_Value_INVALID_UNINITIALIZED = 0,
  OperationParameterUseCode_Value_IN = 1,
  OperationParameterUseCode_Value_OUT = 2,
  OperationParameterUseCode_Value_OperationParameterUseCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OperationParameterUseCode_Value_OperationParameterUseCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OperationParameterUseCode_Value_IsValid(int value);
const OperationParameterUseCode_Value OperationParameterUseCode_Value_Value_MIN = OperationParameterUseCode_Value_INVALID_UNINITIALIZED;
const OperationParameterUseCode_Value OperationParameterUseCode_Value_Value_MAX = OperationParameterUseCode_Value_OUT;
const int OperationParameterUseCode_Value_Value_ARRAYSIZE = OperationParameterUseCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* OperationParameterUseCode_Value_descriptor();
inline const ::std::string& OperationParameterUseCode_Value_Name(OperationParameterUseCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    OperationParameterUseCode_Value_descriptor(), value);
}
inline bool OperationParameterUseCode_Value_Parse(
    const ::std::string& name, OperationParameterUseCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OperationParameterUseCode_Value>(
    OperationParameterUseCode_Value_descriptor(), name, value);
}
enum OrganizationTypeCode_Value {
  OrganizationTypeCode_Value_INVALID_UNINITIALIZED = 0,
  OrganizationTypeCode_Value_PROV = 1,
  OrganizationTypeCode_Value_DEPT = 2,
  OrganizationTypeCode_Value_TEAM = 3,
  OrganizationTypeCode_Value_GOVT = 4,
  OrganizationTypeCode_Value_INS = 5,
  OrganizationTypeCode_Value_EDU = 6,
  OrganizationTypeCode_Value_RELI = 7,
  OrganizationTypeCode_Value_CRS = 8,
  OrganizationTypeCode_Value_CG = 9,
  OrganizationTypeCode_Value_BUS = 10,
  OrganizationTypeCode_Value_OTHER = 11,
  OrganizationTypeCode_Value_OrganizationTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OrganizationTypeCode_Value_OrganizationTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OrganizationTypeCode_Value_IsValid(int value);
const OrganizationTypeCode_Value OrganizationTypeCode_Value_Value_MIN = OrganizationTypeCode_Value_INVALID_UNINITIALIZED;
const OrganizationTypeCode_Value OrganizationTypeCode_Value_Value_MAX = OrganizationTypeCode_Value_OTHER;
const int OrganizationTypeCode_Value_Value_ARRAYSIZE = OrganizationTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* OrganizationTypeCode_Value_descriptor();
inline const ::std::string& OrganizationTypeCode_Value_Name(OrganizationTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    OrganizationTypeCode_Value_descriptor(), value);
}
inline bool OrganizationTypeCode_Value_Parse(
    const ::std::string& name, OrganizationTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OrganizationTypeCode_Value>(
    OrganizationTypeCode_Value_descriptor(), name, value);
}
enum DeviceComponentParameterGroupCode_Value {
  DeviceComponentParameterGroupCode_Value_INVALID_UNINITIALIZED = 0,
  DeviceComponentParameterGroupCode_Value_HAEMODYNAMIC = 1,
  DeviceComponentParameterGroupCode_Value_ECG = 2,
  DeviceComponentParameterGroupCode_Value_RESPIRATORY = 3,
  DeviceComponentParameterGroupCode_Value_VENTILATION = 4,
  DeviceComponentParameterGroupCode_Value_NEUROLOGICAL = 5,
  DeviceComponentParameterGroupCode_Value_DRUG_DELIVERY = 6,
  DeviceComponentParameterGroupCode_Value_FLUID_CHEMISTRY = 7,
  DeviceComponentParameterGroupCode_Value_BLOOD_CHEMISTRY = 8,
  DeviceComponentParameterGroupCode_Value_MISCELLANEOUS = 9,
  DeviceComponentParameterGroupCode_Value_DeviceComponentParameterGroupCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DeviceComponentParameterGroupCode_Value_DeviceComponentParameterGroupCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DeviceComponentParameterGroupCode_Value_IsValid(int value);
const DeviceComponentParameterGroupCode_Value DeviceComponentParameterGroupCode_Value_Value_MIN = DeviceComponentParameterGroupCode_Value_INVALID_UNINITIALIZED;
const DeviceComponentParameterGroupCode_Value DeviceComponentParameterGroupCode_Value_Value_MAX = DeviceComponentParameterGroupCode_Value_MISCELLANEOUS;
const int DeviceComponentParameterGroupCode_Value_Value_ARRAYSIZE = DeviceComponentParameterGroupCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* DeviceComponentParameterGroupCode_Value_descriptor();
inline const ::std::string& DeviceComponentParameterGroupCode_Value_Name(DeviceComponentParameterGroupCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    DeviceComponentParameterGroupCode_Value_descriptor(), value);
}
inline bool DeviceComponentParameterGroupCode_Value_Parse(
    const ::std::string& name, DeviceComponentParameterGroupCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DeviceComponentParameterGroupCode_Value>(
    DeviceComponentParameterGroupCode_Value_descriptor(), name, value);
}
enum ParticipantRequiredCode_Value {
  ParticipantRequiredCode_Value_INVALID_UNINITIALIZED = 0,
  ParticipantRequiredCode_Value_REQUIRED = 1,
  ParticipantRequiredCode_Value_OPTIONAL = 2,
  ParticipantRequiredCode_Value_INFORMATION_ONLY = 3,
  ParticipantRequiredCode_Value_ParticipantRequiredCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ParticipantRequiredCode_Value_ParticipantRequiredCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ParticipantRequiredCode_Value_IsValid(int value);
const ParticipantRequiredCode_Value ParticipantRequiredCode_Value_Value_MIN = ParticipantRequiredCode_Value_INVALID_UNINITIALIZED;
const ParticipantRequiredCode_Value ParticipantRequiredCode_Value_Value_MAX = ParticipantRequiredCode_Value_INFORMATION_ONLY;
const int ParticipantRequiredCode_Value_Value_ARRAYSIZE = ParticipantRequiredCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ParticipantRequiredCode_Value_descriptor();
inline const ::std::string& ParticipantRequiredCode_Value_Name(ParticipantRequiredCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ParticipantRequiredCode_Value_descriptor(), value);
}
inline bool ParticipantRequiredCode_Value_Parse(
    const ::std::string& name, ParticipantRequiredCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ParticipantRequiredCode_Value>(
    ParticipantRequiredCode_Value_descriptor(), name, value);
}
enum ParticipationStatusCode_Value {
  ParticipationStatusCode_Value_INVALID_UNINITIALIZED = 0,
  ParticipationStatusCode_Value_ACCEPTED = 1,
  ParticipationStatusCode_Value_DECLINED = 2,
  ParticipationStatusCode_Value_TENTATIVE = 3,
  ParticipationStatusCode_Value_NEEDS_ACTION = 4,
  ParticipationStatusCode_Value_ParticipationStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ParticipationStatusCode_Value_ParticipationStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ParticipationStatusCode_Value_IsValid(int value);
const ParticipationStatusCode_Value ParticipationStatusCode_Value_Value_MIN = ParticipationStatusCode_Value_INVALID_UNINITIALIZED;
const ParticipationStatusCode_Value ParticipationStatusCode_Value_Value_MAX = ParticipationStatusCode_Value_NEEDS_ACTION;
const int ParticipationStatusCode_Value_Value_ARRAYSIZE = ParticipationStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ParticipationStatusCode_Value_descriptor();
inline const ::std::string& ParticipationStatusCode_Value_Name(ParticipationStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ParticipationStatusCode_Value_descriptor(), value);
}
inline bool ParticipationStatusCode_Value_Parse(
    const ::std::string& name, ParticipationStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ParticipationStatusCode_Value>(
    ParticipationStatusCode_Value_descriptor(), name, value);
}
enum PlanDefinitionTypeCode_Value {
  PlanDefinitionTypeCode_Value_INVALID_UNINITIALIZED = 0,
  PlanDefinitionTypeCode_Value_ORDER_SET = 1,
  PlanDefinitionTypeCode_Value_PROTOCOL = 2,
  PlanDefinitionTypeCode_Value_ECA_RULE = 3,
  PlanDefinitionTypeCode_Value_PlanDefinitionTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlanDefinitionTypeCode_Value_PlanDefinitionTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlanDefinitionTypeCode_Value_IsValid(int value);
const PlanDefinitionTypeCode_Value PlanDefinitionTypeCode_Value_Value_MIN = PlanDefinitionTypeCode_Value_INVALID_UNINITIALIZED;
const PlanDefinitionTypeCode_Value PlanDefinitionTypeCode_Value_Value_MAX = PlanDefinitionTypeCode_Value_ECA_RULE;
const int PlanDefinitionTypeCode_Value_Value_ARRAYSIZE = PlanDefinitionTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlanDefinitionTypeCode_Value_descriptor();
inline const ::std::string& PlanDefinitionTypeCode_Value_Name(PlanDefinitionTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlanDefinitionTypeCode_Value_descriptor(), value);
}
inline bool PlanDefinitionTypeCode_Value_Parse(
    const ::std::string& name, PlanDefinitionTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlanDefinitionTypeCode_Value>(
    PlanDefinitionTypeCode_Value_descriptor(), name, value);
}
enum PostalAddressUseTypeCode_Value {
  PostalAddressUseTypeCode_Value_INVALID_UNINITIALIZED = 0,
  PostalAddressUseTypeCode_Value_BAD_ADDRESS = 1,
  PostalAddressUseTypeCode_Value_CONFIDENTIAL_ADDRESS = 2,
  PostalAddressUseTypeCode_Value_PRIMARY_HOME = 3,
  PostalAddressUseTypeCode_Value_VACATION_HOME = 4,
  PostalAddressUseTypeCode_Value_DIRECT = 5,
  PostalAddressUseTypeCode_Value_PUBLIC = 6,
  PostalAddressUseTypeCode_Value_PHYSICAL_VISIT_ADDRESS = 7,
  PostalAddressUseTypeCode_Value_POSTAL_ADDRESS = 8,
  PostalAddressUseTypeCode_Value_PostalAddressUseTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PostalAddressUseTypeCode_Value_PostalAddressUseTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PostalAddressUseTypeCode_Value_IsValid(int value);
const PostalAddressUseTypeCode_Value PostalAddressUseTypeCode_Value_Value_MIN = PostalAddressUseTypeCode_Value_INVALID_UNINITIALIZED;
const PostalAddressUseTypeCode_Value PostalAddressUseTypeCode_Value_Value_MAX = PostalAddressUseTypeCode_Value_POSTAL_ADDRESS;
const int PostalAddressUseTypeCode_Value_Value_ARRAYSIZE = PostalAddressUseTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* PostalAddressUseTypeCode_Value_descriptor();
inline const ::std::string& PostalAddressUseTypeCode_Value_Name(PostalAddressUseTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    PostalAddressUseTypeCode_Value_descriptor(), value);
}
inline bool PostalAddressUseTypeCode_Value_Parse(
    const ::std::string& name, PostalAddressUseTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PostalAddressUseTypeCode_Value>(
    PostalAddressUseTypeCode_Value_descriptor(), name, value);
}
enum PractitionerRoleCode_Value {
  PractitionerRoleCode_Value_INVALID_UNINITIALIZED = 0,
  PractitionerRoleCode_Value_DOCTOR = 1,
  PractitionerRoleCode_Value_NURSE = 2,
  PractitionerRoleCode_Value_PHARMACIST = 3,
  PractitionerRoleCode_Value_RESEARCHER = 4,
  PractitionerRoleCode_Value_TEACHER = 5,
  PractitionerRoleCode_Value_ICT = 6,
  PractitionerRoleCode_Value_PractitionerRoleCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PractitionerRoleCode_Value_PractitionerRoleCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PractitionerRoleCode_Value_IsValid(int value);
const PractitionerRoleCode_Value PractitionerRoleCode_Value_Value_MIN = PractitionerRoleCode_Value_INVALID_UNINITIALIZED;
const PractitionerRoleCode_Value PractitionerRoleCode_Value_Value_MAX = PractitionerRoleCode_Value_ICT;
const int PractitionerRoleCode_Value_Value_ARRAYSIZE = PractitionerRoleCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* PractitionerRoleCode_Value_descriptor();
inline const ::std::string& PractitionerRoleCode_Value_Name(PractitionerRoleCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    PractitionerRoleCode_Value_descriptor(), value);
}
inline bool PractitionerRoleCode_Value_Parse(
    const ::std::string& name, PractitionerRoleCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PractitionerRoleCode_Value>(
    PractitionerRoleCode_Value_descriptor(), name, value);
}
enum PractitionerSpecialtyCode_Value {
  PractitionerSpecialtyCode_Value_INVALID_UNINITIALIZED = 0,
  PractitionerSpecialtyCode_Value_CARDIO = 1,
  PractitionerSpecialtyCode_Value_DENT = 2,
  PractitionerSpecialtyCode_Value_DIETARY = 3,
  PractitionerSpecialtyCode_Value_MIDW = 4,
  PractitionerSpecialtyCode_Value_SYSARCH = 5,
  PractitionerSpecialtyCode_Value_PractitionerSpecialtyCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PractitionerSpecialtyCode_Value_PractitionerSpecialtyCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PractitionerSpecialtyCode_Value_IsValid(int value);
const PractitionerSpecialtyCode_Value PractitionerSpecialtyCode_Value_Value_MIN = PractitionerSpecialtyCode_Value_INVALID_UNINITIALIZED;
const PractitionerSpecialtyCode_Value PractitionerSpecialtyCode_Value_Value_MAX = PractitionerSpecialtyCode_Value_SYSARCH;
const int PractitionerSpecialtyCode_Value_Value_ARRAYSIZE = PractitionerSpecialtyCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* PractitionerSpecialtyCode_Value_descriptor();
inline const ::std::string& PractitionerSpecialtyCode_Value_Name(PractitionerSpecialtyCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    PractitionerSpecialtyCode_Value_descriptor(), value);
}
inline bool PractitionerSpecialtyCode_Value_Parse(
    const ::std::string& name, PractitionerSpecialtyCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PractitionerSpecialtyCode_Value>(
    PractitionerSpecialtyCode_Value_descriptor(), name, value);
}
enum ProcedureProgressStatusCodesCode_Value {
  ProcedureProgressStatusCodesCode_Value_INVALID_UNINITIALIZED = 0,
  ProcedureProgressStatusCodesCode_Value_IN_OPERATING_ROOM = 1,
  ProcedureProgressStatusCodesCode_Value_PREPARED = 2,
  ProcedureProgressStatusCodesCode_Value_ANESTHESIA_INDUCED = 3,
  ProcedureProgressStatusCodesCode_Value_OPEN_INCISION = 4,
  ProcedureProgressStatusCodesCode_Value_CLOSED_INCISION = 5,
  ProcedureProgressStatusCodesCode_Value_IN_RECOVERY_ROOM = 6,
  ProcedureProgressStatusCodesCode_Value_ProcedureProgressStatusCodesCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ProcedureProgressStatusCodesCode_Value_ProcedureProgressStatusCodesCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ProcedureProgressStatusCodesCode_Value_IsValid(int value);
const ProcedureProgressStatusCodesCode_Value ProcedureProgressStatusCodesCode_Value_Value_MIN = ProcedureProgressStatusCodesCode_Value_INVALID_UNINITIALIZED;
const ProcedureProgressStatusCodesCode_Value ProcedureProgressStatusCodesCode_Value_Value_MAX = ProcedureProgressStatusCodesCode_Value_IN_RECOVERY_ROOM;
const int ProcedureProgressStatusCodesCode_Value_Value_ARRAYSIZE = ProcedureProgressStatusCodesCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProcedureProgressStatusCodesCode_Value_descriptor();
inline const ::std::string& ProcedureProgressStatusCodesCode_Value_Name(ProcedureProgressStatusCodesCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProcedureProgressStatusCodesCode_Value_descriptor(), value);
}
inline bool ProcedureProgressStatusCodesCode_Value_Parse(
    const ::std::string& name, ProcedureProgressStatusCodesCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProcedureProgressStatusCodesCode_Value>(
    ProcedureProgressStatusCodesCode_Value_descriptor(), name, value);
}
enum ProvenanceEntityRoleCode_Value {
  ProvenanceEntityRoleCode_Value_INVALID_UNINITIALIZED = 0,
  ProvenanceEntityRoleCode_Value_DERIVATION = 1,
  ProvenanceEntityRoleCode_Value_REVISION = 2,
  ProvenanceEntityRoleCode_Value_QUOTATION = 3,
  ProvenanceEntityRoleCode_Value_SOURCE = 4,
  ProvenanceEntityRoleCode_Value_REMOVAL = 5,
  ProvenanceEntityRoleCode_Value_ProvenanceEntityRoleCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ProvenanceEntityRoleCode_Value_ProvenanceEntityRoleCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ProvenanceEntityRoleCode_Value_IsValid(int value);
const ProvenanceEntityRoleCode_Value ProvenanceEntityRoleCode_Value_Value_MIN = ProvenanceEntityRoleCode_Value_INVALID_UNINITIALIZED;
const ProvenanceEntityRoleCode_Value ProvenanceEntityRoleCode_Value_Value_MAX = ProvenanceEntityRoleCode_Value_REMOVAL;
const int ProvenanceEntityRoleCode_Value_Value_ARRAYSIZE = ProvenanceEntityRoleCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProvenanceEntityRoleCode_Value_descriptor();
inline const ::std::string& ProvenanceEntityRoleCode_Value_Name(ProvenanceEntityRoleCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProvenanceEntityRoleCode_Value_descriptor(), value);
}
inline bool ProvenanceEntityRoleCode_Value_Parse(
    const ::std::string& name, ProvenanceEntityRoleCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProvenanceEntityRoleCode_Value>(
    ProvenanceEntityRoleCode_Value_descriptor(), name, value);
}
enum PublicationStatusCode_Value {
  PublicationStatusCode_Value_INVALID_UNINITIALIZED = 0,
  PublicationStatusCode_Value_DRAFT = 1,
  PublicationStatusCode_Value_ACTIVE = 2,
  PublicationStatusCode_Value_RETIRED = 3,
  PublicationStatusCode_Value_UNKNOWN = 4,
  PublicationStatusCode_Value_PublicationStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PublicationStatusCode_Value_PublicationStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PublicationStatusCode_Value_IsValid(int value);
const PublicationStatusCode_Value PublicationStatusCode_Value_Value_MIN = PublicationStatusCode_Value_INVALID_UNINITIALIZED;
const PublicationStatusCode_Value PublicationStatusCode_Value_Value_MAX = PublicationStatusCode_Value_UNKNOWN;
const int PublicationStatusCode_Value_Value_ARRAYSIZE = PublicationStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* PublicationStatusCode_Value_descriptor();
inline const ::std::string& PublicationStatusCode_Value_Name(PublicationStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    PublicationStatusCode_Value_descriptor(), value);
}
inline bool PublicationStatusCode_Value_Parse(
    const ::std::string& name, PublicationStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PublicationStatusCode_Value>(
    PublicationStatusCode_Value_descriptor(), name, value);
}
enum QualityTypeCode_Value {
  QualityTypeCode_Value_INVALID_UNINITIALIZED = 0,
  QualityTypeCode_Value_INDEL = 1,
  QualityTypeCode_Value_SNP = 2,
  QualityTypeCode_Value_UNKNOWN = 3,
  QualityTypeCode_Value_QualityTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  QualityTypeCode_Value_QualityTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool QualityTypeCode_Value_IsValid(int value);
const QualityTypeCode_Value QualityTypeCode_Value_Value_MIN = QualityTypeCode_Value_INVALID_UNINITIALIZED;
const QualityTypeCode_Value QualityTypeCode_Value_Value_MAX = QualityTypeCode_Value_UNKNOWN;
const int QualityTypeCode_Value_Value_ARRAYSIZE = QualityTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* QualityTypeCode_Value_descriptor();
inline const ::std::string& QualityTypeCode_Value_Name(QualityTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    QualityTypeCode_Value_descriptor(), value);
}
inline bool QualityTypeCode_Value_Parse(
    const ::std::string& name, QualityTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QualityTypeCode_Value>(
    QualityTypeCode_Value_descriptor(), name, value);
}
enum MaxOccursCode_Value {
  MaxOccursCode_Value_INVALID_UNINITIALIZED = 0,
  MaxOccursCode_Value_MAX = 1,
  MaxOccursCode_Value_MaxOccursCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MaxOccursCode_Value_MaxOccursCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MaxOccursCode_Value_IsValid(int value);
const MaxOccursCode_Value MaxOccursCode_Value_Value_MIN = MaxOccursCode_Value_INVALID_UNINITIALIZED;
const MaxOccursCode_Value MaxOccursCode_Value_Value_MAX = MaxOccursCode_Value_MAX;
const int MaxOccursCode_Value_Value_ARRAYSIZE = MaxOccursCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* MaxOccursCode_Value_descriptor();
inline const ::std::string& MaxOccursCode_Value_Name(MaxOccursCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    MaxOccursCode_Value_descriptor(), value);
}
inline bool MaxOccursCode_Value_Parse(
    const ::std::string& name, MaxOccursCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MaxOccursCode_Value>(
    MaxOccursCode_Value_descriptor(), name, value);
}
enum QuestionnaireResponseStatusCode_Value {
  QuestionnaireResponseStatusCode_Value_INVALID_UNINITIALIZED = 0,
  QuestionnaireResponseStatusCode_Value_IN_PROGRESS = 1,
  QuestionnaireResponseStatusCode_Value_COMPLETED = 2,
  QuestionnaireResponseStatusCode_Value_AMENDED = 3,
  QuestionnaireResponseStatusCode_Value_ENTERED_IN_ERROR = 4,
  QuestionnaireResponseStatusCode_Value_STOPPED = 5,
  QuestionnaireResponseStatusCode_Value_QuestionnaireResponseStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  QuestionnaireResponseStatusCode_Value_QuestionnaireResponseStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool QuestionnaireResponseStatusCode_Value_IsValid(int value);
const QuestionnaireResponseStatusCode_Value QuestionnaireResponseStatusCode_Value_Value_MIN = QuestionnaireResponseStatusCode_Value_INVALID_UNINITIALIZED;
const QuestionnaireResponseStatusCode_Value QuestionnaireResponseStatusCode_Value_Value_MAX = QuestionnaireResponseStatusCode_Value_STOPPED;
const int QuestionnaireResponseStatusCode_Value_Value_ARRAYSIZE = QuestionnaireResponseStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* QuestionnaireResponseStatusCode_Value_descriptor();
inline const ::std::string& QuestionnaireResponseStatusCode_Value_Name(QuestionnaireResponseStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    QuestionnaireResponseStatusCode_Value_descriptor(), value);
}
inline bool QuestionnaireResponseStatusCode_Value_Parse(
    const ::std::string& name, QuestionnaireResponseStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QuestionnaireResponseStatusCode_Value>(
    QuestionnaireResponseStatusCode_Value_descriptor(), name, value);
}
enum QuestionnaireTextCategoriesCode_Value {
  QuestionnaireTextCategoriesCode_Value_INVALID_UNINITIALIZED = 0,
  QuestionnaireTextCategoriesCode_Value_INSTRUCTIONS = 1,
  QuestionnaireTextCategoriesCode_Value_SECURITY = 2,
  QuestionnaireTextCategoriesCode_Value_QuestionnaireTextCategoriesCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  QuestionnaireTextCategoriesCode_Value_QuestionnaireTextCategoriesCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool QuestionnaireTextCategoriesCode_Value_IsValid(int value);
const QuestionnaireTextCategoriesCode_Value QuestionnaireTextCategoriesCode_Value_Value_MIN = QuestionnaireTextCategoriesCode_Value_INVALID_UNINITIALIZED;
const QuestionnaireTextCategoriesCode_Value QuestionnaireTextCategoriesCode_Value_Value_MAX = QuestionnaireTextCategoriesCode_Value_SECURITY;
const int QuestionnaireTextCategoriesCode_Value_Value_ARRAYSIZE = QuestionnaireTextCategoriesCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* QuestionnaireTextCategoriesCode_Value_descriptor();
inline const ::std::string& QuestionnaireTextCategoriesCode_Value_Name(QuestionnaireTextCategoriesCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    QuestionnaireTextCategoriesCode_Value_descriptor(), value);
}
inline bool QuestionnaireTextCategoriesCode_Value_Parse(
    const ::std::string& name, QuestionnaireTextCategoriesCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QuestionnaireTextCategoriesCode_Value>(
    QuestionnaireTextCategoriesCode_Value_descriptor(), name, value);
}
enum QuestionnaireItemUIControlCodesCode_Value {
  QuestionnaireItemUIControlCodesCode_Value_INVALID_UNINITIALIZED = 0,
  QuestionnaireItemUIControlCodesCode_Value_LIST = 1,
  QuestionnaireItemUIControlCodesCode_Value_TABLE = 2,
  QuestionnaireItemUIControlCodesCode_Value_HEADER = 3,
  QuestionnaireItemUIControlCodesCode_Value_FOOTER = 4,
  QuestionnaireItemUIControlCodesCode_Value_INLINE = 5,
  QuestionnaireItemUIControlCodesCode_Value_PROMPT = 6,
  QuestionnaireItemUIControlCodesCode_Value_UNIT = 7,
  QuestionnaireItemUIControlCodesCode_Value_LOWER = 8,
  QuestionnaireItemUIControlCodesCode_Value_UPPER = 9,
  QuestionnaireItemUIControlCodesCode_Value_FLYOVER = 10,
  QuestionnaireItemUIControlCodesCode_Value_HELP = 11,
  QuestionnaireItemUIControlCodesCode_Value_AUTOCOMPLETE = 12,
  QuestionnaireItemUIControlCodesCode_Value_DROP_DOWN = 13,
  QuestionnaireItemUIControlCodesCode_Value_CHECK_BOX = 14,
  QuestionnaireItemUIControlCodesCode_Value_LOOKUP = 15,
  QuestionnaireItemUIControlCodesCode_Value_RADIO_BUTTON = 16,
  QuestionnaireItemUIControlCodesCode_Value_SLIDER = 17,
  QuestionnaireItemUIControlCodesCode_Value_SPINNER = 18,
  QuestionnaireItemUIControlCodesCode_Value_TEXT_BOX = 19,
  QuestionnaireItemUIControlCodesCode_Value_QuestionnaireItemUIControlCodesCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  QuestionnaireItemUIControlCodesCode_Value_QuestionnaireItemUIControlCodesCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool QuestionnaireItemUIControlCodesCode_Value_IsValid(int value);
const QuestionnaireItemUIControlCodesCode_Value QuestionnaireItemUIControlCodesCode_Value_Value_MIN = QuestionnaireItemUIControlCodesCode_Value_INVALID_UNINITIALIZED;
const QuestionnaireItemUIControlCodesCode_Value QuestionnaireItemUIControlCodesCode_Value_Value_MAX = QuestionnaireItemUIControlCodesCode_Value_TEXT_BOX;
const int QuestionnaireItemUIControlCodesCode_Value_Value_ARRAYSIZE = QuestionnaireItemUIControlCodesCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* QuestionnaireItemUIControlCodesCode_Value_descriptor();
inline const ::std::string& QuestionnaireItemUIControlCodesCode_Value_Name(QuestionnaireItemUIControlCodesCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    QuestionnaireItemUIControlCodesCode_Value_descriptor(), value);
}
inline bool QuestionnaireItemUIControlCodesCode_Value_Parse(
    const ::std::string& name, QuestionnaireItemUIControlCodesCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QuestionnaireItemUIControlCodesCode_Value>(
    QuestionnaireItemUIControlCodesCode_Value_descriptor(), name, value);
}
enum QuestionnaireItemUsageModeCode_Value {
  QuestionnaireItemUsageModeCode_Value_INVALID_UNINITIALIZED = 0,
  QuestionnaireItemUsageModeCode_Value_CAPTURE_DISPLAY = 1,
  QuestionnaireItemUsageModeCode_Value_CAPTURE = 2,
  QuestionnaireItemUsageModeCode_Value_DISPLAY = 3,
  QuestionnaireItemUsageModeCode_Value_DISPLAY_NON_EMPTY = 4,
  QuestionnaireItemUsageModeCode_Value_CAPTURE_DISPLAY_NON_EMPTY = 5,
  QuestionnaireItemUsageModeCode_Value_QuestionnaireItemUsageModeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  QuestionnaireItemUsageModeCode_Value_QuestionnaireItemUsageModeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool QuestionnaireItemUsageModeCode_Value_IsValid(int value);
const QuestionnaireItemUsageModeCode_Value QuestionnaireItemUsageModeCode_Value_Value_MIN = QuestionnaireItemUsageModeCode_Value_INVALID_UNINITIALIZED;
const QuestionnaireItemUsageModeCode_Value QuestionnaireItemUsageModeCode_Value_Value_MAX = QuestionnaireItemUsageModeCode_Value_CAPTURE_DISPLAY_NON_EMPTY;
const int QuestionnaireItemUsageModeCode_Value_Value_ARRAYSIZE = QuestionnaireItemUsageModeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* QuestionnaireItemUsageModeCode_Value_descriptor();
inline const ::std::string& QuestionnaireItemUsageModeCode_Value_Name(QuestionnaireItemUsageModeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    QuestionnaireItemUsageModeCode_Value_descriptor(), value);
}
inline bool QuestionnaireItemUsageModeCode_Value_Parse(
    const ::std::string& name, QuestionnaireItemUsageModeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QuestionnaireItemUsageModeCode_Value>(
    QuestionnaireItemUsageModeCode_Value_descriptor(), name, value);
}
enum AllergyIntoleranceCertaintyCode_Value {
  AllergyIntoleranceCertaintyCode_Value_INVALID_UNINITIALIZED = 0,
  AllergyIntoleranceCertaintyCode_Value_UNLIKELY = 1,
  AllergyIntoleranceCertaintyCode_Value_LIKELY = 2,
  AllergyIntoleranceCertaintyCode_Value_CONFIRMED = 3,
  AllergyIntoleranceCertaintyCode_Value_UNKNOWN = 4,
  AllergyIntoleranceCertaintyCode_Value_AllergyIntoleranceCertaintyCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AllergyIntoleranceCertaintyCode_Value_AllergyIntoleranceCertaintyCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AllergyIntoleranceCertaintyCode_Value_IsValid(int value);
const AllergyIntoleranceCertaintyCode_Value AllergyIntoleranceCertaintyCode_Value_Value_MIN = AllergyIntoleranceCertaintyCode_Value_INVALID_UNINITIALIZED;
const AllergyIntoleranceCertaintyCode_Value AllergyIntoleranceCertaintyCode_Value_Value_MAX = AllergyIntoleranceCertaintyCode_Value_UNKNOWN;
const int AllergyIntoleranceCertaintyCode_Value_Value_ARRAYSIZE = AllergyIntoleranceCertaintyCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* AllergyIntoleranceCertaintyCode_Value_descriptor();
inline const ::std::string& AllergyIntoleranceCertaintyCode_Value_Name(AllergyIntoleranceCertaintyCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    AllergyIntoleranceCertaintyCode_Value_descriptor(), value);
}
inline bool AllergyIntoleranceCertaintyCode_Value_Parse(
    const ::std::string& name, AllergyIntoleranceCertaintyCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AllergyIntoleranceCertaintyCode_Value>(
    AllergyIntoleranceCertaintyCode_Value_descriptor(), name, value);
}
enum AllergyIntoleranceSeverityCode_Value {
  AllergyIntoleranceSeverityCode_Value_INVALID_UNINITIALIZED = 0,
  AllergyIntoleranceSeverityCode_Value_MILD = 1,
  AllergyIntoleranceSeverityCode_Value_MODERATE = 2,
  AllergyIntoleranceSeverityCode_Value_SEVERE = 3,
  AllergyIntoleranceSeverityCode_Value_AllergyIntoleranceSeverityCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AllergyIntoleranceSeverityCode_Value_AllergyIntoleranceSeverityCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AllergyIntoleranceSeverityCode_Value_IsValid(int value);
const AllergyIntoleranceSeverityCode_Value AllergyIntoleranceSeverityCode_Value_Value_MIN = AllergyIntoleranceSeverityCode_Value_INVALID_UNINITIALIZED;
const AllergyIntoleranceSeverityCode_Value AllergyIntoleranceSeverityCode_Value_Value_MAX = AllergyIntoleranceSeverityCode_Value_SEVERE;
const int AllergyIntoleranceSeverityCode_Value_Value_ARRAYSIZE = AllergyIntoleranceSeverityCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* AllergyIntoleranceSeverityCode_Value_descriptor();
inline const ::std::string& AllergyIntoleranceSeverityCode_Value_Name(AllergyIntoleranceSeverityCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    AllergyIntoleranceSeverityCode_Value_descriptor(), value);
}
inline bool AllergyIntoleranceSeverityCode_Value_Parse(
    const ::std::string& name, AllergyIntoleranceSeverityCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AllergyIntoleranceSeverityCode_Value>(
    AllergyIntoleranceSeverityCode_Value_descriptor(), name, value);
}
enum ReasonMedicationGivenCodesCode_Value {
  ReasonMedicationGivenCodesCode_Value_INVALID_UNINITIALIZED = 0,
  ReasonMedicationGivenCodesCode_Value_A = 1,
  ReasonMedicationGivenCodesCode_Value_B = 2,
  ReasonMedicationGivenCodesCode_Value_C = 3,
  ReasonMedicationGivenCodesCode_Value_ReasonMedicationGivenCodesCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ReasonMedicationGivenCodesCode_Value_ReasonMedicationGivenCodesCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ReasonMedicationGivenCodesCode_Value_IsValid(int value);
const ReasonMedicationGivenCodesCode_Value ReasonMedicationGivenCodesCode_Value_Value_MIN = ReasonMedicationGivenCodesCode_Value_INVALID_UNINITIALIZED;
const ReasonMedicationGivenCodesCode_Value ReasonMedicationGivenCodesCode_Value_Value_MAX = ReasonMedicationGivenCodesCode_Value_C;
const int ReasonMedicationGivenCodesCode_Value_Value_ARRAYSIZE = ReasonMedicationGivenCodesCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReasonMedicationGivenCodesCode_Value_descriptor();
inline const ::std::string& ReasonMedicationGivenCodesCode_Value_Name(ReasonMedicationGivenCodesCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReasonMedicationGivenCodesCode_Value_descriptor(), value);
}
inline bool ReasonMedicationGivenCodesCode_Value_Parse(
    const ::std::string& name, ReasonMedicationGivenCodesCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReasonMedicationGivenCodesCode_Value>(
    ReasonMedicationGivenCodesCode_Value_descriptor(), name, value);
}
enum ReferenceHandlingPolicyCode_Value {
  ReferenceHandlingPolicyCode_Value_INVALID_UNINITIALIZED = 0,
  ReferenceHandlingPolicyCode_Value_LITERAL = 1,
  ReferenceHandlingPolicyCode_Value_LOGICAL = 2,
  ReferenceHandlingPolicyCode_Value_RESOLVES = 3,
  ReferenceHandlingPolicyCode_Value_ENFORCED = 4,
  ReferenceHandlingPolicyCode_Value_LOCAL = 5,
  ReferenceHandlingPolicyCode_Value_ReferenceHandlingPolicyCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ReferenceHandlingPolicyCode_Value_ReferenceHandlingPolicyCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ReferenceHandlingPolicyCode_Value_IsValid(int value);
const ReferenceHandlingPolicyCode_Value ReferenceHandlingPolicyCode_Value_Value_MIN = ReferenceHandlingPolicyCode_Value_INVALID_UNINITIALIZED;
const ReferenceHandlingPolicyCode_Value ReferenceHandlingPolicyCode_Value_Value_MAX = ReferenceHandlingPolicyCode_Value_LOCAL;
const int ReferenceHandlingPolicyCode_Value_Value_ARRAYSIZE = ReferenceHandlingPolicyCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReferenceHandlingPolicyCode_Value_descriptor();
inline const ::std::string& ReferenceHandlingPolicyCode_Value_Name(ReferenceHandlingPolicyCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReferenceHandlingPolicyCode_Value_descriptor(), value);
}
inline bool ReferenceHandlingPolicyCode_Value_Parse(
    const ::std::string& name, ReferenceHandlingPolicyCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReferenceHandlingPolicyCode_Value>(
    ReferenceHandlingPolicyCode_Value_descriptor(), name, value);
}
enum RelatedArtifactTypeCode_Value {
  RelatedArtifactTypeCode_Value_INVALID_UNINITIALIZED = 0,
  RelatedArtifactTypeCode_Value_DOCUMENTATION = 1,
  RelatedArtifactTypeCode_Value_JUSTIFICATION = 2,
  RelatedArtifactTypeCode_Value_CITATION = 3,
  RelatedArtifactTypeCode_Value_PREDECESSOR = 4,
  RelatedArtifactTypeCode_Value_SUCCESSOR = 5,
  RelatedArtifactTypeCode_Value_DERIVED_FROM = 6,
  RelatedArtifactTypeCode_Value_DEPENDS_ON = 7,
  RelatedArtifactTypeCode_Value_COMPOSED_OF = 8,
  RelatedArtifactTypeCode_Value_RelatedArtifactTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RelatedArtifactTypeCode_Value_RelatedArtifactTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RelatedArtifactTypeCode_Value_IsValid(int value);
const RelatedArtifactTypeCode_Value RelatedArtifactTypeCode_Value_Value_MIN = RelatedArtifactTypeCode_Value_INVALID_UNINITIALIZED;
const RelatedArtifactTypeCode_Value RelatedArtifactTypeCode_Value_Value_MAX = RelatedArtifactTypeCode_Value_COMPOSED_OF;
const int RelatedArtifactTypeCode_Value_Value_ARRAYSIZE = RelatedArtifactTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* RelatedArtifactTypeCode_Value_descriptor();
inline const ::std::string& RelatedArtifactTypeCode_Value_Name(RelatedArtifactTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    RelatedArtifactTypeCode_Value_descriptor(), value);
}
inline bool RelatedArtifactTypeCode_Value_Parse(
    const ::std::string& name, RelatedArtifactTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RelatedArtifactTypeCode_Value>(
    RelatedArtifactTypeCode_Value_descriptor(), name, value);
}
enum ObservationReferenceRangeMeaningCodesCode_Value {
  ObservationReferenceRangeMeaningCodesCode_Value_INVALID_UNINITIALIZED = 0,
  ObservationReferenceRangeMeaningCodesCode_Value_NORMAL = 1,
  ObservationReferenceRangeMeaningCodesCode_Value_RECOMMENDED = 2,
  ObservationReferenceRangeMeaningCodesCode_Value_TREATMENT = 3,
  ObservationReferenceRangeMeaningCodesCode_Value_THERAPEUTIC = 4,
  ObservationReferenceRangeMeaningCodesCode_Value_PRE = 5,
  ObservationReferenceRangeMeaningCodesCode_Value_POST = 6,
  ObservationReferenceRangeMeaningCodesCode_Value_PRE_PUBERTY = 7,
  ObservationReferenceRangeMeaningCodesCode_Value_FOLLICULAR = 8,
  ObservationReferenceRangeMeaningCodesCode_Value_MIDCYCLE = 9,
  ObservationReferenceRangeMeaningCodesCode_Value_LUTEAL = 10,
  ObservationReferenceRangeMeaningCodesCode_Value_POSTMEOPAUSAL = 11,
  ObservationReferenceRangeMeaningCodesCode_Value_ObservationReferenceRangeMeaningCodesCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ObservationReferenceRangeMeaningCodesCode_Value_ObservationReferenceRangeMeaningCodesCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ObservationReferenceRangeMeaningCodesCode_Value_IsValid(int value);
const ObservationReferenceRangeMeaningCodesCode_Value ObservationReferenceRangeMeaningCodesCode_Value_Value_MIN = ObservationReferenceRangeMeaningCodesCode_Value_INVALID_UNINITIALIZED;
const ObservationReferenceRangeMeaningCodesCode_Value ObservationReferenceRangeMeaningCodesCode_Value_Value_MAX = ObservationReferenceRangeMeaningCodesCode_Value_POSTMEOPAUSAL;
const int ObservationReferenceRangeMeaningCodesCode_Value_Value_ARRAYSIZE = ObservationReferenceRangeMeaningCodesCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ObservationReferenceRangeMeaningCodesCode_Value_descriptor();
inline const ::std::string& ObservationReferenceRangeMeaningCodesCode_Value_Name(ObservationReferenceRangeMeaningCodesCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ObservationReferenceRangeMeaningCodesCode_Value_descriptor(), value);
}
inline bool ObservationReferenceRangeMeaningCodesCode_Value_Parse(
    const ::std::string& name, ObservationReferenceRangeMeaningCodesCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ObservationReferenceRangeMeaningCodesCode_Value>(
    ObservationReferenceRangeMeaningCodesCode_Value_descriptor(), name, value);
}
enum TestReportActionResultCode_Value {
  TestReportActionResultCode_Value_INVALID_UNINITIALIZED = 0,
  TestReportActionResultCode_Value_PASS = 1,
  TestReportActionResultCode_Value_SKIP = 2,
  TestReportActionResultCode_Value_FAIL = 3,
  TestReportActionResultCode_Value_WARNING = 4,
  TestReportActionResultCode_Value_ERROR = 5,
  TestReportActionResultCode_Value_TestReportActionResultCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TestReportActionResultCode_Value_TestReportActionResultCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TestReportActionResultCode_Value_IsValid(int value);
const TestReportActionResultCode_Value TestReportActionResultCode_Value_Value_MIN = TestReportActionResultCode_Value_INVALID_UNINITIALIZED;
const TestReportActionResultCode_Value TestReportActionResultCode_Value_Value_MAX = TestReportActionResultCode_Value_ERROR;
const int TestReportActionResultCode_Value_Value_ARRAYSIZE = TestReportActionResultCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* TestReportActionResultCode_Value_descriptor();
inline const ::std::string& TestReportActionResultCode_Value_Name(TestReportActionResultCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    TestReportActionResultCode_Value_descriptor(), value);
}
inline bool TestReportActionResultCode_Value_Parse(
    const ::std::string& name, TestReportActionResultCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestReportActionResultCode_Value>(
    TestReportActionResultCode_Value_descriptor(), name, value);
}
enum TestReportParticipantTypeCode_Value {
  TestReportParticipantTypeCode_Value_INVALID_UNINITIALIZED = 0,
  TestReportParticipantTypeCode_Value_TEST_ENGINE = 1,
  TestReportParticipantTypeCode_Value_CLIENT = 2,
  TestReportParticipantTypeCode_Value_SERVER = 3,
  TestReportParticipantTypeCode_Value_TestReportParticipantTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TestReportParticipantTypeCode_Value_TestReportParticipantTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TestReportParticipantTypeCode_Value_IsValid(int value);
const TestReportParticipantTypeCode_Value TestReportParticipantTypeCode_Value_Value_MIN = TestReportParticipantTypeCode_Value_INVALID_UNINITIALIZED;
const TestReportParticipantTypeCode_Value TestReportParticipantTypeCode_Value_Value_MAX = TestReportParticipantTypeCode_Value_SERVER;
const int TestReportParticipantTypeCode_Value_Value_ARRAYSIZE = TestReportParticipantTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* TestReportParticipantTypeCode_Value_descriptor();
inline const ::std::string& TestReportParticipantTypeCode_Value_Name(TestReportParticipantTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    TestReportParticipantTypeCode_Value_descriptor(), value);
}
inline bool TestReportParticipantTypeCode_Value_Parse(
    const ::std::string& name, TestReportParticipantTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestReportParticipantTypeCode_Value>(
    TestReportParticipantTypeCode_Value_descriptor(), name, value);
}
enum TestReportResultCode_Value {
  TestReportResultCode_Value_INVALID_UNINITIALIZED = 0,
  TestReportResultCode_Value_PASS = 1,
  TestReportResultCode_Value_FAIL = 2,
  TestReportResultCode_Value_PENDING = 3,
  TestReportResultCode_Value_TestReportResultCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TestReportResultCode_Value_TestReportResultCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TestReportResultCode_Value_IsValid(int value);
const TestReportResultCode_Value TestReportResultCode_Value_Value_MIN = TestReportResultCode_Value_INVALID_UNINITIALIZED;
const TestReportResultCode_Value TestReportResultCode_Value_Value_MAX = TestReportResultCode_Value_PENDING;
const int TestReportResultCode_Value_Value_ARRAYSIZE = TestReportResultCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* TestReportResultCode_Value_descriptor();
inline const ::std::string& TestReportResultCode_Value_Name(TestReportResultCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    TestReportResultCode_Value_descriptor(), value);
}
inline bool TestReportResultCode_Value_Parse(
    const ::std::string& name, TestReportResultCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestReportResultCode_Value>(
    TestReportResultCode_Value_descriptor(), name, value);
}
enum TestReportStatusCode_Value {
  TestReportStatusCode_Value_INVALID_UNINITIALIZED = 0,
  TestReportStatusCode_Value_COMPLETED = 1,
  TestReportStatusCode_Value_IN_PROGRESS = 2,
  TestReportStatusCode_Value_WAITING = 3,
  TestReportStatusCode_Value_STOPPED = 4,
  TestReportStatusCode_Value_ENTERED_IN_ERROR = 5,
  TestReportStatusCode_Value_TestReportStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TestReportStatusCode_Value_TestReportStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TestReportStatusCode_Value_IsValid(int value);
const TestReportStatusCode_Value TestReportStatusCode_Value_Value_MIN = TestReportStatusCode_Value_INVALID_UNINITIALIZED;
const TestReportStatusCode_Value TestReportStatusCode_Value_Value_MAX = TestReportStatusCode_Value_ENTERED_IN_ERROR;
const int TestReportStatusCode_Value_Value_ARRAYSIZE = TestReportStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* TestReportStatusCode_Value_descriptor();
inline const ::std::string& TestReportStatusCode_Value_Name(TestReportStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    TestReportStatusCode_Value_descriptor(), value);
}
inline bool TestReportStatusCode_Value_Parse(
    const ::std::string& name, TestReportStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestReportStatusCode_Value>(
    TestReportStatusCode_Value_descriptor(), name, value);
}
enum RepositoryTypeCode_Value {
  RepositoryTypeCode_Value_INVALID_UNINITIALIZED = 0,
  RepositoryTypeCode_Value_DIRECTLINK = 1,
  RepositoryTypeCode_Value_OPENAPI = 2,
  RepositoryTypeCode_Value_LOGIN = 3,
  RepositoryTypeCode_Value_OAUTH = 4,
  RepositoryTypeCode_Value_OTHER = 5,
  RepositoryTypeCode_Value_RepositoryTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RepositoryTypeCode_Value_RepositoryTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RepositoryTypeCode_Value_IsValid(int value);
const RepositoryTypeCode_Value RepositoryTypeCode_Value_Value_MIN = RepositoryTypeCode_Value_INVALID_UNINITIALIZED;
const RepositoryTypeCode_Value RepositoryTypeCode_Value_Value_MAX = RepositoryTypeCode_Value_OTHER;
const int RepositoryTypeCode_Value_Value_ARRAYSIZE = RepositoryTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* RepositoryTypeCode_Value_descriptor();
inline const ::std::string& RepositoryTypeCode_Value_Name(RepositoryTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    RepositoryTypeCode_Value_descriptor(), value);
}
inline bool RepositoryTypeCode_Value_Parse(
    const ::std::string& name, RepositoryTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RepositoryTypeCode_Value>(
    RepositoryTypeCode_Value_descriptor(), name, value);
}
enum RequestIntentCode_Value {
  RequestIntentCode_Value_INVALID_UNINITIALIZED = 0,
  RequestIntentCode_Value_PROPOSAL = 1,
  RequestIntentCode_Value_PLAN = 2,
  RequestIntentCode_Value_ORDER = 3,
  RequestIntentCode_Value_ORIGINAL_ORDER = 4,
  RequestIntentCode_Value_REFLEX_ORDER = 5,
  RequestIntentCode_Value_FILLER_ORDER = 6,
  RequestIntentCode_Value_INSTANCE_ORDER = 7,
  RequestIntentCode_Value_OPTION = 8,
  RequestIntentCode_Value_RequestIntentCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RequestIntentCode_Value_RequestIntentCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RequestIntentCode_Value_IsValid(int value);
const RequestIntentCode_Value RequestIntentCode_Value_Value_MIN = RequestIntentCode_Value_INVALID_UNINITIALIZED;
const RequestIntentCode_Value RequestIntentCode_Value_Value_MAX = RequestIntentCode_Value_OPTION;
const int RequestIntentCode_Value_Value_ARRAYSIZE = RequestIntentCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* RequestIntentCode_Value_descriptor();
inline const ::std::string& RequestIntentCode_Value_Name(RequestIntentCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    RequestIntentCode_Value_descriptor(), value);
}
inline bool RequestIntentCode_Value_Parse(
    const ::std::string& name, RequestIntentCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RequestIntentCode_Value>(
    RequestIntentCode_Value_descriptor(), name, value);
}
enum RequestPriorityCode_Value {
  RequestPriorityCode_Value_INVALID_UNINITIALIZED = 0,
  RequestPriorityCode_Value_ROUTINE = 1,
  RequestPriorityCode_Value_URGENT = 2,
  RequestPriorityCode_Value_ASAP = 3,
  RequestPriorityCode_Value_STAT = 4,
  RequestPriorityCode_Value_RequestPriorityCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RequestPriorityCode_Value_RequestPriorityCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RequestPriorityCode_Value_IsValid(int value);
const RequestPriorityCode_Value RequestPriorityCode_Value_Value_MIN = RequestPriorityCode_Value_INVALID_UNINITIALIZED;
const RequestPriorityCode_Value RequestPriorityCode_Value_Value_MAX = RequestPriorityCode_Value_STAT;
const int RequestPriorityCode_Value_Value_ARRAYSIZE = RequestPriorityCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* RequestPriorityCode_Value_descriptor();
inline const ::std::string& RequestPriorityCode_Value_Name(RequestPriorityCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    RequestPriorityCode_Value_descriptor(), value);
}
inline bool RequestPriorityCode_Value_Parse(
    const ::std::string& name, RequestPriorityCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RequestPriorityCode_Value>(
    RequestPriorityCode_Value_descriptor(), name, value);
}
enum RequestStatusCode_Value {
  RequestStatusCode_Value_INVALID_UNINITIALIZED = 0,
  RequestStatusCode_Value_DRAFT = 1,
  RequestStatusCode_Value_ACTIVE = 2,
  RequestStatusCode_Value_SUSPENDED = 3,
  RequestStatusCode_Value_CANCELLED = 4,
  RequestStatusCode_Value_COMPLETED = 5,
  RequestStatusCode_Value_ENTERED_IN_ERROR = 6,
  RequestStatusCode_Value_UNKNOWN = 7,
  RequestStatusCode_Value_RequestStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RequestStatusCode_Value_RequestStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RequestStatusCode_Value_IsValid(int value);
const RequestStatusCode_Value RequestStatusCode_Value_Value_MIN = RequestStatusCode_Value_INVALID_UNINITIALIZED;
const RequestStatusCode_Value RequestStatusCode_Value_Value_MAX = RequestStatusCode_Value_UNKNOWN;
const int RequestStatusCode_Value_Value_ARRAYSIZE = RequestStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* RequestStatusCode_Value_descriptor();
inline const ::std::string& RequestStatusCode_Value_Name(RequestStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    RequestStatusCode_Value_descriptor(), value);
}
inline bool RequestStatusCode_Value_Parse(
    const ::std::string& name, RequestStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RequestStatusCode_Value>(
    RequestStatusCode_Value_descriptor(), name, value);
}
enum ResearchStudyStatusCode_Value {
  ResearchStudyStatusCode_Value_INVALID_UNINITIALIZED = 0,
  ResearchStudyStatusCode_Value_DRAFT = 1,
  ResearchStudyStatusCode_Value_IN_PROGRESS = 2,
  ResearchStudyStatusCode_Value_SUSPENDED = 3,
  ResearchStudyStatusCode_Value_STOPPED = 4,
  ResearchStudyStatusCode_Value_COMPLETED = 5,
  ResearchStudyStatusCode_Value_ENTERED_IN_ERROR = 6,
  ResearchStudyStatusCode_Value_ResearchStudyStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ResearchStudyStatusCode_Value_ResearchStudyStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ResearchStudyStatusCode_Value_IsValid(int value);
const ResearchStudyStatusCode_Value ResearchStudyStatusCode_Value_Value_MIN = ResearchStudyStatusCode_Value_INVALID_UNINITIALIZED;
const ResearchStudyStatusCode_Value ResearchStudyStatusCode_Value_Value_MAX = ResearchStudyStatusCode_Value_ENTERED_IN_ERROR;
const int ResearchStudyStatusCode_Value_Value_ARRAYSIZE = ResearchStudyStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ResearchStudyStatusCode_Value_descriptor();
inline const ::std::string& ResearchStudyStatusCode_Value_Name(ResearchStudyStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ResearchStudyStatusCode_Value_descriptor(), value);
}
inline bool ResearchStudyStatusCode_Value_Parse(
    const ::std::string& name, ResearchStudyStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResearchStudyStatusCode_Value>(
    ResearchStudyStatusCode_Value_descriptor(), name, value);
}
enum ResearchSubjectStatusCode_Value {
  ResearchSubjectStatusCode_Value_INVALID_UNINITIALIZED = 0,
  ResearchSubjectStatusCode_Value_CANDIDATE = 1,
  ResearchSubjectStatusCode_Value_ENROLLED = 2,
  ResearchSubjectStatusCode_Value_ACTIVE = 3,
  ResearchSubjectStatusCode_Value_SUSPENDED = 4,
  ResearchSubjectStatusCode_Value_WITHDRAWN = 5,
  ResearchSubjectStatusCode_Value_COMPLETED = 6,
  ResearchSubjectStatusCode_Value_ResearchSubjectStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ResearchSubjectStatusCode_Value_ResearchSubjectStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ResearchSubjectStatusCode_Value_IsValid(int value);
const ResearchSubjectStatusCode_Value ResearchSubjectStatusCode_Value_Value_MIN = ResearchSubjectStatusCode_Value_INVALID_UNINITIALIZED;
const ResearchSubjectStatusCode_Value ResearchSubjectStatusCode_Value_Value_MAX = ResearchSubjectStatusCode_Value_COMPLETED;
const int ResearchSubjectStatusCode_Value_Value_ARRAYSIZE = ResearchSubjectStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ResearchSubjectStatusCode_Value_descriptor();
inline const ::std::string& ResearchSubjectStatusCode_Value_Name(ResearchSubjectStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ResearchSubjectStatusCode_Value_descriptor(), value);
}
inline bool ResearchSubjectStatusCode_Value_Parse(
    const ::std::string& name, ResearchSubjectStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResearchSubjectStatusCode_Value>(
    ResearchSubjectStatusCode_Value_descriptor(), name, value);
}
enum PayeeResourceTypeCode_Value {
  PayeeResourceTypeCode_Value_INVALID_UNINITIALIZED = 0,
  PayeeResourceTypeCode_Value_ORGANIZATION = 1,
  PayeeResourceTypeCode_Value_PATIENT = 2,
  PayeeResourceTypeCode_Value_PRACTITIONER = 3,
  PayeeResourceTypeCode_Value_RELATEDPERSON = 4,
  PayeeResourceTypeCode_Value_PayeeResourceTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PayeeResourceTypeCode_Value_PayeeResourceTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PayeeResourceTypeCode_Value_IsValid(int value);
const PayeeResourceTypeCode_Value PayeeResourceTypeCode_Value_Value_MIN = PayeeResourceTypeCode_Value_INVALID_UNINITIALIZED;
const PayeeResourceTypeCode_Value PayeeResourceTypeCode_Value_Value_MAX = PayeeResourceTypeCode_Value_RELATEDPERSON;
const int PayeeResourceTypeCode_Value_Value_ARRAYSIZE = PayeeResourceTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* PayeeResourceTypeCode_Value_descriptor();
inline const ::std::string& PayeeResourceTypeCode_Value_Name(PayeeResourceTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    PayeeResourceTypeCode_Value_descriptor(), value);
}
inline bool PayeeResourceTypeCode_Value_Parse(
    const ::std::string& name, PayeeResourceTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PayeeResourceTypeCode_Value>(
    PayeeResourceTypeCode_Value_descriptor(), name, value);
}
enum ResourceTypeCode_Value {
  ResourceTypeCode_Value_INVALID_UNINITIALIZED = 0,
  ResourceTypeCode_Value_ACCOUNT = 1,
  ResourceTypeCode_Value_ACTIVITY_DEFINITION = 2,
  ResourceTypeCode_Value_ADVERSE_EVENT = 3,
  ResourceTypeCode_Value_ALLERGY_INTOLERANCE = 4,
  ResourceTypeCode_Value_APPOINTMENT = 5,
  ResourceTypeCode_Value_APPOINTMENT_RESPONSE = 6,
  ResourceTypeCode_Value_AUDIT_EVENT = 7,
  ResourceTypeCode_Value_BASIC = 8,
  ResourceTypeCode_Value_BINARY = 9,
  ResourceTypeCode_Value_BODY_SITE = 10,
  ResourceTypeCode_Value_BUNDLE = 11,
  ResourceTypeCode_Value_CAPABILITY_STATEMENT = 12,
  ResourceTypeCode_Value_CARE_PLAN = 13,
  ResourceTypeCode_Value_CARE_TEAM = 14,
  ResourceTypeCode_Value_CHARGE_ITEM = 15,
  ResourceTypeCode_Value_CLAIM = 16,
  ResourceTypeCode_Value_CLAIM_RESPONSE = 17,
  ResourceTypeCode_Value_CLINICAL_IMPRESSION = 18,
  ResourceTypeCode_Value_CODE_SYSTEM = 19,
  ResourceTypeCode_Value_COMMUNICATION = 20,
  ResourceTypeCode_Value_COMMUNICATION_REQUEST = 21,
  ResourceTypeCode_Value_COMPARTMENT_DEFINITION = 22,
  ResourceTypeCode_Value_COMPOSITION = 23,
  ResourceTypeCode_Value_CONCEPT_MAP = 24,
  ResourceTypeCode_Value_CONDITION = 25,
  ResourceTypeCode_Value_CONSENT = 26,
  ResourceTypeCode_Value_CONTRACT = 27,
  ResourceTypeCode_Value_COVERAGE = 28,
  ResourceTypeCode_Value_DATA_ELEMENT = 29,
  ResourceTypeCode_Value_DETECTED_ISSUE = 30,
  ResourceTypeCode_Value_DEVICE = 31,
  ResourceTypeCode_Value_DEVICE_COMPONENT = 32,
  ResourceTypeCode_Value_DEVICE_METRIC = 33,
  ResourceTypeCode_Value_DEVICE_REQUEST = 34,
  ResourceTypeCode_Value_DEVICE_USE_STATEMENT = 35,
  ResourceTypeCode_Value_DIAGNOSTIC_REPORT = 36,
  ResourceTypeCode_Value_DOCUMENT_MANIFEST = 37,
  ResourceTypeCode_Value_DOCUMENT_REFERENCE = 38,
  ResourceTypeCode_Value_DOMAIN_RESOURCE = 39,
  ResourceTypeCode_Value_ELIGIBILITY_REQUEST = 40,
  ResourceTypeCode_Value_ELIGIBILITY_RESPONSE = 41,
  ResourceTypeCode_Value_ENCOUNTER = 42,
  ResourceTypeCode_Value_ENDPOINT = 43,
  ResourceTypeCode_Value_ENROLLMENT_REQUEST = 44,
  ResourceTypeCode_Value_ENROLLMENT_RESPONSE = 45,
  ResourceTypeCode_Value_EPISODE_OF_CARE = 46,
  ResourceTypeCode_Value_EXPANSION_PROFILE = 47,
  ResourceTypeCode_Value_EXPLANATION_OF_BENEFIT = 48,
  ResourceTypeCode_Value_FAMILY_MEMBER_HISTORY = 49,
  ResourceTypeCode_Value_FLAG = 50,
  ResourceTypeCode_Value_GOAL = 51,
  ResourceTypeCode_Value_GRAPH_DEFINITION = 52,
  ResourceTypeCode_Value_GROUP = 53,
  ResourceTypeCode_Value_GUIDANCE_RESPONSE = 54,
  ResourceTypeCode_Value_HEALTHCARE_SERVICE = 55,
  ResourceTypeCode_Value_IMAGING_MANIFEST = 56,
  ResourceTypeCode_Value_IMAGING_STUDY = 57,
  ResourceTypeCode_Value_IMMUNIZATION = 58,
  ResourceTypeCode_Value_IMMUNIZATION_RECOMMENDATION = 59,
  ResourceTypeCode_Value_IMPLEMENTATION_GUIDE = 60,
  ResourceTypeCode_Value_LIBRARY = 61,
  ResourceTypeCode_Value_LINKAGE = 62,
  ResourceTypeCode_Value_LIST = 63,
  ResourceTypeCode_Value_LOCATION = 64,
  ResourceTypeCode_Value_MEASURE = 65,
  ResourceTypeCode_Value_MEASURE_REPORT = 66,
  ResourceTypeCode_Value_MEDIA = 67,
  ResourceTypeCode_Value_MEDICATION = 68,
  ResourceTypeCode_Value_MEDICATION_ADMINISTRATION = 69,
  ResourceTypeCode_Value_MEDICATION_DISPENSE = 70,
  ResourceTypeCode_Value_MEDICATION_REQUEST = 71,
  ResourceTypeCode_Value_MEDICATION_STATEMENT = 72,
  ResourceTypeCode_Value_MESSAGE_DEFINITION = 73,
  ResourceTypeCode_Value_MESSAGE_HEADER = 74,
  ResourceTypeCode_Value_NAMING_SYSTEM = 75,
  ResourceTypeCode_Value_NUTRITION_ORDER = 76,
  ResourceTypeCode_Value_OBSERVATION = 77,
  ResourceTypeCode_Value_OPERATION_DEFINITION = 78,
  ResourceTypeCode_Value_OPERATION_OUTCOME = 79,
  ResourceTypeCode_Value_ORGANIZATION = 80,
  ResourceTypeCode_Value_PARAMETERS = 81,
  ResourceTypeCode_Value_PATIENT = 82,
  ResourceTypeCode_Value_PAYMENT_NOTICE = 83,
  ResourceTypeCode_Value_PAYMENT_RECONCILIATION = 84,
  ResourceTypeCode_Value_PERSON = 85,
  ResourceTypeCode_Value_PLAN_DEFINITION = 86,
  ResourceTypeCode_Value_PRACTITIONER = 87,
  ResourceTypeCode_Value_PRACTITIONER_ROLE = 88,
  ResourceTypeCode_Value_PROCEDURE = 89,
  ResourceTypeCode_Value_PROCEDURE_REQUEST = 90,
  ResourceTypeCode_Value_PROCESS_REQUEST = 91,
  ResourceTypeCode_Value_PROCESS_RESPONSE = 92,
  ResourceTypeCode_Value_PROVENANCE = 93,
  ResourceTypeCode_Value_QUESTIONNAIRE = 94,
  ResourceTypeCode_Value_QUESTIONNAIRE_RESPONSE = 95,
  ResourceTypeCode_Value_REFERRAL_REQUEST = 96,
  ResourceTypeCode_Value_RELATED_PERSON = 97,
  ResourceTypeCode_Value_REQUEST_GROUP = 98,
  ResourceTypeCode_Value_RESEARCH_STUDY = 99,
  ResourceTypeCode_Value_RESEARCH_SUBJECT = 100,
  ResourceTypeCode_Value_RESOURCE = 101,
  ResourceTypeCode_Value_RISK_ASSESSMENT = 102,
  ResourceTypeCode_Value_SCHEDULE = 103,
  ResourceTypeCode_Value_SEARCH_PARAMETER = 104,
  ResourceTypeCode_Value_SEQUENCE = 105,
  ResourceTypeCode_Value_SERVICE_DEFINITION = 106,
  ResourceTypeCode_Value_SLOT = 107,
  ResourceTypeCode_Value_SPECIMEN = 108,
  ResourceTypeCode_Value_STRUCTURE_DEFINITION = 109,
  ResourceTypeCode_Value_STRUCTURE_MAP = 110,
  ResourceTypeCode_Value_SUBSCRIPTION = 111,
  ResourceTypeCode_Value_SUBSTANCE = 112,
  ResourceTypeCode_Value_SUPPLY_DELIVERY = 113,
  ResourceTypeCode_Value_SUPPLY_REQUEST = 114,
  ResourceTypeCode_Value_TASK = 115,
  ResourceTypeCode_Value_TEST_REPORT = 116,
  ResourceTypeCode_Value_TEST_SCRIPT = 117,
  ResourceTypeCode_Value_VALUE_SET = 118,
  ResourceTypeCode_Value_VISION_PRESCRIPTION = 119,
  ResourceTypeCode_Value_ResourceTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ResourceTypeCode_Value_ResourceTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ResourceTypeCode_Value_IsValid(int value);
const ResourceTypeCode_Value ResourceTypeCode_Value_Value_MIN = ResourceTypeCode_Value_INVALID_UNINITIALIZED;
const ResourceTypeCode_Value ResourceTypeCode_Value_Value_MAX = ResourceTypeCode_Value_VISION_PRESCRIPTION;
const int ResourceTypeCode_Value_Value_ARRAYSIZE = ResourceTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ResourceTypeCode_Value_descriptor();
inline const ::std::string& ResourceTypeCode_Value_Name(ResourceTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ResourceTypeCode_Value_descriptor(), value);
}
inline bool ResourceTypeCode_Value_Parse(
    const ::std::string& name, ResourceTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResourceTypeCode_Value>(
    ResourceTypeCode_Value_descriptor(), name, value);
}
enum ResourceValidationModeCode_Value {
  ResourceValidationModeCode_Value_INVALID_UNINITIALIZED = 0,
  ResourceValidationModeCode_Value_CREATE = 1,
  ResourceValidationModeCode_Value_UPDATE = 2,
  ResourceValidationModeCode_Value_DELETE = 3,
  ResourceValidationModeCode_Value_ResourceValidationModeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ResourceValidationModeCode_Value_ResourceValidationModeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ResourceValidationModeCode_Value_IsValid(int value);
const ResourceValidationModeCode_Value ResourceValidationModeCode_Value_Value_MIN = ResourceValidationModeCode_Value_INVALID_UNINITIALIZED;
const ResourceValidationModeCode_Value ResourceValidationModeCode_Value_Value_MAX = ResourceValidationModeCode_Value_DELETE;
const int ResourceValidationModeCode_Value_Value_ARRAYSIZE = ResourceValidationModeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ResourceValidationModeCode_Value_descriptor();
inline const ::std::string& ResourceValidationModeCode_Value_Name(ResourceValidationModeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ResourceValidationModeCode_Value_descriptor(), value);
}
inline bool ResourceValidationModeCode_Value_Parse(
    const ::std::string& name, ResourceValidationModeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResourceValidationModeCode_Value>(
    ResourceValidationModeCode_Value_descriptor(), name, value);
}
enum ResponseTypeCode_Value {
  ResponseTypeCode_Value_INVALID_UNINITIALIZED = 0,
  ResponseTypeCode_Value_OK = 1,
  ResponseTypeCode_Value_TRANSIENT_ERROR = 2,
  ResponseTypeCode_Value_FATAL_ERROR = 3,
  ResponseTypeCode_Value_ResponseTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ResponseTypeCode_Value_ResponseTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ResponseTypeCode_Value_IsValid(int value);
const ResponseTypeCode_Value ResponseTypeCode_Value_Value_MIN = ResponseTypeCode_Value_INVALID_UNINITIALIZED;
const ResponseTypeCode_Value ResponseTypeCode_Value_Value_MAX = ResponseTypeCode_Value_FATAL_ERROR;
const int ResponseTypeCode_Value_Value_ARRAYSIZE = ResponseTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ResponseTypeCode_Value_descriptor();
inline const ::std::string& ResponseTypeCode_Value_Name(ResponseTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ResponseTypeCode_Value_descriptor(), value);
}
inline bool ResponseTypeCode_Value_Parse(
    const ::std::string& name, ResponseTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResponseTypeCode_Value>(
    ResponseTypeCode_Value_descriptor(), name, value);
}
enum RestfulCapabilityModeCode_Value {
  RestfulCapabilityModeCode_Value_INVALID_UNINITIALIZED = 0,
  RestfulCapabilityModeCode_Value_CLIENT = 1,
  RestfulCapabilityModeCode_Value_SERVER = 2,
  RestfulCapabilityModeCode_Value_RestfulCapabilityModeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RestfulCapabilityModeCode_Value_RestfulCapabilityModeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RestfulCapabilityModeCode_Value_IsValid(int value);
const RestfulCapabilityModeCode_Value RestfulCapabilityModeCode_Value_Value_MIN = RestfulCapabilityModeCode_Value_INVALID_UNINITIALIZED;
const RestfulCapabilityModeCode_Value RestfulCapabilityModeCode_Value_Value_MAX = RestfulCapabilityModeCode_Value_SERVER;
const int RestfulCapabilityModeCode_Value_Value_ARRAYSIZE = RestfulCapabilityModeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* RestfulCapabilityModeCode_Value_descriptor();
inline const ::std::string& RestfulCapabilityModeCode_Value_Name(RestfulCapabilityModeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    RestfulCapabilityModeCode_Value_descriptor(), value);
}
inline bool RestfulCapabilityModeCode_Value_Parse(
    const ::std::string& name, RestfulCapabilityModeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RestfulCapabilityModeCode_Value>(
    RestfulCapabilityModeCode_Value_descriptor(), name, value);
}
enum RestfulSecurityServiceCode_Value {
  RestfulSecurityServiceCode_Value_INVALID_UNINITIALIZED = 0,
  RestfulSecurityServiceCode_Value_OAUTH = 1,
  RestfulSecurityServiceCode_Value_SMART_ON_FHIR = 2,
  RestfulSecurityServiceCode_Value_NTLM = 3,
  RestfulSecurityServiceCode_Value_BASIC = 4,
  RestfulSecurityServiceCode_Value_KERBEROS = 5,
  RestfulSecurityServiceCode_Value_CERTIFICATES = 6,
  RestfulSecurityServiceCode_Value_RestfulSecurityServiceCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RestfulSecurityServiceCode_Value_RestfulSecurityServiceCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RestfulSecurityServiceCode_Value_IsValid(int value);
const RestfulSecurityServiceCode_Value RestfulSecurityServiceCode_Value_Value_MIN = RestfulSecurityServiceCode_Value_INVALID_UNINITIALIZED;
const RestfulSecurityServiceCode_Value RestfulSecurityServiceCode_Value_Value_MAX = RestfulSecurityServiceCode_Value_CERTIFICATES;
const int RestfulSecurityServiceCode_Value_Value_ARRAYSIZE = RestfulSecurityServiceCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* RestfulSecurityServiceCode_Value_descriptor();
inline const ::std::string& RestfulSecurityServiceCode_Value_Name(RestfulSecurityServiceCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    RestfulSecurityServiceCode_Value_descriptor(), value);
}
inline bool RestfulSecurityServiceCode_Value_Parse(
    const ::std::string& name, RestfulSecurityServiceCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RestfulSecurityServiceCode_Value>(
    RestfulSecurityServiceCode_Value_descriptor(), name, value);
}
enum RiskProbabilityCode_Value {
  RiskProbabilityCode_Value_INVALID_UNINITIALIZED = 0,
  RiskProbabilityCode_Value_NEGLIGIBLE = 1,
  RiskProbabilityCode_Value_LOW = 2,
  RiskProbabilityCode_Value_MODERATE = 3,
  RiskProbabilityCode_Value_HIGH = 4,
  RiskProbabilityCode_Value_CERTAIN = 5,
  RiskProbabilityCode_Value_RiskProbabilityCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RiskProbabilityCode_Value_RiskProbabilityCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RiskProbabilityCode_Value_IsValid(int value);
const RiskProbabilityCode_Value RiskProbabilityCode_Value_Value_MIN = RiskProbabilityCode_Value_INVALID_UNINITIALIZED;
const RiskProbabilityCode_Value RiskProbabilityCode_Value_Value_MAX = RiskProbabilityCode_Value_CERTAIN;
const int RiskProbabilityCode_Value_Value_ARRAYSIZE = RiskProbabilityCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* RiskProbabilityCode_Value_descriptor();
inline const ::std::string& RiskProbabilityCode_Value_Name(RiskProbabilityCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    RiskProbabilityCode_Value_descriptor(), value);
}
inline bool RiskProbabilityCode_Value_Parse(
    const ::std::string& name, RiskProbabilityCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RiskProbabilityCode_Value>(
    RiskProbabilityCode_Value_descriptor(), name, value);
}
enum SearchComparatorCode_Value {
  SearchComparatorCode_Value_INVALID_UNINITIALIZED = 0,
  SearchComparatorCode_Value_EQ = 1,
  SearchComparatorCode_Value_NE = 2,
  SearchComparatorCode_Value_GT = 3,
  SearchComparatorCode_Value_LT = 4,
  SearchComparatorCode_Value_GE = 5,
  SearchComparatorCode_Value_LE = 6,
  SearchComparatorCode_Value_SA = 7,
  SearchComparatorCode_Value_EB = 8,
  SearchComparatorCode_Value_AP = 9,
  SearchComparatorCode_Value_SearchComparatorCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SearchComparatorCode_Value_SearchComparatorCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SearchComparatorCode_Value_IsValid(int value);
const SearchComparatorCode_Value SearchComparatorCode_Value_Value_MIN = SearchComparatorCode_Value_INVALID_UNINITIALIZED;
const SearchComparatorCode_Value SearchComparatorCode_Value_Value_MAX = SearchComparatorCode_Value_AP;
const int SearchComparatorCode_Value_Value_ARRAYSIZE = SearchComparatorCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* SearchComparatorCode_Value_descriptor();
inline const ::std::string& SearchComparatorCode_Value_Name(SearchComparatorCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    SearchComparatorCode_Value_descriptor(), value);
}
inline bool SearchComparatorCode_Value_Parse(
    const ::std::string& name, SearchComparatorCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SearchComparatorCode_Value>(
    SearchComparatorCode_Value_descriptor(), name, value);
}
enum SearchEntryModeCode_Value {
  SearchEntryModeCode_Value_INVALID_UNINITIALIZED = 0,
  SearchEntryModeCode_Value_MATCH = 1,
  SearchEntryModeCode_Value_INCLUDE = 2,
  SearchEntryModeCode_Value_OUTCOME = 3,
  SearchEntryModeCode_Value_SearchEntryModeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SearchEntryModeCode_Value_SearchEntryModeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SearchEntryModeCode_Value_IsValid(int value);
const SearchEntryModeCode_Value SearchEntryModeCode_Value_Value_MIN = SearchEntryModeCode_Value_INVALID_UNINITIALIZED;
const SearchEntryModeCode_Value SearchEntryModeCode_Value_Value_MAX = SearchEntryModeCode_Value_OUTCOME;
const int SearchEntryModeCode_Value_Value_ARRAYSIZE = SearchEntryModeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* SearchEntryModeCode_Value_descriptor();
inline const ::std::string& SearchEntryModeCode_Value_Name(SearchEntryModeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    SearchEntryModeCode_Value_descriptor(), value);
}
inline bool SearchEntryModeCode_Value_Parse(
    const ::std::string& name, SearchEntryModeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SearchEntryModeCode_Value>(
    SearchEntryModeCode_Value_descriptor(), name, value);
}
enum SearchModifierCodeCode_Value {
  SearchModifierCodeCode_Value_INVALID_UNINITIALIZED = 0,
  SearchModifierCodeCode_Value_MISSING = 1,
  SearchModifierCodeCode_Value_EXACT = 2,
  SearchModifierCodeCode_Value_CONTAINS = 3,
  SearchModifierCodeCode_Value_NOT = 4,
  SearchModifierCodeCode_Value_TEXT = 5,
  SearchModifierCodeCode_Value_IN = 6,
  SearchModifierCodeCode_Value_NOT_IN = 7,
  SearchModifierCodeCode_Value_BELOW = 8,
  SearchModifierCodeCode_Value_ABOVE = 9,
  SearchModifierCodeCode_Value_TYPE = 10,
  SearchModifierCodeCode_Value_SearchModifierCodeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SearchModifierCodeCode_Value_SearchModifierCodeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SearchModifierCodeCode_Value_IsValid(int value);
const SearchModifierCodeCode_Value SearchModifierCodeCode_Value_Value_MIN = SearchModifierCodeCode_Value_INVALID_UNINITIALIZED;
const SearchModifierCodeCode_Value SearchModifierCodeCode_Value_Value_MAX = SearchModifierCodeCode_Value_TYPE;
const int SearchModifierCodeCode_Value_Value_ARRAYSIZE = SearchModifierCodeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* SearchModifierCodeCode_Value_descriptor();
inline const ::std::string& SearchModifierCodeCode_Value_Name(SearchModifierCodeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    SearchModifierCodeCode_Value_descriptor(), value);
}
inline bool SearchModifierCodeCode_Value_Parse(
    const ::std::string& name, SearchModifierCodeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SearchModifierCodeCode_Value>(
    SearchModifierCodeCode_Value_descriptor(), name, value);
}
enum SearchParamTypeCode_Value {
  SearchParamTypeCode_Value_INVALID_UNINITIALIZED = 0,
  SearchParamTypeCode_Value_NUMBER = 1,
  SearchParamTypeCode_Value_DATE = 2,
  SearchParamTypeCode_Value_STRING = 3,
  SearchParamTypeCode_Value_TOKEN = 4,
  SearchParamTypeCode_Value_REFERENCE = 5,
  SearchParamTypeCode_Value_COMPOSITE = 6,
  SearchParamTypeCode_Value_QUANTITY = 7,
  SearchParamTypeCode_Value_URI = 8,
  SearchParamTypeCode_Value_SearchParamTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SearchParamTypeCode_Value_SearchParamTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SearchParamTypeCode_Value_IsValid(int value);
const SearchParamTypeCode_Value SearchParamTypeCode_Value_Value_MIN = SearchParamTypeCode_Value_INVALID_UNINITIALIZED;
const SearchParamTypeCode_Value SearchParamTypeCode_Value_Value_MAX = SearchParamTypeCode_Value_URI;
const int SearchParamTypeCode_Value_Value_ARRAYSIZE = SearchParamTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* SearchParamTypeCode_Value_descriptor();
inline const ::std::string& SearchParamTypeCode_Value_Name(SearchParamTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    SearchParamTypeCode_Value_descriptor(), value);
}
inline bool SearchParamTypeCode_Value_Parse(
    const ::std::string& name, SearchParamTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SearchParamTypeCode_Value>(
    SearchParamTypeCode_Value_descriptor(), name, value);
}
enum XPathUsageTypeCode_Value {
  XPathUsageTypeCode_Value_INVALID_UNINITIALIZED = 0,
  XPathUsageTypeCode_Value_NORMAL = 1,
  XPathUsageTypeCode_Value_PHONETIC = 2,
  XPathUsageTypeCode_Value_NEARBY = 3,
  XPathUsageTypeCode_Value_DISTANCE = 4,
  XPathUsageTypeCode_Value_OTHER = 5,
  XPathUsageTypeCode_Value_XPathUsageTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  XPathUsageTypeCode_Value_XPathUsageTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool XPathUsageTypeCode_Value_IsValid(int value);
const XPathUsageTypeCode_Value XPathUsageTypeCode_Value_Value_MIN = XPathUsageTypeCode_Value_INVALID_UNINITIALIZED;
const XPathUsageTypeCode_Value XPathUsageTypeCode_Value_Value_MAX = XPathUsageTypeCode_Value_OTHER;
const int XPathUsageTypeCode_Value_Value_ARRAYSIZE = XPathUsageTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* XPathUsageTypeCode_Value_descriptor();
inline const ::std::string& XPathUsageTypeCode_Value_Name(XPathUsageTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    XPathUsageTypeCode_Value_descriptor(), value);
}
inline bool XPathUsageTypeCode_Value_Parse(
    const ::std::string& name, XPathUsageTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<XPathUsageTypeCode_Value>(
    XPathUsageTypeCode_Value_descriptor(), name, value);
}
enum SequenceTypeCode_Value {
  SequenceTypeCode_Value_INVALID_UNINITIALIZED = 0,
  SequenceTypeCode_Value_AA = 1,
  SequenceTypeCode_Value_DNA = 2,
  SequenceTypeCode_Value_RNA = 3,
  SequenceTypeCode_Value_SequenceTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SequenceTypeCode_Value_SequenceTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SequenceTypeCode_Value_IsValid(int value);
const SequenceTypeCode_Value SequenceTypeCode_Value_Value_MIN = SequenceTypeCode_Value_INVALID_UNINITIALIZED;
const SequenceTypeCode_Value SequenceTypeCode_Value_Value_MAX = SequenceTypeCode_Value_RNA;
const int SequenceTypeCode_Value_Value_ARRAYSIZE = SequenceTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* SequenceTypeCode_Value_descriptor();
inline const ::std::string& SequenceTypeCode_Value_Name(SequenceTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    SequenceTypeCode_Value_descriptor(), value);
}
inline bool SequenceTypeCode_Value_Parse(
    const ::std::string& name, SequenceTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SequenceTypeCode_Value>(
    SequenceTypeCode_Value_descriptor(), name, value);
}
enum ServiceProvisionConditionsCode_Value {
  ServiceProvisionConditionsCode_Value_INVALID_UNINITIALIZED = 0,
  ServiceProvisionConditionsCode_Value_FREE = 1,
  ServiceProvisionConditionsCode_Value_DISC = 2,
  ServiceProvisionConditionsCode_Value_COST = 3,
  ServiceProvisionConditionsCode_Value_ServiceProvisionConditionsCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ServiceProvisionConditionsCode_Value_ServiceProvisionConditionsCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ServiceProvisionConditionsCode_Value_IsValid(int value);
const ServiceProvisionConditionsCode_Value ServiceProvisionConditionsCode_Value_Value_MIN = ServiceProvisionConditionsCode_Value_INVALID_UNINITIALIZED;
const ServiceProvisionConditionsCode_Value ServiceProvisionConditionsCode_Value_Value_MAX = ServiceProvisionConditionsCode_Value_COST;
const int ServiceProvisionConditionsCode_Value_Value_ARRAYSIZE = ServiceProvisionConditionsCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServiceProvisionConditionsCode_Value_descriptor();
inline const ::std::string& ServiceProvisionConditionsCode_Value_Name(ServiceProvisionConditionsCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServiceProvisionConditionsCode_Value_descriptor(), value);
}
inline bool ServiceProvisionConditionsCode_Value_Parse(
    const ::std::string& name, ServiceProvisionConditionsCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServiceProvisionConditionsCode_Value>(
    ServiceProvisionConditionsCode_Value_descriptor(), name, value);
}
enum ReferralMethodCode_Value {
  ReferralMethodCode_Value_INVALID_UNINITIALIZED = 0,
  ReferralMethodCode_Value_FAX = 1,
  ReferralMethodCode_Value_PHONE = 2,
  ReferralMethodCode_Value_ELEC = 3,
  ReferralMethodCode_Value_SEMAIL = 4,
  ReferralMethodCode_Value_MAIL = 5,
  ReferralMethodCode_Value_ReferralMethodCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ReferralMethodCode_Value_ReferralMethodCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ReferralMethodCode_Value_IsValid(int value);
const ReferralMethodCode_Value ReferralMethodCode_Value_Value_MIN = ReferralMethodCode_Value_INVALID_UNINITIALIZED;
const ReferralMethodCode_Value ReferralMethodCode_Value_Value_MAX = ReferralMethodCode_Value_MAIL;
const int ReferralMethodCode_Value_Value_ARRAYSIZE = ReferralMethodCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReferralMethodCode_Value_descriptor();
inline const ::std::string& ReferralMethodCode_Value_Name(ReferralMethodCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReferralMethodCode_Value_descriptor(), value);
}
inline bool ReferralMethodCode_Value_Parse(
    const ::std::string& name, ReferralMethodCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReferralMethodCode_Value>(
    ReferralMethodCode_Value_descriptor(), name, value);
}
enum SlotStatusCode_Value {
  SlotStatusCode_Value_INVALID_UNINITIALIZED = 0,
  SlotStatusCode_Value_BUSY = 1,
  SlotStatusCode_Value_FREE = 2,
  SlotStatusCode_Value_BUSY_UNAVAILABLE = 3,
  SlotStatusCode_Value_BUSY_TENTATIVE = 4,
  SlotStatusCode_Value_ENTERED_IN_ERROR = 5,
  SlotStatusCode_Value_SlotStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SlotStatusCode_Value_SlotStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SlotStatusCode_Value_IsValid(int value);
const SlotStatusCode_Value SlotStatusCode_Value_Value_MIN = SlotStatusCode_Value_INVALID_UNINITIALIZED;
const SlotStatusCode_Value SlotStatusCode_Value_Value_MAX = SlotStatusCode_Value_ENTERED_IN_ERROR;
const int SlotStatusCode_Value_Value_ARRAYSIZE = SlotStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* SlotStatusCode_Value_descriptor();
inline const ::std::string& SlotStatusCode_Value_Name(SlotStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    SlotStatusCode_Value_descriptor(), value);
}
inline bool SlotStatusCode_Value_Parse(
    const ::std::string& name, SlotStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SlotStatusCode_Value>(
    SlotStatusCode_Value_descriptor(), name, value);
}
enum SpecialValuesCode_Value {
  SpecialValuesCode_Value_INVALID_UNINITIALIZED = 0,
  SpecialValuesCode_Value_TRUE = 1,
  SpecialValuesCode_Value_FALSE = 2,
  SpecialValuesCode_Value_TRACE = 3,
  SpecialValuesCode_Value_SUFFICIENT = 4,
  SpecialValuesCode_Value_WITHDRAWN = 5,
  SpecialValuesCode_Value_NIL_KNOWN = 6,
  SpecialValuesCode_Value_SpecialValuesCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SpecialValuesCode_Value_SpecialValuesCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SpecialValuesCode_Value_IsValid(int value);
const SpecialValuesCode_Value SpecialValuesCode_Value_Value_MIN = SpecialValuesCode_Value_INVALID_UNINITIALIZED;
const SpecialValuesCode_Value SpecialValuesCode_Value_Value_MAX = SpecialValuesCode_Value_NIL_KNOWN;
const int SpecialValuesCode_Value_Value_ARRAYSIZE = SpecialValuesCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* SpecialValuesCode_Value_descriptor();
inline const ::std::string& SpecialValuesCode_Value_Name(SpecialValuesCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    SpecialValuesCode_Value_descriptor(), value);
}
inline bool SpecialValuesCode_Value_Parse(
    const ::std::string& name, SpecialValuesCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SpecialValuesCode_Value>(
    SpecialValuesCode_Value_descriptor(), name, value);
}
enum DeviceSpecificationSpecTypeCode_Value {
  DeviceSpecificationSpecTypeCode_Value_INVALID_UNINITIALIZED = 0,
  DeviceSpecificationSpecTypeCode_Value_UNSPECIFIED = 1,
  DeviceSpecificationSpecTypeCode_Value_SERIAL_NUMBER = 2,
  DeviceSpecificationSpecTypeCode_Value_PART_NUMBER = 3,
  DeviceSpecificationSpecTypeCode_Value_HARDWARE_REVISION = 4,
  DeviceSpecificationSpecTypeCode_Value_SOFTWARE_REVISION = 5,
  DeviceSpecificationSpecTypeCode_Value_FIRMWARE_REVISION = 6,
  DeviceSpecificationSpecTypeCode_Value_PROTOCOL_REVISION = 7,
  DeviceSpecificationSpecTypeCode_Value_GMDN = 8,
  DeviceSpecificationSpecTypeCode_Value_DeviceSpecificationSpecTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DeviceSpecificationSpecTypeCode_Value_DeviceSpecificationSpecTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DeviceSpecificationSpecTypeCode_Value_IsValid(int value);
const DeviceSpecificationSpecTypeCode_Value DeviceSpecificationSpecTypeCode_Value_Value_MIN = DeviceSpecificationSpecTypeCode_Value_INVALID_UNINITIALIZED;
const DeviceSpecificationSpecTypeCode_Value DeviceSpecificationSpecTypeCode_Value_Value_MAX = DeviceSpecificationSpecTypeCode_Value_GMDN;
const int DeviceSpecificationSpecTypeCode_Value_Value_ARRAYSIZE = DeviceSpecificationSpecTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* DeviceSpecificationSpecTypeCode_Value_descriptor();
inline const ::std::string& DeviceSpecificationSpecTypeCode_Value_Name(DeviceSpecificationSpecTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    DeviceSpecificationSpecTypeCode_Value_descriptor(), value);
}
inline bool DeviceSpecificationSpecTypeCode_Value_Parse(
    const ::std::string& name, DeviceSpecificationSpecTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DeviceSpecificationSpecTypeCode_Value>(
    DeviceSpecificationSpecTypeCode_Value_descriptor(), name, value);
}
enum SpecimenStatusCode_Value {
  SpecimenStatusCode_Value_INVALID_UNINITIALIZED = 0,
  SpecimenStatusCode_Value_AVAILABLE = 1,
  SpecimenStatusCode_Value_UNAVAILABLE = 2,
  SpecimenStatusCode_Value_UNSATISFACTORY = 3,
  SpecimenStatusCode_Value_ENTERED_IN_ERROR = 4,
  SpecimenStatusCode_Value_SpecimenStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SpecimenStatusCode_Value_SpecimenStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SpecimenStatusCode_Value_IsValid(int value);
const SpecimenStatusCode_Value SpecimenStatusCode_Value_Value_MIN = SpecimenStatusCode_Value_INVALID_UNINITIALIZED;
const SpecimenStatusCode_Value SpecimenStatusCode_Value_Value_MAX = SpecimenStatusCode_Value_ENTERED_IN_ERROR;
const int SpecimenStatusCode_Value_Value_ARRAYSIZE = SpecimenStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* SpecimenStatusCode_Value_descriptor();
inline const ::std::string& SpecimenStatusCode_Value_Name(SpecimenStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    SpecimenStatusCode_Value_descriptor(), value);
}
inline bool SpecimenStatusCode_Value_Parse(
    const ::std::string& name, SpecimenStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SpecimenStatusCode_Value>(
    SpecimenStatusCode_Value_descriptor(), name, value);
}
enum StructureDefinitionKindCode_Value {
  StructureDefinitionKindCode_Value_INVALID_UNINITIALIZED = 0,
  StructureDefinitionKindCode_Value_PRIMITIVE_TYPE = 1,
  StructureDefinitionKindCode_Value_COMPLEX_TYPE = 2,
  StructureDefinitionKindCode_Value_RESOURCE = 3,
  StructureDefinitionKindCode_Value_LOGICAL = 4,
  StructureDefinitionKindCode_Value_StructureDefinitionKindCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  StructureDefinitionKindCode_Value_StructureDefinitionKindCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool StructureDefinitionKindCode_Value_IsValid(int value);
const StructureDefinitionKindCode_Value StructureDefinitionKindCode_Value_Value_MIN = StructureDefinitionKindCode_Value_INVALID_UNINITIALIZED;
const StructureDefinitionKindCode_Value StructureDefinitionKindCode_Value_Value_MAX = StructureDefinitionKindCode_Value_LOGICAL;
const int StructureDefinitionKindCode_Value_Value_ARRAYSIZE = StructureDefinitionKindCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* StructureDefinitionKindCode_Value_descriptor();
inline const ::std::string& StructureDefinitionKindCode_Value_Name(StructureDefinitionKindCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    StructureDefinitionKindCode_Value_descriptor(), value);
}
inline bool StructureDefinitionKindCode_Value_Parse(
    const ::std::string& name, StructureDefinitionKindCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StructureDefinitionKindCode_Value>(
    StructureDefinitionKindCode_Value_descriptor(), name, value);
}
enum SubscriptionChannelTypeCode_Value {
  SubscriptionChannelTypeCode_Value_INVALID_UNINITIALIZED = 0,
  SubscriptionChannelTypeCode_Value_REST_HOOK = 1,
  SubscriptionChannelTypeCode_Value_WEBSOCKET = 2,
  SubscriptionChannelTypeCode_Value_EMAIL = 3,
  SubscriptionChannelTypeCode_Value_SMS = 4,
  SubscriptionChannelTypeCode_Value_MESSAGE = 5,
  SubscriptionChannelTypeCode_Value_SubscriptionChannelTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SubscriptionChannelTypeCode_Value_SubscriptionChannelTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SubscriptionChannelTypeCode_Value_IsValid(int value);
const SubscriptionChannelTypeCode_Value SubscriptionChannelTypeCode_Value_Value_MIN = SubscriptionChannelTypeCode_Value_INVALID_UNINITIALIZED;
const SubscriptionChannelTypeCode_Value SubscriptionChannelTypeCode_Value_Value_MAX = SubscriptionChannelTypeCode_Value_MESSAGE;
const int SubscriptionChannelTypeCode_Value_Value_ARRAYSIZE = SubscriptionChannelTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* SubscriptionChannelTypeCode_Value_descriptor();
inline const ::std::string& SubscriptionChannelTypeCode_Value_Name(SubscriptionChannelTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    SubscriptionChannelTypeCode_Value_descriptor(), value);
}
inline bool SubscriptionChannelTypeCode_Value_Parse(
    const ::std::string& name, SubscriptionChannelTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SubscriptionChannelTypeCode_Value>(
    SubscriptionChannelTypeCode_Value_descriptor(), name, value);
}
enum SubscriptionStatusCode_Value {
  SubscriptionStatusCode_Value_INVALID_UNINITIALIZED = 0,
  SubscriptionStatusCode_Value_REQUESTED = 1,
  SubscriptionStatusCode_Value_ACTIVE = 2,
  SubscriptionStatusCode_Value_ERROR = 3,
  SubscriptionStatusCode_Value_OFF = 4,
  SubscriptionStatusCode_Value_SubscriptionStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SubscriptionStatusCode_Value_SubscriptionStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SubscriptionStatusCode_Value_IsValid(int value);
const SubscriptionStatusCode_Value SubscriptionStatusCode_Value_Value_MIN = SubscriptionStatusCode_Value_INVALID_UNINITIALIZED;
const SubscriptionStatusCode_Value SubscriptionStatusCode_Value_Value_MAX = SubscriptionStatusCode_Value_OFF;
const int SubscriptionStatusCode_Value_Value_ARRAYSIZE = SubscriptionStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* SubscriptionStatusCode_Value_descriptor();
inline const ::std::string& SubscriptionStatusCode_Value_Name(SubscriptionStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    SubscriptionStatusCode_Value_descriptor(), value);
}
inline bool SubscriptionStatusCode_Value_Parse(
    const ::std::string& name, SubscriptionStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SubscriptionStatusCode_Value>(
    SubscriptionStatusCode_Value_descriptor(), name, value);
}
enum SubscriptionTagCode_Value {
  SubscriptionTagCode_Value_INVALID_UNINITIALIZED = 0,
  SubscriptionTagCode_Value_QUEUED = 1,
  SubscriptionTagCode_Value_DELIVERED = 2,
  SubscriptionTagCode_Value_SubscriptionTagCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SubscriptionTagCode_Value_SubscriptionTagCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SubscriptionTagCode_Value_IsValid(int value);
const SubscriptionTagCode_Value SubscriptionTagCode_Value_Value_MIN = SubscriptionTagCode_Value_INVALID_UNINITIALIZED;
const SubscriptionTagCode_Value SubscriptionTagCode_Value_Value_MAX = SubscriptionTagCode_Value_DELIVERED;
const int SubscriptionTagCode_Value_Value_ARRAYSIZE = SubscriptionTagCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* SubscriptionTagCode_Value_descriptor();
inline const ::std::string& SubscriptionTagCode_Value_Name(SubscriptionTagCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    SubscriptionTagCode_Value_descriptor(), value);
}
inline bool SubscriptionTagCode_Value_Parse(
    const ::std::string& name, SubscriptionTagCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SubscriptionTagCode_Value>(
    SubscriptionTagCode_Value_descriptor(), name, value);
}
enum SubstanceCategoryCodesCode_Value {
  SubstanceCategoryCodesCode_Value_INVALID_UNINITIALIZED = 0,
  SubstanceCategoryCodesCode_Value_ALLERGEN = 1,
  SubstanceCategoryCodesCode_Value_BIOLOGICAL = 2,
  SubstanceCategoryCodesCode_Value_BODY = 3,
  SubstanceCategoryCodesCode_Value_CHEMICAL = 4,
  SubstanceCategoryCodesCode_Value_FOOD = 5,
  SubstanceCategoryCodesCode_Value_DRUG = 6,
  SubstanceCategoryCodesCode_Value_MATERIAL = 7,
  SubstanceCategoryCodesCode_Value_SubstanceCategoryCodesCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SubstanceCategoryCodesCode_Value_SubstanceCategoryCodesCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SubstanceCategoryCodesCode_Value_IsValid(int value);
const SubstanceCategoryCodesCode_Value SubstanceCategoryCodesCode_Value_Value_MIN = SubstanceCategoryCodesCode_Value_INVALID_UNINITIALIZED;
const SubstanceCategoryCodesCode_Value SubstanceCategoryCodesCode_Value_Value_MAX = SubstanceCategoryCodesCode_Value_MATERIAL;
const int SubstanceCategoryCodesCode_Value_Value_ARRAYSIZE = SubstanceCategoryCodesCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* SubstanceCategoryCodesCode_Value_descriptor();
inline const ::std::string& SubstanceCategoryCodesCode_Value_Name(SubstanceCategoryCodesCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    SubstanceCategoryCodesCode_Value_descriptor(), value);
}
inline bool SubstanceCategoryCodesCode_Value_Parse(
    const ::std::string& name, SubstanceCategoryCodesCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SubstanceCategoryCodesCode_Value>(
    SubstanceCategoryCodesCode_Value_descriptor(), name, value);
}
enum FHIRSubstanceStatusCode_Value {
  FHIRSubstanceStatusCode_Value_INVALID_UNINITIALIZED = 0,
  FHIRSubstanceStatusCode_Value_ACTIVE = 1,
  FHIRSubstanceStatusCode_Value_INACTIVE = 2,
  FHIRSubstanceStatusCode_Value_ENTERED_IN_ERROR = 3,
  FHIRSubstanceStatusCode_Value_FHIRSubstanceStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FHIRSubstanceStatusCode_Value_FHIRSubstanceStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FHIRSubstanceStatusCode_Value_IsValid(int value);
const FHIRSubstanceStatusCode_Value FHIRSubstanceStatusCode_Value_Value_MIN = FHIRSubstanceStatusCode_Value_INVALID_UNINITIALIZED;
const FHIRSubstanceStatusCode_Value FHIRSubstanceStatusCode_Value_Value_MAX = FHIRSubstanceStatusCode_Value_ENTERED_IN_ERROR;
const int FHIRSubstanceStatusCode_Value_Value_ARRAYSIZE = FHIRSubstanceStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* FHIRSubstanceStatusCode_Value_descriptor();
inline const ::std::string& FHIRSubstanceStatusCode_Value_Name(FHIRSubstanceStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    FHIRSubstanceStatusCode_Value_descriptor(), value);
}
inline bool FHIRSubstanceStatusCode_Value_Parse(
    const ::std::string& name, FHIRSubstanceStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FHIRSubstanceStatusCode_Value>(
    FHIRSubstanceStatusCode_Value_descriptor(), name, value);
}
enum SupplyDeliveryStatusCode_Value {
  SupplyDeliveryStatusCode_Value_INVALID_UNINITIALIZED = 0,
  SupplyDeliveryStatusCode_Value_IN_PROGRESS = 1,
  SupplyDeliveryStatusCode_Value_COMPLETED = 2,
  SupplyDeliveryStatusCode_Value_ABANDONED = 3,
  SupplyDeliveryStatusCode_Value_ENTERED_IN_ERROR = 4,
  SupplyDeliveryStatusCode_Value_SupplyDeliveryStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SupplyDeliveryStatusCode_Value_SupplyDeliveryStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SupplyDeliveryStatusCode_Value_IsValid(int value);
const SupplyDeliveryStatusCode_Value SupplyDeliveryStatusCode_Value_Value_MIN = SupplyDeliveryStatusCode_Value_INVALID_UNINITIALIZED;
const SupplyDeliveryStatusCode_Value SupplyDeliveryStatusCode_Value_Value_MAX = SupplyDeliveryStatusCode_Value_ENTERED_IN_ERROR;
const int SupplyDeliveryStatusCode_Value_Value_ARRAYSIZE = SupplyDeliveryStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* SupplyDeliveryStatusCode_Value_descriptor();
inline const ::std::string& SupplyDeliveryStatusCode_Value_Name(SupplyDeliveryStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    SupplyDeliveryStatusCode_Value_descriptor(), value);
}
inline bool SupplyDeliveryStatusCode_Value_Parse(
    const ::std::string& name, SupplyDeliveryStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SupplyDeliveryStatusCode_Value>(
    SupplyDeliveryStatusCode_Value_descriptor(), name, value);
}
enum SupplyItemTypeCode_Value {
  SupplyItemTypeCode_Value_INVALID_UNINITIALIZED = 0,
  SupplyItemTypeCode_Value_MEDICATION = 1,
  SupplyItemTypeCode_Value_DEVICE = 2,
  SupplyItemTypeCode_Value_SupplyItemTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SupplyItemTypeCode_Value_SupplyItemTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SupplyItemTypeCode_Value_IsValid(int value);
const SupplyItemTypeCode_Value SupplyItemTypeCode_Value_Value_MIN = SupplyItemTypeCode_Value_INVALID_UNINITIALIZED;
const SupplyItemTypeCode_Value SupplyItemTypeCode_Value_Value_MAX = SupplyItemTypeCode_Value_DEVICE;
const int SupplyItemTypeCode_Value_Value_ARRAYSIZE = SupplyItemTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* SupplyItemTypeCode_Value_descriptor();
inline const ::std::string& SupplyItemTypeCode_Value_Name(SupplyItemTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    SupplyItemTypeCode_Value_descriptor(), value);
}
inline bool SupplyItemTypeCode_Value_Parse(
    const ::std::string& name, SupplyItemTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SupplyItemTypeCode_Value>(
    SupplyItemTypeCode_Value_descriptor(), name, value);
}
enum SupplyTypeCode_Value {
  SupplyTypeCode_Value_INVALID_UNINITIALIZED = 0,
  SupplyTypeCode_Value_CENTRAL = 1,
  SupplyTypeCode_Value_NONSTOCK = 2,
  SupplyTypeCode_Value_SupplyTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SupplyTypeCode_Value_SupplyTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SupplyTypeCode_Value_IsValid(int value);
const SupplyTypeCode_Value SupplyTypeCode_Value_Value_MIN = SupplyTypeCode_Value_INVALID_UNINITIALIZED;
const SupplyTypeCode_Value SupplyTypeCode_Value_Value_MAX = SupplyTypeCode_Value_NONSTOCK;
const int SupplyTypeCode_Value_Value_ARRAYSIZE = SupplyTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* SupplyTypeCode_Value_descriptor();
inline const ::std::string& SupplyTypeCode_Value_Name(SupplyTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    SupplyTypeCode_Value_descriptor(), value);
}
inline bool SupplyTypeCode_Value_Parse(
    const ::std::string& name, SupplyTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SupplyTypeCode_Value>(
    SupplyTypeCode_Value_descriptor(), name, value);
}
enum SupplyRequestReasonCode_Value {
  SupplyRequestReasonCode_Value_INVALID_UNINITIALIZED = 0,
  SupplyRequestReasonCode_Value_PATIENT_CARE = 1,
  SupplyRequestReasonCode_Value_WARD_STOCK = 2,
  SupplyRequestReasonCode_Value_SupplyRequestReasonCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SupplyRequestReasonCode_Value_SupplyRequestReasonCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SupplyRequestReasonCode_Value_IsValid(int value);
const SupplyRequestReasonCode_Value SupplyRequestReasonCode_Value_Value_MIN = SupplyRequestReasonCode_Value_INVALID_UNINITIALIZED;
const SupplyRequestReasonCode_Value SupplyRequestReasonCode_Value_Value_MAX = SupplyRequestReasonCode_Value_WARD_STOCK;
const int SupplyRequestReasonCode_Value_Value_ARRAYSIZE = SupplyRequestReasonCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* SupplyRequestReasonCode_Value_descriptor();
inline const ::std::string& SupplyRequestReasonCode_Value_Name(SupplyRequestReasonCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    SupplyRequestReasonCode_Value_descriptor(), value);
}
inline bool SupplyRequestReasonCode_Value_Parse(
    const ::std::string& name, SupplyRequestReasonCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SupplyRequestReasonCode_Value>(
    SupplyRequestReasonCode_Value_descriptor(), name, value);
}
enum SupplyRequestStatusCode_Value {
  SupplyRequestStatusCode_Value_INVALID_UNINITIALIZED = 0,
  SupplyRequestStatusCode_Value_DRAFT = 1,
  SupplyRequestStatusCode_Value_ACTIVE = 2,
  SupplyRequestStatusCode_Value_SUSPENDED = 3,
  SupplyRequestStatusCode_Value_CANCELLED = 4,
  SupplyRequestStatusCode_Value_COMPLETED = 5,
  SupplyRequestStatusCode_Value_ENTERED_IN_ERROR = 6,
  SupplyRequestStatusCode_Value_UNKNOWN = 7,
  SupplyRequestStatusCode_Value_SupplyRequestStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SupplyRequestStatusCode_Value_SupplyRequestStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SupplyRequestStatusCode_Value_IsValid(int value);
const SupplyRequestStatusCode_Value SupplyRequestStatusCode_Value_Value_MIN = SupplyRequestStatusCode_Value_INVALID_UNINITIALIZED;
const SupplyRequestStatusCode_Value SupplyRequestStatusCode_Value_Value_MAX = SupplyRequestStatusCode_Value_UNKNOWN;
const int SupplyRequestStatusCode_Value_Value_ARRAYSIZE = SupplyRequestStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* SupplyRequestStatusCode_Value_descriptor();
inline const ::std::string& SupplyRequestStatusCode_Value_Name(SupplyRequestStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    SupplyRequestStatusCode_Value_descriptor(), value);
}
inline bool SupplyRequestStatusCode_Value_Parse(
    const ::std::string& name, SupplyRequestStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SupplyRequestStatusCode_Value>(
    SupplyRequestStatusCode_Value_descriptor(), name, value);
}
enum SystemRestfulInteractionCode_Value {
  SystemRestfulInteractionCode_Value_INVALID_UNINITIALIZED = 0,
  SystemRestfulInteractionCode_Value_TRANSACTION = 1,
  SystemRestfulInteractionCode_Value_BATCH = 2,
  SystemRestfulInteractionCode_Value_SEARCH_SYSTEM = 3,
  SystemRestfulInteractionCode_Value_HISTORY_SYSTEM = 4,
  SystemRestfulInteractionCode_Value_SystemRestfulInteractionCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SystemRestfulInteractionCode_Value_SystemRestfulInteractionCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SystemRestfulInteractionCode_Value_IsValid(int value);
const SystemRestfulInteractionCode_Value SystemRestfulInteractionCode_Value_Value_MIN = SystemRestfulInteractionCode_Value_INVALID_UNINITIALIZED;
const SystemRestfulInteractionCode_Value SystemRestfulInteractionCode_Value_Value_MAX = SystemRestfulInteractionCode_Value_HISTORY_SYSTEM;
const int SystemRestfulInteractionCode_Value_Value_ARRAYSIZE = SystemRestfulInteractionCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* SystemRestfulInteractionCode_Value_descriptor();
inline const ::std::string& SystemRestfulInteractionCode_Value_Name(SystemRestfulInteractionCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    SystemRestfulInteractionCode_Value_descriptor(), value);
}
inline bool SystemRestfulInteractionCode_Value_Parse(
    const ::std::string& name, SystemRestfulInteractionCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SystemRestfulInteractionCode_Value>(
    SystemRestfulInteractionCode_Value_descriptor(), name, value);
}
enum SystemVersionProcessingModeCode_Value {
  SystemVersionProcessingModeCode_Value_INVALID_UNINITIALIZED = 0,
  SystemVersionProcessingModeCode_Value_DEFAULT = 1,
  SystemVersionProcessingModeCode_Value_CHECK = 2,
  SystemVersionProcessingModeCode_Value_OVERRIDE = 3,
  SystemVersionProcessingModeCode_Value_SystemVersionProcessingModeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SystemVersionProcessingModeCode_Value_SystemVersionProcessingModeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SystemVersionProcessingModeCode_Value_IsValid(int value);
const SystemVersionProcessingModeCode_Value SystemVersionProcessingModeCode_Value_Value_MIN = SystemVersionProcessingModeCode_Value_INVALID_UNINITIALIZED;
const SystemVersionProcessingModeCode_Value SystemVersionProcessingModeCode_Value_Value_MAX = SystemVersionProcessingModeCode_Value_OVERRIDE;
const int SystemVersionProcessingModeCode_Value_Value_ARRAYSIZE = SystemVersionProcessingModeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* SystemVersionProcessingModeCode_Value_descriptor();
inline const ::std::string& SystemVersionProcessingModeCode_Value_Name(SystemVersionProcessingModeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    SystemVersionProcessingModeCode_Value_descriptor(), value);
}
inline bool SystemVersionProcessingModeCode_Value_Parse(
    const ::std::string& name, SystemVersionProcessingModeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SystemVersionProcessingModeCode_Value>(
    SystemVersionProcessingModeCode_Value_descriptor(), name, value);
}
enum TaskPerformerTypeCode_Value {
  TaskPerformerTypeCode_Value_INVALID_UNINITIALIZED = 0,
  TaskPerformerTypeCode_Value_REQUESTER = 1,
  TaskPerformerTypeCode_Value_DISPATCHER = 2,
  TaskPerformerTypeCode_Value_SCHEDULER = 3,
  TaskPerformerTypeCode_Value_PERFORMER = 4,
  TaskPerformerTypeCode_Value_MONITOR = 5,
  TaskPerformerTypeCode_Value_MANAGER = 6,
  TaskPerformerTypeCode_Value_ACQUIRER = 7,
  TaskPerformerTypeCode_Value_REVIEWER = 8,
  TaskPerformerTypeCode_Value_TaskPerformerTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TaskPerformerTypeCode_Value_TaskPerformerTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TaskPerformerTypeCode_Value_IsValid(int value);
const TaskPerformerTypeCode_Value TaskPerformerTypeCode_Value_Value_MIN = TaskPerformerTypeCode_Value_INVALID_UNINITIALIZED;
const TaskPerformerTypeCode_Value TaskPerformerTypeCode_Value_Value_MAX = TaskPerformerTypeCode_Value_REVIEWER;
const int TaskPerformerTypeCode_Value_Value_ARRAYSIZE = TaskPerformerTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* TaskPerformerTypeCode_Value_descriptor();
inline const ::std::string& TaskPerformerTypeCode_Value_Name(TaskPerformerTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    TaskPerformerTypeCode_Value_descriptor(), value);
}
inline bool TaskPerformerTypeCode_Value_Parse(
    const ::std::string& name, TaskPerformerTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TaskPerformerTypeCode_Value>(
    TaskPerformerTypeCode_Value_descriptor(), name, value);
}
enum TemplateStatusCodeCode_Value {
  TemplateStatusCodeCode_Value_INVALID_UNINITIALIZED = 0,
  TemplateStatusCodeCode_Value_DRAFT = 1,
  TemplateStatusCodeCode_Value_PENDING = 2,
  TemplateStatusCodeCode_Value_ACTIVE = 3,
  TemplateStatusCodeCode_Value_REVIEW = 4,
  TemplateStatusCodeCode_Value_CANCELLED = 5,
  TemplateStatusCodeCode_Value_REJECTED = 6,
  TemplateStatusCodeCode_Value_RETIRED = 7,
  TemplateStatusCodeCode_Value_TERMINATED = 8,
  TemplateStatusCodeCode_Value_TemplateStatusCodeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TemplateStatusCodeCode_Value_TemplateStatusCodeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TemplateStatusCodeCode_Value_IsValid(int value);
const TemplateStatusCodeCode_Value TemplateStatusCodeCode_Value_Value_MIN = TemplateStatusCodeCode_Value_INVALID_UNINITIALIZED;
const TemplateStatusCodeCode_Value TemplateStatusCodeCode_Value_Value_MAX = TemplateStatusCodeCode_Value_TERMINATED;
const int TemplateStatusCodeCode_Value_Value_ARRAYSIZE = TemplateStatusCodeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* TemplateStatusCodeCode_Value_descriptor();
inline const ::std::string& TemplateStatusCodeCode_Value_Name(TemplateStatusCodeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    TemplateStatusCodeCode_Value_descriptor(), value);
}
inline bool TemplateStatusCodeCode_Value_Parse(
    const ::std::string& name, TemplateStatusCodeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TemplateStatusCodeCode_Value>(
    TemplateStatusCodeCode_Value_descriptor(), name, value);
}
enum TaskStatusCode_Value {
  TaskStatusCode_Value_INVALID_UNINITIALIZED = 0,
  TaskStatusCode_Value_DRAFT = 1,
  TaskStatusCode_Value_REQUESTED = 2,
  TaskStatusCode_Value_RECEIVED = 3,
  TaskStatusCode_Value_ACCEPTED = 4,
  TaskStatusCode_Value_REJECTED = 5,
  TaskStatusCode_Value_READY = 6,
  TaskStatusCode_Value_CANCELLED = 7,
  TaskStatusCode_Value_IN_PROGRESS = 8,
  TaskStatusCode_Value_ON_HOLD = 9,
  TaskStatusCode_Value_FAILED = 10,
  TaskStatusCode_Value_COMPLETED = 11,
  TaskStatusCode_Value_ENTERED_IN_ERROR = 12,
  TaskStatusCode_Value_TaskStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TaskStatusCode_Value_TaskStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TaskStatusCode_Value_IsValid(int value);
const TaskStatusCode_Value TaskStatusCode_Value_Value_MIN = TaskStatusCode_Value_INVALID_UNINITIALIZED;
const TaskStatusCode_Value TaskStatusCode_Value_Value_MAX = TaskStatusCode_Value_ENTERED_IN_ERROR;
const int TaskStatusCode_Value_Value_ARRAYSIZE = TaskStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* TaskStatusCode_Value_descriptor();
inline const ::std::string& TaskStatusCode_Value_Name(TaskStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    TaskStatusCode_Value_descriptor(), value);
}
inline bool TaskStatusCode_Value_Parse(
    const ::std::string& name, TaskStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TaskStatusCode_Value>(
    TaskStatusCode_Value_descriptor(), name, value);
}
enum TestScriptOperationCodeCode_Value {
  TestScriptOperationCodeCode_Value_INVALID_UNINITIALIZED = 0,
  TestScriptOperationCodeCode_Value_READ = 1,
  TestScriptOperationCodeCode_Value_VREAD = 2,
  TestScriptOperationCodeCode_Value_UPDATE = 3,
  TestScriptOperationCodeCode_Value_UPDATE_CREATE = 4,
  TestScriptOperationCodeCode_Value_DELETE = 5,
  TestScriptOperationCodeCode_Value_DELETE_COND_SINGLE = 6,
  TestScriptOperationCodeCode_Value_DELETE_COND_MULTIPLE = 7,
  TestScriptOperationCodeCode_Value_HISTORY = 8,
  TestScriptOperationCodeCode_Value_CREATE = 9,
  TestScriptOperationCodeCode_Value_SEARCH = 10,
  TestScriptOperationCodeCode_Value_BATCH = 11,
  TestScriptOperationCodeCode_Value_TRANSACTION = 12,
  TestScriptOperationCodeCode_Value_CAPABILITIES = 13,
  TestScriptOperationCodeCode_Value_APPLY = 14,
  TestScriptOperationCodeCode_Value_CANCEL = 15,
  TestScriptOperationCodeCode_Value_CLOSURE = 16,
  TestScriptOperationCodeCode_Value_COMPOSE = 17,
  TestScriptOperationCodeCode_Value_CONFORMS = 18,
  TestScriptOperationCodeCode_Value_DATA_REQUIREMENTS = 19,
  TestScriptOperationCodeCode_Value_DOCUMENT = 20,
  TestScriptOperationCodeCode_Value_EVALUATE = 21,
  TestScriptOperationCodeCode_Value_EVALUATE_MEASURE = 22,
  TestScriptOperationCodeCode_Value_EVERYTHING = 23,
  TestScriptOperationCodeCode_Value_EXPAND = 24,
  TestScriptOperationCodeCode_Value_FAIL = 25,
  TestScriptOperationCodeCode_Value_FIND = 26,
  TestScriptOperationCodeCode_Value_FINISH = 27,
  TestScriptOperationCodeCode_Value_IMPLEMENTS = 28,
  TestScriptOperationCodeCode_Value_LOOKUP = 29,
  TestScriptOperationCodeCode_Value_MATCH = 30,
  TestScriptOperationCodeCode_Value_META = 31,
  TestScriptOperationCodeCode_Value_META_ADD = 32,
  TestScriptOperationCodeCode_Value_META_DELETE = 33,
  TestScriptOperationCodeCode_Value_POPULATE = 34,
  TestScriptOperationCodeCode_Value_POPULATEHTML = 35,
  TestScriptOperationCodeCode_Value_POPULATELINK = 36,
  TestScriptOperationCodeCode_Value_PROCESS_MESSAGE = 37,
  TestScriptOperationCodeCode_Value_QUESTIONNAIRE = 38,
  TestScriptOperationCodeCode_Value_RELEASE = 39,
  TestScriptOperationCodeCode_Value_RESERVE = 40,
  TestScriptOperationCodeCode_Value_RESUME = 41,
  TestScriptOperationCodeCode_Value_SET_INPUT = 42,
  TestScriptOperationCodeCode_Value_SET_OUTPUT = 43,
  TestScriptOperationCodeCode_Value_START = 44,
  TestScriptOperationCodeCode_Value_STATS = 45,
  TestScriptOperationCodeCode_Value_STOP = 46,
  TestScriptOperationCodeCode_Value_SUBSET = 47,
  TestScriptOperationCodeCode_Value_SUBSUMES = 48,
  TestScriptOperationCodeCode_Value_SUSPEND = 49,
  TestScriptOperationCodeCode_Value_TRANSFORM = 50,
  TestScriptOperationCodeCode_Value_TRANSLATE = 51,
  TestScriptOperationCodeCode_Value_VALIDATE = 52,
  TestScriptOperationCodeCode_Value_VALIDATE_CODE = 53,
  TestScriptOperationCodeCode_Value_TestScriptOperationCodeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TestScriptOperationCodeCode_Value_TestScriptOperationCodeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TestScriptOperationCodeCode_Value_IsValid(int value);
const TestScriptOperationCodeCode_Value TestScriptOperationCodeCode_Value_Value_MIN = TestScriptOperationCodeCode_Value_INVALID_UNINITIALIZED;
const TestScriptOperationCodeCode_Value TestScriptOperationCodeCode_Value_Value_MAX = TestScriptOperationCodeCode_Value_VALIDATE_CODE;
const int TestScriptOperationCodeCode_Value_Value_ARRAYSIZE = TestScriptOperationCodeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* TestScriptOperationCodeCode_Value_descriptor();
inline const ::std::string& TestScriptOperationCodeCode_Value_Name(TestScriptOperationCodeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    TestScriptOperationCodeCode_Value_descriptor(), value);
}
inline bool TestScriptOperationCodeCode_Value_Parse(
    const ::std::string& name, TestScriptOperationCodeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestScriptOperationCodeCode_Value>(
    TestScriptOperationCodeCode_Value_descriptor(), name, value);
}
enum TestScriptProfileDestinationTypeCode_Value {
  TestScriptProfileDestinationTypeCode_Value_INVALID_UNINITIALIZED = 0,
  TestScriptProfileDestinationTypeCode_Value_FHIR_SERVER = 1,
  TestScriptProfileDestinationTypeCode_Value_FHIR_SDC_FORMMANAGER = 2,
  TestScriptProfileDestinationTypeCode_Value_FHIR_SDC_FORMPROCESSOR = 3,
  TestScriptProfileDestinationTypeCode_Value_FHIR_SDC_FORMRECEIVER = 4,
  TestScriptProfileDestinationTypeCode_Value_TestScriptProfileDestinationTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TestScriptProfileDestinationTypeCode_Value_TestScriptProfileDestinationTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TestScriptProfileDestinationTypeCode_Value_IsValid(int value);
const TestScriptProfileDestinationTypeCode_Value TestScriptProfileDestinationTypeCode_Value_Value_MIN = TestScriptProfileDestinationTypeCode_Value_INVALID_UNINITIALIZED;
const TestScriptProfileDestinationTypeCode_Value TestScriptProfileDestinationTypeCode_Value_Value_MAX = TestScriptProfileDestinationTypeCode_Value_FHIR_SDC_FORMRECEIVER;
const int TestScriptProfileDestinationTypeCode_Value_Value_ARRAYSIZE = TestScriptProfileDestinationTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* TestScriptProfileDestinationTypeCode_Value_descriptor();
inline const ::std::string& TestScriptProfileDestinationTypeCode_Value_Name(TestScriptProfileDestinationTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    TestScriptProfileDestinationTypeCode_Value_descriptor(), value);
}
inline bool TestScriptProfileDestinationTypeCode_Value_Parse(
    const ::std::string& name, TestScriptProfileDestinationTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestScriptProfileDestinationTypeCode_Value>(
    TestScriptProfileDestinationTypeCode_Value_descriptor(), name, value);
}
enum TestScriptProfileOriginTypeCode_Value {
  TestScriptProfileOriginTypeCode_Value_INVALID_UNINITIALIZED = 0,
  TestScriptProfileOriginTypeCode_Value_FHIR_CLIENT = 1,
  TestScriptProfileOriginTypeCode_Value_FHIR_SDC_FORMFILLER = 2,
  TestScriptProfileOriginTypeCode_Value_TestScriptProfileOriginTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TestScriptProfileOriginTypeCode_Value_TestScriptProfileOriginTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TestScriptProfileOriginTypeCode_Value_IsValid(int value);
const TestScriptProfileOriginTypeCode_Value TestScriptProfileOriginTypeCode_Value_Value_MIN = TestScriptProfileOriginTypeCode_Value_INVALID_UNINITIALIZED;
const TestScriptProfileOriginTypeCode_Value TestScriptProfileOriginTypeCode_Value_Value_MAX = TestScriptProfileOriginTypeCode_Value_FHIR_SDC_FORMFILLER;
const int TestScriptProfileOriginTypeCode_Value_Value_ARRAYSIZE = TestScriptProfileOriginTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* TestScriptProfileOriginTypeCode_Value_descriptor();
inline const ::std::string& TestScriptProfileOriginTypeCode_Value_Name(TestScriptProfileOriginTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    TestScriptProfileOriginTypeCode_Value_descriptor(), value);
}
inline bool TestScriptProfileOriginTypeCode_Value_Parse(
    const ::std::string& name, TestScriptProfileOriginTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestScriptProfileOriginTypeCode_Value>(
    TestScriptProfileOriginTypeCode_Value_descriptor(), name, value);
}
enum TransactionModeCode_Value {
  TransactionModeCode_Value_INVALID_UNINITIALIZED = 0,
  TransactionModeCode_Value_NOT_SUPPORTED = 1,
  TransactionModeCode_Value_BATCH = 2,
  TransactionModeCode_Value_TRANSACTION = 3,
  TransactionModeCode_Value_BOTH = 4,
  TransactionModeCode_Value_TransactionModeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TransactionModeCode_Value_TransactionModeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TransactionModeCode_Value_IsValid(int value);
const TransactionModeCode_Value TransactionModeCode_Value_Value_MIN = TransactionModeCode_Value_INVALID_UNINITIALIZED;
const TransactionModeCode_Value TransactionModeCode_Value_Value_MAX = TransactionModeCode_Value_BOTH;
const int TransactionModeCode_Value_Value_ARRAYSIZE = TransactionModeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* TransactionModeCode_Value_descriptor();
inline const ::std::string& TransactionModeCode_Value_Name(TransactionModeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    TransactionModeCode_Value_descriptor(), value);
}
inline bool TransactionModeCode_Value_Parse(
    const ::std::string& name, TransactionModeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TransactionModeCode_Value>(
    TransactionModeCode_Value_descriptor(), name, value);
}
enum TypeDerivationRuleCode_Value {
  TypeDerivationRuleCode_Value_INVALID_UNINITIALIZED = 0,
  TypeDerivationRuleCode_Value_SPECIALIZATION = 1,
  TypeDerivationRuleCode_Value_CONSTRAINT = 2,
  TypeDerivationRuleCode_Value_TypeDerivationRuleCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TypeDerivationRuleCode_Value_TypeDerivationRuleCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TypeDerivationRuleCode_Value_IsValid(int value);
const TypeDerivationRuleCode_Value TypeDerivationRuleCode_Value_Value_MIN = TypeDerivationRuleCode_Value_INVALID_UNINITIALIZED;
const TypeDerivationRuleCode_Value TypeDerivationRuleCode_Value_Value_MAX = TypeDerivationRuleCode_Value_CONSTRAINT;
const int TypeDerivationRuleCode_Value_Value_ARRAYSIZE = TypeDerivationRuleCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* TypeDerivationRuleCode_Value_descriptor();
inline const ::std::string& TypeDerivationRuleCode_Value_Name(TypeDerivationRuleCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    TypeDerivationRuleCode_Value_descriptor(), value);
}
inline bool TypeDerivationRuleCode_Value_Parse(
    const ::std::string& name, TypeDerivationRuleCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TypeDerivationRuleCode_Value>(
    TypeDerivationRuleCode_Value_descriptor(), name, value);
}
enum TypeRestfulInteractionCode_Value {
  TypeRestfulInteractionCode_Value_INVALID_UNINITIALIZED = 0,
  TypeRestfulInteractionCode_Value_READ = 1,
  TypeRestfulInteractionCode_Value_VREAD = 2,
  TypeRestfulInteractionCode_Value_UPDATE = 3,
  TypeRestfulInteractionCode_Value_PATCH = 4,
  TypeRestfulInteractionCode_Value_DELETE = 5,
  TypeRestfulInteractionCode_Value_HISTORY_INSTANCE = 6,
  TypeRestfulInteractionCode_Value_HISTORY_TYPE = 7,
  TypeRestfulInteractionCode_Value_CREATE = 8,
  TypeRestfulInteractionCode_Value_SEARCH_TYPE = 9,
  TypeRestfulInteractionCode_Value_TypeRestfulInteractionCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TypeRestfulInteractionCode_Value_TypeRestfulInteractionCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TypeRestfulInteractionCode_Value_IsValid(int value);
const TypeRestfulInteractionCode_Value TypeRestfulInteractionCode_Value_Value_MIN = TypeRestfulInteractionCode_Value_INVALID_UNINITIALIZED;
const TypeRestfulInteractionCode_Value TypeRestfulInteractionCode_Value_Value_MAX = TypeRestfulInteractionCode_Value_SEARCH_TYPE;
const int TypeRestfulInteractionCode_Value_Value_ARRAYSIZE = TypeRestfulInteractionCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* TypeRestfulInteractionCode_Value_descriptor();
inline const ::std::string& TypeRestfulInteractionCode_Value_Name(TypeRestfulInteractionCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    TypeRestfulInteractionCode_Value_descriptor(), value);
}
inline bool TypeRestfulInteractionCode_Value_Parse(
    const ::std::string& name, TypeRestfulInteractionCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TypeRestfulInteractionCode_Value>(
    TypeRestfulInteractionCode_Value_descriptor(), name, value);
}
enum UDIEntryTypeCode_Value {
  UDIEntryTypeCode_Value_INVALID_UNINITIALIZED = 0,
  UDIEntryTypeCode_Value_BARCODE = 1,
  UDIEntryTypeCode_Value_RFID = 2,
  UDIEntryTypeCode_Value_MANUAL = 3,
  UDIEntryTypeCode_Value_CARD = 4,
  UDIEntryTypeCode_Value_SELF_REPORTED = 5,
  UDIEntryTypeCode_Value_UNKNOWN = 6,
  UDIEntryTypeCode_Value_UDIEntryTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UDIEntryTypeCode_Value_UDIEntryTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UDIEntryTypeCode_Value_IsValid(int value);
const UDIEntryTypeCode_Value UDIEntryTypeCode_Value_Value_MIN = UDIEntryTypeCode_Value_INVALID_UNINITIALIZED;
const UDIEntryTypeCode_Value UDIEntryTypeCode_Value_Value_MAX = UDIEntryTypeCode_Value_UNKNOWN;
const int UDIEntryTypeCode_Value_Value_ARRAYSIZE = UDIEntryTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* UDIEntryTypeCode_Value_descriptor();
inline const ::std::string& UDIEntryTypeCode_Value_Name(UDIEntryTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    UDIEntryTypeCode_Value_descriptor(), value);
}
inline bool UDIEntryTypeCode_Value_Parse(
    const ::std::string& name, UDIEntryTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UDIEntryTypeCode_Value>(
    UDIEntryTypeCode_Value_descriptor(), name, value);
}
enum UnknownContentCodeCode_Value {
  UnknownContentCodeCode_Value_INVALID_UNINITIALIZED = 0,
  UnknownContentCodeCode_Value_NO = 1,
  UnknownContentCodeCode_Value_EXTENSIONS = 2,
  UnknownContentCodeCode_Value_ELEMENTS = 3,
  UnknownContentCodeCode_Value_BOTH = 4,
  UnknownContentCodeCode_Value_UnknownContentCodeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UnknownContentCodeCode_Value_UnknownContentCodeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UnknownContentCodeCode_Value_IsValid(int value);
const UnknownContentCodeCode_Value UnknownContentCodeCode_Value_Value_MIN = UnknownContentCodeCode_Value_INVALID_UNINITIALIZED;
const UnknownContentCodeCode_Value UnknownContentCodeCode_Value_Value_MAX = UnknownContentCodeCode_Value_BOTH;
const int UnknownContentCodeCode_Value_Value_ARRAYSIZE = UnknownContentCodeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* UnknownContentCodeCode_Value_descriptor();
inline const ::std::string& UnknownContentCodeCode_Value_Name(UnknownContentCodeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    UnknownContentCodeCode_Value_descriptor(), value);
}
inline bool UnknownContentCodeCode_Value_Parse(
    const ::std::string& name, UnknownContentCodeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UnknownContentCodeCode_Value>(
    UnknownContentCodeCode_Value_descriptor(), name, value);
}
enum UsageContextTypeCode_Value {
  UsageContextTypeCode_Value_INVALID_UNINITIALIZED = 0,
  UsageContextTypeCode_Value_GENDER = 1,
  UsageContextTypeCode_Value_AGE = 2,
  UsageContextTypeCode_Value_FOCUS = 3,
  UsageContextTypeCode_Value_USER = 4,
  UsageContextTypeCode_Value_WORKFLOW = 5,
  UsageContextTypeCode_Value_TASK = 6,
  UsageContextTypeCode_Value_VENUE = 7,
  UsageContextTypeCode_Value_SPECIES = 8,
  UsageContextTypeCode_Value_UsageContextTypeCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UsageContextTypeCode_Value_UsageContextTypeCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UsageContextTypeCode_Value_IsValid(int value);
const UsageContextTypeCode_Value UsageContextTypeCode_Value_Value_MIN = UsageContextTypeCode_Value_INVALID_UNINITIALIZED;
const UsageContextTypeCode_Value UsageContextTypeCode_Value_Value_MAX = UsageContextTypeCode_Value_SPECIES;
const int UsageContextTypeCode_Value_Value_ARRAYSIZE = UsageContextTypeCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* UsageContextTypeCode_Value_descriptor();
inline const ::std::string& UsageContextTypeCode_Value_Name(UsageContextTypeCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    UsageContextTypeCode_Value_descriptor(), value);
}
inline bool UsageContextTypeCode_Value_Parse(
    const ::std::string& name, UsageContextTypeCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UsageContextTypeCode_Value>(
    UsageContextTypeCode_Value_descriptor(), name, value);
}
enum ConfidentialityClassificationCode_Value {
  ConfidentialityClassificationCode_Value_INVALID_UNINITIALIZED = 0,
  ConfidentialityClassificationCode_Value_U = 1,
  ConfidentialityClassificationCode_Value_L = 2,
  ConfidentialityClassificationCode_Value_M = 3,
  ConfidentialityClassificationCode_Value_N = 4,
  ConfidentialityClassificationCode_Value_R = 5,
  ConfidentialityClassificationCode_Value_V = 6,
  ConfidentialityClassificationCode_Value_ConfidentialityClassificationCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ConfidentialityClassificationCode_Value_ConfidentialityClassificationCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ConfidentialityClassificationCode_Value_IsValid(int value);
const ConfidentialityClassificationCode_Value ConfidentialityClassificationCode_Value_Value_MIN = ConfidentialityClassificationCode_Value_INVALID_UNINITIALIZED;
const ConfidentialityClassificationCode_Value ConfidentialityClassificationCode_Value_Value_MAX = ConfidentialityClassificationCode_Value_V;
const int ConfidentialityClassificationCode_Value_Value_ARRAYSIZE = ConfidentialityClassificationCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConfidentialityClassificationCode_Value_descriptor();
inline const ::std::string& ConfidentialityClassificationCode_Value_Name(ConfidentialityClassificationCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConfidentialityClassificationCode_Value_descriptor(), value);
}
inline bool ConfidentialityClassificationCode_Value_Parse(
    const ::std::string& name, ConfidentialityClassificationCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConfidentialityClassificationCode_Value>(
    ConfidentialityClassificationCode_Value_descriptor(), name, value);
}
enum VaccinationProtocolDoseStatuscodesCode_Value {
  VaccinationProtocolDoseStatuscodesCode_Value_INVALID_UNINITIALIZED = 0,
  VaccinationProtocolDoseStatuscodesCode_Value_COUNT = 1,
  VaccinationProtocolDoseStatuscodesCode_Value_NOCOUNT = 2,
  VaccinationProtocolDoseStatuscodesCode_Value_VaccinationProtocolDoseStatuscodesCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VaccinationProtocolDoseStatuscodesCode_Value_VaccinationProtocolDoseStatuscodesCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VaccinationProtocolDoseStatuscodesCode_Value_IsValid(int value);
const VaccinationProtocolDoseStatuscodesCode_Value VaccinationProtocolDoseStatuscodesCode_Value_Value_MIN = VaccinationProtocolDoseStatuscodesCode_Value_INVALID_UNINITIALIZED;
const VaccinationProtocolDoseStatuscodesCode_Value VaccinationProtocolDoseStatuscodesCode_Value_Value_MAX = VaccinationProtocolDoseStatuscodesCode_Value_NOCOUNT;
const int VaccinationProtocolDoseStatuscodesCode_Value_Value_ARRAYSIZE = VaccinationProtocolDoseStatuscodesCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* VaccinationProtocolDoseStatuscodesCode_Value_descriptor();
inline const ::std::string& VaccinationProtocolDoseStatuscodesCode_Value_Name(VaccinationProtocolDoseStatuscodesCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    VaccinationProtocolDoseStatuscodesCode_Value_descriptor(), value);
}
inline bool VaccinationProtocolDoseStatuscodesCode_Value_Parse(
    const ::std::string& name, VaccinationProtocolDoseStatuscodesCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VaccinationProtocolDoseStatuscodesCode_Value>(
    VaccinationProtocolDoseStatuscodesCode_Value_descriptor(), name, value);
}
enum VaccinationProtocolDoseStatusReasoncodesCode_Value {
  VaccinationProtocolDoseStatusReasoncodesCode_Value_INVALID_UNINITIALIZED = 0,
  VaccinationProtocolDoseStatusReasoncodesCode_Value_ADVSTORAGE = 1,
  VaccinationProtocolDoseStatusReasoncodesCode_Value_COLDCHBRK = 2,
  VaccinationProtocolDoseStatusReasoncodesCode_Value_EXPLOT = 3,
  VaccinationProtocolDoseStatusReasoncodesCode_Value_OUTSIDESCHED = 4,
  VaccinationProtocolDoseStatusReasoncodesCode_Value_PRODRECALL = 5,
  VaccinationProtocolDoseStatusReasoncodesCode_Value_VaccinationProtocolDoseStatusReasoncodesCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VaccinationProtocolDoseStatusReasoncodesCode_Value_VaccinationProtocolDoseStatusReasoncodesCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VaccinationProtocolDoseStatusReasoncodesCode_Value_IsValid(int value);
const VaccinationProtocolDoseStatusReasoncodesCode_Value VaccinationProtocolDoseStatusReasoncodesCode_Value_Value_MIN = VaccinationProtocolDoseStatusReasoncodesCode_Value_INVALID_UNINITIALIZED;
const VaccinationProtocolDoseStatusReasoncodesCode_Value VaccinationProtocolDoseStatusReasoncodesCode_Value_Value_MAX = VaccinationProtocolDoseStatusReasoncodesCode_Value_PRODRECALL;
const int VaccinationProtocolDoseStatusReasoncodesCode_Value_Value_ARRAYSIZE = VaccinationProtocolDoseStatusReasoncodesCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* VaccinationProtocolDoseStatusReasoncodesCode_Value_descriptor();
inline const ::std::string& VaccinationProtocolDoseStatusReasoncodesCode_Value_Name(VaccinationProtocolDoseStatusReasoncodesCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    VaccinationProtocolDoseStatusReasoncodesCode_Value_descriptor(), value);
}
inline bool VaccinationProtocolDoseStatusReasoncodesCode_Value_Parse(
    const ::std::string& name, VaccinationProtocolDoseStatusReasoncodesCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VaccinationProtocolDoseStatusReasoncodesCode_Value>(
    VaccinationProtocolDoseStatusReasoncodesCode_Value_descriptor(), name, value);
}
enum sequenceStatusCode_Value {
  sequenceStatusCode_Value_INVALID_UNINITIALIZED = 0,
  sequenceStatusCode_Value_POSITIVE = 1,
  sequenceStatusCode_Value_NEGATIVE = 2,
  sequenceStatusCode_Value_ABSENT = 3,
  sequenceStatusCode_Value_sequenceStatusCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  sequenceStatusCode_Value_sequenceStatusCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool sequenceStatusCode_Value_IsValid(int value);
const sequenceStatusCode_Value sequenceStatusCode_Value_Value_MIN = sequenceStatusCode_Value_INVALID_UNINITIALIZED;
const sequenceStatusCode_Value sequenceStatusCode_Value_Value_MAX = sequenceStatusCode_Value_ABSENT;
const int sequenceStatusCode_Value_Value_ARRAYSIZE = sequenceStatusCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* sequenceStatusCode_Value_descriptor();
inline const ::std::string& sequenceStatusCode_Value_Name(sequenceStatusCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    sequenceStatusCode_Value_descriptor(), value);
}
inline bool sequenceStatusCode_Value_Parse(
    const ::std::string& name, sequenceStatusCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<sequenceStatusCode_Value>(
    sequenceStatusCode_Value_descriptor(), name, value);
}
enum ResourceVersionPolicyCode_Value {
  ResourceVersionPolicyCode_Value_INVALID_UNINITIALIZED = 0,
  ResourceVersionPolicyCode_Value_NO_VERSION = 1,
  ResourceVersionPolicyCode_Value_VERSIONED = 2,
  ResourceVersionPolicyCode_Value_VERSIONED_UPDATE = 3,
  ResourceVersionPolicyCode_Value_ResourceVersionPolicyCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ResourceVersionPolicyCode_Value_ResourceVersionPolicyCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ResourceVersionPolicyCode_Value_IsValid(int value);
const ResourceVersionPolicyCode_Value ResourceVersionPolicyCode_Value_Value_MIN = ResourceVersionPolicyCode_Value_INVALID_UNINITIALIZED;
const ResourceVersionPolicyCode_Value ResourceVersionPolicyCode_Value_Value_MAX = ResourceVersionPolicyCode_Value_VERSIONED_UPDATE;
const int ResourceVersionPolicyCode_Value_Value_ARRAYSIZE = ResourceVersionPolicyCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* ResourceVersionPolicyCode_Value_descriptor();
inline const ::std::string& ResourceVersionPolicyCode_Value_Name(ResourceVersionPolicyCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    ResourceVersionPolicyCode_Value_descriptor(), value);
}
inline bool ResourceVersionPolicyCode_Value_Parse(
    const ::std::string& name, ResourceVersionPolicyCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResourceVersionPolicyCode_Value>(
    ResourceVersionPolicyCode_Value_descriptor(), name, value);
}
enum VisionBaseCode_Value {
  VisionBaseCode_Value_INVALID_UNINITIALIZED = 0,
  VisionBaseCode_Value_UP = 1,
  VisionBaseCode_Value_DOWN = 2,
  VisionBaseCode_Value_IN = 3,
  VisionBaseCode_Value_OUT = 4,
  VisionBaseCode_Value_VisionBaseCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VisionBaseCode_Value_VisionBaseCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VisionBaseCode_Value_IsValid(int value);
const VisionBaseCode_Value VisionBaseCode_Value_Value_MIN = VisionBaseCode_Value_INVALID_UNINITIALIZED;
const VisionBaseCode_Value VisionBaseCode_Value_Value_MAX = VisionBaseCode_Value_OUT;
const int VisionBaseCode_Value_Value_ARRAYSIZE = VisionBaseCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* VisionBaseCode_Value_descriptor();
inline const ::std::string& VisionBaseCode_Value_Name(VisionBaseCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    VisionBaseCode_Value_descriptor(), value);
}
inline bool VisionBaseCode_Value_Parse(
    const ::std::string& name, VisionBaseCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VisionBaseCode_Value>(
    VisionBaseCode_Value_descriptor(), name, value);
}
enum VisionEyesCode_Value {
  VisionEyesCode_Value_INVALID_UNINITIALIZED = 0,
  VisionEyesCode_Value_RIGHT = 1,
  VisionEyesCode_Value_LEFT = 2,
  VisionEyesCode_Value_VisionEyesCode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VisionEyesCode_Value_VisionEyesCode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VisionEyesCode_Value_IsValid(int value);
const VisionEyesCode_Value VisionEyesCode_Value_Value_MIN = VisionEyesCode_Value_INVALID_UNINITIALIZED;
const VisionEyesCode_Value VisionEyesCode_Value_Value_MAX = VisionEyesCode_Value_LEFT;
const int VisionEyesCode_Value_Value_ARRAYSIZE = VisionEyesCode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* VisionEyesCode_Value_descriptor();
inline const ::std::string& VisionEyesCode_Value_Name(VisionEyesCode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    VisionEyesCode_Value_descriptor(), value);
}
inline bool VisionEyesCode_Value_Parse(
    const ::std::string& name, VisionEyesCode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VisionEyesCode_Value>(
    VisionEyesCode_Value_descriptor(), name, value);
}
// ===================================================================

class AbstractTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.AbstractTypeCode) */ {
 public:
  AbstractTypeCode();
  virtual ~AbstractTypeCode();

  AbstractTypeCode(const AbstractTypeCode& from);

  inline AbstractTypeCode& operator=(const AbstractTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbstractTypeCode(AbstractTypeCode&& from) noexcept
    : AbstractTypeCode() {
    *this = ::std::move(from);
  }

  inline AbstractTypeCode& operator=(AbstractTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbstractTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AbstractTypeCode* internal_default_instance() {
    return reinterpret_cast<const AbstractTypeCode*>(
               &_AbstractTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(AbstractTypeCode* other);
  friend void swap(AbstractTypeCode& a, AbstractTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbstractTypeCode* New() const final {
    return CreateMaybeMessage<AbstractTypeCode>(NULL);
  }

  AbstractTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AbstractTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AbstractTypeCode& from);
  void MergeFrom(const AbstractTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AbstractTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AbstractTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    AbstractTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value TYPE =
    AbstractTypeCode_Value_TYPE;
  static const Value ANY =
    AbstractTypeCode_Value_ANY;
  static inline bool Value_IsValid(int value) {
    return AbstractTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    AbstractTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    AbstractTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    AbstractTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return AbstractTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return AbstractTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return AbstractTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.AbstractTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::AbstractTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::AbstractTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.AbstractTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AggregationModeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.AggregationModeCode) */ {
 public:
  AggregationModeCode();
  virtual ~AggregationModeCode();

  AggregationModeCode(const AggregationModeCode& from);

  inline AggregationModeCode& operator=(const AggregationModeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AggregationModeCode(AggregationModeCode&& from) noexcept
    : AggregationModeCode() {
    *this = ::std::move(from);
  }

  inline AggregationModeCode& operator=(AggregationModeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AggregationModeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AggregationModeCode* internal_default_instance() {
    return reinterpret_cast<const AggregationModeCode*>(
               &_AggregationModeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(AggregationModeCode* other);
  friend void swap(AggregationModeCode& a, AggregationModeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AggregationModeCode* New() const final {
    return CreateMaybeMessage<AggregationModeCode>(NULL);
  }

  AggregationModeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AggregationModeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AggregationModeCode& from);
  void MergeFrom(const AggregationModeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AggregationModeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AggregationModeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    AggregationModeCode_Value_INVALID_UNINITIALIZED;
  static const Value CONTAINED =
    AggregationModeCode_Value_CONTAINED;
  static const Value REFERENCED =
    AggregationModeCode_Value_REFERENCED;
  static const Value BUNDLED =
    AggregationModeCode_Value_BUNDLED;
  static inline bool Value_IsValid(int value) {
    return AggregationModeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    AggregationModeCode_Value_Value_MIN;
  static const Value Value_MAX =
    AggregationModeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    AggregationModeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return AggregationModeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return AggregationModeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return AggregationModeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.AggregationModeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::AggregationModeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::AggregationModeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.AggregationModeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BindingStrengthCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.BindingStrengthCode) */ {
 public:
  BindingStrengthCode();
  virtual ~BindingStrengthCode();

  BindingStrengthCode(const BindingStrengthCode& from);

  inline BindingStrengthCode& operator=(const BindingStrengthCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BindingStrengthCode(BindingStrengthCode&& from) noexcept
    : BindingStrengthCode() {
    *this = ::std::move(from);
  }

  inline BindingStrengthCode& operator=(BindingStrengthCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BindingStrengthCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BindingStrengthCode* internal_default_instance() {
    return reinterpret_cast<const BindingStrengthCode*>(
               &_BindingStrengthCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(BindingStrengthCode* other);
  friend void swap(BindingStrengthCode& a, BindingStrengthCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BindingStrengthCode* New() const final {
    return CreateMaybeMessage<BindingStrengthCode>(NULL);
  }

  BindingStrengthCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BindingStrengthCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BindingStrengthCode& from);
  void MergeFrom(const BindingStrengthCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BindingStrengthCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef BindingStrengthCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    BindingStrengthCode_Value_INVALID_UNINITIALIZED;
  static const Value REQUIRED =
    BindingStrengthCode_Value_REQUIRED;
  static const Value EXTENSIBLE =
    BindingStrengthCode_Value_EXTENSIBLE;
  static const Value PREFERRED =
    BindingStrengthCode_Value_PREFERRED;
  static const Value EXAMPLE =
    BindingStrengthCode_Value_EXAMPLE;
  static inline bool Value_IsValid(int value) {
    return BindingStrengthCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    BindingStrengthCode_Value_Value_MIN;
  static const Value Value_MAX =
    BindingStrengthCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    BindingStrengthCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return BindingStrengthCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return BindingStrengthCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return BindingStrengthCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.BindingStrengthCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::BindingStrengthCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::BindingStrengthCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.BindingStrengthCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConstraintSeverityCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ConstraintSeverityCode) */ {
 public:
  ConstraintSeverityCode();
  virtual ~ConstraintSeverityCode();

  ConstraintSeverityCode(const ConstraintSeverityCode& from);

  inline ConstraintSeverityCode& operator=(const ConstraintSeverityCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConstraintSeverityCode(ConstraintSeverityCode&& from) noexcept
    : ConstraintSeverityCode() {
    *this = ::std::move(from);
  }

  inline ConstraintSeverityCode& operator=(ConstraintSeverityCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConstraintSeverityCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConstraintSeverityCode* internal_default_instance() {
    return reinterpret_cast<const ConstraintSeverityCode*>(
               &_ConstraintSeverityCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ConstraintSeverityCode* other);
  friend void swap(ConstraintSeverityCode& a, ConstraintSeverityCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConstraintSeverityCode* New() const final {
    return CreateMaybeMessage<ConstraintSeverityCode>(NULL);
  }

  ConstraintSeverityCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConstraintSeverityCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConstraintSeverityCode& from);
  void MergeFrom(const ConstraintSeverityCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConstraintSeverityCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ConstraintSeverityCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ConstraintSeverityCode_Value_INVALID_UNINITIALIZED;
  static const Value ERROR =
    ConstraintSeverityCode_Value_ERROR;
  static const Value WARNING =
    ConstraintSeverityCode_Value_WARNING;
  static inline bool Value_IsValid(int value) {
    return ConstraintSeverityCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ConstraintSeverityCode_Value_Value_MIN;
  static const Value Value_MAX =
    ConstraintSeverityCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ConstraintSeverityCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ConstraintSeverityCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ConstraintSeverityCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ConstraintSeverityCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ConstraintSeverityCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ConstraintSeverityCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ConstraintSeverityCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ConstraintSeverityCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SlicingRulesCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.SlicingRulesCode) */ {
 public:
  SlicingRulesCode();
  virtual ~SlicingRulesCode();

  SlicingRulesCode(const SlicingRulesCode& from);

  inline SlicingRulesCode& operator=(const SlicingRulesCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SlicingRulesCode(SlicingRulesCode&& from) noexcept
    : SlicingRulesCode() {
    *this = ::std::move(from);
  }

  inline SlicingRulesCode& operator=(SlicingRulesCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SlicingRulesCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SlicingRulesCode* internal_default_instance() {
    return reinterpret_cast<const SlicingRulesCode*>(
               &_SlicingRulesCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(SlicingRulesCode* other);
  friend void swap(SlicingRulesCode& a, SlicingRulesCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SlicingRulesCode* New() const final {
    return CreateMaybeMessage<SlicingRulesCode>(NULL);
  }

  SlicingRulesCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SlicingRulesCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SlicingRulesCode& from);
  void MergeFrom(const SlicingRulesCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SlicingRulesCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SlicingRulesCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    SlicingRulesCode_Value_INVALID_UNINITIALIZED;
  static const Value CLOSED =
    SlicingRulesCode_Value_CLOSED;
  static const Value OPEN =
    SlicingRulesCode_Value_OPEN;
  static const Value OPEN_AT_END =
    SlicingRulesCode_Value_OPEN_AT_END;
  static inline bool Value_IsValid(int value) {
    return SlicingRulesCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    SlicingRulesCode_Value_Value_MIN;
  static const Value Value_MAX =
    SlicingRulesCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    SlicingRulesCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return SlicingRulesCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return SlicingRulesCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return SlicingRulesCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.SlicingRulesCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::SlicingRulesCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::SlicingRulesCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.SlicingRulesCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DiscriminatorTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.DiscriminatorTypeCode) */ {
 public:
  DiscriminatorTypeCode();
  virtual ~DiscriminatorTypeCode();

  DiscriminatorTypeCode(const DiscriminatorTypeCode& from);

  inline DiscriminatorTypeCode& operator=(const DiscriminatorTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DiscriminatorTypeCode(DiscriminatorTypeCode&& from) noexcept
    : DiscriminatorTypeCode() {
    *this = ::std::move(from);
  }

  inline DiscriminatorTypeCode& operator=(DiscriminatorTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DiscriminatorTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DiscriminatorTypeCode* internal_default_instance() {
    return reinterpret_cast<const DiscriminatorTypeCode*>(
               &_DiscriminatorTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(DiscriminatorTypeCode* other);
  friend void swap(DiscriminatorTypeCode& a, DiscriminatorTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DiscriminatorTypeCode* New() const final {
    return CreateMaybeMessage<DiscriminatorTypeCode>(NULL);
  }

  DiscriminatorTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DiscriminatorTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DiscriminatorTypeCode& from);
  void MergeFrom(const DiscriminatorTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DiscriminatorTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DiscriminatorTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    DiscriminatorTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value VALUE =
    DiscriminatorTypeCode_Value_VALUE;
  static const Value EXISTS =
    DiscriminatorTypeCode_Value_EXISTS;
  static const Value PATTERN =
    DiscriminatorTypeCode_Value_PATTERN;
  static const Value TYPE =
    DiscriminatorTypeCode_Value_TYPE;
  static const Value PROFILE =
    DiscriminatorTypeCode_Value_PROFILE;
  static inline bool Value_IsValid(int value) {
    return DiscriminatorTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    DiscriminatorTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    DiscriminatorTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    DiscriminatorTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return DiscriminatorTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return DiscriminatorTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return DiscriminatorTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.DiscriminatorTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::DiscriminatorTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::DiscriminatorTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.DiscriminatorTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PropertyRepresentationCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.PropertyRepresentationCode) */ {
 public:
  PropertyRepresentationCode();
  virtual ~PropertyRepresentationCode();

  PropertyRepresentationCode(const PropertyRepresentationCode& from);

  inline PropertyRepresentationCode& operator=(const PropertyRepresentationCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PropertyRepresentationCode(PropertyRepresentationCode&& from) noexcept
    : PropertyRepresentationCode() {
    *this = ::std::move(from);
  }

  inline PropertyRepresentationCode& operator=(PropertyRepresentationCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PropertyRepresentationCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PropertyRepresentationCode* internal_default_instance() {
    return reinterpret_cast<const PropertyRepresentationCode*>(
               &_PropertyRepresentationCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(PropertyRepresentationCode* other);
  friend void swap(PropertyRepresentationCode& a, PropertyRepresentationCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PropertyRepresentationCode* New() const final {
    return CreateMaybeMessage<PropertyRepresentationCode>(NULL);
  }

  PropertyRepresentationCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PropertyRepresentationCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PropertyRepresentationCode& from);
  void MergeFrom(const PropertyRepresentationCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PropertyRepresentationCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PropertyRepresentationCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    PropertyRepresentationCode_Value_INVALID_UNINITIALIZED;
  static const Value XML_ATTR =
    PropertyRepresentationCode_Value_XML_ATTR;
  static const Value XML_TEXT =
    PropertyRepresentationCode_Value_XML_TEXT;
  static const Value TYPE_ATTR =
    PropertyRepresentationCode_Value_TYPE_ATTR;
  static const Value CDA_TEXT =
    PropertyRepresentationCode_Value_CDA_TEXT;
  static const Value XHTML =
    PropertyRepresentationCode_Value_XHTML;
  static inline bool Value_IsValid(int value) {
    return PropertyRepresentationCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    PropertyRepresentationCode_Value_Value_MIN;
  static const Value Value_MAX =
    PropertyRepresentationCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    PropertyRepresentationCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return PropertyRepresentationCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return PropertyRepresentationCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return PropertyRepresentationCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.PropertyRepresentationCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::PropertyRepresentationCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::PropertyRepresentationCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.PropertyRepresentationCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReferenceVersionRulesCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ReferenceVersionRulesCode) */ {
 public:
  ReferenceVersionRulesCode();
  virtual ~ReferenceVersionRulesCode();

  ReferenceVersionRulesCode(const ReferenceVersionRulesCode& from);

  inline ReferenceVersionRulesCode& operator=(const ReferenceVersionRulesCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReferenceVersionRulesCode(ReferenceVersionRulesCode&& from) noexcept
    : ReferenceVersionRulesCode() {
    *this = ::std::move(from);
  }

  inline ReferenceVersionRulesCode& operator=(ReferenceVersionRulesCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReferenceVersionRulesCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReferenceVersionRulesCode* internal_default_instance() {
    return reinterpret_cast<const ReferenceVersionRulesCode*>(
               &_ReferenceVersionRulesCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(ReferenceVersionRulesCode* other);
  friend void swap(ReferenceVersionRulesCode& a, ReferenceVersionRulesCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReferenceVersionRulesCode* New() const final {
    return CreateMaybeMessage<ReferenceVersionRulesCode>(NULL);
  }

  ReferenceVersionRulesCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReferenceVersionRulesCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReferenceVersionRulesCode& from);
  void MergeFrom(const ReferenceVersionRulesCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReferenceVersionRulesCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ReferenceVersionRulesCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ReferenceVersionRulesCode_Value_INVALID_UNINITIALIZED;
  static const Value EITHER =
    ReferenceVersionRulesCode_Value_EITHER;
  static const Value INDEPENDENT =
    ReferenceVersionRulesCode_Value_INDEPENDENT;
  static const Value SPECIFIC =
    ReferenceVersionRulesCode_Value_SPECIFIC;
  static inline bool Value_IsValid(int value) {
    return ReferenceVersionRulesCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ReferenceVersionRulesCode_Value_Value_MIN;
  static const Value Value_MAX =
    ReferenceVersionRulesCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ReferenceVersionRulesCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ReferenceVersionRulesCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ReferenceVersionRulesCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ReferenceVersionRulesCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ReferenceVersionRulesCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ReferenceVersionRulesCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ReferenceVersionRulesCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ReferenceVersionRulesCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AccountStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.AccountStatusCode) */ {
 public:
  AccountStatusCode();
  virtual ~AccountStatusCode();

  AccountStatusCode(const AccountStatusCode& from);

  inline AccountStatusCode& operator=(const AccountStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountStatusCode(AccountStatusCode&& from) noexcept
    : AccountStatusCode() {
    *this = ::std::move(from);
  }

  inline AccountStatusCode& operator=(AccountStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountStatusCode* internal_default_instance() {
    return reinterpret_cast<const AccountStatusCode*>(
               &_AccountStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(AccountStatusCode* other);
  friend void swap(AccountStatusCode& a, AccountStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountStatusCode* New() const final {
    return CreateMaybeMessage<AccountStatusCode>(NULL);
  }

  AccountStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AccountStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AccountStatusCode& from);
  void MergeFrom(const AccountStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AccountStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AccountStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    AccountStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value ACTIVE =
    AccountStatusCode_Value_ACTIVE;
  static const Value INACTIVE =
    AccountStatusCode_Value_INACTIVE;
  static const Value ENTERED_IN_ERROR =
    AccountStatusCode_Value_ENTERED_IN_ERROR;
  static inline bool Value_IsValid(int value) {
    return AccountStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    AccountStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    AccountStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    AccountStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return AccountStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return AccountStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return AccountStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.AccountStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::AccountStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::AccountStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.AccountStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActionCardinalityBehaviorCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ActionCardinalityBehaviorCode) */ {
 public:
  ActionCardinalityBehaviorCode();
  virtual ~ActionCardinalityBehaviorCode();

  ActionCardinalityBehaviorCode(const ActionCardinalityBehaviorCode& from);

  inline ActionCardinalityBehaviorCode& operator=(const ActionCardinalityBehaviorCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActionCardinalityBehaviorCode(ActionCardinalityBehaviorCode&& from) noexcept
    : ActionCardinalityBehaviorCode() {
    *this = ::std::move(from);
  }

  inline ActionCardinalityBehaviorCode& operator=(ActionCardinalityBehaviorCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionCardinalityBehaviorCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActionCardinalityBehaviorCode* internal_default_instance() {
    return reinterpret_cast<const ActionCardinalityBehaviorCode*>(
               &_ActionCardinalityBehaviorCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(ActionCardinalityBehaviorCode* other);
  friend void swap(ActionCardinalityBehaviorCode& a, ActionCardinalityBehaviorCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActionCardinalityBehaviorCode* New() const final {
    return CreateMaybeMessage<ActionCardinalityBehaviorCode>(NULL);
  }

  ActionCardinalityBehaviorCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ActionCardinalityBehaviorCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ActionCardinalityBehaviorCode& from);
  void MergeFrom(const ActionCardinalityBehaviorCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActionCardinalityBehaviorCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ActionCardinalityBehaviorCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ActionCardinalityBehaviorCode_Value_INVALID_UNINITIALIZED;
  static const Value SINGLE =
    ActionCardinalityBehaviorCode_Value_SINGLE;
  static const Value MULTIPLE =
    ActionCardinalityBehaviorCode_Value_MULTIPLE;
  static inline bool Value_IsValid(int value) {
    return ActionCardinalityBehaviorCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ActionCardinalityBehaviorCode_Value_Value_MIN;
  static const Value Value_MAX =
    ActionCardinalityBehaviorCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ActionCardinalityBehaviorCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ActionCardinalityBehaviorCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ActionCardinalityBehaviorCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ActionCardinalityBehaviorCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ActionCardinalityBehaviorCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ActionCardinalityBehaviorCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ActionCardinalityBehaviorCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ActionCardinalityBehaviorCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActionConditionKindCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ActionConditionKindCode) */ {
 public:
  ActionConditionKindCode();
  virtual ~ActionConditionKindCode();

  ActionConditionKindCode(const ActionConditionKindCode& from);

  inline ActionConditionKindCode& operator=(const ActionConditionKindCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActionConditionKindCode(ActionConditionKindCode&& from) noexcept
    : ActionConditionKindCode() {
    *this = ::std::move(from);
  }

  inline ActionConditionKindCode& operator=(ActionConditionKindCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionConditionKindCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActionConditionKindCode* internal_default_instance() {
    return reinterpret_cast<const ActionConditionKindCode*>(
               &_ActionConditionKindCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(ActionConditionKindCode* other);
  friend void swap(ActionConditionKindCode& a, ActionConditionKindCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActionConditionKindCode* New() const final {
    return CreateMaybeMessage<ActionConditionKindCode>(NULL);
  }

  ActionConditionKindCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ActionConditionKindCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ActionConditionKindCode& from);
  void MergeFrom(const ActionConditionKindCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActionConditionKindCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ActionConditionKindCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ActionConditionKindCode_Value_INVALID_UNINITIALIZED;
  static const Value APPLICABILITY =
    ActionConditionKindCode_Value_APPLICABILITY;
  static const Value START =
    ActionConditionKindCode_Value_START;
  static const Value STOP =
    ActionConditionKindCode_Value_STOP;
  static inline bool Value_IsValid(int value) {
    return ActionConditionKindCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ActionConditionKindCode_Value_Value_MIN;
  static const Value Value_MAX =
    ActionConditionKindCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ActionConditionKindCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ActionConditionKindCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ActionConditionKindCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ActionConditionKindCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ActionConditionKindCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ActionConditionKindCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ActionConditionKindCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ActionConditionKindCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActionGroupingBehaviorCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ActionGroupingBehaviorCode) */ {
 public:
  ActionGroupingBehaviorCode();
  virtual ~ActionGroupingBehaviorCode();

  ActionGroupingBehaviorCode(const ActionGroupingBehaviorCode& from);

  inline ActionGroupingBehaviorCode& operator=(const ActionGroupingBehaviorCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActionGroupingBehaviorCode(ActionGroupingBehaviorCode&& from) noexcept
    : ActionGroupingBehaviorCode() {
    *this = ::std::move(from);
  }

  inline ActionGroupingBehaviorCode& operator=(ActionGroupingBehaviorCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionGroupingBehaviorCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActionGroupingBehaviorCode* internal_default_instance() {
    return reinterpret_cast<const ActionGroupingBehaviorCode*>(
               &_ActionGroupingBehaviorCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(ActionGroupingBehaviorCode* other);
  friend void swap(ActionGroupingBehaviorCode& a, ActionGroupingBehaviorCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActionGroupingBehaviorCode* New() const final {
    return CreateMaybeMessage<ActionGroupingBehaviorCode>(NULL);
  }

  ActionGroupingBehaviorCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ActionGroupingBehaviorCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ActionGroupingBehaviorCode& from);
  void MergeFrom(const ActionGroupingBehaviorCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActionGroupingBehaviorCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ActionGroupingBehaviorCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ActionGroupingBehaviorCode_Value_INVALID_UNINITIALIZED;
  static const Value VISUAL_GROUP =
    ActionGroupingBehaviorCode_Value_VISUAL_GROUP;
  static const Value LOGICAL_GROUP =
    ActionGroupingBehaviorCode_Value_LOGICAL_GROUP;
  static const Value SENTENCE_GROUP =
    ActionGroupingBehaviorCode_Value_SENTENCE_GROUP;
  static inline bool Value_IsValid(int value) {
    return ActionGroupingBehaviorCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ActionGroupingBehaviorCode_Value_Value_MIN;
  static const Value Value_MAX =
    ActionGroupingBehaviorCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ActionGroupingBehaviorCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ActionGroupingBehaviorCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ActionGroupingBehaviorCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ActionGroupingBehaviorCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ActionGroupingBehaviorCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ActionGroupingBehaviorCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ActionGroupingBehaviorCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ActionGroupingBehaviorCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActionListCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ActionListCode) */ {
 public:
  ActionListCode();
  virtual ~ActionListCode();

  ActionListCode(const ActionListCode& from);

  inline ActionListCode& operator=(const ActionListCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActionListCode(ActionListCode&& from) noexcept
    : ActionListCode() {
    *this = ::std::move(from);
  }

  inline ActionListCode& operator=(ActionListCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionListCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActionListCode* internal_default_instance() {
    return reinterpret_cast<const ActionListCode*>(
               &_ActionListCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(ActionListCode* other);
  friend void swap(ActionListCode& a, ActionListCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActionListCode* New() const final {
    return CreateMaybeMessage<ActionListCode>(NULL);
  }

  ActionListCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ActionListCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ActionListCode& from);
  void MergeFrom(const ActionListCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActionListCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ActionListCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ActionListCode_Value_INVALID_UNINITIALIZED;
  static const Value CANCEL =
    ActionListCode_Value_CANCEL;
  static const Value POLL =
    ActionListCode_Value_POLL;
  static const Value REPROCESS =
    ActionListCode_Value_REPROCESS;
  static const Value STATUS =
    ActionListCode_Value_STATUS;
  static inline bool Value_IsValid(int value) {
    return ActionListCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ActionListCode_Value_Value_MIN;
  static const Value Value_MAX =
    ActionListCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ActionListCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ActionListCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ActionListCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ActionListCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ActionListCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ActionListCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ActionListCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ActionListCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActionParticipantTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ActionParticipantTypeCode) */ {
 public:
  ActionParticipantTypeCode();
  virtual ~ActionParticipantTypeCode();

  ActionParticipantTypeCode(const ActionParticipantTypeCode& from);

  inline ActionParticipantTypeCode& operator=(const ActionParticipantTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActionParticipantTypeCode(ActionParticipantTypeCode&& from) noexcept
    : ActionParticipantTypeCode() {
    *this = ::std::move(from);
  }

  inline ActionParticipantTypeCode& operator=(ActionParticipantTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionParticipantTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActionParticipantTypeCode* internal_default_instance() {
    return reinterpret_cast<const ActionParticipantTypeCode*>(
               &_ActionParticipantTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(ActionParticipantTypeCode* other);
  friend void swap(ActionParticipantTypeCode& a, ActionParticipantTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActionParticipantTypeCode* New() const final {
    return CreateMaybeMessage<ActionParticipantTypeCode>(NULL);
  }

  ActionParticipantTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ActionParticipantTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ActionParticipantTypeCode& from);
  void MergeFrom(const ActionParticipantTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActionParticipantTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ActionParticipantTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ActionParticipantTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value PATIENT =
    ActionParticipantTypeCode_Value_PATIENT;
  static const Value PRACTITIONER =
    ActionParticipantTypeCode_Value_PRACTITIONER;
  static const Value RELATED_PERSON =
    ActionParticipantTypeCode_Value_RELATED_PERSON;
  static inline bool Value_IsValid(int value) {
    return ActionParticipantTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ActionParticipantTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    ActionParticipantTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ActionParticipantTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ActionParticipantTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ActionParticipantTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ActionParticipantTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ActionParticipantTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ActionParticipantTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ActionParticipantTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ActionParticipantTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActionPrecheckBehaviorCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ActionPrecheckBehaviorCode) */ {
 public:
  ActionPrecheckBehaviorCode();
  virtual ~ActionPrecheckBehaviorCode();

  ActionPrecheckBehaviorCode(const ActionPrecheckBehaviorCode& from);

  inline ActionPrecheckBehaviorCode& operator=(const ActionPrecheckBehaviorCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActionPrecheckBehaviorCode(ActionPrecheckBehaviorCode&& from) noexcept
    : ActionPrecheckBehaviorCode() {
    *this = ::std::move(from);
  }

  inline ActionPrecheckBehaviorCode& operator=(ActionPrecheckBehaviorCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionPrecheckBehaviorCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActionPrecheckBehaviorCode* internal_default_instance() {
    return reinterpret_cast<const ActionPrecheckBehaviorCode*>(
               &_ActionPrecheckBehaviorCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(ActionPrecheckBehaviorCode* other);
  friend void swap(ActionPrecheckBehaviorCode& a, ActionPrecheckBehaviorCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActionPrecheckBehaviorCode* New() const final {
    return CreateMaybeMessage<ActionPrecheckBehaviorCode>(NULL);
  }

  ActionPrecheckBehaviorCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ActionPrecheckBehaviorCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ActionPrecheckBehaviorCode& from);
  void MergeFrom(const ActionPrecheckBehaviorCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActionPrecheckBehaviorCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ActionPrecheckBehaviorCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ActionPrecheckBehaviorCode_Value_INVALID_UNINITIALIZED;
  static const Value YES =
    ActionPrecheckBehaviorCode_Value_YES;
  static const Value NO =
    ActionPrecheckBehaviorCode_Value_NO;
  static inline bool Value_IsValid(int value) {
    return ActionPrecheckBehaviorCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ActionPrecheckBehaviorCode_Value_Value_MIN;
  static const Value Value_MAX =
    ActionPrecheckBehaviorCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ActionPrecheckBehaviorCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ActionPrecheckBehaviorCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ActionPrecheckBehaviorCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ActionPrecheckBehaviorCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ActionPrecheckBehaviorCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ActionPrecheckBehaviorCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ActionPrecheckBehaviorCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ActionPrecheckBehaviorCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActionRelationshipTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ActionRelationshipTypeCode) */ {
 public:
  ActionRelationshipTypeCode();
  virtual ~ActionRelationshipTypeCode();

  ActionRelationshipTypeCode(const ActionRelationshipTypeCode& from);

  inline ActionRelationshipTypeCode& operator=(const ActionRelationshipTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActionRelationshipTypeCode(ActionRelationshipTypeCode&& from) noexcept
    : ActionRelationshipTypeCode() {
    *this = ::std::move(from);
  }

  inline ActionRelationshipTypeCode& operator=(ActionRelationshipTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionRelationshipTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActionRelationshipTypeCode* internal_default_instance() {
    return reinterpret_cast<const ActionRelationshipTypeCode*>(
               &_ActionRelationshipTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(ActionRelationshipTypeCode* other);
  friend void swap(ActionRelationshipTypeCode& a, ActionRelationshipTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActionRelationshipTypeCode* New() const final {
    return CreateMaybeMessage<ActionRelationshipTypeCode>(NULL);
  }

  ActionRelationshipTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ActionRelationshipTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ActionRelationshipTypeCode& from);
  void MergeFrom(const ActionRelationshipTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActionRelationshipTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ActionRelationshipTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ActionRelationshipTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value BEFORE_START =
    ActionRelationshipTypeCode_Value_BEFORE_START;
  static const Value BEFORE =
    ActionRelationshipTypeCode_Value_BEFORE;
  static const Value BEFORE_END =
    ActionRelationshipTypeCode_Value_BEFORE_END;
  static const Value CONCURRENT_WITH_START =
    ActionRelationshipTypeCode_Value_CONCURRENT_WITH_START;
  static const Value CONCURRENT =
    ActionRelationshipTypeCode_Value_CONCURRENT;
  static const Value CONCURRENT_WITH_END =
    ActionRelationshipTypeCode_Value_CONCURRENT_WITH_END;
  static const Value AFTER_START =
    ActionRelationshipTypeCode_Value_AFTER_START;
  static const Value AFTER =
    ActionRelationshipTypeCode_Value_AFTER;
  static const Value AFTER_END =
    ActionRelationshipTypeCode_Value_AFTER_END;
  static inline bool Value_IsValid(int value) {
    return ActionRelationshipTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ActionRelationshipTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    ActionRelationshipTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ActionRelationshipTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ActionRelationshipTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ActionRelationshipTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ActionRelationshipTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ActionRelationshipTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ActionRelationshipTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ActionRelationshipTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ActionRelationshipTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActionRequiredBehaviorCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ActionRequiredBehaviorCode) */ {
 public:
  ActionRequiredBehaviorCode();
  virtual ~ActionRequiredBehaviorCode();

  ActionRequiredBehaviorCode(const ActionRequiredBehaviorCode& from);

  inline ActionRequiredBehaviorCode& operator=(const ActionRequiredBehaviorCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActionRequiredBehaviorCode(ActionRequiredBehaviorCode&& from) noexcept
    : ActionRequiredBehaviorCode() {
    *this = ::std::move(from);
  }

  inline ActionRequiredBehaviorCode& operator=(ActionRequiredBehaviorCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionRequiredBehaviorCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActionRequiredBehaviorCode* internal_default_instance() {
    return reinterpret_cast<const ActionRequiredBehaviorCode*>(
               &_ActionRequiredBehaviorCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(ActionRequiredBehaviorCode* other);
  friend void swap(ActionRequiredBehaviorCode& a, ActionRequiredBehaviorCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActionRequiredBehaviorCode* New() const final {
    return CreateMaybeMessage<ActionRequiredBehaviorCode>(NULL);
  }

  ActionRequiredBehaviorCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ActionRequiredBehaviorCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ActionRequiredBehaviorCode& from);
  void MergeFrom(const ActionRequiredBehaviorCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActionRequiredBehaviorCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ActionRequiredBehaviorCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ActionRequiredBehaviorCode_Value_INVALID_UNINITIALIZED;
  static const Value MUST =
    ActionRequiredBehaviorCode_Value_MUST;
  static const Value COULD =
    ActionRequiredBehaviorCode_Value_COULD;
  static const Value MUST_UNLESS_DOCUMENTED =
    ActionRequiredBehaviorCode_Value_MUST_UNLESS_DOCUMENTED;
  static inline bool Value_IsValid(int value) {
    return ActionRequiredBehaviorCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ActionRequiredBehaviorCode_Value_Value_MIN;
  static const Value Value_MAX =
    ActionRequiredBehaviorCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ActionRequiredBehaviorCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ActionRequiredBehaviorCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ActionRequiredBehaviorCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ActionRequiredBehaviorCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ActionRequiredBehaviorCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ActionRequiredBehaviorCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ActionRequiredBehaviorCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ActionRequiredBehaviorCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActionSelectionBehaviorCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ActionSelectionBehaviorCode) */ {
 public:
  ActionSelectionBehaviorCode();
  virtual ~ActionSelectionBehaviorCode();

  ActionSelectionBehaviorCode(const ActionSelectionBehaviorCode& from);

  inline ActionSelectionBehaviorCode& operator=(const ActionSelectionBehaviorCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActionSelectionBehaviorCode(ActionSelectionBehaviorCode&& from) noexcept
    : ActionSelectionBehaviorCode() {
    *this = ::std::move(from);
  }

  inline ActionSelectionBehaviorCode& operator=(ActionSelectionBehaviorCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionSelectionBehaviorCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActionSelectionBehaviorCode* internal_default_instance() {
    return reinterpret_cast<const ActionSelectionBehaviorCode*>(
               &_ActionSelectionBehaviorCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(ActionSelectionBehaviorCode* other);
  friend void swap(ActionSelectionBehaviorCode& a, ActionSelectionBehaviorCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActionSelectionBehaviorCode* New() const final {
    return CreateMaybeMessage<ActionSelectionBehaviorCode>(NULL);
  }

  ActionSelectionBehaviorCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ActionSelectionBehaviorCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ActionSelectionBehaviorCode& from);
  void MergeFrom(const ActionSelectionBehaviorCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActionSelectionBehaviorCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ActionSelectionBehaviorCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ActionSelectionBehaviorCode_Value_INVALID_UNINITIALIZED;
  static const Value ANY =
    ActionSelectionBehaviorCode_Value_ANY;
  static const Value ALL =
    ActionSelectionBehaviorCode_Value_ALL;
  static const Value ALL_OR_NONE =
    ActionSelectionBehaviorCode_Value_ALL_OR_NONE;
  static const Value EXACTLY_ONE =
    ActionSelectionBehaviorCode_Value_EXACTLY_ONE;
  static const Value AT_MOST_ONE =
    ActionSelectionBehaviorCode_Value_AT_MOST_ONE;
  static const Value ONE_OR_MORE =
    ActionSelectionBehaviorCode_Value_ONE_OR_MORE;
  static inline bool Value_IsValid(int value) {
    return ActionSelectionBehaviorCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ActionSelectionBehaviorCode_Value_Value_MIN;
  static const Value Value_MAX =
    ActionSelectionBehaviorCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ActionSelectionBehaviorCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ActionSelectionBehaviorCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ActionSelectionBehaviorCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ActionSelectionBehaviorCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ActionSelectionBehaviorCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ActionSelectionBehaviorCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ActionSelectionBehaviorCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ActionSelectionBehaviorCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActionTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ActionTypeCode) */ {
 public:
  ActionTypeCode();
  virtual ~ActionTypeCode();

  ActionTypeCode(const ActionTypeCode& from);

  inline ActionTypeCode& operator=(const ActionTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActionTypeCode(ActionTypeCode&& from) noexcept
    : ActionTypeCode() {
    *this = ::std::move(from);
  }

  inline ActionTypeCode& operator=(ActionTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActionTypeCode* internal_default_instance() {
    return reinterpret_cast<const ActionTypeCode*>(
               &_ActionTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(ActionTypeCode* other);
  friend void swap(ActionTypeCode& a, ActionTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActionTypeCode* New() const final {
    return CreateMaybeMessage<ActionTypeCode>(NULL);
  }

  ActionTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ActionTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ActionTypeCode& from);
  void MergeFrom(const ActionTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActionTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ActionTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ActionTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value CREATE =
    ActionTypeCode_Value_CREATE;
  static const Value UPDATE =
    ActionTypeCode_Value_UPDATE;
  static const Value REMOVE =
    ActionTypeCode_Value_REMOVE;
  static const Value FIRE_EVENT =
    ActionTypeCode_Value_FIRE_EVENT;
  static inline bool Value_IsValid(int value) {
    return ActionTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ActionTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    ActionTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ActionTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ActionTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ActionTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ActionTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ActionTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ActionTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ActionTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ActionTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActivityDefinitionCategoryCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ActivityDefinitionCategoryCode) */ {
 public:
  ActivityDefinitionCategoryCode();
  virtual ~ActivityDefinitionCategoryCode();

  ActivityDefinitionCategoryCode(const ActivityDefinitionCategoryCode& from);

  inline ActivityDefinitionCategoryCode& operator=(const ActivityDefinitionCategoryCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActivityDefinitionCategoryCode(ActivityDefinitionCategoryCode&& from) noexcept
    : ActivityDefinitionCategoryCode() {
    *this = ::std::move(from);
  }

  inline ActivityDefinitionCategoryCode& operator=(ActivityDefinitionCategoryCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityDefinitionCategoryCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActivityDefinitionCategoryCode* internal_default_instance() {
    return reinterpret_cast<const ActivityDefinitionCategoryCode*>(
               &_ActivityDefinitionCategoryCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(ActivityDefinitionCategoryCode* other);
  friend void swap(ActivityDefinitionCategoryCode& a, ActivityDefinitionCategoryCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActivityDefinitionCategoryCode* New() const final {
    return CreateMaybeMessage<ActivityDefinitionCategoryCode>(NULL);
  }

  ActivityDefinitionCategoryCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ActivityDefinitionCategoryCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ActivityDefinitionCategoryCode& from);
  void MergeFrom(const ActivityDefinitionCategoryCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActivityDefinitionCategoryCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ActivityDefinitionCategoryCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ActivityDefinitionCategoryCode_Value_INVALID_UNINITIALIZED;
  static const Value TREATMENT =
    ActivityDefinitionCategoryCode_Value_TREATMENT;
  static const Value EDUCATION =
    ActivityDefinitionCategoryCode_Value_EDUCATION;
  static const Value ASSESSMENT =
    ActivityDefinitionCategoryCode_Value_ASSESSMENT;
  static inline bool Value_IsValid(int value) {
    return ActivityDefinitionCategoryCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ActivityDefinitionCategoryCode_Value_Value_MIN;
  static const Value Value_MAX =
    ActivityDefinitionCategoryCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ActivityDefinitionCategoryCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ActivityDefinitionCategoryCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ActivityDefinitionCategoryCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ActivityDefinitionCategoryCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ActivityDefinitionCategoryCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ActivityDefinitionCategoryCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ActivityDefinitionCategoryCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ActivityDefinitionCategoryCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AdministrativeGenderCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.AdministrativeGenderCode) */ {
 public:
  AdministrativeGenderCode();
  virtual ~AdministrativeGenderCode();

  AdministrativeGenderCode(const AdministrativeGenderCode& from);

  inline AdministrativeGenderCode& operator=(const AdministrativeGenderCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AdministrativeGenderCode(AdministrativeGenderCode&& from) noexcept
    : AdministrativeGenderCode() {
    *this = ::std::move(from);
  }

  inline AdministrativeGenderCode& operator=(AdministrativeGenderCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AdministrativeGenderCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AdministrativeGenderCode* internal_default_instance() {
    return reinterpret_cast<const AdministrativeGenderCode*>(
               &_AdministrativeGenderCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(AdministrativeGenderCode* other);
  friend void swap(AdministrativeGenderCode& a, AdministrativeGenderCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AdministrativeGenderCode* New() const final {
    return CreateMaybeMessage<AdministrativeGenderCode>(NULL);
  }

  AdministrativeGenderCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AdministrativeGenderCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AdministrativeGenderCode& from);
  void MergeFrom(const AdministrativeGenderCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AdministrativeGenderCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AdministrativeGenderCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    AdministrativeGenderCode_Value_INVALID_UNINITIALIZED;
  static const Value MALE =
    AdministrativeGenderCode_Value_MALE;
  static const Value FEMALE =
    AdministrativeGenderCode_Value_FEMALE;
  static const Value OTHER =
    AdministrativeGenderCode_Value_OTHER;
  static const Value UNKNOWN =
    AdministrativeGenderCode_Value_UNKNOWN;
  static inline bool Value_IsValid(int value) {
    return AdministrativeGenderCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    AdministrativeGenderCode_Value_Value_MIN;
  static const Value Value_MAX =
    AdministrativeGenderCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    AdministrativeGenderCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return AdministrativeGenderCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return AdministrativeGenderCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return AdministrativeGenderCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.AdministrativeGenderCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::AdministrativeGenderCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::AdministrativeGenderCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.AdministrativeGenderCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AdverseEventCategoryCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.AdverseEventCategoryCode) */ {
 public:
  AdverseEventCategoryCode();
  virtual ~AdverseEventCategoryCode();

  AdverseEventCategoryCode(const AdverseEventCategoryCode& from);

  inline AdverseEventCategoryCode& operator=(const AdverseEventCategoryCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AdverseEventCategoryCode(AdverseEventCategoryCode&& from) noexcept
    : AdverseEventCategoryCode() {
    *this = ::std::move(from);
  }

  inline AdverseEventCategoryCode& operator=(AdverseEventCategoryCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AdverseEventCategoryCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AdverseEventCategoryCode* internal_default_instance() {
    return reinterpret_cast<const AdverseEventCategoryCode*>(
               &_AdverseEventCategoryCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(AdverseEventCategoryCode* other);
  friend void swap(AdverseEventCategoryCode& a, AdverseEventCategoryCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AdverseEventCategoryCode* New() const final {
    return CreateMaybeMessage<AdverseEventCategoryCode>(NULL);
  }

  AdverseEventCategoryCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AdverseEventCategoryCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AdverseEventCategoryCode& from);
  void MergeFrom(const AdverseEventCategoryCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AdverseEventCategoryCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AdverseEventCategoryCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    AdverseEventCategoryCode_Value_INVALID_UNINITIALIZED;
  static const Value AE =
    AdverseEventCategoryCode_Value_AE;
  static const Value PAE =
    AdverseEventCategoryCode_Value_PAE;
  static inline bool Value_IsValid(int value) {
    return AdverseEventCategoryCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    AdverseEventCategoryCode_Value_Value_MIN;
  static const Value Value_MAX =
    AdverseEventCategoryCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    AdverseEventCategoryCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return AdverseEventCategoryCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return AdverseEventCategoryCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return AdverseEventCategoryCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.AdverseEventCategoryCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::AdverseEventCategoryCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::AdverseEventCategoryCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.AdverseEventCategoryCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AdverseEventCausalityAssessmentCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.AdverseEventCausalityAssessmentCode) */ {
 public:
  AdverseEventCausalityAssessmentCode();
  virtual ~AdverseEventCausalityAssessmentCode();

  AdverseEventCausalityAssessmentCode(const AdverseEventCausalityAssessmentCode& from);

  inline AdverseEventCausalityAssessmentCode& operator=(const AdverseEventCausalityAssessmentCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AdverseEventCausalityAssessmentCode(AdverseEventCausalityAssessmentCode&& from) noexcept
    : AdverseEventCausalityAssessmentCode() {
    *this = ::std::move(from);
  }

  inline AdverseEventCausalityAssessmentCode& operator=(AdverseEventCausalityAssessmentCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AdverseEventCausalityAssessmentCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AdverseEventCausalityAssessmentCode* internal_default_instance() {
    return reinterpret_cast<const AdverseEventCausalityAssessmentCode*>(
               &_AdverseEventCausalityAssessmentCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(AdverseEventCausalityAssessmentCode* other);
  friend void swap(AdverseEventCausalityAssessmentCode& a, AdverseEventCausalityAssessmentCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AdverseEventCausalityAssessmentCode* New() const final {
    return CreateMaybeMessage<AdverseEventCausalityAssessmentCode>(NULL);
  }

  AdverseEventCausalityAssessmentCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AdverseEventCausalityAssessmentCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AdverseEventCausalityAssessmentCode& from);
  void MergeFrom(const AdverseEventCausalityAssessmentCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AdverseEventCausalityAssessmentCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AdverseEventCausalityAssessmentCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    AdverseEventCausalityAssessmentCode_Value_INVALID_UNINITIALIZED;
  static const Value ASSESS1 =
    AdverseEventCausalityAssessmentCode_Value_ASSESS1;
  static const Value ASSESS2 =
    AdverseEventCausalityAssessmentCode_Value_ASSESS2;
  static inline bool Value_IsValid(int value) {
    return AdverseEventCausalityAssessmentCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    AdverseEventCausalityAssessmentCode_Value_Value_MIN;
  static const Value Value_MAX =
    AdverseEventCausalityAssessmentCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    AdverseEventCausalityAssessmentCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return AdverseEventCausalityAssessmentCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return AdverseEventCausalityAssessmentCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return AdverseEventCausalityAssessmentCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.AdverseEventCausalityAssessmentCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::AdverseEventCausalityAssessmentCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::AdverseEventCausalityAssessmentCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.AdverseEventCausalityAssessmentCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AdverseEventCausalityCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.AdverseEventCausalityCode) */ {
 public:
  AdverseEventCausalityCode();
  virtual ~AdverseEventCausalityCode();

  AdverseEventCausalityCode(const AdverseEventCausalityCode& from);

  inline AdverseEventCausalityCode& operator=(const AdverseEventCausalityCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AdverseEventCausalityCode(AdverseEventCausalityCode&& from) noexcept
    : AdverseEventCausalityCode() {
    *this = ::std::move(from);
  }

  inline AdverseEventCausalityCode& operator=(AdverseEventCausalityCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AdverseEventCausalityCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AdverseEventCausalityCode* internal_default_instance() {
    return reinterpret_cast<const AdverseEventCausalityCode*>(
               &_AdverseEventCausalityCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(AdverseEventCausalityCode* other);
  friend void swap(AdverseEventCausalityCode& a, AdverseEventCausalityCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AdverseEventCausalityCode* New() const final {
    return CreateMaybeMessage<AdverseEventCausalityCode>(NULL);
  }

  AdverseEventCausalityCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AdverseEventCausalityCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AdverseEventCausalityCode& from);
  void MergeFrom(const AdverseEventCausalityCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AdverseEventCausalityCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AdverseEventCausalityCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    AdverseEventCausalityCode_Value_INVALID_UNINITIALIZED;
  static const Value CAUSALITY1 =
    AdverseEventCausalityCode_Value_CAUSALITY1;
  static const Value CAUSALITY2 =
    AdverseEventCausalityCode_Value_CAUSALITY2;
  static inline bool Value_IsValid(int value) {
    return AdverseEventCausalityCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    AdverseEventCausalityCode_Value_Value_MIN;
  static const Value Value_MAX =
    AdverseEventCausalityCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    AdverseEventCausalityCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return AdverseEventCausalityCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return AdverseEventCausalityCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return AdverseEventCausalityCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.AdverseEventCausalityCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::AdverseEventCausalityCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::AdverseEventCausalityCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.AdverseEventCausalityCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AdverseEventCausalityMethodCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.AdverseEventCausalityMethodCode) */ {
 public:
  AdverseEventCausalityMethodCode();
  virtual ~AdverseEventCausalityMethodCode();

  AdverseEventCausalityMethodCode(const AdverseEventCausalityMethodCode& from);

  inline AdverseEventCausalityMethodCode& operator=(const AdverseEventCausalityMethodCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AdverseEventCausalityMethodCode(AdverseEventCausalityMethodCode&& from) noexcept
    : AdverseEventCausalityMethodCode() {
    *this = ::std::move(from);
  }

  inline AdverseEventCausalityMethodCode& operator=(AdverseEventCausalityMethodCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AdverseEventCausalityMethodCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AdverseEventCausalityMethodCode* internal_default_instance() {
    return reinterpret_cast<const AdverseEventCausalityMethodCode*>(
               &_AdverseEventCausalityMethodCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(AdverseEventCausalityMethodCode* other);
  friend void swap(AdverseEventCausalityMethodCode& a, AdverseEventCausalityMethodCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AdverseEventCausalityMethodCode* New() const final {
    return CreateMaybeMessage<AdverseEventCausalityMethodCode>(NULL);
  }

  AdverseEventCausalityMethodCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AdverseEventCausalityMethodCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AdverseEventCausalityMethodCode& from);
  void MergeFrom(const AdverseEventCausalityMethodCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AdverseEventCausalityMethodCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AdverseEventCausalityMethodCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    AdverseEventCausalityMethodCode_Value_INVALID_UNINITIALIZED;
  static const Value METHOD1 =
    AdverseEventCausalityMethodCode_Value_METHOD1;
  static const Value METHOD2 =
    AdverseEventCausalityMethodCode_Value_METHOD2;
  static inline bool Value_IsValid(int value) {
    return AdverseEventCausalityMethodCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    AdverseEventCausalityMethodCode_Value_Value_MIN;
  static const Value Value_MAX =
    AdverseEventCausalityMethodCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    AdverseEventCausalityMethodCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return AdverseEventCausalityMethodCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return AdverseEventCausalityMethodCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return AdverseEventCausalityMethodCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.AdverseEventCausalityMethodCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::AdverseEventCausalityMethodCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::AdverseEventCausalityMethodCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.AdverseEventCausalityMethodCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AdverseEventCausalityResultCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.AdverseEventCausalityResultCode) */ {
 public:
  AdverseEventCausalityResultCode();
  virtual ~AdverseEventCausalityResultCode();

  AdverseEventCausalityResultCode(const AdverseEventCausalityResultCode& from);

  inline AdverseEventCausalityResultCode& operator=(const AdverseEventCausalityResultCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AdverseEventCausalityResultCode(AdverseEventCausalityResultCode&& from) noexcept
    : AdverseEventCausalityResultCode() {
    *this = ::std::move(from);
  }

  inline AdverseEventCausalityResultCode& operator=(AdverseEventCausalityResultCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AdverseEventCausalityResultCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AdverseEventCausalityResultCode* internal_default_instance() {
    return reinterpret_cast<const AdverseEventCausalityResultCode*>(
               &_AdverseEventCausalityResultCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(AdverseEventCausalityResultCode* other);
  friend void swap(AdverseEventCausalityResultCode& a, AdverseEventCausalityResultCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AdverseEventCausalityResultCode* New() const final {
    return CreateMaybeMessage<AdverseEventCausalityResultCode>(NULL);
  }

  AdverseEventCausalityResultCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AdverseEventCausalityResultCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AdverseEventCausalityResultCode& from);
  void MergeFrom(const AdverseEventCausalityResultCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AdverseEventCausalityResultCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AdverseEventCausalityResultCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    AdverseEventCausalityResultCode_Value_INVALID_UNINITIALIZED;
  static const Value RESULT1 =
    AdverseEventCausalityResultCode_Value_RESULT1;
  static const Value RESULT2 =
    AdverseEventCausalityResultCode_Value_RESULT2;
  static inline bool Value_IsValid(int value) {
    return AdverseEventCausalityResultCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    AdverseEventCausalityResultCode_Value_Value_MIN;
  static const Value Value_MAX =
    AdverseEventCausalityResultCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    AdverseEventCausalityResultCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return AdverseEventCausalityResultCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return AdverseEventCausalityResultCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return AdverseEventCausalityResultCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.AdverseEventCausalityResultCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::AdverseEventCausalityResultCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::AdverseEventCausalityResultCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.AdverseEventCausalityResultCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AdverseEventOutcomeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.AdverseEventOutcomeCode) */ {
 public:
  AdverseEventOutcomeCode();
  virtual ~AdverseEventOutcomeCode();

  AdverseEventOutcomeCode(const AdverseEventOutcomeCode& from);

  inline AdverseEventOutcomeCode& operator=(const AdverseEventOutcomeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AdverseEventOutcomeCode(AdverseEventOutcomeCode&& from) noexcept
    : AdverseEventOutcomeCode() {
    *this = ::std::move(from);
  }

  inline AdverseEventOutcomeCode& operator=(AdverseEventOutcomeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AdverseEventOutcomeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AdverseEventOutcomeCode* internal_default_instance() {
    return reinterpret_cast<const AdverseEventOutcomeCode*>(
               &_AdverseEventOutcomeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(AdverseEventOutcomeCode* other);
  friend void swap(AdverseEventOutcomeCode& a, AdverseEventOutcomeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AdverseEventOutcomeCode* New() const final {
    return CreateMaybeMessage<AdverseEventOutcomeCode>(NULL);
  }

  AdverseEventOutcomeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AdverseEventOutcomeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AdverseEventOutcomeCode& from);
  void MergeFrom(const AdverseEventOutcomeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AdverseEventOutcomeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AdverseEventOutcomeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    AdverseEventOutcomeCode_Value_INVALID_UNINITIALIZED;
  static const Value RESOLVED =
    AdverseEventOutcomeCode_Value_RESOLVED;
  static const Value RECOVERING =
    AdverseEventOutcomeCode_Value_RECOVERING;
  static const Value ONGOING =
    AdverseEventOutcomeCode_Value_ONGOING;
  static const Value RESOLVEDWITHSEQUELAE =
    AdverseEventOutcomeCode_Value_RESOLVEDWITHSEQUELAE;
  static const Value FATAL =
    AdverseEventOutcomeCode_Value_FATAL;
  static const Value UNKNOWN =
    AdverseEventOutcomeCode_Value_UNKNOWN;
  static inline bool Value_IsValid(int value) {
    return AdverseEventOutcomeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    AdverseEventOutcomeCode_Value_Value_MIN;
  static const Value Value_MAX =
    AdverseEventOutcomeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    AdverseEventOutcomeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return AdverseEventOutcomeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return AdverseEventOutcomeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return AdverseEventOutcomeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.AdverseEventOutcomeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::AdverseEventOutcomeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::AdverseEventOutcomeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.AdverseEventOutcomeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AdverseEventSeriousnessCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.AdverseEventSeriousnessCode) */ {
 public:
  AdverseEventSeriousnessCode();
  virtual ~AdverseEventSeriousnessCode();

  AdverseEventSeriousnessCode(const AdverseEventSeriousnessCode& from);

  inline AdverseEventSeriousnessCode& operator=(const AdverseEventSeriousnessCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AdverseEventSeriousnessCode(AdverseEventSeriousnessCode&& from) noexcept
    : AdverseEventSeriousnessCode() {
    *this = ::std::move(from);
  }

  inline AdverseEventSeriousnessCode& operator=(AdverseEventSeriousnessCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AdverseEventSeriousnessCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AdverseEventSeriousnessCode* internal_default_instance() {
    return reinterpret_cast<const AdverseEventSeriousnessCode*>(
               &_AdverseEventSeriousnessCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(AdverseEventSeriousnessCode* other);
  friend void swap(AdverseEventSeriousnessCode& a, AdverseEventSeriousnessCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AdverseEventSeriousnessCode* New() const final {
    return CreateMaybeMessage<AdverseEventSeriousnessCode>(NULL);
  }

  AdverseEventSeriousnessCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AdverseEventSeriousnessCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AdverseEventSeriousnessCode& from);
  void MergeFrom(const AdverseEventSeriousnessCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AdverseEventSeriousnessCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AdverseEventSeriousnessCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    AdverseEventSeriousnessCode_Value_INVALID_UNINITIALIZED;
  static const Value MILD =
    AdverseEventSeriousnessCode_Value_MILD;
  static const Value MODERATE =
    AdverseEventSeriousnessCode_Value_MODERATE;
  static const Value SEVERE =
    AdverseEventSeriousnessCode_Value_SEVERE;
  static inline bool Value_IsValid(int value) {
    return AdverseEventSeriousnessCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    AdverseEventSeriousnessCode_Value_Value_MIN;
  static const Value Value_MAX =
    AdverseEventSeriousnessCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    AdverseEventSeriousnessCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return AdverseEventSeriousnessCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return AdverseEventSeriousnessCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return AdverseEventSeriousnessCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.AdverseEventSeriousnessCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::AdverseEventSeriousnessCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::AdverseEventSeriousnessCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.AdverseEventSeriousnessCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AllergyIntoleranceSubstanceExposureRiskCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.AllergyIntoleranceSubstanceExposureRiskCode) */ {
 public:
  AllergyIntoleranceSubstanceExposureRiskCode();
  virtual ~AllergyIntoleranceSubstanceExposureRiskCode();

  AllergyIntoleranceSubstanceExposureRiskCode(const AllergyIntoleranceSubstanceExposureRiskCode& from);

  inline AllergyIntoleranceSubstanceExposureRiskCode& operator=(const AllergyIntoleranceSubstanceExposureRiskCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AllergyIntoleranceSubstanceExposureRiskCode(AllergyIntoleranceSubstanceExposureRiskCode&& from) noexcept
    : AllergyIntoleranceSubstanceExposureRiskCode() {
    *this = ::std::move(from);
  }

  inline AllergyIntoleranceSubstanceExposureRiskCode& operator=(AllergyIntoleranceSubstanceExposureRiskCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AllergyIntoleranceSubstanceExposureRiskCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AllergyIntoleranceSubstanceExposureRiskCode* internal_default_instance() {
    return reinterpret_cast<const AllergyIntoleranceSubstanceExposureRiskCode*>(
               &_AllergyIntoleranceSubstanceExposureRiskCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(AllergyIntoleranceSubstanceExposureRiskCode* other);
  friend void swap(AllergyIntoleranceSubstanceExposureRiskCode& a, AllergyIntoleranceSubstanceExposureRiskCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AllergyIntoleranceSubstanceExposureRiskCode* New() const final {
    return CreateMaybeMessage<AllergyIntoleranceSubstanceExposureRiskCode>(NULL);
  }

  AllergyIntoleranceSubstanceExposureRiskCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AllergyIntoleranceSubstanceExposureRiskCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AllergyIntoleranceSubstanceExposureRiskCode& from);
  void MergeFrom(const AllergyIntoleranceSubstanceExposureRiskCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AllergyIntoleranceSubstanceExposureRiskCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AllergyIntoleranceSubstanceExposureRiskCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    AllergyIntoleranceSubstanceExposureRiskCode_Value_INVALID_UNINITIALIZED;
  static const Value KNOWN_REACTION_RISK =
    AllergyIntoleranceSubstanceExposureRiskCode_Value_KNOWN_REACTION_RISK;
  static const Value NO_KNOWN_REACTION_RISK =
    AllergyIntoleranceSubstanceExposureRiskCode_Value_NO_KNOWN_REACTION_RISK;
  static inline bool Value_IsValid(int value) {
    return AllergyIntoleranceSubstanceExposureRiskCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    AllergyIntoleranceSubstanceExposureRiskCode_Value_Value_MIN;
  static const Value Value_MAX =
    AllergyIntoleranceSubstanceExposureRiskCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    AllergyIntoleranceSubstanceExposureRiskCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return AllergyIntoleranceSubstanceExposureRiskCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return AllergyIntoleranceSubstanceExposureRiskCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return AllergyIntoleranceSubstanceExposureRiskCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.AllergyIntoleranceSubstanceExposureRiskCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::AllergyIntoleranceSubstanceExposureRiskCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::AllergyIntoleranceSubstanceExposureRiskCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.AllergyIntoleranceSubstanceExposureRiskCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AllergyIntoleranceClinicalStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.AllergyIntoleranceClinicalStatusCode) */ {
 public:
  AllergyIntoleranceClinicalStatusCode();
  virtual ~AllergyIntoleranceClinicalStatusCode();

  AllergyIntoleranceClinicalStatusCode(const AllergyIntoleranceClinicalStatusCode& from);

  inline AllergyIntoleranceClinicalStatusCode& operator=(const AllergyIntoleranceClinicalStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AllergyIntoleranceClinicalStatusCode(AllergyIntoleranceClinicalStatusCode&& from) noexcept
    : AllergyIntoleranceClinicalStatusCode() {
    *this = ::std::move(from);
  }

  inline AllergyIntoleranceClinicalStatusCode& operator=(AllergyIntoleranceClinicalStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AllergyIntoleranceClinicalStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AllergyIntoleranceClinicalStatusCode* internal_default_instance() {
    return reinterpret_cast<const AllergyIntoleranceClinicalStatusCode*>(
               &_AllergyIntoleranceClinicalStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(AllergyIntoleranceClinicalStatusCode* other);
  friend void swap(AllergyIntoleranceClinicalStatusCode& a, AllergyIntoleranceClinicalStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AllergyIntoleranceClinicalStatusCode* New() const final {
    return CreateMaybeMessage<AllergyIntoleranceClinicalStatusCode>(NULL);
  }

  AllergyIntoleranceClinicalStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AllergyIntoleranceClinicalStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AllergyIntoleranceClinicalStatusCode& from);
  void MergeFrom(const AllergyIntoleranceClinicalStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AllergyIntoleranceClinicalStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AllergyIntoleranceClinicalStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    AllergyIntoleranceClinicalStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value ACTIVE =
    AllergyIntoleranceClinicalStatusCode_Value_ACTIVE;
  static const Value INACTIVE =
    AllergyIntoleranceClinicalStatusCode_Value_INACTIVE;
  static const Value RESOLVED =
    AllergyIntoleranceClinicalStatusCode_Value_RESOLVED;
  static inline bool Value_IsValid(int value) {
    return AllergyIntoleranceClinicalStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    AllergyIntoleranceClinicalStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    AllergyIntoleranceClinicalStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    AllergyIntoleranceClinicalStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return AllergyIntoleranceClinicalStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return AllergyIntoleranceClinicalStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return AllergyIntoleranceClinicalStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.AllergyIntoleranceClinicalStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::AllergyIntoleranceClinicalStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::AllergyIntoleranceClinicalStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.AllergyIntoleranceClinicalStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AllergyIntoleranceCategoryCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.AllergyIntoleranceCategoryCode) */ {
 public:
  AllergyIntoleranceCategoryCode();
  virtual ~AllergyIntoleranceCategoryCode();

  AllergyIntoleranceCategoryCode(const AllergyIntoleranceCategoryCode& from);

  inline AllergyIntoleranceCategoryCode& operator=(const AllergyIntoleranceCategoryCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AllergyIntoleranceCategoryCode(AllergyIntoleranceCategoryCode&& from) noexcept
    : AllergyIntoleranceCategoryCode() {
    *this = ::std::move(from);
  }

  inline AllergyIntoleranceCategoryCode& operator=(AllergyIntoleranceCategoryCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AllergyIntoleranceCategoryCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AllergyIntoleranceCategoryCode* internal_default_instance() {
    return reinterpret_cast<const AllergyIntoleranceCategoryCode*>(
               &_AllergyIntoleranceCategoryCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(AllergyIntoleranceCategoryCode* other);
  friend void swap(AllergyIntoleranceCategoryCode& a, AllergyIntoleranceCategoryCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AllergyIntoleranceCategoryCode* New() const final {
    return CreateMaybeMessage<AllergyIntoleranceCategoryCode>(NULL);
  }

  AllergyIntoleranceCategoryCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AllergyIntoleranceCategoryCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AllergyIntoleranceCategoryCode& from);
  void MergeFrom(const AllergyIntoleranceCategoryCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AllergyIntoleranceCategoryCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AllergyIntoleranceCategoryCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    AllergyIntoleranceCategoryCode_Value_INVALID_UNINITIALIZED;
  static const Value FOOD =
    AllergyIntoleranceCategoryCode_Value_FOOD;
  static const Value MEDICATION =
    AllergyIntoleranceCategoryCode_Value_MEDICATION;
  static const Value ENVIRONMENT =
    AllergyIntoleranceCategoryCode_Value_ENVIRONMENT;
  static const Value BIOLOGIC =
    AllergyIntoleranceCategoryCode_Value_BIOLOGIC;
  static inline bool Value_IsValid(int value) {
    return AllergyIntoleranceCategoryCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    AllergyIntoleranceCategoryCode_Value_Value_MIN;
  static const Value Value_MAX =
    AllergyIntoleranceCategoryCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    AllergyIntoleranceCategoryCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return AllergyIntoleranceCategoryCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return AllergyIntoleranceCategoryCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return AllergyIntoleranceCategoryCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.AllergyIntoleranceCategoryCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::AllergyIntoleranceCategoryCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::AllergyIntoleranceCategoryCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.AllergyIntoleranceCategoryCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AllergyIntoleranceCriticalityCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.AllergyIntoleranceCriticalityCode) */ {
 public:
  AllergyIntoleranceCriticalityCode();
  virtual ~AllergyIntoleranceCriticalityCode();

  AllergyIntoleranceCriticalityCode(const AllergyIntoleranceCriticalityCode& from);

  inline AllergyIntoleranceCriticalityCode& operator=(const AllergyIntoleranceCriticalityCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AllergyIntoleranceCriticalityCode(AllergyIntoleranceCriticalityCode&& from) noexcept
    : AllergyIntoleranceCriticalityCode() {
    *this = ::std::move(from);
  }

  inline AllergyIntoleranceCriticalityCode& operator=(AllergyIntoleranceCriticalityCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AllergyIntoleranceCriticalityCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AllergyIntoleranceCriticalityCode* internal_default_instance() {
    return reinterpret_cast<const AllergyIntoleranceCriticalityCode*>(
               &_AllergyIntoleranceCriticalityCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(AllergyIntoleranceCriticalityCode* other);
  friend void swap(AllergyIntoleranceCriticalityCode& a, AllergyIntoleranceCriticalityCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AllergyIntoleranceCriticalityCode* New() const final {
    return CreateMaybeMessage<AllergyIntoleranceCriticalityCode>(NULL);
  }

  AllergyIntoleranceCriticalityCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AllergyIntoleranceCriticalityCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AllergyIntoleranceCriticalityCode& from);
  void MergeFrom(const AllergyIntoleranceCriticalityCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AllergyIntoleranceCriticalityCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AllergyIntoleranceCriticalityCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    AllergyIntoleranceCriticalityCode_Value_INVALID_UNINITIALIZED;
  static const Value LOW =
    AllergyIntoleranceCriticalityCode_Value_LOW;
  static const Value HIGH =
    AllergyIntoleranceCriticalityCode_Value_HIGH;
  static const Value UNABLE_TO_ASSESS =
    AllergyIntoleranceCriticalityCode_Value_UNABLE_TO_ASSESS;
  static inline bool Value_IsValid(int value) {
    return AllergyIntoleranceCriticalityCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    AllergyIntoleranceCriticalityCode_Value_Value_MIN;
  static const Value Value_MAX =
    AllergyIntoleranceCriticalityCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    AllergyIntoleranceCriticalityCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return AllergyIntoleranceCriticalityCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return AllergyIntoleranceCriticalityCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return AllergyIntoleranceCriticalityCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.AllergyIntoleranceCriticalityCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::AllergyIntoleranceCriticalityCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::AllergyIntoleranceCriticalityCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.AllergyIntoleranceCriticalityCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AllergyIntoleranceTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.AllergyIntoleranceTypeCode) */ {
 public:
  AllergyIntoleranceTypeCode();
  virtual ~AllergyIntoleranceTypeCode();

  AllergyIntoleranceTypeCode(const AllergyIntoleranceTypeCode& from);

  inline AllergyIntoleranceTypeCode& operator=(const AllergyIntoleranceTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AllergyIntoleranceTypeCode(AllergyIntoleranceTypeCode&& from) noexcept
    : AllergyIntoleranceTypeCode() {
    *this = ::std::move(from);
  }

  inline AllergyIntoleranceTypeCode& operator=(AllergyIntoleranceTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AllergyIntoleranceTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AllergyIntoleranceTypeCode* internal_default_instance() {
    return reinterpret_cast<const AllergyIntoleranceTypeCode*>(
               &_AllergyIntoleranceTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(AllergyIntoleranceTypeCode* other);
  friend void swap(AllergyIntoleranceTypeCode& a, AllergyIntoleranceTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AllergyIntoleranceTypeCode* New() const final {
    return CreateMaybeMessage<AllergyIntoleranceTypeCode>(NULL);
  }

  AllergyIntoleranceTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AllergyIntoleranceTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AllergyIntoleranceTypeCode& from);
  void MergeFrom(const AllergyIntoleranceTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AllergyIntoleranceTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AllergyIntoleranceTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    AllergyIntoleranceTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value ALLERGY =
    AllergyIntoleranceTypeCode_Value_ALLERGY;
  static const Value INTOLERANCE =
    AllergyIntoleranceTypeCode_Value_INTOLERANCE;
  static inline bool Value_IsValid(int value) {
    return AllergyIntoleranceTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    AllergyIntoleranceTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    AllergyIntoleranceTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    AllergyIntoleranceTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return AllergyIntoleranceTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return AllergyIntoleranceTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return AllergyIntoleranceTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.AllergyIntoleranceTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::AllergyIntoleranceTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::AllergyIntoleranceTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.AllergyIntoleranceTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AllergyIntoleranceVerificationStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.AllergyIntoleranceVerificationStatusCode) */ {
 public:
  AllergyIntoleranceVerificationStatusCode();
  virtual ~AllergyIntoleranceVerificationStatusCode();

  AllergyIntoleranceVerificationStatusCode(const AllergyIntoleranceVerificationStatusCode& from);

  inline AllergyIntoleranceVerificationStatusCode& operator=(const AllergyIntoleranceVerificationStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AllergyIntoleranceVerificationStatusCode(AllergyIntoleranceVerificationStatusCode&& from) noexcept
    : AllergyIntoleranceVerificationStatusCode() {
    *this = ::std::move(from);
  }

  inline AllergyIntoleranceVerificationStatusCode& operator=(AllergyIntoleranceVerificationStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AllergyIntoleranceVerificationStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AllergyIntoleranceVerificationStatusCode* internal_default_instance() {
    return reinterpret_cast<const AllergyIntoleranceVerificationStatusCode*>(
               &_AllergyIntoleranceVerificationStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void Swap(AllergyIntoleranceVerificationStatusCode* other);
  friend void swap(AllergyIntoleranceVerificationStatusCode& a, AllergyIntoleranceVerificationStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AllergyIntoleranceVerificationStatusCode* New() const final {
    return CreateMaybeMessage<AllergyIntoleranceVerificationStatusCode>(NULL);
  }

  AllergyIntoleranceVerificationStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AllergyIntoleranceVerificationStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AllergyIntoleranceVerificationStatusCode& from);
  void MergeFrom(const AllergyIntoleranceVerificationStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AllergyIntoleranceVerificationStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AllergyIntoleranceVerificationStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    AllergyIntoleranceVerificationStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value UNCONFIRMED =
    AllergyIntoleranceVerificationStatusCode_Value_UNCONFIRMED;
  static const Value CONFIRMED =
    AllergyIntoleranceVerificationStatusCode_Value_CONFIRMED;
  static const Value REFUTED =
    AllergyIntoleranceVerificationStatusCode_Value_REFUTED;
  static const Value ENTERED_IN_ERROR =
    AllergyIntoleranceVerificationStatusCode_Value_ENTERED_IN_ERROR;
  static inline bool Value_IsValid(int value) {
    return AllergyIntoleranceVerificationStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    AllergyIntoleranceVerificationStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    AllergyIntoleranceVerificationStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    AllergyIntoleranceVerificationStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return AllergyIntoleranceVerificationStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return AllergyIntoleranceVerificationStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return AllergyIntoleranceVerificationStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.AllergyIntoleranceVerificationStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::AllergyIntoleranceVerificationStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::AllergyIntoleranceVerificationStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.AllergyIntoleranceVerificationStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GenderStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.GenderStatusCode) */ {
 public:
  GenderStatusCode();
  virtual ~GenderStatusCode();

  GenderStatusCode(const GenderStatusCode& from);

  inline GenderStatusCode& operator=(const GenderStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GenderStatusCode(GenderStatusCode&& from) noexcept
    : GenderStatusCode() {
    *this = ::std::move(from);
  }

  inline GenderStatusCode& operator=(GenderStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GenderStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GenderStatusCode* internal_default_instance() {
    return reinterpret_cast<const GenderStatusCode*>(
               &_GenderStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void Swap(GenderStatusCode* other);
  friend void swap(GenderStatusCode& a, GenderStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GenderStatusCode* New() const final {
    return CreateMaybeMessage<GenderStatusCode>(NULL);
  }

  GenderStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GenderStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GenderStatusCode& from);
  void MergeFrom(const GenderStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenderStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GenderStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    GenderStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value NEUTERED =
    GenderStatusCode_Value_NEUTERED;
  static const Value INTACT =
    GenderStatusCode_Value_INTACT;
  static const Value UNKNOWN =
    GenderStatusCode_Value_UNKNOWN;
  static inline bool Value_IsValid(int value) {
    return GenderStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    GenderStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    GenderStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    GenderStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return GenderStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return GenderStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return GenderStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.GenderStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::GenderStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::GenderStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.GenderStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AppointmentStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.AppointmentStatusCode) */ {
 public:
  AppointmentStatusCode();
  virtual ~AppointmentStatusCode();

  AppointmentStatusCode(const AppointmentStatusCode& from);

  inline AppointmentStatusCode& operator=(const AppointmentStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AppointmentStatusCode(AppointmentStatusCode&& from) noexcept
    : AppointmentStatusCode() {
    *this = ::std::move(from);
  }

  inline AppointmentStatusCode& operator=(AppointmentStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AppointmentStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppointmentStatusCode* internal_default_instance() {
    return reinterpret_cast<const AppointmentStatusCode*>(
               &_AppointmentStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  void Swap(AppointmentStatusCode* other);
  friend void swap(AppointmentStatusCode& a, AppointmentStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AppointmentStatusCode* New() const final {
    return CreateMaybeMessage<AppointmentStatusCode>(NULL);
  }

  AppointmentStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AppointmentStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AppointmentStatusCode& from);
  void MergeFrom(const AppointmentStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppointmentStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AppointmentStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    AppointmentStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value PROPOSED =
    AppointmentStatusCode_Value_PROPOSED;
  static const Value PENDING =
    AppointmentStatusCode_Value_PENDING;
  static const Value BOOKED =
    AppointmentStatusCode_Value_BOOKED;
  static const Value ARRIVED =
    AppointmentStatusCode_Value_ARRIVED;
  static const Value FULFILLED =
    AppointmentStatusCode_Value_FULFILLED;
  static const Value CANCELLED =
    AppointmentStatusCode_Value_CANCELLED;
  static const Value NOSHOW =
    AppointmentStatusCode_Value_NOSHOW;
  static const Value ENTERED_IN_ERROR =
    AppointmentStatusCode_Value_ENTERED_IN_ERROR;
  static inline bool Value_IsValid(int value) {
    return AppointmentStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    AppointmentStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    AppointmentStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    AppointmentStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return AppointmentStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return AppointmentStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return AppointmentStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.AppointmentStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::AppointmentStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::AppointmentStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.AppointmentStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AssertionDirectionTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.AssertionDirectionTypeCode) */ {
 public:
  AssertionDirectionTypeCode();
  virtual ~AssertionDirectionTypeCode();

  AssertionDirectionTypeCode(const AssertionDirectionTypeCode& from);

  inline AssertionDirectionTypeCode& operator=(const AssertionDirectionTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AssertionDirectionTypeCode(AssertionDirectionTypeCode&& from) noexcept
    : AssertionDirectionTypeCode() {
    *this = ::std::move(from);
  }

  inline AssertionDirectionTypeCode& operator=(AssertionDirectionTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AssertionDirectionTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AssertionDirectionTypeCode* internal_default_instance() {
    return reinterpret_cast<const AssertionDirectionTypeCode*>(
               &_AssertionDirectionTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void Swap(AssertionDirectionTypeCode* other);
  friend void swap(AssertionDirectionTypeCode& a, AssertionDirectionTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AssertionDirectionTypeCode* New() const final {
    return CreateMaybeMessage<AssertionDirectionTypeCode>(NULL);
  }

  AssertionDirectionTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AssertionDirectionTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AssertionDirectionTypeCode& from);
  void MergeFrom(const AssertionDirectionTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AssertionDirectionTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AssertionDirectionTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    AssertionDirectionTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value RESPONSE =
    AssertionDirectionTypeCode_Value_RESPONSE;
  static const Value REQUEST =
    AssertionDirectionTypeCode_Value_REQUEST;
  static inline bool Value_IsValid(int value) {
    return AssertionDirectionTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    AssertionDirectionTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    AssertionDirectionTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    AssertionDirectionTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return AssertionDirectionTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return AssertionDirectionTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return AssertionDirectionTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.AssertionDirectionTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::AssertionDirectionTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::AssertionDirectionTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.AssertionDirectionTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AssertionOperatorTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.AssertionOperatorTypeCode) */ {
 public:
  AssertionOperatorTypeCode();
  virtual ~AssertionOperatorTypeCode();

  AssertionOperatorTypeCode(const AssertionOperatorTypeCode& from);

  inline AssertionOperatorTypeCode& operator=(const AssertionOperatorTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AssertionOperatorTypeCode(AssertionOperatorTypeCode&& from) noexcept
    : AssertionOperatorTypeCode() {
    *this = ::std::move(from);
  }

  inline AssertionOperatorTypeCode& operator=(AssertionOperatorTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AssertionOperatorTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AssertionOperatorTypeCode* internal_default_instance() {
    return reinterpret_cast<const AssertionOperatorTypeCode*>(
               &_AssertionOperatorTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  void Swap(AssertionOperatorTypeCode* other);
  friend void swap(AssertionOperatorTypeCode& a, AssertionOperatorTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AssertionOperatorTypeCode* New() const final {
    return CreateMaybeMessage<AssertionOperatorTypeCode>(NULL);
  }

  AssertionOperatorTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AssertionOperatorTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AssertionOperatorTypeCode& from);
  void MergeFrom(const AssertionOperatorTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AssertionOperatorTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AssertionOperatorTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    AssertionOperatorTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value EQUALS =
    AssertionOperatorTypeCode_Value_EQUALS;
  static const Value NOTEQUALS =
    AssertionOperatorTypeCode_Value_NOTEQUALS;
  static const Value IN =
    AssertionOperatorTypeCode_Value_IN;
  static const Value NOTIN =
    AssertionOperatorTypeCode_Value_NOTIN;
  static const Value GREATERTHAN =
    AssertionOperatorTypeCode_Value_GREATERTHAN;
  static const Value LESSTHAN =
    AssertionOperatorTypeCode_Value_LESSTHAN;
  static const Value EMPTY =
    AssertionOperatorTypeCode_Value_EMPTY;
  static const Value NOTEMPTY =
    AssertionOperatorTypeCode_Value_NOTEMPTY;
  static const Value CONTAINS =
    AssertionOperatorTypeCode_Value_CONTAINS;
  static const Value NOTCONTAINS =
    AssertionOperatorTypeCode_Value_NOTCONTAINS;
  static const Value EVAL =
    AssertionOperatorTypeCode_Value_EVAL;
  static inline bool Value_IsValid(int value) {
    return AssertionOperatorTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    AssertionOperatorTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    AssertionOperatorTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    AssertionOperatorTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return AssertionOperatorTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return AssertionOperatorTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return AssertionOperatorTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.AssertionOperatorTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::AssertionOperatorTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::AssertionOperatorTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.AssertionOperatorTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AssertionResponseTypesCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.AssertionResponseTypesCode) */ {
 public:
  AssertionResponseTypesCode();
  virtual ~AssertionResponseTypesCode();

  AssertionResponseTypesCode(const AssertionResponseTypesCode& from);

  inline AssertionResponseTypesCode& operator=(const AssertionResponseTypesCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AssertionResponseTypesCode(AssertionResponseTypesCode&& from) noexcept
    : AssertionResponseTypesCode() {
    *this = ::std::move(from);
  }

  inline AssertionResponseTypesCode& operator=(AssertionResponseTypesCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AssertionResponseTypesCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AssertionResponseTypesCode* internal_default_instance() {
    return reinterpret_cast<const AssertionResponseTypesCode*>(
               &_AssertionResponseTypesCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  void Swap(AssertionResponseTypesCode* other);
  friend void swap(AssertionResponseTypesCode& a, AssertionResponseTypesCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AssertionResponseTypesCode* New() const final {
    return CreateMaybeMessage<AssertionResponseTypesCode>(NULL);
  }

  AssertionResponseTypesCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AssertionResponseTypesCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AssertionResponseTypesCode& from);
  void MergeFrom(const AssertionResponseTypesCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AssertionResponseTypesCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AssertionResponseTypesCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    AssertionResponseTypesCode_Value_INVALID_UNINITIALIZED;
  static const Value OKAY =
    AssertionResponseTypesCode_Value_OKAY;
  static const Value CREATED =
    AssertionResponseTypesCode_Value_CREATED;
  static const Value NOCONTENT =
    AssertionResponseTypesCode_Value_NOCONTENT;
  static const Value NOTMODIFIED =
    AssertionResponseTypesCode_Value_NOTMODIFIED;
  static const Value BAD =
    AssertionResponseTypesCode_Value_BAD;
  static const Value FORBIDDEN =
    AssertionResponseTypesCode_Value_FORBIDDEN;
  static const Value NOTFOUND =
    AssertionResponseTypesCode_Value_NOTFOUND;
  static const Value METHODNOTALLOWED =
    AssertionResponseTypesCode_Value_METHODNOTALLOWED;
  static const Value CONFLICT =
    AssertionResponseTypesCode_Value_CONFLICT;
  static const Value GONE =
    AssertionResponseTypesCode_Value_GONE;
  static const Value PRECONDITIONFAILED =
    AssertionResponseTypesCode_Value_PRECONDITIONFAILED;
  static const Value UNPROCESSABLE =
    AssertionResponseTypesCode_Value_UNPROCESSABLE;
  static inline bool Value_IsValid(int value) {
    return AssertionResponseTypesCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    AssertionResponseTypesCode_Value_Value_MIN;
  static const Value Value_MAX =
    AssertionResponseTypesCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    AssertionResponseTypesCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return AssertionResponseTypesCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return AssertionResponseTypesCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return AssertionResponseTypesCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.AssertionResponseTypesCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::AssertionResponseTypesCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::AssertionResponseTypesCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.AssertionResponseTypesCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AuditEventActionCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.AuditEventActionCode) */ {
 public:
  AuditEventActionCode();
  virtual ~AuditEventActionCode();

  AuditEventActionCode(const AuditEventActionCode& from);

  inline AuditEventActionCode& operator=(const AuditEventActionCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AuditEventActionCode(AuditEventActionCode&& from) noexcept
    : AuditEventActionCode() {
    *this = ::std::move(from);
  }

  inline AuditEventActionCode& operator=(AuditEventActionCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AuditEventActionCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AuditEventActionCode* internal_default_instance() {
    return reinterpret_cast<const AuditEventActionCode*>(
               &_AuditEventActionCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  void Swap(AuditEventActionCode* other);
  friend void swap(AuditEventActionCode& a, AuditEventActionCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AuditEventActionCode* New() const final {
    return CreateMaybeMessage<AuditEventActionCode>(NULL);
  }

  AuditEventActionCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AuditEventActionCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AuditEventActionCode& from);
  void MergeFrom(const AuditEventActionCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AuditEventActionCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AuditEventActionCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    AuditEventActionCode_Value_INVALID_UNINITIALIZED;
  static const Value C =
    AuditEventActionCode_Value_C;
  static const Value R =
    AuditEventActionCode_Value_R;
  static const Value U =
    AuditEventActionCode_Value_U;
  static const Value D =
    AuditEventActionCode_Value_D;
  static const Value E =
    AuditEventActionCode_Value_E;
  static inline bool Value_IsValid(int value) {
    return AuditEventActionCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    AuditEventActionCode_Value_Value_MIN;
  static const Value Value_MAX =
    AuditEventActionCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    AuditEventActionCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return AuditEventActionCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return AuditEventActionCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return AuditEventActionCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.AuditEventActionCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::AuditEventActionCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::AuditEventActionCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.AuditEventActionCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AuditEventOutcomeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.AuditEventOutcomeCode) */ {
 public:
  AuditEventOutcomeCode();
  virtual ~AuditEventOutcomeCode();

  AuditEventOutcomeCode(const AuditEventOutcomeCode& from);

  inline AuditEventOutcomeCode& operator=(const AuditEventOutcomeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AuditEventOutcomeCode(AuditEventOutcomeCode&& from) noexcept
    : AuditEventOutcomeCode() {
    *this = ::std::move(from);
  }

  inline AuditEventOutcomeCode& operator=(AuditEventOutcomeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AuditEventOutcomeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AuditEventOutcomeCode* internal_default_instance() {
    return reinterpret_cast<const AuditEventOutcomeCode*>(
               &_AuditEventOutcomeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  void Swap(AuditEventOutcomeCode* other);
  friend void swap(AuditEventOutcomeCode& a, AuditEventOutcomeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AuditEventOutcomeCode* New() const final {
    return CreateMaybeMessage<AuditEventOutcomeCode>(NULL);
  }

  AuditEventOutcomeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AuditEventOutcomeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AuditEventOutcomeCode& from);
  void MergeFrom(const AuditEventOutcomeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AuditEventOutcomeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AuditEventOutcomeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    AuditEventOutcomeCode_Value_INVALID_UNINITIALIZED;
  static const Value SUCCESS =
    AuditEventOutcomeCode_Value_SUCCESS;
  static const Value MINOR_FAILURE =
    AuditEventOutcomeCode_Value_MINOR_FAILURE;
  static const Value SERIOUS_FAILURE =
    AuditEventOutcomeCode_Value_SERIOUS_FAILURE;
  static const Value MAJOR_FAILURE =
    AuditEventOutcomeCode_Value_MAJOR_FAILURE;
  static inline bool Value_IsValid(int value) {
    return AuditEventOutcomeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    AuditEventOutcomeCode_Value_Value_MIN;
  static const Value Value_MAX =
    AuditEventOutcomeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    AuditEventOutcomeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return AuditEventOutcomeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return AuditEventOutcomeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return AuditEventOutcomeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.AuditEventOutcomeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::AuditEventOutcomeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::AuditEventOutcomeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.AuditEventOutcomeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BasicResourceTypesCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.BasicResourceTypesCode) */ {
 public:
  BasicResourceTypesCode();
  virtual ~BasicResourceTypesCode();

  BasicResourceTypesCode(const BasicResourceTypesCode& from);

  inline BasicResourceTypesCode& operator=(const BasicResourceTypesCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BasicResourceTypesCode(BasicResourceTypesCode&& from) noexcept
    : BasicResourceTypesCode() {
    *this = ::std::move(from);
  }

  inline BasicResourceTypesCode& operator=(BasicResourceTypesCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicResourceTypesCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BasicResourceTypesCode* internal_default_instance() {
    return reinterpret_cast<const BasicResourceTypesCode*>(
               &_BasicResourceTypesCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  void Swap(BasicResourceTypesCode* other);
  friend void swap(BasicResourceTypesCode& a, BasicResourceTypesCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BasicResourceTypesCode* New() const final {
    return CreateMaybeMessage<BasicResourceTypesCode>(NULL);
  }

  BasicResourceTypesCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BasicResourceTypesCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BasicResourceTypesCode& from);
  void MergeFrom(const BasicResourceTypesCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BasicResourceTypesCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef BasicResourceTypesCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    BasicResourceTypesCode_Value_INVALID_UNINITIALIZED;
  static const Value CONSENT =
    BasicResourceTypesCode_Value_CONSENT;
  static const Value REFERRAL =
    BasicResourceTypesCode_Value_REFERRAL;
  static const Value ADVEVENT =
    BasicResourceTypesCode_Value_ADVEVENT;
  static const Value APTMTREQ =
    BasicResourceTypesCode_Value_APTMTREQ;
  static const Value TRANSFER =
    BasicResourceTypesCode_Value_TRANSFER;
  static const Value DIET =
    BasicResourceTypesCode_Value_DIET;
  static const Value ADMINACT =
    BasicResourceTypesCode_Value_ADMINACT;
  static const Value EXPOSURE =
    BasicResourceTypesCode_Value_EXPOSURE;
  static const Value INVESTIGATION =
    BasicResourceTypesCode_Value_INVESTIGATION;
  static const Value ACCOUNT =
    BasicResourceTypesCode_Value_ACCOUNT;
  static const Value INVOICE =
    BasicResourceTypesCode_Value_INVOICE;
  static const Value ADJUDICAT =
    BasicResourceTypesCode_Value_ADJUDICAT;
  static const Value PREDETREQ =
    BasicResourceTypesCode_Value_PREDETREQ;
  static const Value PREDETERMINE =
    BasicResourceTypesCode_Value_PREDETERMINE;
  static const Value STUDY =
    BasicResourceTypesCode_Value_STUDY;
  static const Value PROTOCOL =
    BasicResourceTypesCode_Value_PROTOCOL;
  static inline bool Value_IsValid(int value) {
    return BasicResourceTypesCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    BasicResourceTypesCode_Value_Value_MIN;
  static const Value Value_MAX =
    BasicResourceTypesCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    BasicResourceTypesCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return BasicResourceTypesCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return BasicResourceTypesCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return BasicResourceTypesCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.BasicResourceTypesCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::BasicResourceTypesCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::BasicResourceTypesCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.BasicResourceTypesCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BundleTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.BundleTypeCode) */ {
 public:
  BundleTypeCode();
  virtual ~BundleTypeCode();

  BundleTypeCode(const BundleTypeCode& from);

  inline BundleTypeCode& operator=(const BundleTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BundleTypeCode(BundleTypeCode&& from) noexcept
    : BundleTypeCode() {
    *this = ::std::move(from);
  }

  inline BundleTypeCode& operator=(BundleTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BundleTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BundleTypeCode* internal_default_instance() {
    return reinterpret_cast<const BundleTypeCode*>(
               &_BundleTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  void Swap(BundleTypeCode* other);
  friend void swap(BundleTypeCode& a, BundleTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BundleTypeCode* New() const final {
    return CreateMaybeMessage<BundleTypeCode>(NULL);
  }

  BundleTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BundleTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BundleTypeCode& from);
  void MergeFrom(const BundleTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BundleTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef BundleTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    BundleTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value DOCUMENT =
    BundleTypeCode_Value_DOCUMENT;
  static const Value MESSAGE =
    BundleTypeCode_Value_MESSAGE;
  static const Value TRANSACTION =
    BundleTypeCode_Value_TRANSACTION;
  static const Value TRANSACTION_RESPONSE =
    BundleTypeCode_Value_TRANSACTION_RESPONSE;
  static const Value BATCH =
    BundleTypeCode_Value_BATCH;
  static const Value BATCH_RESPONSE =
    BundleTypeCode_Value_BATCH_RESPONSE;
  static const Value HISTORY =
    BundleTypeCode_Value_HISTORY;
  static const Value SEARCHSET =
    BundleTypeCode_Value_SEARCHSET;
  static const Value COLLECTION =
    BundleTypeCode_Value_COLLECTION;
  static inline bool Value_IsValid(int value) {
    return BundleTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    BundleTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    BundleTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    BundleTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return BundleTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return BundleTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return BundleTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.BundleTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::BundleTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::BundleTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.BundleTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CapabilityStatementKindCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.CapabilityStatementKindCode) */ {
 public:
  CapabilityStatementKindCode();
  virtual ~CapabilityStatementKindCode();

  CapabilityStatementKindCode(const CapabilityStatementKindCode& from);

  inline CapabilityStatementKindCode& operator=(const CapabilityStatementKindCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CapabilityStatementKindCode(CapabilityStatementKindCode&& from) noexcept
    : CapabilityStatementKindCode() {
    *this = ::std::move(from);
  }

  inline CapabilityStatementKindCode& operator=(CapabilityStatementKindCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CapabilityStatementKindCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CapabilityStatementKindCode* internal_default_instance() {
    return reinterpret_cast<const CapabilityStatementKindCode*>(
               &_CapabilityStatementKindCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  void Swap(CapabilityStatementKindCode* other);
  friend void swap(CapabilityStatementKindCode& a, CapabilityStatementKindCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CapabilityStatementKindCode* New() const final {
    return CreateMaybeMessage<CapabilityStatementKindCode>(NULL);
  }

  CapabilityStatementKindCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CapabilityStatementKindCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CapabilityStatementKindCode& from);
  void MergeFrom(const CapabilityStatementKindCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CapabilityStatementKindCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CapabilityStatementKindCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    CapabilityStatementKindCode_Value_INVALID_UNINITIALIZED;
  static const Value INSTANCE =
    CapabilityStatementKindCode_Value_INSTANCE;
  static const Value CAPABILITY =
    CapabilityStatementKindCode_Value_CAPABILITY;
  static const Value REQUIREMENTS =
    CapabilityStatementKindCode_Value_REQUIREMENTS;
  static inline bool Value_IsValid(int value) {
    return CapabilityStatementKindCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    CapabilityStatementKindCode_Value_Value_MIN;
  static const Value Value_MAX =
    CapabilityStatementKindCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    CapabilityStatementKindCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return CapabilityStatementKindCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return CapabilityStatementKindCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return CapabilityStatementKindCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CapabilityStatementKindCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::CapabilityStatementKindCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::CapabilityStatementKindCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.CapabilityStatementKindCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CarePlanActivityCategoryCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.CarePlanActivityCategoryCode) */ {
 public:
  CarePlanActivityCategoryCode();
  virtual ~CarePlanActivityCategoryCode();

  CarePlanActivityCategoryCode(const CarePlanActivityCategoryCode& from);

  inline CarePlanActivityCategoryCode& operator=(const CarePlanActivityCategoryCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CarePlanActivityCategoryCode(CarePlanActivityCategoryCode&& from) noexcept
    : CarePlanActivityCategoryCode() {
    *this = ::std::move(from);
  }

  inline CarePlanActivityCategoryCode& operator=(CarePlanActivityCategoryCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CarePlanActivityCategoryCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CarePlanActivityCategoryCode* internal_default_instance() {
    return reinterpret_cast<const CarePlanActivityCategoryCode*>(
               &_CarePlanActivityCategoryCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  void Swap(CarePlanActivityCategoryCode* other);
  friend void swap(CarePlanActivityCategoryCode& a, CarePlanActivityCategoryCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CarePlanActivityCategoryCode* New() const final {
    return CreateMaybeMessage<CarePlanActivityCategoryCode>(NULL);
  }

  CarePlanActivityCategoryCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CarePlanActivityCategoryCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CarePlanActivityCategoryCode& from);
  void MergeFrom(const CarePlanActivityCategoryCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CarePlanActivityCategoryCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CarePlanActivityCategoryCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    CarePlanActivityCategoryCode_Value_INVALID_UNINITIALIZED;
  static const Value DIET =
    CarePlanActivityCategoryCode_Value_DIET;
  static const Value DRUG =
    CarePlanActivityCategoryCode_Value_DRUG;
  static const Value ENCOUNTER =
    CarePlanActivityCategoryCode_Value_ENCOUNTER;
  static const Value OBSERVATION =
    CarePlanActivityCategoryCode_Value_OBSERVATION;
  static const Value PROCEDURE =
    CarePlanActivityCategoryCode_Value_PROCEDURE;
  static const Value SUPPLY =
    CarePlanActivityCategoryCode_Value_SUPPLY;
  static const Value OTHER =
    CarePlanActivityCategoryCode_Value_OTHER;
  static inline bool Value_IsValid(int value) {
    return CarePlanActivityCategoryCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    CarePlanActivityCategoryCode_Value_Value_MIN;
  static const Value Value_MAX =
    CarePlanActivityCategoryCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    CarePlanActivityCategoryCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return CarePlanActivityCategoryCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return CarePlanActivityCategoryCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return CarePlanActivityCategoryCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CarePlanActivityCategoryCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::CarePlanActivityCategoryCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::CarePlanActivityCategoryCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.CarePlanActivityCategoryCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CarePlanActivityStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.CarePlanActivityStatusCode) */ {
 public:
  CarePlanActivityStatusCode();
  virtual ~CarePlanActivityStatusCode();

  CarePlanActivityStatusCode(const CarePlanActivityStatusCode& from);

  inline CarePlanActivityStatusCode& operator=(const CarePlanActivityStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CarePlanActivityStatusCode(CarePlanActivityStatusCode&& from) noexcept
    : CarePlanActivityStatusCode() {
    *this = ::std::move(from);
  }

  inline CarePlanActivityStatusCode& operator=(CarePlanActivityStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CarePlanActivityStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CarePlanActivityStatusCode* internal_default_instance() {
    return reinterpret_cast<const CarePlanActivityStatusCode*>(
               &_CarePlanActivityStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  void Swap(CarePlanActivityStatusCode* other);
  friend void swap(CarePlanActivityStatusCode& a, CarePlanActivityStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CarePlanActivityStatusCode* New() const final {
    return CreateMaybeMessage<CarePlanActivityStatusCode>(NULL);
  }

  CarePlanActivityStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CarePlanActivityStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CarePlanActivityStatusCode& from);
  void MergeFrom(const CarePlanActivityStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CarePlanActivityStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CarePlanActivityStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    CarePlanActivityStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value NOT_STARTED =
    CarePlanActivityStatusCode_Value_NOT_STARTED;
  static const Value SCHEDULED =
    CarePlanActivityStatusCode_Value_SCHEDULED;
  static const Value IN_PROGRESS =
    CarePlanActivityStatusCode_Value_IN_PROGRESS;
  static const Value ON_HOLD =
    CarePlanActivityStatusCode_Value_ON_HOLD;
  static const Value COMPLETED =
    CarePlanActivityStatusCode_Value_COMPLETED;
  static const Value CANCELLED =
    CarePlanActivityStatusCode_Value_CANCELLED;
  static const Value UNKNOWN =
    CarePlanActivityStatusCode_Value_UNKNOWN;
  static inline bool Value_IsValid(int value) {
    return CarePlanActivityStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    CarePlanActivityStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    CarePlanActivityStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    CarePlanActivityStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return CarePlanActivityStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return CarePlanActivityStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return CarePlanActivityStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CarePlanActivityStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::CarePlanActivityStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::CarePlanActivityStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.CarePlanActivityStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CarePlanIntentCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.CarePlanIntentCode) */ {
 public:
  CarePlanIntentCode();
  virtual ~CarePlanIntentCode();

  CarePlanIntentCode(const CarePlanIntentCode& from);

  inline CarePlanIntentCode& operator=(const CarePlanIntentCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CarePlanIntentCode(CarePlanIntentCode&& from) noexcept
    : CarePlanIntentCode() {
    *this = ::std::move(from);
  }

  inline CarePlanIntentCode& operator=(CarePlanIntentCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CarePlanIntentCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CarePlanIntentCode* internal_default_instance() {
    return reinterpret_cast<const CarePlanIntentCode*>(
               &_CarePlanIntentCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  void Swap(CarePlanIntentCode* other);
  friend void swap(CarePlanIntentCode& a, CarePlanIntentCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CarePlanIntentCode* New() const final {
    return CreateMaybeMessage<CarePlanIntentCode>(NULL);
  }

  CarePlanIntentCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CarePlanIntentCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CarePlanIntentCode& from);
  void MergeFrom(const CarePlanIntentCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CarePlanIntentCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CarePlanIntentCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    CarePlanIntentCode_Value_INVALID_UNINITIALIZED;
  static const Value PROPOSAL =
    CarePlanIntentCode_Value_PROPOSAL;
  static const Value PLAN =
    CarePlanIntentCode_Value_PLAN;
  static const Value ORDER =
    CarePlanIntentCode_Value_ORDER;
  static const Value OPTION =
    CarePlanIntentCode_Value_OPTION;
  static inline bool Value_IsValid(int value) {
    return CarePlanIntentCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    CarePlanIntentCode_Value_Value_MIN;
  static const Value Value_MAX =
    CarePlanIntentCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    CarePlanIntentCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return CarePlanIntentCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return CarePlanIntentCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return CarePlanIntentCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CarePlanIntentCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::CarePlanIntentCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::CarePlanIntentCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.CarePlanIntentCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CarePlanStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.CarePlanStatusCode) */ {
 public:
  CarePlanStatusCode();
  virtual ~CarePlanStatusCode();

  CarePlanStatusCode(const CarePlanStatusCode& from);

  inline CarePlanStatusCode& operator=(const CarePlanStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CarePlanStatusCode(CarePlanStatusCode&& from) noexcept
    : CarePlanStatusCode() {
    *this = ::std::move(from);
  }

  inline CarePlanStatusCode& operator=(CarePlanStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CarePlanStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CarePlanStatusCode* internal_default_instance() {
    return reinterpret_cast<const CarePlanStatusCode*>(
               &_CarePlanStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  void Swap(CarePlanStatusCode* other);
  friend void swap(CarePlanStatusCode& a, CarePlanStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CarePlanStatusCode* New() const final {
    return CreateMaybeMessage<CarePlanStatusCode>(NULL);
  }

  CarePlanStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CarePlanStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CarePlanStatusCode& from);
  void MergeFrom(const CarePlanStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CarePlanStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CarePlanStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    CarePlanStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value DRAFT =
    CarePlanStatusCode_Value_DRAFT;
  static const Value ACTIVE =
    CarePlanStatusCode_Value_ACTIVE;
  static const Value SUSPENDED =
    CarePlanStatusCode_Value_SUSPENDED;
  static const Value COMPLETED =
    CarePlanStatusCode_Value_COMPLETED;
  static const Value ENTERED_IN_ERROR =
    CarePlanStatusCode_Value_ENTERED_IN_ERROR;
  static const Value CANCELLED =
    CarePlanStatusCode_Value_CANCELLED;
  static const Value UNKNOWN =
    CarePlanStatusCode_Value_UNKNOWN;
  static inline bool Value_IsValid(int value) {
    return CarePlanStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    CarePlanStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    CarePlanStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    CarePlanStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return CarePlanStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return CarePlanStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return CarePlanStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CarePlanStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::CarePlanStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::CarePlanStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.CarePlanStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CareTeamCategoryCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.CareTeamCategoryCode) */ {
 public:
  CareTeamCategoryCode();
  virtual ~CareTeamCategoryCode();

  CareTeamCategoryCode(const CareTeamCategoryCode& from);

  inline CareTeamCategoryCode& operator=(const CareTeamCategoryCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CareTeamCategoryCode(CareTeamCategoryCode&& from) noexcept
    : CareTeamCategoryCode() {
    *this = ::std::move(from);
  }

  inline CareTeamCategoryCode& operator=(CareTeamCategoryCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CareTeamCategoryCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CareTeamCategoryCode* internal_default_instance() {
    return reinterpret_cast<const CareTeamCategoryCode*>(
               &_CareTeamCategoryCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  void Swap(CareTeamCategoryCode* other);
  friend void swap(CareTeamCategoryCode& a, CareTeamCategoryCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CareTeamCategoryCode* New() const final {
    return CreateMaybeMessage<CareTeamCategoryCode>(NULL);
  }

  CareTeamCategoryCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CareTeamCategoryCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CareTeamCategoryCode& from);
  void MergeFrom(const CareTeamCategoryCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CareTeamCategoryCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CareTeamCategoryCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    CareTeamCategoryCode_Value_INVALID_UNINITIALIZED;
  static const Value EVENT =
    CareTeamCategoryCode_Value_EVENT;
  static const Value ENCOUNTER =
    CareTeamCategoryCode_Value_ENCOUNTER;
  static const Value EPISODE =
    CareTeamCategoryCode_Value_EPISODE;
  static const Value LONGITUDINAL =
    CareTeamCategoryCode_Value_LONGITUDINAL;
  static const Value CONDITION =
    CareTeamCategoryCode_Value_CONDITION;
  static const Value CLINICAL_RESEARCH =
    CareTeamCategoryCode_Value_CLINICAL_RESEARCH;
  static inline bool Value_IsValid(int value) {
    return CareTeamCategoryCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    CareTeamCategoryCode_Value_Value_MIN;
  static const Value Value_MAX =
    CareTeamCategoryCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    CareTeamCategoryCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return CareTeamCategoryCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return CareTeamCategoryCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return CareTeamCategoryCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CareTeamCategoryCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::CareTeamCategoryCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::CareTeamCategoryCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.CareTeamCategoryCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CareTeamStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.CareTeamStatusCode) */ {
 public:
  CareTeamStatusCode();
  virtual ~CareTeamStatusCode();

  CareTeamStatusCode(const CareTeamStatusCode& from);

  inline CareTeamStatusCode& operator=(const CareTeamStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CareTeamStatusCode(CareTeamStatusCode&& from) noexcept
    : CareTeamStatusCode() {
    *this = ::std::move(from);
  }

  inline CareTeamStatusCode& operator=(CareTeamStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CareTeamStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CareTeamStatusCode* internal_default_instance() {
    return reinterpret_cast<const CareTeamStatusCode*>(
               &_CareTeamStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  void Swap(CareTeamStatusCode* other);
  friend void swap(CareTeamStatusCode& a, CareTeamStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CareTeamStatusCode* New() const final {
    return CreateMaybeMessage<CareTeamStatusCode>(NULL);
  }

  CareTeamStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CareTeamStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CareTeamStatusCode& from);
  void MergeFrom(const CareTeamStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CareTeamStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CareTeamStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    CareTeamStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value PROPOSED =
    CareTeamStatusCode_Value_PROPOSED;
  static const Value ACTIVE =
    CareTeamStatusCode_Value_ACTIVE;
  static const Value SUSPENDED =
    CareTeamStatusCode_Value_SUSPENDED;
  static const Value INACTIVE =
    CareTeamStatusCode_Value_INACTIVE;
  static const Value ENTERED_IN_ERROR =
    CareTeamStatusCode_Value_ENTERED_IN_ERROR;
  static inline bool Value_IsValid(int value) {
    return CareTeamStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    CareTeamStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    CareTeamStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    CareTeamStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return CareTeamStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return CareTeamStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return CareTeamStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CareTeamStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::CareTeamStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::CareTeamStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.CareTeamStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChargeItemStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ChargeItemStatusCode) */ {
 public:
  ChargeItemStatusCode();
  virtual ~ChargeItemStatusCode();

  ChargeItemStatusCode(const ChargeItemStatusCode& from);

  inline ChargeItemStatusCode& operator=(const ChargeItemStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChargeItemStatusCode(ChargeItemStatusCode&& from) noexcept
    : ChargeItemStatusCode() {
    *this = ::std::move(from);
  }

  inline ChargeItemStatusCode& operator=(ChargeItemStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChargeItemStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChargeItemStatusCode* internal_default_instance() {
    return reinterpret_cast<const ChargeItemStatusCode*>(
               &_ChargeItemStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  void Swap(ChargeItemStatusCode* other);
  friend void swap(ChargeItemStatusCode& a, ChargeItemStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChargeItemStatusCode* New() const final {
    return CreateMaybeMessage<ChargeItemStatusCode>(NULL);
  }

  ChargeItemStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ChargeItemStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ChargeItemStatusCode& from);
  void MergeFrom(const ChargeItemStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChargeItemStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ChargeItemStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ChargeItemStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value PLANNED =
    ChargeItemStatusCode_Value_PLANNED;
  static const Value BILLABLE =
    ChargeItemStatusCode_Value_BILLABLE;
  static const Value NOT_BILLABLE =
    ChargeItemStatusCode_Value_NOT_BILLABLE;
  static const Value ABORTED =
    ChargeItemStatusCode_Value_ABORTED;
  static const Value BILLED =
    ChargeItemStatusCode_Value_BILLED;
  static const Value ENTERED_IN_ERROR =
    ChargeItemStatusCode_Value_ENTERED_IN_ERROR;
  static const Value UNKNOWN =
    ChargeItemStatusCode_Value_UNKNOWN;
  static inline bool Value_IsValid(int value) {
    return ChargeItemStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ChargeItemStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    ChargeItemStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ChargeItemStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ChargeItemStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ChargeItemStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ChargeItemStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ChargeItemStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ChargeItemStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ChargeItemStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ChargeItemStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChoiceListOrientationCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ChoiceListOrientationCode) */ {
 public:
  ChoiceListOrientationCode();
  virtual ~ChoiceListOrientationCode();

  ChoiceListOrientationCode(const ChoiceListOrientationCode& from);

  inline ChoiceListOrientationCode& operator=(const ChoiceListOrientationCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChoiceListOrientationCode(ChoiceListOrientationCode&& from) noexcept
    : ChoiceListOrientationCode() {
    *this = ::std::move(from);
  }

  inline ChoiceListOrientationCode& operator=(ChoiceListOrientationCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChoiceListOrientationCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChoiceListOrientationCode* internal_default_instance() {
    return reinterpret_cast<const ChoiceListOrientationCode*>(
               &_ChoiceListOrientationCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  void Swap(ChoiceListOrientationCode* other);
  friend void swap(ChoiceListOrientationCode& a, ChoiceListOrientationCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChoiceListOrientationCode* New() const final {
    return CreateMaybeMessage<ChoiceListOrientationCode>(NULL);
  }

  ChoiceListOrientationCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ChoiceListOrientationCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ChoiceListOrientationCode& from);
  void MergeFrom(const ChoiceListOrientationCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChoiceListOrientationCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ChoiceListOrientationCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ChoiceListOrientationCode_Value_INVALID_UNINITIALIZED;
  static const Value HORIZONTAL =
    ChoiceListOrientationCode_Value_HORIZONTAL;
  static const Value VERTICAL =
    ChoiceListOrientationCode_Value_VERTICAL;
  static inline bool Value_IsValid(int value) {
    return ChoiceListOrientationCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ChoiceListOrientationCode_Value_Value_MIN;
  static const Value Value_MAX =
    ChoiceListOrientationCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ChoiceListOrientationCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ChoiceListOrientationCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ChoiceListOrientationCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ChoiceListOrientationCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ChoiceListOrientationCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ChoiceListOrientationCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ChoiceListOrientationCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ChoiceListOrientationCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UseCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.UseCode) */ {
 public:
  UseCode();
  virtual ~UseCode();

  UseCode(const UseCode& from);

  inline UseCode& operator=(const UseCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UseCode(UseCode&& from) noexcept
    : UseCode() {
    *this = ::std::move(from);
  }

  inline UseCode& operator=(UseCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UseCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UseCode* internal_default_instance() {
    return reinterpret_cast<const UseCode*>(
               &_UseCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  void Swap(UseCode* other);
  friend void swap(UseCode& a, UseCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UseCode* New() const final {
    return CreateMaybeMessage<UseCode>(NULL);
  }

  UseCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UseCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UseCode& from);
  void MergeFrom(const UseCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UseCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UseCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    UseCode_Value_INVALID_UNINITIALIZED;
  static const Value COMPLETE =
    UseCode_Value_COMPLETE;
  static const Value PROPOSED =
    UseCode_Value_PROPOSED;
  static const Value EXPLORATORY =
    UseCode_Value_EXPLORATORY;
  static const Value OTHER =
    UseCode_Value_OTHER;
  static inline bool Value_IsValid(int value) {
    return UseCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    UseCode_Value_Value_MIN;
  static const Value Value_MAX =
    UseCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    UseCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return UseCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return UseCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return UseCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.UseCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::UseCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::UseCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.UseCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClassificationOrContextCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ClassificationOrContextCode) */ {
 public:
  ClassificationOrContextCode();
  virtual ~ClassificationOrContextCode();

  ClassificationOrContextCode(const ClassificationOrContextCode& from);

  inline ClassificationOrContextCode& operator=(const ClassificationOrContextCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClassificationOrContextCode(ClassificationOrContextCode&& from) noexcept
    : ClassificationOrContextCode() {
    *this = ::std::move(from);
  }

  inline ClassificationOrContextCode& operator=(ClassificationOrContextCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClassificationOrContextCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClassificationOrContextCode* internal_default_instance() {
    return reinterpret_cast<const ClassificationOrContextCode*>(
               &_ClassificationOrContextCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  void Swap(ClassificationOrContextCode* other);
  friend void swap(ClassificationOrContextCode& a, ClassificationOrContextCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClassificationOrContextCode* New() const final {
    return CreateMaybeMessage<ClassificationOrContextCode>(NULL);
  }

  ClassificationOrContextCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ClassificationOrContextCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ClassificationOrContextCode& from);
  void MergeFrom(const ClassificationOrContextCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClassificationOrContextCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ClassificationOrContextCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ClassificationOrContextCode_Value_INVALID_UNINITIALIZED;
  static const Value CLASSIFICATION =
    ClassificationOrContextCode_Value_CLASSIFICATION;
  static const Value CONTEXT =
    ClassificationOrContextCode_Value_CONTEXT;
  static inline bool Value_IsValid(int value) {
    return ClassificationOrContextCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ClassificationOrContextCode_Value_Value_MIN;
  static const Value Value_MAX =
    ClassificationOrContextCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ClassificationOrContextCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ClassificationOrContextCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ClassificationOrContextCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ClassificationOrContextCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ClassificationOrContextCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ClassificationOrContextCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ClassificationOrContextCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ClassificationOrContextCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClinicalImpressionStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ClinicalImpressionStatusCode) */ {
 public:
  ClinicalImpressionStatusCode();
  virtual ~ClinicalImpressionStatusCode();

  ClinicalImpressionStatusCode(const ClinicalImpressionStatusCode& from);

  inline ClinicalImpressionStatusCode& operator=(const ClinicalImpressionStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClinicalImpressionStatusCode(ClinicalImpressionStatusCode&& from) noexcept
    : ClinicalImpressionStatusCode() {
    *this = ::std::move(from);
  }

  inline ClinicalImpressionStatusCode& operator=(ClinicalImpressionStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClinicalImpressionStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClinicalImpressionStatusCode* internal_default_instance() {
    return reinterpret_cast<const ClinicalImpressionStatusCode*>(
               &_ClinicalImpressionStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  void Swap(ClinicalImpressionStatusCode* other);
  friend void swap(ClinicalImpressionStatusCode& a, ClinicalImpressionStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClinicalImpressionStatusCode* New() const final {
    return CreateMaybeMessage<ClinicalImpressionStatusCode>(NULL);
  }

  ClinicalImpressionStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ClinicalImpressionStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ClinicalImpressionStatusCode& from);
  void MergeFrom(const ClinicalImpressionStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClinicalImpressionStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ClinicalImpressionStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ClinicalImpressionStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value DRAFT =
    ClinicalImpressionStatusCode_Value_DRAFT;
  static const Value COMPLETED =
    ClinicalImpressionStatusCode_Value_COMPLETED;
  static const Value ENTERED_IN_ERROR =
    ClinicalImpressionStatusCode_Value_ENTERED_IN_ERROR;
  static inline bool Value_IsValid(int value) {
    return ClinicalImpressionStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ClinicalImpressionStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    ClinicalImpressionStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ClinicalImpressionStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ClinicalImpressionStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ClinicalImpressionStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ClinicalImpressionStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ClinicalImpressionStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ClinicalImpressionStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ClinicalImpressionStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ClinicalImpressionStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CodeSystemContentModeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.CodeSystemContentModeCode) */ {
 public:
  CodeSystemContentModeCode();
  virtual ~CodeSystemContentModeCode();

  CodeSystemContentModeCode(const CodeSystemContentModeCode& from);

  inline CodeSystemContentModeCode& operator=(const CodeSystemContentModeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CodeSystemContentModeCode(CodeSystemContentModeCode&& from) noexcept
    : CodeSystemContentModeCode() {
    *this = ::std::move(from);
  }

  inline CodeSystemContentModeCode& operator=(CodeSystemContentModeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CodeSystemContentModeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CodeSystemContentModeCode* internal_default_instance() {
    return reinterpret_cast<const CodeSystemContentModeCode*>(
               &_CodeSystemContentModeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  void Swap(CodeSystemContentModeCode* other);
  friend void swap(CodeSystemContentModeCode& a, CodeSystemContentModeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CodeSystemContentModeCode* New() const final {
    return CreateMaybeMessage<CodeSystemContentModeCode>(NULL);
  }

  CodeSystemContentModeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CodeSystemContentModeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CodeSystemContentModeCode& from);
  void MergeFrom(const CodeSystemContentModeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CodeSystemContentModeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CodeSystemContentModeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    CodeSystemContentModeCode_Value_INVALID_UNINITIALIZED;
  static const Value NOT_PRESENT =
    CodeSystemContentModeCode_Value_NOT_PRESENT;
  static const Value EXAMPLE =
    CodeSystemContentModeCode_Value_EXAMPLE;
  static const Value FRAGMENT =
    CodeSystemContentModeCode_Value_FRAGMENT;
  static const Value COMPLETE =
    CodeSystemContentModeCode_Value_COMPLETE;
  static inline bool Value_IsValid(int value) {
    return CodeSystemContentModeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    CodeSystemContentModeCode_Value_Value_MIN;
  static const Value Value_MAX =
    CodeSystemContentModeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    CodeSystemContentModeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return CodeSystemContentModeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return CodeSystemContentModeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return CodeSystemContentModeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CodeSystemContentModeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::CodeSystemContentModeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::CodeSystemContentModeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.CodeSystemContentModeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CodeSystemHierarchyMeaningCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.CodeSystemHierarchyMeaningCode) */ {
 public:
  CodeSystemHierarchyMeaningCode();
  virtual ~CodeSystemHierarchyMeaningCode();

  CodeSystemHierarchyMeaningCode(const CodeSystemHierarchyMeaningCode& from);

  inline CodeSystemHierarchyMeaningCode& operator=(const CodeSystemHierarchyMeaningCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CodeSystemHierarchyMeaningCode(CodeSystemHierarchyMeaningCode&& from) noexcept
    : CodeSystemHierarchyMeaningCode() {
    *this = ::std::move(from);
  }

  inline CodeSystemHierarchyMeaningCode& operator=(CodeSystemHierarchyMeaningCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CodeSystemHierarchyMeaningCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CodeSystemHierarchyMeaningCode* internal_default_instance() {
    return reinterpret_cast<const CodeSystemHierarchyMeaningCode*>(
               &_CodeSystemHierarchyMeaningCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  void Swap(CodeSystemHierarchyMeaningCode* other);
  friend void swap(CodeSystemHierarchyMeaningCode& a, CodeSystemHierarchyMeaningCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CodeSystemHierarchyMeaningCode* New() const final {
    return CreateMaybeMessage<CodeSystemHierarchyMeaningCode>(NULL);
  }

  CodeSystemHierarchyMeaningCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CodeSystemHierarchyMeaningCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CodeSystemHierarchyMeaningCode& from);
  void MergeFrom(const CodeSystemHierarchyMeaningCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CodeSystemHierarchyMeaningCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CodeSystemHierarchyMeaningCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    CodeSystemHierarchyMeaningCode_Value_INVALID_UNINITIALIZED;
  static const Value GROUPED_BY =
    CodeSystemHierarchyMeaningCode_Value_GROUPED_BY;
  static const Value IS_A =
    CodeSystemHierarchyMeaningCode_Value_IS_A;
  static const Value PART_OF =
    CodeSystemHierarchyMeaningCode_Value_PART_OF;
  static const Value CLASSIFIED_WITH =
    CodeSystemHierarchyMeaningCode_Value_CLASSIFIED_WITH;
  static inline bool Value_IsValid(int value) {
    return CodeSystemHierarchyMeaningCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    CodeSystemHierarchyMeaningCode_Value_Value_MIN;
  static const Value Value_MAX =
    CodeSystemHierarchyMeaningCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    CodeSystemHierarchyMeaningCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return CodeSystemHierarchyMeaningCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return CodeSystemHierarchyMeaningCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return CodeSystemHierarchyMeaningCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CodeSystemHierarchyMeaningCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::CodeSystemHierarchyMeaningCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::CodeSystemHierarchyMeaningCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.CodeSystemHierarchyMeaningCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CommonTagsCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.CommonTagsCode) */ {
 public:
  CommonTagsCode();
  virtual ~CommonTagsCode();

  CommonTagsCode(const CommonTagsCode& from);

  inline CommonTagsCode& operator=(const CommonTagsCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommonTagsCode(CommonTagsCode&& from) noexcept
    : CommonTagsCode() {
    *this = ::std::move(from);
  }

  inline CommonTagsCode& operator=(CommonTagsCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CommonTagsCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommonTagsCode* internal_default_instance() {
    return reinterpret_cast<const CommonTagsCode*>(
               &_CommonTagsCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  void Swap(CommonTagsCode* other);
  friend void swap(CommonTagsCode& a, CommonTagsCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommonTagsCode* New() const final {
    return CreateMaybeMessage<CommonTagsCode>(NULL);
  }

  CommonTagsCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CommonTagsCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CommonTagsCode& from);
  void MergeFrom(const CommonTagsCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommonTagsCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CommonTagsCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    CommonTagsCode_Value_INVALID_UNINITIALIZED;
  static const Value ACTIONABLE =
    CommonTagsCode_Value_ACTIONABLE;
  static inline bool Value_IsValid(int value) {
    return CommonTagsCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    CommonTagsCode_Value_Value_MIN;
  static const Value Value_MAX =
    CommonTagsCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    CommonTagsCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return CommonTagsCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return CommonTagsCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return CommonTagsCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CommonTagsCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::CommonTagsCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::CommonTagsCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.CommonTagsCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CommunicationCategoryCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.CommunicationCategoryCode) */ {
 public:
  CommunicationCategoryCode();
  virtual ~CommunicationCategoryCode();

  CommunicationCategoryCode(const CommunicationCategoryCode& from);

  inline CommunicationCategoryCode& operator=(const CommunicationCategoryCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommunicationCategoryCode(CommunicationCategoryCode&& from) noexcept
    : CommunicationCategoryCode() {
    *this = ::std::move(from);
  }

  inline CommunicationCategoryCode& operator=(CommunicationCategoryCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CommunicationCategoryCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommunicationCategoryCode* internal_default_instance() {
    return reinterpret_cast<const CommunicationCategoryCode*>(
               &_CommunicationCategoryCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  void Swap(CommunicationCategoryCode* other);
  friend void swap(CommunicationCategoryCode& a, CommunicationCategoryCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommunicationCategoryCode* New() const final {
    return CreateMaybeMessage<CommunicationCategoryCode>(NULL);
  }

  CommunicationCategoryCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CommunicationCategoryCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CommunicationCategoryCode& from);
  void MergeFrom(const CommunicationCategoryCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommunicationCategoryCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CommunicationCategoryCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    CommunicationCategoryCode_Value_INVALID_UNINITIALIZED;
  static const Value ALERT =
    CommunicationCategoryCode_Value_ALERT;
  static const Value NOTIFICATION =
    CommunicationCategoryCode_Value_NOTIFICATION;
  static const Value REMINDER =
    CommunicationCategoryCode_Value_REMINDER;
  static const Value INSTRUCTION =
    CommunicationCategoryCode_Value_INSTRUCTION;
  static inline bool Value_IsValid(int value) {
    return CommunicationCategoryCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    CommunicationCategoryCode_Value_Value_MIN;
  static const Value Value_MAX =
    CommunicationCategoryCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    CommunicationCategoryCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return CommunicationCategoryCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return CommunicationCategoryCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return CommunicationCategoryCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CommunicationCategoryCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::CommunicationCategoryCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::CommunicationCategoryCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.CommunicationCategoryCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CommunicationNotDoneReasonCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.CommunicationNotDoneReasonCode) */ {
 public:
  CommunicationNotDoneReasonCode();
  virtual ~CommunicationNotDoneReasonCode();

  CommunicationNotDoneReasonCode(const CommunicationNotDoneReasonCode& from);

  inline CommunicationNotDoneReasonCode& operator=(const CommunicationNotDoneReasonCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommunicationNotDoneReasonCode(CommunicationNotDoneReasonCode&& from) noexcept
    : CommunicationNotDoneReasonCode() {
    *this = ::std::move(from);
  }

  inline CommunicationNotDoneReasonCode& operator=(CommunicationNotDoneReasonCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CommunicationNotDoneReasonCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommunicationNotDoneReasonCode* internal_default_instance() {
    return reinterpret_cast<const CommunicationNotDoneReasonCode*>(
               &_CommunicationNotDoneReasonCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  void Swap(CommunicationNotDoneReasonCode* other);
  friend void swap(CommunicationNotDoneReasonCode& a, CommunicationNotDoneReasonCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommunicationNotDoneReasonCode* New() const final {
    return CreateMaybeMessage<CommunicationNotDoneReasonCode>(NULL);
  }

  CommunicationNotDoneReasonCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CommunicationNotDoneReasonCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CommunicationNotDoneReasonCode& from);
  void MergeFrom(const CommunicationNotDoneReasonCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommunicationNotDoneReasonCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CommunicationNotDoneReasonCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    CommunicationNotDoneReasonCode_Value_INVALID_UNINITIALIZED;
  static const Value UNKNOWN =
    CommunicationNotDoneReasonCode_Value_UNKNOWN;
  static const Value SYSTEM_ERROR =
    CommunicationNotDoneReasonCode_Value_SYSTEM_ERROR;
  static const Value INVALID_PHONE_NUMBER =
    CommunicationNotDoneReasonCode_Value_INVALID_PHONE_NUMBER;
  static const Value RECIPIENT_UNAVAILABLE =
    CommunicationNotDoneReasonCode_Value_RECIPIENT_UNAVAILABLE;
  static const Value FAMILY_OBJECTION =
    CommunicationNotDoneReasonCode_Value_FAMILY_OBJECTION;
  static const Value PATIENT_OBJECTION =
    CommunicationNotDoneReasonCode_Value_PATIENT_OBJECTION;
  static inline bool Value_IsValid(int value) {
    return CommunicationNotDoneReasonCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    CommunicationNotDoneReasonCode_Value_Value_MIN;
  static const Value Value_MAX =
    CommunicationNotDoneReasonCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    CommunicationNotDoneReasonCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return CommunicationNotDoneReasonCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return CommunicationNotDoneReasonCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return CommunicationNotDoneReasonCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CommunicationNotDoneReasonCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::CommunicationNotDoneReasonCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::CommunicationNotDoneReasonCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.CommunicationNotDoneReasonCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CompartmentTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.CompartmentTypeCode) */ {
 public:
  CompartmentTypeCode();
  virtual ~CompartmentTypeCode();

  CompartmentTypeCode(const CompartmentTypeCode& from);

  inline CompartmentTypeCode& operator=(const CompartmentTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CompartmentTypeCode(CompartmentTypeCode&& from) noexcept
    : CompartmentTypeCode() {
    *this = ::std::move(from);
  }

  inline CompartmentTypeCode& operator=(CompartmentTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CompartmentTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CompartmentTypeCode* internal_default_instance() {
    return reinterpret_cast<const CompartmentTypeCode*>(
               &_CompartmentTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  void Swap(CompartmentTypeCode* other);
  friend void swap(CompartmentTypeCode& a, CompartmentTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CompartmentTypeCode* New() const final {
    return CreateMaybeMessage<CompartmentTypeCode>(NULL);
  }

  CompartmentTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CompartmentTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CompartmentTypeCode& from);
  void MergeFrom(const CompartmentTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CompartmentTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CompartmentTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    CompartmentTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value PATIENT =
    CompartmentTypeCode_Value_PATIENT;
  static const Value ENCOUNTER =
    CompartmentTypeCode_Value_ENCOUNTER;
  static const Value RELATEDPERSON =
    CompartmentTypeCode_Value_RELATEDPERSON;
  static const Value PRACTITIONER =
    CompartmentTypeCode_Value_PRACTITIONER;
  static const Value DEVICE =
    CompartmentTypeCode_Value_DEVICE;
  static inline bool Value_IsValid(int value) {
    return CompartmentTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    CompartmentTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    CompartmentTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    CompartmentTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return CompartmentTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return CompartmentTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return CompartmentTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CompartmentTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::CompartmentTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::CompartmentTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.CompartmentTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CompositeMeasureScoringCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.CompositeMeasureScoringCode) */ {
 public:
  CompositeMeasureScoringCode();
  virtual ~CompositeMeasureScoringCode();

  CompositeMeasureScoringCode(const CompositeMeasureScoringCode& from);

  inline CompositeMeasureScoringCode& operator=(const CompositeMeasureScoringCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CompositeMeasureScoringCode(CompositeMeasureScoringCode&& from) noexcept
    : CompositeMeasureScoringCode() {
    *this = ::std::move(from);
  }

  inline CompositeMeasureScoringCode& operator=(CompositeMeasureScoringCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CompositeMeasureScoringCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CompositeMeasureScoringCode* internal_default_instance() {
    return reinterpret_cast<const CompositeMeasureScoringCode*>(
               &_CompositeMeasureScoringCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  void Swap(CompositeMeasureScoringCode* other);
  friend void swap(CompositeMeasureScoringCode& a, CompositeMeasureScoringCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CompositeMeasureScoringCode* New() const final {
    return CreateMaybeMessage<CompositeMeasureScoringCode>(NULL);
  }

  CompositeMeasureScoringCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CompositeMeasureScoringCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CompositeMeasureScoringCode& from);
  void MergeFrom(const CompositeMeasureScoringCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CompositeMeasureScoringCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CompositeMeasureScoringCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    CompositeMeasureScoringCode_Value_INVALID_UNINITIALIZED;
  static const Value OPPORTUNITY =
    CompositeMeasureScoringCode_Value_OPPORTUNITY;
  static const Value ALL_OR_NOTHING =
    CompositeMeasureScoringCode_Value_ALL_OR_NOTHING;
  static const Value LINEAR =
    CompositeMeasureScoringCode_Value_LINEAR;
  static const Value WEIGHTED =
    CompositeMeasureScoringCode_Value_WEIGHTED;
  static inline bool Value_IsValid(int value) {
    return CompositeMeasureScoringCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    CompositeMeasureScoringCode_Value_Value_MIN;
  static const Value Value_MAX =
    CompositeMeasureScoringCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    CompositeMeasureScoringCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return CompositeMeasureScoringCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return CompositeMeasureScoringCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return CompositeMeasureScoringCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CompositeMeasureScoringCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::CompositeMeasureScoringCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::CompositeMeasureScoringCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.CompositeMeasureScoringCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CompositionAttestationModeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.CompositionAttestationModeCode) */ {
 public:
  CompositionAttestationModeCode();
  virtual ~CompositionAttestationModeCode();

  CompositionAttestationModeCode(const CompositionAttestationModeCode& from);

  inline CompositionAttestationModeCode& operator=(const CompositionAttestationModeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CompositionAttestationModeCode(CompositionAttestationModeCode&& from) noexcept
    : CompositionAttestationModeCode() {
    *this = ::std::move(from);
  }

  inline CompositionAttestationModeCode& operator=(CompositionAttestationModeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CompositionAttestationModeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CompositionAttestationModeCode* internal_default_instance() {
    return reinterpret_cast<const CompositionAttestationModeCode*>(
               &_CompositionAttestationModeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  void Swap(CompositionAttestationModeCode* other);
  friend void swap(CompositionAttestationModeCode& a, CompositionAttestationModeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CompositionAttestationModeCode* New() const final {
    return CreateMaybeMessage<CompositionAttestationModeCode>(NULL);
  }

  CompositionAttestationModeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CompositionAttestationModeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CompositionAttestationModeCode& from);
  void MergeFrom(const CompositionAttestationModeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CompositionAttestationModeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CompositionAttestationModeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    CompositionAttestationModeCode_Value_INVALID_UNINITIALIZED;
  static const Value PERSONAL =
    CompositionAttestationModeCode_Value_PERSONAL;
  static const Value PROFESSIONAL =
    CompositionAttestationModeCode_Value_PROFESSIONAL;
  static const Value LEGAL =
    CompositionAttestationModeCode_Value_LEGAL;
  static const Value OFFICIAL =
    CompositionAttestationModeCode_Value_OFFICIAL;
  static inline bool Value_IsValid(int value) {
    return CompositionAttestationModeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    CompositionAttestationModeCode_Value_Value_MIN;
  static const Value Value_MAX =
    CompositionAttestationModeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    CompositionAttestationModeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return CompositionAttestationModeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return CompositionAttestationModeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return CompositionAttestationModeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CompositionAttestationModeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::CompositionAttestationModeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::CompositionAttestationModeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.CompositionAttestationModeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CompositionStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.CompositionStatusCode) */ {
 public:
  CompositionStatusCode();
  virtual ~CompositionStatusCode();

  CompositionStatusCode(const CompositionStatusCode& from);

  inline CompositionStatusCode& operator=(const CompositionStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CompositionStatusCode(CompositionStatusCode&& from) noexcept
    : CompositionStatusCode() {
    *this = ::std::move(from);
  }

  inline CompositionStatusCode& operator=(CompositionStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CompositionStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CompositionStatusCode* internal_default_instance() {
    return reinterpret_cast<const CompositionStatusCode*>(
               &_CompositionStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  void Swap(CompositionStatusCode* other);
  friend void swap(CompositionStatusCode& a, CompositionStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CompositionStatusCode* New() const final {
    return CreateMaybeMessage<CompositionStatusCode>(NULL);
  }

  CompositionStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CompositionStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CompositionStatusCode& from);
  void MergeFrom(const CompositionStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CompositionStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CompositionStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    CompositionStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value PRELIMINARY =
    CompositionStatusCode_Value_PRELIMINARY;
  static const Value FINAL =
    CompositionStatusCode_Value_FINAL;
  static const Value AMENDED =
    CompositionStatusCode_Value_AMENDED;
  static const Value ENTERED_IN_ERROR =
    CompositionStatusCode_Value_ENTERED_IN_ERROR;
  static inline bool Value_IsValid(int value) {
    return CompositionStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    CompositionStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    CompositionStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    CompositionStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return CompositionStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return CompositionStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return CompositionStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CompositionStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::CompositionStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::CompositionStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.CompositionStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConceptMapEquivalenceCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ConceptMapEquivalenceCode) */ {
 public:
  ConceptMapEquivalenceCode();
  virtual ~ConceptMapEquivalenceCode();

  ConceptMapEquivalenceCode(const ConceptMapEquivalenceCode& from);

  inline ConceptMapEquivalenceCode& operator=(const ConceptMapEquivalenceCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConceptMapEquivalenceCode(ConceptMapEquivalenceCode&& from) noexcept
    : ConceptMapEquivalenceCode() {
    *this = ::std::move(from);
  }

  inline ConceptMapEquivalenceCode& operator=(ConceptMapEquivalenceCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConceptMapEquivalenceCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConceptMapEquivalenceCode* internal_default_instance() {
    return reinterpret_cast<const ConceptMapEquivalenceCode*>(
               &_ConceptMapEquivalenceCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  void Swap(ConceptMapEquivalenceCode* other);
  friend void swap(ConceptMapEquivalenceCode& a, ConceptMapEquivalenceCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConceptMapEquivalenceCode* New() const final {
    return CreateMaybeMessage<ConceptMapEquivalenceCode>(NULL);
  }

  ConceptMapEquivalenceCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConceptMapEquivalenceCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConceptMapEquivalenceCode& from);
  void MergeFrom(const ConceptMapEquivalenceCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConceptMapEquivalenceCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ConceptMapEquivalenceCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ConceptMapEquivalenceCode_Value_INVALID_UNINITIALIZED;
  static const Value RELATEDTO =
    ConceptMapEquivalenceCode_Value_RELATEDTO;
  static const Value EQUIVALENT =
    ConceptMapEquivalenceCode_Value_EQUIVALENT;
  static const Value EQUAL =
    ConceptMapEquivalenceCode_Value_EQUAL;
  static const Value WIDER =
    ConceptMapEquivalenceCode_Value_WIDER;
  static const Value SUBSUMES =
    ConceptMapEquivalenceCode_Value_SUBSUMES;
  static const Value NARROWER =
    ConceptMapEquivalenceCode_Value_NARROWER;
  static const Value SPECIALIZES =
    ConceptMapEquivalenceCode_Value_SPECIALIZES;
  static const Value INEXACT =
    ConceptMapEquivalenceCode_Value_INEXACT;
  static const Value UNMATCHED =
    ConceptMapEquivalenceCode_Value_UNMATCHED;
  static const Value DISJOINT =
    ConceptMapEquivalenceCode_Value_DISJOINT;
  static inline bool Value_IsValid(int value) {
    return ConceptMapEquivalenceCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ConceptMapEquivalenceCode_Value_Value_MIN;
  static const Value Value_MAX =
    ConceptMapEquivalenceCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ConceptMapEquivalenceCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ConceptMapEquivalenceCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ConceptMapEquivalenceCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ConceptMapEquivalenceCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ConceptMapEquivalenceCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ConceptMapEquivalenceCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ConceptMapEquivalenceCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ConceptMapEquivalenceCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConceptMapGroupUnmappedModeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ConceptMapGroupUnmappedModeCode) */ {
 public:
  ConceptMapGroupUnmappedModeCode();
  virtual ~ConceptMapGroupUnmappedModeCode();

  ConceptMapGroupUnmappedModeCode(const ConceptMapGroupUnmappedModeCode& from);

  inline ConceptMapGroupUnmappedModeCode& operator=(const ConceptMapGroupUnmappedModeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConceptMapGroupUnmappedModeCode(ConceptMapGroupUnmappedModeCode&& from) noexcept
    : ConceptMapGroupUnmappedModeCode() {
    *this = ::std::move(from);
  }

  inline ConceptMapGroupUnmappedModeCode& operator=(ConceptMapGroupUnmappedModeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConceptMapGroupUnmappedModeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConceptMapGroupUnmappedModeCode* internal_default_instance() {
    return reinterpret_cast<const ConceptMapGroupUnmappedModeCode*>(
               &_ConceptMapGroupUnmappedModeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  void Swap(ConceptMapGroupUnmappedModeCode* other);
  friend void swap(ConceptMapGroupUnmappedModeCode& a, ConceptMapGroupUnmappedModeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConceptMapGroupUnmappedModeCode* New() const final {
    return CreateMaybeMessage<ConceptMapGroupUnmappedModeCode>(NULL);
  }

  ConceptMapGroupUnmappedModeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConceptMapGroupUnmappedModeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConceptMapGroupUnmappedModeCode& from);
  void MergeFrom(const ConceptMapGroupUnmappedModeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConceptMapGroupUnmappedModeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ConceptMapGroupUnmappedModeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ConceptMapGroupUnmappedModeCode_Value_INVALID_UNINITIALIZED;
  static const Value PROVIDED =
    ConceptMapGroupUnmappedModeCode_Value_PROVIDED;
  static const Value FIXED =
    ConceptMapGroupUnmappedModeCode_Value_FIXED;
  static const Value OTHER_MAP =
    ConceptMapGroupUnmappedModeCode_Value_OTHER_MAP;
  static inline bool Value_IsValid(int value) {
    return ConceptMapGroupUnmappedModeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ConceptMapGroupUnmappedModeCode_Value_Value_MIN;
  static const Value Value_MAX =
    ConceptMapGroupUnmappedModeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ConceptMapGroupUnmappedModeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ConceptMapGroupUnmappedModeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ConceptMapGroupUnmappedModeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ConceptMapGroupUnmappedModeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ConceptMapGroupUnmappedModeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ConceptMapGroupUnmappedModeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ConceptMapGroupUnmappedModeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ConceptMapGroupUnmappedModeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PropertyTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.PropertyTypeCode) */ {
 public:
  PropertyTypeCode();
  virtual ~PropertyTypeCode();

  PropertyTypeCode(const PropertyTypeCode& from);

  inline PropertyTypeCode& operator=(const PropertyTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PropertyTypeCode(PropertyTypeCode&& from) noexcept
    : PropertyTypeCode() {
    *this = ::std::move(from);
  }

  inline PropertyTypeCode& operator=(PropertyTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PropertyTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PropertyTypeCode* internal_default_instance() {
    return reinterpret_cast<const PropertyTypeCode*>(
               &_PropertyTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  void Swap(PropertyTypeCode* other);
  friend void swap(PropertyTypeCode& a, PropertyTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PropertyTypeCode* New() const final {
    return CreateMaybeMessage<PropertyTypeCode>(NULL);
  }

  PropertyTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PropertyTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PropertyTypeCode& from);
  void MergeFrom(const PropertyTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PropertyTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PropertyTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    PropertyTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value CODE =
    PropertyTypeCode_Value_CODE;
  static const Value CODING =
    PropertyTypeCode_Value_CODING;
  static const Value STRING =
    PropertyTypeCode_Value_STRING;
  static const Value INTEGER =
    PropertyTypeCode_Value_INTEGER;
  static const Value BOOLEAN =
    PropertyTypeCode_Value_BOOLEAN;
  static const Value DATETIME =
    PropertyTypeCode_Value_DATETIME;
  static inline bool Value_IsValid(int value) {
    return PropertyTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    PropertyTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    PropertyTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    PropertyTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return PropertyTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return PropertyTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return PropertyTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.PropertyTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::PropertyTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::PropertyTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.PropertyTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConditionalDeleteStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ConditionalDeleteStatusCode) */ {
 public:
  ConditionalDeleteStatusCode();
  virtual ~ConditionalDeleteStatusCode();

  ConditionalDeleteStatusCode(const ConditionalDeleteStatusCode& from);

  inline ConditionalDeleteStatusCode& operator=(const ConditionalDeleteStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConditionalDeleteStatusCode(ConditionalDeleteStatusCode&& from) noexcept
    : ConditionalDeleteStatusCode() {
    *this = ::std::move(from);
  }

  inline ConditionalDeleteStatusCode& operator=(ConditionalDeleteStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConditionalDeleteStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConditionalDeleteStatusCode* internal_default_instance() {
    return reinterpret_cast<const ConditionalDeleteStatusCode*>(
               &_ConditionalDeleteStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  void Swap(ConditionalDeleteStatusCode* other);
  friend void swap(ConditionalDeleteStatusCode& a, ConditionalDeleteStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConditionalDeleteStatusCode* New() const final {
    return CreateMaybeMessage<ConditionalDeleteStatusCode>(NULL);
  }

  ConditionalDeleteStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConditionalDeleteStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConditionalDeleteStatusCode& from);
  void MergeFrom(const ConditionalDeleteStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConditionalDeleteStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ConditionalDeleteStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ConditionalDeleteStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value NOT_SUPPORTED =
    ConditionalDeleteStatusCode_Value_NOT_SUPPORTED;
  static const Value SINGLE =
    ConditionalDeleteStatusCode_Value_SINGLE;
  static const Value MULTIPLE =
    ConditionalDeleteStatusCode_Value_MULTIPLE;
  static inline bool Value_IsValid(int value) {
    return ConditionalDeleteStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ConditionalDeleteStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    ConditionalDeleteStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ConditionalDeleteStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ConditionalDeleteStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ConditionalDeleteStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ConditionalDeleteStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ConditionalDeleteStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ConditionalDeleteStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ConditionalDeleteStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ConditionalDeleteStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConditionalReadStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ConditionalReadStatusCode) */ {
 public:
  ConditionalReadStatusCode();
  virtual ~ConditionalReadStatusCode();

  ConditionalReadStatusCode(const ConditionalReadStatusCode& from);

  inline ConditionalReadStatusCode& operator=(const ConditionalReadStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConditionalReadStatusCode(ConditionalReadStatusCode&& from) noexcept
    : ConditionalReadStatusCode() {
    *this = ::std::move(from);
  }

  inline ConditionalReadStatusCode& operator=(ConditionalReadStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConditionalReadStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConditionalReadStatusCode* internal_default_instance() {
    return reinterpret_cast<const ConditionalReadStatusCode*>(
               &_ConditionalReadStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  void Swap(ConditionalReadStatusCode* other);
  friend void swap(ConditionalReadStatusCode& a, ConditionalReadStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConditionalReadStatusCode* New() const final {
    return CreateMaybeMessage<ConditionalReadStatusCode>(NULL);
  }

  ConditionalReadStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConditionalReadStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConditionalReadStatusCode& from);
  void MergeFrom(const ConditionalReadStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConditionalReadStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ConditionalReadStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ConditionalReadStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value NOT_SUPPORTED =
    ConditionalReadStatusCode_Value_NOT_SUPPORTED;
  static const Value MODIFIED_SINCE =
    ConditionalReadStatusCode_Value_MODIFIED_SINCE;
  static const Value NOT_MATCH =
    ConditionalReadStatusCode_Value_NOT_MATCH;
  static const Value FULL_SUPPORT =
    ConditionalReadStatusCode_Value_FULL_SUPPORT;
  static inline bool Value_IsValid(int value) {
    return ConditionalReadStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ConditionalReadStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    ConditionalReadStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ConditionalReadStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ConditionalReadStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ConditionalReadStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ConditionalReadStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ConditionalReadStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ConditionalReadStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ConditionalReadStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ConditionalReadStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConditionCategoryCodesCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ConditionCategoryCodesCode) */ {
 public:
  ConditionCategoryCodesCode();
  virtual ~ConditionCategoryCodesCode();

  ConditionCategoryCodesCode(const ConditionCategoryCodesCode& from);

  inline ConditionCategoryCodesCode& operator=(const ConditionCategoryCodesCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConditionCategoryCodesCode(ConditionCategoryCodesCode&& from) noexcept
    : ConditionCategoryCodesCode() {
    *this = ::std::move(from);
  }

  inline ConditionCategoryCodesCode& operator=(ConditionCategoryCodesCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConditionCategoryCodesCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConditionCategoryCodesCode* internal_default_instance() {
    return reinterpret_cast<const ConditionCategoryCodesCode*>(
               &_ConditionCategoryCodesCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  void Swap(ConditionCategoryCodesCode* other);
  friend void swap(ConditionCategoryCodesCode& a, ConditionCategoryCodesCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConditionCategoryCodesCode* New() const final {
    return CreateMaybeMessage<ConditionCategoryCodesCode>(NULL);
  }

  ConditionCategoryCodesCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConditionCategoryCodesCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConditionCategoryCodesCode& from);
  void MergeFrom(const ConditionCategoryCodesCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConditionCategoryCodesCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ConditionCategoryCodesCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ConditionCategoryCodesCode_Value_INVALID_UNINITIALIZED;
  static const Value PROBLEM_LIST_ITEM =
    ConditionCategoryCodesCode_Value_PROBLEM_LIST_ITEM;
  static const Value ENCOUNTER_DIAGNOSIS =
    ConditionCategoryCodesCode_Value_ENCOUNTER_DIAGNOSIS;
  static inline bool Value_IsValid(int value) {
    return ConditionCategoryCodesCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ConditionCategoryCodesCode_Value_Value_MIN;
  static const Value Value_MAX =
    ConditionCategoryCodesCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ConditionCategoryCodesCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ConditionCategoryCodesCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ConditionCategoryCodesCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ConditionCategoryCodesCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ConditionCategoryCodesCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ConditionCategoryCodesCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ConditionCategoryCodesCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ConditionCategoryCodesCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConditionClinicalStatusCodesCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ConditionClinicalStatusCodesCode) */ {
 public:
  ConditionClinicalStatusCodesCode();
  virtual ~ConditionClinicalStatusCodesCode();

  ConditionClinicalStatusCodesCode(const ConditionClinicalStatusCodesCode& from);

  inline ConditionClinicalStatusCodesCode& operator=(const ConditionClinicalStatusCodesCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConditionClinicalStatusCodesCode(ConditionClinicalStatusCodesCode&& from) noexcept
    : ConditionClinicalStatusCodesCode() {
    *this = ::std::move(from);
  }

  inline ConditionClinicalStatusCodesCode& operator=(ConditionClinicalStatusCodesCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConditionClinicalStatusCodesCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConditionClinicalStatusCodesCode* internal_default_instance() {
    return reinterpret_cast<const ConditionClinicalStatusCodesCode*>(
               &_ConditionClinicalStatusCodesCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  void Swap(ConditionClinicalStatusCodesCode* other);
  friend void swap(ConditionClinicalStatusCodesCode& a, ConditionClinicalStatusCodesCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConditionClinicalStatusCodesCode* New() const final {
    return CreateMaybeMessage<ConditionClinicalStatusCodesCode>(NULL);
  }

  ConditionClinicalStatusCodesCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConditionClinicalStatusCodesCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConditionClinicalStatusCodesCode& from);
  void MergeFrom(const ConditionClinicalStatusCodesCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConditionClinicalStatusCodesCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ConditionClinicalStatusCodesCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ConditionClinicalStatusCodesCode_Value_INVALID_UNINITIALIZED;
  static const Value ACTIVE =
    ConditionClinicalStatusCodesCode_Value_ACTIVE;
  static const Value RECURRENCE =
    ConditionClinicalStatusCodesCode_Value_RECURRENCE;
  static const Value INACTIVE =
    ConditionClinicalStatusCodesCode_Value_INACTIVE;
  static const Value REMISSION =
    ConditionClinicalStatusCodesCode_Value_REMISSION;
  static const Value RESOLVED =
    ConditionClinicalStatusCodesCode_Value_RESOLVED;
  static inline bool Value_IsValid(int value) {
    return ConditionClinicalStatusCodesCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ConditionClinicalStatusCodesCode_Value_Value_MIN;
  static const Value Value_MAX =
    ConditionClinicalStatusCodesCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ConditionClinicalStatusCodesCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ConditionClinicalStatusCodesCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ConditionClinicalStatusCodesCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ConditionClinicalStatusCodesCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ConditionClinicalStatusCodesCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ConditionClinicalStatusCodesCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ConditionClinicalStatusCodesCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ConditionClinicalStatusCodesCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConditionStateCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ConditionStateCode) */ {
 public:
  ConditionStateCode();
  virtual ~ConditionStateCode();

  ConditionStateCode(const ConditionStateCode& from);

  inline ConditionStateCode& operator=(const ConditionStateCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConditionStateCode(ConditionStateCode&& from) noexcept
    : ConditionStateCode() {
    *this = ::std::move(from);
  }

  inline ConditionStateCode& operator=(ConditionStateCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConditionStateCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConditionStateCode* internal_default_instance() {
    return reinterpret_cast<const ConditionStateCode*>(
               &_ConditionStateCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  void Swap(ConditionStateCode* other);
  friend void swap(ConditionStateCode& a, ConditionStateCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConditionStateCode* New() const final {
    return CreateMaybeMessage<ConditionStateCode>(NULL);
  }

  ConditionStateCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConditionStateCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConditionStateCode& from);
  void MergeFrom(const ConditionStateCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConditionStateCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ConditionStateCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ConditionStateCode_Value_INVALID_UNINITIALIZED;
  static const Value ACTIVE =
    ConditionStateCode_Value_ACTIVE;
  static const Value INACTIVE =
    ConditionStateCode_Value_INACTIVE;
  static const Value RESOLVED =
    ConditionStateCode_Value_RESOLVED;
  static inline bool Value_IsValid(int value) {
    return ConditionStateCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ConditionStateCode_Value_Value_MIN;
  static const Value Value_MAX =
    ConditionStateCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ConditionStateCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ConditionStateCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ConditionStateCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ConditionStateCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ConditionStateCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ConditionStateCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ConditionStateCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ConditionStateCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConditionVerificationStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ConditionVerificationStatusCode) */ {
 public:
  ConditionVerificationStatusCode();
  virtual ~ConditionVerificationStatusCode();

  ConditionVerificationStatusCode(const ConditionVerificationStatusCode& from);

  inline ConditionVerificationStatusCode& operator=(const ConditionVerificationStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConditionVerificationStatusCode(ConditionVerificationStatusCode&& from) noexcept
    : ConditionVerificationStatusCode() {
    *this = ::std::move(from);
  }

  inline ConditionVerificationStatusCode& operator=(ConditionVerificationStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConditionVerificationStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConditionVerificationStatusCode* internal_default_instance() {
    return reinterpret_cast<const ConditionVerificationStatusCode*>(
               &_ConditionVerificationStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  void Swap(ConditionVerificationStatusCode* other);
  friend void swap(ConditionVerificationStatusCode& a, ConditionVerificationStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConditionVerificationStatusCode* New() const final {
    return CreateMaybeMessage<ConditionVerificationStatusCode>(NULL);
  }

  ConditionVerificationStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConditionVerificationStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConditionVerificationStatusCode& from);
  void MergeFrom(const ConditionVerificationStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConditionVerificationStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ConditionVerificationStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ConditionVerificationStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value PROVISIONAL =
    ConditionVerificationStatusCode_Value_PROVISIONAL;
  static const Value DIFFERENTIAL =
    ConditionVerificationStatusCode_Value_DIFFERENTIAL;
  static const Value CONFIRMED =
    ConditionVerificationStatusCode_Value_CONFIRMED;
  static const Value REFUTED =
    ConditionVerificationStatusCode_Value_REFUTED;
  static const Value ENTERED_IN_ERROR =
    ConditionVerificationStatusCode_Value_ENTERED_IN_ERROR;
  static const Value UNKNOWN =
    ConditionVerificationStatusCode_Value_UNKNOWN;
  static inline bool Value_IsValid(int value) {
    return ConditionVerificationStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ConditionVerificationStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    ConditionVerificationStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ConditionVerificationStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ConditionVerificationStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ConditionVerificationStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ConditionVerificationStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ConditionVerificationStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ConditionVerificationStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ConditionVerificationStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ConditionVerificationStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConformanceExpectationCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ConformanceExpectationCode) */ {
 public:
  ConformanceExpectationCode();
  virtual ~ConformanceExpectationCode();

  ConformanceExpectationCode(const ConformanceExpectationCode& from);

  inline ConformanceExpectationCode& operator=(const ConformanceExpectationCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConformanceExpectationCode(ConformanceExpectationCode&& from) noexcept
    : ConformanceExpectationCode() {
    *this = ::std::move(from);
  }

  inline ConformanceExpectationCode& operator=(ConformanceExpectationCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConformanceExpectationCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConformanceExpectationCode* internal_default_instance() {
    return reinterpret_cast<const ConformanceExpectationCode*>(
               &_ConformanceExpectationCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  void Swap(ConformanceExpectationCode* other);
  friend void swap(ConformanceExpectationCode& a, ConformanceExpectationCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConformanceExpectationCode* New() const final {
    return CreateMaybeMessage<ConformanceExpectationCode>(NULL);
  }

  ConformanceExpectationCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConformanceExpectationCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConformanceExpectationCode& from);
  void MergeFrom(const ConformanceExpectationCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConformanceExpectationCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ConformanceExpectationCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ConformanceExpectationCode_Value_INVALID_UNINITIALIZED;
  static const Value SHALL =
    ConformanceExpectationCode_Value_SHALL;
  static const Value SHOULD =
    ConformanceExpectationCode_Value_SHOULD;
  static const Value MAY =
    ConformanceExpectationCode_Value_MAY;
  static const Value SHOULD_NOT =
    ConformanceExpectationCode_Value_SHOULD_NOT;
  static inline bool Value_IsValid(int value) {
    return ConformanceExpectationCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ConformanceExpectationCode_Value_Value_MIN;
  static const Value Value_MAX =
    ConformanceExpectationCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ConformanceExpectationCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ConformanceExpectationCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ConformanceExpectationCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ConformanceExpectationCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ConformanceExpectationCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ConformanceExpectationCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ConformanceExpectationCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ConformanceExpectationCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConsentDataMeaningCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ConsentDataMeaningCode) */ {
 public:
  ConsentDataMeaningCode();
  virtual ~ConsentDataMeaningCode();

  ConsentDataMeaningCode(const ConsentDataMeaningCode& from);

  inline ConsentDataMeaningCode& operator=(const ConsentDataMeaningCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConsentDataMeaningCode(ConsentDataMeaningCode&& from) noexcept
    : ConsentDataMeaningCode() {
    *this = ::std::move(from);
  }

  inline ConsentDataMeaningCode& operator=(ConsentDataMeaningCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConsentDataMeaningCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConsentDataMeaningCode* internal_default_instance() {
    return reinterpret_cast<const ConsentDataMeaningCode*>(
               &_ConsentDataMeaningCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  void Swap(ConsentDataMeaningCode* other);
  friend void swap(ConsentDataMeaningCode& a, ConsentDataMeaningCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConsentDataMeaningCode* New() const final {
    return CreateMaybeMessage<ConsentDataMeaningCode>(NULL);
  }

  ConsentDataMeaningCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConsentDataMeaningCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConsentDataMeaningCode& from);
  void MergeFrom(const ConsentDataMeaningCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConsentDataMeaningCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ConsentDataMeaningCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ConsentDataMeaningCode_Value_INVALID_UNINITIALIZED;
  static const Value INSTANCE =
    ConsentDataMeaningCode_Value_INSTANCE;
  static const Value RELATED =
    ConsentDataMeaningCode_Value_RELATED;
  static const Value DEPENDENTS =
    ConsentDataMeaningCode_Value_DEPENDENTS;
  static const Value AUTHOREDBY =
    ConsentDataMeaningCode_Value_AUTHOREDBY;
  static inline bool Value_IsValid(int value) {
    return ConsentDataMeaningCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ConsentDataMeaningCode_Value_Value_MIN;
  static const Value Value_MAX =
    ConsentDataMeaningCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ConsentDataMeaningCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ConsentDataMeaningCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ConsentDataMeaningCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ConsentDataMeaningCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ConsentDataMeaningCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ConsentDataMeaningCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ConsentDataMeaningCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ConsentDataMeaningCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConsentExceptTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ConsentExceptTypeCode) */ {
 public:
  ConsentExceptTypeCode();
  virtual ~ConsentExceptTypeCode();

  ConsentExceptTypeCode(const ConsentExceptTypeCode& from);

  inline ConsentExceptTypeCode& operator=(const ConsentExceptTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConsentExceptTypeCode(ConsentExceptTypeCode&& from) noexcept
    : ConsentExceptTypeCode() {
    *this = ::std::move(from);
  }

  inline ConsentExceptTypeCode& operator=(ConsentExceptTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConsentExceptTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConsentExceptTypeCode* internal_default_instance() {
    return reinterpret_cast<const ConsentExceptTypeCode*>(
               &_ConsentExceptTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  void Swap(ConsentExceptTypeCode* other);
  friend void swap(ConsentExceptTypeCode& a, ConsentExceptTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConsentExceptTypeCode* New() const final {
    return CreateMaybeMessage<ConsentExceptTypeCode>(NULL);
  }

  ConsentExceptTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConsentExceptTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConsentExceptTypeCode& from);
  void MergeFrom(const ConsentExceptTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConsentExceptTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ConsentExceptTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ConsentExceptTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value DENY =
    ConsentExceptTypeCode_Value_DENY;
  static const Value PERMIT =
    ConsentExceptTypeCode_Value_PERMIT;
  static inline bool Value_IsValid(int value) {
    return ConsentExceptTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ConsentExceptTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    ConsentExceptTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ConsentExceptTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ConsentExceptTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ConsentExceptTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ConsentExceptTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ConsentExceptTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ConsentExceptTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ConsentExceptTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ConsentExceptTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConsentStateCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ConsentStateCode) */ {
 public:
  ConsentStateCode();
  virtual ~ConsentStateCode();

  ConsentStateCode(const ConsentStateCode& from);

  inline ConsentStateCode& operator=(const ConsentStateCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConsentStateCode(ConsentStateCode&& from) noexcept
    : ConsentStateCode() {
    *this = ::std::move(from);
  }

  inline ConsentStateCode& operator=(ConsentStateCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConsentStateCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConsentStateCode* internal_default_instance() {
    return reinterpret_cast<const ConsentStateCode*>(
               &_ConsentStateCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  void Swap(ConsentStateCode* other);
  friend void swap(ConsentStateCode& a, ConsentStateCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConsentStateCode* New() const final {
    return CreateMaybeMessage<ConsentStateCode>(NULL);
  }

  ConsentStateCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConsentStateCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConsentStateCode& from);
  void MergeFrom(const ConsentStateCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConsentStateCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ConsentStateCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ConsentStateCode_Value_INVALID_UNINITIALIZED;
  static const Value DRAFT =
    ConsentStateCode_Value_DRAFT;
  static const Value PROPOSED =
    ConsentStateCode_Value_PROPOSED;
  static const Value ACTIVE =
    ConsentStateCode_Value_ACTIVE;
  static const Value REJECTED =
    ConsentStateCode_Value_REJECTED;
  static const Value INACTIVE =
    ConsentStateCode_Value_INACTIVE;
  static const Value ENTERED_IN_ERROR =
    ConsentStateCode_Value_ENTERED_IN_ERROR;
  static inline bool Value_IsValid(int value) {
    return ConsentStateCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ConsentStateCode_Value_Value_MIN;
  static const Value Value_MAX =
    ConsentStateCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ConsentStateCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ConsentStateCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ConsentStateCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ConsentStateCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ConsentStateCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ConsentStateCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ConsentStateCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ConsentStateCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ContactEntityTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ContactEntityTypeCode) */ {
 public:
  ContactEntityTypeCode();
  virtual ~ContactEntityTypeCode();

  ContactEntityTypeCode(const ContactEntityTypeCode& from);

  inline ContactEntityTypeCode& operator=(const ContactEntityTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ContactEntityTypeCode(ContactEntityTypeCode&& from) noexcept
    : ContactEntityTypeCode() {
    *this = ::std::move(from);
  }

  inline ContactEntityTypeCode& operator=(ContactEntityTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactEntityTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ContactEntityTypeCode* internal_default_instance() {
    return reinterpret_cast<const ContactEntityTypeCode*>(
               &_ContactEntityTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  void Swap(ContactEntityTypeCode* other);
  friend void swap(ContactEntityTypeCode& a, ContactEntityTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ContactEntityTypeCode* New() const final {
    return CreateMaybeMessage<ContactEntityTypeCode>(NULL);
  }

  ContactEntityTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ContactEntityTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ContactEntityTypeCode& from);
  void MergeFrom(const ContactEntityTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ContactEntityTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ContactEntityTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ContactEntityTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value BILL =
    ContactEntityTypeCode_Value_BILL;
  static const Value ADMIN =
    ContactEntityTypeCode_Value_ADMIN;
  static const Value HR =
    ContactEntityTypeCode_Value_HR;
  static const Value PAYOR =
    ContactEntityTypeCode_Value_PAYOR;
  static const Value PATINF =
    ContactEntityTypeCode_Value_PATINF;
  static const Value PRESS =
    ContactEntityTypeCode_Value_PRESS;
  static inline bool Value_IsValid(int value) {
    return ContactEntityTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ContactEntityTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    ContactEntityTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ContactEntityTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ContactEntityTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ContactEntityTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ContactEntityTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ContactEntityTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ContactEntityTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ContactEntityTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ContactEntityTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ContentTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ContentTypeCode) */ {
 public:
  ContentTypeCode();
  virtual ~ContentTypeCode();

  ContentTypeCode(const ContentTypeCode& from);

  inline ContentTypeCode& operator=(const ContentTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ContentTypeCode(ContentTypeCode&& from) noexcept
    : ContentTypeCode() {
    *this = ::std::move(from);
  }

  inline ContentTypeCode& operator=(ContentTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ContentTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ContentTypeCode* internal_default_instance() {
    return reinterpret_cast<const ContentTypeCode*>(
               &_ContentTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  void Swap(ContentTypeCode* other);
  friend void swap(ContentTypeCode& a, ContentTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ContentTypeCode* New() const final {
    return CreateMaybeMessage<ContentTypeCode>(NULL);
  }

  ContentTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ContentTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ContentTypeCode& from);
  void MergeFrom(const ContentTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ContentTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ContentTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ContentTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value XML =
    ContentTypeCode_Value_XML;
  static const Value JSON =
    ContentTypeCode_Value_JSON;
  static const Value TTL =
    ContentTypeCode_Value_TTL;
  static const Value NONE =
    ContentTypeCode_Value_NONE;
  static inline bool Value_IsValid(int value) {
    return ContentTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ContentTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    ContentTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ContentTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ContentTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ContentTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ContentTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ContentTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ContentTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ContentTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ContentTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ContractResourceStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ContractResourceStatusCode) */ {
 public:
  ContractResourceStatusCode();
  virtual ~ContractResourceStatusCode();

  ContractResourceStatusCode(const ContractResourceStatusCode& from);

  inline ContractResourceStatusCode& operator=(const ContractResourceStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ContractResourceStatusCode(ContractResourceStatusCode&& from) noexcept
    : ContractResourceStatusCode() {
    *this = ::std::move(from);
  }

  inline ContractResourceStatusCode& operator=(ContractResourceStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ContractResourceStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ContractResourceStatusCode* internal_default_instance() {
    return reinterpret_cast<const ContractResourceStatusCode*>(
               &_ContractResourceStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  void Swap(ContractResourceStatusCode* other);
  friend void swap(ContractResourceStatusCode& a, ContractResourceStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ContractResourceStatusCode* New() const final {
    return CreateMaybeMessage<ContractResourceStatusCode>(NULL);
  }

  ContractResourceStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ContractResourceStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ContractResourceStatusCode& from);
  void MergeFrom(const ContractResourceStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ContractResourceStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ContractResourceStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ContractResourceStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value AMENDED =
    ContractResourceStatusCode_Value_AMENDED;
  static const Value APPENDED =
    ContractResourceStatusCode_Value_APPENDED;
  static const Value CANCELLED =
    ContractResourceStatusCode_Value_CANCELLED;
  static const Value DISPUTED =
    ContractResourceStatusCode_Value_DISPUTED;
  static const Value ENTERED_IN_ERROR =
    ContractResourceStatusCode_Value_ENTERED_IN_ERROR;
  static const Value EXECUTABLE =
    ContractResourceStatusCode_Value_EXECUTABLE;
  static const Value EXECUTED =
    ContractResourceStatusCode_Value_EXECUTED;
  static const Value NEGOTIABLE =
    ContractResourceStatusCode_Value_NEGOTIABLE;
  static const Value OFFERED =
    ContractResourceStatusCode_Value_OFFERED;
  static const Value POLICY =
    ContractResourceStatusCode_Value_POLICY;
  static const Value REJECTED =
    ContractResourceStatusCode_Value_REJECTED;
  static const Value RENEWED =
    ContractResourceStatusCode_Value_RENEWED;
  static const Value REVOKED =
    ContractResourceStatusCode_Value_REVOKED;
  static const Value RESOLVED =
    ContractResourceStatusCode_Value_RESOLVED;
  static const Value TERMINATED =
    ContractResourceStatusCode_Value_TERMINATED;
  static inline bool Value_IsValid(int value) {
    return ContractResourceStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ContractResourceStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    ContractResourceStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ContractResourceStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ContractResourceStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ContractResourceStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ContractResourceStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ContractResourceStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ContractResourceStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ContractResourceStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ContractResourceStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ContributorTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ContributorTypeCode) */ {
 public:
  ContributorTypeCode();
  virtual ~ContributorTypeCode();

  ContributorTypeCode(const ContributorTypeCode& from);

  inline ContributorTypeCode& operator=(const ContributorTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ContributorTypeCode(ContributorTypeCode&& from) noexcept
    : ContributorTypeCode() {
    *this = ::std::move(from);
  }

  inline ContributorTypeCode& operator=(ContributorTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ContributorTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ContributorTypeCode* internal_default_instance() {
    return reinterpret_cast<const ContributorTypeCode*>(
               &_ContributorTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  void Swap(ContributorTypeCode* other);
  friend void swap(ContributorTypeCode& a, ContributorTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ContributorTypeCode* New() const final {
    return CreateMaybeMessage<ContributorTypeCode>(NULL);
  }

  ContributorTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ContributorTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ContributorTypeCode& from);
  void MergeFrom(const ContributorTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ContributorTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ContributorTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ContributorTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value AUTHOR =
    ContributorTypeCode_Value_AUTHOR;
  static const Value EDITOR =
    ContributorTypeCode_Value_EDITOR;
  static const Value REVIEWER =
    ContributorTypeCode_Value_REVIEWER;
  static const Value ENDORSER =
    ContributorTypeCode_Value_ENDORSER;
  static inline bool Value_IsValid(int value) {
    return ContributorTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ContributorTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    ContributorTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ContributorTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ContributorTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ContributorTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ContributorTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ContributorTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ContributorTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ContributorTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ContributorTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CopyNumberEventCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.CopyNumberEventCode) */ {
 public:
  CopyNumberEventCode();
  virtual ~CopyNumberEventCode();

  CopyNumberEventCode(const CopyNumberEventCode& from);

  inline CopyNumberEventCode& operator=(const CopyNumberEventCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CopyNumberEventCode(CopyNumberEventCode&& from) noexcept
    : CopyNumberEventCode() {
    *this = ::std::move(from);
  }

  inline CopyNumberEventCode& operator=(CopyNumberEventCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CopyNumberEventCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CopyNumberEventCode* internal_default_instance() {
    return reinterpret_cast<const CopyNumberEventCode*>(
               &_CopyNumberEventCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    81;

  void Swap(CopyNumberEventCode* other);
  friend void swap(CopyNumberEventCode& a, CopyNumberEventCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CopyNumberEventCode* New() const final {
    return CreateMaybeMessage<CopyNumberEventCode>(NULL);
  }

  CopyNumberEventCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CopyNumberEventCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CopyNumberEventCode& from);
  void MergeFrom(const CopyNumberEventCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CopyNumberEventCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CopyNumberEventCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    CopyNumberEventCode_Value_INVALID_UNINITIALIZED;
  static const Value AMP =
    CopyNumberEventCode_Value_AMP;
  static const Value DEL =
    CopyNumberEventCode_Value_DEL;
  static const Value LOF =
    CopyNumberEventCode_Value_LOF;
  static inline bool Value_IsValid(int value) {
    return CopyNumberEventCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    CopyNumberEventCode_Value_Value_MIN;
  static const Value Value_MAX =
    CopyNumberEventCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    CopyNumberEventCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return CopyNumberEventCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return CopyNumberEventCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return CopyNumberEventCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CopyNumberEventCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::CopyNumberEventCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::CopyNumberEventCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.CopyNumberEventCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataAbsentReasonCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.DataAbsentReasonCode) */ {
 public:
  DataAbsentReasonCode();
  virtual ~DataAbsentReasonCode();

  DataAbsentReasonCode(const DataAbsentReasonCode& from);

  inline DataAbsentReasonCode& operator=(const DataAbsentReasonCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataAbsentReasonCode(DataAbsentReasonCode&& from) noexcept
    : DataAbsentReasonCode() {
    *this = ::std::move(from);
  }

  inline DataAbsentReasonCode& operator=(DataAbsentReasonCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataAbsentReasonCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataAbsentReasonCode* internal_default_instance() {
    return reinterpret_cast<const DataAbsentReasonCode*>(
               &_DataAbsentReasonCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    82;

  void Swap(DataAbsentReasonCode* other);
  friend void swap(DataAbsentReasonCode& a, DataAbsentReasonCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataAbsentReasonCode* New() const final {
    return CreateMaybeMessage<DataAbsentReasonCode>(NULL);
  }

  DataAbsentReasonCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataAbsentReasonCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataAbsentReasonCode& from);
  void MergeFrom(const DataAbsentReasonCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataAbsentReasonCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DataAbsentReasonCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    DataAbsentReasonCode_Value_INVALID_UNINITIALIZED;
  static const Value UNKNOWN =
    DataAbsentReasonCode_Value_UNKNOWN;
  static const Value ASKED =
    DataAbsentReasonCode_Value_ASKED;
  static const Value TEMP =
    DataAbsentReasonCode_Value_TEMP;
  static const Value NOT_ASKED =
    DataAbsentReasonCode_Value_NOT_ASKED;
  static const Value MASKED =
    DataAbsentReasonCode_Value_MASKED;
  static const Value UNSUPPORTED =
    DataAbsentReasonCode_Value_UNSUPPORTED;
  static const Value ASTEXT =
    DataAbsentReasonCode_Value_ASTEXT;
  static const Value ERROR =
    DataAbsentReasonCode_Value_ERROR;
  static const Value NOT_A_NUMBER =
    DataAbsentReasonCode_Value_NOT_A_NUMBER;
  static const Value NOT_PERFORMED =
    DataAbsentReasonCode_Value_NOT_PERFORMED;
  static inline bool Value_IsValid(int value) {
    return DataAbsentReasonCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    DataAbsentReasonCode_Value_Value_MIN;
  static const Value Value_MAX =
    DataAbsentReasonCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    DataAbsentReasonCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return DataAbsentReasonCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return DataAbsentReasonCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return DataAbsentReasonCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.DataAbsentReasonCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::DataAbsentReasonCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::DataAbsentReasonCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.DataAbsentReasonCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataElementStringencyCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.DataElementStringencyCode) */ {
 public:
  DataElementStringencyCode();
  virtual ~DataElementStringencyCode();

  DataElementStringencyCode(const DataElementStringencyCode& from);

  inline DataElementStringencyCode& operator=(const DataElementStringencyCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataElementStringencyCode(DataElementStringencyCode&& from) noexcept
    : DataElementStringencyCode() {
    *this = ::std::move(from);
  }

  inline DataElementStringencyCode& operator=(DataElementStringencyCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataElementStringencyCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataElementStringencyCode* internal_default_instance() {
    return reinterpret_cast<const DataElementStringencyCode*>(
               &_DataElementStringencyCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    83;

  void Swap(DataElementStringencyCode* other);
  friend void swap(DataElementStringencyCode& a, DataElementStringencyCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataElementStringencyCode* New() const final {
    return CreateMaybeMessage<DataElementStringencyCode>(NULL);
  }

  DataElementStringencyCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataElementStringencyCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataElementStringencyCode& from);
  void MergeFrom(const DataElementStringencyCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataElementStringencyCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DataElementStringencyCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    DataElementStringencyCode_Value_INVALID_UNINITIALIZED;
  static const Value COMPARABLE =
    DataElementStringencyCode_Value_COMPARABLE;
  static const Value FULLY_SPECIFIED =
    DataElementStringencyCode_Value_FULLY_SPECIFIED;
  static const Value EQUIVALENT =
    DataElementStringencyCode_Value_EQUIVALENT;
  static const Value CONVERTABLE =
    DataElementStringencyCode_Value_CONVERTABLE;
  static const Value SCALEABLE =
    DataElementStringencyCode_Value_SCALEABLE;
  static const Value FLEXIBLE =
    DataElementStringencyCode_Value_FLEXIBLE;
  static inline bool Value_IsValid(int value) {
    return DataElementStringencyCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    DataElementStringencyCode_Value_Value_MIN;
  static const Value Value_MAX =
    DataElementStringencyCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    DataElementStringencyCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return DataElementStringencyCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return DataElementStringencyCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return DataElementStringencyCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.DataElementStringencyCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::DataElementStringencyCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::DataElementStringencyCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.DataElementStringencyCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TriggerTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.TriggerTypeCode) */ {
 public:
  TriggerTypeCode();
  virtual ~TriggerTypeCode();

  TriggerTypeCode(const TriggerTypeCode& from);

  inline TriggerTypeCode& operator=(const TriggerTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TriggerTypeCode(TriggerTypeCode&& from) noexcept
    : TriggerTypeCode() {
    *this = ::std::move(from);
  }

  inline TriggerTypeCode& operator=(TriggerTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TriggerTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TriggerTypeCode* internal_default_instance() {
    return reinterpret_cast<const TriggerTypeCode*>(
               &_TriggerTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    84;

  void Swap(TriggerTypeCode* other);
  friend void swap(TriggerTypeCode& a, TriggerTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TriggerTypeCode* New() const final {
    return CreateMaybeMessage<TriggerTypeCode>(NULL);
  }

  TriggerTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TriggerTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TriggerTypeCode& from);
  void MergeFrom(const TriggerTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TriggerTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef TriggerTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    TriggerTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value NAMED_EVENT =
    TriggerTypeCode_Value_NAMED_EVENT;
  static const Value PERIODIC =
    TriggerTypeCode_Value_PERIODIC;
  static const Value DATA_ADDED =
    TriggerTypeCode_Value_DATA_ADDED;
  static const Value DATA_MODIFIED =
    TriggerTypeCode_Value_DATA_MODIFIED;
  static const Value DATA_REMOVED =
    TriggerTypeCode_Value_DATA_REMOVED;
  static const Value DATA_ACCESSED =
    TriggerTypeCode_Value_DATA_ACCESSED;
  static const Value DATA_ACCESS_ENDED =
    TriggerTypeCode_Value_DATA_ACCESS_ENDED;
  static inline bool Value_IsValid(int value) {
    return TriggerTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    TriggerTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    TriggerTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    TriggerTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return TriggerTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return TriggerTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return TriggerTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.TriggerTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::TriggerTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::TriggerTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.TriggerTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.DataTypeCode) */ {
 public:
  DataTypeCode();
  virtual ~DataTypeCode();

  DataTypeCode(const DataTypeCode& from);

  inline DataTypeCode& operator=(const DataTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataTypeCode(DataTypeCode&& from) noexcept
    : DataTypeCode() {
    *this = ::std::move(from);
  }

  inline DataTypeCode& operator=(DataTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataTypeCode* internal_default_instance() {
    return reinterpret_cast<const DataTypeCode*>(
               &_DataTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    85;

  void Swap(DataTypeCode* other);
  friend void swap(DataTypeCode& a, DataTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataTypeCode* New() const final {
    return CreateMaybeMessage<DataTypeCode>(NULL);
  }

  DataTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataTypeCode& from);
  void MergeFrom(const DataTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DataTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    DataTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value ADDRESS =
    DataTypeCode_Value_ADDRESS;
  static const Value AGE =
    DataTypeCode_Value_AGE;
  static const Value ANNOTATION =
    DataTypeCode_Value_ANNOTATION;
  static const Value ATTACHMENT =
    DataTypeCode_Value_ATTACHMENT;
  static const Value BACKBONE_ELEMENT =
    DataTypeCode_Value_BACKBONE_ELEMENT;
  static const Value CODEABLE_CONCEPT =
    DataTypeCode_Value_CODEABLE_CONCEPT;
  static const Value CODING =
    DataTypeCode_Value_CODING;
  static const Value CONTACT_DETAIL =
    DataTypeCode_Value_CONTACT_DETAIL;
  static const Value CONTACT_POINT =
    DataTypeCode_Value_CONTACT_POINT;
  static const Value CONTRIBUTOR =
    DataTypeCode_Value_CONTRIBUTOR;
  static const Value COUNT =
    DataTypeCode_Value_COUNT;
  static const Value DATA_REQUIREMENT =
    DataTypeCode_Value_DATA_REQUIREMENT;
  static const Value DISTANCE =
    DataTypeCode_Value_DISTANCE;
  static const Value DOSAGE =
    DataTypeCode_Value_DOSAGE;
  static const Value DURATION =
    DataTypeCode_Value_DURATION;
  static const Value ELEMENT =
    DataTypeCode_Value_ELEMENT;
  static const Value ELEMENT_DEFINITION =
    DataTypeCode_Value_ELEMENT_DEFINITION;
  static const Value EXTENSION =
    DataTypeCode_Value_EXTENSION;
  static const Value HUMAN_NAME =
    DataTypeCode_Value_HUMAN_NAME;
  static const Value IDENTIFIER =
    DataTypeCode_Value_IDENTIFIER;
  static const Value META =
    DataTypeCode_Value_META;
  static const Value MONEY =
    DataTypeCode_Value_MONEY;
  static const Value NARRATIVE =
    DataTypeCode_Value_NARRATIVE;
  static const Value PARAMETER_DEFINITION =
    DataTypeCode_Value_PARAMETER_DEFINITION;
  static const Value PERIOD =
    DataTypeCode_Value_PERIOD;
  static const Value QUANTITY =
    DataTypeCode_Value_QUANTITY;
  static const Value RANGE =
    DataTypeCode_Value_RANGE;
  static const Value RATIO =
    DataTypeCode_Value_RATIO;
  static const Value REFERENCE =
    DataTypeCode_Value_REFERENCE;
  static const Value RELATED_ARTIFACT =
    DataTypeCode_Value_RELATED_ARTIFACT;
  static const Value SAMPLED_DATA =
    DataTypeCode_Value_SAMPLED_DATA;
  static const Value SIGNATURE =
    DataTypeCode_Value_SIGNATURE;
  static const Value SIMPLE_QUANTITY =
    DataTypeCode_Value_SIMPLE_QUANTITY;
  static const Value TIMING =
    DataTypeCode_Value_TIMING;
  static const Value TRIGGER_DEFINITION =
    DataTypeCode_Value_TRIGGER_DEFINITION;
  static const Value USAGE_CONTEXT =
    DataTypeCode_Value_USAGE_CONTEXT;
  static const Value BASE64_BINARY =
    DataTypeCode_Value_BASE64_BINARY;
  static const Value BOOLEAN =
    DataTypeCode_Value_BOOLEAN;
  static const Value CODE =
    DataTypeCode_Value_CODE;
  static const Value DATE =
    DataTypeCode_Value_DATE;
  static const Value DATE_TIME =
    DataTypeCode_Value_DATE_TIME;
  static const Value DECIMAL =
    DataTypeCode_Value_DECIMAL;
  static const Value ID =
    DataTypeCode_Value_ID;
  static const Value INSTANT =
    DataTypeCode_Value_INSTANT;
  static const Value INTEGER =
    DataTypeCode_Value_INTEGER;
  static const Value MARKDOWN =
    DataTypeCode_Value_MARKDOWN;
  static const Value OID =
    DataTypeCode_Value_OID;
  static const Value POSITIVE_INT =
    DataTypeCode_Value_POSITIVE_INT;
  static const Value STRING =
    DataTypeCode_Value_STRING;
  static const Value TIME =
    DataTypeCode_Value_TIME;
  static const Value UNSIGNED_INT =
    DataTypeCode_Value_UNSIGNED_INT;
  static const Value URI =
    DataTypeCode_Value_URI;
  static const Value UUID =
    DataTypeCode_Value_UUID;
  static const Value XHTML =
    DataTypeCode_Value_XHTML;
  static inline bool Value_IsValid(int value) {
    return DataTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    DataTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    DataTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    DataTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return DataTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return DataTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return DataTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.DataTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::DataTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::DataTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.DataTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FHIRAllTypesCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.FHIRAllTypesCode) */ {
 public:
  FHIRAllTypesCode();
  virtual ~FHIRAllTypesCode();

  FHIRAllTypesCode(const FHIRAllTypesCode& from);

  inline FHIRAllTypesCode& operator=(const FHIRAllTypesCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FHIRAllTypesCode(FHIRAllTypesCode&& from) noexcept
    : FHIRAllTypesCode() {
    *this = ::std::move(from);
  }

  inline FHIRAllTypesCode& operator=(FHIRAllTypesCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FHIRAllTypesCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FHIRAllTypesCode* internal_default_instance() {
    return reinterpret_cast<const FHIRAllTypesCode*>(
               &_FHIRAllTypesCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    86;

  void Swap(FHIRAllTypesCode* other);
  friend void swap(FHIRAllTypesCode& a, FHIRAllTypesCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FHIRAllTypesCode* New() const final {
    return CreateMaybeMessage<FHIRAllTypesCode>(NULL);
  }

  FHIRAllTypesCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FHIRAllTypesCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FHIRAllTypesCode& from);
  void MergeFrom(const FHIRAllTypesCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FHIRAllTypesCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef FHIRAllTypesCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    FHIRAllTypesCode_Value_INVALID_UNINITIALIZED;
  static const Value ADDRESS =
    FHIRAllTypesCode_Value_ADDRESS;
  static const Value AGE =
    FHIRAllTypesCode_Value_AGE;
  static const Value ANNOTATION =
    FHIRAllTypesCode_Value_ANNOTATION;
  static const Value ATTACHMENT =
    FHIRAllTypesCode_Value_ATTACHMENT;
  static const Value BACKBONE_ELEMENT =
    FHIRAllTypesCode_Value_BACKBONE_ELEMENT;
  static const Value CODEABLE_CONCEPT =
    FHIRAllTypesCode_Value_CODEABLE_CONCEPT;
  static const Value CODING =
    FHIRAllTypesCode_Value_CODING;
  static const Value CONTACT_DETAIL =
    FHIRAllTypesCode_Value_CONTACT_DETAIL;
  static const Value CONTACT_POINT =
    FHIRAllTypesCode_Value_CONTACT_POINT;
  static const Value CONTRIBUTOR =
    FHIRAllTypesCode_Value_CONTRIBUTOR;
  static const Value COUNT =
    FHIRAllTypesCode_Value_COUNT;
  static const Value DATA_REQUIREMENT =
    FHIRAllTypesCode_Value_DATA_REQUIREMENT;
  static const Value DISTANCE =
    FHIRAllTypesCode_Value_DISTANCE;
  static const Value DOSAGE =
    FHIRAllTypesCode_Value_DOSAGE;
  static const Value DURATION =
    FHIRAllTypesCode_Value_DURATION;
  static const Value ELEMENT =
    FHIRAllTypesCode_Value_ELEMENT;
  static const Value ELEMENT_DEFINITION =
    FHIRAllTypesCode_Value_ELEMENT_DEFINITION;
  static const Value EXTENSION =
    FHIRAllTypesCode_Value_EXTENSION;
  static const Value HUMAN_NAME =
    FHIRAllTypesCode_Value_HUMAN_NAME;
  static const Value IDENTIFIER =
    FHIRAllTypesCode_Value_IDENTIFIER;
  static const Value META =
    FHIRAllTypesCode_Value_META;
  static const Value MONEY =
    FHIRAllTypesCode_Value_MONEY;
  static const Value NARRATIVE =
    FHIRAllTypesCode_Value_NARRATIVE;
  static const Value PARAMETER_DEFINITION =
    FHIRAllTypesCode_Value_PARAMETER_DEFINITION;
  static const Value PERIOD =
    FHIRAllTypesCode_Value_PERIOD;
  static const Value QUANTITY =
    FHIRAllTypesCode_Value_QUANTITY;
  static const Value RANGE =
    FHIRAllTypesCode_Value_RANGE;
  static const Value RATIO =
    FHIRAllTypesCode_Value_RATIO;
  static const Value REFERENCE =
    FHIRAllTypesCode_Value_REFERENCE;
  static const Value RELATED_ARTIFACT =
    FHIRAllTypesCode_Value_RELATED_ARTIFACT;
  static const Value SAMPLED_DATA =
    FHIRAllTypesCode_Value_SAMPLED_DATA;
  static const Value SIGNATURE =
    FHIRAllTypesCode_Value_SIGNATURE;
  static const Value SIMPLE_QUANTITY =
    FHIRAllTypesCode_Value_SIMPLE_QUANTITY;
  static const Value TIMING =
    FHIRAllTypesCode_Value_TIMING;
  static const Value TRIGGER_DEFINITION =
    FHIRAllTypesCode_Value_TRIGGER_DEFINITION;
  static const Value USAGE_CONTEXT =
    FHIRAllTypesCode_Value_USAGE_CONTEXT;
  static const Value BASE64_BINARY =
    FHIRAllTypesCode_Value_BASE64_BINARY;
  static const Value BOOLEAN =
    FHIRAllTypesCode_Value_BOOLEAN;
  static const Value CODE =
    FHIRAllTypesCode_Value_CODE;
  static const Value DATE =
    FHIRAllTypesCode_Value_DATE;
  static const Value DATE_TIME =
    FHIRAllTypesCode_Value_DATE_TIME;
  static const Value DECIMAL =
    FHIRAllTypesCode_Value_DECIMAL;
  static const Value ID =
    FHIRAllTypesCode_Value_ID;
  static const Value INSTANT =
    FHIRAllTypesCode_Value_INSTANT;
  static const Value INTEGER =
    FHIRAllTypesCode_Value_INTEGER;
  static const Value MARKDOWN =
    FHIRAllTypesCode_Value_MARKDOWN;
  static const Value OID =
    FHIRAllTypesCode_Value_OID;
  static const Value POSITIVE_INT =
    FHIRAllTypesCode_Value_POSITIVE_INT;
  static const Value STRING =
    FHIRAllTypesCode_Value_STRING;
  static const Value TIME =
    FHIRAllTypesCode_Value_TIME;
  static const Value UNSIGNED_INT =
    FHIRAllTypesCode_Value_UNSIGNED_INT;
  static const Value URI =
    FHIRAllTypesCode_Value_URI;
  static const Value UUID =
    FHIRAllTypesCode_Value_UUID;
  static const Value XHTML =
    FHIRAllTypesCode_Value_XHTML;
  static const Value ACCOUNT =
    FHIRAllTypesCode_Value_ACCOUNT;
  static const Value ACTIVITY_DEFINITION =
    FHIRAllTypesCode_Value_ACTIVITY_DEFINITION;
  static const Value ADVERSE_EVENT =
    FHIRAllTypesCode_Value_ADVERSE_EVENT;
  static const Value ALLERGY_INTOLERANCE =
    FHIRAllTypesCode_Value_ALLERGY_INTOLERANCE;
  static const Value APPOINTMENT =
    FHIRAllTypesCode_Value_APPOINTMENT;
  static const Value APPOINTMENT_RESPONSE =
    FHIRAllTypesCode_Value_APPOINTMENT_RESPONSE;
  static const Value AUDIT_EVENT =
    FHIRAllTypesCode_Value_AUDIT_EVENT;
  static const Value BASIC =
    FHIRAllTypesCode_Value_BASIC;
  static const Value BINARY =
    FHIRAllTypesCode_Value_BINARY;
  static const Value BODY_SITE =
    FHIRAllTypesCode_Value_BODY_SITE;
  static const Value BUNDLE =
    FHIRAllTypesCode_Value_BUNDLE;
  static const Value CAPABILITY_STATEMENT =
    FHIRAllTypesCode_Value_CAPABILITY_STATEMENT;
  static const Value CARE_PLAN =
    FHIRAllTypesCode_Value_CARE_PLAN;
  static const Value CARE_TEAM =
    FHIRAllTypesCode_Value_CARE_TEAM;
  static const Value CHARGE_ITEM =
    FHIRAllTypesCode_Value_CHARGE_ITEM;
  static const Value CLAIM =
    FHIRAllTypesCode_Value_CLAIM;
  static const Value CLAIM_RESPONSE =
    FHIRAllTypesCode_Value_CLAIM_RESPONSE;
  static const Value CLINICAL_IMPRESSION =
    FHIRAllTypesCode_Value_CLINICAL_IMPRESSION;
  static const Value CODE_SYSTEM =
    FHIRAllTypesCode_Value_CODE_SYSTEM;
  static const Value COMMUNICATION =
    FHIRAllTypesCode_Value_COMMUNICATION;
  static const Value COMMUNICATION_REQUEST =
    FHIRAllTypesCode_Value_COMMUNICATION_REQUEST;
  static const Value COMPARTMENT_DEFINITION =
    FHIRAllTypesCode_Value_COMPARTMENT_DEFINITION;
  static const Value COMPOSITION =
    FHIRAllTypesCode_Value_COMPOSITION;
  static const Value CONCEPT_MAP =
    FHIRAllTypesCode_Value_CONCEPT_MAP;
  static const Value CONDITION =
    FHIRAllTypesCode_Value_CONDITION;
  static const Value CONSENT =
    FHIRAllTypesCode_Value_CONSENT;
  static const Value CONTRACT =
    FHIRAllTypesCode_Value_CONTRACT;
  static const Value COVERAGE =
    FHIRAllTypesCode_Value_COVERAGE;
  static const Value DATA_ELEMENT =
    FHIRAllTypesCode_Value_DATA_ELEMENT;
  static const Value DETECTED_ISSUE =
    FHIRAllTypesCode_Value_DETECTED_ISSUE;
  static const Value DEVICE =
    FHIRAllTypesCode_Value_DEVICE;
  static const Value DEVICE_COMPONENT =
    FHIRAllTypesCode_Value_DEVICE_COMPONENT;
  static const Value DEVICE_METRIC =
    FHIRAllTypesCode_Value_DEVICE_METRIC;
  static const Value DEVICE_REQUEST =
    FHIRAllTypesCode_Value_DEVICE_REQUEST;
  static const Value DEVICE_USE_STATEMENT =
    FHIRAllTypesCode_Value_DEVICE_USE_STATEMENT;
  static const Value DIAGNOSTIC_REPORT =
    FHIRAllTypesCode_Value_DIAGNOSTIC_REPORT;
  static const Value DOCUMENT_MANIFEST =
    FHIRAllTypesCode_Value_DOCUMENT_MANIFEST;
  static const Value DOCUMENT_REFERENCE =
    FHIRAllTypesCode_Value_DOCUMENT_REFERENCE;
  static const Value DOMAIN_RESOURCE =
    FHIRAllTypesCode_Value_DOMAIN_RESOURCE;
  static const Value ELIGIBILITY_REQUEST =
    FHIRAllTypesCode_Value_ELIGIBILITY_REQUEST;
  static const Value ELIGIBILITY_RESPONSE =
    FHIRAllTypesCode_Value_ELIGIBILITY_RESPONSE;
  static const Value ENCOUNTER =
    FHIRAllTypesCode_Value_ENCOUNTER;
  static const Value ENDPOINT =
    FHIRAllTypesCode_Value_ENDPOINT;
  static const Value ENROLLMENT_REQUEST =
    FHIRAllTypesCode_Value_ENROLLMENT_REQUEST;
  static const Value ENROLLMENT_RESPONSE =
    FHIRAllTypesCode_Value_ENROLLMENT_RESPONSE;
  static const Value EPISODE_OF_CARE =
    FHIRAllTypesCode_Value_EPISODE_OF_CARE;
  static const Value EXPANSION_PROFILE =
    FHIRAllTypesCode_Value_EXPANSION_PROFILE;
  static const Value EXPLANATION_OF_BENEFIT =
    FHIRAllTypesCode_Value_EXPLANATION_OF_BENEFIT;
  static const Value FAMILY_MEMBER_HISTORY =
    FHIRAllTypesCode_Value_FAMILY_MEMBER_HISTORY;
  static const Value FLAG =
    FHIRAllTypesCode_Value_FLAG;
  static const Value GOAL =
    FHIRAllTypesCode_Value_GOAL;
  static const Value GRAPH_DEFINITION =
    FHIRAllTypesCode_Value_GRAPH_DEFINITION;
  static const Value GROUP =
    FHIRAllTypesCode_Value_GROUP;
  static const Value GUIDANCE_RESPONSE =
    FHIRAllTypesCode_Value_GUIDANCE_RESPONSE;
  static const Value HEALTHCARE_SERVICE =
    FHIRAllTypesCode_Value_HEALTHCARE_SERVICE;
  static const Value IMAGING_MANIFEST =
    FHIRAllTypesCode_Value_IMAGING_MANIFEST;
  static const Value IMAGING_STUDY =
    FHIRAllTypesCode_Value_IMAGING_STUDY;
  static const Value IMMUNIZATION =
    FHIRAllTypesCode_Value_IMMUNIZATION;
  static const Value IMMUNIZATION_RECOMMENDATION =
    FHIRAllTypesCode_Value_IMMUNIZATION_RECOMMENDATION;
  static const Value IMPLEMENTATION_GUIDE =
    FHIRAllTypesCode_Value_IMPLEMENTATION_GUIDE;
  static const Value LIBRARY =
    FHIRAllTypesCode_Value_LIBRARY;
  static const Value LINKAGE =
    FHIRAllTypesCode_Value_LINKAGE;
  static const Value LIST =
    FHIRAllTypesCode_Value_LIST;
  static const Value LOCATION =
    FHIRAllTypesCode_Value_LOCATION;
  static const Value MEASURE =
    FHIRAllTypesCode_Value_MEASURE;
  static const Value MEASURE_REPORT =
    FHIRAllTypesCode_Value_MEASURE_REPORT;
  static const Value MEDIA =
    FHIRAllTypesCode_Value_MEDIA;
  static const Value MEDICATION =
    FHIRAllTypesCode_Value_MEDICATION;
  static const Value MEDICATION_ADMINISTRATION =
    FHIRAllTypesCode_Value_MEDICATION_ADMINISTRATION;
  static const Value MEDICATION_DISPENSE =
    FHIRAllTypesCode_Value_MEDICATION_DISPENSE;
  static const Value MEDICATION_REQUEST =
    FHIRAllTypesCode_Value_MEDICATION_REQUEST;
  static const Value MEDICATION_STATEMENT =
    FHIRAllTypesCode_Value_MEDICATION_STATEMENT;
  static const Value MESSAGE_DEFINITION =
    FHIRAllTypesCode_Value_MESSAGE_DEFINITION;
  static const Value MESSAGE_HEADER =
    FHIRAllTypesCode_Value_MESSAGE_HEADER;
  static const Value NAMING_SYSTEM =
    FHIRAllTypesCode_Value_NAMING_SYSTEM;
  static const Value NUTRITION_ORDER =
    FHIRAllTypesCode_Value_NUTRITION_ORDER;
  static const Value OBSERVATION =
    FHIRAllTypesCode_Value_OBSERVATION;
  static const Value OPERATIONDEFINITION =
    FHIRAllTypesCode_Value_OPERATIONDEFINITION;
  static const Value OPERATION_OUTCOME =
    FHIRAllTypesCode_Value_OPERATION_OUTCOME;
  static const Value ORGANIZATION =
    FHIRAllTypesCode_Value_ORGANIZATION;
  static const Value PARAMETERS =
    FHIRAllTypesCode_Value_PARAMETERS;
  static const Value PATIENT =
    FHIRAllTypesCode_Value_PATIENT;
  static const Value PAYMENT_NOTICE =
    FHIRAllTypesCode_Value_PAYMENT_NOTICE;
  static const Value PAYMENT_RECONCILIATION =
    FHIRAllTypesCode_Value_PAYMENT_RECONCILIATION;
  static const Value PERSON =
    FHIRAllTypesCode_Value_PERSON;
  static const Value PLAN_DEFINITION =
    FHIRAllTypesCode_Value_PLAN_DEFINITION;
  static const Value PRACTITIONER =
    FHIRAllTypesCode_Value_PRACTITIONER;
  static const Value PRACTITIONER_ROLE =
    FHIRAllTypesCode_Value_PRACTITIONER_ROLE;
  static const Value PROCEDURE =
    FHIRAllTypesCode_Value_PROCEDURE;
  static const Value PROCEDURE_REQUEST =
    FHIRAllTypesCode_Value_PROCEDURE_REQUEST;
  static const Value PROCESS_REQUEST =
    FHIRAllTypesCode_Value_PROCESS_REQUEST;
  static const Value PROCESS_RESPONSE =
    FHIRAllTypesCode_Value_PROCESS_RESPONSE;
  static const Value PROVENANCE =
    FHIRAllTypesCode_Value_PROVENANCE;
  static const Value QUESTIONNAIRE =
    FHIRAllTypesCode_Value_QUESTIONNAIRE;
  static const Value QUESTIONNAIRE_RESPONSE =
    FHIRAllTypesCode_Value_QUESTIONNAIRE_RESPONSE;
  static const Value REFERRAL_REQUEST =
    FHIRAllTypesCode_Value_REFERRAL_REQUEST;
  static const Value RELATED_PERSON =
    FHIRAllTypesCode_Value_RELATED_PERSON;
  static const Value REQUEST_GROUP =
    FHIRAllTypesCode_Value_REQUEST_GROUP;
  static const Value RESEARCH_STUDY =
    FHIRAllTypesCode_Value_RESEARCH_STUDY;
  static const Value RESEARCH_SUBJECT =
    FHIRAllTypesCode_Value_RESEARCH_SUBJECT;
  static const Value RESOURCE =
    FHIRAllTypesCode_Value_RESOURCE;
  static const Value RISK_ASSESSMENT =
    FHIRAllTypesCode_Value_RISK_ASSESSMENT;
  static const Value SCHEDULE =
    FHIRAllTypesCode_Value_SCHEDULE;
  static const Value SEARCH_PARAMETER =
    FHIRAllTypesCode_Value_SEARCH_PARAMETER;
  static const Value SEQUENCE =
    FHIRAllTypesCode_Value_SEQUENCE;
  static const Value SERVICE_DEFINITION =
    FHIRAllTypesCode_Value_SERVICE_DEFINITION;
  static const Value SLOT =
    FHIRAllTypesCode_Value_SLOT;
  static const Value SPECIMEN =
    FHIRAllTypesCode_Value_SPECIMEN;
  static const Value STRUCTURE_DEFINITION =
    FHIRAllTypesCode_Value_STRUCTURE_DEFINITION;
  static const Value STRUCTURE_MAP =
    FHIRAllTypesCode_Value_STRUCTURE_MAP;
  static const Value SUBSCRIPTION =
    FHIRAllTypesCode_Value_SUBSCRIPTION;
  static const Value SUBSTANCE =
    FHIRAllTypesCode_Value_SUBSTANCE;
  static const Value SUPPLY_DELIVERY =
    FHIRAllTypesCode_Value_SUPPLY_DELIVERY;
  static const Value SUPPLY_REQUEST =
    FHIRAllTypesCode_Value_SUPPLY_REQUEST;
  static const Value TASK =
    FHIRAllTypesCode_Value_TASK;
  static const Value TEST_REPORT =
    FHIRAllTypesCode_Value_TEST_REPORT;
  static const Value TEST_SCRIPT =
    FHIRAllTypesCode_Value_TEST_SCRIPT;
  static const Value VALUE_SET =
    FHIRAllTypesCode_Value_VALUE_SET;
  static const Value VISION_PRESCRIPTION =
    FHIRAllTypesCode_Value_VISION_PRESCRIPTION;
  static const Value TYPE =
    FHIRAllTypesCode_Value_TYPE;
  static const Value ANY =
    FHIRAllTypesCode_Value_ANY;
  static inline bool Value_IsValid(int value) {
    return FHIRAllTypesCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    FHIRAllTypesCode_Value_Value_MIN;
  static const Value Value_MAX =
    FHIRAllTypesCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    FHIRAllTypesCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return FHIRAllTypesCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return FHIRAllTypesCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return FHIRAllTypesCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.FHIRAllTypesCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::FHIRAllTypesCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::FHIRAllTypesCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.FHIRAllTypesCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FHIRDefinedTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.FHIRDefinedTypeCode) */ {
 public:
  FHIRDefinedTypeCode();
  virtual ~FHIRDefinedTypeCode();

  FHIRDefinedTypeCode(const FHIRDefinedTypeCode& from);

  inline FHIRDefinedTypeCode& operator=(const FHIRDefinedTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FHIRDefinedTypeCode(FHIRDefinedTypeCode&& from) noexcept
    : FHIRDefinedTypeCode() {
    *this = ::std::move(from);
  }

  inline FHIRDefinedTypeCode& operator=(FHIRDefinedTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FHIRDefinedTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FHIRDefinedTypeCode* internal_default_instance() {
    return reinterpret_cast<const FHIRDefinedTypeCode*>(
               &_FHIRDefinedTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    87;

  void Swap(FHIRDefinedTypeCode* other);
  friend void swap(FHIRDefinedTypeCode& a, FHIRDefinedTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FHIRDefinedTypeCode* New() const final {
    return CreateMaybeMessage<FHIRDefinedTypeCode>(NULL);
  }

  FHIRDefinedTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FHIRDefinedTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FHIRDefinedTypeCode& from);
  void MergeFrom(const FHIRDefinedTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FHIRDefinedTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef FHIRDefinedTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    FHIRDefinedTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value ADDRESS =
    FHIRDefinedTypeCode_Value_ADDRESS;
  static const Value AGE =
    FHIRDefinedTypeCode_Value_AGE;
  static const Value ANNOTATION =
    FHIRDefinedTypeCode_Value_ANNOTATION;
  static const Value ATTACHMENT =
    FHIRDefinedTypeCode_Value_ATTACHMENT;
  static const Value BACKBONE_ELEMENT =
    FHIRDefinedTypeCode_Value_BACKBONE_ELEMENT;
  static const Value CODEABLE_CONCEPT =
    FHIRDefinedTypeCode_Value_CODEABLE_CONCEPT;
  static const Value CODING =
    FHIRDefinedTypeCode_Value_CODING;
  static const Value CONTACT_DETAIL =
    FHIRDefinedTypeCode_Value_CONTACT_DETAIL;
  static const Value CONTACT_POINT =
    FHIRDefinedTypeCode_Value_CONTACT_POINT;
  static const Value CONTRIBUTOR =
    FHIRDefinedTypeCode_Value_CONTRIBUTOR;
  static const Value COUNT =
    FHIRDefinedTypeCode_Value_COUNT;
  static const Value DATA_REQUIREMENT =
    FHIRDefinedTypeCode_Value_DATA_REQUIREMENT;
  static const Value DISTANCE =
    FHIRDefinedTypeCode_Value_DISTANCE;
  static const Value DOSAGE =
    FHIRDefinedTypeCode_Value_DOSAGE;
  static const Value DURATION =
    FHIRDefinedTypeCode_Value_DURATION;
  static const Value ELEMENT =
    FHIRDefinedTypeCode_Value_ELEMENT;
  static const Value ELEMENT_DEFINITION =
    FHIRDefinedTypeCode_Value_ELEMENT_DEFINITION;
  static const Value EXTENSION =
    FHIRDefinedTypeCode_Value_EXTENSION;
  static const Value HUMAN_NAME =
    FHIRDefinedTypeCode_Value_HUMAN_NAME;
  static const Value IDENTIFIER =
    FHIRDefinedTypeCode_Value_IDENTIFIER;
  static const Value META =
    FHIRDefinedTypeCode_Value_META;
  static const Value MONEY =
    FHIRDefinedTypeCode_Value_MONEY;
  static const Value NARRATIVE =
    FHIRDefinedTypeCode_Value_NARRATIVE;
  static const Value PARAMETER_DEFINITION =
    FHIRDefinedTypeCode_Value_PARAMETER_DEFINITION;
  static const Value PERIOD =
    FHIRDefinedTypeCode_Value_PERIOD;
  static const Value QUANTITY =
    FHIRDefinedTypeCode_Value_QUANTITY;
  static const Value RANGE =
    FHIRDefinedTypeCode_Value_RANGE;
  static const Value RATIO =
    FHIRDefinedTypeCode_Value_RATIO;
  static const Value REFERENCE =
    FHIRDefinedTypeCode_Value_REFERENCE;
  static const Value RELATED_ARTIFACT =
    FHIRDefinedTypeCode_Value_RELATED_ARTIFACT;
  static const Value SAMPLED_DATA =
    FHIRDefinedTypeCode_Value_SAMPLED_DATA;
  static const Value SIGNATURE =
    FHIRDefinedTypeCode_Value_SIGNATURE;
  static const Value SIMPLE_QUANTITY =
    FHIRDefinedTypeCode_Value_SIMPLE_QUANTITY;
  static const Value TIMING =
    FHIRDefinedTypeCode_Value_TIMING;
  static const Value TRIGGER_DEFINITION =
    FHIRDefinedTypeCode_Value_TRIGGER_DEFINITION;
  static const Value USAGE_CONTEXT =
    FHIRDefinedTypeCode_Value_USAGE_CONTEXT;
  static const Value BASE64_BINARY =
    FHIRDefinedTypeCode_Value_BASE64_BINARY;
  static const Value BOOLEAN =
    FHIRDefinedTypeCode_Value_BOOLEAN;
  static const Value CODE =
    FHIRDefinedTypeCode_Value_CODE;
  static const Value DATE =
    FHIRDefinedTypeCode_Value_DATE;
  static const Value DATE_TIME =
    FHIRDefinedTypeCode_Value_DATE_TIME;
  static const Value DECIMAL =
    FHIRDefinedTypeCode_Value_DECIMAL;
  static const Value ID =
    FHIRDefinedTypeCode_Value_ID;
  static const Value INSTANT =
    FHIRDefinedTypeCode_Value_INSTANT;
  static const Value INTEGER =
    FHIRDefinedTypeCode_Value_INTEGER;
  static const Value MARKDOWN =
    FHIRDefinedTypeCode_Value_MARKDOWN;
  static const Value OID =
    FHIRDefinedTypeCode_Value_OID;
  static const Value POSITIVE_INT =
    FHIRDefinedTypeCode_Value_POSITIVE_INT;
  static const Value STRING =
    FHIRDefinedTypeCode_Value_STRING;
  static const Value TIME =
    FHIRDefinedTypeCode_Value_TIME;
  static const Value UNSIGNED_INT =
    FHIRDefinedTypeCode_Value_UNSIGNED_INT;
  static const Value URI =
    FHIRDefinedTypeCode_Value_URI;
  static const Value UUID =
    FHIRDefinedTypeCode_Value_UUID;
  static const Value XHTML =
    FHIRDefinedTypeCode_Value_XHTML;
  static const Value ACCOUNT =
    FHIRDefinedTypeCode_Value_ACCOUNT;
  static const Value ACTIVITY_DEFINITION =
    FHIRDefinedTypeCode_Value_ACTIVITY_DEFINITION;
  static const Value ADVERSE_EVENT =
    FHIRDefinedTypeCode_Value_ADVERSE_EVENT;
  static const Value ALLERGY_INTOLERANCE =
    FHIRDefinedTypeCode_Value_ALLERGY_INTOLERANCE;
  static const Value APPOINTMENT =
    FHIRDefinedTypeCode_Value_APPOINTMENT;
  static const Value APPOINTMENT_RESPONSE =
    FHIRDefinedTypeCode_Value_APPOINTMENT_RESPONSE;
  static const Value AUDIT_EVENT =
    FHIRDefinedTypeCode_Value_AUDIT_EVENT;
  static const Value BASIC =
    FHIRDefinedTypeCode_Value_BASIC;
  static const Value BINARY =
    FHIRDefinedTypeCode_Value_BINARY;
  static const Value BODY_SITE =
    FHIRDefinedTypeCode_Value_BODY_SITE;
  static const Value BUNDLE =
    FHIRDefinedTypeCode_Value_BUNDLE;
  static const Value CAPABILITY_STATEMENT =
    FHIRDefinedTypeCode_Value_CAPABILITY_STATEMENT;
  static const Value CARE_PLAN =
    FHIRDefinedTypeCode_Value_CARE_PLAN;
  static const Value CARE_TEAM =
    FHIRDefinedTypeCode_Value_CARE_TEAM;
  static const Value CHARGE_ITEM =
    FHIRDefinedTypeCode_Value_CHARGE_ITEM;
  static const Value CLAIM =
    FHIRDefinedTypeCode_Value_CLAIM;
  static const Value CLAIM_RESPONSE =
    FHIRDefinedTypeCode_Value_CLAIM_RESPONSE;
  static const Value CLINICAL_IMPRESSION =
    FHIRDefinedTypeCode_Value_CLINICAL_IMPRESSION;
  static const Value CODE_SYSTEM =
    FHIRDefinedTypeCode_Value_CODE_SYSTEM;
  static const Value COMMUNICATION =
    FHIRDefinedTypeCode_Value_COMMUNICATION;
  static const Value COMMUNICATION_REQUEST =
    FHIRDefinedTypeCode_Value_COMMUNICATION_REQUEST;
  static const Value COMPARTMENT_DEFINITION =
    FHIRDefinedTypeCode_Value_COMPARTMENT_DEFINITION;
  static const Value COMPOSITION =
    FHIRDefinedTypeCode_Value_COMPOSITION;
  static const Value CONCEPT_MAP =
    FHIRDefinedTypeCode_Value_CONCEPT_MAP;
  static const Value CONDITION =
    FHIRDefinedTypeCode_Value_CONDITION;
  static const Value CONSENT =
    FHIRDefinedTypeCode_Value_CONSENT;
  static const Value CONTRACT =
    FHIRDefinedTypeCode_Value_CONTRACT;
  static const Value COVERAGE =
    FHIRDefinedTypeCode_Value_COVERAGE;
  static const Value DATA_ELEMENT =
    FHIRDefinedTypeCode_Value_DATA_ELEMENT;
  static const Value DETECTED_ISSUE =
    FHIRDefinedTypeCode_Value_DETECTED_ISSUE;
  static const Value DEVICE =
    FHIRDefinedTypeCode_Value_DEVICE;
  static const Value DEVICE_COMPONENT =
    FHIRDefinedTypeCode_Value_DEVICE_COMPONENT;
  static const Value DEVICE_METRIC =
    FHIRDefinedTypeCode_Value_DEVICE_METRIC;
  static const Value DEVICE_REQUEST =
    FHIRDefinedTypeCode_Value_DEVICE_REQUEST;
  static const Value DEVICE_USE_STATEMENT =
    FHIRDefinedTypeCode_Value_DEVICE_USE_STATEMENT;
  static const Value DIAGNOSTIC_REPORT =
    FHIRDefinedTypeCode_Value_DIAGNOSTIC_REPORT;
  static const Value DOCUMENT_MANIFEST =
    FHIRDefinedTypeCode_Value_DOCUMENT_MANIFEST;
  static const Value DOCUMENT_REFERENCE =
    FHIRDefinedTypeCode_Value_DOCUMENT_REFERENCE;
  static const Value DOMAIN_RESOURCE =
    FHIRDefinedTypeCode_Value_DOMAIN_RESOURCE;
  static const Value ELIGIBILITY_REQUEST =
    FHIRDefinedTypeCode_Value_ELIGIBILITY_REQUEST;
  static const Value ELIGIBILITY_RESPONSE =
    FHIRDefinedTypeCode_Value_ELIGIBILITY_RESPONSE;
  static const Value ENCOUNTER =
    FHIRDefinedTypeCode_Value_ENCOUNTER;
  static const Value ENDPOINT =
    FHIRDefinedTypeCode_Value_ENDPOINT;
  static const Value ENROLLMENT_REQUEST =
    FHIRDefinedTypeCode_Value_ENROLLMENT_REQUEST;
  static const Value ENROLLMENT_RESPONSE =
    FHIRDefinedTypeCode_Value_ENROLLMENT_RESPONSE;
  static const Value EPISODE_OF_CARE =
    FHIRDefinedTypeCode_Value_EPISODE_OF_CARE;
  static const Value EXPANSION_PROFILE =
    FHIRDefinedTypeCode_Value_EXPANSION_PROFILE;
  static const Value EXPLANATION_OF_BENEFIT =
    FHIRDefinedTypeCode_Value_EXPLANATION_OF_BENEFIT;
  static const Value FAMILY_MEMBER_HISTORY =
    FHIRDefinedTypeCode_Value_FAMILY_MEMBER_HISTORY;
  static const Value FLAG =
    FHIRDefinedTypeCode_Value_FLAG;
  static const Value GOAL =
    FHIRDefinedTypeCode_Value_GOAL;
  static const Value GRAPH_DEFINITION =
    FHIRDefinedTypeCode_Value_GRAPH_DEFINITION;
  static const Value GROUP =
    FHIRDefinedTypeCode_Value_GROUP;
  static const Value GUIDANCE_RESPONSE =
    FHIRDefinedTypeCode_Value_GUIDANCE_RESPONSE;
  static const Value HEALTHCARE_SERVICE =
    FHIRDefinedTypeCode_Value_HEALTHCARE_SERVICE;
  static const Value IMAGING_MANIFEST =
    FHIRDefinedTypeCode_Value_IMAGING_MANIFEST;
  static const Value IMAGING_STUDY =
    FHIRDefinedTypeCode_Value_IMAGING_STUDY;
  static const Value IMMUNIZATION =
    FHIRDefinedTypeCode_Value_IMMUNIZATION;
  static const Value IMMUNIZATION_RECOMMENDATION =
    FHIRDefinedTypeCode_Value_IMMUNIZATION_RECOMMENDATION;
  static const Value IMPLEMENTATION_GUIDE =
    FHIRDefinedTypeCode_Value_IMPLEMENTATION_GUIDE;
  static const Value LIBRARY =
    FHIRDefinedTypeCode_Value_LIBRARY;
  static const Value LINKAGE =
    FHIRDefinedTypeCode_Value_LINKAGE;
  static const Value LIST =
    FHIRDefinedTypeCode_Value_LIST;
  static const Value LOCATION =
    FHIRDefinedTypeCode_Value_LOCATION;
  static const Value MEASURE =
    FHIRDefinedTypeCode_Value_MEASURE;
  static const Value MEASURE_REPORT =
    FHIRDefinedTypeCode_Value_MEASURE_REPORT;
  static const Value MEDIA =
    FHIRDefinedTypeCode_Value_MEDIA;
  static const Value MEDICATION =
    FHIRDefinedTypeCode_Value_MEDICATION;
  static const Value MEDICATION_ADMINISTRATION =
    FHIRDefinedTypeCode_Value_MEDICATION_ADMINISTRATION;
  static const Value MEDICATION_DISPENSE =
    FHIRDefinedTypeCode_Value_MEDICATION_DISPENSE;
  static const Value MEDICATION_REQUEST =
    FHIRDefinedTypeCode_Value_MEDICATION_REQUEST;
  static const Value MEDICATION_STATEMENT =
    FHIRDefinedTypeCode_Value_MEDICATION_STATEMENT;
  static const Value MESSAGE_DEFINITION =
    FHIRDefinedTypeCode_Value_MESSAGE_DEFINITION;
  static const Value MESSAGE_HEADER =
    FHIRDefinedTypeCode_Value_MESSAGE_HEADER;
  static const Value NAMING_SYSTEM =
    FHIRDefinedTypeCode_Value_NAMING_SYSTEM;
  static const Value NUTRITION_ORDER =
    FHIRDefinedTypeCode_Value_NUTRITION_ORDER;
  static const Value OBSERVATION =
    FHIRDefinedTypeCode_Value_OBSERVATION;
  static const Value OPERATIONDEFINITION =
    FHIRDefinedTypeCode_Value_OPERATIONDEFINITION;
  static const Value OPERATION_OUTCOME =
    FHIRDefinedTypeCode_Value_OPERATION_OUTCOME;
  static const Value ORGANIZATION =
    FHIRDefinedTypeCode_Value_ORGANIZATION;
  static const Value PARAMETERS =
    FHIRDefinedTypeCode_Value_PARAMETERS;
  static const Value PATIENT =
    FHIRDefinedTypeCode_Value_PATIENT;
  static const Value PAYMENT_NOTICE =
    FHIRDefinedTypeCode_Value_PAYMENT_NOTICE;
  static const Value PAYMENT_RECONCILIATION =
    FHIRDefinedTypeCode_Value_PAYMENT_RECONCILIATION;
  static const Value PERSON =
    FHIRDefinedTypeCode_Value_PERSON;
  static const Value PLAN_DEFINITION =
    FHIRDefinedTypeCode_Value_PLAN_DEFINITION;
  static const Value PRACTITIONER =
    FHIRDefinedTypeCode_Value_PRACTITIONER;
  static const Value PRACTITIONER_ROLE =
    FHIRDefinedTypeCode_Value_PRACTITIONER_ROLE;
  static const Value PROCEDURE =
    FHIRDefinedTypeCode_Value_PROCEDURE;
  static const Value PROCEDURE_REQUEST =
    FHIRDefinedTypeCode_Value_PROCEDURE_REQUEST;
  static const Value PROCESS_REQUEST =
    FHIRDefinedTypeCode_Value_PROCESS_REQUEST;
  static const Value PROCESS_RESPONSE =
    FHIRDefinedTypeCode_Value_PROCESS_RESPONSE;
  static const Value PROVENANCE =
    FHIRDefinedTypeCode_Value_PROVENANCE;
  static const Value QUESTIONNAIRE =
    FHIRDefinedTypeCode_Value_QUESTIONNAIRE;
  static const Value QUESTIONNAIRE_RESPONSE =
    FHIRDefinedTypeCode_Value_QUESTIONNAIRE_RESPONSE;
  static const Value REFERRAL_REQUEST =
    FHIRDefinedTypeCode_Value_REFERRAL_REQUEST;
  static const Value RELATED_PERSON =
    FHIRDefinedTypeCode_Value_RELATED_PERSON;
  static const Value REQUEST_GROUP =
    FHIRDefinedTypeCode_Value_REQUEST_GROUP;
  static const Value RESEARCH_STUDY =
    FHIRDefinedTypeCode_Value_RESEARCH_STUDY;
  static const Value RESEARCH_SUBJECT =
    FHIRDefinedTypeCode_Value_RESEARCH_SUBJECT;
  static const Value RESOURCE =
    FHIRDefinedTypeCode_Value_RESOURCE;
  static const Value RISK_ASSESSMENT =
    FHIRDefinedTypeCode_Value_RISK_ASSESSMENT;
  static const Value SCHEDULE =
    FHIRDefinedTypeCode_Value_SCHEDULE;
  static const Value SEARCH_PARAMETER =
    FHIRDefinedTypeCode_Value_SEARCH_PARAMETER;
  static const Value SEQUENCE =
    FHIRDefinedTypeCode_Value_SEQUENCE;
  static const Value SERVICE_DEFINITION =
    FHIRDefinedTypeCode_Value_SERVICE_DEFINITION;
  static const Value SLOT =
    FHIRDefinedTypeCode_Value_SLOT;
  static const Value SPECIMEN =
    FHIRDefinedTypeCode_Value_SPECIMEN;
  static const Value STRUCTURE_DEFINITION =
    FHIRDefinedTypeCode_Value_STRUCTURE_DEFINITION;
  static const Value STRUCTURE_MAP =
    FHIRDefinedTypeCode_Value_STRUCTURE_MAP;
  static const Value SUBSCRIPTION =
    FHIRDefinedTypeCode_Value_SUBSCRIPTION;
  static const Value SUBSTANCE =
    FHIRDefinedTypeCode_Value_SUBSTANCE;
  static const Value SUPPLY_DELIVERY =
    FHIRDefinedTypeCode_Value_SUPPLY_DELIVERY;
  static const Value SUPPLY_REQUEST =
    FHIRDefinedTypeCode_Value_SUPPLY_REQUEST;
  static const Value TASK =
    FHIRDefinedTypeCode_Value_TASK;
  static const Value TEST_REPORT =
    FHIRDefinedTypeCode_Value_TEST_REPORT;
  static const Value TEST_SCRIPT =
    FHIRDefinedTypeCode_Value_TEST_SCRIPT;
  static const Value VALUE_SET =
    FHIRDefinedTypeCode_Value_VALUE_SET;
  static const Value VISION_PRESCRIPTION =
    FHIRDefinedTypeCode_Value_VISION_PRESCRIPTION;
  static inline bool Value_IsValid(int value) {
    return FHIRDefinedTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    FHIRDefinedTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    FHIRDefinedTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    FHIRDefinedTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return FHIRDefinedTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return FHIRDefinedTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return FHIRDefinedTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.FHIRDefinedTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::FHIRDefinedTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::FHIRDefinedTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.FHIRDefinedTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FHIRDefinedTypeExtCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.FHIRDefinedTypeExtCode) */ {
 public:
  FHIRDefinedTypeExtCode();
  virtual ~FHIRDefinedTypeExtCode();

  FHIRDefinedTypeExtCode(const FHIRDefinedTypeExtCode& from);

  inline FHIRDefinedTypeExtCode& operator=(const FHIRDefinedTypeExtCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FHIRDefinedTypeExtCode(FHIRDefinedTypeExtCode&& from) noexcept
    : FHIRDefinedTypeExtCode() {
    *this = ::std::move(from);
  }

  inline FHIRDefinedTypeExtCode& operator=(FHIRDefinedTypeExtCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FHIRDefinedTypeExtCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FHIRDefinedTypeExtCode* internal_default_instance() {
    return reinterpret_cast<const FHIRDefinedTypeExtCode*>(
               &_FHIRDefinedTypeExtCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    88;

  void Swap(FHIRDefinedTypeExtCode* other);
  friend void swap(FHIRDefinedTypeExtCode& a, FHIRDefinedTypeExtCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FHIRDefinedTypeExtCode* New() const final {
    return CreateMaybeMessage<FHIRDefinedTypeExtCode>(NULL);
  }

  FHIRDefinedTypeExtCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FHIRDefinedTypeExtCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FHIRDefinedTypeExtCode& from);
  void MergeFrom(const FHIRDefinedTypeExtCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FHIRDefinedTypeExtCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // string value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.FHIRDefinedTypeExtCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::fhir::stu3::proto::String* id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DefinitionStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.DefinitionStatusCode) */ {
 public:
  DefinitionStatusCode();
  virtual ~DefinitionStatusCode();

  DefinitionStatusCode(const DefinitionStatusCode& from);

  inline DefinitionStatusCode& operator=(const DefinitionStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DefinitionStatusCode(DefinitionStatusCode&& from) noexcept
    : DefinitionStatusCode() {
    *this = ::std::move(from);
  }

  inline DefinitionStatusCode& operator=(DefinitionStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DefinitionStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DefinitionStatusCode* internal_default_instance() {
    return reinterpret_cast<const DefinitionStatusCode*>(
               &_DefinitionStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    89;

  void Swap(DefinitionStatusCode* other);
  friend void swap(DefinitionStatusCode& a, DefinitionStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DefinitionStatusCode* New() const final {
    return CreateMaybeMessage<DefinitionStatusCode>(NULL);
  }

  DefinitionStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DefinitionStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DefinitionStatusCode& from);
  void MergeFrom(const DefinitionStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DefinitionStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DefinitionStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    DefinitionStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value DRAFT =
    DefinitionStatusCode_Value_DRAFT;
  static const Value ACTIVE =
    DefinitionStatusCode_Value_ACTIVE;
  static const Value WITHDRAWN =
    DefinitionStatusCode_Value_WITHDRAWN;
  static const Value UNKNOWN =
    DefinitionStatusCode_Value_UNKNOWN;
  static inline bool Value_IsValid(int value) {
    return DefinitionStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    DefinitionStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    DefinitionStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    DefinitionStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return DefinitionStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return DefinitionStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return DefinitionStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.DefinitionStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::DefinitionStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::DefinitionStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.DefinitionStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DefinitionTopicCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.DefinitionTopicCode) */ {
 public:
  DefinitionTopicCode();
  virtual ~DefinitionTopicCode();

  DefinitionTopicCode(const DefinitionTopicCode& from);

  inline DefinitionTopicCode& operator=(const DefinitionTopicCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DefinitionTopicCode(DefinitionTopicCode&& from) noexcept
    : DefinitionTopicCode() {
    *this = ::std::move(from);
  }

  inline DefinitionTopicCode& operator=(DefinitionTopicCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DefinitionTopicCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DefinitionTopicCode* internal_default_instance() {
    return reinterpret_cast<const DefinitionTopicCode*>(
               &_DefinitionTopicCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    90;

  void Swap(DefinitionTopicCode* other);
  friend void swap(DefinitionTopicCode& a, DefinitionTopicCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DefinitionTopicCode* New() const final {
    return CreateMaybeMessage<DefinitionTopicCode>(NULL);
  }

  DefinitionTopicCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DefinitionTopicCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DefinitionTopicCode& from);
  void MergeFrom(const DefinitionTopicCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DefinitionTopicCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DefinitionTopicCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    DefinitionTopicCode_Value_INVALID_UNINITIALIZED;
  static const Value TREATMENT =
    DefinitionTopicCode_Value_TREATMENT;
  static const Value EDUCATION =
    DefinitionTopicCode_Value_EDUCATION;
  static const Value ASSESSMENT =
    DefinitionTopicCode_Value_ASSESSMENT;
  static inline bool Value_IsValid(int value) {
    return DefinitionTopicCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    DefinitionTopicCode_Value_Value_MIN;
  static const Value Value_MAX =
    DefinitionTopicCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    DefinitionTopicCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return DefinitionTopicCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return DefinitionTopicCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return DefinitionTopicCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.DefinitionTopicCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::DefinitionTopicCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::DefinitionTopicCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.DefinitionTopicCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DetectedIssueSeverityCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.DetectedIssueSeverityCode) */ {
 public:
  DetectedIssueSeverityCode();
  virtual ~DetectedIssueSeverityCode();

  DetectedIssueSeverityCode(const DetectedIssueSeverityCode& from);

  inline DetectedIssueSeverityCode& operator=(const DetectedIssueSeverityCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetectedIssueSeverityCode(DetectedIssueSeverityCode&& from) noexcept
    : DetectedIssueSeverityCode() {
    *this = ::std::move(from);
  }

  inline DetectedIssueSeverityCode& operator=(DetectedIssueSeverityCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectedIssueSeverityCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetectedIssueSeverityCode* internal_default_instance() {
    return reinterpret_cast<const DetectedIssueSeverityCode*>(
               &_DetectedIssueSeverityCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    91;

  void Swap(DetectedIssueSeverityCode* other);
  friend void swap(DetectedIssueSeverityCode& a, DetectedIssueSeverityCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetectedIssueSeverityCode* New() const final {
    return CreateMaybeMessage<DetectedIssueSeverityCode>(NULL);
  }

  DetectedIssueSeverityCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DetectedIssueSeverityCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DetectedIssueSeverityCode& from);
  void MergeFrom(const DetectedIssueSeverityCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DetectedIssueSeverityCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DetectedIssueSeverityCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    DetectedIssueSeverityCode_Value_INVALID_UNINITIALIZED;
  static const Value HIGH =
    DetectedIssueSeverityCode_Value_HIGH;
  static const Value MODERATE =
    DetectedIssueSeverityCode_Value_MODERATE;
  static const Value LOW =
    DetectedIssueSeverityCode_Value_LOW;
  static inline bool Value_IsValid(int value) {
    return DetectedIssueSeverityCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    DetectedIssueSeverityCode_Value_Value_MIN;
  static const Value Value_MAX =
    DetectedIssueSeverityCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    DetectedIssueSeverityCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return DetectedIssueSeverityCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return DetectedIssueSeverityCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return DetectedIssueSeverityCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.DetectedIssueSeverityCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::DetectedIssueSeverityCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::DetectedIssueSeverityCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.DetectedIssueSeverityCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeviceUseStatementStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.DeviceUseStatementStatusCode) */ {
 public:
  DeviceUseStatementStatusCode();
  virtual ~DeviceUseStatementStatusCode();

  DeviceUseStatementStatusCode(const DeviceUseStatementStatusCode& from);

  inline DeviceUseStatementStatusCode& operator=(const DeviceUseStatementStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeviceUseStatementStatusCode(DeviceUseStatementStatusCode&& from) noexcept
    : DeviceUseStatementStatusCode() {
    *this = ::std::move(from);
  }

  inline DeviceUseStatementStatusCode& operator=(DeviceUseStatementStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeviceUseStatementStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeviceUseStatementStatusCode* internal_default_instance() {
    return reinterpret_cast<const DeviceUseStatementStatusCode*>(
               &_DeviceUseStatementStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    92;

  void Swap(DeviceUseStatementStatusCode* other);
  friend void swap(DeviceUseStatementStatusCode& a, DeviceUseStatementStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeviceUseStatementStatusCode* New() const final {
    return CreateMaybeMessage<DeviceUseStatementStatusCode>(NULL);
  }

  DeviceUseStatementStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeviceUseStatementStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeviceUseStatementStatusCode& from);
  void MergeFrom(const DeviceUseStatementStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeviceUseStatementStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DeviceUseStatementStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    DeviceUseStatementStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value ACTIVE =
    DeviceUseStatementStatusCode_Value_ACTIVE;
  static const Value COMPLETED =
    DeviceUseStatementStatusCode_Value_COMPLETED;
  static const Value ENTERED_IN_ERROR =
    DeviceUseStatementStatusCode_Value_ENTERED_IN_ERROR;
  static const Value INTENDED =
    DeviceUseStatementStatusCode_Value_INTENDED;
  static const Value STOPPED =
    DeviceUseStatementStatusCode_Value_STOPPED;
  static const Value ON_HOLD =
    DeviceUseStatementStatusCode_Value_ON_HOLD;
  static inline bool Value_IsValid(int value) {
    return DeviceUseStatementStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    DeviceUseStatementStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    DeviceUseStatementStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    DeviceUseStatementStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return DeviceUseStatementStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return DeviceUseStatementStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return DeviceUseStatementStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.DeviceUseStatementStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::DeviceUseStatementStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::DeviceUseStatementStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.DeviceUseStatementStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FHIRDeviceStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.FHIRDeviceStatusCode) */ {
 public:
  FHIRDeviceStatusCode();
  virtual ~FHIRDeviceStatusCode();

  FHIRDeviceStatusCode(const FHIRDeviceStatusCode& from);

  inline FHIRDeviceStatusCode& operator=(const FHIRDeviceStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FHIRDeviceStatusCode(FHIRDeviceStatusCode&& from) noexcept
    : FHIRDeviceStatusCode() {
    *this = ::std::move(from);
  }

  inline FHIRDeviceStatusCode& operator=(FHIRDeviceStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FHIRDeviceStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FHIRDeviceStatusCode* internal_default_instance() {
    return reinterpret_cast<const FHIRDeviceStatusCode*>(
               &_FHIRDeviceStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    93;

  void Swap(FHIRDeviceStatusCode* other);
  friend void swap(FHIRDeviceStatusCode& a, FHIRDeviceStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FHIRDeviceStatusCode* New() const final {
    return CreateMaybeMessage<FHIRDeviceStatusCode>(NULL);
  }

  FHIRDeviceStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FHIRDeviceStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FHIRDeviceStatusCode& from);
  void MergeFrom(const FHIRDeviceStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FHIRDeviceStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef FHIRDeviceStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    FHIRDeviceStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value ACTIVE =
    FHIRDeviceStatusCode_Value_ACTIVE;
  static const Value INACTIVE =
    FHIRDeviceStatusCode_Value_INACTIVE;
  static const Value ENTERED_IN_ERROR =
    FHIRDeviceStatusCode_Value_ENTERED_IN_ERROR;
  static const Value UNKNOWN =
    FHIRDeviceStatusCode_Value_UNKNOWN;
  static inline bool Value_IsValid(int value) {
    return FHIRDeviceStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    FHIRDeviceStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    FHIRDeviceStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    FHIRDeviceStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return FHIRDeviceStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return FHIRDeviceStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return FHIRDeviceStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.FHIRDeviceStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::FHIRDeviceStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::FHIRDeviceStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.FHIRDeviceStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DiagnosisRoleCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.DiagnosisRoleCode) */ {
 public:
  DiagnosisRoleCode();
  virtual ~DiagnosisRoleCode();

  DiagnosisRoleCode(const DiagnosisRoleCode& from);

  inline DiagnosisRoleCode& operator=(const DiagnosisRoleCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DiagnosisRoleCode(DiagnosisRoleCode&& from) noexcept
    : DiagnosisRoleCode() {
    *this = ::std::move(from);
  }

  inline DiagnosisRoleCode& operator=(DiagnosisRoleCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DiagnosisRoleCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DiagnosisRoleCode* internal_default_instance() {
    return reinterpret_cast<const DiagnosisRoleCode*>(
               &_DiagnosisRoleCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    94;

  void Swap(DiagnosisRoleCode* other);
  friend void swap(DiagnosisRoleCode& a, DiagnosisRoleCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DiagnosisRoleCode* New() const final {
    return CreateMaybeMessage<DiagnosisRoleCode>(NULL);
  }

  DiagnosisRoleCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DiagnosisRoleCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DiagnosisRoleCode& from);
  void MergeFrom(const DiagnosisRoleCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DiagnosisRoleCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DiagnosisRoleCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    DiagnosisRoleCode_Value_INVALID_UNINITIALIZED;
  static const Value AD =
    DiagnosisRoleCode_Value_AD;
  static const Value DD =
    DiagnosisRoleCode_Value_DD;
  static const Value CC =
    DiagnosisRoleCode_Value_CC;
  static const Value CM =
    DiagnosisRoleCode_Value_CM;
  static const Value PRE_OP =
    DiagnosisRoleCode_Value_PRE_OP;
  static const Value POST_OP =
    DiagnosisRoleCode_Value_POST_OP;
  static const Value BILLING =
    DiagnosisRoleCode_Value_BILLING;
  static inline bool Value_IsValid(int value) {
    return DiagnosisRoleCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    DiagnosisRoleCode_Value_Value_MIN;
  static const Value Value_MAX =
    DiagnosisRoleCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    DiagnosisRoleCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return DiagnosisRoleCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return DiagnosisRoleCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return DiagnosisRoleCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.DiagnosisRoleCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::DiagnosisRoleCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::DiagnosisRoleCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.DiagnosisRoleCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DiagnosticReportStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.DiagnosticReportStatusCode) */ {
 public:
  DiagnosticReportStatusCode();
  virtual ~DiagnosticReportStatusCode();

  DiagnosticReportStatusCode(const DiagnosticReportStatusCode& from);

  inline DiagnosticReportStatusCode& operator=(const DiagnosticReportStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DiagnosticReportStatusCode(DiagnosticReportStatusCode&& from) noexcept
    : DiagnosticReportStatusCode() {
    *this = ::std::move(from);
  }

  inline DiagnosticReportStatusCode& operator=(DiagnosticReportStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DiagnosticReportStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DiagnosticReportStatusCode* internal_default_instance() {
    return reinterpret_cast<const DiagnosticReportStatusCode*>(
               &_DiagnosticReportStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    95;

  void Swap(DiagnosticReportStatusCode* other);
  friend void swap(DiagnosticReportStatusCode& a, DiagnosticReportStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DiagnosticReportStatusCode* New() const final {
    return CreateMaybeMessage<DiagnosticReportStatusCode>(NULL);
  }

  DiagnosticReportStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DiagnosticReportStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DiagnosticReportStatusCode& from);
  void MergeFrom(const DiagnosticReportStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DiagnosticReportStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DiagnosticReportStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    DiagnosticReportStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value REGISTERED =
    DiagnosticReportStatusCode_Value_REGISTERED;
  static const Value PARTIAL =
    DiagnosticReportStatusCode_Value_PARTIAL;
  static const Value PRELIMINARY =
    DiagnosticReportStatusCode_Value_PRELIMINARY;
  static const Value FINAL =
    DiagnosticReportStatusCode_Value_FINAL;
  static const Value AMENDED =
    DiagnosticReportStatusCode_Value_AMENDED;
  static const Value CORRECTED =
    DiagnosticReportStatusCode_Value_CORRECTED;
  static const Value APPENDED =
    DiagnosticReportStatusCode_Value_APPENDED;
  static const Value CANCELLED =
    DiagnosticReportStatusCode_Value_CANCELLED;
  static const Value ENTERED_IN_ERROR =
    DiagnosticReportStatusCode_Value_ENTERED_IN_ERROR;
  static const Value UNKNOWN =
    DiagnosticReportStatusCode_Value_UNKNOWN;
  static inline bool Value_IsValid(int value) {
    return DiagnosticReportStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    DiagnosticReportStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    DiagnosticReportStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    DiagnosticReportStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return DiagnosticReportStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return DiagnosticReportStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return DiagnosticReportStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.DiagnosticReportStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::DiagnosticReportStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::DiagnosticReportStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.DiagnosticReportStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DigitalMediaTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.DigitalMediaTypeCode) */ {
 public:
  DigitalMediaTypeCode();
  virtual ~DigitalMediaTypeCode();

  DigitalMediaTypeCode(const DigitalMediaTypeCode& from);

  inline DigitalMediaTypeCode& operator=(const DigitalMediaTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DigitalMediaTypeCode(DigitalMediaTypeCode&& from) noexcept
    : DigitalMediaTypeCode() {
    *this = ::std::move(from);
  }

  inline DigitalMediaTypeCode& operator=(DigitalMediaTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DigitalMediaTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DigitalMediaTypeCode* internal_default_instance() {
    return reinterpret_cast<const DigitalMediaTypeCode*>(
               &_DigitalMediaTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    96;

  void Swap(DigitalMediaTypeCode* other);
  friend void swap(DigitalMediaTypeCode& a, DigitalMediaTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DigitalMediaTypeCode* New() const final {
    return CreateMaybeMessage<DigitalMediaTypeCode>(NULL);
  }

  DigitalMediaTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DigitalMediaTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DigitalMediaTypeCode& from);
  void MergeFrom(const DigitalMediaTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DigitalMediaTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DigitalMediaTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    DigitalMediaTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value PHOTO =
    DigitalMediaTypeCode_Value_PHOTO;
  static const Value VIDEO =
    DigitalMediaTypeCode_Value_VIDEO;
  static const Value AUDIO =
    DigitalMediaTypeCode_Value_AUDIO;
  static inline bool Value_IsValid(int value) {
    return DigitalMediaTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    DigitalMediaTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    DigitalMediaTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    DigitalMediaTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return DigitalMediaTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return DigitalMediaTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return DigitalMediaTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.DigitalMediaTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::DigitalMediaTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::DigitalMediaTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.DigitalMediaTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DocumentModeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.DocumentModeCode) */ {
 public:
  DocumentModeCode();
  virtual ~DocumentModeCode();

  DocumentModeCode(const DocumentModeCode& from);

  inline DocumentModeCode& operator=(const DocumentModeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DocumentModeCode(DocumentModeCode&& from) noexcept
    : DocumentModeCode() {
    *this = ::std::move(from);
  }

  inline DocumentModeCode& operator=(DocumentModeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DocumentModeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DocumentModeCode* internal_default_instance() {
    return reinterpret_cast<const DocumentModeCode*>(
               &_DocumentModeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    97;

  void Swap(DocumentModeCode* other);
  friend void swap(DocumentModeCode& a, DocumentModeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DocumentModeCode* New() const final {
    return CreateMaybeMessage<DocumentModeCode>(NULL);
  }

  DocumentModeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DocumentModeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DocumentModeCode& from);
  void MergeFrom(const DocumentModeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DocumentModeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DocumentModeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    DocumentModeCode_Value_INVALID_UNINITIALIZED;
  static const Value PRODUCER =
    DocumentModeCode_Value_PRODUCER;
  static const Value CONSUMER =
    DocumentModeCode_Value_CONSUMER;
  static inline bool Value_IsValid(int value) {
    return DocumentModeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    DocumentModeCode_Value_Value_MIN;
  static const Value Value_MAX =
    DocumentModeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    DocumentModeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return DocumentModeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return DocumentModeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return DocumentModeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.DocumentModeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::DocumentModeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::DocumentModeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.DocumentModeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DocumentReferenceStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.DocumentReferenceStatusCode) */ {
 public:
  DocumentReferenceStatusCode();
  virtual ~DocumentReferenceStatusCode();

  DocumentReferenceStatusCode(const DocumentReferenceStatusCode& from);

  inline DocumentReferenceStatusCode& operator=(const DocumentReferenceStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DocumentReferenceStatusCode(DocumentReferenceStatusCode&& from) noexcept
    : DocumentReferenceStatusCode() {
    *this = ::std::move(from);
  }

  inline DocumentReferenceStatusCode& operator=(DocumentReferenceStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DocumentReferenceStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DocumentReferenceStatusCode* internal_default_instance() {
    return reinterpret_cast<const DocumentReferenceStatusCode*>(
               &_DocumentReferenceStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    98;

  void Swap(DocumentReferenceStatusCode* other);
  friend void swap(DocumentReferenceStatusCode& a, DocumentReferenceStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DocumentReferenceStatusCode* New() const final {
    return CreateMaybeMessage<DocumentReferenceStatusCode>(NULL);
  }

  DocumentReferenceStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DocumentReferenceStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DocumentReferenceStatusCode& from);
  void MergeFrom(const DocumentReferenceStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DocumentReferenceStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DocumentReferenceStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    DocumentReferenceStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value CURRENT =
    DocumentReferenceStatusCode_Value_CURRENT;
  static const Value SUPERSEDED =
    DocumentReferenceStatusCode_Value_SUPERSEDED;
  static const Value ENTERED_IN_ERROR =
    DocumentReferenceStatusCode_Value_ENTERED_IN_ERROR;
  static inline bool Value_IsValid(int value) {
    return DocumentReferenceStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    DocumentReferenceStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    DocumentReferenceStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    DocumentReferenceStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return DocumentReferenceStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return DocumentReferenceStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return DocumentReferenceStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.DocumentReferenceStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::DocumentReferenceStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::DocumentReferenceStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.DocumentReferenceStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DocumentRelationshipTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.DocumentRelationshipTypeCode) */ {
 public:
  DocumentRelationshipTypeCode();
  virtual ~DocumentRelationshipTypeCode();

  DocumentRelationshipTypeCode(const DocumentRelationshipTypeCode& from);

  inline DocumentRelationshipTypeCode& operator=(const DocumentRelationshipTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DocumentRelationshipTypeCode(DocumentRelationshipTypeCode&& from) noexcept
    : DocumentRelationshipTypeCode() {
    *this = ::std::move(from);
  }

  inline DocumentRelationshipTypeCode& operator=(DocumentRelationshipTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DocumentRelationshipTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DocumentRelationshipTypeCode* internal_default_instance() {
    return reinterpret_cast<const DocumentRelationshipTypeCode*>(
               &_DocumentRelationshipTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    99;

  void Swap(DocumentRelationshipTypeCode* other);
  friend void swap(DocumentRelationshipTypeCode& a, DocumentRelationshipTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DocumentRelationshipTypeCode* New() const final {
    return CreateMaybeMessage<DocumentRelationshipTypeCode>(NULL);
  }

  DocumentRelationshipTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DocumentRelationshipTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DocumentRelationshipTypeCode& from);
  void MergeFrom(const DocumentRelationshipTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DocumentRelationshipTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DocumentRelationshipTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    DocumentRelationshipTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value REPLACES =
    DocumentRelationshipTypeCode_Value_REPLACES;
  static const Value TRANSFORMS =
    DocumentRelationshipTypeCode_Value_TRANSFORMS;
  static const Value SIGNS =
    DocumentRelationshipTypeCode_Value_SIGNS;
  static const Value APPENDS =
    DocumentRelationshipTypeCode_Value_APPENDS;
  static inline bool Value_IsValid(int value) {
    return DocumentRelationshipTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    DocumentRelationshipTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    DocumentRelationshipTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    DocumentRelationshipTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return DocumentRelationshipTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return DocumentRelationshipTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return DocumentRelationshipTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.DocumentRelationshipTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::DocumentRelationshipTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::DocumentRelationshipTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.DocumentRelationshipTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AdmitSourceCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.AdmitSourceCode) */ {
 public:
  AdmitSourceCode();
  virtual ~AdmitSourceCode();

  AdmitSourceCode(const AdmitSourceCode& from);

  inline AdmitSourceCode& operator=(const AdmitSourceCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AdmitSourceCode(AdmitSourceCode&& from) noexcept
    : AdmitSourceCode() {
    *this = ::std::move(from);
  }

  inline AdmitSourceCode& operator=(AdmitSourceCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AdmitSourceCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AdmitSourceCode* internal_default_instance() {
    return reinterpret_cast<const AdmitSourceCode*>(
               &_AdmitSourceCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    100;

  void Swap(AdmitSourceCode* other);
  friend void swap(AdmitSourceCode& a, AdmitSourceCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AdmitSourceCode* New() const final {
    return CreateMaybeMessage<AdmitSourceCode>(NULL);
  }

  AdmitSourceCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AdmitSourceCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AdmitSourceCode& from);
  void MergeFrom(const AdmitSourceCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AdmitSourceCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AdmitSourceCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    AdmitSourceCode_Value_INVALID_UNINITIALIZED;
  static const Value HOSP_TRANS =
    AdmitSourceCode_Value_HOSP_TRANS;
  static const Value EMD =
    AdmitSourceCode_Value_EMD;
  static const Value OUTP =
    AdmitSourceCode_Value_OUTP;
  static const Value BORN =
    AdmitSourceCode_Value_BORN;
  static const Value GP =
    AdmitSourceCode_Value_GP;
  static const Value MP =
    AdmitSourceCode_Value_MP;
  static const Value NURSING =
    AdmitSourceCode_Value_NURSING;
  static const Value PSYCH =
    AdmitSourceCode_Value_PSYCH;
  static const Value REHAB =
    AdmitSourceCode_Value_REHAB;
  static const Value OTHER =
    AdmitSourceCode_Value_OTHER;
  static inline bool Value_IsValid(int value) {
    return AdmitSourceCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    AdmitSourceCode_Value_Value_MIN;
  static const Value Value_MAX =
    AdmitSourceCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    AdmitSourceCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return AdmitSourceCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return AdmitSourceCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return AdmitSourceCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.AdmitSourceCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::AdmitSourceCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::AdmitSourceCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.AdmitSourceCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DietCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.DietCode) */ {
 public:
  DietCode();
  virtual ~DietCode();

  DietCode(const DietCode& from);

  inline DietCode& operator=(const DietCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DietCode(DietCode&& from) noexcept
    : DietCode() {
    *this = ::std::move(from);
  }

  inline DietCode& operator=(DietCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DietCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DietCode* internal_default_instance() {
    return reinterpret_cast<const DietCode*>(
               &_DietCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    101;

  void Swap(DietCode* other);
  friend void swap(DietCode& a, DietCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DietCode* New() const final {
    return CreateMaybeMessage<DietCode>(NULL);
  }

  DietCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DietCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DietCode& from);
  void MergeFrom(const DietCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DietCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DietCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    DietCode_Value_INVALID_UNINITIALIZED;
  static const Value VEGETARIAN =
    DietCode_Value_VEGETARIAN;
  static const Value DAIRY_FREE =
    DietCode_Value_DAIRY_FREE;
  static const Value NUT_FREE =
    DietCode_Value_NUT_FREE;
  static const Value GLUTEN_FREE =
    DietCode_Value_GLUTEN_FREE;
  static const Value VEGAN =
    DietCode_Value_VEGAN;
  static const Value HALAL =
    DietCode_Value_HALAL;
  static const Value KOSHER =
    DietCode_Value_KOSHER;
  static inline bool Value_IsValid(int value) {
    return DietCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    DietCode_Value_Value_MIN;
  static const Value Value_MAX =
    DietCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    DietCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return DietCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return DietCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return DietCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.DietCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::DietCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::DietCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.DietCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DischargeDispositionCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.DischargeDispositionCode) */ {
 public:
  DischargeDispositionCode();
  virtual ~DischargeDispositionCode();

  DischargeDispositionCode(const DischargeDispositionCode& from);

  inline DischargeDispositionCode& operator=(const DischargeDispositionCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DischargeDispositionCode(DischargeDispositionCode&& from) noexcept
    : DischargeDispositionCode() {
    *this = ::std::move(from);
  }

  inline DischargeDispositionCode& operator=(DischargeDispositionCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DischargeDispositionCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DischargeDispositionCode* internal_default_instance() {
    return reinterpret_cast<const DischargeDispositionCode*>(
               &_DischargeDispositionCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    102;

  void Swap(DischargeDispositionCode* other);
  friend void swap(DischargeDispositionCode& a, DischargeDispositionCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DischargeDispositionCode* New() const final {
    return CreateMaybeMessage<DischargeDispositionCode>(NULL);
  }

  DischargeDispositionCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DischargeDispositionCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DischargeDispositionCode& from);
  void MergeFrom(const DischargeDispositionCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DischargeDispositionCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DischargeDispositionCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    DischargeDispositionCode_Value_INVALID_UNINITIALIZED;
  static const Value HOME =
    DischargeDispositionCode_Value_HOME;
  static const Value OTHER_HCF =
    DischargeDispositionCode_Value_OTHER_HCF;
  static const Value HOSP =
    DischargeDispositionCode_Value_HOSP;
  static const Value LONG =
    DischargeDispositionCode_Value_LONG;
  static const Value AADVICE =
    DischargeDispositionCode_Value_AADVICE;
  static const Value EXP =
    DischargeDispositionCode_Value_EXP;
  static const Value PSY =
    DischargeDispositionCode_Value_PSY;
  static const Value REHAB =
    DischargeDispositionCode_Value_REHAB;
  static const Value SNF =
    DischargeDispositionCode_Value_SNF;
  static const Value OTH =
    DischargeDispositionCode_Value_OTH;
  static inline bool Value_IsValid(int value) {
    return DischargeDispositionCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    DischargeDispositionCode_Value_Value_MIN;
  static const Value Value_MAX =
    DischargeDispositionCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    DischargeDispositionCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return DischargeDispositionCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return DischargeDispositionCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return DischargeDispositionCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.DischargeDispositionCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::DischargeDispositionCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::DischargeDispositionCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.DischargeDispositionCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EncounterLocationStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.EncounterLocationStatusCode) */ {
 public:
  EncounterLocationStatusCode();
  virtual ~EncounterLocationStatusCode();

  EncounterLocationStatusCode(const EncounterLocationStatusCode& from);

  inline EncounterLocationStatusCode& operator=(const EncounterLocationStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EncounterLocationStatusCode(EncounterLocationStatusCode&& from) noexcept
    : EncounterLocationStatusCode() {
    *this = ::std::move(from);
  }

  inline EncounterLocationStatusCode& operator=(EncounterLocationStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EncounterLocationStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EncounterLocationStatusCode* internal_default_instance() {
    return reinterpret_cast<const EncounterLocationStatusCode*>(
               &_EncounterLocationStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    103;

  void Swap(EncounterLocationStatusCode* other);
  friend void swap(EncounterLocationStatusCode& a, EncounterLocationStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EncounterLocationStatusCode* New() const final {
    return CreateMaybeMessage<EncounterLocationStatusCode>(NULL);
  }

  EncounterLocationStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EncounterLocationStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EncounterLocationStatusCode& from);
  void MergeFrom(const EncounterLocationStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EncounterLocationStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef EncounterLocationStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    EncounterLocationStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value PLANNED =
    EncounterLocationStatusCode_Value_PLANNED;
  static const Value ACTIVE =
    EncounterLocationStatusCode_Value_ACTIVE;
  static const Value RESERVED =
    EncounterLocationStatusCode_Value_RESERVED;
  static const Value COMPLETED =
    EncounterLocationStatusCode_Value_COMPLETED;
  static inline bool Value_IsValid(int value) {
    return EncounterLocationStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    EncounterLocationStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    EncounterLocationStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    EncounterLocationStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return EncounterLocationStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return EncounterLocationStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return EncounterLocationStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.EncounterLocationStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::EncounterLocationStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::EncounterLocationStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.EncounterLocationStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SpecialArrangementsCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.SpecialArrangementsCode) */ {
 public:
  SpecialArrangementsCode();
  virtual ~SpecialArrangementsCode();

  SpecialArrangementsCode(const SpecialArrangementsCode& from);

  inline SpecialArrangementsCode& operator=(const SpecialArrangementsCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SpecialArrangementsCode(SpecialArrangementsCode&& from) noexcept
    : SpecialArrangementsCode() {
    *this = ::std::move(from);
  }

  inline SpecialArrangementsCode& operator=(SpecialArrangementsCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SpecialArrangementsCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SpecialArrangementsCode* internal_default_instance() {
    return reinterpret_cast<const SpecialArrangementsCode*>(
               &_SpecialArrangementsCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    104;

  void Swap(SpecialArrangementsCode* other);
  friend void swap(SpecialArrangementsCode& a, SpecialArrangementsCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SpecialArrangementsCode* New() const final {
    return CreateMaybeMessage<SpecialArrangementsCode>(NULL);
  }

  SpecialArrangementsCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SpecialArrangementsCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SpecialArrangementsCode& from);
  void MergeFrom(const SpecialArrangementsCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpecialArrangementsCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SpecialArrangementsCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    SpecialArrangementsCode_Value_INVALID_UNINITIALIZED;
  static const Value WHEEL =
    SpecialArrangementsCode_Value_WHEEL;
  static const Value ADD_BED =
    SpecialArrangementsCode_Value_ADD_BED;
  static const Value INT =
    SpecialArrangementsCode_Value_INT;
  static const Value ATT =
    SpecialArrangementsCode_Value_ATT;
  static const Value DOG =
    SpecialArrangementsCode_Value_DOG;
  static inline bool Value_IsValid(int value) {
    return SpecialArrangementsCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    SpecialArrangementsCode_Value_Value_MIN;
  static const Value Value_MAX =
    SpecialArrangementsCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    SpecialArrangementsCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return SpecialArrangementsCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return SpecialArrangementsCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return SpecialArrangementsCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.SpecialArrangementsCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::SpecialArrangementsCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::SpecialArrangementsCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.SpecialArrangementsCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EncounterStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.EncounterStatusCode) */ {
 public:
  EncounterStatusCode();
  virtual ~EncounterStatusCode();

  EncounterStatusCode(const EncounterStatusCode& from);

  inline EncounterStatusCode& operator=(const EncounterStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EncounterStatusCode(EncounterStatusCode&& from) noexcept
    : EncounterStatusCode() {
    *this = ::std::move(from);
  }

  inline EncounterStatusCode& operator=(EncounterStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EncounterStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EncounterStatusCode* internal_default_instance() {
    return reinterpret_cast<const EncounterStatusCode*>(
               &_EncounterStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    105;

  void Swap(EncounterStatusCode* other);
  friend void swap(EncounterStatusCode& a, EncounterStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EncounterStatusCode* New() const final {
    return CreateMaybeMessage<EncounterStatusCode>(NULL);
  }

  EncounterStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EncounterStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EncounterStatusCode& from);
  void MergeFrom(const EncounterStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EncounterStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef EncounterStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    EncounterStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value PLANNED =
    EncounterStatusCode_Value_PLANNED;
  static const Value ARRIVED =
    EncounterStatusCode_Value_ARRIVED;
  static const Value TRIAGED =
    EncounterStatusCode_Value_TRIAGED;
  static const Value IN_PROGRESS =
    EncounterStatusCode_Value_IN_PROGRESS;
  static const Value ONLEAVE =
    EncounterStatusCode_Value_ONLEAVE;
  static const Value FINISHED =
    EncounterStatusCode_Value_FINISHED;
  static const Value CANCELLED =
    EncounterStatusCode_Value_CANCELLED;
  static const Value ENTERED_IN_ERROR =
    EncounterStatusCode_Value_ENTERED_IN_ERROR;
  static const Value UNKNOWN =
    EncounterStatusCode_Value_UNKNOWN;
  static inline bool Value_IsValid(int value) {
    return EncounterStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    EncounterStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    EncounterStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    EncounterStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return EncounterStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return EncounterStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return EncounterStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.EncounterStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::EncounterStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::EncounterStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.EncounterStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EncounterTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.EncounterTypeCode) */ {
 public:
  EncounterTypeCode();
  virtual ~EncounterTypeCode();

  EncounterTypeCode(const EncounterTypeCode& from);

  inline EncounterTypeCode& operator=(const EncounterTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EncounterTypeCode(EncounterTypeCode&& from) noexcept
    : EncounterTypeCode() {
    *this = ::std::move(from);
  }

  inline EncounterTypeCode& operator=(EncounterTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EncounterTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EncounterTypeCode* internal_default_instance() {
    return reinterpret_cast<const EncounterTypeCode*>(
               &_EncounterTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    106;

  void Swap(EncounterTypeCode* other);
  friend void swap(EncounterTypeCode& a, EncounterTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EncounterTypeCode* New() const final {
    return CreateMaybeMessage<EncounterTypeCode>(NULL);
  }

  EncounterTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EncounterTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EncounterTypeCode& from);
  void MergeFrom(const EncounterTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EncounterTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef EncounterTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    EncounterTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value ADMS =
    EncounterTypeCode_Value_ADMS;
  static const Value BD_BM_CLIN =
    EncounterTypeCode_Value_BD_BM_CLIN;
  static const Value CCS60 =
    EncounterTypeCode_Value_CCS60;
  static const Value OKI =
    EncounterTypeCode_Value_OKI;
  static inline bool Value_IsValid(int value) {
    return EncounterTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    EncounterTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    EncounterTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    EncounterTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return EncounterTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return EncounterTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return EncounterTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.EncounterTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::EncounterTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::EncounterTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.EncounterTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EndpointStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.EndpointStatusCode) */ {
 public:
  EndpointStatusCode();
  virtual ~EndpointStatusCode();

  EndpointStatusCode(const EndpointStatusCode& from);

  inline EndpointStatusCode& operator=(const EndpointStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EndpointStatusCode(EndpointStatusCode&& from) noexcept
    : EndpointStatusCode() {
    *this = ::std::move(from);
  }

  inline EndpointStatusCode& operator=(EndpointStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EndpointStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EndpointStatusCode* internal_default_instance() {
    return reinterpret_cast<const EndpointStatusCode*>(
               &_EndpointStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    107;

  void Swap(EndpointStatusCode* other);
  friend void swap(EndpointStatusCode& a, EndpointStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EndpointStatusCode* New() const final {
    return CreateMaybeMessage<EndpointStatusCode>(NULL);
  }

  EndpointStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EndpointStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EndpointStatusCode& from);
  void MergeFrom(const EndpointStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EndpointStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef EndpointStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    EndpointStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value ACTIVE =
    EndpointStatusCode_Value_ACTIVE;
  static const Value SUSPENDED =
    EndpointStatusCode_Value_SUSPENDED;
  static const Value ERROR =
    EndpointStatusCode_Value_ERROR;
  static const Value OFF =
    EndpointStatusCode_Value_OFF;
  static const Value ENTERED_IN_ERROR =
    EndpointStatusCode_Value_ENTERED_IN_ERROR;
  static const Value TEST =
    EndpointStatusCode_Value_TEST;
  static inline bool Value_IsValid(int value) {
    return EndpointStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    EndpointStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    EndpointStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    EndpointStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return EndpointStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return EndpointStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return EndpointStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.EndpointStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::EndpointStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::EndpointStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.EndpointStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EntityNamePartQualifierCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.EntityNamePartQualifierCode) */ {
 public:
  EntityNamePartQualifierCode();
  virtual ~EntityNamePartQualifierCode();

  EntityNamePartQualifierCode(const EntityNamePartQualifierCode& from);

  inline EntityNamePartQualifierCode& operator=(const EntityNamePartQualifierCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityNamePartQualifierCode(EntityNamePartQualifierCode&& from) noexcept
    : EntityNamePartQualifierCode() {
    *this = ::std::move(from);
  }

  inline EntityNamePartQualifierCode& operator=(EntityNamePartQualifierCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityNamePartQualifierCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EntityNamePartQualifierCode* internal_default_instance() {
    return reinterpret_cast<const EntityNamePartQualifierCode*>(
               &_EntityNamePartQualifierCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    108;

  void Swap(EntityNamePartQualifierCode* other);
  friend void swap(EntityNamePartQualifierCode& a, EntityNamePartQualifierCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityNamePartQualifierCode* New() const final {
    return CreateMaybeMessage<EntityNamePartQualifierCode>(NULL);
  }

  EntityNamePartQualifierCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EntityNamePartQualifierCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EntityNamePartQualifierCode& from);
  void MergeFrom(const EntityNamePartQualifierCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EntityNamePartQualifierCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef EntityNamePartQualifierCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    EntityNamePartQualifierCode_Value_INVALID_UNINITIALIZED;
  static const Value LS =
    EntityNamePartQualifierCode_Value_LS;
  static const Value AC =
    EntityNamePartQualifierCode_Value_AC;
  static const Value NB =
    EntityNamePartQualifierCode_Value_NB;
  static const Value PR =
    EntityNamePartQualifierCode_Value_PR;
  static const Value HON =
    EntityNamePartQualifierCode_Value_HON;
  static const Value BR =
    EntityNamePartQualifierCode_Value_BR;
  static const Value AD =
    EntityNamePartQualifierCode_Value_AD;
  static const Value SP =
    EntityNamePartQualifierCode_Value_SP;
  static const Value MID =
    EntityNamePartQualifierCode_Value_MID;
  static const Value CL =
    EntityNamePartQualifierCode_Value_CL;
  static const Value IN =
    EntityNamePartQualifierCode_Value_IN;
  static inline bool Value_IsValid(int value) {
    return EntityNamePartQualifierCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    EntityNamePartQualifierCode_Value_Value_MIN;
  static const Value Value_MAX =
    EntityNamePartQualifierCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    EntityNamePartQualifierCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return EntityNamePartQualifierCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return EntityNamePartQualifierCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return EntityNamePartQualifierCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.EntityNamePartQualifierCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::EntityNamePartQualifierCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::EntityNamePartQualifierCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.EntityNamePartQualifierCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnteralFormulaAdditiveTypeCodeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.EnteralFormulaAdditiveTypeCodeCode) */ {
 public:
  EnteralFormulaAdditiveTypeCodeCode();
  virtual ~EnteralFormulaAdditiveTypeCodeCode();

  EnteralFormulaAdditiveTypeCodeCode(const EnteralFormulaAdditiveTypeCodeCode& from);

  inline EnteralFormulaAdditiveTypeCodeCode& operator=(const EnteralFormulaAdditiveTypeCodeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnteralFormulaAdditiveTypeCodeCode(EnteralFormulaAdditiveTypeCodeCode&& from) noexcept
    : EnteralFormulaAdditiveTypeCodeCode() {
    *this = ::std::move(from);
  }

  inline EnteralFormulaAdditiveTypeCodeCode& operator=(EnteralFormulaAdditiveTypeCodeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnteralFormulaAdditiveTypeCodeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EnteralFormulaAdditiveTypeCodeCode* internal_default_instance() {
    return reinterpret_cast<const EnteralFormulaAdditiveTypeCodeCode*>(
               &_EnteralFormulaAdditiveTypeCodeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    109;

  void Swap(EnteralFormulaAdditiveTypeCodeCode* other);
  friend void swap(EnteralFormulaAdditiveTypeCodeCode& a, EnteralFormulaAdditiveTypeCodeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnteralFormulaAdditiveTypeCodeCode* New() const final {
    return CreateMaybeMessage<EnteralFormulaAdditiveTypeCodeCode>(NULL);
  }

  EnteralFormulaAdditiveTypeCodeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EnteralFormulaAdditiveTypeCodeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EnteralFormulaAdditiveTypeCodeCode& from);
  void MergeFrom(const EnteralFormulaAdditiveTypeCodeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EnteralFormulaAdditiveTypeCodeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef EnteralFormulaAdditiveTypeCodeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    EnteralFormulaAdditiveTypeCodeCode_Value_INVALID_UNINITIALIZED;
  static const Value LIPID =
    EnteralFormulaAdditiveTypeCodeCode_Value_LIPID;
  static const Value PROTEIN =
    EnteralFormulaAdditiveTypeCodeCode_Value_PROTEIN;
  static const Value CARBOHYDRATE =
    EnteralFormulaAdditiveTypeCodeCode_Value_CARBOHYDRATE;
  static const Value FIBER =
    EnteralFormulaAdditiveTypeCodeCode_Value_FIBER;
  static const Value WATER =
    EnteralFormulaAdditiveTypeCodeCode_Value_WATER;
  static inline bool Value_IsValid(int value) {
    return EnteralFormulaAdditiveTypeCodeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    EnteralFormulaAdditiveTypeCodeCode_Value_Value_MIN;
  static const Value Value_MAX =
    EnteralFormulaAdditiveTypeCodeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    EnteralFormulaAdditiveTypeCodeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return EnteralFormulaAdditiveTypeCodeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return EnteralFormulaAdditiveTypeCodeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return EnteralFormulaAdditiveTypeCodeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.EnteralFormulaAdditiveTypeCodeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::EnteralFormulaAdditiveTypeCodeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::EnteralFormulaAdditiveTypeCodeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.EnteralFormulaAdditiveTypeCodeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EpisodeOfCareStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.EpisodeOfCareStatusCode) */ {
 public:
  EpisodeOfCareStatusCode();
  virtual ~EpisodeOfCareStatusCode();

  EpisodeOfCareStatusCode(const EpisodeOfCareStatusCode& from);

  inline EpisodeOfCareStatusCode& operator=(const EpisodeOfCareStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EpisodeOfCareStatusCode(EpisodeOfCareStatusCode&& from) noexcept
    : EpisodeOfCareStatusCode() {
    *this = ::std::move(from);
  }

  inline EpisodeOfCareStatusCode& operator=(EpisodeOfCareStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EpisodeOfCareStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EpisodeOfCareStatusCode* internal_default_instance() {
    return reinterpret_cast<const EpisodeOfCareStatusCode*>(
               &_EpisodeOfCareStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    110;

  void Swap(EpisodeOfCareStatusCode* other);
  friend void swap(EpisodeOfCareStatusCode& a, EpisodeOfCareStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EpisodeOfCareStatusCode* New() const final {
    return CreateMaybeMessage<EpisodeOfCareStatusCode>(NULL);
  }

  EpisodeOfCareStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EpisodeOfCareStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EpisodeOfCareStatusCode& from);
  void MergeFrom(const EpisodeOfCareStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EpisodeOfCareStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef EpisodeOfCareStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    EpisodeOfCareStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value PLANNED =
    EpisodeOfCareStatusCode_Value_PLANNED;
  static const Value WAITLIST =
    EpisodeOfCareStatusCode_Value_WAITLIST;
  static const Value ACTIVE =
    EpisodeOfCareStatusCode_Value_ACTIVE;
  static const Value ONHOLD =
    EpisodeOfCareStatusCode_Value_ONHOLD;
  static const Value FINISHED =
    EpisodeOfCareStatusCode_Value_FINISHED;
  static const Value CANCELLED =
    EpisodeOfCareStatusCode_Value_CANCELLED;
  static const Value ENTERED_IN_ERROR =
    EpisodeOfCareStatusCode_Value_ENTERED_IN_ERROR;
  static inline bool Value_IsValid(int value) {
    return EpisodeOfCareStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    EpisodeOfCareStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    EpisodeOfCareStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    EpisodeOfCareStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return EpisodeOfCareStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return EpisodeOfCareStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return EpisodeOfCareStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.EpisodeOfCareStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::EpisodeOfCareStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::EpisodeOfCareStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.EpisodeOfCareStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EpisodeOfCareTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.EpisodeOfCareTypeCode) */ {
 public:
  EpisodeOfCareTypeCode();
  virtual ~EpisodeOfCareTypeCode();

  EpisodeOfCareTypeCode(const EpisodeOfCareTypeCode& from);

  inline EpisodeOfCareTypeCode& operator=(const EpisodeOfCareTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EpisodeOfCareTypeCode(EpisodeOfCareTypeCode&& from) noexcept
    : EpisodeOfCareTypeCode() {
    *this = ::std::move(from);
  }

  inline EpisodeOfCareTypeCode& operator=(EpisodeOfCareTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EpisodeOfCareTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EpisodeOfCareTypeCode* internal_default_instance() {
    return reinterpret_cast<const EpisodeOfCareTypeCode*>(
               &_EpisodeOfCareTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    111;

  void Swap(EpisodeOfCareTypeCode* other);
  friend void swap(EpisodeOfCareTypeCode& a, EpisodeOfCareTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EpisodeOfCareTypeCode* New() const final {
    return CreateMaybeMessage<EpisodeOfCareTypeCode>(NULL);
  }

  EpisodeOfCareTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EpisodeOfCareTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EpisodeOfCareTypeCode& from);
  void MergeFrom(const EpisodeOfCareTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EpisodeOfCareTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef EpisodeOfCareTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    EpisodeOfCareTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value HACC =
    EpisodeOfCareTypeCode_Value_HACC;
  static const Value PAC =
    EpisodeOfCareTypeCode_Value_PAC;
  static const Value DIAB =
    EpisodeOfCareTypeCode_Value_DIAB;
  static const Value DA =
    EpisodeOfCareTypeCode_Value_DA;
  static const Value CACP =
    EpisodeOfCareTypeCode_Value_CACP;
  static inline bool Value_IsValid(int value) {
    return EpisodeOfCareTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    EpisodeOfCareTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    EpisodeOfCareTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    EpisodeOfCareTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return EpisodeOfCareTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return EpisodeOfCareTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return EpisodeOfCareTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.EpisodeOfCareTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::EpisodeOfCareTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::EpisodeOfCareTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.EpisodeOfCareTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EventCapabilityModeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.EventCapabilityModeCode) */ {
 public:
  EventCapabilityModeCode();
  virtual ~EventCapabilityModeCode();

  EventCapabilityModeCode(const EventCapabilityModeCode& from);

  inline EventCapabilityModeCode& operator=(const EventCapabilityModeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EventCapabilityModeCode(EventCapabilityModeCode&& from) noexcept
    : EventCapabilityModeCode() {
    *this = ::std::move(from);
  }

  inline EventCapabilityModeCode& operator=(EventCapabilityModeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EventCapabilityModeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EventCapabilityModeCode* internal_default_instance() {
    return reinterpret_cast<const EventCapabilityModeCode*>(
               &_EventCapabilityModeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    112;

  void Swap(EventCapabilityModeCode* other);
  friend void swap(EventCapabilityModeCode& a, EventCapabilityModeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EventCapabilityModeCode* New() const final {
    return CreateMaybeMessage<EventCapabilityModeCode>(NULL);
  }

  EventCapabilityModeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EventCapabilityModeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EventCapabilityModeCode& from);
  void MergeFrom(const EventCapabilityModeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EventCapabilityModeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef EventCapabilityModeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    EventCapabilityModeCode_Value_INVALID_UNINITIALIZED;
  static const Value SENDER =
    EventCapabilityModeCode_Value_SENDER;
  static const Value RECEIVER =
    EventCapabilityModeCode_Value_RECEIVER;
  static inline bool Value_IsValid(int value) {
    return EventCapabilityModeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    EventCapabilityModeCode_Value_Value_MIN;
  static const Value Value_MAX =
    EventCapabilityModeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    EventCapabilityModeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return EventCapabilityModeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return EventCapabilityModeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return EventCapabilityModeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.EventCapabilityModeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::EventCapabilityModeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::EventCapabilityModeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.EventCapabilityModeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EventStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.EventStatusCode) */ {
 public:
  EventStatusCode();
  virtual ~EventStatusCode();

  EventStatusCode(const EventStatusCode& from);

  inline EventStatusCode& operator=(const EventStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EventStatusCode(EventStatusCode&& from) noexcept
    : EventStatusCode() {
    *this = ::std::move(from);
  }

  inline EventStatusCode& operator=(EventStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EventStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EventStatusCode* internal_default_instance() {
    return reinterpret_cast<const EventStatusCode*>(
               &_EventStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    113;

  void Swap(EventStatusCode* other);
  friend void swap(EventStatusCode& a, EventStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EventStatusCode* New() const final {
    return CreateMaybeMessage<EventStatusCode>(NULL);
  }

  EventStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EventStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EventStatusCode& from);
  void MergeFrom(const EventStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EventStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef EventStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    EventStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value PREPARATION =
    EventStatusCode_Value_PREPARATION;
  static const Value IN_PROGRESS =
    EventStatusCode_Value_IN_PROGRESS;
  static const Value SUSPENDED =
    EventStatusCode_Value_SUSPENDED;
  static const Value ABORTED =
    EventStatusCode_Value_ABORTED;
  static const Value COMPLETED =
    EventStatusCode_Value_COMPLETED;
  static const Value ENTERED_IN_ERROR =
    EventStatusCode_Value_ENTERED_IN_ERROR;
  static const Value UNKNOWN =
    EventStatusCode_Value_UNKNOWN;
  static inline bool Value_IsValid(int value) {
    return EventStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    EventStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    EventStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    EventStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return EventStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return EventStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return EventStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.EventStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::EventStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::EventStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.EventStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClaimPayeeResourceTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ClaimPayeeResourceTypeCode) */ {
 public:
  ClaimPayeeResourceTypeCode();
  virtual ~ClaimPayeeResourceTypeCode();

  ClaimPayeeResourceTypeCode(const ClaimPayeeResourceTypeCode& from);

  inline ClaimPayeeResourceTypeCode& operator=(const ClaimPayeeResourceTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClaimPayeeResourceTypeCode(ClaimPayeeResourceTypeCode&& from) noexcept
    : ClaimPayeeResourceTypeCode() {
    *this = ::std::move(from);
  }

  inline ClaimPayeeResourceTypeCode& operator=(ClaimPayeeResourceTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClaimPayeeResourceTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClaimPayeeResourceTypeCode* internal_default_instance() {
    return reinterpret_cast<const ClaimPayeeResourceTypeCode*>(
               &_ClaimPayeeResourceTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    114;

  void Swap(ClaimPayeeResourceTypeCode* other);
  friend void swap(ClaimPayeeResourceTypeCode& a, ClaimPayeeResourceTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClaimPayeeResourceTypeCode* New() const final {
    return CreateMaybeMessage<ClaimPayeeResourceTypeCode>(NULL);
  }

  ClaimPayeeResourceTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ClaimPayeeResourceTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ClaimPayeeResourceTypeCode& from);
  void MergeFrom(const ClaimPayeeResourceTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClaimPayeeResourceTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ClaimPayeeResourceTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ClaimPayeeResourceTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value ORGANIZATION =
    ClaimPayeeResourceTypeCode_Value_ORGANIZATION;
  static const Value PATIENT =
    ClaimPayeeResourceTypeCode_Value_PATIENT;
  static const Value PRACTITIONER =
    ClaimPayeeResourceTypeCode_Value_PRACTITIONER;
  static const Value RELATEDPERSON =
    ClaimPayeeResourceTypeCode_Value_RELATEDPERSON;
  static inline bool Value_IsValid(int value) {
    return ClaimPayeeResourceTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ClaimPayeeResourceTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    ClaimPayeeResourceTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ClaimPayeeResourceTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ClaimPayeeResourceTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ClaimPayeeResourceTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ClaimPayeeResourceTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ClaimPayeeResourceTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ClaimPayeeResourceTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ClaimPayeeResourceTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ClaimPayeeResourceTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExplanationOfBenefitStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ExplanationOfBenefitStatusCode) */ {
 public:
  ExplanationOfBenefitStatusCode();
  virtual ~ExplanationOfBenefitStatusCode();

  ExplanationOfBenefitStatusCode(const ExplanationOfBenefitStatusCode& from);

  inline ExplanationOfBenefitStatusCode& operator=(const ExplanationOfBenefitStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExplanationOfBenefitStatusCode(ExplanationOfBenefitStatusCode&& from) noexcept
    : ExplanationOfBenefitStatusCode() {
    *this = ::std::move(from);
  }

  inline ExplanationOfBenefitStatusCode& operator=(ExplanationOfBenefitStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExplanationOfBenefitStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExplanationOfBenefitStatusCode* internal_default_instance() {
    return reinterpret_cast<const ExplanationOfBenefitStatusCode*>(
               &_ExplanationOfBenefitStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    115;

  void Swap(ExplanationOfBenefitStatusCode* other);
  friend void swap(ExplanationOfBenefitStatusCode& a, ExplanationOfBenefitStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExplanationOfBenefitStatusCode* New() const final {
    return CreateMaybeMessage<ExplanationOfBenefitStatusCode>(NULL);
  }

  ExplanationOfBenefitStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExplanationOfBenefitStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExplanationOfBenefitStatusCode& from);
  void MergeFrom(const ExplanationOfBenefitStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExplanationOfBenefitStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ExplanationOfBenefitStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ExplanationOfBenefitStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value ACTIVE =
    ExplanationOfBenefitStatusCode_Value_ACTIVE;
  static const Value CANCELLED =
    ExplanationOfBenefitStatusCode_Value_CANCELLED;
  static const Value DRAFT =
    ExplanationOfBenefitStatusCode_Value_DRAFT;
  static const Value ENTERED_IN_ERROR =
    ExplanationOfBenefitStatusCode_Value_ENTERED_IN_ERROR;
  static inline bool Value_IsValid(int value) {
    return ExplanationOfBenefitStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ExplanationOfBenefitStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    ExplanationOfBenefitStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ExplanationOfBenefitStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ExplanationOfBenefitStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ExplanationOfBenefitStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ExplanationOfBenefitStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ExplanationOfBenefitStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ExplanationOfBenefitStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ExplanationOfBenefitStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ExplanationOfBenefitStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExtensionContextCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ExtensionContextCode) */ {
 public:
  ExtensionContextCode();
  virtual ~ExtensionContextCode();

  ExtensionContextCode(const ExtensionContextCode& from);

  inline ExtensionContextCode& operator=(const ExtensionContextCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExtensionContextCode(ExtensionContextCode&& from) noexcept
    : ExtensionContextCode() {
    *this = ::std::move(from);
  }

  inline ExtensionContextCode& operator=(ExtensionContextCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExtensionContextCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExtensionContextCode* internal_default_instance() {
    return reinterpret_cast<const ExtensionContextCode*>(
               &_ExtensionContextCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    116;

  void Swap(ExtensionContextCode* other);
  friend void swap(ExtensionContextCode& a, ExtensionContextCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExtensionContextCode* New() const final {
    return CreateMaybeMessage<ExtensionContextCode>(NULL);
  }

  ExtensionContextCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExtensionContextCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExtensionContextCode& from);
  void MergeFrom(const ExtensionContextCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExtensionContextCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ExtensionContextCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ExtensionContextCode_Value_INVALID_UNINITIALIZED;
  static const Value RESOURCE =
    ExtensionContextCode_Value_RESOURCE;
  static const Value DATATYPE =
    ExtensionContextCode_Value_DATATYPE;
  static const Value EXTENSION =
    ExtensionContextCode_Value_EXTENSION;
  static inline bool Value_IsValid(int value) {
    return ExtensionContextCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ExtensionContextCode_Value_Value_MIN;
  static const Value Value_MAX =
    ExtensionContextCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ExtensionContextCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ExtensionContextCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ExtensionContextCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ExtensionContextCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ExtensionContextCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ExtensionContextCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ExtensionContextCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ExtensionContextCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FilterOperatorCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.FilterOperatorCode) */ {
 public:
  FilterOperatorCode();
  virtual ~FilterOperatorCode();

  FilterOperatorCode(const FilterOperatorCode& from);

  inline FilterOperatorCode& operator=(const FilterOperatorCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FilterOperatorCode(FilterOperatorCode&& from) noexcept
    : FilterOperatorCode() {
    *this = ::std::move(from);
  }

  inline FilterOperatorCode& operator=(FilterOperatorCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FilterOperatorCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FilterOperatorCode* internal_default_instance() {
    return reinterpret_cast<const FilterOperatorCode*>(
               &_FilterOperatorCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    117;

  void Swap(FilterOperatorCode* other);
  friend void swap(FilterOperatorCode& a, FilterOperatorCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FilterOperatorCode* New() const final {
    return CreateMaybeMessage<FilterOperatorCode>(NULL);
  }

  FilterOperatorCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FilterOperatorCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FilterOperatorCode& from);
  void MergeFrom(const FilterOperatorCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FilterOperatorCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef FilterOperatorCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    FilterOperatorCode_Value_INVALID_UNINITIALIZED;
  static const Value EQUALS =
    FilterOperatorCode_Value_EQUALS;
  static const Value IS_A =
    FilterOperatorCode_Value_IS_A;
  static const Value DESCENDENT_OF =
    FilterOperatorCode_Value_DESCENDENT_OF;
  static const Value IS_NOT_A =
    FilterOperatorCode_Value_IS_NOT_A;
  static const Value REGEX =
    FilterOperatorCode_Value_REGEX;
  static const Value IN =
    FilterOperatorCode_Value_IN;
  static const Value NOT_IN =
    FilterOperatorCode_Value_NOT_IN;
  static const Value GENERALIZES =
    FilterOperatorCode_Value_GENERALIZES;
  static const Value EXISTS =
    FilterOperatorCode_Value_EXISTS;
  static inline bool Value_IsValid(int value) {
    return FilterOperatorCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    FilterOperatorCode_Value_Value_MIN;
  static const Value Value_MAX =
    FilterOperatorCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    FilterOperatorCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return FilterOperatorCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return FilterOperatorCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return FilterOperatorCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.FilterOperatorCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::FilterOperatorCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::FilterOperatorCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.FilterOperatorCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FlagCategoryCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.FlagCategoryCode) */ {
 public:
  FlagCategoryCode();
  virtual ~FlagCategoryCode();

  FlagCategoryCode(const FlagCategoryCode& from);

  inline FlagCategoryCode& operator=(const FlagCategoryCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FlagCategoryCode(FlagCategoryCode&& from) noexcept
    : FlagCategoryCode() {
    *this = ::std::move(from);
  }

  inline FlagCategoryCode& operator=(FlagCategoryCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FlagCategoryCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FlagCategoryCode* internal_default_instance() {
    return reinterpret_cast<const FlagCategoryCode*>(
               &_FlagCategoryCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    118;

  void Swap(FlagCategoryCode* other);
  friend void swap(FlagCategoryCode& a, FlagCategoryCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FlagCategoryCode* New() const final {
    return CreateMaybeMessage<FlagCategoryCode>(NULL);
  }

  FlagCategoryCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FlagCategoryCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FlagCategoryCode& from);
  void MergeFrom(const FlagCategoryCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FlagCategoryCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef FlagCategoryCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    FlagCategoryCode_Value_INVALID_UNINITIALIZED;
  static const Value DIET =
    FlagCategoryCode_Value_DIET;
  static const Value DRUG =
    FlagCategoryCode_Value_DRUG;
  static const Value LAB =
    FlagCategoryCode_Value_LAB;
  static const Value ADMIN =
    FlagCategoryCode_Value_ADMIN;
  static const Value CONTACT =
    FlagCategoryCode_Value_CONTACT;
  static inline bool Value_IsValid(int value) {
    return FlagCategoryCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    FlagCategoryCode_Value_Value_MIN;
  static const Value Value_MAX =
    FlagCategoryCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    FlagCategoryCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return FlagCategoryCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return FlagCategoryCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return FlagCategoryCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.FlagCategoryCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::FlagCategoryCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::FlagCategoryCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.FlagCategoryCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FlagPriorityCodesCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.FlagPriorityCodesCode) */ {
 public:
  FlagPriorityCodesCode();
  virtual ~FlagPriorityCodesCode();

  FlagPriorityCodesCode(const FlagPriorityCodesCode& from);

  inline FlagPriorityCodesCode& operator=(const FlagPriorityCodesCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FlagPriorityCodesCode(FlagPriorityCodesCode&& from) noexcept
    : FlagPriorityCodesCode() {
    *this = ::std::move(from);
  }

  inline FlagPriorityCodesCode& operator=(FlagPriorityCodesCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FlagPriorityCodesCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FlagPriorityCodesCode* internal_default_instance() {
    return reinterpret_cast<const FlagPriorityCodesCode*>(
               &_FlagPriorityCodesCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    119;

  void Swap(FlagPriorityCodesCode* other);
  friend void swap(FlagPriorityCodesCode& a, FlagPriorityCodesCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FlagPriorityCodesCode* New() const final {
    return CreateMaybeMessage<FlagPriorityCodesCode>(NULL);
  }

  FlagPriorityCodesCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FlagPriorityCodesCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FlagPriorityCodesCode& from);
  void MergeFrom(const FlagPriorityCodesCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FlagPriorityCodesCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef FlagPriorityCodesCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    FlagPriorityCodesCode_Value_INVALID_UNINITIALIZED;
  static const Value PN =
    FlagPriorityCodesCode_Value_PN;
  static const Value PL =
    FlagPriorityCodesCode_Value_PL;
  static const Value PM =
    FlagPriorityCodesCode_Value_PM;
  static const Value PH =
    FlagPriorityCodesCode_Value_PH;
  static inline bool Value_IsValid(int value) {
    return FlagPriorityCodesCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    FlagPriorityCodesCode_Value_Value_MIN;
  static const Value Value_MAX =
    FlagPriorityCodesCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    FlagPriorityCodesCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return FlagPriorityCodesCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return FlagPriorityCodesCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return FlagPriorityCodesCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.FlagPriorityCodesCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::FlagPriorityCodesCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::FlagPriorityCodesCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.FlagPriorityCodesCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FlagStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.FlagStatusCode) */ {
 public:
  FlagStatusCode();
  virtual ~FlagStatusCode();

  FlagStatusCode(const FlagStatusCode& from);

  inline FlagStatusCode& operator=(const FlagStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FlagStatusCode(FlagStatusCode&& from) noexcept
    : FlagStatusCode() {
    *this = ::std::move(from);
  }

  inline FlagStatusCode& operator=(FlagStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FlagStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FlagStatusCode* internal_default_instance() {
    return reinterpret_cast<const FlagStatusCode*>(
               &_FlagStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    120;

  void Swap(FlagStatusCode* other);
  friend void swap(FlagStatusCode& a, FlagStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FlagStatusCode* New() const final {
    return CreateMaybeMessage<FlagStatusCode>(NULL);
  }

  FlagStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FlagStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FlagStatusCode& from);
  void MergeFrom(const FlagStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FlagStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef FlagStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    FlagStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value ACTIVE =
    FlagStatusCode_Value_ACTIVE;
  static const Value INACTIVE =
    FlagStatusCode_Value_INACTIVE;
  static const Value ENTERED_IN_ERROR =
    FlagStatusCode_Value_ENTERED_IN_ERROR;
  static inline bool Value_IsValid(int value) {
    return FlagStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    FlagStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    FlagStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    FlagStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return FlagStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return FlagStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return FlagStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.FlagStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::FlagStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::FlagStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.FlagStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FinancialResourceStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.FinancialResourceStatusCode) */ {
 public:
  FinancialResourceStatusCode();
  virtual ~FinancialResourceStatusCode();

  FinancialResourceStatusCode(const FinancialResourceStatusCode& from);

  inline FinancialResourceStatusCode& operator=(const FinancialResourceStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FinancialResourceStatusCode(FinancialResourceStatusCode&& from) noexcept
    : FinancialResourceStatusCode() {
    *this = ::std::move(from);
  }

  inline FinancialResourceStatusCode& operator=(FinancialResourceStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FinancialResourceStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FinancialResourceStatusCode* internal_default_instance() {
    return reinterpret_cast<const FinancialResourceStatusCode*>(
               &_FinancialResourceStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    121;

  void Swap(FinancialResourceStatusCode* other);
  friend void swap(FinancialResourceStatusCode& a, FinancialResourceStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FinancialResourceStatusCode* New() const final {
    return CreateMaybeMessage<FinancialResourceStatusCode>(NULL);
  }

  FinancialResourceStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FinancialResourceStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FinancialResourceStatusCode& from);
  void MergeFrom(const FinancialResourceStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FinancialResourceStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef FinancialResourceStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    FinancialResourceStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value ACTIVE =
    FinancialResourceStatusCode_Value_ACTIVE;
  static const Value CANCELLED =
    FinancialResourceStatusCode_Value_CANCELLED;
  static const Value DRAFT =
    FinancialResourceStatusCode_Value_DRAFT;
  static const Value ENTERED_IN_ERROR =
    FinancialResourceStatusCode_Value_ENTERED_IN_ERROR;
  static inline bool Value_IsValid(int value) {
    return FinancialResourceStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    FinancialResourceStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    FinancialResourceStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    FinancialResourceStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return FinancialResourceStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return FinancialResourceStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return FinancialResourceStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.FinancialResourceStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::FinancialResourceStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::FinancialResourceStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.FinancialResourceStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GoalAcceptanceStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.GoalAcceptanceStatusCode) */ {
 public:
  GoalAcceptanceStatusCode();
  virtual ~GoalAcceptanceStatusCode();

  GoalAcceptanceStatusCode(const GoalAcceptanceStatusCode& from);

  inline GoalAcceptanceStatusCode& operator=(const GoalAcceptanceStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GoalAcceptanceStatusCode(GoalAcceptanceStatusCode&& from) noexcept
    : GoalAcceptanceStatusCode() {
    *this = ::std::move(from);
  }

  inline GoalAcceptanceStatusCode& operator=(GoalAcceptanceStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GoalAcceptanceStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GoalAcceptanceStatusCode* internal_default_instance() {
    return reinterpret_cast<const GoalAcceptanceStatusCode*>(
               &_GoalAcceptanceStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    122;

  void Swap(GoalAcceptanceStatusCode* other);
  friend void swap(GoalAcceptanceStatusCode& a, GoalAcceptanceStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GoalAcceptanceStatusCode* New() const final {
    return CreateMaybeMessage<GoalAcceptanceStatusCode>(NULL);
  }

  GoalAcceptanceStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GoalAcceptanceStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GoalAcceptanceStatusCode& from);
  void MergeFrom(const GoalAcceptanceStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GoalAcceptanceStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GoalAcceptanceStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    GoalAcceptanceStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value AGREE =
    GoalAcceptanceStatusCode_Value_AGREE;
  static const Value DISAGREE =
    GoalAcceptanceStatusCode_Value_DISAGREE;
  static const Value PENDING =
    GoalAcceptanceStatusCode_Value_PENDING;
  static inline bool Value_IsValid(int value) {
    return GoalAcceptanceStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    GoalAcceptanceStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    GoalAcceptanceStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    GoalAcceptanceStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return GoalAcceptanceStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return GoalAcceptanceStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return GoalAcceptanceStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.GoalAcceptanceStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::GoalAcceptanceStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::GoalAcceptanceStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.GoalAcceptanceStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GoalCategoryCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.GoalCategoryCode) */ {
 public:
  GoalCategoryCode();
  virtual ~GoalCategoryCode();

  GoalCategoryCode(const GoalCategoryCode& from);

  inline GoalCategoryCode& operator=(const GoalCategoryCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GoalCategoryCode(GoalCategoryCode&& from) noexcept
    : GoalCategoryCode() {
    *this = ::std::move(from);
  }

  inline GoalCategoryCode& operator=(GoalCategoryCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GoalCategoryCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GoalCategoryCode* internal_default_instance() {
    return reinterpret_cast<const GoalCategoryCode*>(
               &_GoalCategoryCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    123;

  void Swap(GoalCategoryCode* other);
  friend void swap(GoalCategoryCode& a, GoalCategoryCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GoalCategoryCode* New() const final {
    return CreateMaybeMessage<GoalCategoryCode>(NULL);
  }

  GoalCategoryCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GoalCategoryCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GoalCategoryCode& from);
  void MergeFrom(const GoalCategoryCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GoalCategoryCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GoalCategoryCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    GoalCategoryCode_Value_INVALID_UNINITIALIZED;
  static const Value DIETARY =
    GoalCategoryCode_Value_DIETARY;
  static const Value SAFETY =
    GoalCategoryCode_Value_SAFETY;
  static const Value BEHAVIORAL =
    GoalCategoryCode_Value_BEHAVIORAL;
  static const Value NURSING =
    GoalCategoryCode_Value_NURSING;
  static const Value PHYSIOTHERAPY =
    GoalCategoryCode_Value_PHYSIOTHERAPY;
  static inline bool Value_IsValid(int value) {
    return GoalCategoryCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    GoalCategoryCode_Value_Value_MIN;
  static const Value Value_MAX =
    GoalCategoryCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    GoalCategoryCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return GoalCategoryCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return GoalCategoryCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return GoalCategoryCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.GoalCategoryCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::GoalCategoryCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::GoalCategoryCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.GoalCategoryCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GoalPriorityCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.GoalPriorityCode) */ {
 public:
  GoalPriorityCode();
  virtual ~GoalPriorityCode();

  GoalPriorityCode(const GoalPriorityCode& from);

  inline GoalPriorityCode& operator=(const GoalPriorityCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GoalPriorityCode(GoalPriorityCode&& from) noexcept
    : GoalPriorityCode() {
    *this = ::std::move(from);
  }

  inline GoalPriorityCode& operator=(GoalPriorityCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GoalPriorityCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GoalPriorityCode* internal_default_instance() {
    return reinterpret_cast<const GoalPriorityCode*>(
               &_GoalPriorityCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    124;

  void Swap(GoalPriorityCode* other);
  friend void swap(GoalPriorityCode& a, GoalPriorityCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GoalPriorityCode* New() const final {
    return CreateMaybeMessage<GoalPriorityCode>(NULL);
  }

  GoalPriorityCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GoalPriorityCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GoalPriorityCode& from);
  void MergeFrom(const GoalPriorityCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GoalPriorityCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GoalPriorityCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    GoalPriorityCode_Value_INVALID_UNINITIALIZED;
  static const Value HIGH_PRIORITY =
    GoalPriorityCode_Value_HIGH_PRIORITY;
  static const Value MEDIUM_PRIORITY =
    GoalPriorityCode_Value_MEDIUM_PRIORITY;
  static const Value LOW_PRIORITY =
    GoalPriorityCode_Value_LOW_PRIORITY;
  static inline bool Value_IsValid(int value) {
    return GoalPriorityCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    GoalPriorityCode_Value_Value_MIN;
  static const Value Value_MAX =
    GoalPriorityCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    GoalPriorityCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return GoalPriorityCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return GoalPriorityCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return GoalPriorityCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.GoalPriorityCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::GoalPriorityCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::GoalPriorityCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.GoalPriorityCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GoalRelationshipTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.GoalRelationshipTypeCode) */ {
 public:
  GoalRelationshipTypeCode();
  virtual ~GoalRelationshipTypeCode();

  GoalRelationshipTypeCode(const GoalRelationshipTypeCode& from);

  inline GoalRelationshipTypeCode& operator=(const GoalRelationshipTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GoalRelationshipTypeCode(GoalRelationshipTypeCode&& from) noexcept
    : GoalRelationshipTypeCode() {
    *this = ::std::move(from);
  }

  inline GoalRelationshipTypeCode& operator=(GoalRelationshipTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GoalRelationshipTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GoalRelationshipTypeCode* internal_default_instance() {
    return reinterpret_cast<const GoalRelationshipTypeCode*>(
               &_GoalRelationshipTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    125;

  void Swap(GoalRelationshipTypeCode* other);
  friend void swap(GoalRelationshipTypeCode& a, GoalRelationshipTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GoalRelationshipTypeCode* New() const final {
    return CreateMaybeMessage<GoalRelationshipTypeCode>(NULL);
  }

  GoalRelationshipTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GoalRelationshipTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GoalRelationshipTypeCode& from);
  void MergeFrom(const GoalRelationshipTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GoalRelationshipTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GoalRelationshipTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    GoalRelationshipTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value PREDECESSOR =
    GoalRelationshipTypeCode_Value_PREDECESSOR;
  static const Value SUCCESSOR =
    GoalRelationshipTypeCode_Value_SUCCESSOR;
  static const Value REPLACEMENT =
    GoalRelationshipTypeCode_Value_REPLACEMENT;
  static const Value MILESTONE =
    GoalRelationshipTypeCode_Value_MILESTONE;
  static const Value OTHER =
    GoalRelationshipTypeCode_Value_OTHER;
  static inline bool Value_IsValid(int value) {
    return GoalRelationshipTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    GoalRelationshipTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    GoalRelationshipTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    GoalRelationshipTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return GoalRelationshipTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return GoalRelationshipTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return GoalRelationshipTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.GoalRelationshipTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::GoalRelationshipTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::GoalRelationshipTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.GoalRelationshipTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GoalStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.GoalStatusCode) */ {
 public:
  GoalStatusCode();
  virtual ~GoalStatusCode();

  GoalStatusCode(const GoalStatusCode& from);

  inline GoalStatusCode& operator=(const GoalStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GoalStatusCode(GoalStatusCode&& from) noexcept
    : GoalStatusCode() {
    *this = ::std::move(from);
  }

  inline GoalStatusCode& operator=(GoalStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GoalStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GoalStatusCode* internal_default_instance() {
    return reinterpret_cast<const GoalStatusCode*>(
               &_GoalStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    126;

  void Swap(GoalStatusCode* other);
  friend void swap(GoalStatusCode& a, GoalStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GoalStatusCode* New() const final {
    return CreateMaybeMessage<GoalStatusCode>(NULL);
  }

  GoalStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GoalStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GoalStatusCode& from);
  void MergeFrom(const GoalStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GoalStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GoalStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    GoalStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value PROPOSED =
    GoalStatusCode_Value_PROPOSED;
  static const Value ACCEPTED =
    GoalStatusCode_Value_ACCEPTED;
  static const Value PLANNED =
    GoalStatusCode_Value_PLANNED;
  static const Value IN_PROGRESS =
    GoalStatusCode_Value_IN_PROGRESS;
  static const Value ON_TARGET =
    GoalStatusCode_Value_ON_TARGET;
  static const Value AHEAD_OF_TARGET =
    GoalStatusCode_Value_AHEAD_OF_TARGET;
  static const Value BEHIND_TARGET =
    GoalStatusCode_Value_BEHIND_TARGET;
  static const Value SUSTAINING =
    GoalStatusCode_Value_SUSTAINING;
  static const Value ACHIEVED =
    GoalStatusCode_Value_ACHIEVED;
  static const Value ON_HOLD =
    GoalStatusCode_Value_ON_HOLD;
  static const Value CANCELLED =
    GoalStatusCode_Value_CANCELLED;
  static const Value ENTERED_IN_ERROR =
    GoalStatusCode_Value_ENTERED_IN_ERROR;
  static const Value REJECTED =
    GoalStatusCode_Value_REJECTED;
  static inline bool Value_IsValid(int value) {
    return GoalStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    GoalStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    GoalStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    GoalStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return GoalStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return GoalStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return GoalStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.GoalStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::GoalStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::GoalStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.GoalStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GoalStatusReasonCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.GoalStatusReasonCode) */ {
 public:
  GoalStatusReasonCode();
  virtual ~GoalStatusReasonCode();

  GoalStatusReasonCode(const GoalStatusReasonCode& from);

  inline GoalStatusReasonCode& operator=(const GoalStatusReasonCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GoalStatusReasonCode(GoalStatusReasonCode&& from) noexcept
    : GoalStatusReasonCode() {
    *this = ::std::move(from);
  }

  inline GoalStatusReasonCode& operator=(GoalStatusReasonCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GoalStatusReasonCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GoalStatusReasonCode* internal_default_instance() {
    return reinterpret_cast<const GoalStatusReasonCode*>(
               &_GoalStatusReasonCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    127;

  void Swap(GoalStatusReasonCode* other);
  friend void swap(GoalStatusReasonCode& a, GoalStatusReasonCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GoalStatusReasonCode* New() const final {
    return CreateMaybeMessage<GoalStatusReasonCode>(NULL);
  }

  GoalStatusReasonCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GoalStatusReasonCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GoalStatusReasonCode& from);
  void MergeFrom(const GoalStatusReasonCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GoalStatusReasonCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GoalStatusReasonCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    GoalStatusReasonCode_Value_INVALID_UNINITIALIZED;
  static const Value SURGERY =
    GoalStatusReasonCode_Value_SURGERY;
  static const Value LIFE_EVENT =
    GoalStatusReasonCode_Value_LIFE_EVENT;
  static const Value REPLACED =
    GoalStatusReasonCode_Value_REPLACED;
  static const Value PATIENT_REQUEST =
    GoalStatusReasonCode_Value_PATIENT_REQUEST;
  static const Value TEMP_NOT_ATTAINABLE =
    GoalStatusReasonCode_Value_TEMP_NOT_ATTAINABLE;
  static const Value PERMANENT_NOT_ATTAINABLE =
    GoalStatusReasonCode_Value_PERMANENT_NOT_ATTAINABLE;
  static const Value FINANCIAL_BARRIER =
    GoalStatusReasonCode_Value_FINANCIAL_BARRIER;
  static const Value LACK_OF_TRANSPORTATION =
    GoalStatusReasonCode_Value_LACK_OF_TRANSPORTATION;
  static const Value LACK_OF_SOCIAL_SUPPORT =
    GoalStatusReasonCode_Value_LACK_OF_SOCIAL_SUPPORT;
  static inline bool Value_IsValid(int value) {
    return GoalStatusReasonCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    GoalStatusReasonCode_Value_Value_MIN;
  static const Value Value_MAX =
    GoalStatusReasonCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    GoalStatusReasonCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return GoalStatusReasonCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return GoalStatusReasonCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return GoalStatusReasonCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.GoalStatusReasonCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::GoalStatusReasonCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::GoalStatusReasonCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.GoalStatusReasonCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GraphCompartmentRuleCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.GraphCompartmentRuleCode) */ {
 public:
  GraphCompartmentRuleCode();
  virtual ~GraphCompartmentRuleCode();

  GraphCompartmentRuleCode(const GraphCompartmentRuleCode& from);

  inline GraphCompartmentRuleCode& operator=(const GraphCompartmentRuleCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GraphCompartmentRuleCode(GraphCompartmentRuleCode&& from) noexcept
    : GraphCompartmentRuleCode() {
    *this = ::std::move(from);
  }

  inline GraphCompartmentRuleCode& operator=(GraphCompartmentRuleCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GraphCompartmentRuleCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GraphCompartmentRuleCode* internal_default_instance() {
    return reinterpret_cast<const GraphCompartmentRuleCode*>(
               &_GraphCompartmentRuleCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    128;

  void Swap(GraphCompartmentRuleCode* other);
  friend void swap(GraphCompartmentRuleCode& a, GraphCompartmentRuleCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GraphCompartmentRuleCode* New() const final {
    return CreateMaybeMessage<GraphCompartmentRuleCode>(NULL);
  }

  GraphCompartmentRuleCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GraphCompartmentRuleCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GraphCompartmentRuleCode& from);
  void MergeFrom(const GraphCompartmentRuleCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GraphCompartmentRuleCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GraphCompartmentRuleCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    GraphCompartmentRuleCode_Value_INVALID_UNINITIALIZED;
  static const Value IDENTICAL =
    GraphCompartmentRuleCode_Value_IDENTICAL;
  static const Value MATCHING =
    GraphCompartmentRuleCode_Value_MATCHING;
  static const Value DIFFERENT =
    GraphCompartmentRuleCode_Value_DIFFERENT;
  static const Value CUSTOM =
    GraphCompartmentRuleCode_Value_CUSTOM;
  static inline bool Value_IsValid(int value) {
    return GraphCompartmentRuleCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    GraphCompartmentRuleCode_Value_Value_MIN;
  static const Value Value_MAX =
    GraphCompartmentRuleCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    GraphCompartmentRuleCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return GraphCompartmentRuleCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return GraphCompartmentRuleCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return GraphCompartmentRuleCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.GraphCompartmentRuleCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::GraphCompartmentRuleCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::GraphCompartmentRuleCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.GraphCompartmentRuleCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.GroupTypeCode) */ {
 public:
  GroupTypeCode();
  virtual ~GroupTypeCode();

  GroupTypeCode(const GroupTypeCode& from);

  inline GroupTypeCode& operator=(const GroupTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupTypeCode(GroupTypeCode&& from) noexcept
    : GroupTypeCode() {
    *this = ::std::move(from);
  }

  inline GroupTypeCode& operator=(GroupTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupTypeCode* internal_default_instance() {
    return reinterpret_cast<const GroupTypeCode*>(
               &_GroupTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    129;

  void Swap(GroupTypeCode* other);
  friend void swap(GroupTypeCode& a, GroupTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupTypeCode* New() const final {
    return CreateMaybeMessage<GroupTypeCode>(NULL);
  }

  GroupTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GroupTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GroupTypeCode& from);
  void MergeFrom(const GroupTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GroupTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GroupTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    GroupTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value PERSON =
    GroupTypeCode_Value_PERSON;
  static const Value ANIMAL =
    GroupTypeCode_Value_ANIMAL;
  static const Value PRACTITIONER =
    GroupTypeCode_Value_PRACTITIONER;
  static const Value DEVICE =
    GroupTypeCode_Value_DEVICE;
  static const Value MEDICATION =
    GroupTypeCode_Value_MEDICATION;
  static const Value SUBSTANCE =
    GroupTypeCode_Value_SUBSTANCE;
  static inline bool Value_IsValid(int value) {
    return GroupTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    GroupTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    GroupTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    GroupTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return GroupTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return GroupTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return GroupTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.GroupTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::GroupTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::GroupTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.GroupTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuidanceResponseStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.GuidanceResponseStatusCode) */ {
 public:
  GuidanceResponseStatusCode();
  virtual ~GuidanceResponseStatusCode();

  GuidanceResponseStatusCode(const GuidanceResponseStatusCode& from);

  inline GuidanceResponseStatusCode& operator=(const GuidanceResponseStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuidanceResponseStatusCode(GuidanceResponseStatusCode&& from) noexcept
    : GuidanceResponseStatusCode() {
    *this = ::std::move(from);
  }

  inline GuidanceResponseStatusCode& operator=(GuidanceResponseStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GuidanceResponseStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuidanceResponseStatusCode* internal_default_instance() {
    return reinterpret_cast<const GuidanceResponseStatusCode*>(
               &_GuidanceResponseStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    130;

  void Swap(GuidanceResponseStatusCode* other);
  friend void swap(GuidanceResponseStatusCode& a, GuidanceResponseStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuidanceResponseStatusCode* New() const final {
    return CreateMaybeMessage<GuidanceResponseStatusCode>(NULL);
  }

  GuidanceResponseStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GuidanceResponseStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GuidanceResponseStatusCode& from);
  void MergeFrom(const GuidanceResponseStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GuidanceResponseStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GuidanceResponseStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    GuidanceResponseStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value SUCCESS =
    GuidanceResponseStatusCode_Value_SUCCESS;
  static const Value DATA_REQUESTED =
    GuidanceResponseStatusCode_Value_DATA_REQUESTED;
  static const Value DATA_REQUIRED =
    GuidanceResponseStatusCode_Value_DATA_REQUIRED;
  static const Value IN_PROGRESS =
    GuidanceResponseStatusCode_Value_IN_PROGRESS;
  static const Value FAILURE =
    GuidanceResponseStatusCode_Value_FAILURE;
  static const Value ENTERED_IN_ERROR =
    GuidanceResponseStatusCode_Value_ENTERED_IN_ERROR;
  static inline bool Value_IsValid(int value) {
    return GuidanceResponseStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    GuidanceResponseStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    GuidanceResponseStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    GuidanceResponseStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return GuidanceResponseStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return GuidanceResponseStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return GuidanceResponseStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.GuidanceResponseStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::GuidanceResponseStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::GuidanceResponseStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.GuidanceResponseStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuideDependencyTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.GuideDependencyTypeCode) */ {
 public:
  GuideDependencyTypeCode();
  virtual ~GuideDependencyTypeCode();

  GuideDependencyTypeCode(const GuideDependencyTypeCode& from);

  inline GuideDependencyTypeCode& operator=(const GuideDependencyTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuideDependencyTypeCode(GuideDependencyTypeCode&& from) noexcept
    : GuideDependencyTypeCode() {
    *this = ::std::move(from);
  }

  inline GuideDependencyTypeCode& operator=(GuideDependencyTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GuideDependencyTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuideDependencyTypeCode* internal_default_instance() {
    return reinterpret_cast<const GuideDependencyTypeCode*>(
               &_GuideDependencyTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    131;

  void Swap(GuideDependencyTypeCode* other);
  friend void swap(GuideDependencyTypeCode& a, GuideDependencyTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuideDependencyTypeCode* New() const final {
    return CreateMaybeMessage<GuideDependencyTypeCode>(NULL);
  }

  GuideDependencyTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GuideDependencyTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GuideDependencyTypeCode& from);
  void MergeFrom(const GuideDependencyTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GuideDependencyTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GuideDependencyTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    GuideDependencyTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value REFERENCE =
    GuideDependencyTypeCode_Value_REFERENCE;
  static const Value INCLUSION =
    GuideDependencyTypeCode_Value_INCLUSION;
  static inline bool Value_IsValid(int value) {
    return GuideDependencyTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    GuideDependencyTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    GuideDependencyTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    GuideDependencyTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return GuideDependencyTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return GuideDependencyTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return GuideDependencyTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.GuideDependencyTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::GuideDependencyTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::GuideDependencyTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.GuideDependencyTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuidePageKindCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.GuidePageKindCode) */ {
 public:
  GuidePageKindCode();
  virtual ~GuidePageKindCode();

  GuidePageKindCode(const GuidePageKindCode& from);

  inline GuidePageKindCode& operator=(const GuidePageKindCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuidePageKindCode(GuidePageKindCode&& from) noexcept
    : GuidePageKindCode() {
    *this = ::std::move(from);
  }

  inline GuidePageKindCode& operator=(GuidePageKindCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GuidePageKindCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuidePageKindCode* internal_default_instance() {
    return reinterpret_cast<const GuidePageKindCode*>(
               &_GuidePageKindCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    132;

  void Swap(GuidePageKindCode* other);
  friend void swap(GuidePageKindCode& a, GuidePageKindCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuidePageKindCode* New() const final {
    return CreateMaybeMessage<GuidePageKindCode>(NULL);
  }

  GuidePageKindCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GuidePageKindCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GuidePageKindCode& from);
  void MergeFrom(const GuidePageKindCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GuidePageKindCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GuidePageKindCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    GuidePageKindCode_Value_INVALID_UNINITIALIZED;
  static const Value PAGE =
    GuidePageKindCode_Value_PAGE;
  static const Value EXAMPLE =
    GuidePageKindCode_Value_EXAMPLE;
  static const Value LIST =
    GuidePageKindCode_Value_LIST;
  static const Value INCLUDE =
    GuidePageKindCode_Value_INCLUDE;
  static const Value DIRECTORY =
    GuidePageKindCode_Value_DIRECTORY;
  static const Value DICTIONARY =
    GuidePageKindCode_Value_DICTIONARY;
  static const Value TOC =
    GuidePageKindCode_Value_TOC;
  static const Value RESOURCE =
    GuidePageKindCode_Value_RESOURCE;
  static inline bool Value_IsValid(int value) {
    return GuidePageKindCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    GuidePageKindCode_Value_Value_MIN;
  static const Value Value_MAX =
    GuidePageKindCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    GuidePageKindCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return GuidePageKindCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return GuidePageKindCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return GuidePageKindCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.GuidePageKindCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::GuidePageKindCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::GuidePageKindCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.GuidePageKindCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FamilyHistoryNotDoneReasonCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.FamilyHistoryNotDoneReasonCode) */ {
 public:
  FamilyHistoryNotDoneReasonCode();
  virtual ~FamilyHistoryNotDoneReasonCode();

  FamilyHistoryNotDoneReasonCode(const FamilyHistoryNotDoneReasonCode& from);

  inline FamilyHistoryNotDoneReasonCode& operator=(const FamilyHistoryNotDoneReasonCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FamilyHistoryNotDoneReasonCode(FamilyHistoryNotDoneReasonCode&& from) noexcept
    : FamilyHistoryNotDoneReasonCode() {
    *this = ::std::move(from);
  }

  inline FamilyHistoryNotDoneReasonCode& operator=(FamilyHistoryNotDoneReasonCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FamilyHistoryNotDoneReasonCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FamilyHistoryNotDoneReasonCode* internal_default_instance() {
    return reinterpret_cast<const FamilyHistoryNotDoneReasonCode*>(
               &_FamilyHistoryNotDoneReasonCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    133;

  void Swap(FamilyHistoryNotDoneReasonCode* other);
  friend void swap(FamilyHistoryNotDoneReasonCode& a, FamilyHistoryNotDoneReasonCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FamilyHistoryNotDoneReasonCode* New() const final {
    return CreateMaybeMessage<FamilyHistoryNotDoneReasonCode>(NULL);
  }

  FamilyHistoryNotDoneReasonCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FamilyHistoryNotDoneReasonCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FamilyHistoryNotDoneReasonCode& from);
  void MergeFrom(const FamilyHistoryNotDoneReasonCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FamilyHistoryNotDoneReasonCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef FamilyHistoryNotDoneReasonCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    FamilyHistoryNotDoneReasonCode_Value_INVALID_UNINITIALIZED;
  static const Value SUBJECT_UNKNOWN =
    FamilyHistoryNotDoneReasonCode_Value_SUBJECT_UNKNOWN;
  static const Value WITHHELD =
    FamilyHistoryNotDoneReasonCode_Value_WITHHELD;
  static const Value UNABLE_TO_OBTAIN =
    FamilyHistoryNotDoneReasonCode_Value_UNABLE_TO_OBTAIN;
  static const Value DEFERRED =
    FamilyHistoryNotDoneReasonCode_Value_DEFERRED;
  static inline bool Value_IsValid(int value) {
    return FamilyHistoryNotDoneReasonCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    FamilyHistoryNotDoneReasonCode_Value_Value_MIN;
  static const Value Value_MAX =
    FamilyHistoryNotDoneReasonCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    FamilyHistoryNotDoneReasonCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return FamilyHistoryNotDoneReasonCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return FamilyHistoryNotDoneReasonCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return FamilyHistoryNotDoneReasonCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.FamilyHistoryNotDoneReasonCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::FamilyHistoryNotDoneReasonCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::FamilyHistoryNotDoneReasonCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.FamilyHistoryNotDoneReasonCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FamilyHistoryStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.FamilyHistoryStatusCode) */ {
 public:
  FamilyHistoryStatusCode();
  virtual ~FamilyHistoryStatusCode();

  FamilyHistoryStatusCode(const FamilyHistoryStatusCode& from);

  inline FamilyHistoryStatusCode& operator=(const FamilyHistoryStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FamilyHistoryStatusCode(FamilyHistoryStatusCode&& from) noexcept
    : FamilyHistoryStatusCode() {
    *this = ::std::move(from);
  }

  inline FamilyHistoryStatusCode& operator=(FamilyHistoryStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FamilyHistoryStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FamilyHistoryStatusCode* internal_default_instance() {
    return reinterpret_cast<const FamilyHistoryStatusCode*>(
               &_FamilyHistoryStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    134;

  void Swap(FamilyHistoryStatusCode* other);
  friend void swap(FamilyHistoryStatusCode& a, FamilyHistoryStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FamilyHistoryStatusCode* New() const final {
    return CreateMaybeMessage<FamilyHistoryStatusCode>(NULL);
  }

  FamilyHistoryStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FamilyHistoryStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FamilyHistoryStatusCode& from);
  void MergeFrom(const FamilyHistoryStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FamilyHistoryStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef FamilyHistoryStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    FamilyHistoryStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value PARTIAL =
    FamilyHistoryStatusCode_Value_PARTIAL;
  static const Value COMPLETED =
    FamilyHistoryStatusCode_Value_COMPLETED;
  static const Value ENTERED_IN_ERROR =
    FamilyHistoryStatusCode_Value_ENTERED_IN_ERROR;
  static const Value HEALTH_UNKNOWN =
    FamilyHistoryStatusCode_Value_HEALTH_UNKNOWN;
  static inline bool Value_IsValid(int value) {
    return FamilyHistoryStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    FamilyHistoryStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    FamilyHistoryStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    FamilyHistoryStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return FamilyHistoryStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return FamilyHistoryStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return FamilyHistoryStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.FamilyHistoryStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::FamilyHistoryStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::FamilyHistoryStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.FamilyHistoryStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HL7WorkgroupCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.HL7WorkgroupCode) */ {
 public:
  HL7WorkgroupCode();
  virtual ~HL7WorkgroupCode();

  HL7WorkgroupCode(const HL7WorkgroupCode& from);

  inline HL7WorkgroupCode& operator=(const HL7WorkgroupCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HL7WorkgroupCode(HL7WorkgroupCode&& from) noexcept
    : HL7WorkgroupCode() {
    *this = ::std::move(from);
  }

  inline HL7WorkgroupCode& operator=(HL7WorkgroupCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HL7WorkgroupCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HL7WorkgroupCode* internal_default_instance() {
    return reinterpret_cast<const HL7WorkgroupCode*>(
               &_HL7WorkgroupCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    135;

  void Swap(HL7WorkgroupCode* other);
  friend void swap(HL7WorkgroupCode& a, HL7WorkgroupCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HL7WorkgroupCode* New() const final {
    return CreateMaybeMessage<HL7WorkgroupCode>(NULL);
  }

  HL7WorkgroupCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HL7WorkgroupCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HL7WorkgroupCode& from);
  void MergeFrom(const HL7WorkgroupCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HL7WorkgroupCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef HL7WorkgroupCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    HL7WorkgroupCode_Value_INVALID_UNINITIALIZED;
  static const Value CBCC =
    HL7WorkgroupCode_Value_CBCC;
  static const Value CDS =
    HL7WorkgroupCode_Value_CDS;
  static const Value CQI =
    HL7WorkgroupCode_Value_CQI;
  static const Value CG =
    HL7WorkgroupCode_Value_CG;
  static const Value DEV =
    HL7WorkgroupCode_Value_DEV;
  static const Value EHR =
    HL7WorkgroupCode_Value_EHR;
  static const Value FHIR =
    HL7WorkgroupCode_Value_FHIR;
  static const Value FM =
    HL7WorkgroupCode_Value_FM;
  static const Value HSI =
    HL7WorkgroupCode_Value_HSI;
  static const Value II =
    HL7WorkgroupCode_Value_II;
  static const Value INM =
    HL7WorkgroupCode_Value_INM;
  static const Value ITS =
    HL7WorkgroupCode_Value_ITS;
  static const Value OO =
    HL7WorkgroupCode_Value_OO;
  static const Value PA =
    HL7WorkgroupCode_Value_PA;
  static const Value PC =
    HL7WorkgroupCode_Value_PC;
  static const Value PHER =
    HL7WorkgroupCode_Value_PHER;
  static const Value PHX =
    HL7WorkgroupCode_Value_PHX;
  static const Value RCRIM =
    HL7WorkgroupCode_Value_RCRIM;
  static const Value SD =
    HL7WorkgroupCode_Value_SD;
  static const Value SEC =
    HL7WorkgroupCode_Value_SEC;
  static const Value US =
    HL7WorkgroupCode_Value_US;
  static const Value VOCAB =
    HL7WorkgroupCode_Value_VOCAB;
  static const Value AID =
    HL7WorkgroupCode_Value_AID;
  static inline bool Value_IsValid(int value) {
    return HL7WorkgroupCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    HL7WorkgroupCode_Value_Value_MIN;
  static const Value Value_MAX =
    HL7WorkgroupCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    HL7WorkgroupCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return HL7WorkgroupCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return HL7WorkgroupCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return HL7WorkgroupCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.HL7WorkgroupCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::HL7WorkgroupCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::HL7WorkgroupCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.HL7WorkgroupCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TestScriptRequestMethodCodeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.TestScriptRequestMethodCodeCode) */ {
 public:
  TestScriptRequestMethodCodeCode();
  virtual ~TestScriptRequestMethodCodeCode();

  TestScriptRequestMethodCodeCode(const TestScriptRequestMethodCodeCode& from);

  inline TestScriptRequestMethodCodeCode& operator=(const TestScriptRequestMethodCodeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TestScriptRequestMethodCodeCode(TestScriptRequestMethodCodeCode&& from) noexcept
    : TestScriptRequestMethodCodeCode() {
    *this = ::std::move(from);
  }

  inline TestScriptRequestMethodCodeCode& operator=(TestScriptRequestMethodCodeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TestScriptRequestMethodCodeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestScriptRequestMethodCodeCode* internal_default_instance() {
    return reinterpret_cast<const TestScriptRequestMethodCodeCode*>(
               &_TestScriptRequestMethodCodeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    136;

  void Swap(TestScriptRequestMethodCodeCode* other);
  friend void swap(TestScriptRequestMethodCodeCode& a, TestScriptRequestMethodCodeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TestScriptRequestMethodCodeCode* New() const final {
    return CreateMaybeMessage<TestScriptRequestMethodCodeCode>(NULL);
  }

  TestScriptRequestMethodCodeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TestScriptRequestMethodCodeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TestScriptRequestMethodCodeCode& from);
  void MergeFrom(const TestScriptRequestMethodCodeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestScriptRequestMethodCodeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef TestScriptRequestMethodCodeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    TestScriptRequestMethodCodeCode_Value_INVALID_UNINITIALIZED;
  static const Value DELETE =
    TestScriptRequestMethodCodeCode_Value_DELETE;
  static const Value GET =
    TestScriptRequestMethodCodeCode_Value_GET;
  static const Value OPTIONS =
    TestScriptRequestMethodCodeCode_Value_OPTIONS;
  static const Value PATCH =
    TestScriptRequestMethodCodeCode_Value_PATCH;
  static const Value POST =
    TestScriptRequestMethodCodeCode_Value_POST;
  static const Value PUT =
    TestScriptRequestMethodCodeCode_Value_PUT;
  static inline bool Value_IsValid(int value) {
    return TestScriptRequestMethodCodeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    TestScriptRequestMethodCodeCode_Value_Value_MIN;
  static const Value Value_MAX =
    TestScriptRequestMethodCodeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    TestScriptRequestMethodCodeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return TestScriptRequestMethodCodeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return TestScriptRequestMethodCodeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return TestScriptRequestMethodCodeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.TestScriptRequestMethodCodeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::TestScriptRequestMethodCodeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::TestScriptRequestMethodCodeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.TestScriptRequestMethodCodeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HTTPVerbCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.HTTPVerbCode) */ {
 public:
  HTTPVerbCode();
  virtual ~HTTPVerbCode();

  HTTPVerbCode(const HTTPVerbCode& from);

  inline HTTPVerbCode& operator=(const HTTPVerbCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HTTPVerbCode(HTTPVerbCode&& from) noexcept
    : HTTPVerbCode() {
    *this = ::std::move(from);
  }

  inline HTTPVerbCode& operator=(HTTPVerbCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HTTPVerbCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HTTPVerbCode* internal_default_instance() {
    return reinterpret_cast<const HTTPVerbCode*>(
               &_HTTPVerbCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    137;

  void Swap(HTTPVerbCode* other);
  friend void swap(HTTPVerbCode& a, HTTPVerbCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HTTPVerbCode* New() const final {
    return CreateMaybeMessage<HTTPVerbCode>(NULL);
  }

  HTTPVerbCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HTTPVerbCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HTTPVerbCode& from);
  void MergeFrom(const HTTPVerbCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HTTPVerbCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef HTTPVerbCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    HTTPVerbCode_Value_INVALID_UNINITIALIZED;
  static const Value GET =
    HTTPVerbCode_Value_GET;
  static const Value POST =
    HTTPVerbCode_Value_POST;
  static const Value PUT =
    HTTPVerbCode_Value_PUT;
  static const Value DELETE =
    HTTPVerbCode_Value_DELETE;
  static inline bool Value_IsValid(int value) {
    return HTTPVerbCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    HTTPVerbCode_Value_Value_MIN;
  static const Value Value_MAX =
    HTTPVerbCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    HTTPVerbCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return HTTPVerbCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return HTTPVerbCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return HTTPVerbCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.HTTPVerbCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::HTTPVerbCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::HTTPVerbCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.HTTPVerbCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IdentityAssuranceLevelCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.IdentityAssuranceLevelCode) */ {
 public:
  IdentityAssuranceLevelCode();
  virtual ~IdentityAssuranceLevelCode();

  IdentityAssuranceLevelCode(const IdentityAssuranceLevelCode& from);

  inline IdentityAssuranceLevelCode& operator=(const IdentityAssuranceLevelCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IdentityAssuranceLevelCode(IdentityAssuranceLevelCode&& from) noexcept
    : IdentityAssuranceLevelCode() {
    *this = ::std::move(from);
  }

  inline IdentityAssuranceLevelCode& operator=(IdentityAssuranceLevelCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IdentityAssuranceLevelCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IdentityAssuranceLevelCode* internal_default_instance() {
    return reinterpret_cast<const IdentityAssuranceLevelCode*>(
               &_IdentityAssuranceLevelCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    138;

  void Swap(IdentityAssuranceLevelCode* other);
  friend void swap(IdentityAssuranceLevelCode& a, IdentityAssuranceLevelCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IdentityAssuranceLevelCode* New() const final {
    return CreateMaybeMessage<IdentityAssuranceLevelCode>(NULL);
  }

  IdentityAssuranceLevelCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IdentityAssuranceLevelCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IdentityAssuranceLevelCode& from);
  void MergeFrom(const IdentityAssuranceLevelCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IdentityAssuranceLevelCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef IdentityAssuranceLevelCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    IdentityAssuranceLevelCode_Value_INVALID_UNINITIALIZED;
  static const Value LEVEL1 =
    IdentityAssuranceLevelCode_Value_LEVEL1;
  static const Value LEVEL2 =
    IdentityAssuranceLevelCode_Value_LEVEL2;
  static const Value LEVEL3 =
    IdentityAssuranceLevelCode_Value_LEVEL3;
  static const Value LEVEL4 =
    IdentityAssuranceLevelCode_Value_LEVEL4;
  static inline bool Value_IsValid(int value) {
    return IdentityAssuranceLevelCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    IdentityAssuranceLevelCode_Value_Value_MIN;
  static const Value Value_MAX =
    IdentityAssuranceLevelCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    IdentityAssuranceLevelCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return IdentityAssuranceLevelCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return IdentityAssuranceLevelCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return IdentityAssuranceLevelCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.IdentityAssuranceLevelCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::IdentityAssuranceLevelCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::IdentityAssuranceLevelCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.IdentityAssuranceLevelCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImmunizationOriginCodesCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ImmunizationOriginCodesCode) */ {
 public:
  ImmunizationOriginCodesCode();
  virtual ~ImmunizationOriginCodesCode();

  ImmunizationOriginCodesCode(const ImmunizationOriginCodesCode& from);

  inline ImmunizationOriginCodesCode& operator=(const ImmunizationOriginCodesCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImmunizationOriginCodesCode(ImmunizationOriginCodesCode&& from) noexcept
    : ImmunizationOriginCodesCode() {
    *this = ::std::move(from);
  }

  inline ImmunizationOriginCodesCode& operator=(ImmunizationOriginCodesCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImmunizationOriginCodesCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImmunizationOriginCodesCode* internal_default_instance() {
    return reinterpret_cast<const ImmunizationOriginCodesCode*>(
               &_ImmunizationOriginCodesCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    139;

  void Swap(ImmunizationOriginCodesCode* other);
  friend void swap(ImmunizationOriginCodesCode& a, ImmunizationOriginCodesCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImmunizationOriginCodesCode* New() const final {
    return CreateMaybeMessage<ImmunizationOriginCodesCode>(NULL);
  }

  ImmunizationOriginCodesCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ImmunizationOriginCodesCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ImmunizationOriginCodesCode& from);
  void MergeFrom(const ImmunizationOriginCodesCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImmunizationOriginCodesCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ImmunizationOriginCodesCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ImmunizationOriginCodesCode_Value_INVALID_UNINITIALIZED;
  static const Value PROVIDER =
    ImmunizationOriginCodesCode_Value_PROVIDER;
  static const Value RECORD =
    ImmunizationOriginCodesCode_Value_RECORD;
  static const Value RECALL =
    ImmunizationOriginCodesCode_Value_RECALL;
  static const Value SCHOOL =
    ImmunizationOriginCodesCode_Value_SCHOOL;
  static inline bool Value_IsValid(int value) {
    return ImmunizationOriginCodesCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ImmunizationOriginCodesCode_Value_Value_MIN;
  static const Value Value_MAX =
    ImmunizationOriginCodesCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ImmunizationOriginCodesCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ImmunizationOriginCodesCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ImmunizationOriginCodesCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ImmunizationOriginCodesCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ImmunizationOriginCodesCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ImmunizationOriginCodesCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ImmunizationOriginCodesCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ImmunizationOriginCodesCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImmunizationRecommendationDateCriterionCodesCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ImmunizationRecommendationDateCriterionCodesCode) */ {
 public:
  ImmunizationRecommendationDateCriterionCodesCode();
  virtual ~ImmunizationRecommendationDateCriterionCodesCode();

  ImmunizationRecommendationDateCriterionCodesCode(const ImmunizationRecommendationDateCriterionCodesCode& from);

  inline ImmunizationRecommendationDateCriterionCodesCode& operator=(const ImmunizationRecommendationDateCriterionCodesCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImmunizationRecommendationDateCriterionCodesCode(ImmunizationRecommendationDateCriterionCodesCode&& from) noexcept
    : ImmunizationRecommendationDateCriterionCodesCode() {
    *this = ::std::move(from);
  }

  inline ImmunizationRecommendationDateCriterionCodesCode& operator=(ImmunizationRecommendationDateCriterionCodesCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImmunizationRecommendationDateCriterionCodesCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImmunizationRecommendationDateCriterionCodesCode* internal_default_instance() {
    return reinterpret_cast<const ImmunizationRecommendationDateCriterionCodesCode*>(
               &_ImmunizationRecommendationDateCriterionCodesCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    140;

  void Swap(ImmunizationRecommendationDateCriterionCodesCode* other);
  friend void swap(ImmunizationRecommendationDateCriterionCodesCode& a, ImmunizationRecommendationDateCriterionCodesCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImmunizationRecommendationDateCriterionCodesCode* New() const final {
    return CreateMaybeMessage<ImmunizationRecommendationDateCriterionCodesCode>(NULL);
  }

  ImmunizationRecommendationDateCriterionCodesCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ImmunizationRecommendationDateCriterionCodesCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ImmunizationRecommendationDateCriterionCodesCode& from);
  void MergeFrom(const ImmunizationRecommendationDateCriterionCodesCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImmunizationRecommendationDateCriterionCodesCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ImmunizationRecommendationDateCriterionCodesCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ImmunizationRecommendationDateCriterionCodesCode_Value_INVALID_UNINITIALIZED;
  static const Value DUE =
    ImmunizationRecommendationDateCriterionCodesCode_Value_DUE;
  static const Value RECOMMENDED =
    ImmunizationRecommendationDateCriterionCodesCode_Value_RECOMMENDED;
  static const Value EARLIEST =
    ImmunizationRecommendationDateCriterionCodesCode_Value_EARLIEST;
  static const Value OVERDUE =
    ImmunizationRecommendationDateCriterionCodesCode_Value_OVERDUE;
  static const Value LATEST =
    ImmunizationRecommendationDateCriterionCodesCode_Value_LATEST;
  static inline bool Value_IsValid(int value) {
    return ImmunizationRecommendationDateCriterionCodesCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ImmunizationRecommendationDateCriterionCodesCode_Value_Value_MIN;
  static const Value Value_MAX =
    ImmunizationRecommendationDateCriterionCodesCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ImmunizationRecommendationDateCriterionCodesCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ImmunizationRecommendationDateCriterionCodesCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ImmunizationRecommendationDateCriterionCodesCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ImmunizationRecommendationDateCriterionCodesCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ImmunizationRecommendationDateCriterionCodesCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ImmunizationRecommendationDateCriterionCodesCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ImmunizationRecommendationDateCriterionCodesCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ImmunizationRecommendationDateCriterionCodesCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImmunizationRecommendationStatusCodesCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ImmunizationRecommendationStatusCodesCode) */ {
 public:
  ImmunizationRecommendationStatusCodesCode();
  virtual ~ImmunizationRecommendationStatusCodesCode();

  ImmunizationRecommendationStatusCodesCode(const ImmunizationRecommendationStatusCodesCode& from);

  inline ImmunizationRecommendationStatusCodesCode& operator=(const ImmunizationRecommendationStatusCodesCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImmunizationRecommendationStatusCodesCode(ImmunizationRecommendationStatusCodesCode&& from) noexcept
    : ImmunizationRecommendationStatusCodesCode() {
    *this = ::std::move(from);
  }

  inline ImmunizationRecommendationStatusCodesCode& operator=(ImmunizationRecommendationStatusCodesCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImmunizationRecommendationStatusCodesCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImmunizationRecommendationStatusCodesCode* internal_default_instance() {
    return reinterpret_cast<const ImmunizationRecommendationStatusCodesCode*>(
               &_ImmunizationRecommendationStatusCodesCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    141;

  void Swap(ImmunizationRecommendationStatusCodesCode* other);
  friend void swap(ImmunizationRecommendationStatusCodesCode& a, ImmunizationRecommendationStatusCodesCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImmunizationRecommendationStatusCodesCode* New() const final {
    return CreateMaybeMessage<ImmunizationRecommendationStatusCodesCode>(NULL);
  }

  ImmunizationRecommendationStatusCodesCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ImmunizationRecommendationStatusCodesCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ImmunizationRecommendationStatusCodesCode& from);
  void MergeFrom(const ImmunizationRecommendationStatusCodesCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImmunizationRecommendationStatusCodesCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ImmunizationRecommendationStatusCodesCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ImmunizationRecommendationStatusCodesCode_Value_INVALID_UNINITIALIZED;
  static const Value DUE =
    ImmunizationRecommendationStatusCodesCode_Value_DUE;
  static const Value OVERDUE =
    ImmunizationRecommendationStatusCodesCode_Value_OVERDUE;
  static inline bool Value_IsValid(int value) {
    return ImmunizationRecommendationStatusCodesCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ImmunizationRecommendationStatusCodesCode_Value_Value_MIN;
  static const Value Value_MAX =
    ImmunizationRecommendationStatusCodesCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ImmunizationRecommendationStatusCodesCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ImmunizationRecommendationStatusCodesCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ImmunizationRecommendationStatusCodesCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ImmunizationRecommendationStatusCodesCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ImmunizationRecommendationStatusCodesCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ImmunizationRecommendationStatusCodesCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ImmunizationRecommendationStatusCodesCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ImmunizationRecommendationStatusCodesCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImmunizationStatusCodesCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ImmunizationStatusCodesCode) */ {
 public:
  ImmunizationStatusCodesCode();
  virtual ~ImmunizationStatusCodesCode();

  ImmunizationStatusCodesCode(const ImmunizationStatusCodesCode& from);

  inline ImmunizationStatusCodesCode& operator=(const ImmunizationStatusCodesCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImmunizationStatusCodesCode(ImmunizationStatusCodesCode&& from) noexcept
    : ImmunizationStatusCodesCode() {
    *this = ::std::move(from);
  }

  inline ImmunizationStatusCodesCode& operator=(ImmunizationStatusCodesCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImmunizationStatusCodesCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImmunizationStatusCodesCode* internal_default_instance() {
    return reinterpret_cast<const ImmunizationStatusCodesCode*>(
               &_ImmunizationStatusCodesCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    142;

  void Swap(ImmunizationStatusCodesCode* other);
  friend void swap(ImmunizationStatusCodesCode& a, ImmunizationStatusCodesCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImmunizationStatusCodesCode* New() const final {
    return CreateMaybeMessage<ImmunizationStatusCodesCode>(NULL);
  }

  ImmunizationStatusCodesCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ImmunizationStatusCodesCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ImmunizationStatusCodesCode& from);
  void MergeFrom(const ImmunizationStatusCodesCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImmunizationStatusCodesCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ImmunizationStatusCodesCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ImmunizationStatusCodesCode_Value_INVALID_UNINITIALIZED;
  static const Value COMPLETED =
    ImmunizationStatusCodesCode_Value_COMPLETED;
  static const Value ENTERED_IN_ERROR =
    ImmunizationStatusCodesCode_Value_ENTERED_IN_ERROR;
  static inline bool Value_IsValid(int value) {
    return ImmunizationStatusCodesCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ImmunizationStatusCodesCode_Value_Value_MIN;
  static const Value Value_MAX =
    ImmunizationStatusCodesCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ImmunizationStatusCodesCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ImmunizationStatusCodesCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ImmunizationStatusCodesCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ImmunizationStatusCodesCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ImmunizationStatusCodesCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ImmunizationStatusCodesCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ImmunizationStatusCodesCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ImmunizationStatusCodesCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImplantStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ImplantStatusCode) */ {
 public:
  ImplantStatusCode();
  virtual ~ImplantStatusCode();

  ImplantStatusCode(const ImplantStatusCode& from);

  inline ImplantStatusCode& operator=(const ImplantStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImplantStatusCode(ImplantStatusCode&& from) noexcept
    : ImplantStatusCode() {
    *this = ::std::move(from);
  }

  inline ImplantStatusCode& operator=(ImplantStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImplantStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImplantStatusCode* internal_default_instance() {
    return reinterpret_cast<const ImplantStatusCode*>(
               &_ImplantStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    143;

  void Swap(ImplantStatusCode* other);
  friend void swap(ImplantStatusCode& a, ImplantStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImplantStatusCode* New() const final {
    return CreateMaybeMessage<ImplantStatusCode>(NULL);
  }

  ImplantStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ImplantStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ImplantStatusCode& from);
  void MergeFrom(const ImplantStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImplantStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ImplantStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ImplantStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value FUNCTIONAL =
    ImplantStatusCode_Value_FUNCTIONAL;
  static const Value NON_FUNCTIONAL =
    ImplantStatusCode_Value_NON_FUNCTIONAL;
  static const Value DISABLED =
    ImplantStatusCode_Value_DISABLED;
  static const Value UNKNOWN =
    ImplantStatusCode_Value_UNKNOWN;
  static inline bool Value_IsValid(int value) {
    return ImplantStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ImplantStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    ImplantStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ImplantStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ImplantStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ImplantStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ImplantStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ImplantStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ImplantStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ImplantStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ImplantStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InstanceAvailabilityCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.InstanceAvailabilityCode) */ {
 public:
  InstanceAvailabilityCode();
  virtual ~InstanceAvailabilityCode();

  InstanceAvailabilityCode(const InstanceAvailabilityCode& from);

  inline InstanceAvailabilityCode& operator=(const InstanceAvailabilityCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InstanceAvailabilityCode(InstanceAvailabilityCode&& from) noexcept
    : InstanceAvailabilityCode() {
    *this = ::std::move(from);
  }

  inline InstanceAvailabilityCode& operator=(InstanceAvailabilityCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InstanceAvailabilityCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InstanceAvailabilityCode* internal_default_instance() {
    return reinterpret_cast<const InstanceAvailabilityCode*>(
               &_InstanceAvailabilityCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    144;

  void Swap(InstanceAvailabilityCode* other);
  friend void swap(InstanceAvailabilityCode& a, InstanceAvailabilityCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InstanceAvailabilityCode* New() const final {
    return CreateMaybeMessage<InstanceAvailabilityCode>(NULL);
  }

  InstanceAvailabilityCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InstanceAvailabilityCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InstanceAvailabilityCode& from);
  void MergeFrom(const InstanceAvailabilityCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InstanceAvailabilityCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef InstanceAvailabilityCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    InstanceAvailabilityCode_Value_INVALID_UNINITIALIZED;
  static const Value ONLINE =
    InstanceAvailabilityCode_Value_ONLINE;
  static const Value OFFLINE =
    InstanceAvailabilityCode_Value_OFFLINE;
  static const Value NEARLINE =
    InstanceAvailabilityCode_Value_NEARLINE;
  static const Value UNAVAILABLE =
    InstanceAvailabilityCode_Value_UNAVAILABLE;
  static inline bool Value_IsValid(int value) {
    return InstanceAvailabilityCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    InstanceAvailabilityCode_Value_Value_MIN;
  static const Value Value_MAX =
    InstanceAvailabilityCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    InstanceAvailabilityCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return InstanceAvailabilityCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return InstanceAvailabilityCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return InstanceAvailabilityCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.InstanceAvailabilityCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::InstanceAvailabilityCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::InstanceAvailabilityCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.InstanceAvailabilityCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IssueSeverityCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.IssueSeverityCode) */ {
 public:
  IssueSeverityCode();
  virtual ~IssueSeverityCode();

  IssueSeverityCode(const IssueSeverityCode& from);

  inline IssueSeverityCode& operator=(const IssueSeverityCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IssueSeverityCode(IssueSeverityCode&& from) noexcept
    : IssueSeverityCode() {
    *this = ::std::move(from);
  }

  inline IssueSeverityCode& operator=(IssueSeverityCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IssueSeverityCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IssueSeverityCode* internal_default_instance() {
    return reinterpret_cast<const IssueSeverityCode*>(
               &_IssueSeverityCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    145;

  void Swap(IssueSeverityCode* other);
  friend void swap(IssueSeverityCode& a, IssueSeverityCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IssueSeverityCode* New() const final {
    return CreateMaybeMessage<IssueSeverityCode>(NULL);
  }

  IssueSeverityCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IssueSeverityCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IssueSeverityCode& from);
  void MergeFrom(const IssueSeverityCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IssueSeverityCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef IssueSeverityCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    IssueSeverityCode_Value_INVALID_UNINITIALIZED;
  static const Value FATAL =
    IssueSeverityCode_Value_FATAL;
  static const Value ERROR =
    IssueSeverityCode_Value_ERROR;
  static const Value WARNING =
    IssueSeverityCode_Value_WARNING;
  static const Value INFORMATION =
    IssueSeverityCode_Value_INFORMATION;
  static inline bool Value_IsValid(int value) {
    return IssueSeverityCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    IssueSeverityCode_Value_Value_MIN;
  static const Value Value_MAX =
    IssueSeverityCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    IssueSeverityCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return IssueSeverityCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return IssueSeverityCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return IssueSeverityCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.IssueSeverityCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::IssueSeverityCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::IssueSeverityCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.IssueSeverityCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IssueTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.IssueTypeCode) */ {
 public:
  IssueTypeCode();
  virtual ~IssueTypeCode();

  IssueTypeCode(const IssueTypeCode& from);

  inline IssueTypeCode& operator=(const IssueTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IssueTypeCode(IssueTypeCode&& from) noexcept
    : IssueTypeCode() {
    *this = ::std::move(from);
  }

  inline IssueTypeCode& operator=(IssueTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IssueTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IssueTypeCode* internal_default_instance() {
    return reinterpret_cast<const IssueTypeCode*>(
               &_IssueTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    146;

  void Swap(IssueTypeCode* other);
  friend void swap(IssueTypeCode& a, IssueTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IssueTypeCode* New() const final {
    return CreateMaybeMessage<IssueTypeCode>(NULL);
  }

  IssueTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IssueTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IssueTypeCode& from);
  void MergeFrom(const IssueTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IssueTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef IssueTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    IssueTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value INVALID =
    IssueTypeCode_Value_INVALID;
  static const Value STRUCTURE =
    IssueTypeCode_Value_STRUCTURE;
  static const Value REQUIRED =
    IssueTypeCode_Value_REQUIRED;
  static const Value VALUE =
    IssueTypeCode_Value_VALUE;
  static const Value INVARIANT =
    IssueTypeCode_Value_INVARIANT;
  static const Value SECURITY =
    IssueTypeCode_Value_SECURITY;
  static const Value LOGIN =
    IssueTypeCode_Value_LOGIN;
  static const Value UNKNOWN =
    IssueTypeCode_Value_UNKNOWN;
  static const Value EXPIRED =
    IssueTypeCode_Value_EXPIRED;
  static const Value FORBIDDEN =
    IssueTypeCode_Value_FORBIDDEN;
  static const Value SUPPRESSED =
    IssueTypeCode_Value_SUPPRESSED;
  static const Value PROCESSING =
    IssueTypeCode_Value_PROCESSING;
  static const Value NOT_SUPPORTED =
    IssueTypeCode_Value_NOT_SUPPORTED;
  static const Value DUPLICATE =
    IssueTypeCode_Value_DUPLICATE;
  static const Value NOT_FOUND =
    IssueTypeCode_Value_NOT_FOUND;
  static const Value TOO_LONG =
    IssueTypeCode_Value_TOO_LONG;
  static const Value CODE_INVALID =
    IssueTypeCode_Value_CODE_INVALID;
  static const Value EXTENSION =
    IssueTypeCode_Value_EXTENSION;
  static const Value TOO_COSTLY =
    IssueTypeCode_Value_TOO_COSTLY;
  static const Value BUSINESS_RULE =
    IssueTypeCode_Value_BUSINESS_RULE;
  static const Value CONFLICT =
    IssueTypeCode_Value_CONFLICT;
  static const Value INCOMPLETE =
    IssueTypeCode_Value_INCOMPLETE;
  static const Value TRANSIENT =
    IssueTypeCode_Value_TRANSIENT;
  static const Value LOCK_ERROR =
    IssueTypeCode_Value_LOCK_ERROR;
  static const Value NO_STORE =
    IssueTypeCode_Value_NO_STORE;
  static const Value EXCEPTION =
    IssueTypeCode_Value_EXCEPTION;
  static const Value TIMEOUT =
    IssueTypeCode_Value_TIMEOUT;
  static const Value THROTTLED =
    IssueTypeCode_Value_THROTTLED;
  static const Value INFORMATIONAL =
    IssueTypeCode_Value_INFORMATIONAL;
  static inline bool Value_IsValid(int value) {
    return IssueTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    IssueTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    IssueTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    IssueTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return IssueTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return IssueTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return IssueTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.IssueTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::IssueTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::IssueTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.IssueTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QuestionnaireItemTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.QuestionnaireItemTypeCode) */ {
 public:
  QuestionnaireItemTypeCode();
  virtual ~QuestionnaireItemTypeCode();

  QuestionnaireItemTypeCode(const QuestionnaireItemTypeCode& from);

  inline QuestionnaireItemTypeCode& operator=(const QuestionnaireItemTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QuestionnaireItemTypeCode(QuestionnaireItemTypeCode&& from) noexcept
    : QuestionnaireItemTypeCode() {
    *this = ::std::move(from);
  }

  inline QuestionnaireItemTypeCode& operator=(QuestionnaireItemTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestionnaireItemTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QuestionnaireItemTypeCode* internal_default_instance() {
    return reinterpret_cast<const QuestionnaireItemTypeCode*>(
               &_QuestionnaireItemTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    147;

  void Swap(QuestionnaireItemTypeCode* other);
  friend void swap(QuestionnaireItemTypeCode& a, QuestionnaireItemTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QuestionnaireItemTypeCode* New() const final {
    return CreateMaybeMessage<QuestionnaireItemTypeCode>(NULL);
  }

  QuestionnaireItemTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QuestionnaireItemTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const QuestionnaireItemTypeCode& from);
  void MergeFrom(const QuestionnaireItemTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QuestionnaireItemTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef QuestionnaireItemTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    QuestionnaireItemTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value GROUP =
    QuestionnaireItemTypeCode_Value_GROUP;
  static const Value DISPLAY =
    QuestionnaireItemTypeCode_Value_DISPLAY;
  static const Value QUESTION =
    QuestionnaireItemTypeCode_Value_QUESTION;
  static const Value BOOLEAN =
    QuestionnaireItemTypeCode_Value_BOOLEAN;
  static const Value DECIMAL =
    QuestionnaireItemTypeCode_Value_DECIMAL;
  static const Value INTEGER =
    QuestionnaireItemTypeCode_Value_INTEGER;
  static const Value DATE =
    QuestionnaireItemTypeCode_Value_DATE;
  static const Value DATE_TIME =
    QuestionnaireItemTypeCode_Value_DATE_TIME;
  static const Value TIME =
    QuestionnaireItemTypeCode_Value_TIME;
  static const Value STRING =
    QuestionnaireItemTypeCode_Value_STRING;
  static const Value TEXT =
    QuestionnaireItemTypeCode_Value_TEXT;
  static const Value URL =
    QuestionnaireItemTypeCode_Value_URL;
  static const Value CHOICE =
    QuestionnaireItemTypeCode_Value_CHOICE;
  static const Value OPEN_CHOICE =
    QuestionnaireItemTypeCode_Value_OPEN_CHOICE;
  static const Value ATTACHMENT =
    QuestionnaireItemTypeCode_Value_ATTACHMENT;
  static const Value REFERENCE =
    QuestionnaireItemTypeCode_Value_REFERENCE;
  static const Value QUANTITY =
    QuestionnaireItemTypeCode_Value_QUANTITY;
  static inline bool Value_IsValid(int value) {
    return QuestionnaireItemTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    QuestionnaireItemTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    QuestionnaireItemTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    QuestionnaireItemTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return QuestionnaireItemTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return QuestionnaireItemTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return QuestionnaireItemTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.QuestionnaireItemTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::QuestionnaireItemTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::QuestionnaireItemTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.QuestionnaireItemTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LibraryTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.LibraryTypeCode) */ {
 public:
  LibraryTypeCode();
  virtual ~LibraryTypeCode();

  LibraryTypeCode(const LibraryTypeCode& from);

  inline LibraryTypeCode& operator=(const LibraryTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LibraryTypeCode(LibraryTypeCode&& from) noexcept
    : LibraryTypeCode() {
    *this = ::std::move(from);
  }

  inline LibraryTypeCode& operator=(LibraryTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LibraryTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LibraryTypeCode* internal_default_instance() {
    return reinterpret_cast<const LibraryTypeCode*>(
               &_LibraryTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    148;

  void Swap(LibraryTypeCode* other);
  friend void swap(LibraryTypeCode& a, LibraryTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LibraryTypeCode* New() const final {
    return CreateMaybeMessage<LibraryTypeCode>(NULL);
  }

  LibraryTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LibraryTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LibraryTypeCode& from);
  void MergeFrom(const LibraryTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LibraryTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef LibraryTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    LibraryTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value LOGIC_LIBRARY =
    LibraryTypeCode_Value_LOGIC_LIBRARY;
  static const Value MODEL_DEFINITION =
    LibraryTypeCode_Value_MODEL_DEFINITION;
  static const Value ASSET_COLLECTION =
    LibraryTypeCode_Value_ASSET_COLLECTION;
  static const Value MODULE_DEFINITION =
    LibraryTypeCode_Value_MODULE_DEFINITION;
  static inline bool Value_IsValid(int value) {
    return LibraryTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    LibraryTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    LibraryTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    LibraryTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return LibraryTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return LibraryTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return LibraryTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.LibraryTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::LibraryTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::LibraryTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.LibraryTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LinkageTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.LinkageTypeCode) */ {
 public:
  LinkageTypeCode();
  virtual ~LinkageTypeCode();

  LinkageTypeCode(const LinkageTypeCode& from);

  inline LinkageTypeCode& operator=(const LinkageTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LinkageTypeCode(LinkageTypeCode&& from) noexcept
    : LinkageTypeCode() {
    *this = ::std::move(from);
  }

  inline LinkageTypeCode& operator=(LinkageTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LinkageTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LinkageTypeCode* internal_default_instance() {
    return reinterpret_cast<const LinkageTypeCode*>(
               &_LinkageTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    149;

  void Swap(LinkageTypeCode* other);
  friend void swap(LinkageTypeCode& a, LinkageTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LinkageTypeCode* New() const final {
    return CreateMaybeMessage<LinkageTypeCode>(NULL);
  }

  LinkageTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LinkageTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LinkageTypeCode& from);
  void MergeFrom(const LinkageTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LinkageTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef LinkageTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    LinkageTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value SOURCE =
    LinkageTypeCode_Value_SOURCE;
  static const Value ALTERNATE =
    LinkageTypeCode_Value_ALTERNATE;
  static const Value HISTORICAL =
    LinkageTypeCode_Value_HISTORICAL;
  static inline bool Value_IsValid(int value) {
    return LinkageTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    LinkageTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    LinkageTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    LinkageTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return LinkageTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return LinkageTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return LinkageTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.LinkageTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::LinkageTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::LinkageTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.LinkageTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LinkTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.LinkTypeCode) */ {
 public:
  LinkTypeCode();
  virtual ~LinkTypeCode();

  LinkTypeCode(const LinkTypeCode& from);

  inline LinkTypeCode& operator=(const LinkTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LinkTypeCode(LinkTypeCode&& from) noexcept
    : LinkTypeCode() {
    *this = ::std::move(from);
  }

  inline LinkTypeCode& operator=(LinkTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LinkTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LinkTypeCode* internal_default_instance() {
    return reinterpret_cast<const LinkTypeCode*>(
               &_LinkTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    150;

  void Swap(LinkTypeCode* other);
  friend void swap(LinkTypeCode& a, LinkTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LinkTypeCode* New() const final {
    return CreateMaybeMessage<LinkTypeCode>(NULL);
  }

  LinkTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LinkTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LinkTypeCode& from);
  void MergeFrom(const LinkTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LinkTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef LinkTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    LinkTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value REPLACED_BY =
    LinkTypeCode_Value_REPLACED_BY;
  static const Value REPLACES =
    LinkTypeCode_Value_REPLACES;
  static const Value REFER =
    LinkTypeCode_Value_REFER;
  static const Value SEEALSO =
    LinkTypeCode_Value_SEEALSO;
  static inline bool Value_IsValid(int value) {
    return LinkTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    LinkTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    LinkTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    LinkTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return LinkTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return LinkTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return LinkTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.LinkTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::LinkTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::LinkTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.LinkTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListEmptyReasonsCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ListEmptyReasonsCode) */ {
 public:
  ListEmptyReasonsCode();
  virtual ~ListEmptyReasonsCode();

  ListEmptyReasonsCode(const ListEmptyReasonsCode& from);

  inline ListEmptyReasonsCode& operator=(const ListEmptyReasonsCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListEmptyReasonsCode(ListEmptyReasonsCode&& from) noexcept
    : ListEmptyReasonsCode() {
    *this = ::std::move(from);
  }

  inline ListEmptyReasonsCode& operator=(ListEmptyReasonsCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListEmptyReasonsCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListEmptyReasonsCode* internal_default_instance() {
    return reinterpret_cast<const ListEmptyReasonsCode*>(
               &_ListEmptyReasonsCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    151;

  void Swap(ListEmptyReasonsCode* other);
  friend void swap(ListEmptyReasonsCode& a, ListEmptyReasonsCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListEmptyReasonsCode* New() const final {
    return CreateMaybeMessage<ListEmptyReasonsCode>(NULL);
  }

  ListEmptyReasonsCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListEmptyReasonsCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListEmptyReasonsCode& from);
  void MergeFrom(const ListEmptyReasonsCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListEmptyReasonsCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ListEmptyReasonsCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ListEmptyReasonsCode_Value_INVALID_UNINITIALIZED;
  static const Value NILKNOWN =
    ListEmptyReasonsCode_Value_NILKNOWN;
  static const Value NOTASKED =
    ListEmptyReasonsCode_Value_NOTASKED;
  static const Value WITHHELD =
    ListEmptyReasonsCode_Value_WITHHELD;
  static const Value UNAVAILABLE =
    ListEmptyReasonsCode_Value_UNAVAILABLE;
  static const Value NOTSTARTED =
    ListEmptyReasonsCode_Value_NOTSTARTED;
  static const Value CLOSED =
    ListEmptyReasonsCode_Value_CLOSED;
  static inline bool Value_IsValid(int value) {
    return ListEmptyReasonsCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ListEmptyReasonsCode_Value_Value_MIN;
  static const Value Value_MAX =
    ListEmptyReasonsCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ListEmptyReasonsCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ListEmptyReasonsCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ListEmptyReasonsCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ListEmptyReasonsCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ListEmptyReasonsCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ListEmptyReasonsCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ListEmptyReasonsCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ListEmptyReasonsCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExampleUseCodesforListCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ExampleUseCodesforListCode) */ {
 public:
  ExampleUseCodesforListCode();
  virtual ~ExampleUseCodesforListCode();

  ExampleUseCodesforListCode(const ExampleUseCodesforListCode& from);

  inline ExampleUseCodesforListCode& operator=(const ExampleUseCodesforListCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExampleUseCodesforListCode(ExampleUseCodesforListCode&& from) noexcept
    : ExampleUseCodesforListCode() {
    *this = ::std::move(from);
  }

  inline ExampleUseCodesforListCode& operator=(ExampleUseCodesforListCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExampleUseCodesforListCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExampleUseCodesforListCode* internal_default_instance() {
    return reinterpret_cast<const ExampleUseCodesforListCode*>(
               &_ExampleUseCodesforListCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    152;

  void Swap(ExampleUseCodesforListCode* other);
  friend void swap(ExampleUseCodesforListCode& a, ExampleUseCodesforListCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExampleUseCodesforListCode* New() const final {
    return CreateMaybeMessage<ExampleUseCodesforListCode>(NULL);
  }

  ExampleUseCodesforListCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExampleUseCodesforListCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExampleUseCodesforListCode& from);
  void MergeFrom(const ExampleUseCodesforListCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExampleUseCodesforListCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ExampleUseCodesforListCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ExampleUseCodesforListCode_Value_INVALID_UNINITIALIZED;
  static const Value ALERTS =
    ExampleUseCodesforListCode_Value_ALERTS;
  static const Value ADVERSERXNS =
    ExampleUseCodesforListCode_Value_ADVERSERXNS;
  static const Value ALLERGIES =
    ExampleUseCodesforListCode_Value_ALLERGIES;
  static const Value MEDICATIONS =
    ExampleUseCodesforListCode_Value_MEDICATIONS;
  static const Value PROBLEMS =
    ExampleUseCodesforListCode_Value_PROBLEMS;
  static const Value WORKLIST =
    ExampleUseCodesforListCode_Value_WORKLIST;
  static const Value WAITING =
    ExampleUseCodesforListCode_Value_WAITING;
  static const Value PROTOCOLS =
    ExampleUseCodesforListCode_Value_PROTOCOLS;
  static const Value PLANS =
    ExampleUseCodesforListCode_Value_PLANS;
  static inline bool Value_IsValid(int value) {
    return ExampleUseCodesforListCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ExampleUseCodesforListCode_Value_Value_MIN;
  static const Value Value_MAX =
    ExampleUseCodesforListCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ExampleUseCodesforListCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ExampleUseCodesforListCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ExampleUseCodesforListCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ExampleUseCodesforListCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ExampleUseCodesforListCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ExampleUseCodesforListCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ExampleUseCodesforListCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ExampleUseCodesforListCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListModeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ListModeCode) */ {
 public:
  ListModeCode();
  virtual ~ListModeCode();

  ListModeCode(const ListModeCode& from);

  inline ListModeCode& operator=(const ListModeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListModeCode(ListModeCode&& from) noexcept
    : ListModeCode() {
    *this = ::std::move(from);
  }

  inline ListModeCode& operator=(ListModeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListModeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListModeCode* internal_default_instance() {
    return reinterpret_cast<const ListModeCode*>(
               &_ListModeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    153;

  void Swap(ListModeCode* other);
  friend void swap(ListModeCode& a, ListModeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListModeCode* New() const final {
    return CreateMaybeMessage<ListModeCode>(NULL);
  }

  ListModeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListModeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListModeCode& from);
  void MergeFrom(const ListModeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListModeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ListModeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ListModeCode_Value_INVALID_UNINITIALIZED;
  static const Value WORKING =
    ListModeCode_Value_WORKING;
  static const Value SNAPSHOT =
    ListModeCode_Value_SNAPSHOT;
  static const Value CHANGES =
    ListModeCode_Value_CHANGES;
  static inline bool Value_IsValid(int value) {
    return ListModeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ListModeCode_Value_Value_MIN;
  static const Value Value_MAX =
    ListModeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ListModeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ListModeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ListModeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ListModeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ListModeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ListModeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ListModeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ListModeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListOrderCodesCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ListOrderCodesCode) */ {
 public:
  ListOrderCodesCode();
  virtual ~ListOrderCodesCode();

  ListOrderCodesCode(const ListOrderCodesCode& from);

  inline ListOrderCodesCode& operator=(const ListOrderCodesCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListOrderCodesCode(ListOrderCodesCode&& from) noexcept
    : ListOrderCodesCode() {
    *this = ::std::move(from);
  }

  inline ListOrderCodesCode& operator=(ListOrderCodesCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListOrderCodesCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListOrderCodesCode* internal_default_instance() {
    return reinterpret_cast<const ListOrderCodesCode*>(
               &_ListOrderCodesCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    154;

  void Swap(ListOrderCodesCode* other);
  friend void swap(ListOrderCodesCode& a, ListOrderCodesCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListOrderCodesCode* New() const final {
    return CreateMaybeMessage<ListOrderCodesCode>(NULL);
  }

  ListOrderCodesCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListOrderCodesCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListOrderCodesCode& from);
  void MergeFrom(const ListOrderCodesCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListOrderCodesCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ListOrderCodesCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ListOrderCodesCode_Value_INVALID_UNINITIALIZED;
  static const Value USER =
    ListOrderCodesCode_Value_USER;
  static const Value SYSTEM =
    ListOrderCodesCode_Value_SYSTEM;
  static const Value EVENT_DATE =
    ListOrderCodesCode_Value_EVENT_DATE;
  static const Value ENTRY_DATE =
    ListOrderCodesCode_Value_ENTRY_DATE;
  static const Value PRIORITY =
    ListOrderCodesCode_Value_PRIORITY;
  static const Value ALPHABETIC =
    ListOrderCodesCode_Value_ALPHABETIC;
  static const Value CATEGORY =
    ListOrderCodesCode_Value_CATEGORY;
  static const Value PATIENT =
    ListOrderCodesCode_Value_PATIENT;
  static inline bool Value_IsValid(int value) {
    return ListOrderCodesCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ListOrderCodesCode_Value_Value_MIN;
  static const Value Value_MAX =
    ListOrderCodesCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ListOrderCodesCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ListOrderCodesCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ListOrderCodesCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ListOrderCodesCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ListOrderCodesCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ListOrderCodesCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ListOrderCodesCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ListOrderCodesCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ListStatusCode) */ {
 public:
  ListStatusCode();
  virtual ~ListStatusCode();

  ListStatusCode(const ListStatusCode& from);

  inline ListStatusCode& operator=(const ListStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListStatusCode(ListStatusCode&& from) noexcept
    : ListStatusCode() {
    *this = ::std::move(from);
  }

  inline ListStatusCode& operator=(ListStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListStatusCode* internal_default_instance() {
    return reinterpret_cast<const ListStatusCode*>(
               &_ListStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    155;

  void Swap(ListStatusCode* other);
  friend void swap(ListStatusCode& a, ListStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListStatusCode* New() const final {
    return CreateMaybeMessage<ListStatusCode>(NULL);
  }

  ListStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListStatusCode& from);
  void MergeFrom(const ListStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ListStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ListStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value CURRENT =
    ListStatusCode_Value_CURRENT;
  static const Value RETIRED =
    ListStatusCode_Value_RETIRED;
  static const Value ENTERED_IN_ERROR =
    ListStatusCode_Value_ENTERED_IN_ERROR;
  static inline bool Value_IsValid(int value) {
    return ListStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ListStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    ListStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ListStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ListStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ListStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ListStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ListStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ListStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ListStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ListStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LocationModeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.LocationModeCode) */ {
 public:
  LocationModeCode();
  virtual ~LocationModeCode();

  LocationModeCode(const LocationModeCode& from);

  inline LocationModeCode& operator=(const LocationModeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LocationModeCode(LocationModeCode&& from) noexcept
    : LocationModeCode() {
    *this = ::std::move(from);
  }

  inline LocationModeCode& operator=(LocationModeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LocationModeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocationModeCode* internal_default_instance() {
    return reinterpret_cast<const LocationModeCode*>(
               &_LocationModeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    156;

  void Swap(LocationModeCode* other);
  friend void swap(LocationModeCode& a, LocationModeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LocationModeCode* New() const final {
    return CreateMaybeMessage<LocationModeCode>(NULL);
  }

  LocationModeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LocationModeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LocationModeCode& from);
  void MergeFrom(const LocationModeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LocationModeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef LocationModeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    LocationModeCode_Value_INVALID_UNINITIALIZED;
  static const Value INSTANCE =
    LocationModeCode_Value_INSTANCE;
  static const Value KIND =
    LocationModeCode_Value_KIND;
  static inline bool Value_IsValid(int value) {
    return LocationModeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    LocationModeCode_Value_Value_MIN;
  static const Value Value_MAX =
    LocationModeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    LocationModeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return LocationModeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return LocationModeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return LocationModeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.LocationModeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::LocationModeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::LocationModeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.LocationModeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LocationTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.LocationTypeCode) */ {
 public:
  LocationTypeCode();
  virtual ~LocationTypeCode();

  LocationTypeCode(const LocationTypeCode& from);

  inline LocationTypeCode& operator=(const LocationTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LocationTypeCode(LocationTypeCode&& from) noexcept
    : LocationTypeCode() {
    *this = ::std::move(from);
  }

  inline LocationTypeCode& operator=(LocationTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LocationTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocationTypeCode* internal_default_instance() {
    return reinterpret_cast<const LocationTypeCode*>(
               &_LocationTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    157;

  void Swap(LocationTypeCode* other);
  friend void swap(LocationTypeCode& a, LocationTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LocationTypeCode* New() const final {
    return CreateMaybeMessage<LocationTypeCode>(NULL);
  }

  LocationTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LocationTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LocationTypeCode& from);
  void MergeFrom(const LocationTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LocationTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef LocationTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    LocationTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value SI =
    LocationTypeCode_Value_SI;
  static const Value BU =
    LocationTypeCode_Value_BU;
  static const Value WI =
    LocationTypeCode_Value_WI;
  static const Value WA =
    LocationTypeCode_Value_WA;
  static const Value LVL =
    LocationTypeCode_Value_LVL;
  static const Value CO =
    LocationTypeCode_Value_CO;
  static const Value RO =
    LocationTypeCode_Value_RO;
  static const Value BD =
    LocationTypeCode_Value_BD;
  static const Value VE =
    LocationTypeCode_Value_VE;
  static const Value HO =
    LocationTypeCode_Value_HO;
  static const Value CA =
    LocationTypeCode_Value_CA;
  static const Value RD =
    LocationTypeCode_Value_RD;
  static const Value AREA =
    LocationTypeCode_Value_AREA;
  static const Value JDN =
    LocationTypeCode_Value_JDN;
  static inline bool Value_IsValid(int value) {
    return LocationTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    LocationTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    LocationTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    LocationTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return LocationTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return LocationTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return LocationTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.LocationTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::LocationTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::LocationTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.LocationTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LocationStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.LocationStatusCode) */ {
 public:
  LocationStatusCode();
  virtual ~LocationStatusCode();

  LocationStatusCode(const LocationStatusCode& from);

  inline LocationStatusCode& operator=(const LocationStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LocationStatusCode(LocationStatusCode&& from) noexcept
    : LocationStatusCode() {
    *this = ::std::move(from);
  }

  inline LocationStatusCode& operator=(LocationStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LocationStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocationStatusCode* internal_default_instance() {
    return reinterpret_cast<const LocationStatusCode*>(
               &_LocationStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    158;

  void Swap(LocationStatusCode* other);
  friend void swap(LocationStatusCode& a, LocationStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LocationStatusCode* New() const final {
    return CreateMaybeMessage<LocationStatusCode>(NULL);
  }

  LocationStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LocationStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LocationStatusCode& from);
  void MergeFrom(const LocationStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LocationStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef LocationStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    LocationStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value ACTIVE =
    LocationStatusCode_Value_ACTIVE;
  static const Value SUSPENDED =
    LocationStatusCode_Value_SUSPENDED;
  static const Value INACTIVE =
    LocationStatusCode_Value_INACTIVE;
  static inline bool Value_IsValid(int value) {
    return LocationStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    LocationStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    LocationStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    LocationStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return LocationStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return LocationStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return LocationStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.LocationStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::LocationStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::LocationStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.LocationStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProbabilityDistributionTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ProbabilityDistributionTypeCode) */ {
 public:
  ProbabilityDistributionTypeCode();
  virtual ~ProbabilityDistributionTypeCode();

  ProbabilityDistributionTypeCode(const ProbabilityDistributionTypeCode& from);

  inline ProbabilityDistributionTypeCode& operator=(const ProbabilityDistributionTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProbabilityDistributionTypeCode(ProbabilityDistributionTypeCode&& from) noexcept
    : ProbabilityDistributionTypeCode() {
    *this = ::std::move(from);
  }

  inline ProbabilityDistributionTypeCode& operator=(ProbabilityDistributionTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProbabilityDistributionTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProbabilityDistributionTypeCode* internal_default_instance() {
    return reinterpret_cast<const ProbabilityDistributionTypeCode*>(
               &_ProbabilityDistributionTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    159;

  void Swap(ProbabilityDistributionTypeCode* other);
  friend void swap(ProbabilityDistributionTypeCode& a, ProbabilityDistributionTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProbabilityDistributionTypeCode* New() const final {
    return CreateMaybeMessage<ProbabilityDistributionTypeCode>(NULL);
  }

  ProbabilityDistributionTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProbabilityDistributionTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProbabilityDistributionTypeCode& from);
  void MergeFrom(const ProbabilityDistributionTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProbabilityDistributionTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ProbabilityDistributionTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ProbabilityDistributionTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value B =
    ProbabilityDistributionTypeCode_Value_B;
  static const Value E =
    ProbabilityDistributionTypeCode_Value_E;
  static const Value F =
    ProbabilityDistributionTypeCode_Value_F;
  static const Value G =
    ProbabilityDistributionTypeCode_Value_G;
  static const Value LN =
    ProbabilityDistributionTypeCode_Value_LN;
  static const Value N =
    ProbabilityDistributionTypeCode_Value_N;
  static const Value T =
    ProbabilityDistributionTypeCode_Value_T;
  static const Value U =
    ProbabilityDistributionTypeCode_Value_U;
  static const Value X2 =
    ProbabilityDistributionTypeCode_Value_X2;
  static inline bool Value_IsValid(int value) {
    return ProbabilityDistributionTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ProbabilityDistributionTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    ProbabilityDistributionTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ProbabilityDistributionTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ProbabilityDistributionTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ProbabilityDistributionTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ProbabilityDistributionTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ProbabilityDistributionTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ProbabilityDistributionTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ProbabilityDistributionTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ProbabilityDistributionTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StructureMapContextTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.StructureMapContextTypeCode) */ {
 public:
  StructureMapContextTypeCode();
  virtual ~StructureMapContextTypeCode();

  StructureMapContextTypeCode(const StructureMapContextTypeCode& from);

  inline StructureMapContextTypeCode& operator=(const StructureMapContextTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StructureMapContextTypeCode(StructureMapContextTypeCode&& from) noexcept
    : StructureMapContextTypeCode() {
    *this = ::std::move(from);
  }

  inline StructureMapContextTypeCode& operator=(StructureMapContextTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StructureMapContextTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StructureMapContextTypeCode* internal_default_instance() {
    return reinterpret_cast<const StructureMapContextTypeCode*>(
               &_StructureMapContextTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    160;

  void Swap(StructureMapContextTypeCode* other);
  friend void swap(StructureMapContextTypeCode& a, StructureMapContextTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StructureMapContextTypeCode* New() const final {
    return CreateMaybeMessage<StructureMapContextTypeCode>(NULL);
  }

  StructureMapContextTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StructureMapContextTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StructureMapContextTypeCode& from);
  void MergeFrom(const StructureMapContextTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StructureMapContextTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef StructureMapContextTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    StructureMapContextTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value TYPE =
    StructureMapContextTypeCode_Value_TYPE;
  static const Value VARIABLE =
    StructureMapContextTypeCode_Value_VARIABLE;
  static inline bool Value_IsValid(int value) {
    return StructureMapContextTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    StructureMapContextTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    StructureMapContextTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    StructureMapContextTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return StructureMapContextTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return StructureMapContextTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return StructureMapContextTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.StructureMapContextTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::StructureMapContextTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::StructureMapContextTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.StructureMapContextTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StructureMapGroupTypeModeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.StructureMapGroupTypeModeCode) */ {
 public:
  StructureMapGroupTypeModeCode();
  virtual ~StructureMapGroupTypeModeCode();

  StructureMapGroupTypeModeCode(const StructureMapGroupTypeModeCode& from);

  inline StructureMapGroupTypeModeCode& operator=(const StructureMapGroupTypeModeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StructureMapGroupTypeModeCode(StructureMapGroupTypeModeCode&& from) noexcept
    : StructureMapGroupTypeModeCode() {
    *this = ::std::move(from);
  }

  inline StructureMapGroupTypeModeCode& operator=(StructureMapGroupTypeModeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StructureMapGroupTypeModeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StructureMapGroupTypeModeCode* internal_default_instance() {
    return reinterpret_cast<const StructureMapGroupTypeModeCode*>(
               &_StructureMapGroupTypeModeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    161;

  void Swap(StructureMapGroupTypeModeCode* other);
  friend void swap(StructureMapGroupTypeModeCode& a, StructureMapGroupTypeModeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StructureMapGroupTypeModeCode* New() const final {
    return CreateMaybeMessage<StructureMapGroupTypeModeCode>(NULL);
  }

  StructureMapGroupTypeModeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StructureMapGroupTypeModeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StructureMapGroupTypeModeCode& from);
  void MergeFrom(const StructureMapGroupTypeModeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StructureMapGroupTypeModeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef StructureMapGroupTypeModeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    StructureMapGroupTypeModeCode_Value_INVALID_UNINITIALIZED;
  static const Value NONE =
    StructureMapGroupTypeModeCode_Value_NONE;
  static const Value TYPES =
    StructureMapGroupTypeModeCode_Value_TYPES;
  static const Value TYPE_AND_TYPES =
    StructureMapGroupTypeModeCode_Value_TYPE_AND_TYPES;
  static inline bool Value_IsValid(int value) {
    return StructureMapGroupTypeModeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    StructureMapGroupTypeModeCode_Value_Value_MIN;
  static const Value Value_MAX =
    StructureMapGroupTypeModeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    StructureMapGroupTypeModeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return StructureMapGroupTypeModeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return StructureMapGroupTypeModeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return StructureMapGroupTypeModeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.StructureMapGroupTypeModeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::StructureMapGroupTypeModeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::StructureMapGroupTypeModeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.StructureMapGroupTypeModeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StructureMapInputModeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.StructureMapInputModeCode) */ {
 public:
  StructureMapInputModeCode();
  virtual ~StructureMapInputModeCode();

  StructureMapInputModeCode(const StructureMapInputModeCode& from);

  inline StructureMapInputModeCode& operator=(const StructureMapInputModeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StructureMapInputModeCode(StructureMapInputModeCode&& from) noexcept
    : StructureMapInputModeCode() {
    *this = ::std::move(from);
  }

  inline StructureMapInputModeCode& operator=(StructureMapInputModeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StructureMapInputModeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StructureMapInputModeCode* internal_default_instance() {
    return reinterpret_cast<const StructureMapInputModeCode*>(
               &_StructureMapInputModeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    162;

  void Swap(StructureMapInputModeCode* other);
  friend void swap(StructureMapInputModeCode& a, StructureMapInputModeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StructureMapInputModeCode* New() const final {
    return CreateMaybeMessage<StructureMapInputModeCode>(NULL);
  }

  StructureMapInputModeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StructureMapInputModeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StructureMapInputModeCode& from);
  void MergeFrom(const StructureMapInputModeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StructureMapInputModeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef StructureMapInputModeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    StructureMapInputModeCode_Value_INVALID_UNINITIALIZED;
  static const Value SOURCE =
    StructureMapInputModeCode_Value_SOURCE;
  static const Value TARGET =
    StructureMapInputModeCode_Value_TARGET;
  static inline bool Value_IsValid(int value) {
    return StructureMapInputModeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    StructureMapInputModeCode_Value_Value_MIN;
  static const Value Value_MAX =
    StructureMapInputModeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    StructureMapInputModeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return StructureMapInputModeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return StructureMapInputModeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return StructureMapInputModeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.StructureMapInputModeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::StructureMapInputModeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::StructureMapInputModeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.StructureMapInputModeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StructureMapModelModeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.StructureMapModelModeCode) */ {
 public:
  StructureMapModelModeCode();
  virtual ~StructureMapModelModeCode();

  StructureMapModelModeCode(const StructureMapModelModeCode& from);

  inline StructureMapModelModeCode& operator=(const StructureMapModelModeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StructureMapModelModeCode(StructureMapModelModeCode&& from) noexcept
    : StructureMapModelModeCode() {
    *this = ::std::move(from);
  }

  inline StructureMapModelModeCode& operator=(StructureMapModelModeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StructureMapModelModeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StructureMapModelModeCode* internal_default_instance() {
    return reinterpret_cast<const StructureMapModelModeCode*>(
               &_StructureMapModelModeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    163;

  void Swap(StructureMapModelModeCode* other);
  friend void swap(StructureMapModelModeCode& a, StructureMapModelModeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StructureMapModelModeCode* New() const final {
    return CreateMaybeMessage<StructureMapModelModeCode>(NULL);
  }

  StructureMapModelModeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StructureMapModelModeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StructureMapModelModeCode& from);
  void MergeFrom(const StructureMapModelModeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StructureMapModelModeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef StructureMapModelModeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    StructureMapModelModeCode_Value_INVALID_UNINITIALIZED;
  static const Value SOURCE =
    StructureMapModelModeCode_Value_SOURCE;
  static const Value QUERIED =
    StructureMapModelModeCode_Value_QUERIED;
  static const Value TARGET =
    StructureMapModelModeCode_Value_TARGET;
  static const Value PRODUCED =
    StructureMapModelModeCode_Value_PRODUCED;
  static inline bool Value_IsValid(int value) {
    return StructureMapModelModeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    StructureMapModelModeCode_Value_Value_MIN;
  static const Value Value_MAX =
    StructureMapModelModeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    StructureMapModelModeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return StructureMapModelModeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return StructureMapModelModeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return StructureMapModelModeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.StructureMapModelModeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::StructureMapModelModeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::StructureMapModelModeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.StructureMapModelModeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StructureMapSourceListModeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.StructureMapSourceListModeCode) */ {
 public:
  StructureMapSourceListModeCode();
  virtual ~StructureMapSourceListModeCode();

  StructureMapSourceListModeCode(const StructureMapSourceListModeCode& from);

  inline StructureMapSourceListModeCode& operator=(const StructureMapSourceListModeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StructureMapSourceListModeCode(StructureMapSourceListModeCode&& from) noexcept
    : StructureMapSourceListModeCode() {
    *this = ::std::move(from);
  }

  inline StructureMapSourceListModeCode& operator=(StructureMapSourceListModeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StructureMapSourceListModeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StructureMapSourceListModeCode* internal_default_instance() {
    return reinterpret_cast<const StructureMapSourceListModeCode*>(
               &_StructureMapSourceListModeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    164;

  void Swap(StructureMapSourceListModeCode* other);
  friend void swap(StructureMapSourceListModeCode& a, StructureMapSourceListModeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StructureMapSourceListModeCode* New() const final {
    return CreateMaybeMessage<StructureMapSourceListModeCode>(NULL);
  }

  StructureMapSourceListModeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StructureMapSourceListModeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StructureMapSourceListModeCode& from);
  void MergeFrom(const StructureMapSourceListModeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StructureMapSourceListModeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef StructureMapSourceListModeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    StructureMapSourceListModeCode_Value_INVALID_UNINITIALIZED;
  static const Value FIRST =
    StructureMapSourceListModeCode_Value_FIRST;
  static const Value NOT_FIRST =
    StructureMapSourceListModeCode_Value_NOT_FIRST;
  static const Value LAST =
    StructureMapSourceListModeCode_Value_LAST;
  static const Value NOT_LAST =
    StructureMapSourceListModeCode_Value_NOT_LAST;
  static const Value ONLY_ONE =
    StructureMapSourceListModeCode_Value_ONLY_ONE;
  static inline bool Value_IsValid(int value) {
    return StructureMapSourceListModeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    StructureMapSourceListModeCode_Value_Value_MIN;
  static const Value Value_MAX =
    StructureMapSourceListModeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    StructureMapSourceListModeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return StructureMapSourceListModeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return StructureMapSourceListModeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return StructureMapSourceListModeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.StructureMapSourceListModeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::StructureMapSourceListModeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::StructureMapSourceListModeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.StructureMapSourceListModeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StructureMapTargetListModeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.StructureMapTargetListModeCode) */ {
 public:
  StructureMapTargetListModeCode();
  virtual ~StructureMapTargetListModeCode();

  StructureMapTargetListModeCode(const StructureMapTargetListModeCode& from);

  inline StructureMapTargetListModeCode& operator=(const StructureMapTargetListModeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StructureMapTargetListModeCode(StructureMapTargetListModeCode&& from) noexcept
    : StructureMapTargetListModeCode() {
    *this = ::std::move(from);
  }

  inline StructureMapTargetListModeCode& operator=(StructureMapTargetListModeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StructureMapTargetListModeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StructureMapTargetListModeCode* internal_default_instance() {
    return reinterpret_cast<const StructureMapTargetListModeCode*>(
               &_StructureMapTargetListModeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    165;

  void Swap(StructureMapTargetListModeCode* other);
  friend void swap(StructureMapTargetListModeCode& a, StructureMapTargetListModeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StructureMapTargetListModeCode* New() const final {
    return CreateMaybeMessage<StructureMapTargetListModeCode>(NULL);
  }

  StructureMapTargetListModeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StructureMapTargetListModeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StructureMapTargetListModeCode& from);
  void MergeFrom(const StructureMapTargetListModeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StructureMapTargetListModeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef StructureMapTargetListModeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    StructureMapTargetListModeCode_Value_INVALID_UNINITIALIZED;
  static const Value FIRST =
    StructureMapTargetListModeCode_Value_FIRST;
  static const Value SHARE =
    StructureMapTargetListModeCode_Value_SHARE;
  static const Value LAST =
    StructureMapTargetListModeCode_Value_LAST;
  static const Value COLLATE =
    StructureMapTargetListModeCode_Value_COLLATE;
  static inline bool Value_IsValid(int value) {
    return StructureMapTargetListModeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    StructureMapTargetListModeCode_Value_Value_MIN;
  static const Value Value_MAX =
    StructureMapTargetListModeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    StructureMapTargetListModeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return StructureMapTargetListModeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return StructureMapTargetListModeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return StructureMapTargetListModeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.StructureMapTargetListModeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::StructureMapTargetListModeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::StructureMapTargetListModeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.StructureMapTargetListModeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StructureMapTransformCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.StructureMapTransformCode) */ {
 public:
  StructureMapTransformCode();
  virtual ~StructureMapTransformCode();

  StructureMapTransformCode(const StructureMapTransformCode& from);

  inline StructureMapTransformCode& operator=(const StructureMapTransformCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StructureMapTransformCode(StructureMapTransformCode&& from) noexcept
    : StructureMapTransformCode() {
    *this = ::std::move(from);
  }

  inline StructureMapTransformCode& operator=(StructureMapTransformCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StructureMapTransformCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StructureMapTransformCode* internal_default_instance() {
    return reinterpret_cast<const StructureMapTransformCode*>(
               &_StructureMapTransformCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    166;

  void Swap(StructureMapTransformCode* other);
  friend void swap(StructureMapTransformCode& a, StructureMapTransformCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StructureMapTransformCode* New() const final {
    return CreateMaybeMessage<StructureMapTransformCode>(NULL);
  }

  StructureMapTransformCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StructureMapTransformCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StructureMapTransformCode& from);
  void MergeFrom(const StructureMapTransformCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StructureMapTransformCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef StructureMapTransformCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    StructureMapTransformCode_Value_INVALID_UNINITIALIZED;
  static const Value CREATE =
    StructureMapTransformCode_Value_CREATE;
  static const Value COPY =
    StructureMapTransformCode_Value_COPY;
  static const Value TRUNCATE =
    StructureMapTransformCode_Value_TRUNCATE;
  static const Value ESCAPE =
    StructureMapTransformCode_Value_ESCAPE;
  static const Value CAST =
    StructureMapTransformCode_Value_CAST;
  static const Value APPEND =
    StructureMapTransformCode_Value_APPEND;
  static const Value TRANSLATE =
    StructureMapTransformCode_Value_TRANSLATE;
  static const Value REFERENCE =
    StructureMapTransformCode_Value_REFERENCE;
  static const Value DATE_OP =
    StructureMapTransformCode_Value_DATE_OP;
  static const Value UUID =
    StructureMapTransformCode_Value_UUID;
  static const Value POINTER =
    StructureMapTransformCode_Value_POINTER;
  static const Value EVALUATE =
    StructureMapTransformCode_Value_EVALUATE;
  static const Value CC =
    StructureMapTransformCode_Value_CC;
  static const Value C =
    StructureMapTransformCode_Value_C;
  static const Value QTY =
    StructureMapTransformCode_Value_QTY;
  static const Value ID =
    StructureMapTransformCode_Value_ID;
  static const Value CP =
    StructureMapTransformCode_Value_CP;
  static inline bool Value_IsValid(int value) {
    return StructureMapTransformCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    StructureMapTransformCode_Value_Value_MIN;
  static const Value Value_MAX =
    StructureMapTransformCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    StructureMapTransformCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return StructureMapTransformCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return StructureMapTransformCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return StructureMapTransformCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.StructureMapTransformCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::StructureMapTransformCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::StructureMapTransformCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.StructureMapTransformCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MatchGradeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.MatchGradeCode) */ {
 public:
  MatchGradeCode();
  virtual ~MatchGradeCode();

  MatchGradeCode(const MatchGradeCode& from);

  inline MatchGradeCode& operator=(const MatchGradeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchGradeCode(MatchGradeCode&& from) noexcept
    : MatchGradeCode() {
    *this = ::std::move(from);
  }

  inline MatchGradeCode& operator=(MatchGradeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchGradeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MatchGradeCode* internal_default_instance() {
    return reinterpret_cast<const MatchGradeCode*>(
               &_MatchGradeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    167;

  void Swap(MatchGradeCode* other);
  friend void swap(MatchGradeCode& a, MatchGradeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchGradeCode* New() const final {
    return CreateMaybeMessage<MatchGradeCode>(NULL);
  }

  MatchGradeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MatchGradeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MatchGradeCode& from);
  void MergeFrom(const MatchGradeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MatchGradeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MatchGradeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    MatchGradeCode_Value_INVALID_UNINITIALIZED;
  static const Value CERTAIN =
    MatchGradeCode_Value_CERTAIN;
  static const Value PROBABLE =
    MatchGradeCode_Value_PROBABLE;
  static const Value POSSIBLE =
    MatchGradeCode_Value_POSSIBLE;
  static const Value CERTAINLY_NOT =
    MatchGradeCode_Value_CERTAINLY_NOT;
  static inline bool Value_IsValid(int value) {
    return MatchGradeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    MatchGradeCode_Value_Value_MIN;
  static const Value Value_MAX =
    MatchGradeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    MatchGradeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return MatchGradeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return MatchGradeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return MatchGradeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.MatchGradeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::MatchGradeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::MatchGradeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.MatchGradeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MeasureDataUsageCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.MeasureDataUsageCode) */ {
 public:
  MeasureDataUsageCode();
  virtual ~MeasureDataUsageCode();

  MeasureDataUsageCode(const MeasureDataUsageCode& from);

  inline MeasureDataUsageCode& operator=(const MeasureDataUsageCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MeasureDataUsageCode(MeasureDataUsageCode&& from) noexcept
    : MeasureDataUsageCode() {
    *this = ::std::move(from);
  }

  inline MeasureDataUsageCode& operator=(MeasureDataUsageCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MeasureDataUsageCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MeasureDataUsageCode* internal_default_instance() {
    return reinterpret_cast<const MeasureDataUsageCode*>(
               &_MeasureDataUsageCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    168;

  void Swap(MeasureDataUsageCode* other);
  friend void swap(MeasureDataUsageCode& a, MeasureDataUsageCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MeasureDataUsageCode* New() const final {
    return CreateMaybeMessage<MeasureDataUsageCode>(NULL);
  }

  MeasureDataUsageCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MeasureDataUsageCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MeasureDataUsageCode& from);
  void MergeFrom(const MeasureDataUsageCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MeasureDataUsageCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MeasureDataUsageCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    MeasureDataUsageCode_Value_INVALID_UNINITIALIZED;
  static const Value SUPPLEMENTAL_DATA =
    MeasureDataUsageCode_Value_SUPPLEMENTAL_DATA;
  static const Value RISK_ADJUSTMENT_FACTOR =
    MeasureDataUsageCode_Value_RISK_ADJUSTMENT_FACTOR;
  static inline bool Value_IsValid(int value) {
    return MeasureDataUsageCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    MeasureDataUsageCode_Value_Value_MIN;
  static const Value Value_MAX =
    MeasureDataUsageCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    MeasureDataUsageCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return MeasureDataUsageCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return MeasureDataUsageCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return MeasureDataUsageCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.MeasureDataUsageCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::MeasureDataUsageCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::MeasureDataUsageCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.MeasureDataUsageCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MeasmntPrincipleCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.MeasmntPrincipleCode) */ {
 public:
  MeasmntPrincipleCode();
  virtual ~MeasmntPrincipleCode();

  MeasmntPrincipleCode(const MeasmntPrincipleCode& from);

  inline MeasmntPrincipleCode& operator=(const MeasmntPrincipleCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MeasmntPrincipleCode(MeasmntPrincipleCode&& from) noexcept
    : MeasmntPrincipleCode() {
    *this = ::std::move(from);
  }

  inline MeasmntPrincipleCode& operator=(MeasmntPrincipleCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MeasmntPrincipleCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MeasmntPrincipleCode* internal_default_instance() {
    return reinterpret_cast<const MeasmntPrincipleCode*>(
               &_MeasmntPrincipleCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    169;

  void Swap(MeasmntPrincipleCode* other);
  friend void swap(MeasmntPrincipleCode& a, MeasmntPrincipleCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MeasmntPrincipleCode* New() const final {
    return CreateMaybeMessage<MeasmntPrincipleCode>(NULL);
  }

  MeasmntPrincipleCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MeasmntPrincipleCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MeasmntPrincipleCode& from);
  void MergeFrom(const MeasmntPrincipleCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MeasmntPrincipleCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MeasmntPrincipleCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    MeasmntPrincipleCode_Value_INVALID_UNINITIALIZED;
  static const Value OTHER =
    MeasmntPrincipleCode_Value_OTHER;
  static const Value CHEMICAL =
    MeasmntPrincipleCode_Value_CHEMICAL;
  static const Value ELECTRICAL =
    MeasmntPrincipleCode_Value_ELECTRICAL;
  static const Value IMPEDANCE =
    MeasmntPrincipleCode_Value_IMPEDANCE;
  static const Value NUCLEAR =
    MeasmntPrincipleCode_Value_NUCLEAR;
  static const Value OPTICAL =
    MeasmntPrincipleCode_Value_OPTICAL;
  static const Value THERMAL =
    MeasmntPrincipleCode_Value_THERMAL;
  static const Value BIOLOGICAL =
    MeasmntPrincipleCode_Value_BIOLOGICAL;
  static const Value MECHANICAL =
    MeasmntPrincipleCode_Value_MECHANICAL;
  static const Value ACOUSTICAL =
    MeasmntPrincipleCode_Value_ACOUSTICAL;
  static const Value MANUAL =
    MeasmntPrincipleCode_Value_MANUAL;
  static inline bool Value_IsValid(int value) {
    return MeasmntPrincipleCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    MeasmntPrincipleCode_Value_Value_MIN;
  static const Value Value_MAX =
    MeasmntPrincipleCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    MeasmntPrincipleCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return MeasmntPrincipleCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return MeasmntPrincipleCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return MeasmntPrincipleCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.MeasmntPrincipleCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::MeasmntPrincipleCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::MeasmntPrincipleCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.MeasmntPrincipleCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MeasurePopulationTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.MeasurePopulationTypeCode) */ {
 public:
  MeasurePopulationTypeCode();
  virtual ~MeasurePopulationTypeCode();

  MeasurePopulationTypeCode(const MeasurePopulationTypeCode& from);

  inline MeasurePopulationTypeCode& operator=(const MeasurePopulationTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MeasurePopulationTypeCode(MeasurePopulationTypeCode&& from) noexcept
    : MeasurePopulationTypeCode() {
    *this = ::std::move(from);
  }

  inline MeasurePopulationTypeCode& operator=(MeasurePopulationTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MeasurePopulationTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MeasurePopulationTypeCode* internal_default_instance() {
    return reinterpret_cast<const MeasurePopulationTypeCode*>(
               &_MeasurePopulationTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    170;

  void Swap(MeasurePopulationTypeCode* other);
  friend void swap(MeasurePopulationTypeCode& a, MeasurePopulationTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MeasurePopulationTypeCode* New() const final {
    return CreateMaybeMessage<MeasurePopulationTypeCode>(NULL);
  }

  MeasurePopulationTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MeasurePopulationTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MeasurePopulationTypeCode& from);
  void MergeFrom(const MeasurePopulationTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MeasurePopulationTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MeasurePopulationTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    MeasurePopulationTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value INITIAL_POPULATION =
    MeasurePopulationTypeCode_Value_INITIAL_POPULATION;
  static const Value NUMERATOR =
    MeasurePopulationTypeCode_Value_NUMERATOR;
  static const Value NUMERATOR_EXCLUSION =
    MeasurePopulationTypeCode_Value_NUMERATOR_EXCLUSION;
  static const Value DENOMINATOR =
    MeasurePopulationTypeCode_Value_DENOMINATOR;
  static const Value DENOMINATOR_EXCLUSION =
    MeasurePopulationTypeCode_Value_DENOMINATOR_EXCLUSION;
  static const Value DENOMINATOR_EXCEPTION =
    MeasurePopulationTypeCode_Value_DENOMINATOR_EXCEPTION;
  static const Value MEASURE_POPULATION =
    MeasurePopulationTypeCode_Value_MEASURE_POPULATION;
  static const Value MEASURE_POPULATION_EXCLUSION =
    MeasurePopulationTypeCode_Value_MEASURE_POPULATION_EXCLUSION;
  static const Value MEASURE_OBSERVATION =
    MeasurePopulationTypeCode_Value_MEASURE_OBSERVATION;
  static inline bool Value_IsValid(int value) {
    return MeasurePopulationTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    MeasurePopulationTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    MeasurePopulationTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    MeasurePopulationTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return MeasurePopulationTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return MeasurePopulationTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return MeasurePopulationTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.MeasurePopulationTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::MeasurePopulationTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::MeasurePopulationTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.MeasurePopulationTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MeasureReportStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.MeasureReportStatusCode) */ {
 public:
  MeasureReportStatusCode();
  virtual ~MeasureReportStatusCode();

  MeasureReportStatusCode(const MeasureReportStatusCode& from);

  inline MeasureReportStatusCode& operator=(const MeasureReportStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MeasureReportStatusCode(MeasureReportStatusCode&& from) noexcept
    : MeasureReportStatusCode() {
    *this = ::std::move(from);
  }

  inline MeasureReportStatusCode& operator=(MeasureReportStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MeasureReportStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MeasureReportStatusCode* internal_default_instance() {
    return reinterpret_cast<const MeasureReportStatusCode*>(
               &_MeasureReportStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    171;

  void Swap(MeasureReportStatusCode* other);
  friend void swap(MeasureReportStatusCode& a, MeasureReportStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MeasureReportStatusCode* New() const final {
    return CreateMaybeMessage<MeasureReportStatusCode>(NULL);
  }

  MeasureReportStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MeasureReportStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MeasureReportStatusCode& from);
  void MergeFrom(const MeasureReportStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MeasureReportStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MeasureReportStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    MeasureReportStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value COMPLETE =
    MeasureReportStatusCode_Value_COMPLETE;
  static const Value PENDING =
    MeasureReportStatusCode_Value_PENDING;
  static const Value ERROR =
    MeasureReportStatusCode_Value_ERROR;
  static inline bool Value_IsValid(int value) {
    return MeasureReportStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    MeasureReportStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    MeasureReportStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    MeasureReportStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return MeasureReportStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return MeasureReportStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return MeasureReportStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.MeasureReportStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::MeasureReportStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::MeasureReportStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.MeasureReportStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MeasureReportTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.MeasureReportTypeCode) */ {
 public:
  MeasureReportTypeCode();
  virtual ~MeasureReportTypeCode();

  MeasureReportTypeCode(const MeasureReportTypeCode& from);

  inline MeasureReportTypeCode& operator=(const MeasureReportTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MeasureReportTypeCode(MeasureReportTypeCode&& from) noexcept
    : MeasureReportTypeCode() {
    *this = ::std::move(from);
  }

  inline MeasureReportTypeCode& operator=(MeasureReportTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MeasureReportTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MeasureReportTypeCode* internal_default_instance() {
    return reinterpret_cast<const MeasureReportTypeCode*>(
               &_MeasureReportTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    172;

  void Swap(MeasureReportTypeCode* other);
  friend void swap(MeasureReportTypeCode& a, MeasureReportTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MeasureReportTypeCode* New() const final {
    return CreateMaybeMessage<MeasureReportTypeCode>(NULL);
  }

  MeasureReportTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MeasureReportTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MeasureReportTypeCode& from);
  void MergeFrom(const MeasureReportTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MeasureReportTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MeasureReportTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    MeasureReportTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value INDIVIDUAL =
    MeasureReportTypeCode_Value_INDIVIDUAL;
  static const Value PATIENT_LIST =
    MeasureReportTypeCode_Value_PATIENT_LIST;
  static const Value SUMMARY =
    MeasureReportTypeCode_Value_SUMMARY;
  static inline bool Value_IsValid(int value) {
    return MeasureReportTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    MeasureReportTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    MeasureReportTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    MeasureReportTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return MeasureReportTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return MeasureReportTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return MeasureReportTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.MeasureReportTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::MeasureReportTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::MeasureReportTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.MeasureReportTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MeasureScoringCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.MeasureScoringCode) */ {
 public:
  MeasureScoringCode();
  virtual ~MeasureScoringCode();

  MeasureScoringCode(const MeasureScoringCode& from);

  inline MeasureScoringCode& operator=(const MeasureScoringCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MeasureScoringCode(MeasureScoringCode&& from) noexcept
    : MeasureScoringCode() {
    *this = ::std::move(from);
  }

  inline MeasureScoringCode& operator=(MeasureScoringCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MeasureScoringCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MeasureScoringCode* internal_default_instance() {
    return reinterpret_cast<const MeasureScoringCode*>(
               &_MeasureScoringCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    173;

  void Swap(MeasureScoringCode* other);
  friend void swap(MeasureScoringCode& a, MeasureScoringCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MeasureScoringCode* New() const final {
    return CreateMaybeMessage<MeasureScoringCode>(NULL);
  }

  MeasureScoringCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MeasureScoringCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MeasureScoringCode& from);
  void MergeFrom(const MeasureScoringCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MeasureScoringCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MeasureScoringCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    MeasureScoringCode_Value_INVALID_UNINITIALIZED;
  static const Value PROPORTION =
    MeasureScoringCode_Value_PROPORTION;
  static const Value RATIO =
    MeasureScoringCode_Value_RATIO;
  static const Value CONTINUOUS_VARIABLE =
    MeasureScoringCode_Value_CONTINUOUS_VARIABLE;
  static const Value COHORT =
    MeasureScoringCode_Value_COHORT;
  static inline bool Value_IsValid(int value) {
    return MeasureScoringCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    MeasureScoringCode_Value_Value_MIN;
  static const Value Value_MAX =
    MeasureScoringCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    MeasureScoringCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return MeasureScoringCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return MeasureScoringCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return MeasureScoringCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.MeasureScoringCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::MeasureScoringCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::MeasureScoringCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.MeasureScoringCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MeasureTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.MeasureTypeCode) */ {
 public:
  MeasureTypeCode();
  virtual ~MeasureTypeCode();

  MeasureTypeCode(const MeasureTypeCode& from);

  inline MeasureTypeCode& operator=(const MeasureTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MeasureTypeCode(MeasureTypeCode&& from) noexcept
    : MeasureTypeCode() {
    *this = ::std::move(from);
  }

  inline MeasureTypeCode& operator=(MeasureTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MeasureTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MeasureTypeCode* internal_default_instance() {
    return reinterpret_cast<const MeasureTypeCode*>(
               &_MeasureTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    174;

  void Swap(MeasureTypeCode* other);
  friend void swap(MeasureTypeCode& a, MeasureTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MeasureTypeCode* New() const final {
    return CreateMaybeMessage<MeasureTypeCode>(NULL);
  }

  MeasureTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MeasureTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MeasureTypeCode& from);
  void MergeFrom(const MeasureTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MeasureTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MeasureTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    MeasureTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value PROCESS =
    MeasureTypeCode_Value_PROCESS;
  static const Value OUTCOME =
    MeasureTypeCode_Value_OUTCOME;
  static const Value STRUCTURE =
    MeasureTypeCode_Value_STRUCTURE;
  static const Value PATIENT_REPORTED_OUTCOME =
    MeasureTypeCode_Value_PATIENT_REPORTED_OUTCOME;
  static const Value COMPOSITE =
    MeasureTypeCode_Value_COMPOSITE;
  static inline bool Value_IsValid(int value) {
    return MeasureTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    MeasureTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    MeasureTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    MeasureTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return MeasureTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return MeasureTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return MeasureTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.MeasureTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::MeasureTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::MeasureTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.MeasureTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MedicationAdministrationCategoryCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.MedicationAdministrationCategoryCode) */ {
 public:
  MedicationAdministrationCategoryCode();
  virtual ~MedicationAdministrationCategoryCode();

  MedicationAdministrationCategoryCode(const MedicationAdministrationCategoryCode& from);

  inline MedicationAdministrationCategoryCode& operator=(const MedicationAdministrationCategoryCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MedicationAdministrationCategoryCode(MedicationAdministrationCategoryCode&& from) noexcept
    : MedicationAdministrationCategoryCode() {
    *this = ::std::move(from);
  }

  inline MedicationAdministrationCategoryCode& operator=(MedicationAdministrationCategoryCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MedicationAdministrationCategoryCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MedicationAdministrationCategoryCode* internal_default_instance() {
    return reinterpret_cast<const MedicationAdministrationCategoryCode*>(
               &_MedicationAdministrationCategoryCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    175;

  void Swap(MedicationAdministrationCategoryCode* other);
  friend void swap(MedicationAdministrationCategoryCode& a, MedicationAdministrationCategoryCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MedicationAdministrationCategoryCode* New() const final {
    return CreateMaybeMessage<MedicationAdministrationCategoryCode>(NULL);
  }

  MedicationAdministrationCategoryCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MedicationAdministrationCategoryCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MedicationAdministrationCategoryCode& from);
  void MergeFrom(const MedicationAdministrationCategoryCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MedicationAdministrationCategoryCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MedicationAdministrationCategoryCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    MedicationAdministrationCategoryCode_Value_INVALID_UNINITIALIZED;
  static const Value INPATIENT =
    MedicationAdministrationCategoryCode_Value_INPATIENT;
  static const Value OUTPATIENT =
    MedicationAdministrationCategoryCode_Value_OUTPATIENT;
  static const Value COMMUNITY =
    MedicationAdministrationCategoryCode_Value_COMMUNITY;
  static inline bool Value_IsValid(int value) {
    return MedicationAdministrationCategoryCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    MedicationAdministrationCategoryCode_Value_Value_MIN;
  static const Value Value_MAX =
    MedicationAdministrationCategoryCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    MedicationAdministrationCategoryCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return MedicationAdministrationCategoryCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return MedicationAdministrationCategoryCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return MedicationAdministrationCategoryCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.MedicationAdministrationCategoryCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::MedicationAdministrationCategoryCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::MedicationAdministrationCategoryCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.MedicationAdministrationCategoryCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MedicationAdministrationStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.MedicationAdministrationStatusCode) */ {
 public:
  MedicationAdministrationStatusCode();
  virtual ~MedicationAdministrationStatusCode();

  MedicationAdministrationStatusCode(const MedicationAdministrationStatusCode& from);

  inline MedicationAdministrationStatusCode& operator=(const MedicationAdministrationStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MedicationAdministrationStatusCode(MedicationAdministrationStatusCode&& from) noexcept
    : MedicationAdministrationStatusCode() {
    *this = ::std::move(from);
  }

  inline MedicationAdministrationStatusCode& operator=(MedicationAdministrationStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MedicationAdministrationStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MedicationAdministrationStatusCode* internal_default_instance() {
    return reinterpret_cast<const MedicationAdministrationStatusCode*>(
               &_MedicationAdministrationStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    176;

  void Swap(MedicationAdministrationStatusCode* other);
  friend void swap(MedicationAdministrationStatusCode& a, MedicationAdministrationStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MedicationAdministrationStatusCode* New() const final {
    return CreateMaybeMessage<MedicationAdministrationStatusCode>(NULL);
  }

  MedicationAdministrationStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MedicationAdministrationStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MedicationAdministrationStatusCode& from);
  void MergeFrom(const MedicationAdministrationStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MedicationAdministrationStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MedicationAdministrationStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    MedicationAdministrationStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value IN_PROGRESS =
    MedicationAdministrationStatusCode_Value_IN_PROGRESS;
  static const Value ON_HOLD =
    MedicationAdministrationStatusCode_Value_ON_HOLD;
  static const Value COMPLETED =
    MedicationAdministrationStatusCode_Value_COMPLETED;
  static const Value ENTERED_IN_ERROR =
    MedicationAdministrationStatusCode_Value_ENTERED_IN_ERROR;
  static const Value STOPPED =
    MedicationAdministrationStatusCode_Value_STOPPED;
  static const Value UNKNOWN =
    MedicationAdministrationStatusCode_Value_UNKNOWN;
  static inline bool Value_IsValid(int value) {
    return MedicationAdministrationStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    MedicationAdministrationStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    MedicationAdministrationStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    MedicationAdministrationStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return MedicationAdministrationStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return MedicationAdministrationStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return MedicationAdministrationStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.MedicationAdministrationStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::MedicationAdministrationStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::MedicationAdministrationStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.MedicationAdministrationStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MedicationDispenseCategoryCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.MedicationDispenseCategoryCode) */ {
 public:
  MedicationDispenseCategoryCode();
  virtual ~MedicationDispenseCategoryCode();

  MedicationDispenseCategoryCode(const MedicationDispenseCategoryCode& from);

  inline MedicationDispenseCategoryCode& operator=(const MedicationDispenseCategoryCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MedicationDispenseCategoryCode(MedicationDispenseCategoryCode&& from) noexcept
    : MedicationDispenseCategoryCode() {
    *this = ::std::move(from);
  }

  inline MedicationDispenseCategoryCode& operator=(MedicationDispenseCategoryCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MedicationDispenseCategoryCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MedicationDispenseCategoryCode* internal_default_instance() {
    return reinterpret_cast<const MedicationDispenseCategoryCode*>(
               &_MedicationDispenseCategoryCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    177;

  void Swap(MedicationDispenseCategoryCode* other);
  friend void swap(MedicationDispenseCategoryCode& a, MedicationDispenseCategoryCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MedicationDispenseCategoryCode* New() const final {
    return CreateMaybeMessage<MedicationDispenseCategoryCode>(NULL);
  }

  MedicationDispenseCategoryCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MedicationDispenseCategoryCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MedicationDispenseCategoryCode& from);
  void MergeFrom(const MedicationDispenseCategoryCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MedicationDispenseCategoryCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MedicationDispenseCategoryCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    MedicationDispenseCategoryCode_Value_INVALID_UNINITIALIZED;
  static const Value INPATIENT =
    MedicationDispenseCategoryCode_Value_INPATIENT;
  static const Value OUTPATIENT =
    MedicationDispenseCategoryCode_Value_OUTPATIENT;
  static const Value COMMUNITY =
    MedicationDispenseCategoryCode_Value_COMMUNITY;
  static inline bool Value_IsValid(int value) {
    return MedicationDispenseCategoryCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    MedicationDispenseCategoryCode_Value_Value_MIN;
  static const Value Value_MAX =
    MedicationDispenseCategoryCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    MedicationDispenseCategoryCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return MedicationDispenseCategoryCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return MedicationDispenseCategoryCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return MedicationDispenseCategoryCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.MedicationDispenseCategoryCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::MedicationDispenseCategoryCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::MedicationDispenseCategoryCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.MedicationDispenseCategoryCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MedicationDispenseStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.MedicationDispenseStatusCode) */ {
 public:
  MedicationDispenseStatusCode();
  virtual ~MedicationDispenseStatusCode();

  MedicationDispenseStatusCode(const MedicationDispenseStatusCode& from);

  inline MedicationDispenseStatusCode& operator=(const MedicationDispenseStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MedicationDispenseStatusCode(MedicationDispenseStatusCode&& from) noexcept
    : MedicationDispenseStatusCode() {
    *this = ::std::move(from);
  }

  inline MedicationDispenseStatusCode& operator=(MedicationDispenseStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MedicationDispenseStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MedicationDispenseStatusCode* internal_default_instance() {
    return reinterpret_cast<const MedicationDispenseStatusCode*>(
               &_MedicationDispenseStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    178;

  void Swap(MedicationDispenseStatusCode* other);
  friend void swap(MedicationDispenseStatusCode& a, MedicationDispenseStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MedicationDispenseStatusCode* New() const final {
    return CreateMaybeMessage<MedicationDispenseStatusCode>(NULL);
  }

  MedicationDispenseStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MedicationDispenseStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MedicationDispenseStatusCode& from);
  void MergeFrom(const MedicationDispenseStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MedicationDispenseStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MedicationDispenseStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    MedicationDispenseStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value PREPARATION =
    MedicationDispenseStatusCode_Value_PREPARATION;
  static const Value IN_PROGRESS =
    MedicationDispenseStatusCode_Value_IN_PROGRESS;
  static const Value ON_HOLD =
    MedicationDispenseStatusCode_Value_ON_HOLD;
  static const Value COMPLETED =
    MedicationDispenseStatusCode_Value_COMPLETED;
  static const Value ENTERED_IN_ERROR =
    MedicationDispenseStatusCode_Value_ENTERED_IN_ERROR;
  static const Value STOPPED =
    MedicationDispenseStatusCode_Value_STOPPED;
  static inline bool Value_IsValid(int value) {
    return MedicationDispenseStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    MedicationDispenseStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    MedicationDispenseStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    MedicationDispenseStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return MedicationDispenseStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return MedicationDispenseStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return MedicationDispenseStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.MedicationDispenseStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::MedicationDispenseStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::MedicationDispenseStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.MedicationDispenseStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MedicationContainerCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.MedicationContainerCode) */ {
 public:
  MedicationContainerCode();
  virtual ~MedicationContainerCode();

  MedicationContainerCode(const MedicationContainerCode& from);

  inline MedicationContainerCode& operator=(const MedicationContainerCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MedicationContainerCode(MedicationContainerCode&& from) noexcept
    : MedicationContainerCode() {
    *this = ::std::move(from);
  }

  inline MedicationContainerCode& operator=(MedicationContainerCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MedicationContainerCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MedicationContainerCode* internal_default_instance() {
    return reinterpret_cast<const MedicationContainerCode*>(
               &_MedicationContainerCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    179;

  void Swap(MedicationContainerCode* other);
  friend void swap(MedicationContainerCode& a, MedicationContainerCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MedicationContainerCode* New() const final {
    return CreateMaybeMessage<MedicationContainerCode>(NULL);
  }

  MedicationContainerCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MedicationContainerCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MedicationContainerCode& from);
  void MergeFrom(const MedicationContainerCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MedicationContainerCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MedicationContainerCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    MedicationContainerCode_Value_INVALID_UNINITIALIZED;
  static const Value AMPOULE =
    MedicationContainerCode_Value_AMPOULE;
  static const Value BOTTLE =
    MedicationContainerCode_Value_BOTTLE;
  static const Value BOX =
    MedicationContainerCode_Value_BOX;
  static const Value CARTRIDGE =
    MedicationContainerCode_Value_CARTRIDGE;
  static const Value CONTAINER =
    MedicationContainerCode_Value_CONTAINER;
  static const Value TUBE =
    MedicationContainerCode_Value_TUBE;
  static const Value UNITDOSE =
    MedicationContainerCode_Value_UNITDOSE;
  static const Value VIAL =
    MedicationContainerCode_Value_VIAL;
  static inline bool Value_IsValid(int value) {
    return MedicationContainerCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    MedicationContainerCode_Value_Value_MIN;
  static const Value Value_MAX =
    MedicationContainerCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    MedicationContainerCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return MedicationContainerCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return MedicationContainerCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return MedicationContainerCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.MedicationContainerCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::MedicationContainerCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::MedicationContainerCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.MedicationContainerCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MedicationRequestCategoryCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.MedicationRequestCategoryCode) */ {
 public:
  MedicationRequestCategoryCode();
  virtual ~MedicationRequestCategoryCode();

  MedicationRequestCategoryCode(const MedicationRequestCategoryCode& from);

  inline MedicationRequestCategoryCode& operator=(const MedicationRequestCategoryCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MedicationRequestCategoryCode(MedicationRequestCategoryCode&& from) noexcept
    : MedicationRequestCategoryCode() {
    *this = ::std::move(from);
  }

  inline MedicationRequestCategoryCode& operator=(MedicationRequestCategoryCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MedicationRequestCategoryCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MedicationRequestCategoryCode* internal_default_instance() {
    return reinterpret_cast<const MedicationRequestCategoryCode*>(
               &_MedicationRequestCategoryCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    180;

  void Swap(MedicationRequestCategoryCode* other);
  friend void swap(MedicationRequestCategoryCode& a, MedicationRequestCategoryCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MedicationRequestCategoryCode* New() const final {
    return CreateMaybeMessage<MedicationRequestCategoryCode>(NULL);
  }

  MedicationRequestCategoryCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MedicationRequestCategoryCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MedicationRequestCategoryCode& from);
  void MergeFrom(const MedicationRequestCategoryCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MedicationRequestCategoryCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MedicationRequestCategoryCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    MedicationRequestCategoryCode_Value_INVALID_UNINITIALIZED;
  static const Value INPATIENT =
    MedicationRequestCategoryCode_Value_INPATIENT;
  static const Value OUTPATIENT =
    MedicationRequestCategoryCode_Value_OUTPATIENT;
  static const Value COMMUNITY =
    MedicationRequestCategoryCode_Value_COMMUNITY;
  static inline bool Value_IsValid(int value) {
    return MedicationRequestCategoryCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    MedicationRequestCategoryCode_Value_Value_MIN;
  static const Value Value_MAX =
    MedicationRequestCategoryCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    MedicationRequestCategoryCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return MedicationRequestCategoryCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return MedicationRequestCategoryCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return MedicationRequestCategoryCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.MedicationRequestCategoryCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::MedicationRequestCategoryCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::MedicationRequestCategoryCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.MedicationRequestCategoryCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MedicationRequestIntentCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.MedicationRequestIntentCode) */ {
 public:
  MedicationRequestIntentCode();
  virtual ~MedicationRequestIntentCode();

  MedicationRequestIntentCode(const MedicationRequestIntentCode& from);

  inline MedicationRequestIntentCode& operator=(const MedicationRequestIntentCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MedicationRequestIntentCode(MedicationRequestIntentCode&& from) noexcept
    : MedicationRequestIntentCode() {
    *this = ::std::move(from);
  }

  inline MedicationRequestIntentCode& operator=(MedicationRequestIntentCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MedicationRequestIntentCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MedicationRequestIntentCode* internal_default_instance() {
    return reinterpret_cast<const MedicationRequestIntentCode*>(
               &_MedicationRequestIntentCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    181;

  void Swap(MedicationRequestIntentCode* other);
  friend void swap(MedicationRequestIntentCode& a, MedicationRequestIntentCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MedicationRequestIntentCode* New() const final {
    return CreateMaybeMessage<MedicationRequestIntentCode>(NULL);
  }

  MedicationRequestIntentCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MedicationRequestIntentCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MedicationRequestIntentCode& from);
  void MergeFrom(const MedicationRequestIntentCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MedicationRequestIntentCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MedicationRequestIntentCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    MedicationRequestIntentCode_Value_INVALID_UNINITIALIZED;
  static const Value PROPOSAL =
    MedicationRequestIntentCode_Value_PROPOSAL;
  static const Value PLAN =
    MedicationRequestIntentCode_Value_PLAN;
  static const Value ORDER =
    MedicationRequestIntentCode_Value_ORDER;
  static const Value INSTANCE_ORDER =
    MedicationRequestIntentCode_Value_INSTANCE_ORDER;
  static inline bool Value_IsValid(int value) {
    return MedicationRequestIntentCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    MedicationRequestIntentCode_Value_Value_MIN;
  static const Value Value_MAX =
    MedicationRequestIntentCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    MedicationRequestIntentCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return MedicationRequestIntentCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return MedicationRequestIntentCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return MedicationRequestIntentCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.MedicationRequestIntentCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::MedicationRequestIntentCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::MedicationRequestIntentCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.MedicationRequestIntentCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MedicationRequestPriorityCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.MedicationRequestPriorityCode) */ {
 public:
  MedicationRequestPriorityCode();
  virtual ~MedicationRequestPriorityCode();

  MedicationRequestPriorityCode(const MedicationRequestPriorityCode& from);

  inline MedicationRequestPriorityCode& operator=(const MedicationRequestPriorityCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MedicationRequestPriorityCode(MedicationRequestPriorityCode&& from) noexcept
    : MedicationRequestPriorityCode() {
    *this = ::std::move(from);
  }

  inline MedicationRequestPriorityCode& operator=(MedicationRequestPriorityCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MedicationRequestPriorityCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MedicationRequestPriorityCode* internal_default_instance() {
    return reinterpret_cast<const MedicationRequestPriorityCode*>(
               &_MedicationRequestPriorityCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    182;

  void Swap(MedicationRequestPriorityCode* other);
  friend void swap(MedicationRequestPriorityCode& a, MedicationRequestPriorityCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MedicationRequestPriorityCode* New() const final {
    return CreateMaybeMessage<MedicationRequestPriorityCode>(NULL);
  }

  MedicationRequestPriorityCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MedicationRequestPriorityCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MedicationRequestPriorityCode& from);
  void MergeFrom(const MedicationRequestPriorityCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MedicationRequestPriorityCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MedicationRequestPriorityCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    MedicationRequestPriorityCode_Value_INVALID_UNINITIALIZED;
  static const Value ROUTINE =
    MedicationRequestPriorityCode_Value_ROUTINE;
  static const Value URGENT =
    MedicationRequestPriorityCode_Value_URGENT;
  static const Value STAT =
    MedicationRequestPriorityCode_Value_STAT;
  static const Value ASAP =
    MedicationRequestPriorityCode_Value_ASAP;
  static inline bool Value_IsValid(int value) {
    return MedicationRequestPriorityCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    MedicationRequestPriorityCode_Value_Value_MIN;
  static const Value Value_MAX =
    MedicationRequestPriorityCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    MedicationRequestPriorityCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return MedicationRequestPriorityCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return MedicationRequestPriorityCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return MedicationRequestPriorityCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.MedicationRequestPriorityCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::MedicationRequestPriorityCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::MedicationRequestPriorityCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.MedicationRequestPriorityCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MedicationRequestStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.MedicationRequestStatusCode) */ {
 public:
  MedicationRequestStatusCode();
  virtual ~MedicationRequestStatusCode();

  MedicationRequestStatusCode(const MedicationRequestStatusCode& from);

  inline MedicationRequestStatusCode& operator=(const MedicationRequestStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MedicationRequestStatusCode(MedicationRequestStatusCode&& from) noexcept
    : MedicationRequestStatusCode() {
    *this = ::std::move(from);
  }

  inline MedicationRequestStatusCode& operator=(MedicationRequestStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MedicationRequestStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MedicationRequestStatusCode* internal_default_instance() {
    return reinterpret_cast<const MedicationRequestStatusCode*>(
               &_MedicationRequestStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    183;

  void Swap(MedicationRequestStatusCode* other);
  friend void swap(MedicationRequestStatusCode& a, MedicationRequestStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MedicationRequestStatusCode* New() const final {
    return CreateMaybeMessage<MedicationRequestStatusCode>(NULL);
  }

  MedicationRequestStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MedicationRequestStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MedicationRequestStatusCode& from);
  void MergeFrom(const MedicationRequestStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MedicationRequestStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MedicationRequestStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    MedicationRequestStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value ACTIVE =
    MedicationRequestStatusCode_Value_ACTIVE;
  static const Value ON_HOLD =
    MedicationRequestStatusCode_Value_ON_HOLD;
  static const Value CANCELLED =
    MedicationRequestStatusCode_Value_CANCELLED;
  static const Value COMPLETED =
    MedicationRequestStatusCode_Value_COMPLETED;
  static const Value ENTERED_IN_ERROR =
    MedicationRequestStatusCode_Value_ENTERED_IN_ERROR;
  static const Value STOPPED =
    MedicationRequestStatusCode_Value_STOPPED;
  static const Value DRAFT =
    MedicationRequestStatusCode_Value_DRAFT;
  static const Value UNKNOWN =
    MedicationRequestStatusCode_Value_UNKNOWN;
  static inline bool Value_IsValid(int value) {
    return MedicationRequestStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    MedicationRequestStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    MedicationRequestStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    MedicationRequestStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return MedicationRequestStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return MedicationRequestStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return MedicationRequestStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.MedicationRequestStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::MedicationRequestStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::MedicationRequestStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.MedicationRequestStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MedicationStatementCategoryCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.MedicationStatementCategoryCode) */ {
 public:
  MedicationStatementCategoryCode();
  virtual ~MedicationStatementCategoryCode();

  MedicationStatementCategoryCode(const MedicationStatementCategoryCode& from);

  inline MedicationStatementCategoryCode& operator=(const MedicationStatementCategoryCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MedicationStatementCategoryCode(MedicationStatementCategoryCode&& from) noexcept
    : MedicationStatementCategoryCode() {
    *this = ::std::move(from);
  }

  inline MedicationStatementCategoryCode& operator=(MedicationStatementCategoryCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MedicationStatementCategoryCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MedicationStatementCategoryCode* internal_default_instance() {
    return reinterpret_cast<const MedicationStatementCategoryCode*>(
               &_MedicationStatementCategoryCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    184;

  void Swap(MedicationStatementCategoryCode* other);
  friend void swap(MedicationStatementCategoryCode& a, MedicationStatementCategoryCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MedicationStatementCategoryCode* New() const final {
    return CreateMaybeMessage<MedicationStatementCategoryCode>(NULL);
  }

  MedicationStatementCategoryCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MedicationStatementCategoryCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MedicationStatementCategoryCode& from);
  void MergeFrom(const MedicationStatementCategoryCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MedicationStatementCategoryCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MedicationStatementCategoryCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    MedicationStatementCategoryCode_Value_INVALID_UNINITIALIZED;
  static const Value INPATIENT =
    MedicationStatementCategoryCode_Value_INPATIENT;
  static const Value OUTPATIENT =
    MedicationStatementCategoryCode_Value_OUTPATIENT;
  static const Value COMMUNITY =
    MedicationStatementCategoryCode_Value_COMMUNITY;
  static const Value PATIENTSPECIFIED =
    MedicationStatementCategoryCode_Value_PATIENTSPECIFIED;
  static inline bool Value_IsValid(int value) {
    return MedicationStatementCategoryCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    MedicationStatementCategoryCode_Value_Value_MIN;
  static const Value Value_MAX =
    MedicationStatementCategoryCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    MedicationStatementCategoryCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return MedicationStatementCategoryCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return MedicationStatementCategoryCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return MedicationStatementCategoryCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.MedicationStatementCategoryCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::MedicationStatementCategoryCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::MedicationStatementCategoryCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.MedicationStatementCategoryCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MedicationStatementStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.MedicationStatementStatusCode) */ {
 public:
  MedicationStatementStatusCode();
  virtual ~MedicationStatementStatusCode();

  MedicationStatementStatusCode(const MedicationStatementStatusCode& from);

  inline MedicationStatementStatusCode& operator=(const MedicationStatementStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MedicationStatementStatusCode(MedicationStatementStatusCode&& from) noexcept
    : MedicationStatementStatusCode() {
    *this = ::std::move(from);
  }

  inline MedicationStatementStatusCode& operator=(MedicationStatementStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MedicationStatementStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MedicationStatementStatusCode* internal_default_instance() {
    return reinterpret_cast<const MedicationStatementStatusCode*>(
               &_MedicationStatementStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    185;

  void Swap(MedicationStatementStatusCode* other);
  friend void swap(MedicationStatementStatusCode& a, MedicationStatementStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MedicationStatementStatusCode* New() const final {
    return CreateMaybeMessage<MedicationStatementStatusCode>(NULL);
  }

  MedicationStatementStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MedicationStatementStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MedicationStatementStatusCode& from);
  void MergeFrom(const MedicationStatementStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MedicationStatementStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MedicationStatementStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    MedicationStatementStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value ACTIVE =
    MedicationStatementStatusCode_Value_ACTIVE;
  static const Value COMPLETED =
    MedicationStatementStatusCode_Value_COMPLETED;
  static const Value ENTERED_IN_ERROR =
    MedicationStatementStatusCode_Value_ENTERED_IN_ERROR;
  static const Value INTENDED =
    MedicationStatementStatusCode_Value_INTENDED;
  static const Value STOPPED =
    MedicationStatementStatusCode_Value_STOPPED;
  static const Value ON_HOLD =
    MedicationStatementStatusCode_Value_ON_HOLD;
  static inline bool Value_IsValid(int value) {
    return MedicationStatementStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    MedicationStatementStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    MedicationStatementStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    MedicationStatementStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return MedicationStatementStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return MedicationStatementStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return MedicationStatementStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.MedicationStatementStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::MedicationStatementStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::MedicationStatementStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.MedicationStatementStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MedicationStatementTakenCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.MedicationStatementTakenCode) */ {
 public:
  MedicationStatementTakenCode();
  virtual ~MedicationStatementTakenCode();

  MedicationStatementTakenCode(const MedicationStatementTakenCode& from);

  inline MedicationStatementTakenCode& operator=(const MedicationStatementTakenCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MedicationStatementTakenCode(MedicationStatementTakenCode&& from) noexcept
    : MedicationStatementTakenCode() {
    *this = ::std::move(from);
  }

  inline MedicationStatementTakenCode& operator=(MedicationStatementTakenCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MedicationStatementTakenCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MedicationStatementTakenCode* internal_default_instance() {
    return reinterpret_cast<const MedicationStatementTakenCode*>(
               &_MedicationStatementTakenCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    186;

  void Swap(MedicationStatementTakenCode* other);
  friend void swap(MedicationStatementTakenCode& a, MedicationStatementTakenCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MedicationStatementTakenCode* New() const final {
    return CreateMaybeMessage<MedicationStatementTakenCode>(NULL);
  }

  MedicationStatementTakenCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MedicationStatementTakenCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MedicationStatementTakenCode& from);
  void MergeFrom(const MedicationStatementTakenCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MedicationStatementTakenCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MedicationStatementTakenCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    MedicationStatementTakenCode_Value_INVALID_UNINITIALIZED;
  static const Value Y =
    MedicationStatementTakenCode_Value_Y;
  static const Value N =
    MedicationStatementTakenCode_Value_N;
  static const Value UNK =
    MedicationStatementTakenCode_Value_UNK;
  static const Value NA =
    MedicationStatementTakenCode_Value_NA;
  static inline bool Value_IsValid(int value) {
    return MedicationStatementTakenCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    MedicationStatementTakenCode_Value_Value_MIN;
  static const Value Value_MAX =
    MedicationStatementTakenCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    MedicationStatementTakenCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return MedicationStatementTakenCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return MedicationStatementTakenCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return MedicationStatementTakenCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.MedicationStatementTakenCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::MedicationStatementTakenCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::MedicationStatementTakenCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.MedicationStatementTakenCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MedicationStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.MedicationStatusCode) */ {
 public:
  MedicationStatusCode();
  virtual ~MedicationStatusCode();

  MedicationStatusCode(const MedicationStatusCode& from);

  inline MedicationStatusCode& operator=(const MedicationStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MedicationStatusCode(MedicationStatusCode&& from) noexcept
    : MedicationStatusCode() {
    *this = ::std::move(from);
  }

  inline MedicationStatusCode& operator=(MedicationStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MedicationStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MedicationStatusCode* internal_default_instance() {
    return reinterpret_cast<const MedicationStatusCode*>(
               &_MedicationStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    187;

  void Swap(MedicationStatusCode* other);
  friend void swap(MedicationStatusCode& a, MedicationStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MedicationStatusCode* New() const final {
    return CreateMaybeMessage<MedicationStatusCode>(NULL);
  }

  MedicationStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MedicationStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MedicationStatusCode& from);
  void MergeFrom(const MedicationStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MedicationStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MedicationStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    MedicationStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value ACTIVE =
    MedicationStatusCode_Value_ACTIVE;
  static const Value INACTIVE =
    MedicationStatusCode_Value_INACTIVE;
  static const Value ENTERED_IN_ERROR =
    MedicationStatusCode_Value_ENTERED_IN_ERROR;
  static inline bool Value_IsValid(int value) {
    return MedicationStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    MedicationStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    MedicationStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    MedicationStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return MedicationStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return MedicationStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return MedicationStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.MedicationStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::MedicationStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::MedicationStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.MedicationStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MessageEventCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.MessageEventCode) */ {
 public:
  MessageEventCode();
  virtual ~MessageEventCode();

  MessageEventCode(const MessageEventCode& from);

  inline MessageEventCode& operator=(const MessageEventCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageEventCode(MessageEventCode&& from) noexcept
    : MessageEventCode() {
    *this = ::std::move(from);
  }

  inline MessageEventCode& operator=(MessageEventCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageEventCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageEventCode* internal_default_instance() {
    return reinterpret_cast<const MessageEventCode*>(
               &_MessageEventCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    188;

  void Swap(MessageEventCode* other);
  friend void swap(MessageEventCode& a, MessageEventCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageEventCode* New() const final {
    return CreateMaybeMessage<MessageEventCode>(NULL);
  }

  MessageEventCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MessageEventCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MessageEventCode& from);
  void MergeFrom(const MessageEventCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageEventCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MessageEventCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    MessageEventCode_Value_INVALID_UNINITIALIZED;
  static const Value CODE_SYSTEM_EXPAND =
    MessageEventCode_Value_CODE_SYSTEM_EXPAND;
  static const Value MEDICATION_ADMINISTRATION_COMPLETE =
    MessageEventCode_Value_MEDICATION_ADMINISTRATION_COMPLETE;
  static const Value MEDICATION_ADMINISTRATION_NULLIFICATION =
    MessageEventCode_Value_MEDICATION_ADMINISTRATION_NULLIFICATION;
  static const Value MEDICATION_ADMINISTRATION_RECORDING =
    MessageEventCode_Value_MEDICATION_ADMINISTRATION_RECORDING;
  static const Value MEDICATION_ADMINISTRATION_UPDATE =
    MessageEventCode_Value_MEDICATION_ADMINISTRATION_UPDATE;
  static const Value ADMIN_NOTIFY =
    MessageEventCode_Value_ADMIN_NOTIFY;
  static const Value COMMUNICATION_REQUEST =
    MessageEventCode_Value_COMMUNICATION_REQUEST;
  static const Value DIAGNOSTICREPORT_PROVIDE =
    MessageEventCode_Value_DIAGNOSTICREPORT_PROVIDE;
  static const Value OBSERVATION_PROVIDE =
    MessageEventCode_Value_OBSERVATION_PROVIDE;
  static const Value PATIENT_LINK =
    MessageEventCode_Value_PATIENT_LINK;
  static const Value PATIENT_UNLINK =
    MessageEventCode_Value_PATIENT_UNLINK;
  static const Value VALUESET_EXPAND =
    MessageEventCode_Value_VALUESET_EXPAND;
  static inline bool Value_IsValid(int value) {
    return MessageEventCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    MessageEventCode_Value_Value_MIN;
  static const Value Value_MAX =
    MessageEventCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    MessageEventCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return MessageEventCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return MessageEventCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return MessageEventCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.MessageEventCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::MessageEventCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::MessageEventCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.MessageEventCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MessageHeaderResponseRequestCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.MessageHeaderResponseRequestCode) */ {
 public:
  MessageHeaderResponseRequestCode();
  virtual ~MessageHeaderResponseRequestCode();

  MessageHeaderResponseRequestCode(const MessageHeaderResponseRequestCode& from);

  inline MessageHeaderResponseRequestCode& operator=(const MessageHeaderResponseRequestCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageHeaderResponseRequestCode(MessageHeaderResponseRequestCode&& from) noexcept
    : MessageHeaderResponseRequestCode() {
    *this = ::std::move(from);
  }

  inline MessageHeaderResponseRequestCode& operator=(MessageHeaderResponseRequestCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageHeaderResponseRequestCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageHeaderResponseRequestCode* internal_default_instance() {
    return reinterpret_cast<const MessageHeaderResponseRequestCode*>(
               &_MessageHeaderResponseRequestCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    189;

  void Swap(MessageHeaderResponseRequestCode* other);
  friend void swap(MessageHeaderResponseRequestCode& a, MessageHeaderResponseRequestCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageHeaderResponseRequestCode* New() const final {
    return CreateMaybeMessage<MessageHeaderResponseRequestCode>(NULL);
  }

  MessageHeaderResponseRequestCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MessageHeaderResponseRequestCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MessageHeaderResponseRequestCode& from);
  void MergeFrom(const MessageHeaderResponseRequestCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageHeaderResponseRequestCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MessageHeaderResponseRequestCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    MessageHeaderResponseRequestCode_Value_INVALID_UNINITIALIZED;
  static const Value ALWAYS =
    MessageHeaderResponseRequestCode_Value_ALWAYS;
  static const Value ON_ERROR =
    MessageHeaderResponseRequestCode_Value_ON_ERROR;
  static const Value NEVER =
    MessageHeaderResponseRequestCode_Value_NEVER;
  static const Value ON_SUCCESS =
    MessageHeaderResponseRequestCode_Value_ON_SUCCESS;
  static inline bool Value_IsValid(int value) {
    return MessageHeaderResponseRequestCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    MessageHeaderResponseRequestCode_Value_Value_MIN;
  static const Value Value_MAX =
    MessageHeaderResponseRequestCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    MessageHeaderResponseRequestCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return MessageHeaderResponseRequestCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return MessageHeaderResponseRequestCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return MessageHeaderResponseRequestCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.MessageHeaderResponseRequestCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::MessageHeaderResponseRequestCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::MessageHeaderResponseRequestCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.MessageHeaderResponseRequestCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExampleMessageReasonCodesCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ExampleMessageReasonCodesCode) */ {
 public:
  ExampleMessageReasonCodesCode();
  virtual ~ExampleMessageReasonCodesCode();

  ExampleMessageReasonCodesCode(const ExampleMessageReasonCodesCode& from);

  inline ExampleMessageReasonCodesCode& operator=(const ExampleMessageReasonCodesCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExampleMessageReasonCodesCode(ExampleMessageReasonCodesCode&& from) noexcept
    : ExampleMessageReasonCodesCode() {
    *this = ::std::move(from);
  }

  inline ExampleMessageReasonCodesCode& operator=(ExampleMessageReasonCodesCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExampleMessageReasonCodesCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExampleMessageReasonCodesCode* internal_default_instance() {
    return reinterpret_cast<const ExampleMessageReasonCodesCode*>(
               &_ExampleMessageReasonCodesCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    190;

  void Swap(ExampleMessageReasonCodesCode* other);
  friend void swap(ExampleMessageReasonCodesCode& a, ExampleMessageReasonCodesCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExampleMessageReasonCodesCode* New() const final {
    return CreateMaybeMessage<ExampleMessageReasonCodesCode>(NULL);
  }

  ExampleMessageReasonCodesCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExampleMessageReasonCodesCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExampleMessageReasonCodesCode& from);
  void MergeFrom(const ExampleMessageReasonCodesCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExampleMessageReasonCodesCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ExampleMessageReasonCodesCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ExampleMessageReasonCodesCode_Value_INVALID_UNINITIALIZED;
  static const Value ADMIT =
    ExampleMessageReasonCodesCode_Value_ADMIT;
  static const Value DISCHARGE =
    ExampleMessageReasonCodesCode_Value_DISCHARGE;
  static const Value ABSENT =
    ExampleMessageReasonCodesCode_Value_ABSENT;
  static const Value RETURN =
    ExampleMessageReasonCodesCode_Value_RETURN;
  static const Value MOVED =
    ExampleMessageReasonCodesCode_Value_MOVED;
  static const Value EDIT =
    ExampleMessageReasonCodesCode_Value_EDIT;
  static inline bool Value_IsValid(int value) {
    return ExampleMessageReasonCodesCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ExampleMessageReasonCodesCode_Value_Value_MIN;
  static const Value Value_MAX =
    ExampleMessageReasonCodesCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ExampleMessageReasonCodesCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ExampleMessageReasonCodesCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ExampleMessageReasonCodesCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ExampleMessageReasonCodesCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ExampleMessageReasonCodesCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ExampleMessageReasonCodesCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ExampleMessageReasonCodesCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ExampleMessageReasonCodesCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MessageSignificanceCategoryCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.MessageSignificanceCategoryCode) */ {
 public:
  MessageSignificanceCategoryCode();
  virtual ~MessageSignificanceCategoryCode();

  MessageSignificanceCategoryCode(const MessageSignificanceCategoryCode& from);

  inline MessageSignificanceCategoryCode& operator=(const MessageSignificanceCategoryCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageSignificanceCategoryCode(MessageSignificanceCategoryCode&& from) noexcept
    : MessageSignificanceCategoryCode() {
    *this = ::std::move(from);
  }

  inline MessageSignificanceCategoryCode& operator=(MessageSignificanceCategoryCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageSignificanceCategoryCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageSignificanceCategoryCode* internal_default_instance() {
    return reinterpret_cast<const MessageSignificanceCategoryCode*>(
               &_MessageSignificanceCategoryCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    191;

  void Swap(MessageSignificanceCategoryCode* other);
  friend void swap(MessageSignificanceCategoryCode& a, MessageSignificanceCategoryCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageSignificanceCategoryCode* New() const final {
    return CreateMaybeMessage<MessageSignificanceCategoryCode>(NULL);
  }

  MessageSignificanceCategoryCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MessageSignificanceCategoryCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MessageSignificanceCategoryCode& from);
  void MergeFrom(const MessageSignificanceCategoryCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageSignificanceCategoryCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MessageSignificanceCategoryCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    MessageSignificanceCategoryCode_Value_INVALID_UNINITIALIZED;
  static const Value CONSEQUENCE =
    MessageSignificanceCategoryCode_Value_CONSEQUENCE;
  static const Value CURRENCY =
    MessageSignificanceCategoryCode_Value_CURRENCY;
  static const Value NOTIFICATION =
    MessageSignificanceCategoryCode_Value_NOTIFICATION;
  static inline bool Value_IsValid(int value) {
    return MessageSignificanceCategoryCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    MessageSignificanceCategoryCode_Value_Value_MIN;
  static const Value Value_MAX =
    MessageSignificanceCategoryCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    MessageSignificanceCategoryCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return MessageSignificanceCategoryCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return MessageSignificanceCategoryCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return MessageSignificanceCategoryCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.MessageSignificanceCategoryCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::MessageSignificanceCategoryCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::MessageSignificanceCategoryCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.MessageSignificanceCategoryCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MessageTransportCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.MessageTransportCode) */ {
 public:
  MessageTransportCode();
  virtual ~MessageTransportCode();

  MessageTransportCode(const MessageTransportCode& from);

  inline MessageTransportCode& operator=(const MessageTransportCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageTransportCode(MessageTransportCode&& from) noexcept
    : MessageTransportCode() {
    *this = ::std::move(from);
  }

  inline MessageTransportCode& operator=(MessageTransportCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageTransportCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageTransportCode* internal_default_instance() {
    return reinterpret_cast<const MessageTransportCode*>(
               &_MessageTransportCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    192;

  void Swap(MessageTransportCode* other);
  friend void swap(MessageTransportCode& a, MessageTransportCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageTransportCode* New() const final {
    return CreateMaybeMessage<MessageTransportCode>(NULL);
  }

  MessageTransportCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MessageTransportCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MessageTransportCode& from);
  void MergeFrom(const MessageTransportCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageTransportCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MessageTransportCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    MessageTransportCode_Value_INVALID_UNINITIALIZED;
  static const Value HTTP =
    MessageTransportCode_Value_HTTP;
  static const Value FTP =
    MessageTransportCode_Value_FTP;
  static const Value MLLP =
    MessageTransportCode_Value_MLLP;
  static inline bool Value_IsValid(int value) {
    return MessageTransportCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    MessageTransportCode_Value_Value_MIN;
  static const Value Value_MAX =
    MessageTransportCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    MessageTransportCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return MessageTransportCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return MessageTransportCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return MessageTransportCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.MessageTransportCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::MessageTransportCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::MessageTransportCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.MessageTransportCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeviceMetricCalibrationStateCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.DeviceMetricCalibrationStateCode) */ {
 public:
  DeviceMetricCalibrationStateCode();
  virtual ~DeviceMetricCalibrationStateCode();

  DeviceMetricCalibrationStateCode(const DeviceMetricCalibrationStateCode& from);

  inline DeviceMetricCalibrationStateCode& operator=(const DeviceMetricCalibrationStateCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeviceMetricCalibrationStateCode(DeviceMetricCalibrationStateCode&& from) noexcept
    : DeviceMetricCalibrationStateCode() {
    *this = ::std::move(from);
  }

  inline DeviceMetricCalibrationStateCode& operator=(DeviceMetricCalibrationStateCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeviceMetricCalibrationStateCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeviceMetricCalibrationStateCode* internal_default_instance() {
    return reinterpret_cast<const DeviceMetricCalibrationStateCode*>(
               &_DeviceMetricCalibrationStateCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    193;

  void Swap(DeviceMetricCalibrationStateCode* other);
  friend void swap(DeviceMetricCalibrationStateCode& a, DeviceMetricCalibrationStateCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeviceMetricCalibrationStateCode* New() const final {
    return CreateMaybeMessage<DeviceMetricCalibrationStateCode>(NULL);
  }

  DeviceMetricCalibrationStateCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeviceMetricCalibrationStateCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeviceMetricCalibrationStateCode& from);
  void MergeFrom(const DeviceMetricCalibrationStateCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeviceMetricCalibrationStateCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DeviceMetricCalibrationStateCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    DeviceMetricCalibrationStateCode_Value_INVALID_UNINITIALIZED;
  static const Value NOT_CALIBRATED =
    DeviceMetricCalibrationStateCode_Value_NOT_CALIBRATED;
  static const Value CALIBRATION_REQUIRED =
    DeviceMetricCalibrationStateCode_Value_CALIBRATION_REQUIRED;
  static const Value CALIBRATED =
    DeviceMetricCalibrationStateCode_Value_CALIBRATED;
  static const Value UNSPECIFIED =
    DeviceMetricCalibrationStateCode_Value_UNSPECIFIED;
  static inline bool Value_IsValid(int value) {
    return DeviceMetricCalibrationStateCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    DeviceMetricCalibrationStateCode_Value_Value_MIN;
  static const Value Value_MAX =
    DeviceMetricCalibrationStateCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    DeviceMetricCalibrationStateCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return DeviceMetricCalibrationStateCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return DeviceMetricCalibrationStateCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return DeviceMetricCalibrationStateCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.DeviceMetricCalibrationStateCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::DeviceMetricCalibrationStateCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::DeviceMetricCalibrationStateCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.DeviceMetricCalibrationStateCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeviceMetricCalibrationTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.DeviceMetricCalibrationTypeCode) */ {
 public:
  DeviceMetricCalibrationTypeCode();
  virtual ~DeviceMetricCalibrationTypeCode();

  DeviceMetricCalibrationTypeCode(const DeviceMetricCalibrationTypeCode& from);

  inline DeviceMetricCalibrationTypeCode& operator=(const DeviceMetricCalibrationTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeviceMetricCalibrationTypeCode(DeviceMetricCalibrationTypeCode&& from) noexcept
    : DeviceMetricCalibrationTypeCode() {
    *this = ::std::move(from);
  }

  inline DeviceMetricCalibrationTypeCode& operator=(DeviceMetricCalibrationTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeviceMetricCalibrationTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeviceMetricCalibrationTypeCode* internal_default_instance() {
    return reinterpret_cast<const DeviceMetricCalibrationTypeCode*>(
               &_DeviceMetricCalibrationTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    194;

  void Swap(DeviceMetricCalibrationTypeCode* other);
  friend void swap(DeviceMetricCalibrationTypeCode& a, DeviceMetricCalibrationTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeviceMetricCalibrationTypeCode* New() const final {
    return CreateMaybeMessage<DeviceMetricCalibrationTypeCode>(NULL);
  }

  DeviceMetricCalibrationTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeviceMetricCalibrationTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeviceMetricCalibrationTypeCode& from);
  void MergeFrom(const DeviceMetricCalibrationTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeviceMetricCalibrationTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DeviceMetricCalibrationTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    DeviceMetricCalibrationTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value UNSPECIFIED =
    DeviceMetricCalibrationTypeCode_Value_UNSPECIFIED;
  static const Value OFFSET =
    DeviceMetricCalibrationTypeCode_Value_OFFSET;
  static const Value GAIN =
    DeviceMetricCalibrationTypeCode_Value_GAIN;
  static const Value TWO_POINT =
    DeviceMetricCalibrationTypeCode_Value_TWO_POINT;
  static inline bool Value_IsValid(int value) {
    return DeviceMetricCalibrationTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    DeviceMetricCalibrationTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    DeviceMetricCalibrationTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    DeviceMetricCalibrationTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return DeviceMetricCalibrationTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return DeviceMetricCalibrationTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return DeviceMetricCalibrationTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.DeviceMetricCalibrationTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::DeviceMetricCalibrationTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::DeviceMetricCalibrationTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.DeviceMetricCalibrationTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeviceMetricCategoryCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.DeviceMetricCategoryCode) */ {
 public:
  DeviceMetricCategoryCode();
  virtual ~DeviceMetricCategoryCode();

  DeviceMetricCategoryCode(const DeviceMetricCategoryCode& from);

  inline DeviceMetricCategoryCode& operator=(const DeviceMetricCategoryCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeviceMetricCategoryCode(DeviceMetricCategoryCode&& from) noexcept
    : DeviceMetricCategoryCode() {
    *this = ::std::move(from);
  }

  inline DeviceMetricCategoryCode& operator=(DeviceMetricCategoryCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeviceMetricCategoryCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeviceMetricCategoryCode* internal_default_instance() {
    return reinterpret_cast<const DeviceMetricCategoryCode*>(
               &_DeviceMetricCategoryCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    195;

  void Swap(DeviceMetricCategoryCode* other);
  friend void swap(DeviceMetricCategoryCode& a, DeviceMetricCategoryCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeviceMetricCategoryCode* New() const final {
    return CreateMaybeMessage<DeviceMetricCategoryCode>(NULL);
  }

  DeviceMetricCategoryCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeviceMetricCategoryCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeviceMetricCategoryCode& from);
  void MergeFrom(const DeviceMetricCategoryCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeviceMetricCategoryCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DeviceMetricCategoryCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    DeviceMetricCategoryCode_Value_INVALID_UNINITIALIZED;
  static const Value MEASUREMENT =
    DeviceMetricCategoryCode_Value_MEASUREMENT;
  static const Value SETTING =
    DeviceMetricCategoryCode_Value_SETTING;
  static const Value CALCULATION =
    DeviceMetricCategoryCode_Value_CALCULATION;
  static const Value UNSPECIFIED =
    DeviceMetricCategoryCode_Value_UNSPECIFIED;
  static inline bool Value_IsValid(int value) {
    return DeviceMetricCategoryCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    DeviceMetricCategoryCode_Value_Value_MIN;
  static const Value Value_MAX =
    DeviceMetricCategoryCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    DeviceMetricCategoryCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return DeviceMetricCategoryCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return DeviceMetricCategoryCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return DeviceMetricCategoryCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.DeviceMetricCategoryCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::DeviceMetricCategoryCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::DeviceMetricCategoryCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.DeviceMetricCategoryCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeviceMetricColorCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.DeviceMetricColorCode) */ {
 public:
  DeviceMetricColorCode();
  virtual ~DeviceMetricColorCode();

  DeviceMetricColorCode(const DeviceMetricColorCode& from);

  inline DeviceMetricColorCode& operator=(const DeviceMetricColorCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeviceMetricColorCode(DeviceMetricColorCode&& from) noexcept
    : DeviceMetricColorCode() {
    *this = ::std::move(from);
  }

  inline DeviceMetricColorCode& operator=(DeviceMetricColorCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeviceMetricColorCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeviceMetricColorCode* internal_default_instance() {
    return reinterpret_cast<const DeviceMetricColorCode*>(
               &_DeviceMetricColorCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    196;

  void Swap(DeviceMetricColorCode* other);
  friend void swap(DeviceMetricColorCode& a, DeviceMetricColorCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeviceMetricColorCode* New() const final {
    return CreateMaybeMessage<DeviceMetricColorCode>(NULL);
  }

  DeviceMetricColorCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeviceMetricColorCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeviceMetricColorCode& from);
  void MergeFrom(const DeviceMetricColorCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeviceMetricColorCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DeviceMetricColorCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    DeviceMetricColorCode_Value_INVALID_UNINITIALIZED;
  static const Value BLACK =
    DeviceMetricColorCode_Value_BLACK;
  static const Value RED =
    DeviceMetricColorCode_Value_RED;
  static const Value GREEN =
    DeviceMetricColorCode_Value_GREEN;
  static const Value YELLOW =
    DeviceMetricColorCode_Value_YELLOW;
  static const Value BLUE =
    DeviceMetricColorCode_Value_BLUE;
  static const Value MAGENTA =
    DeviceMetricColorCode_Value_MAGENTA;
  static const Value CYAN =
    DeviceMetricColorCode_Value_CYAN;
  static const Value WHITE =
    DeviceMetricColorCode_Value_WHITE;
  static inline bool Value_IsValid(int value) {
    return DeviceMetricColorCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    DeviceMetricColorCode_Value_Value_MIN;
  static const Value Value_MAX =
    DeviceMetricColorCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    DeviceMetricColorCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return DeviceMetricColorCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return DeviceMetricColorCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return DeviceMetricColorCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.DeviceMetricColorCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::DeviceMetricColorCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::DeviceMetricColorCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.DeviceMetricColorCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeviceMetricOperationalStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.DeviceMetricOperationalStatusCode) */ {
 public:
  DeviceMetricOperationalStatusCode();
  virtual ~DeviceMetricOperationalStatusCode();

  DeviceMetricOperationalStatusCode(const DeviceMetricOperationalStatusCode& from);

  inline DeviceMetricOperationalStatusCode& operator=(const DeviceMetricOperationalStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeviceMetricOperationalStatusCode(DeviceMetricOperationalStatusCode&& from) noexcept
    : DeviceMetricOperationalStatusCode() {
    *this = ::std::move(from);
  }

  inline DeviceMetricOperationalStatusCode& operator=(DeviceMetricOperationalStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeviceMetricOperationalStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeviceMetricOperationalStatusCode* internal_default_instance() {
    return reinterpret_cast<const DeviceMetricOperationalStatusCode*>(
               &_DeviceMetricOperationalStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    197;

  void Swap(DeviceMetricOperationalStatusCode* other);
  friend void swap(DeviceMetricOperationalStatusCode& a, DeviceMetricOperationalStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeviceMetricOperationalStatusCode* New() const final {
    return CreateMaybeMessage<DeviceMetricOperationalStatusCode>(NULL);
  }

  DeviceMetricOperationalStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeviceMetricOperationalStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeviceMetricOperationalStatusCode& from);
  void MergeFrom(const DeviceMetricOperationalStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeviceMetricOperationalStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DeviceMetricOperationalStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    DeviceMetricOperationalStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value ON =
    DeviceMetricOperationalStatusCode_Value_ON;
  static const Value OFF =
    DeviceMetricOperationalStatusCode_Value_OFF;
  static const Value STANDBY =
    DeviceMetricOperationalStatusCode_Value_STANDBY;
  static const Value ENTERED_IN_ERROR =
    DeviceMetricOperationalStatusCode_Value_ENTERED_IN_ERROR;
  static inline bool Value_IsValid(int value) {
    return DeviceMetricOperationalStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    DeviceMetricOperationalStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    DeviceMetricOperationalStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    DeviceMetricOperationalStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return DeviceMetricOperationalStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return DeviceMetricOperationalStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return DeviceMetricOperationalStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.DeviceMetricOperationalStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::DeviceMetricOperationalStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::DeviceMetricOperationalStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.DeviceMetricOperationalStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HumanNameAssemblyOrderCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.HumanNameAssemblyOrderCode) */ {
 public:
  HumanNameAssemblyOrderCode();
  virtual ~HumanNameAssemblyOrderCode();

  HumanNameAssemblyOrderCode(const HumanNameAssemblyOrderCode& from);

  inline HumanNameAssemblyOrderCode& operator=(const HumanNameAssemblyOrderCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HumanNameAssemblyOrderCode(HumanNameAssemblyOrderCode&& from) noexcept
    : HumanNameAssemblyOrderCode() {
    *this = ::std::move(from);
  }

  inline HumanNameAssemblyOrderCode& operator=(HumanNameAssemblyOrderCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HumanNameAssemblyOrderCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HumanNameAssemblyOrderCode* internal_default_instance() {
    return reinterpret_cast<const HumanNameAssemblyOrderCode*>(
               &_HumanNameAssemblyOrderCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    198;

  void Swap(HumanNameAssemblyOrderCode* other);
  friend void swap(HumanNameAssemblyOrderCode& a, HumanNameAssemblyOrderCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HumanNameAssemblyOrderCode* New() const final {
    return CreateMaybeMessage<HumanNameAssemblyOrderCode>(NULL);
  }

  HumanNameAssemblyOrderCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HumanNameAssemblyOrderCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HumanNameAssemblyOrderCode& from);
  void MergeFrom(const HumanNameAssemblyOrderCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HumanNameAssemblyOrderCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef HumanNameAssemblyOrderCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    HumanNameAssemblyOrderCode_Value_INVALID_UNINITIALIZED;
  static const Value NL1 =
    HumanNameAssemblyOrderCode_Value_NL1;
  static const Value NL2 =
    HumanNameAssemblyOrderCode_Value_NL2;
  static const Value NL3 =
    HumanNameAssemblyOrderCode_Value_NL3;
  static const Value NL4 =
    HumanNameAssemblyOrderCode_Value_NL4;
  static inline bool Value_IsValid(int value) {
    return HumanNameAssemblyOrderCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    HumanNameAssemblyOrderCode_Value_Value_MIN;
  static const Value Value_MAX =
    HumanNameAssemblyOrderCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    HumanNameAssemblyOrderCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return HumanNameAssemblyOrderCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return HumanNameAssemblyOrderCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return HumanNameAssemblyOrderCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.HumanNameAssemblyOrderCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::HumanNameAssemblyOrderCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::HumanNameAssemblyOrderCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.HumanNameAssemblyOrderCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NameRepresentationUseCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.NameRepresentationUseCode) */ {
 public:
  NameRepresentationUseCode();
  virtual ~NameRepresentationUseCode();

  NameRepresentationUseCode(const NameRepresentationUseCode& from);

  inline NameRepresentationUseCode& operator=(const NameRepresentationUseCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NameRepresentationUseCode(NameRepresentationUseCode&& from) noexcept
    : NameRepresentationUseCode() {
    *this = ::std::move(from);
  }

  inline NameRepresentationUseCode& operator=(NameRepresentationUseCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NameRepresentationUseCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NameRepresentationUseCode* internal_default_instance() {
    return reinterpret_cast<const NameRepresentationUseCode*>(
               &_NameRepresentationUseCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    199;

  void Swap(NameRepresentationUseCode* other);
  friend void swap(NameRepresentationUseCode& a, NameRepresentationUseCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NameRepresentationUseCode* New() const final {
    return CreateMaybeMessage<NameRepresentationUseCode>(NULL);
  }

  NameRepresentationUseCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NameRepresentationUseCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NameRepresentationUseCode& from);
  void MergeFrom(const NameRepresentationUseCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NameRepresentationUseCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef NameRepresentationUseCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    NameRepresentationUseCode_Value_INVALID_UNINITIALIZED;
  static const Value ABC =
    NameRepresentationUseCode_Value_ABC;
  static const Value IDE =
    NameRepresentationUseCode_Value_IDE;
  static const Value SYL =
    NameRepresentationUseCode_Value_SYL;
  static inline bool Value_IsValid(int value) {
    return NameRepresentationUseCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    NameRepresentationUseCode_Value_Value_MIN;
  static const Value Value_MAX =
    NameRepresentationUseCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    NameRepresentationUseCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return NameRepresentationUseCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return NameRepresentationUseCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return NameRepresentationUseCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.NameRepresentationUseCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::NameRepresentationUseCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::NameRepresentationUseCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.NameRepresentationUseCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NamingSystemIdentifierTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.NamingSystemIdentifierTypeCode) */ {
 public:
  NamingSystemIdentifierTypeCode();
  virtual ~NamingSystemIdentifierTypeCode();

  NamingSystemIdentifierTypeCode(const NamingSystemIdentifierTypeCode& from);

  inline NamingSystemIdentifierTypeCode& operator=(const NamingSystemIdentifierTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NamingSystemIdentifierTypeCode(NamingSystemIdentifierTypeCode&& from) noexcept
    : NamingSystemIdentifierTypeCode() {
    *this = ::std::move(from);
  }

  inline NamingSystemIdentifierTypeCode& operator=(NamingSystemIdentifierTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NamingSystemIdentifierTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NamingSystemIdentifierTypeCode* internal_default_instance() {
    return reinterpret_cast<const NamingSystemIdentifierTypeCode*>(
               &_NamingSystemIdentifierTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    200;

  void Swap(NamingSystemIdentifierTypeCode* other);
  friend void swap(NamingSystemIdentifierTypeCode& a, NamingSystemIdentifierTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NamingSystemIdentifierTypeCode* New() const final {
    return CreateMaybeMessage<NamingSystemIdentifierTypeCode>(NULL);
  }

  NamingSystemIdentifierTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NamingSystemIdentifierTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NamingSystemIdentifierTypeCode& from);
  void MergeFrom(const NamingSystemIdentifierTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NamingSystemIdentifierTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef NamingSystemIdentifierTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    NamingSystemIdentifierTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value OID =
    NamingSystemIdentifierTypeCode_Value_OID;
  static const Value UUID =
    NamingSystemIdentifierTypeCode_Value_UUID;
  static const Value URI =
    NamingSystemIdentifierTypeCode_Value_URI;
  static const Value OTHER =
    NamingSystemIdentifierTypeCode_Value_OTHER;
  static inline bool Value_IsValid(int value) {
    return NamingSystemIdentifierTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    NamingSystemIdentifierTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    NamingSystemIdentifierTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    NamingSystemIdentifierTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return NamingSystemIdentifierTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return NamingSystemIdentifierTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return NamingSystemIdentifierTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.NamingSystemIdentifierTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::NamingSystemIdentifierTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::NamingSystemIdentifierTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.NamingSystemIdentifierTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NamingSystemTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.NamingSystemTypeCode) */ {
 public:
  NamingSystemTypeCode();
  virtual ~NamingSystemTypeCode();

  NamingSystemTypeCode(const NamingSystemTypeCode& from);

  inline NamingSystemTypeCode& operator=(const NamingSystemTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NamingSystemTypeCode(NamingSystemTypeCode&& from) noexcept
    : NamingSystemTypeCode() {
    *this = ::std::move(from);
  }

  inline NamingSystemTypeCode& operator=(NamingSystemTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NamingSystemTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NamingSystemTypeCode* internal_default_instance() {
    return reinterpret_cast<const NamingSystemTypeCode*>(
               &_NamingSystemTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    201;

  void Swap(NamingSystemTypeCode* other);
  friend void swap(NamingSystemTypeCode& a, NamingSystemTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NamingSystemTypeCode* New() const final {
    return CreateMaybeMessage<NamingSystemTypeCode>(NULL);
  }

  NamingSystemTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NamingSystemTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NamingSystemTypeCode& from);
  void MergeFrom(const NamingSystemTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NamingSystemTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef NamingSystemTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    NamingSystemTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value CODESYSTEM =
    NamingSystemTypeCode_Value_CODESYSTEM;
  static const Value IDENTIFIER =
    NamingSystemTypeCode_Value_IDENTIFIER;
  static const Value ROOT =
    NamingSystemTypeCode_Value_ROOT;
  static inline bool Value_IsValid(int value) {
    return NamingSystemTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    NamingSystemTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    NamingSystemTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    NamingSystemTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return NamingSystemTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return NamingSystemTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return NamingSystemTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.NamingSystemTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::NamingSystemTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::NamingSystemTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.NamingSystemTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AuditEventAgentNetworkTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.AuditEventAgentNetworkTypeCode) */ {
 public:
  AuditEventAgentNetworkTypeCode();
  virtual ~AuditEventAgentNetworkTypeCode();

  AuditEventAgentNetworkTypeCode(const AuditEventAgentNetworkTypeCode& from);

  inline AuditEventAgentNetworkTypeCode& operator=(const AuditEventAgentNetworkTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AuditEventAgentNetworkTypeCode(AuditEventAgentNetworkTypeCode&& from) noexcept
    : AuditEventAgentNetworkTypeCode() {
    *this = ::std::move(from);
  }

  inline AuditEventAgentNetworkTypeCode& operator=(AuditEventAgentNetworkTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AuditEventAgentNetworkTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AuditEventAgentNetworkTypeCode* internal_default_instance() {
    return reinterpret_cast<const AuditEventAgentNetworkTypeCode*>(
               &_AuditEventAgentNetworkTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    202;

  void Swap(AuditEventAgentNetworkTypeCode* other);
  friend void swap(AuditEventAgentNetworkTypeCode& a, AuditEventAgentNetworkTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AuditEventAgentNetworkTypeCode* New() const final {
    return CreateMaybeMessage<AuditEventAgentNetworkTypeCode>(NULL);
  }

  AuditEventAgentNetworkTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AuditEventAgentNetworkTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AuditEventAgentNetworkTypeCode& from);
  void MergeFrom(const AuditEventAgentNetworkTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AuditEventAgentNetworkTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AuditEventAgentNetworkTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    AuditEventAgentNetworkTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value MACHINE_NAME =
    AuditEventAgentNetworkTypeCode_Value_MACHINE_NAME;
  static const Value IP_ADDRESS =
    AuditEventAgentNetworkTypeCode_Value_IP_ADDRESS;
  static const Value TELEPHONE_NUMBER =
    AuditEventAgentNetworkTypeCode_Value_TELEPHONE_NUMBER;
  static const Value EMAIL_ADDRESS =
    AuditEventAgentNetworkTypeCode_Value_EMAIL_ADDRESS;
  static const Value URI =
    AuditEventAgentNetworkTypeCode_Value_URI;
  static inline bool Value_IsValid(int value) {
    return AuditEventAgentNetworkTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    AuditEventAgentNetworkTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    AuditEventAgentNetworkTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    AuditEventAgentNetworkTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return AuditEventAgentNetworkTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return AuditEventAgentNetworkTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return AuditEventAgentNetworkTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.AuditEventAgentNetworkTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::AuditEventAgentNetworkTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::AuditEventAgentNetworkTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.AuditEventAgentNetworkTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NoteTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.NoteTypeCode) */ {
 public:
  NoteTypeCode();
  virtual ~NoteTypeCode();

  NoteTypeCode(const NoteTypeCode& from);

  inline NoteTypeCode& operator=(const NoteTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NoteTypeCode(NoteTypeCode&& from) noexcept
    : NoteTypeCode() {
    *this = ::std::move(from);
  }

  inline NoteTypeCode& operator=(NoteTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NoteTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NoteTypeCode* internal_default_instance() {
    return reinterpret_cast<const NoteTypeCode*>(
               &_NoteTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    203;

  void Swap(NoteTypeCode* other);
  friend void swap(NoteTypeCode& a, NoteTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NoteTypeCode* New() const final {
    return CreateMaybeMessage<NoteTypeCode>(NULL);
  }

  NoteTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NoteTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NoteTypeCode& from);
  void MergeFrom(const NoteTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NoteTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef NoteTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    NoteTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value DISPLAY =
    NoteTypeCode_Value_DISPLAY;
  static const Value PRINT =
    NoteTypeCode_Value_PRINT;
  static const Value PRINTOPER =
    NoteTypeCode_Value_PRINTOPER;
  static inline bool Value_IsValid(int value) {
    return NoteTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    NoteTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    NoteTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    NoteTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return NoteTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return NoteTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return NoteTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.NoteTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::NoteTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::NoteTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.NoteTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NullFlavorCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.NullFlavorCode) */ {
 public:
  NullFlavorCode();
  virtual ~NullFlavorCode();

  NullFlavorCode(const NullFlavorCode& from);

  inline NullFlavorCode& operator=(const NullFlavorCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NullFlavorCode(NullFlavorCode&& from) noexcept
    : NullFlavorCode() {
    *this = ::std::move(from);
  }

  inline NullFlavorCode& operator=(NullFlavorCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NullFlavorCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NullFlavorCode* internal_default_instance() {
    return reinterpret_cast<const NullFlavorCode*>(
               &_NullFlavorCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    204;

  void Swap(NullFlavorCode* other);
  friend void swap(NullFlavorCode& a, NullFlavorCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NullFlavorCode* New() const final {
    return CreateMaybeMessage<NullFlavorCode>(NULL);
  }

  NullFlavorCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NullFlavorCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NullFlavorCode& from);
  void MergeFrom(const NullFlavorCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NullFlavorCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef NullFlavorCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    NullFlavorCode_Value_INVALID_UNINITIALIZED;
  static const Value NI =
    NullFlavorCode_Value_NI;
  static const Value INV =
    NullFlavorCode_Value_INV;
  static const Value DER =
    NullFlavorCode_Value_DER;
  static const Value OTH =
    NullFlavorCode_Value_OTH;
  static const Value NINF =
    NullFlavorCode_Value_NINF;
  static const Value PINF =
    NullFlavorCode_Value_PINF;
  static const Value UNC =
    NullFlavorCode_Value_UNC;
  static const Value MSK =
    NullFlavorCode_Value_MSK;
  static const Value NA =
    NullFlavorCode_Value_NA;
  static const Value UNK =
    NullFlavorCode_Value_UNK;
  static const Value ASKU =
    NullFlavorCode_Value_ASKU;
  static const Value NAV =
    NullFlavorCode_Value_NAV;
  static const Value NASK =
    NullFlavorCode_Value_NASK;
  static const Value NAVU =
    NullFlavorCode_Value_NAVU;
  static const Value QS =
    NullFlavorCode_Value_QS;
  static const Value TRC =
    NullFlavorCode_Value_TRC;
  static const Value NP =
    NullFlavorCode_Value_NP;
  static inline bool Value_IsValid(int value) {
    return NullFlavorCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    NullFlavorCode_Value_Value_MIN;
  static const Value Value_MAX =
    NullFlavorCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    NullFlavorCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return NullFlavorCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return NullFlavorCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return NullFlavorCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.NullFlavorCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::NullFlavorCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::NullFlavorCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.NullFlavorCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NutritionOrderStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.NutritionOrderStatusCode) */ {
 public:
  NutritionOrderStatusCode();
  virtual ~NutritionOrderStatusCode();

  NutritionOrderStatusCode(const NutritionOrderStatusCode& from);

  inline NutritionOrderStatusCode& operator=(const NutritionOrderStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NutritionOrderStatusCode(NutritionOrderStatusCode&& from) noexcept
    : NutritionOrderStatusCode() {
    *this = ::std::move(from);
  }

  inline NutritionOrderStatusCode& operator=(NutritionOrderStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NutritionOrderStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NutritionOrderStatusCode* internal_default_instance() {
    return reinterpret_cast<const NutritionOrderStatusCode*>(
               &_NutritionOrderStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    205;

  void Swap(NutritionOrderStatusCode* other);
  friend void swap(NutritionOrderStatusCode& a, NutritionOrderStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NutritionOrderStatusCode* New() const final {
    return CreateMaybeMessage<NutritionOrderStatusCode>(NULL);
  }

  NutritionOrderStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NutritionOrderStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NutritionOrderStatusCode& from);
  void MergeFrom(const NutritionOrderStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NutritionOrderStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef NutritionOrderStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    NutritionOrderStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value PROPOSED =
    NutritionOrderStatusCode_Value_PROPOSED;
  static const Value DRAFT =
    NutritionOrderStatusCode_Value_DRAFT;
  static const Value PLANNED =
    NutritionOrderStatusCode_Value_PLANNED;
  static const Value REQUESTED =
    NutritionOrderStatusCode_Value_REQUESTED;
  static const Value ACTIVE =
    NutritionOrderStatusCode_Value_ACTIVE;
  static const Value ON_HOLD =
    NutritionOrderStatusCode_Value_ON_HOLD;
  static const Value COMPLETED =
    NutritionOrderStatusCode_Value_COMPLETED;
  static const Value CANCELLED =
    NutritionOrderStatusCode_Value_CANCELLED;
  static const Value ENTERED_IN_ERROR =
    NutritionOrderStatusCode_Value_ENTERED_IN_ERROR;
  static inline bool Value_IsValid(int value) {
    return NutritionOrderStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    NutritionOrderStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    NutritionOrderStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    NutritionOrderStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return NutritionOrderStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return NutritionOrderStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return NutritionOrderStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.NutritionOrderStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::NutritionOrderStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::NutritionOrderStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.NutritionOrderStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ObservationCategoryCodesCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ObservationCategoryCodesCode) */ {
 public:
  ObservationCategoryCodesCode();
  virtual ~ObservationCategoryCodesCode();

  ObservationCategoryCodesCode(const ObservationCategoryCodesCode& from);

  inline ObservationCategoryCodesCode& operator=(const ObservationCategoryCodesCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ObservationCategoryCodesCode(ObservationCategoryCodesCode&& from) noexcept
    : ObservationCategoryCodesCode() {
    *this = ::std::move(from);
  }

  inline ObservationCategoryCodesCode& operator=(ObservationCategoryCodesCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObservationCategoryCodesCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObservationCategoryCodesCode* internal_default_instance() {
    return reinterpret_cast<const ObservationCategoryCodesCode*>(
               &_ObservationCategoryCodesCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    206;

  void Swap(ObservationCategoryCodesCode* other);
  friend void swap(ObservationCategoryCodesCode& a, ObservationCategoryCodesCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ObservationCategoryCodesCode* New() const final {
    return CreateMaybeMessage<ObservationCategoryCodesCode>(NULL);
  }

  ObservationCategoryCodesCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ObservationCategoryCodesCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ObservationCategoryCodesCode& from);
  void MergeFrom(const ObservationCategoryCodesCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObservationCategoryCodesCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ObservationCategoryCodesCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ObservationCategoryCodesCode_Value_INVALID_UNINITIALIZED;
  static const Value SOCIAL_HISTORY =
    ObservationCategoryCodesCode_Value_SOCIAL_HISTORY;
  static const Value VITAL_SIGNS =
    ObservationCategoryCodesCode_Value_VITAL_SIGNS;
  static const Value IMAGING =
    ObservationCategoryCodesCode_Value_IMAGING;
  static const Value LABORATORY =
    ObservationCategoryCodesCode_Value_LABORATORY;
  static const Value PROCEDURE =
    ObservationCategoryCodesCode_Value_PROCEDURE;
  static const Value SURVEY =
    ObservationCategoryCodesCode_Value_SURVEY;
  static const Value EXAM =
    ObservationCategoryCodesCode_Value_EXAM;
  static const Value THERAPY =
    ObservationCategoryCodesCode_Value_THERAPY;
  static inline bool Value_IsValid(int value) {
    return ObservationCategoryCodesCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ObservationCategoryCodesCode_Value_Value_MIN;
  static const Value Value_MAX =
    ObservationCategoryCodesCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ObservationCategoryCodesCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ObservationCategoryCodesCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ObservationCategoryCodesCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ObservationCategoryCodesCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ObservationCategoryCodesCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ObservationCategoryCodesCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ObservationCategoryCodesCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ObservationCategoryCodesCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ObservationRelationshipTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ObservationRelationshipTypeCode) */ {
 public:
  ObservationRelationshipTypeCode();
  virtual ~ObservationRelationshipTypeCode();

  ObservationRelationshipTypeCode(const ObservationRelationshipTypeCode& from);

  inline ObservationRelationshipTypeCode& operator=(const ObservationRelationshipTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ObservationRelationshipTypeCode(ObservationRelationshipTypeCode&& from) noexcept
    : ObservationRelationshipTypeCode() {
    *this = ::std::move(from);
  }

  inline ObservationRelationshipTypeCode& operator=(ObservationRelationshipTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObservationRelationshipTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObservationRelationshipTypeCode* internal_default_instance() {
    return reinterpret_cast<const ObservationRelationshipTypeCode*>(
               &_ObservationRelationshipTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    207;

  void Swap(ObservationRelationshipTypeCode* other);
  friend void swap(ObservationRelationshipTypeCode& a, ObservationRelationshipTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ObservationRelationshipTypeCode* New() const final {
    return CreateMaybeMessage<ObservationRelationshipTypeCode>(NULL);
  }

  ObservationRelationshipTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ObservationRelationshipTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ObservationRelationshipTypeCode& from);
  void MergeFrom(const ObservationRelationshipTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObservationRelationshipTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ObservationRelationshipTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ObservationRelationshipTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value HAS_MEMBER =
    ObservationRelationshipTypeCode_Value_HAS_MEMBER;
  static const Value DERIVED_FROM =
    ObservationRelationshipTypeCode_Value_DERIVED_FROM;
  static const Value SEQUEL_TO =
    ObservationRelationshipTypeCode_Value_SEQUEL_TO;
  static const Value REPLACES =
    ObservationRelationshipTypeCode_Value_REPLACES;
  static const Value QUALIFIED_BY =
    ObservationRelationshipTypeCode_Value_QUALIFIED_BY;
  static const Value INTERFERED_BY =
    ObservationRelationshipTypeCode_Value_INTERFERED_BY;
  static inline bool Value_IsValid(int value) {
    return ObservationRelationshipTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ObservationRelationshipTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    ObservationRelationshipTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ObservationRelationshipTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ObservationRelationshipTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ObservationRelationshipTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ObservationRelationshipTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ObservationRelationshipTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ObservationRelationshipTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ObservationRelationshipTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ObservationRelationshipTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StatisticsCodeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.StatisticsCodeCode) */ {
 public:
  StatisticsCodeCode();
  virtual ~StatisticsCodeCode();

  StatisticsCodeCode(const StatisticsCodeCode& from);

  inline StatisticsCodeCode& operator=(const StatisticsCodeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StatisticsCodeCode(StatisticsCodeCode&& from) noexcept
    : StatisticsCodeCode() {
    *this = ::std::move(from);
  }

  inline StatisticsCodeCode& operator=(StatisticsCodeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StatisticsCodeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StatisticsCodeCode* internal_default_instance() {
    return reinterpret_cast<const StatisticsCodeCode*>(
               &_StatisticsCodeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    208;

  void Swap(StatisticsCodeCode* other);
  friend void swap(StatisticsCodeCode& a, StatisticsCodeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StatisticsCodeCode* New() const final {
    return CreateMaybeMessage<StatisticsCodeCode>(NULL);
  }

  StatisticsCodeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StatisticsCodeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StatisticsCodeCode& from);
  void MergeFrom(const StatisticsCodeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StatisticsCodeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef StatisticsCodeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    StatisticsCodeCode_Value_INVALID_UNINITIALIZED;
  static const Value AVERAGE =
    StatisticsCodeCode_Value_AVERAGE;
  static const Value MAXIMUM =
    StatisticsCodeCode_Value_MAXIMUM;
  static const Value MINIMUM =
    StatisticsCodeCode_Value_MINIMUM;
  static const Value COUNT =
    StatisticsCodeCode_Value_COUNT;
  static const Value TOTALCOUNT =
    StatisticsCodeCode_Value_TOTALCOUNT;
  static const Value MEDIAN =
    StatisticsCodeCode_Value_MEDIAN;
  static const Value STD_DEV =
    StatisticsCodeCode_Value_STD_DEV;
  static const Value SUM =
    StatisticsCodeCode_Value_SUM;
  static const Value VARIANCE =
    StatisticsCodeCode_Value_VARIANCE;
  static const Value TWENTY_PERCENT =
    StatisticsCodeCode_Value_TWENTY_PERCENT;
  static const Value EIGHTY_PERCENT =
    StatisticsCodeCode_Value_EIGHTY_PERCENT;
  static const Value FOUR_LOWER =
    StatisticsCodeCode_Value_FOUR_LOWER;
  static const Value FOUR_UPPER =
    StatisticsCodeCode_Value_FOUR_UPPER;
  static const Value FOUR_DEV =
    StatisticsCodeCode_Value_FOUR_DEV;
  static const Value FIVE_ONE =
    StatisticsCodeCode_Value_FIVE_ONE;
  static const Value FIVE_TWO =
    StatisticsCodeCode_Value_FIVE_TWO;
  static const Value FIVE_THREE =
    StatisticsCodeCode_Value_FIVE_THREE;
  static const Value FIVE_FOUR =
    StatisticsCodeCode_Value_FIVE_FOUR;
  static const Value SKEW =
    StatisticsCodeCode_Value_SKEW;
  static const Value KURTOSIS =
    StatisticsCodeCode_Value_KURTOSIS;
  static const Value REGRESSION =
    StatisticsCodeCode_Value_REGRESSION;
  static inline bool Value_IsValid(int value) {
    return StatisticsCodeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    StatisticsCodeCode_Value_Value_MIN;
  static const Value Value_MAX =
    StatisticsCodeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    StatisticsCodeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return StatisticsCodeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return StatisticsCodeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return StatisticsCodeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.StatisticsCodeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::StatisticsCodeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::StatisticsCodeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.StatisticsCodeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ObservationStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ObservationStatusCode) */ {
 public:
  ObservationStatusCode();
  virtual ~ObservationStatusCode();

  ObservationStatusCode(const ObservationStatusCode& from);

  inline ObservationStatusCode& operator=(const ObservationStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ObservationStatusCode(ObservationStatusCode&& from) noexcept
    : ObservationStatusCode() {
    *this = ::std::move(from);
  }

  inline ObservationStatusCode& operator=(ObservationStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObservationStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObservationStatusCode* internal_default_instance() {
    return reinterpret_cast<const ObservationStatusCode*>(
               &_ObservationStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    209;

  void Swap(ObservationStatusCode* other);
  friend void swap(ObservationStatusCode& a, ObservationStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ObservationStatusCode* New() const final {
    return CreateMaybeMessage<ObservationStatusCode>(NULL);
  }

  ObservationStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ObservationStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ObservationStatusCode& from);
  void MergeFrom(const ObservationStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObservationStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ObservationStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ObservationStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value REGISTERED =
    ObservationStatusCode_Value_REGISTERED;
  static const Value PRELIMINARY =
    ObservationStatusCode_Value_PRELIMINARY;
  static const Value FINAL =
    ObservationStatusCode_Value_FINAL;
  static const Value AMENDED =
    ObservationStatusCode_Value_AMENDED;
  static const Value CORRECTED =
    ObservationStatusCode_Value_CORRECTED;
  static const Value CANCELLED =
    ObservationStatusCode_Value_CANCELLED;
  static const Value ENTERED_IN_ERROR =
    ObservationStatusCode_Value_ENTERED_IN_ERROR;
  static const Value UNKNOWN =
    ObservationStatusCode_Value_UNKNOWN;
  static inline bool Value_IsValid(int value) {
    return ObservationStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ObservationStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    ObservationStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ObservationStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ObservationStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ObservationStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ObservationStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ObservationStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ObservationStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ObservationStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ObservationStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeviceComponentOperationalStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.DeviceComponentOperationalStatusCode) */ {
 public:
  DeviceComponentOperationalStatusCode();
  virtual ~DeviceComponentOperationalStatusCode();

  DeviceComponentOperationalStatusCode(const DeviceComponentOperationalStatusCode& from);

  inline DeviceComponentOperationalStatusCode& operator=(const DeviceComponentOperationalStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeviceComponentOperationalStatusCode(DeviceComponentOperationalStatusCode&& from) noexcept
    : DeviceComponentOperationalStatusCode() {
    *this = ::std::move(from);
  }

  inline DeviceComponentOperationalStatusCode& operator=(DeviceComponentOperationalStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeviceComponentOperationalStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeviceComponentOperationalStatusCode* internal_default_instance() {
    return reinterpret_cast<const DeviceComponentOperationalStatusCode*>(
               &_DeviceComponentOperationalStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    210;

  void Swap(DeviceComponentOperationalStatusCode* other);
  friend void swap(DeviceComponentOperationalStatusCode& a, DeviceComponentOperationalStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeviceComponentOperationalStatusCode* New() const final {
    return CreateMaybeMessage<DeviceComponentOperationalStatusCode>(NULL);
  }

  DeviceComponentOperationalStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeviceComponentOperationalStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeviceComponentOperationalStatusCode& from);
  void MergeFrom(const DeviceComponentOperationalStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeviceComponentOperationalStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DeviceComponentOperationalStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    DeviceComponentOperationalStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value OFF =
    DeviceComponentOperationalStatusCode_Value_OFF;
  static const Value ON =
    DeviceComponentOperationalStatusCode_Value_ON;
  static const Value NOT_READY =
    DeviceComponentOperationalStatusCode_Value_NOT_READY;
  static const Value STANDBY =
    DeviceComponentOperationalStatusCode_Value_STANDBY;
  static const Value TRANSDUC_DISCON =
    DeviceComponentOperationalStatusCode_Value_TRANSDUC_DISCON;
  static const Value HW_DISCON =
    DeviceComponentOperationalStatusCode_Value_HW_DISCON;
  static const Value ENTERED_IN_ERROR =
    DeviceComponentOperationalStatusCode_Value_ENTERED_IN_ERROR;
  static inline bool Value_IsValid(int value) {
    return DeviceComponentOperationalStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    DeviceComponentOperationalStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    DeviceComponentOperationalStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    DeviceComponentOperationalStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return DeviceComponentOperationalStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return DeviceComponentOperationalStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return DeviceComponentOperationalStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.DeviceComponentOperationalStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::DeviceComponentOperationalStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::DeviceComponentOperationalStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.DeviceComponentOperationalStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OperationKindCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.OperationKindCode) */ {
 public:
  OperationKindCode();
  virtual ~OperationKindCode();

  OperationKindCode(const OperationKindCode& from);

  inline OperationKindCode& operator=(const OperationKindCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OperationKindCode(OperationKindCode&& from) noexcept
    : OperationKindCode() {
    *this = ::std::move(from);
  }

  inline OperationKindCode& operator=(OperationKindCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OperationKindCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OperationKindCode* internal_default_instance() {
    return reinterpret_cast<const OperationKindCode*>(
               &_OperationKindCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    211;

  void Swap(OperationKindCode* other);
  friend void swap(OperationKindCode& a, OperationKindCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OperationKindCode* New() const final {
    return CreateMaybeMessage<OperationKindCode>(NULL);
  }

  OperationKindCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OperationKindCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OperationKindCode& from);
  void MergeFrom(const OperationKindCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OperationKindCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef OperationKindCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    OperationKindCode_Value_INVALID_UNINITIALIZED;
  static const Value OPERATION =
    OperationKindCode_Value_OPERATION;
  static const Value QUERY =
    OperationKindCode_Value_QUERY;
  static inline bool Value_IsValid(int value) {
    return OperationKindCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    OperationKindCode_Value_Value_MIN;
  static const Value Value_MAX =
    OperationKindCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    OperationKindCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return OperationKindCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return OperationKindCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return OperationKindCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.OperationKindCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::OperationKindCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::OperationKindCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.OperationKindCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OperationOutcomeCodesCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.OperationOutcomeCodesCode) */ {
 public:
  OperationOutcomeCodesCode();
  virtual ~OperationOutcomeCodesCode();

  OperationOutcomeCodesCode(const OperationOutcomeCodesCode& from);

  inline OperationOutcomeCodesCode& operator=(const OperationOutcomeCodesCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OperationOutcomeCodesCode(OperationOutcomeCodesCode&& from) noexcept
    : OperationOutcomeCodesCode() {
    *this = ::std::move(from);
  }

  inline OperationOutcomeCodesCode& operator=(OperationOutcomeCodesCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OperationOutcomeCodesCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OperationOutcomeCodesCode* internal_default_instance() {
    return reinterpret_cast<const OperationOutcomeCodesCode*>(
               &_OperationOutcomeCodesCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    212;

  void Swap(OperationOutcomeCodesCode* other);
  friend void swap(OperationOutcomeCodesCode& a, OperationOutcomeCodesCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OperationOutcomeCodesCode* New() const final {
    return CreateMaybeMessage<OperationOutcomeCodesCode>(NULL);
  }

  OperationOutcomeCodesCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OperationOutcomeCodesCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OperationOutcomeCodesCode& from);
  void MergeFrom(const OperationOutcomeCodesCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OperationOutcomeCodesCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef OperationOutcomeCodesCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    OperationOutcomeCodesCode_Value_INVALID_UNINITIALIZED;
  static const Value MSG_AUTH_REQUIRED =
    OperationOutcomeCodesCode_Value_MSG_AUTH_REQUIRED;
  static const Value MSG_BAD_FORMAT =
    OperationOutcomeCodesCode_Value_MSG_BAD_FORMAT;
  static const Value MSG_BAD_SYNTAX =
    OperationOutcomeCodesCode_Value_MSG_BAD_SYNTAX;
  static const Value MSG_CANT_PARSE_CONTENT =
    OperationOutcomeCodesCode_Value_MSG_CANT_PARSE_CONTENT;
  static const Value MSG_CANT_PARSE_ROOT =
    OperationOutcomeCodesCode_Value_MSG_CANT_PARSE_ROOT;
  static const Value MSG_CREATED =
    OperationOutcomeCodesCode_Value_MSG_CREATED;
  static const Value MSG_DATE_FORMAT =
    OperationOutcomeCodesCode_Value_MSG_DATE_FORMAT;
  static const Value MSG_DELETED =
    OperationOutcomeCodesCode_Value_MSG_DELETED;
  static const Value MSG_DELETED_DONE =
    OperationOutcomeCodesCode_Value_MSG_DELETED_DONE;
  static const Value MSG_DELETED_ID =
    OperationOutcomeCodesCode_Value_MSG_DELETED_ID;
  static const Value MSG_DUPLICATE_ID =
    OperationOutcomeCodesCode_Value_MSG_DUPLICATE_ID;
  static const Value MSG_ERROR_PARSING =
    OperationOutcomeCodesCode_Value_MSG_ERROR_PARSING;
  static const Value MSG_ID_INVALID =
    OperationOutcomeCodesCode_Value_MSG_ID_INVALID;
  static const Value MSG_ID_TOO_LONG =
    OperationOutcomeCodesCode_Value_MSG_ID_TOO_LONG;
  static const Value MSG_INVALID_ID =
    OperationOutcomeCodesCode_Value_MSG_INVALID_ID;
  static const Value MSG_JSON_OBJECT =
    OperationOutcomeCodesCode_Value_MSG_JSON_OBJECT;
  static const Value MSG_LOCAL_FAIL =
    OperationOutcomeCodesCode_Value_MSG_LOCAL_FAIL;
  static const Value MSG_NO_MATCH =
    OperationOutcomeCodesCode_Value_MSG_NO_MATCH;
  static const Value MSG_NO_EXIST =
    OperationOutcomeCodesCode_Value_MSG_NO_EXIST;
  static const Value MSG_NO_MODULE =
    OperationOutcomeCodesCode_Value_MSG_NO_MODULE;
  static const Value MSG_NO_SUMMARY =
    OperationOutcomeCodesCode_Value_MSG_NO_SUMMARY;
  static const Value MSG_OP_NOT_ALLOWED =
    OperationOutcomeCodesCode_Value_MSG_OP_NOT_ALLOWED;
  static const Value MSG_PARAM_CHAINED =
    OperationOutcomeCodesCode_Value_MSG_PARAM_CHAINED;
  static const Value MSG_PARAM_NO_REPEAT =
    OperationOutcomeCodesCode_Value_MSG_PARAM_NO_REPEAT;
  static const Value MSG_PARAM_UNKNOWN =
    OperationOutcomeCodesCode_Value_MSG_PARAM_UNKNOWN;
  static const Value MSG_PARAM_INVALID =
    OperationOutcomeCodesCode_Value_MSG_PARAM_INVALID;
  static const Value MSG_PARAM_MODIFIER_INVALID =
    OperationOutcomeCodesCode_Value_MSG_PARAM_MODIFIER_INVALID;
  static const Value MSG_RESOURCE_EXAMPLE_PROTECTED =
    OperationOutcomeCodesCode_Value_MSG_RESOURCE_EXAMPLE_PROTECTED;
  static const Value MSG_RESOURCE_ID_FAIL =
    OperationOutcomeCodesCode_Value_MSG_RESOURCE_ID_FAIL;
  static const Value MSG_RESOURCE_NOT_ALLOWED =
    OperationOutcomeCodesCode_Value_MSG_RESOURCE_NOT_ALLOWED;
  static const Value MSG_RESOURCE_REQUIRED =
    OperationOutcomeCodesCode_Value_MSG_RESOURCE_REQUIRED;
  static const Value MSG_RESOURCE_ID_MISMATCH =
    OperationOutcomeCodesCode_Value_MSG_RESOURCE_ID_MISMATCH;
  static const Value MSG_RESOURCE_ID_MISSING =
    OperationOutcomeCodesCode_Value_MSG_RESOURCE_ID_MISSING;
  static const Value MSG_RESOURCE_TYPE_MISMATCH =
    OperationOutcomeCodesCode_Value_MSG_RESOURCE_TYPE_MISMATCH;
  static const Value MSG_SORT_UNKNOWN =
    OperationOutcomeCodesCode_Value_MSG_SORT_UNKNOWN;
  static const Value MSG_TRANSACTION_DUPLICATE_ID =
    OperationOutcomeCodesCode_Value_MSG_TRANSACTION_DUPLICATE_ID;
  static const Value MSG_TRANSACTION_MISSING_ID =
    OperationOutcomeCodesCode_Value_MSG_TRANSACTION_MISSING_ID;
  static const Value MSG_UNHANDLED_NODE_TYPE =
    OperationOutcomeCodesCode_Value_MSG_UNHANDLED_NODE_TYPE;
  static const Value MSG_UNKNOWN_CONTENT =
    OperationOutcomeCodesCode_Value_MSG_UNKNOWN_CONTENT;
  static const Value MSG_UNKNOWN_OPERATION =
    OperationOutcomeCodesCode_Value_MSG_UNKNOWN_OPERATION;
  static const Value MSG_UNKNOWN_TYPE =
    OperationOutcomeCodesCode_Value_MSG_UNKNOWN_TYPE;
  static const Value MSG_UPDATED =
    OperationOutcomeCodesCode_Value_MSG_UPDATED;
  static const Value MSG_VERSION_AWARE =
    OperationOutcomeCodesCode_Value_MSG_VERSION_AWARE;
  static const Value MSG_VERSION_AWARE_CONFLICT =
    OperationOutcomeCodesCode_Value_MSG_VERSION_AWARE_CONFLICT;
  static const Value MSG_VERSION_AWARE_URL =
    OperationOutcomeCodesCode_Value_MSG_VERSION_AWARE_URL;
  static const Value MSG_WRONG_NS =
    OperationOutcomeCodesCode_Value_MSG_WRONG_NS;
  static const Value SEARCH_MULTIPLE =
    OperationOutcomeCodesCode_Value_SEARCH_MULTIPLE;
  static const Value UPDATE_MULTIPLE_MATCHES =
    OperationOutcomeCodesCode_Value_UPDATE_MULTIPLE_MATCHES;
  static const Value DELETE_MULTIPLE_MATCHES =
    OperationOutcomeCodesCode_Value_DELETE_MULTIPLE_MATCHES;
  static const Value SEARCH_NONE =
    OperationOutcomeCodesCode_Value_SEARCH_NONE;
  static inline bool Value_IsValid(int value) {
    return OperationOutcomeCodesCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    OperationOutcomeCodesCode_Value_Value_MIN;
  static const Value Value_MAX =
    OperationOutcomeCodesCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    OperationOutcomeCodesCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return OperationOutcomeCodesCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return OperationOutcomeCodesCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return OperationOutcomeCodesCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.OperationOutcomeCodesCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::OperationOutcomeCodesCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::OperationOutcomeCodesCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.OperationOutcomeCodesCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NarrativeStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.NarrativeStatusCode) */ {
 public:
  NarrativeStatusCode();
  virtual ~NarrativeStatusCode();

  NarrativeStatusCode(const NarrativeStatusCode& from);

  inline NarrativeStatusCode& operator=(const NarrativeStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NarrativeStatusCode(NarrativeStatusCode&& from) noexcept
    : NarrativeStatusCode() {
    *this = ::std::move(from);
  }

  inline NarrativeStatusCode& operator=(NarrativeStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NarrativeStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NarrativeStatusCode* internal_default_instance() {
    return reinterpret_cast<const NarrativeStatusCode*>(
               &_NarrativeStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    213;

  void Swap(NarrativeStatusCode* other);
  friend void swap(NarrativeStatusCode& a, NarrativeStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NarrativeStatusCode* New() const final {
    return CreateMaybeMessage<NarrativeStatusCode>(NULL);
  }

  NarrativeStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NarrativeStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NarrativeStatusCode& from);
  void MergeFrom(const NarrativeStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NarrativeStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef NarrativeStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    NarrativeStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value GENERATED =
    NarrativeStatusCode_Value_GENERATED;
  static const Value EXTENSIONS =
    NarrativeStatusCode_Value_EXTENSIONS;
  static const Value ADDITIONAL =
    NarrativeStatusCode_Value_ADDITIONAL;
  static const Value EMPTY =
    NarrativeStatusCode_Value_EMPTY;
  static inline bool Value_IsValid(int value) {
    return NarrativeStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    NarrativeStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    NarrativeStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    NarrativeStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return NarrativeStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return NarrativeStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return NarrativeStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.NarrativeStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::NarrativeStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::NarrativeStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.NarrativeStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OperationParameterUseCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.OperationParameterUseCode) */ {
 public:
  OperationParameterUseCode();
  virtual ~OperationParameterUseCode();

  OperationParameterUseCode(const OperationParameterUseCode& from);

  inline OperationParameterUseCode& operator=(const OperationParameterUseCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OperationParameterUseCode(OperationParameterUseCode&& from) noexcept
    : OperationParameterUseCode() {
    *this = ::std::move(from);
  }

  inline OperationParameterUseCode& operator=(OperationParameterUseCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OperationParameterUseCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OperationParameterUseCode* internal_default_instance() {
    return reinterpret_cast<const OperationParameterUseCode*>(
               &_OperationParameterUseCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    214;

  void Swap(OperationParameterUseCode* other);
  friend void swap(OperationParameterUseCode& a, OperationParameterUseCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OperationParameterUseCode* New() const final {
    return CreateMaybeMessage<OperationParameterUseCode>(NULL);
  }

  OperationParameterUseCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OperationParameterUseCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OperationParameterUseCode& from);
  void MergeFrom(const OperationParameterUseCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OperationParameterUseCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef OperationParameterUseCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    OperationParameterUseCode_Value_INVALID_UNINITIALIZED;
  static const Value IN =
    OperationParameterUseCode_Value_IN;
  static const Value OUT =
    OperationParameterUseCode_Value_OUT;
  static inline bool Value_IsValid(int value) {
    return OperationParameterUseCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    OperationParameterUseCode_Value_Value_MIN;
  static const Value Value_MAX =
    OperationParameterUseCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    OperationParameterUseCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return OperationParameterUseCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return OperationParameterUseCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return OperationParameterUseCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.OperationParameterUseCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::OperationParameterUseCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::OperationParameterUseCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.OperationParameterUseCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OrganizationTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.OrganizationTypeCode) */ {
 public:
  OrganizationTypeCode();
  virtual ~OrganizationTypeCode();

  OrganizationTypeCode(const OrganizationTypeCode& from);

  inline OrganizationTypeCode& operator=(const OrganizationTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrganizationTypeCode(OrganizationTypeCode&& from) noexcept
    : OrganizationTypeCode() {
    *this = ::std::move(from);
  }

  inline OrganizationTypeCode& operator=(OrganizationTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OrganizationTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrganizationTypeCode* internal_default_instance() {
    return reinterpret_cast<const OrganizationTypeCode*>(
               &_OrganizationTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    215;

  void Swap(OrganizationTypeCode* other);
  friend void swap(OrganizationTypeCode& a, OrganizationTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrganizationTypeCode* New() const final {
    return CreateMaybeMessage<OrganizationTypeCode>(NULL);
  }

  OrganizationTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OrganizationTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OrganizationTypeCode& from);
  void MergeFrom(const OrganizationTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrganizationTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef OrganizationTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    OrganizationTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value PROV =
    OrganizationTypeCode_Value_PROV;
  static const Value DEPT =
    OrganizationTypeCode_Value_DEPT;
  static const Value TEAM =
    OrganizationTypeCode_Value_TEAM;
  static const Value GOVT =
    OrganizationTypeCode_Value_GOVT;
  static const Value INS =
    OrganizationTypeCode_Value_INS;
  static const Value EDU =
    OrganizationTypeCode_Value_EDU;
  static const Value RELI =
    OrganizationTypeCode_Value_RELI;
  static const Value CRS =
    OrganizationTypeCode_Value_CRS;
  static const Value CG =
    OrganizationTypeCode_Value_CG;
  static const Value BUS =
    OrganizationTypeCode_Value_BUS;
  static const Value OTHER =
    OrganizationTypeCode_Value_OTHER;
  static inline bool Value_IsValid(int value) {
    return OrganizationTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    OrganizationTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    OrganizationTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    OrganizationTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return OrganizationTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return OrganizationTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return OrganizationTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.OrganizationTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::OrganizationTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::OrganizationTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.OrganizationTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeviceComponentParameterGroupCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.DeviceComponentParameterGroupCode) */ {
 public:
  DeviceComponentParameterGroupCode();
  virtual ~DeviceComponentParameterGroupCode();

  DeviceComponentParameterGroupCode(const DeviceComponentParameterGroupCode& from);

  inline DeviceComponentParameterGroupCode& operator=(const DeviceComponentParameterGroupCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeviceComponentParameterGroupCode(DeviceComponentParameterGroupCode&& from) noexcept
    : DeviceComponentParameterGroupCode() {
    *this = ::std::move(from);
  }

  inline DeviceComponentParameterGroupCode& operator=(DeviceComponentParameterGroupCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeviceComponentParameterGroupCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeviceComponentParameterGroupCode* internal_default_instance() {
    return reinterpret_cast<const DeviceComponentParameterGroupCode*>(
               &_DeviceComponentParameterGroupCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    216;

  void Swap(DeviceComponentParameterGroupCode* other);
  friend void swap(DeviceComponentParameterGroupCode& a, DeviceComponentParameterGroupCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeviceComponentParameterGroupCode* New() const final {
    return CreateMaybeMessage<DeviceComponentParameterGroupCode>(NULL);
  }

  DeviceComponentParameterGroupCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeviceComponentParameterGroupCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeviceComponentParameterGroupCode& from);
  void MergeFrom(const DeviceComponentParameterGroupCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeviceComponentParameterGroupCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DeviceComponentParameterGroupCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    DeviceComponentParameterGroupCode_Value_INVALID_UNINITIALIZED;
  static const Value HAEMODYNAMIC =
    DeviceComponentParameterGroupCode_Value_HAEMODYNAMIC;
  static const Value ECG =
    DeviceComponentParameterGroupCode_Value_ECG;
  static const Value RESPIRATORY =
    DeviceComponentParameterGroupCode_Value_RESPIRATORY;
  static const Value VENTILATION =
    DeviceComponentParameterGroupCode_Value_VENTILATION;
  static const Value NEUROLOGICAL =
    DeviceComponentParameterGroupCode_Value_NEUROLOGICAL;
  static const Value DRUG_DELIVERY =
    DeviceComponentParameterGroupCode_Value_DRUG_DELIVERY;
  static const Value FLUID_CHEMISTRY =
    DeviceComponentParameterGroupCode_Value_FLUID_CHEMISTRY;
  static const Value BLOOD_CHEMISTRY =
    DeviceComponentParameterGroupCode_Value_BLOOD_CHEMISTRY;
  static const Value MISCELLANEOUS =
    DeviceComponentParameterGroupCode_Value_MISCELLANEOUS;
  static inline bool Value_IsValid(int value) {
    return DeviceComponentParameterGroupCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    DeviceComponentParameterGroupCode_Value_Value_MIN;
  static const Value Value_MAX =
    DeviceComponentParameterGroupCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    DeviceComponentParameterGroupCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return DeviceComponentParameterGroupCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return DeviceComponentParameterGroupCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return DeviceComponentParameterGroupCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.DeviceComponentParameterGroupCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::DeviceComponentParameterGroupCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::DeviceComponentParameterGroupCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.DeviceComponentParameterGroupCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ParticipantRequiredCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ParticipantRequiredCode) */ {
 public:
  ParticipantRequiredCode();
  virtual ~ParticipantRequiredCode();

  ParticipantRequiredCode(const ParticipantRequiredCode& from);

  inline ParticipantRequiredCode& operator=(const ParticipantRequiredCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParticipantRequiredCode(ParticipantRequiredCode&& from) noexcept
    : ParticipantRequiredCode() {
    *this = ::std::move(from);
  }

  inline ParticipantRequiredCode& operator=(ParticipantRequiredCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParticipantRequiredCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParticipantRequiredCode* internal_default_instance() {
    return reinterpret_cast<const ParticipantRequiredCode*>(
               &_ParticipantRequiredCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    217;

  void Swap(ParticipantRequiredCode* other);
  friend void swap(ParticipantRequiredCode& a, ParticipantRequiredCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParticipantRequiredCode* New() const final {
    return CreateMaybeMessage<ParticipantRequiredCode>(NULL);
  }

  ParticipantRequiredCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParticipantRequiredCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParticipantRequiredCode& from);
  void MergeFrom(const ParticipantRequiredCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParticipantRequiredCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ParticipantRequiredCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ParticipantRequiredCode_Value_INVALID_UNINITIALIZED;
  static const Value REQUIRED =
    ParticipantRequiredCode_Value_REQUIRED;
  static const Value OPTIONAL =
    ParticipantRequiredCode_Value_OPTIONAL;
  static const Value INFORMATION_ONLY =
    ParticipantRequiredCode_Value_INFORMATION_ONLY;
  static inline bool Value_IsValid(int value) {
    return ParticipantRequiredCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ParticipantRequiredCode_Value_Value_MIN;
  static const Value Value_MAX =
    ParticipantRequiredCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ParticipantRequiredCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ParticipantRequiredCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ParticipantRequiredCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ParticipantRequiredCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ParticipantRequiredCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ParticipantRequiredCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ParticipantRequiredCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ParticipantRequiredCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ParticipationStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ParticipationStatusCode) */ {
 public:
  ParticipationStatusCode();
  virtual ~ParticipationStatusCode();

  ParticipationStatusCode(const ParticipationStatusCode& from);

  inline ParticipationStatusCode& operator=(const ParticipationStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParticipationStatusCode(ParticipationStatusCode&& from) noexcept
    : ParticipationStatusCode() {
    *this = ::std::move(from);
  }

  inline ParticipationStatusCode& operator=(ParticipationStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParticipationStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParticipationStatusCode* internal_default_instance() {
    return reinterpret_cast<const ParticipationStatusCode*>(
               &_ParticipationStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    218;

  void Swap(ParticipationStatusCode* other);
  friend void swap(ParticipationStatusCode& a, ParticipationStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParticipationStatusCode* New() const final {
    return CreateMaybeMessage<ParticipationStatusCode>(NULL);
  }

  ParticipationStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParticipationStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParticipationStatusCode& from);
  void MergeFrom(const ParticipationStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParticipationStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ParticipationStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ParticipationStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value ACCEPTED =
    ParticipationStatusCode_Value_ACCEPTED;
  static const Value DECLINED =
    ParticipationStatusCode_Value_DECLINED;
  static const Value TENTATIVE =
    ParticipationStatusCode_Value_TENTATIVE;
  static const Value NEEDS_ACTION =
    ParticipationStatusCode_Value_NEEDS_ACTION;
  static inline bool Value_IsValid(int value) {
    return ParticipationStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ParticipationStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    ParticipationStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ParticipationStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ParticipationStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ParticipationStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ParticipationStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ParticipationStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ParticipationStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ParticipationStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ParticipationStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlanDefinitionTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.PlanDefinitionTypeCode) */ {
 public:
  PlanDefinitionTypeCode();
  virtual ~PlanDefinitionTypeCode();

  PlanDefinitionTypeCode(const PlanDefinitionTypeCode& from);

  inline PlanDefinitionTypeCode& operator=(const PlanDefinitionTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlanDefinitionTypeCode(PlanDefinitionTypeCode&& from) noexcept
    : PlanDefinitionTypeCode() {
    *this = ::std::move(from);
  }

  inline PlanDefinitionTypeCode& operator=(PlanDefinitionTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlanDefinitionTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlanDefinitionTypeCode* internal_default_instance() {
    return reinterpret_cast<const PlanDefinitionTypeCode*>(
               &_PlanDefinitionTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    219;

  void Swap(PlanDefinitionTypeCode* other);
  friend void swap(PlanDefinitionTypeCode& a, PlanDefinitionTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlanDefinitionTypeCode* New() const final {
    return CreateMaybeMessage<PlanDefinitionTypeCode>(NULL);
  }

  PlanDefinitionTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlanDefinitionTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlanDefinitionTypeCode& from);
  void MergeFrom(const PlanDefinitionTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlanDefinitionTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PlanDefinitionTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    PlanDefinitionTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value ORDER_SET =
    PlanDefinitionTypeCode_Value_ORDER_SET;
  static const Value PROTOCOL =
    PlanDefinitionTypeCode_Value_PROTOCOL;
  static const Value ECA_RULE =
    PlanDefinitionTypeCode_Value_ECA_RULE;
  static inline bool Value_IsValid(int value) {
    return PlanDefinitionTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    PlanDefinitionTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    PlanDefinitionTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    PlanDefinitionTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return PlanDefinitionTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return PlanDefinitionTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return PlanDefinitionTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.PlanDefinitionTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::PlanDefinitionTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::PlanDefinitionTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.PlanDefinitionTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PostalAddressUseTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.PostalAddressUseTypeCode) */ {
 public:
  PostalAddressUseTypeCode();
  virtual ~PostalAddressUseTypeCode();

  PostalAddressUseTypeCode(const PostalAddressUseTypeCode& from);

  inline PostalAddressUseTypeCode& operator=(const PostalAddressUseTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PostalAddressUseTypeCode(PostalAddressUseTypeCode&& from) noexcept
    : PostalAddressUseTypeCode() {
    *this = ::std::move(from);
  }

  inline PostalAddressUseTypeCode& operator=(PostalAddressUseTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PostalAddressUseTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PostalAddressUseTypeCode* internal_default_instance() {
    return reinterpret_cast<const PostalAddressUseTypeCode*>(
               &_PostalAddressUseTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    220;

  void Swap(PostalAddressUseTypeCode* other);
  friend void swap(PostalAddressUseTypeCode& a, PostalAddressUseTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PostalAddressUseTypeCode* New() const final {
    return CreateMaybeMessage<PostalAddressUseTypeCode>(NULL);
  }

  PostalAddressUseTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PostalAddressUseTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PostalAddressUseTypeCode& from);
  void MergeFrom(const PostalAddressUseTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PostalAddressUseTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PostalAddressUseTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    PostalAddressUseTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value BAD_ADDRESS =
    PostalAddressUseTypeCode_Value_BAD_ADDRESS;
  static const Value CONFIDENTIAL_ADDRESS =
    PostalAddressUseTypeCode_Value_CONFIDENTIAL_ADDRESS;
  static const Value PRIMARY_HOME =
    PostalAddressUseTypeCode_Value_PRIMARY_HOME;
  static const Value VACATION_HOME =
    PostalAddressUseTypeCode_Value_VACATION_HOME;
  static const Value DIRECT =
    PostalAddressUseTypeCode_Value_DIRECT;
  static const Value PUBLIC =
    PostalAddressUseTypeCode_Value_PUBLIC;
  static const Value PHYSICAL_VISIT_ADDRESS =
    PostalAddressUseTypeCode_Value_PHYSICAL_VISIT_ADDRESS;
  static const Value POSTAL_ADDRESS =
    PostalAddressUseTypeCode_Value_POSTAL_ADDRESS;
  static inline bool Value_IsValid(int value) {
    return PostalAddressUseTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    PostalAddressUseTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    PostalAddressUseTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    PostalAddressUseTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return PostalAddressUseTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return PostalAddressUseTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return PostalAddressUseTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.PostalAddressUseTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::PostalAddressUseTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::PostalAddressUseTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.PostalAddressUseTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PractitionerRoleCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.PractitionerRoleCode) */ {
 public:
  PractitionerRoleCode();
  virtual ~PractitionerRoleCode();

  PractitionerRoleCode(const PractitionerRoleCode& from);

  inline PractitionerRoleCode& operator=(const PractitionerRoleCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PractitionerRoleCode(PractitionerRoleCode&& from) noexcept
    : PractitionerRoleCode() {
    *this = ::std::move(from);
  }

  inline PractitionerRoleCode& operator=(PractitionerRoleCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PractitionerRoleCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PractitionerRoleCode* internal_default_instance() {
    return reinterpret_cast<const PractitionerRoleCode*>(
               &_PractitionerRoleCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    221;

  void Swap(PractitionerRoleCode* other);
  friend void swap(PractitionerRoleCode& a, PractitionerRoleCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PractitionerRoleCode* New() const final {
    return CreateMaybeMessage<PractitionerRoleCode>(NULL);
  }

  PractitionerRoleCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PractitionerRoleCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PractitionerRoleCode& from);
  void MergeFrom(const PractitionerRoleCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PractitionerRoleCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PractitionerRoleCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    PractitionerRoleCode_Value_INVALID_UNINITIALIZED;
  static const Value DOCTOR =
    PractitionerRoleCode_Value_DOCTOR;
  static const Value NURSE =
    PractitionerRoleCode_Value_NURSE;
  static const Value PHARMACIST =
    PractitionerRoleCode_Value_PHARMACIST;
  static const Value RESEARCHER =
    PractitionerRoleCode_Value_RESEARCHER;
  static const Value TEACHER =
    PractitionerRoleCode_Value_TEACHER;
  static const Value ICT =
    PractitionerRoleCode_Value_ICT;
  static inline bool Value_IsValid(int value) {
    return PractitionerRoleCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    PractitionerRoleCode_Value_Value_MIN;
  static const Value Value_MAX =
    PractitionerRoleCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    PractitionerRoleCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return PractitionerRoleCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return PractitionerRoleCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return PractitionerRoleCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.PractitionerRoleCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::PractitionerRoleCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::PractitionerRoleCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.PractitionerRoleCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PractitionerSpecialtyCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.PractitionerSpecialtyCode) */ {
 public:
  PractitionerSpecialtyCode();
  virtual ~PractitionerSpecialtyCode();

  PractitionerSpecialtyCode(const PractitionerSpecialtyCode& from);

  inline PractitionerSpecialtyCode& operator=(const PractitionerSpecialtyCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PractitionerSpecialtyCode(PractitionerSpecialtyCode&& from) noexcept
    : PractitionerSpecialtyCode() {
    *this = ::std::move(from);
  }

  inline PractitionerSpecialtyCode& operator=(PractitionerSpecialtyCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PractitionerSpecialtyCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PractitionerSpecialtyCode* internal_default_instance() {
    return reinterpret_cast<const PractitionerSpecialtyCode*>(
               &_PractitionerSpecialtyCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    222;

  void Swap(PractitionerSpecialtyCode* other);
  friend void swap(PractitionerSpecialtyCode& a, PractitionerSpecialtyCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PractitionerSpecialtyCode* New() const final {
    return CreateMaybeMessage<PractitionerSpecialtyCode>(NULL);
  }

  PractitionerSpecialtyCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PractitionerSpecialtyCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PractitionerSpecialtyCode& from);
  void MergeFrom(const PractitionerSpecialtyCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PractitionerSpecialtyCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PractitionerSpecialtyCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    PractitionerSpecialtyCode_Value_INVALID_UNINITIALIZED;
  static const Value CARDIO =
    PractitionerSpecialtyCode_Value_CARDIO;
  static const Value DENT =
    PractitionerSpecialtyCode_Value_DENT;
  static const Value DIETARY =
    PractitionerSpecialtyCode_Value_DIETARY;
  static const Value MIDW =
    PractitionerSpecialtyCode_Value_MIDW;
  static const Value SYSARCH =
    PractitionerSpecialtyCode_Value_SYSARCH;
  static inline bool Value_IsValid(int value) {
    return PractitionerSpecialtyCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    PractitionerSpecialtyCode_Value_Value_MIN;
  static const Value Value_MAX =
    PractitionerSpecialtyCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    PractitionerSpecialtyCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return PractitionerSpecialtyCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return PractitionerSpecialtyCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return PractitionerSpecialtyCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.PractitionerSpecialtyCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::PractitionerSpecialtyCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::PractitionerSpecialtyCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.PractitionerSpecialtyCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProcedureProgressStatusCodesCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ProcedureProgressStatusCodesCode) */ {
 public:
  ProcedureProgressStatusCodesCode();
  virtual ~ProcedureProgressStatusCodesCode();

  ProcedureProgressStatusCodesCode(const ProcedureProgressStatusCodesCode& from);

  inline ProcedureProgressStatusCodesCode& operator=(const ProcedureProgressStatusCodesCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProcedureProgressStatusCodesCode(ProcedureProgressStatusCodesCode&& from) noexcept
    : ProcedureProgressStatusCodesCode() {
    *this = ::std::move(from);
  }

  inline ProcedureProgressStatusCodesCode& operator=(ProcedureProgressStatusCodesCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProcedureProgressStatusCodesCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProcedureProgressStatusCodesCode* internal_default_instance() {
    return reinterpret_cast<const ProcedureProgressStatusCodesCode*>(
               &_ProcedureProgressStatusCodesCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    223;

  void Swap(ProcedureProgressStatusCodesCode* other);
  friend void swap(ProcedureProgressStatusCodesCode& a, ProcedureProgressStatusCodesCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProcedureProgressStatusCodesCode* New() const final {
    return CreateMaybeMessage<ProcedureProgressStatusCodesCode>(NULL);
  }

  ProcedureProgressStatusCodesCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProcedureProgressStatusCodesCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProcedureProgressStatusCodesCode& from);
  void MergeFrom(const ProcedureProgressStatusCodesCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProcedureProgressStatusCodesCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ProcedureProgressStatusCodesCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ProcedureProgressStatusCodesCode_Value_INVALID_UNINITIALIZED;
  static const Value IN_OPERATING_ROOM =
    ProcedureProgressStatusCodesCode_Value_IN_OPERATING_ROOM;
  static const Value PREPARED =
    ProcedureProgressStatusCodesCode_Value_PREPARED;
  static const Value ANESTHESIA_INDUCED =
    ProcedureProgressStatusCodesCode_Value_ANESTHESIA_INDUCED;
  static const Value OPEN_INCISION =
    ProcedureProgressStatusCodesCode_Value_OPEN_INCISION;
  static const Value CLOSED_INCISION =
    ProcedureProgressStatusCodesCode_Value_CLOSED_INCISION;
  static const Value IN_RECOVERY_ROOM =
    ProcedureProgressStatusCodesCode_Value_IN_RECOVERY_ROOM;
  static inline bool Value_IsValid(int value) {
    return ProcedureProgressStatusCodesCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ProcedureProgressStatusCodesCode_Value_Value_MIN;
  static const Value Value_MAX =
    ProcedureProgressStatusCodesCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ProcedureProgressStatusCodesCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ProcedureProgressStatusCodesCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ProcedureProgressStatusCodesCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ProcedureProgressStatusCodesCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ProcedureProgressStatusCodesCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ProcedureProgressStatusCodesCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ProcedureProgressStatusCodesCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ProcedureProgressStatusCodesCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProvenanceEntityRoleCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ProvenanceEntityRoleCode) */ {
 public:
  ProvenanceEntityRoleCode();
  virtual ~ProvenanceEntityRoleCode();

  ProvenanceEntityRoleCode(const ProvenanceEntityRoleCode& from);

  inline ProvenanceEntityRoleCode& operator=(const ProvenanceEntityRoleCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProvenanceEntityRoleCode(ProvenanceEntityRoleCode&& from) noexcept
    : ProvenanceEntityRoleCode() {
    *this = ::std::move(from);
  }

  inline ProvenanceEntityRoleCode& operator=(ProvenanceEntityRoleCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProvenanceEntityRoleCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProvenanceEntityRoleCode* internal_default_instance() {
    return reinterpret_cast<const ProvenanceEntityRoleCode*>(
               &_ProvenanceEntityRoleCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    224;

  void Swap(ProvenanceEntityRoleCode* other);
  friend void swap(ProvenanceEntityRoleCode& a, ProvenanceEntityRoleCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProvenanceEntityRoleCode* New() const final {
    return CreateMaybeMessage<ProvenanceEntityRoleCode>(NULL);
  }

  ProvenanceEntityRoleCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProvenanceEntityRoleCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProvenanceEntityRoleCode& from);
  void MergeFrom(const ProvenanceEntityRoleCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProvenanceEntityRoleCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ProvenanceEntityRoleCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ProvenanceEntityRoleCode_Value_INVALID_UNINITIALIZED;
  static const Value DERIVATION =
    ProvenanceEntityRoleCode_Value_DERIVATION;
  static const Value REVISION =
    ProvenanceEntityRoleCode_Value_REVISION;
  static const Value QUOTATION =
    ProvenanceEntityRoleCode_Value_QUOTATION;
  static const Value SOURCE =
    ProvenanceEntityRoleCode_Value_SOURCE;
  static const Value REMOVAL =
    ProvenanceEntityRoleCode_Value_REMOVAL;
  static inline bool Value_IsValid(int value) {
    return ProvenanceEntityRoleCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ProvenanceEntityRoleCode_Value_Value_MIN;
  static const Value Value_MAX =
    ProvenanceEntityRoleCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ProvenanceEntityRoleCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ProvenanceEntityRoleCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ProvenanceEntityRoleCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ProvenanceEntityRoleCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ProvenanceEntityRoleCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ProvenanceEntityRoleCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ProvenanceEntityRoleCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ProvenanceEntityRoleCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PublicationStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.PublicationStatusCode) */ {
 public:
  PublicationStatusCode();
  virtual ~PublicationStatusCode();

  PublicationStatusCode(const PublicationStatusCode& from);

  inline PublicationStatusCode& operator=(const PublicationStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PublicationStatusCode(PublicationStatusCode&& from) noexcept
    : PublicationStatusCode() {
    *this = ::std::move(from);
  }

  inline PublicationStatusCode& operator=(PublicationStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PublicationStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PublicationStatusCode* internal_default_instance() {
    return reinterpret_cast<const PublicationStatusCode*>(
               &_PublicationStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    225;

  void Swap(PublicationStatusCode* other);
  friend void swap(PublicationStatusCode& a, PublicationStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PublicationStatusCode* New() const final {
    return CreateMaybeMessage<PublicationStatusCode>(NULL);
  }

  PublicationStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PublicationStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PublicationStatusCode& from);
  void MergeFrom(const PublicationStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PublicationStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PublicationStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    PublicationStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value DRAFT =
    PublicationStatusCode_Value_DRAFT;
  static const Value ACTIVE =
    PublicationStatusCode_Value_ACTIVE;
  static const Value RETIRED =
    PublicationStatusCode_Value_RETIRED;
  static const Value UNKNOWN =
    PublicationStatusCode_Value_UNKNOWN;
  static inline bool Value_IsValid(int value) {
    return PublicationStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    PublicationStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    PublicationStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    PublicationStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return PublicationStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return PublicationStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return PublicationStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.PublicationStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::PublicationStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::PublicationStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.PublicationStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QualityTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.QualityTypeCode) */ {
 public:
  QualityTypeCode();
  virtual ~QualityTypeCode();

  QualityTypeCode(const QualityTypeCode& from);

  inline QualityTypeCode& operator=(const QualityTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QualityTypeCode(QualityTypeCode&& from) noexcept
    : QualityTypeCode() {
    *this = ::std::move(from);
  }

  inline QualityTypeCode& operator=(QualityTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const QualityTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QualityTypeCode* internal_default_instance() {
    return reinterpret_cast<const QualityTypeCode*>(
               &_QualityTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    226;

  void Swap(QualityTypeCode* other);
  friend void swap(QualityTypeCode& a, QualityTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QualityTypeCode* New() const final {
    return CreateMaybeMessage<QualityTypeCode>(NULL);
  }

  QualityTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QualityTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const QualityTypeCode& from);
  void MergeFrom(const QualityTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QualityTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef QualityTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    QualityTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value INDEL =
    QualityTypeCode_Value_INDEL;
  static const Value SNP =
    QualityTypeCode_Value_SNP;
  static const Value UNKNOWN =
    QualityTypeCode_Value_UNKNOWN;
  static inline bool Value_IsValid(int value) {
    return QualityTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    QualityTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    QualityTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    QualityTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return QualityTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return QualityTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return QualityTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.QualityTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::QualityTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::QualityTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.QualityTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MaxOccursCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.MaxOccursCode) */ {
 public:
  MaxOccursCode();
  virtual ~MaxOccursCode();

  MaxOccursCode(const MaxOccursCode& from);

  inline MaxOccursCode& operator=(const MaxOccursCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MaxOccursCode(MaxOccursCode&& from) noexcept
    : MaxOccursCode() {
    *this = ::std::move(from);
  }

  inline MaxOccursCode& operator=(MaxOccursCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MaxOccursCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MaxOccursCode* internal_default_instance() {
    return reinterpret_cast<const MaxOccursCode*>(
               &_MaxOccursCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    227;

  void Swap(MaxOccursCode* other);
  friend void swap(MaxOccursCode& a, MaxOccursCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MaxOccursCode* New() const final {
    return CreateMaybeMessage<MaxOccursCode>(NULL);
  }

  MaxOccursCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MaxOccursCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MaxOccursCode& from);
  void MergeFrom(const MaxOccursCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MaxOccursCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MaxOccursCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    MaxOccursCode_Value_INVALID_UNINITIALIZED;
  static const Value MAX =
    MaxOccursCode_Value_MAX;
  static inline bool Value_IsValid(int value) {
    return MaxOccursCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    MaxOccursCode_Value_Value_MIN;
  static const Value Value_MAX =
    MaxOccursCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    MaxOccursCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return MaxOccursCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return MaxOccursCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return MaxOccursCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.MaxOccursCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::MaxOccursCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::MaxOccursCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.MaxOccursCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QuestionnaireResponseStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.QuestionnaireResponseStatusCode) */ {
 public:
  QuestionnaireResponseStatusCode();
  virtual ~QuestionnaireResponseStatusCode();

  QuestionnaireResponseStatusCode(const QuestionnaireResponseStatusCode& from);

  inline QuestionnaireResponseStatusCode& operator=(const QuestionnaireResponseStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QuestionnaireResponseStatusCode(QuestionnaireResponseStatusCode&& from) noexcept
    : QuestionnaireResponseStatusCode() {
    *this = ::std::move(from);
  }

  inline QuestionnaireResponseStatusCode& operator=(QuestionnaireResponseStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestionnaireResponseStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QuestionnaireResponseStatusCode* internal_default_instance() {
    return reinterpret_cast<const QuestionnaireResponseStatusCode*>(
               &_QuestionnaireResponseStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    228;

  void Swap(QuestionnaireResponseStatusCode* other);
  friend void swap(QuestionnaireResponseStatusCode& a, QuestionnaireResponseStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QuestionnaireResponseStatusCode* New() const final {
    return CreateMaybeMessage<QuestionnaireResponseStatusCode>(NULL);
  }

  QuestionnaireResponseStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QuestionnaireResponseStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const QuestionnaireResponseStatusCode& from);
  void MergeFrom(const QuestionnaireResponseStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QuestionnaireResponseStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef QuestionnaireResponseStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    QuestionnaireResponseStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value IN_PROGRESS =
    QuestionnaireResponseStatusCode_Value_IN_PROGRESS;
  static const Value COMPLETED =
    QuestionnaireResponseStatusCode_Value_COMPLETED;
  static const Value AMENDED =
    QuestionnaireResponseStatusCode_Value_AMENDED;
  static const Value ENTERED_IN_ERROR =
    QuestionnaireResponseStatusCode_Value_ENTERED_IN_ERROR;
  static const Value STOPPED =
    QuestionnaireResponseStatusCode_Value_STOPPED;
  static inline bool Value_IsValid(int value) {
    return QuestionnaireResponseStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    QuestionnaireResponseStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    QuestionnaireResponseStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    QuestionnaireResponseStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return QuestionnaireResponseStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return QuestionnaireResponseStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return QuestionnaireResponseStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.QuestionnaireResponseStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::QuestionnaireResponseStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::QuestionnaireResponseStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.QuestionnaireResponseStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QuestionnaireTextCategoriesCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.QuestionnaireTextCategoriesCode) */ {
 public:
  QuestionnaireTextCategoriesCode();
  virtual ~QuestionnaireTextCategoriesCode();

  QuestionnaireTextCategoriesCode(const QuestionnaireTextCategoriesCode& from);

  inline QuestionnaireTextCategoriesCode& operator=(const QuestionnaireTextCategoriesCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QuestionnaireTextCategoriesCode(QuestionnaireTextCategoriesCode&& from) noexcept
    : QuestionnaireTextCategoriesCode() {
    *this = ::std::move(from);
  }

  inline QuestionnaireTextCategoriesCode& operator=(QuestionnaireTextCategoriesCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestionnaireTextCategoriesCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QuestionnaireTextCategoriesCode* internal_default_instance() {
    return reinterpret_cast<const QuestionnaireTextCategoriesCode*>(
               &_QuestionnaireTextCategoriesCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    229;

  void Swap(QuestionnaireTextCategoriesCode* other);
  friend void swap(QuestionnaireTextCategoriesCode& a, QuestionnaireTextCategoriesCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QuestionnaireTextCategoriesCode* New() const final {
    return CreateMaybeMessage<QuestionnaireTextCategoriesCode>(NULL);
  }

  QuestionnaireTextCategoriesCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QuestionnaireTextCategoriesCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const QuestionnaireTextCategoriesCode& from);
  void MergeFrom(const QuestionnaireTextCategoriesCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QuestionnaireTextCategoriesCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef QuestionnaireTextCategoriesCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    QuestionnaireTextCategoriesCode_Value_INVALID_UNINITIALIZED;
  static const Value INSTRUCTIONS =
    QuestionnaireTextCategoriesCode_Value_INSTRUCTIONS;
  static const Value SECURITY =
    QuestionnaireTextCategoriesCode_Value_SECURITY;
  static inline bool Value_IsValid(int value) {
    return QuestionnaireTextCategoriesCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    QuestionnaireTextCategoriesCode_Value_Value_MIN;
  static const Value Value_MAX =
    QuestionnaireTextCategoriesCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    QuestionnaireTextCategoriesCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return QuestionnaireTextCategoriesCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return QuestionnaireTextCategoriesCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return QuestionnaireTextCategoriesCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.QuestionnaireTextCategoriesCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::QuestionnaireTextCategoriesCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::QuestionnaireTextCategoriesCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.QuestionnaireTextCategoriesCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QuestionnaireItemUIControlCodesCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.QuestionnaireItemUIControlCodesCode) */ {
 public:
  QuestionnaireItemUIControlCodesCode();
  virtual ~QuestionnaireItemUIControlCodesCode();

  QuestionnaireItemUIControlCodesCode(const QuestionnaireItemUIControlCodesCode& from);

  inline QuestionnaireItemUIControlCodesCode& operator=(const QuestionnaireItemUIControlCodesCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QuestionnaireItemUIControlCodesCode(QuestionnaireItemUIControlCodesCode&& from) noexcept
    : QuestionnaireItemUIControlCodesCode() {
    *this = ::std::move(from);
  }

  inline QuestionnaireItemUIControlCodesCode& operator=(QuestionnaireItemUIControlCodesCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestionnaireItemUIControlCodesCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QuestionnaireItemUIControlCodesCode* internal_default_instance() {
    return reinterpret_cast<const QuestionnaireItemUIControlCodesCode*>(
               &_QuestionnaireItemUIControlCodesCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    230;

  void Swap(QuestionnaireItemUIControlCodesCode* other);
  friend void swap(QuestionnaireItemUIControlCodesCode& a, QuestionnaireItemUIControlCodesCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QuestionnaireItemUIControlCodesCode* New() const final {
    return CreateMaybeMessage<QuestionnaireItemUIControlCodesCode>(NULL);
  }

  QuestionnaireItemUIControlCodesCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QuestionnaireItemUIControlCodesCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const QuestionnaireItemUIControlCodesCode& from);
  void MergeFrom(const QuestionnaireItemUIControlCodesCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QuestionnaireItemUIControlCodesCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef QuestionnaireItemUIControlCodesCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    QuestionnaireItemUIControlCodesCode_Value_INVALID_UNINITIALIZED;
  static const Value LIST =
    QuestionnaireItemUIControlCodesCode_Value_LIST;
  static const Value TABLE =
    QuestionnaireItemUIControlCodesCode_Value_TABLE;
  static const Value HEADER =
    QuestionnaireItemUIControlCodesCode_Value_HEADER;
  static const Value FOOTER =
    QuestionnaireItemUIControlCodesCode_Value_FOOTER;
  static const Value INLINE =
    QuestionnaireItemUIControlCodesCode_Value_INLINE;
  static const Value PROMPT =
    QuestionnaireItemUIControlCodesCode_Value_PROMPT;
  static const Value UNIT =
    QuestionnaireItemUIControlCodesCode_Value_UNIT;
  static const Value LOWER =
    QuestionnaireItemUIControlCodesCode_Value_LOWER;
  static const Value UPPER =
    QuestionnaireItemUIControlCodesCode_Value_UPPER;
  static const Value FLYOVER =
    QuestionnaireItemUIControlCodesCode_Value_FLYOVER;
  static const Value HELP =
    QuestionnaireItemUIControlCodesCode_Value_HELP;
  static const Value AUTOCOMPLETE =
    QuestionnaireItemUIControlCodesCode_Value_AUTOCOMPLETE;
  static const Value DROP_DOWN =
    QuestionnaireItemUIControlCodesCode_Value_DROP_DOWN;
  static const Value CHECK_BOX =
    QuestionnaireItemUIControlCodesCode_Value_CHECK_BOX;
  static const Value LOOKUP =
    QuestionnaireItemUIControlCodesCode_Value_LOOKUP;
  static const Value RADIO_BUTTON =
    QuestionnaireItemUIControlCodesCode_Value_RADIO_BUTTON;
  static const Value SLIDER =
    QuestionnaireItemUIControlCodesCode_Value_SLIDER;
  static const Value SPINNER =
    QuestionnaireItemUIControlCodesCode_Value_SPINNER;
  static const Value TEXT_BOX =
    QuestionnaireItemUIControlCodesCode_Value_TEXT_BOX;
  static inline bool Value_IsValid(int value) {
    return QuestionnaireItemUIControlCodesCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    QuestionnaireItemUIControlCodesCode_Value_Value_MIN;
  static const Value Value_MAX =
    QuestionnaireItemUIControlCodesCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    QuestionnaireItemUIControlCodesCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return QuestionnaireItemUIControlCodesCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return QuestionnaireItemUIControlCodesCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return QuestionnaireItemUIControlCodesCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.QuestionnaireItemUIControlCodesCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::QuestionnaireItemUIControlCodesCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::QuestionnaireItemUIControlCodesCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.QuestionnaireItemUIControlCodesCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QuestionnaireItemUsageModeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.QuestionnaireItemUsageModeCode) */ {
 public:
  QuestionnaireItemUsageModeCode();
  virtual ~QuestionnaireItemUsageModeCode();

  QuestionnaireItemUsageModeCode(const QuestionnaireItemUsageModeCode& from);

  inline QuestionnaireItemUsageModeCode& operator=(const QuestionnaireItemUsageModeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QuestionnaireItemUsageModeCode(QuestionnaireItemUsageModeCode&& from) noexcept
    : QuestionnaireItemUsageModeCode() {
    *this = ::std::move(from);
  }

  inline QuestionnaireItemUsageModeCode& operator=(QuestionnaireItemUsageModeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestionnaireItemUsageModeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QuestionnaireItemUsageModeCode* internal_default_instance() {
    return reinterpret_cast<const QuestionnaireItemUsageModeCode*>(
               &_QuestionnaireItemUsageModeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    231;

  void Swap(QuestionnaireItemUsageModeCode* other);
  friend void swap(QuestionnaireItemUsageModeCode& a, QuestionnaireItemUsageModeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QuestionnaireItemUsageModeCode* New() const final {
    return CreateMaybeMessage<QuestionnaireItemUsageModeCode>(NULL);
  }

  QuestionnaireItemUsageModeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QuestionnaireItemUsageModeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const QuestionnaireItemUsageModeCode& from);
  void MergeFrom(const QuestionnaireItemUsageModeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QuestionnaireItemUsageModeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef QuestionnaireItemUsageModeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    QuestionnaireItemUsageModeCode_Value_INVALID_UNINITIALIZED;
  static const Value CAPTURE_DISPLAY =
    QuestionnaireItemUsageModeCode_Value_CAPTURE_DISPLAY;
  static const Value CAPTURE =
    QuestionnaireItemUsageModeCode_Value_CAPTURE;
  static const Value DISPLAY =
    QuestionnaireItemUsageModeCode_Value_DISPLAY;
  static const Value DISPLAY_NON_EMPTY =
    QuestionnaireItemUsageModeCode_Value_DISPLAY_NON_EMPTY;
  static const Value CAPTURE_DISPLAY_NON_EMPTY =
    QuestionnaireItemUsageModeCode_Value_CAPTURE_DISPLAY_NON_EMPTY;
  static inline bool Value_IsValid(int value) {
    return QuestionnaireItemUsageModeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    QuestionnaireItemUsageModeCode_Value_Value_MIN;
  static const Value Value_MAX =
    QuestionnaireItemUsageModeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    QuestionnaireItemUsageModeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return QuestionnaireItemUsageModeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return QuestionnaireItemUsageModeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return QuestionnaireItemUsageModeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.QuestionnaireItemUsageModeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::QuestionnaireItemUsageModeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::QuestionnaireItemUsageModeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.QuestionnaireItemUsageModeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AllergyIntoleranceCertaintyCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.AllergyIntoleranceCertaintyCode) */ {
 public:
  AllergyIntoleranceCertaintyCode();
  virtual ~AllergyIntoleranceCertaintyCode();

  AllergyIntoleranceCertaintyCode(const AllergyIntoleranceCertaintyCode& from);

  inline AllergyIntoleranceCertaintyCode& operator=(const AllergyIntoleranceCertaintyCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AllergyIntoleranceCertaintyCode(AllergyIntoleranceCertaintyCode&& from) noexcept
    : AllergyIntoleranceCertaintyCode() {
    *this = ::std::move(from);
  }

  inline AllergyIntoleranceCertaintyCode& operator=(AllergyIntoleranceCertaintyCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AllergyIntoleranceCertaintyCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AllergyIntoleranceCertaintyCode* internal_default_instance() {
    return reinterpret_cast<const AllergyIntoleranceCertaintyCode*>(
               &_AllergyIntoleranceCertaintyCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    232;

  void Swap(AllergyIntoleranceCertaintyCode* other);
  friend void swap(AllergyIntoleranceCertaintyCode& a, AllergyIntoleranceCertaintyCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AllergyIntoleranceCertaintyCode* New() const final {
    return CreateMaybeMessage<AllergyIntoleranceCertaintyCode>(NULL);
  }

  AllergyIntoleranceCertaintyCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AllergyIntoleranceCertaintyCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AllergyIntoleranceCertaintyCode& from);
  void MergeFrom(const AllergyIntoleranceCertaintyCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AllergyIntoleranceCertaintyCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AllergyIntoleranceCertaintyCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    AllergyIntoleranceCertaintyCode_Value_INVALID_UNINITIALIZED;
  static const Value UNLIKELY =
    AllergyIntoleranceCertaintyCode_Value_UNLIKELY;
  static const Value LIKELY =
    AllergyIntoleranceCertaintyCode_Value_LIKELY;
  static const Value CONFIRMED =
    AllergyIntoleranceCertaintyCode_Value_CONFIRMED;
  static const Value UNKNOWN =
    AllergyIntoleranceCertaintyCode_Value_UNKNOWN;
  static inline bool Value_IsValid(int value) {
    return AllergyIntoleranceCertaintyCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    AllergyIntoleranceCertaintyCode_Value_Value_MIN;
  static const Value Value_MAX =
    AllergyIntoleranceCertaintyCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    AllergyIntoleranceCertaintyCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return AllergyIntoleranceCertaintyCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return AllergyIntoleranceCertaintyCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return AllergyIntoleranceCertaintyCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.AllergyIntoleranceCertaintyCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::AllergyIntoleranceCertaintyCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::AllergyIntoleranceCertaintyCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.AllergyIntoleranceCertaintyCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AllergyIntoleranceSeverityCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.AllergyIntoleranceSeverityCode) */ {
 public:
  AllergyIntoleranceSeverityCode();
  virtual ~AllergyIntoleranceSeverityCode();

  AllergyIntoleranceSeverityCode(const AllergyIntoleranceSeverityCode& from);

  inline AllergyIntoleranceSeverityCode& operator=(const AllergyIntoleranceSeverityCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AllergyIntoleranceSeverityCode(AllergyIntoleranceSeverityCode&& from) noexcept
    : AllergyIntoleranceSeverityCode() {
    *this = ::std::move(from);
  }

  inline AllergyIntoleranceSeverityCode& operator=(AllergyIntoleranceSeverityCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AllergyIntoleranceSeverityCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AllergyIntoleranceSeverityCode* internal_default_instance() {
    return reinterpret_cast<const AllergyIntoleranceSeverityCode*>(
               &_AllergyIntoleranceSeverityCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    233;

  void Swap(AllergyIntoleranceSeverityCode* other);
  friend void swap(AllergyIntoleranceSeverityCode& a, AllergyIntoleranceSeverityCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AllergyIntoleranceSeverityCode* New() const final {
    return CreateMaybeMessage<AllergyIntoleranceSeverityCode>(NULL);
  }

  AllergyIntoleranceSeverityCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AllergyIntoleranceSeverityCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AllergyIntoleranceSeverityCode& from);
  void MergeFrom(const AllergyIntoleranceSeverityCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AllergyIntoleranceSeverityCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AllergyIntoleranceSeverityCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    AllergyIntoleranceSeverityCode_Value_INVALID_UNINITIALIZED;
  static const Value MILD =
    AllergyIntoleranceSeverityCode_Value_MILD;
  static const Value MODERATE =
    AllergyIntoleranceSeverityCode_Value_MODERATE;
  static const Value SEVERE =
    AllergyIntoleranceSeverityCode_Value_SEVERE;
  static inline bool Value_IsValid(int value) {
    return AllergyIntoleranceSeverityCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    AllergyIntoleranceSeverityCode_Value_Value_MIN;
  static const Value Value_MAX =
    AllergyIntoleranceSeverityCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    AllergyIntoleranceSeverityCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return AllergyIntoleranceSeverityCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return AllergyIntoleranceSeverityCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return AllergyIntoleranceSeverityCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.AllergyIntoleranceSeverityCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::AllergyIntoleranceSeverityCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::AllergyIntoleranceSeverityCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.AllergyIntoleranceSeverityCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReasonMedicationGivenCodesCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ReasonMedicationGivenCodesCode) */ {
 public:
  ReasonMedicationGivenCodesCode();
  virtual ~ReasonMedicationGivenCodesCode();

  ReasonMedicationGivenCodesCode(const ReasonMedicationGivenCodesCode& from);

  inline ReasonMedicationGivenCodesCode& operator=(const ReasonMedicationGivenCodesCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReasonMedicationGivenCodesCode(ReasonMedicationGivenCodesCode&& from) noexcept
    : ReasonMedicationGivenCodesCode() {
    *this = ::std::move(from);
  }

  inline ReasonMedicationGivenCodesCode& operator=(ReasonMedicationGivenCodesCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReasonMedicationGivenCodesCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReasonMedicationGivenCodesCode* internal_default_instance() {
    return reinterpret_cast<const ReasonMedicationGivenCodesCode*>(
               &_ReasonMedicationGivenCodesCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    234;

  void Swap(ReasonMedicationGivenCodesCode* other);
  friend void swap(ReasonMedicationGivenCodesCode& a, ReasonMedicationGivenCodesCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReasonMedicationGivenCodesCode* New() const final {
    return CreateMaybeMessage<ReasonMedicationGivenCodesCode>(NULL);
  }

  ReasonMedicationGivenCodesCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReasonMedicationGivenCodesCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReasonMedicationGivenCodesCode& from);
  void MergeFrom(const ReasonMedicationGivenCodesCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReasonMedicationGivenCodesCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ReasonMedicationGivenCodesCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ReasonMedicationGivenCodesCode_Value_INVALID_UNINITIALIZED;
  static const Value A =
    ReasonMedicationGivenCodesCode_Value_A;
  static const Value B =
    ReasonMedicationGivenCodesCode_Value_B;
  static const Value C =
    ReasonMedicationGivenCodesCode_Value_C;
  static inline bool Value_IsValid(int value) {
    return ReasonMedicationGivenCodesCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ReasonMedicationGivenCodesCode_Value_Value_MIN;
  static const Value Value_MAX =
    ReasonMedicationGivenCodesCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ReasonMedicationGivenCodesCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ReasonMedicationGivenCodesCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ReasonMedicationGivenCodesCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ReasonMedicationGivenCodesCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ReasonMedicationGivenCodesCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ReasonMedicationGivenCodesCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ReasonMedicationGivenCodesCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ReasonMedicationGivenCodesCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReferenceHandlingPolicyCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ReferenceHandlingPolicyCode) */ {
 public:
  ReferenceHandlingPolicyCode();
  virtual ~ReferenceHandlingPolicyCode();

  ReferenceHandlingPolicyCode(const ReferenceHandlingPolicyCode& from);

  inline ReferenceHandlingPolicyCode& operator=(const ReferenceHandlingPolicyCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReferenceHandlingPolicyCode(ReferenceHandlingPolicyCode&& from) noexcept
    : ReferenceHandlingPolicyCode() {
    *this = ::std::move(from);
  }

  inline ReferenceHandlingPolicyCode& operator=(ReferenceHandlingPolicyCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReferenceHandlingPolicyCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReferenceHandlingPolicyCode* internal_default_instance() {
    return reinterpret_cast<const ReferenceHandlingPolicyCode*>(
               &_ReferenceHandlingPolicyCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    235;

  void Swap(ReferenceHandlingPolicyCode* other);
  friend void swap(ReferenceHandlingPolicyCode& a, ReferenceHandlingPolicyCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReferenceHandlingPolicyCode* New() const final {
    return CreateMaybeMessage<ReferenceHandlingPolicyCode>(NULL);
  }

  ReferenceHandlingPolicyCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReferenceHandlingPolicyCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReferenceHandlingPolicyCode& from);
  void MergeFrom(const ReferenceHandlingPolicyCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReferenceHandlingPolicyCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ReferenceHandlingPolicyCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ReferenceHandlingPolicyCode_Value_INVALID_UNINITIALIZED;
  static const Value LITERAL =
    ReferenceHandlingPolicyCode_Value_LITERAL;
  static const Value LOGICAL =
    ReferenceHandlingPolicyCode_Value_LOGICAL;
  static const Value RESOLVES =
    ReferenceHandlingPolicyCode_Value_RESOLVES;
  static const Value ENFORCED =
    ReferenceHandlingPolicyCode_Value_ENFORCED;
  static const Value LOCAL =
    ReferenceHandlingPolicyCode_Value_LOCAL;
  static inline bool Value_IsValid(int value) {
    return ReferenceHandlingPolicyCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ReferenceHandlingPolicyCode_Value_Value_MIN;
  static const Value Value_MAX =
    ReferenceHandlingPolicyCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ReferenceHandlingPolicyCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ReferenceHandlingPolicyCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ReferenceHandlingPolicyCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ReferenceHandlingPolicyCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ReferenceHandlingPolicyCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ReferenceHandlingPolicyCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ReferenceHandlingPolicyCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ReferenceHandlingPolicyCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RelatedArtifactTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.RelatedArtifactTypeCode) */ {
 public:
  RelatedArtifactTypeCode();
  virtual ~RelatedArtifactTypeCode();

  RelatedArtifactTypeCode(const RelatedArtifactTypeCode& from);

  inline RelatedArtifactTypeCode& operator=(const RelatedArtifactTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RelatedArtifactTypeCode(RelatedArtifactTypeCode&& from) noexcept
    : RelatedArtifactTypeCode() {
    *this = ::std::move(from);
  }

  inline RelatedArtifactTypeCode& operator=(RelatedArtifactTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RelatedArtifactTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RelatedArtifactTypeCode* internal_default_instance() {
    return reinterpret_cast<const RelatedArtifactTypeCode*>(
               &_RelatedArtifactTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    236;

  void Swap(RelatedArtifactTypeCode* other);
  friend void swap(RelatedArtifactTypeCode& a, RelatedArtifactTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RelatedArtifactTypeCode* New() const final {
    return CreateMaybeMessage<RelatedArtifactTypeCode>(NULL);
  }

  RelatedArtifactTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RelatedArtifactTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RelatedArtifactTypeCode& from);
  void MergeFrom(const RelatedArtifactTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RelatedArtifactTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef RelatedArtifactTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    RelatedArtifactTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value DOCUMENTATION =
    RelatedArtifactTypeCode_Value_DOCUMENTATION;
  static const Value JUSTIFICATION =
    RelatedArtifactTypeCode_Value_JUSTIFICATION;
  static const Value CITATION =
    RelatedArtifactTypeCode_Value_CITATION;
  static const Value PREDECESSOR =
    RelatedArtifactTypeCode_Value_PREDECESSOR;
  static const Value SUCCESSOR =
    RelatedArtifactTypeCode_Value_SUCCESSOR;
  static const Value DERIVED_FROM =
    RelatedArtifactTypeCode_Value_DERIVED_FROM;
  static const Value DEPENDS_ON =
    RelatedArtifactTypeCode_Value_DEPENDS_ON;
  static const Value COMPOSED_OF =
    RelatedArtifactTypeCode_Value_COMPOSED_OF;
  static inline bool Value_IsValid(int value) {
    return RelatedArtifactTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    RelatedArtifactTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    RelatedArtifactTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    RelatedArtifactTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return RelatedArtifactTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return RelatedArtifactTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return RelatedArtifactTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.RelatedArtifactTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::RelatedArtifactTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::RelatedArtifactTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.RelatedArtifactTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ObservationReferenceRangeMeaningCodesCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ObservationReferenceRangeMeaningCodesCode) */ {
 public:
  ObservationReferenceRangeMeaningCodesCode();
  virtual ~ObservationReferenceRangeMeaningCodesCode();

  ObservationReferenceRangeMeaningCodesCode(const ObservationReferenceRangeMeaningCodesCode& from);

  inline ObservationReferenceRangeMeaningCodesCode& operator=(const ObservationReferenceRangeMeaningCodesCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ObservationReferenceRangeMeaningCodesCode(ObservationReferenceRangeMeaningCodesCode&& from) noexcept
    : ObservationReferenceRangeMeaningCodesCode() {
    *this = ::std::move(from);
  }

  inline ObservationReferenceRangeMeaningCodesCode& operator=(ObservationReferenceRangeMeaningCodesCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObservationReferenceRangeMeaningCodesCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObservationReferenceRangeMeaningCodesCode* internal_default_instance() {
    return reinterpret_cast<const ObservationReferenceRangeMeaningCodesCode*>(
               &_ObservationReferenceRangeMeaningCodesCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    237;

  void Swap(ObservationReferenceRangeMeaningCodesCode* other);
  friend void swap(ObservationReferenceRangeMeaningCodesCode& a, ObservationReferenceRangeMeaningCodesCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ObservationReferenceRangeMeaningCodesCode* New() const final {
    return CreateMaybeMessage<ObservationReferenceRangeMeaningCodesCode>(NULL);
  }

  ObservationReferenceRangeMeaningCodesCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ObservationReferenceRangeMeaningCodesCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ObservationReferenceRangeMeaningCodesCode& from);
  void MergeFrom(const ObservationReferenceRangeMeaningCodesCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObservationReferenceRangeMeaningCodesCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ObservationReferenceRangeMeaningCodesCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ObservationReferenceRangeMeaningCodesCode_Value_INVALID_UNINITIALIZED;
  static const Value NORMAL =
    ObservationReferenceRangeMeaningCodesCode_Value_NORMAL;
  static const Value RECOMMENDED =
    ObservationReferenceRangeMeaningCodesCode_Value_RECOMMENDED;
  static const Value TREATMENT =
    ObservationReferenceRangeMeaningCodesCode_Value_TREATMENT;
  static const Value THERAPEUTIC =
    ObservationReferenceRangeMeaningCodesCode_Value_THERAPEUTIC;
  static const Value PRE =
    ObservationReferenceRangeMeaningCodesCode_Value_PRE;
  static const Value POST =
    ObservationReferenceRangeMeaningCodesCode_Value_POST;
  static const Value PRE_PUBERTY =
    ObservationReferenceRangeMeaningCodesCode_Value_PRE_PUBERTY;
  static const Value FOLLICULAR =
    ObservationReferenceRangeMeaningCodesCode_Value_FOLLICULAR;
  static const Value MIDCYCLE =
    ObservationReferenceRangeMeaningCodesCode_Value_MIDCYCLE;
  static const Value LUTEAL =
    ObservationReferenceRangeMeaningCodesCode_Value_LUTEAL;
  static const Value POSTMEOPAUSAL =
    ObservationReferenceRangeMeaningCodesCode_Value_POSTMEOPAUSAL;
  static inline bool Value_IsValid(int value) {
    return ObservationReferenceRangeMeaningCodesCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ObservationReferenceRangeMeaningCodesCode_Value_Value_MIN;
  static const Value Value_MAX =
    ObservationReferenceRangeMeaningCodesCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ObservationReferenceRangeMeaningCodesCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ObservationReferenceRangeMeaningCodesCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ObservationReferenceRangeMeaningCodesCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ObservationReferenceRangeMeaningCodesCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ObservationReferenceRangeMeaningCodesCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ObservationReferenceRangeMeaningCodesCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ObservationReferenceRangeMeaningCodesCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ObservationReferenceRangeMeaningCodesCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TestReportActionResultCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.TestReportActionResultCode) */ {
 public:
  TestReportActionResultCode();
  virtual ~TestReportActionResultCode();

  TestReportActionResultCode(const TestReportActionResultCode& from);

  inline TestReportActionResultCode& operator=(const TestReportActionResultCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TestReportActionResultCode(TestReportActionResultCode&& from) noexcept
    : TestReportActionResultCode() {
    *this = ::std::move(from);
  }

  inline TestReportActionResultCode& operator=(TestReportActionResultCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TestReportActionResultCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestReportActionResultCode* internal_default_instance() {
    return reinterpret_cast<const TestReportActionResultCode*>(
               &_TestReportActionResultCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    238;

  void Swap(TestReportActionResultCode* other);
  friend void swap(TestReportActionResultCode& a, TestReportActionResultCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TestReportActionResultCode* New() const final {
    return CreateMaybeMessage<TestReportActionResultCode>(NULL);
  }

  TestReportActionResultCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TestReportActionResultCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TestReportActionResultCode& from);
  void MergeFrom(const TestReportActionResultCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestReportActionResultCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef TestReportActionResultCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    TestReportActionResultCode_Value_INVALID_UNINITIALIZED;
  static const Value PASS =
    TestReportActionResultCode_Value_PASS;
  static const Value SKIP =
    TestReportActionResultCode_Value_SKIP;
  static const Value FAIL =
    TestReportActionResultCode_Value_FAIL;
  static const Value WARNING =
    TestReportActionResultCode_Value_WARNING;
  static const Value ERROR =
    TestReportActionResultCode_Value_ERROR;
  static inline bool Value_IsValid(int value) {
    return TestReportActionResultCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    TestReportActionResultCode_Value_Value_MIN;
  static const Value Value_MAX =
    TestReportActionResultCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    TestReportActionResultCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return TestReportActionResultCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return TestReportActionResultCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return TestReportActionResultCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.TestReportActionResultCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::TestReportActionResultCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::TestReportActionResultCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.TestReportActionResultCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TestReportParticipantTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.TestReportParticipantTypeCode) */ {
 public:
  TestReportParticipantTypeCode();
  virtual ~TestReportParticipantTypeCode();

  TestReportParticipantTypeCode(const TestReportParticipantTypeCode& from);

  inline TestReportParticipantTypeCode& operator=(const TestReportParticipantTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TestReportParticipantTypeCode(TestReportParticipantTypeCode&& from) noexcept
    : TestReportParticipantTypeCode() {
    *this = ::std::move(from);
  }

  inline TestReportParticipantTypeCode& operator=(TestReportParticipantTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TestReportParticipantTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestReportParticipantTypeCode* internal_default_instance() {
    return reinterpret_cast<const TestReportParticipantTypeCode*>(
               &_TestReportParticipantTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    239;

  void Swap(TestReportParticipantTypeCode* other);
  friend void swap(TestReportParticipantTypeCode& a, TestReportParticipantTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TestReportParticipantTypeCode* New() const final {
    return CreateMaybeMessage<TestReportParticipantTypeCode>(NULL);
  }

  TestReportParticipantTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TestReportParticipantTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TestReportParticipantTypeCode& from);
  void MergeFrom(const TestReportParticipantTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestReportParticipantTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef TestReportParticipantTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    TestReportParticipantTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value TEST_ENGINE =
    TestReportParticipantTypeCode_Value_TEST_ENGINE;
  static const Value CLIENT =
    TestReportParticipantTypeCode_Value_CLIENT;
  static const Value SERVER =
    TestReportParticipantTypeCode_Value_SERVER;
  static inline bool Value_IsValid(int value) {
    return TestReportParticipantTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    TestReportParticipantTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    TestReportParticipantTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    TestReportParticipantTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return TestReportParticipantTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return TestReportParticipantTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return TestReportParticipantTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.TestReportParticipantTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::TestReportParticipantTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::TestReportParticipantTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.TestReportParticipantTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TestReportResultCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.TestReportResultCode) */ {
 public:
  TestReportResultCode();
  virtual ~TestReportResultCode();

  TestReportResultCode(const TestReportResultCode& from);

  inline TestReportResultCode& operator=(const TestReportResultCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TestReportResultCode(TestReportResultCode&& from) noexcept
    : TestReportResultCode() {
    *this = ::std::move(from);
  }

  inline TestReportResultCode& operator=(TestReportResultCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TestReportResultCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestReportResultCode* internal_default_instance() {
    return reinterpret_cast<const TestReportResultCode*>(
               &_TestReportResultCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    240;

  void Swap(TestReportResultCode* other);
  friend void swap(TestReportResultCode& a, TestReportResultCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TestReportResultCode* New() const final {
    return CreateMaybeMessage<TestReportResultCode>(NULL);
  }

  TestReportResultCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TestReportResultCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TestReportResultCode& from);
  void MergeFrom(const TestReportResultCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestReportResultCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef TestReportResultCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    TestReportResultCode_Value_INVALID_UNINITIALIZED;
  static const Value PASS =
    TestReportResultCode_Value_PASS;
  static const Value FAIL =
    TestReportResultCode_Value_FAIL;
  static const Value PENDING =
    TestReportResultCode_Value_PENDING;
  static inline bool Value_IsValid(int value) {
    return TestReportResultCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    TestReportResultCode_Value_Value_MIN;
  static const Value Value_MAX =
    TestReportResultCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    TestReportResultCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return TestReportResultCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return TestReportResultCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return TestReportResultCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.TestReportResultCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::TestReportResultCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::TestReportResultCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.TestReportResultCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TestReportStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.TestReportStatusCode) */ {
 public:
  TestReportStatusCode();
  virtual ~TestReportStatusCode();

  TestReportStatusCode(const TestReportStatusCode& from);

  inline TestReportStatusCode& operator=(const TestReportStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TestReportStatusCode(TestReportStatusCode&& from) noexcept
    : TestReportStatusCode() {
    *this = ::std::move(from);
  }

  inline TestReportStatusCode& operator=(TestReportStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TestReportStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestReportStatusCode* internal_default_instance() {
    return reinterpret_cast<const TestReportStatusCode*>(
               &_TestReportStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    241;

  void Swap(TestReportStatusCode* other);
  friend void swap(TestReportStatusCode& a, TestReportStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TestReportStatusCode* New() const final {
    return CreateMaybeMessage<TestReportStatusCode>(NULL);
  }

  TestReportStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TestReportStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TestReportStatusCode& from);
  void MergeFrom(const TestReportStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestReportStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef TestReportStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    TestReportStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value COMPLETED =
    TestReportStatusCode_Value_COMPLETED;
  static const Value IN_PROGRESS =
    TestReportStatusCode_Value_IN_PROGRESS;
  static const Value WAITING =
    TestReportStatusCode_Value_WAITING;
  static const Value STOPPED =
    TestReportStatusCode_Value_STOPPED;
  static const Value ENTERED_IN_ERROR =
    TestReportStatusCode_Value_ENTERED_IN_ERROR;
  static inline bool Value_IsValid(int value) {
    return TestReportStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    TestReportStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    TestReportStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    TestReportStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return TestReportStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return TestReportStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return TestReportStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.TestReportStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::TestReportStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::TestReportStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.TestReportStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RepositoryTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.RepositoryTypeCode) */ {
 public:
  RepositoryTypeCode();
  virtual ~RepositoryTypeCode();

  RepositoryTypeCode(const RepositoryTypeCode& from);

  inline RepositoryTypeCode& operator=(const RepositoryTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RepositoryTypeCode(RepositoryTypeCode&& from) noexcept
    : RepositoryTypeCode() {
    *this = ::std::move(from);
  }

  inline RepositoryTypeCode& operator=(RepositoryTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RepositoryTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RepositoryTypeCode* internal_default_instance() {
    return reinterpret_cast<const RepositoryTypeCode*>(
               &_RepositoryTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    242;

  void Swap(RepositoryTypeCode* other);
  friend void swap(RepositoryTypeCode& a, RepositoryTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RepositoryTypeCode* New() const final {
    return CreateMaybeMessage<RepositoryTypeCode>(NULL);
  }

  RepositoryTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RepositoryTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RepositoryTypeCode& from);
  void MergeFrom(const RepositoryTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RepositoryTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef RepositoryTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    RepositoryTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value DIRECTLINK =
    RepositoryTypeCode_Value_DIRECTLINK;
  static const Value OPENAPI =
    RepositoryTypeCode_Value_OPENAPI;
  static const Value LOGIN =
    RepositoryTypeCode_Value_LOGIN;
  static const Value OAUTH =
    RepositoryTypeCode_Value_OAUTH;
  static const Value OTHER =
    RepositoryTypeCode_Value_OTHER;
  static inline bool Value_IsValid(int value) {
    return RepositoryTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    RepositoryTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    RepositoryTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    RepositoryTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return RepositoryTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return RepositoryTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return RepositoryTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.RepositoryTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::RepositoryTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::RepositoryTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.RepositoryTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RequestIntentCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.RequestIntentCode) */ {
 public:
  RequestIntentCode();
  virtual ~RequestIntentCode();

  RequestIntentCode(const RequestIntentCode& from);

  inline RequestIntentCode& operator=(const RequestIntentCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RequestIntentCode(RequestIntentCode&& from) noexcept
    : RequestIntentCode() {
    *this = ::std::move(from);
  }

  inline RequestIntentCode& operator=(RequestIntentCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestIntentCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RequestIntentCode* internal_default_instance() {
    return reinterpret_cast<const RequestIntentCode*>(
               &_RequestIntentCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    243;

  void Swap(RequestIntentCode* other);
  friend void swap(RequestIntentCode& a, RequestIntentCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RequestIntentCode* New() const final {
    return CreateMaybeMessage<RequestIntentCode>(NULL);
  }

  RequestIntentCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RequestIntentCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RequestIntentCode& from);
  void MergeFrom(const RequestIntentCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RequestIntentCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef RequestIntentCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    RequestIntentCode_Value_INVALID_UNINITIALIZED;
  static const Value PROPOSAL =
    RequestIntentCode_Value_PROPOSAL;
  static const Value PLAN =
    RequestIntentCode_Value_PLAN;
  static const Value ORDER =
    RequestIntentCode_Value_ORDER;
  static const Value ORIGINAL_ORDER =
    RequestIntentCode_Value_ORIGINAL_ORDER;
  static const Value REFLEX_ORDER =
    RequestIntentCode_Value_REFLEX_ORDER;
  static const Value FILLER_ORDER =
    RequestIntentCode_Value_FILLER_ORDER;
  static const Value INSTANCE_ORDER =
    RequestIntentCode_Value_INSTANCE_ORDER;
  static const Value OPTION =
    RequestIntentCode_Value_OPTION;
  static inline bool Value_IsValid(int value) {
    return RequestIntentCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    RequestIntentCode_Value_Value_MIN;
  static const Value Value_MAX =
    RequestIntentCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    RequestIntentCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return RequestIntentCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return RequestIntentCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return RequestIntentCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.RequestIntentCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::RequestIntentCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::RequestIntentCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.RequestIntentCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RequestPriorityCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.RequestPriorityCode) */ {
 public:
  RequestPriorityCode();
  virtual ~RequestPriorityCode();

  RequestPriorityCode(const RequestPriorityCode& from);

  inline RequestPriorityCode& operator=(const RequestPriorityCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RequestPriorityCode(RequestPriorityCode&& from) noexcept
    : RequestPriorityCode() {
    *this = ::std::move(from);
  }

  inline RequestPriorityCode& operator=(RequestPriorityCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestPriorityCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RequestPriorityCode* internal_default_instance() {
    return reinterpret_cast<const RequestPriorityCode*>(
               &_RequestPriorityCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    244;

  void Swap(RequestPriorityCode* other);
  friend void swap(RequestPriorityCode& a, RequestPriorityCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RequestPriorityCode* New() const final {
    return CreateMaybeMessage<RequestPriorityCode>(NULL);
  }

  RequestPriorityCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RequestPriorityCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RequestPriorityCode& from);
  void MergeFrom(const RequestPriorityCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RequestPriorityCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef RequestPriorityCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    RequestPriorityCode_Value_INVALID_UNINITIALIZED;
  static const Value ROUTINE =
    RequestPriorityCode_Value_ROUTINE;
  static const Value URGENT =
    RequestPriorityCode_Value_URGENT;
  static const Value ASAP =
    RequestPriorityCode_Value_ASAP;
  static const Value STAT =
    RequestPriorityCode_Value_STAT;
  static inline bool Value_IsValid(int value) {
    return RequestPriorityCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    RequestPriorityCode_Value_Value_MIN;
  static const Value Value_MAX =
    RequestPriorityCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    RequestPriorityCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return RequestPriorityCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return RequestPriorityCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return RequestPriorityCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.RequestPriorityCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::RequestPriorityCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::RequestPriorityCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.RequestPriorityCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RequestStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.RequestStatusCode) */ {
 public:
  RequestStatusCode();
  virtual ~RequestStatusCode();

  RequestStatusCode(const RequestStatusCode& from);

  inline RequestStatusCode& operator=(const RequestStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RequestStatusCode(RequestStatusCode&& from) noexcept
    : RequestStatusCode() {
    *this = ::std::move(from);
  }

  inline RequestStatusCode& operator=(RequestStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RequestStatusCode* internal_default_instance() {
    return reinterpret_cast<const RequestStatusCode*>(
               &_RequestStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    245;

  void Swap(RequestStatusCode* other);
  friend void swap(RequestStatusCode& a, RequestStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RequestStatusCode* New() const final {
    return CreateMaybeMessage<RequestStatusCode>(NULL);
  }

  RequestStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RequestStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RequestStatusCode& from);
  void MergeFrom(const RequestStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RequestStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef RequestStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    RequestStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value DRAFT =
    RequestStatusCode_Value_DRAFT;
  static const Value ACTIVE =
    RequestStatusCode_Value_ACTIVE;
  static const Value SUSPENDED =
    RequestStatusCode_Value_SUSPENDED;
  static const Value CANCELLED =
    RequestStatusCode_Value_CANCELLED;
  static const Value COMPLETED =
    RequestStatusCode_Value_COMPLETED;
  static const Value ENTERED_IN_ERROR =
    RequestStatusCode_Value_ENTERED_IN_ERROR;
  static const Value UNKNOWN =
    RequestStatusCode_Value_UNKNOWN;
  static inline bool Value_IsValid(int value) {
    return RequestStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    RequestStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    RequestStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    RequestStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return RequestStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return RequestStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return RequestStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.RequestStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::RequestStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::RequestStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.RequestStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResearchStudyStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ResearchStudyStatusCode) */ {
 public:
  ResearchStudyStatusCode();
  virtual ~ResearchStudyStatusCode();

  ResearchStudyStatusCode(const ResearchStudyStatusCode& from);

  inline ResearchStudyStatusCode& operator=(const ResearchStudyStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResearchStudyStatusCode(ResearchStudyStatusCode&& from) noexcept
    : ResearchStudyStatusCode() {
    *this = ::std::move(from);
  }

  inline ResearchStudyStatusCode& operator=(ResearchStudyStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResearchStudyStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResearchStudyStatusCode* internal_default_instance() {
    return reinterpret_cast<const ResearchStudyStatusCode*>(
               &_ResearchStudyStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    246;

  void Swap(ResearchStudyStatusCode* other);
  friend void swap(ResearchStudyStatusCode& a, ResearchStudyStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResearchStudyStatusCode* New() const final {
    return CreateMaybeMessage<ResearchStudyStatusCode>(NULL);
  }

  ResearchStudyStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResearchStudyStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResearchStudyStatusCode& from);
  void MergeFrom(const ResearchStudyStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResearchStudyStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ResearchStudyStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ResearchStudyStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value DRAFT =
    ResearchStudyStatusCode_Value_DRAFT;
  static const Value IN_PROGRESS =
    ResearchStudyStatusCode_Value_IN_PROGRESS;
  static const Value SUSPENDED =
    ResearchStudyStatusCode_Value_SUSPENDED;
  static const Value STOPPED =
    ResearchStudyStatusCode_Value_STOPPED;
  static const Value COMPLETED =
    ResearchStudyStatusCode_Value_COMPLETED;
  static const Value ENTERED_IN_ERROR =
    ResearchStudyStatusCode_Value_ENTERED_IN_ERROR;
  static inline bool Value_IsValid(int value) {
    return ResearchStudyStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ResearchStudyStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    ResearchStudyStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ResearchStudyStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ResearchStudyStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ResearchStudyStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ResearchStudyStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ResearchStudyStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ResearchStudyStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ResearchStudyStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ResearchStudyStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResearchSubjectStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ResearchSubjectStatusCode) */ {
 public:
  ResearchSubjectStatusCode();
  virtual ~ResearchSubjectStatusCode();

  ResearchSubjectStatusCode(const ResearchSubjectStatusCode& from);

  inline ResearchSubjectStatusCode& operator=(const ResearchSubjectStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResearchSubjectStatusCode(ResearchSubjectStatusCode&& from) noexcept
    : ResearchSubjectStatusCode() {
    *this = ::std::move(from);
  }

  inline ResearchSubjectStatusCode& operator=(ResearchSubjectStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResearchSubjectStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResearchSubjectStatusCode* internal_default_instance() {
    return reinterpret_cast<const ResearchSubjectStatusCode*>(
               &_ResearchSubjectStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    247;

  void Swap(ResearchSubjectStatusCode* other);
  friend void swap(ResearchSubjectStatusCode& a, ResearchSubjectStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResearchSubjectStatusCode* New() const final {
    return CreateMaybeMessage<ResearchSubjectStatusCode>(NULL);
  }

  ResearchSubjectStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResearchSubjectStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResearchSubjectStatusCode& from);
  void MergeFrom(const ResearchSubjectStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResearchSubjectStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ResearchSubjectStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ResearchSubjectStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value CANDIDATE =
    ResearchSubjectStatusCode_Value_CANDIDATE;
  static const Value ENROLLED =
    ResearchSubjectStatusCode_Value_ENROLLED;
  static const Value ACTIVE =
    ResearchSubjectStatusCode_Value_ACTIVE;
  static const Value SUSPENDED =
    ResearchSubjectStatusCode_Value_SUSPENDED;
  static const Value WITHDRAWN =
    ResearchSubjectStatusCode_Value_WITHDRAWN;
  static const Value COMPLETED =
    ResearchSubjectStatusCode_Value_COMPLETED;
  static inline bool Value_IsValid(int value) {
    return ResearchSubjectStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ResearchSubjectStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    ResearchSubjectStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ResearchSubjectStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ResearchSubjectStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ResearchSubjectStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ResearchSubjectStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ResearchSubjectStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ResearchSubjectStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ResearchSubjectStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ResearchSubjectStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PayeeResourceTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.PayeeResourceTypeCode) */ {
 public:
  PayeeResourceTypeCode();
  virtual ~PayeeResourceTypeCode();

  PayeeResourceTypeCode(const PayeeResourceTypeCode& from);

  inline PayeeResourceTypeCode& operator=(const PayeeResourceTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PayeeResourceTypeCode(PayeeResourceTypeCode&& from) noexcept
    : PayeeResourceTypeCode() {
    *this = ::std::move(from);
  }

  inline PayeeResourceTypeCode& operator=(PayeeResourceTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PayeeResourceTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PayeeResourceTypeCode* internal_default_instance() {
    return reinterpret_cast<const PayeeResourceTypeCode*>(
               &_PayeeResourceTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    248;

  void Swap(PayeeResourceTypeCode* other);
  friend void swap(PayeeResourceTypeCode& a, PayeeResourceTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PayeeResourceTypeCode* New() const final {
    return CreateMaybeMessage<PayeeResourceTypeCode>(NULL);
  }

  PayeeResourceTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PayeeResourceTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PayeeResourceTypeCode& from);
  void MergeFrom(const PayeeResourceTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PayeeResourceTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PayeeResourceTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    PayeeResourceTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value ORGANIZATION =
    PayeeResourceTypeCode_Value_ORGANIZATION;
  static const Value PATIENT =
    PayeeResourceTypeCode_Value_PATIENT;
  static const Value PRACTITIONER =
    PayeeResourceTypeCode_Value_PRACTITIONER;
  static const Value RELATEDPERSON =
    PayeeResourceTypeCode_Value_RELATEDPERSON;
  static inline bool Value_IsValid(int value) {
    return PayeeResourceTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    PayeeResourceTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    PayeeResourceTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    PayeeResourceTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return PayeeResourceTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return PayeeResourceTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return PayeeResourceTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.PayeeResourceTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::PayeeResourceTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::PayeeResourceTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.PayeeResourceTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResourceTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ResourceTypeCode) */ {
 public:
  ResourceTypeCode();
  virtual ~ResourceTypeCode();

  ResourceTypeCode(const ResourceTypeCode& from);

  inline ResourceTypeCode& operator=(const ResourceTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResourceTypeCode(ResourceTypeCode&& from) noexcept
    : ResourceTypeCode() {
    *this = ::std::move(from);
  }

  inline ResourceTypeCode& operator=(ResourceTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResourceTypeCode* internal_default_instance() {
    return reinterpret_cast<const ResourceTypeCode*>(
               &_ResourceTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    249;

  void Swap(ResourceTypeCode* other);
  friend void swap(ResourceTypeCode& a, ResourceTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResourceTypeCode* New() const final {
    return CreateMaybeMessage<ResourceTypeCode>(NULL);
  }

  ResourceTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResourceTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResourceTypeCode& from);
  void MergeFrom(const ResourceTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResourceTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ResourceTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ResourceTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value ACCOUNT =
    ResourceTypeCode_Value_ACCOUNT;
  static const Value ACTIVITY_DEFINITION =
    ResourceTypeCode_Value_ACTIVITY_DEFINITION;
  static const Value ADVERSE_EVENT =
    ResourceTypeCode_Value_ADVERSE_EVENT;
  static const Value ALLERGY_INTOLERANCE =
    ResourceTypeCode_Value_ALLERGY_INTOLERANCE;
  static const Value APPOINTMENT =
    ResourceTypeCode_Value_APPOINTMENT;
  static const Value APPOINTMENT_RESPONSE =
    ResourceTypeCode_Value_APPOINTMENT_RESPONSE;
  static const Value AUDIT_EVENT =
    ResourceTypeCode_Value_AUDIT_EVENT;
  static const Value BASIC =
    ResourceTypeCode_Value_BASIC;
  static const Value BINARY =
    ResourceTypeCode_Value_BINARY;
  static const Value BODY_SITE =
    ResourceTypeCode_Value_BODY_SITE;
  static const Value BUNDLE =
    ResourceTypeCode_Value_BUNDLE;
  static const Value CAPABILITY_STATEMENT =
    ResourceTypeCode_Value_CAPABILITY_STATEMENT;
  static const Value CARE_PLAN =
    ResourceTypeCode_Value_CARE_PLAN;
  static const Value CARE_TEAM =
    ResourceTypeCode_Value_CARE_TEAM;
  static const Value CHARGE_ITEM =
    ResourceTypeCode_Value_CHARGE_ITEM;
  static const Value CLAIM =
    ResourceTypeCode_Value_CLAIM;
  static const Value CLAIM_RESPONSE =
    ResourceTypeCode_Value_CLAIM_RESPONSE;
  static const Value CLINICAL_IMPRESSION =
    ResourceTypeCode_Value_CLINICAL_IMPRESSION;
  static const Value CODE_SYSTEM =
    ResourceTypeCode_Value_CODE_SYSTEM;
  static const Value COMMUNICATION =
    ResourceTypeCode_Value_COMMUNICATION;
  static const Value COMMUNICATION_REQUEST =
    ResourceTypeCode_Value_COMMUNICATION_REQUEST;
  static const Value COMPARTMENT_DEFINITION =
    ResourceTypeCode_Value_COMPARTMENT_DEFINITION;
  static const Value COMPOSITION =
    ResourceTypeCode_Value_COMPOSITION;
  static const Value CONCEPT_MAP =
    ResourceTypeCode_Value_CONCEPT_MAP;
  static const Value CONDITION =
    ResourceTypeCode_Value_CONDITION;
  static const Value CONSENT =
    ResourceTypeCode_Value_CONSENT;
  static const Value CONTRACT =
    ResourceTypeCode_Value_CONTRACT;
  static const Value COVERAGE =
    ResourceTypeCode_Value_COVERAGE;
  static const Value DATA_ELEMENT =
    ResourceTypeCode_Value_DATA_ELEMENT;
  static const Value DETECTED_ISSUE =
    ResourceTypeCode_Value_DETECTED_ISSUE;
  static const Value DEVICE =
    ResourceTypeCode_Value_DEVICE;
  static const Value DEVICE_COMPONENT =
    ResourceTypeCode_Value_DEVICE_COMPONENT;
  static const Value DEVICE_METRIC =
    ResourceTypeCode_Value_DEVICE_METRIC;
  static const Value DEVICE_REQUEST =
    ResourceTypeCode_Value_DEVICE_REQUEST;
  static const Value DEVICE_USE_STATEMENT =
    ResourceTypeCode_Value_DEVICE_USE_STATEMENT;
  static const Value DIAGNOSTIC_REPORT =
    ResourceTypeCode_Value_DIAGNOSTIC_REPORT;
  static const Value DOCUMENT_MANIFEST =
    ResourceTypeCode_Value_DOCUMENT_MANIFEST;
  static const Value DOCUMENT_REFERENCE =
    ResourceTypeCode_Value_DOCUMENT_REFERENCE;
  static const Value DOMAIN_RESOURCE =
    ResourceTypeCode_Value_DOMAIN_RESOURCE;
  static const Value ELIGIBILITY_REQUEST =
    ResourceTypeCode_Value_ELIGIBILITY_REQUEST;
  static const Value ELIGIBILITY_RESPONSE =
    ResourceTypeCode_Value_ELIGIBILITY_RESPONSE;
  static const Value ENCOUNTER =
    ResourceTypeCode_Value_ENCOUNTER;
  static const Value ENDPOINT =
    ResourceTypeCode_Value_ENDPOINT;
  static const Value ENROLLMENT_REQUEST =
    ResourceTypeCode_Value_ENROLLMENT_REQUEST;
  static const Value ENROLLMENT_RESPONSE =
    ResourceTypeCode_Value_ENROLLMENT_RESPONSE;
  static const Value EPISODE_OF_CARE =
    ResourceTypeCode_Value_EPISODE_OF_CARE;
  static const Value EXPANSION_PROFILE =
    ResourceTypeCode_Value_EXPANSION_PROFILE;
  static const Value EXPLANATION_OF_BENEFIT =
    ResourceTypeCode_Value_EXPLANATION_OF_BENEFIT;
  static const Value FAMILY_MEMBER_HISTORY =
    ResourceTypeCode_Value_FAMILY_MEMBER_HISTORY;
  static const Value FLAG =
    ResourceTypeCode_Value_FLAG;
  static const Value GOAL =
    ResourceTypeCode_Value_GOAL;
  static const Value GRAPH_DEFINITION =
    ResourceTypeCode_Value_GRAPH_DEFINITION;
  static const Value GROUP =
    ResourceTypeCode_Value_GROUP;
  static const Value GUIDANCE_RESPONSE =
    ResourceTypeCode_Value_GUIDANCE_RESPONSE;
  static const Value HEALTHCARE_SERVICE =
    ResourceTypeCode_Value_HEALTHCARE_SERVICE;
  static const Value IMAGING_MANIFEST =
    ResourceTypeCode_Value_IMAGING_MANIFEST;
  static const Value IMAGING_STUDY =
    ResourceTypeCode_Value_IMAGING_STUDY;
  static const Value IMMUNIZATION =
    ResourceTypeCode_Value_IMMUNIZATION;
  static const Value IMMUNIZATION_RECOMMENDATION =
    ResourceTypeCode_Value_IMMUNIZATION_RECOMMENDATION;
  static const Value IMPLEMENTATION_GUIDE =
    ResourceTypeCode_Value_IMPLEMENTATION_GUIDE;
  static const Value LIBRARY =
    ResourceTypeCode_Value_LIBRARY;
  static const Value LINKAGE =
    ResourceTypeCode_Value_LINKAGE;
  static const Value LIST =
    ResourceTypeCode_Value_LIST;
  static const Value LOCATION =
    ResourceTypeCode_Value_LOCATION;
  static const Value MEASURE =
    ResourceTypeCode_Value_MEASURE;
  static const Value MEASURE_REPORT =
    ResourceTypeCode_Value_MEASURE_REPORT;
  static const Value MEDIA =
    ResourceTypeCode_Value_MEDIA;
  static const Value MEDICATION =
    ResourceTypeCode_Value_MEDICATION;
  static const Value MEDICATION_ADMINISTRATION =
    ResourceTypeCode_Value_MEDICATION_ADMINISTRATION;
  static const Value MEDICATION_DISPENSE =
    ResourceTypeCode_Value_MEDICATION_DISPENSE;
  static const Value MEDICATION_REQUEST =
    ResourceTypeCode_Value_MEDICATION_REQUEST;
  static const Value MEDICATION_STATEMENT =
    ResourceTypeCode_Value_MEDICATION_STATEMENT;
  static const Value MESSAGE_DEFINITION =
    ResourceTypeCode_Value_MESSAGE_DEFINITION;
  static const Value MESSAGE_HEADER =
    ResourceTypeCode_Value_MESSAGE_HEADER;
  static const Value NAMING_SYSTEM =
    ResourceTypeCode_Value_NAMING_SYSTEM;
  static const Value NUTRITION_ORDER =
    ResourceTypeCode_Value_NUTRITION_ORDER;
  static const Value OBSERVATION =
    ResourceTypeCode_Value_OBSERVATION;
  static const Value OPERATION_DEFINITION =
    ResourceTypeCode_Value_OPERATION_DEFINITION;
  static const Value OPERATION_OUTCOME =
    ResourceTypeCode_Value_OPERATION_OUTCOME;
  static const Value ORGANIZATION =
    ResourceTypeCode_Value_ORGANIZATION;
  static const Value PARAMETERS =
    ResourceTypeCode_Value_PARAMETERS;
  static const Value PATIENT =
    ResourceTypeCode_Value_PATIENT;
  static const Value PAYMENT_NOTICE =
    ResourceTypeCode_Value_PAYMENT_NOTICE;
  static const Value PAYMENT_RECONCILIATION =
    ResourceTypeCode_Value_PAYMENT_RECONCILIATION;
  static const Value PERSON =
    ResourceTypeCode_Value_PERSON;
  static const Value PLAN_DEFINITION =
    ResourceTypeCode_Value_PLAN_DEFINITION;
  static const Value PRACTITIONER =
    ResourceTypeCode_Value_PRACTITIONER;
  static const Value PRACTITIONER_ROLE =
    ResourceTypeCode_Value_PRACTITIONER_ROLE;
  static const Value PROCEDURE =
    ResourceTypeCode_Value_PROCEDURE;
  static const Value PROCEDURE_REQUEST =
    ResourceTypeCode_Value_PROCEDURE_REQUEST;
  static const Value PROCESS_REQUEST =
    ResourceTypeCode_Value_PROCESS_REQUEST;
  static const Value PROCESS_RESPONSE =
    ResourceTypeCode_Value_PROCESS_RESPONSE;
  static const Value PROVENANCE =
    ResourceTypeCode_Value_PROVENANCE;
  static const Value QUESTIONNAIRE =
    ResourceTypeCode_Value_QUESTIONNAIRE;
  static const Value QUESTIONNAIRE_RESPONSE =
    ResourceTypeCode_Value_QUESTIONNAIRE_RESPONSE;
  static const Value REFERRAL_REQUEST =
    ResourceTypeCode_Value_REFERRAL_REQUEST;
  static const Value RELATED_PERSON =
    ResourceTypeCode_Value_RELATED_PERSON;
  static const Value REQUEST_GROUP =
    ResourceTypeCode_Value_REQUEST_GROUP;
  static const Value RESEARCH_STUDY =
    ResourceTypeCode_Value_RESEARCH_STUDY;
  static const Value RESEARCH_SUBJECT =
    ResourceTypeCode_Value_RESEARCH_SUBJECT;
  static const Value RESOURCE =
    ResourceTypeCode_Value_RESOURCE;
  static const Value RISK_ASSESSMENT =
    ResourceTypeCode_Value_RISK_ASSESSMENT;
  static const Value SCHEDULE =
    ResourceTypeCode_Value_SCHEDULE;
  static const Value SEARCH_PARAMETER =
    ResourceTypeCode_Value_SEARCH_PARAMETER;
  static const Value SEQUENCE =
    ResourceTypeCode_Value_SEQUENCE;
  static const Value SERVICE_DEFINITION =
    ResourceTypeCode_Value_SERVICE_DEFINITION;
  static const Value SLOT =
    ResourceTypeCode_Value_SLOT;
  static const Value SPECIMEN =
    ResourceTypeCode_Value_SPECIMEN;
  static const Value STRUCTURE_DEFINITION =
    ResourceTypeCode_Value_STRUCTURE_DEFINITION;
  static const Value STRUCTURE_MAP =
    ResourceTypeCode_Value_STRUCTURE_MAP;
  static const Value SUBSCRIPTION =
    ResourceTypeCode_Value_SUBSCRIPTION;
  static const Value SUBSTANCE =
    ResourceTypeCode_Value_SUBSTANCE;
  static const Value SUPPLY_DELIVERY =
    ResourceTypeCode_Value_SUPPLY_DELIVERY;
  static const Value SUPPLY_REQUEST =
    ResourceTypeCode_Value_SUPPLY_REQUEST;
  static const Value TASK =
    ResourceTypeCode_Value_TASK;
  static const Value TEST_REPORT =
    ResourceTypeCode_Value_TEST_REPORT;
  static const Value TEST_SCRIPT =
    ResourceTypeCode_Value_TEST_SCRIPT;
  static const Value VALUE_SET =
    ResourceTypeCode_Value_VALUE_SET;
  static const Value VISION_PRESCRIPTION =
    ResourceTypeCode_Value_VISION_PRESCRIPTION;
  static inline bool Value_IsValid(int value) {
    return ResourceTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ResourceTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    ResourceTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ResourceTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ResourceTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ResourceTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ResourceTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ResourceTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ResourceTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ResourceTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ResourceTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResourceValidationModeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ResourceValidationModeCode) */ {
 public:
  ResourceValidationModeCode();
  virtual ~ResourceValidationModeCode();

  ResourceValidationModeCode(const ResourceValidationModeCode& from);

  inline ResourceValidationModeCode& operator=(const ResourceValidationModeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResourceValidationModeCode(ResourceValidationModeCode&& from) noexcept
    : ResourceValidationModeCode() {
    *this = ::std::move(from);
  }

  inline ResourceValidationModeCode& operator=(ResourceValidationModeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceValidationModeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResourceValidationModeCode* internal_default_instance() {
    return reinterpret_cast<const ResourceValidationModeCode*>(
               &_ResourceValidationModeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    250;

  void Swap(ResourceValidationModeCode* other);
  friend void swap(ResourceValidationModeCode& a, ResourceValidationModeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResourceValidationModeCode* New() const final {
    return CreateMaybeMessage<ResourceValidationModeCode>(NULL);
  }

  ResourceValidationModeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResourceValidationModeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResourceValidationModeCode& from);
  void MergeFrom(const ResourceValidationModeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResourceValidationModeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ResourceValidationModeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ResourceValidationModeCode_Value_INVALID_UNINITIALIZED;
  static const Value CREATE =
    ResourceValidationModeCode_Value_CREATE;
  static const Value UPDATE =
    ResourceValidationModeCode_Value_UPDATE;
  static const Value DELETE =
    ResourceValidationModeCode_Value_DELETE;
  static inline bool Value_IsValid(int value) {
    return ResourceValidationModeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ResourceValidationModeCode_Value_Value_MIN;
  static const Value Value_MAX =
    ResourceValidationModeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ResourceValidationModeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ResourceValidationModeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ResourceValidationModeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ResourceValidationModeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ResourceValidationModeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ResourceValidationModeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ResourceValidationModeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ResourceValidationModeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResponseTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ResponseTypeCode) */ {
 public:
  ResponseTypeCode();
  virtual ~ResponseTypeCode();

  ResponseTypeCode(const ResponseTypeCode& from);

  inline ResponseTypeCode& operator=(const ResponseTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResponseTypeCode(ResponseTypeCode&& from) noexcept
    : ResponseTypeCode() {
    *this = ::std::move(from);
  }

  inline ResponseTypeCode& operator=(ResponseTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResponseTypeCode* internal_default_instance() {
    return reinterpret_cast<const ResponseTypeCode*>(
               &_ResponseTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    251;

  void Swap(ResponseTypeCode* other);
  friend void swap(ResponseTypeCode& a, ResponseTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResponseTypeCode* New() const final {
    return CreateMaybeMessage<ResponseTypeCode>(NULL);
  }

  ResponseTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResponseTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResponseTypeCode& from);
  void MergeFrom(const ResponseTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResponseTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ResponseTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ResponseTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value OK =
    ResponseTypeCode_Value_OK;
  static const Value TRANSIENT_ERROR =
    ResponseTypeCode_Value_TRANSIENT_ERROR;
  static const Value FATAL_ERROR =
    ResponseTypeCode_Value_FATAL_ERROR;
  static inline bool Value_IsValid(int value) {
    return ResponseTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ResponseTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    ResponseTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ResponseTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ResponseTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ResponseTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ResponseTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ResponseTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ResponseTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ResponseTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ResponseTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RestfulCapabilityModeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.RestfulCapabilityModeCode) */ {
 public:
  RestfulCapabilityModeCode();
  virtual ~RestfulCapabilityModeCode();

  RestfulCapabilityModeCode(const RestfulCapabilityModeCode& from);

  inline RestfulCapabilityModeCode& operator=(const RestfulCapabilityModeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RestfulCapabilityModeCode(RestfulCapabilityModeCode&& from) noexcept
    : RestfulCapabilityModeCode() {
    *this = ::std::move(from);
  }

  inline RestfulCapabilityModeCode& operator=(RestfulCapabilityModeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RestfulCapabilityModeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RestfulCapabilityModeCode* internal_default_instance() {
    return reinterpret_cast<const RestfulCapabilityModeCode*>(
               &_RestfulCapabilityModeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    252;

  void Swap(RestfulCapabilityModeCode* other);
  friend void swap(RestfulCapabilityModeCode& a, RestfulCapabilityModeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RestfulCapabilityModeCode* New() const final {
    return CreateMaybeMessage<RestfulCapabilityModeCode>(NULL);
  }

  RestfulCapabilityModeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RestfulCapabilityModeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RestfulCapabilityModeCode& from);
  void MergeFrom(const RestfulCapabilityModeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RestfulCapabilityModeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef RestfulCapabilityModeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    RestfulCapabilityModeCode_Value_INVALID_UNINITIALIZED;
  static const Value CLIENT =
    RestfulCapabilityModeCode_Value_CLIENT;
  static const Value SERVER =
    RestfulCapabilityModeCode_Value_SERVER;
  static inline bool Value_IsValid(int value) {
    return RestfulCapabilityModeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    RestfulCapabilityModeCode_Value_Value_MIN;
  static const Value Value_MAX =
    RestfulCapabilityModeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    RestfulCapabilityModeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return RestfulCapabilityModeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return RestfulCapabilityModeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return RestfulCapabilityModeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.RestfulCapabilityModeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::RestfulCapabilityModeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::RestfulCapabilityModeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.RestfulCapabilityModeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RestfulSecurityServiceCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.RestfulSecurityServiceCode) */ {
 public:
  RestfulSecurityServiceCode();
  virtual ~RestfulSecurityServiceCode();

  RestfulSecurityServiceCode(const RestfulSecurityServiceCode& from);

  inline RestfulSecurityServiceCode& operator=(const RestfulSecurityServiceCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RestfulSecurityServiceCode(RestfulSecurityServiceCode&& from) noexcept
    : RestfulSecurityServiceCode() {
    *this = ::std::move(from);
  }

  inline RestfulSecurityServiceCode& operator=(RestfulSecurityServiceCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RestfulSecurityServiceCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RestfulSecurityServiceCode* internal_default_instance() {
    return reinterpret_cast<const RestfulSecurityServiceCode*>(
               &_RestfulSecurityServiceCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    253;

  void Swap(RestfulSecurityServiceCode* other);
  friend void swap(RestfulSecurityServiceCode& a, RestfulSecurityServiceCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RestfulSecurityServiceCode* New() const final {
    return CreateMaybeMessage<RestfulSecurityServiceCode>(NULL);
  }

  RestfulSecurityServiceCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RestfulSecurityServiceCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RestfulSecurityServiceCode& from);
  void MergeFrom(const RestfulSecurityServiceCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RestfulSecurityServiceCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef RestfulSecurityServiceCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    RestfulSecurityServiceCode_Value_INVALID_UNINITIALIZED;
  static const Value OAUTH =
    RestfulSecurityServiceCode_Value_OAUTH;
  static const Value SMART_ON_FHIR =
    RestfulSecurityServiceCode_Value_SMART_ON_FHIR;
  static const Value NTLM =
    RestfulSecurityServiceCode_Value_NTLM;
  static const Value BASIC =
    RestfulSecurityServiceCode_Value_BASIC;
  static const Value KERBEROS =
    RestfulSecurityServiceCode_Value_KERBEROS;
  static const Value CERTIFICATES =
    RestfulSecurityServiceCode_Value_CERTIFICATES;
  static inline bool Value_IsValid(int value) {
    return RestfulSecurityServiceCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    RestfulSecurityServiceCode_Value_Value_MIN;
  static const Value Value_MAX =
    RestfulSecurityServiceCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    RestfulSecurityServiceCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return RestfulSecurityServiceCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return RestfulSecurityServiceCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return RestfulSecurityServiceCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.RestfulSecurityServiceCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::RestfulSecurityServiceCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::RestfulSecurityServiceCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.RestfulSecurityServiceCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RiskProbabilityCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.RiskProbabilityCode) */ {
 public:
  RiskProbabilityCode();
  virtual ~RiskProbabilityCode();

  RiskProbabilityCode(const RiskProbabilityCode& from);

  inline RiskProbabilityCode& operator=(const RiskProbabilityCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RiskProbabilityCode(RiskProbabilityCode&& from) noexcept
    : RiskProbabilityCode() {
    *this = ::std::move(from);
  }

  inline RiskProbabilityCode& operator=(RiskProbabilityCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RiskProbabilityCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RiskProbabilityCode* internal_default_instance() {
    return reinterpret_cast<const RiskProbabilityCode*>(
               &_RiskProbabilityCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    254;

  void Swap(RiskProbabilityCode* other);
  friend void swap(RiskProbabilityCode& a, RiskProbabilityCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RiskProbabilityCode* New() const final {
    return CreateMaybeMessage<RiskProbabilityCode>(NULL);
  }

  RiskProbabilityCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RiskProbabilityCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RiskProbabilityCode& from);
  void MergeFrom(const RiskProbabilityCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RiskProbabilityCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef RiskProbabilityCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    RiskProbabilityCode_Value_INVALID_UNINITIALIZED;
  static const Value NEGLIGIBLE =
    RiskProbabilityCode_Value_NEGLIGIBLE;
  static const Value LOW =
    RiskProbabilityCode_Value_LOW;
  static const Value MODERATE =
    RiskProbabilityCode_Value_MODERATE;
  static const Value HIGH =
    RiskProbabilityCode_Value_HIGH;
  static const Value CERTAIN =
    RiskProbabilityCode_Value_CERTAIN;
  static inline bool Value_IsValid(int value) {
    return RiskProbabilityCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    RiskProbabilityCode_Value_Value_MIN;
  static const Value Value_MAX =
    RiskProbabilityCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    RiskProbabilityCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return RiskProbabilityCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return RiskProbabilityCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return RiskProbabilityCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.RiskProbabilityCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::RiskProbabilityCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::RiskProbabilityCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.RiskProbabilityCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SearchComparatorCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.SearchComparatorCode) */ {
 public:
  SearchComparatorCode();
  virtual ~SearchComparatorCode();

  SearchComparatorCode(const SearchComparatorCode& from);

  inline SearchComparatorCode& operator=(const SearchComparatorCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchComparatorCode(SearchComparatorCode&& from) noexcept
    : SearchComparatorCode() {
    *this = ::std::move(from);
  }

  inline SearchComparatorCode& operator=(SearchComparatorCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchComparatorCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SearchComparatorCode* internal_default_instance() {
    return reinterpret_cast<const SearchComparatorCode*>(
               &_SearchComparatorCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    255;

  void Swap(SearchComparatorCode* other);
  friend void swap(SearchComparatorCode& a, SearchComparatorCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchComparatorCode* New() const final {
    return CreateMaybeMessage<SearchComparatorCode>(NULL);
  }

  SearchComparatorCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SearchComparatorCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SearchComparatorCode& from);
  void MergeFrom(const SearchComparatorCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SearchComparatorCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SearchComparatorCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    SearchComparatorCode_Value_INVALID_UNINITIALIZED;
  static const Value EQ =
    SearchComparatorCode_Value_EQ;
  static const Value NE =
    SearchComparatorCode_Value_NE;
  static const Value GT =
    SearchComparatorCode_Value_GT;
  static const Value LT =
    SearchComparatorCode_Value_LT;
  static const Value GE =
    SearchComparatorCode_Value_GE;
  static const Value LE =
    SearchComparatorCode_Value_LE;
  static const Value SA =
    SearchComparatorCode_Value_SA;
  static const Value EB =
    SearchComparatorCode_Value_EB;
  static const Value AP =
    SearchComparatorCode_Value_AP;
  static inline bool Value_IsValid(int value) {
    return SearchComparatorCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    SearchComparatorCode_Value_Value_MIN;
  static const Value Value_MAX =
    SearchComparatorCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    SearchComparatorCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return SearchComparatorCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return SearchComparatorCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return SearchComparatorCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.SearchComparatorCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::SearchComparatorCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::SearchComparatorCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.SearchComparatorCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SearchEntryModeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.SearchEntryModeCode) */ {
 public:
  SearchEntryModeCode();
  virtual ~SearchEntryModeCode();

  SearchEntryModeCode(const SearchEntryModeCode& from);

  inline SearchEntryModeCode& operator=(const SearchEntryModeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchEntryModeCode(SearchEntryModeCode&& from) noexcept
    : SearchEntryModeCode() {
    *this = ::std::move(from);
  }

  inline SearchEntryModeCode& operator=(SearchEntryModeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchEntryModeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SearchEntryModeCode* internal_default_instance() {
    return reinterpret_cast<const SearchEntryModeCode*>(
               &_SearchEntryModeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    256;

  void Swap(SearchEntryModeCode* other);
  friend void swap(SearchEntryModeCode& a, SearchEntryModeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchEntryModeCode* New() const final {
    return CreateMaybeMessage<SearchEntryModeCode>(NULL);
  }

  SearchEntryModeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SearchEntryModeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SearchEntryModeCode& from);
  void MergeFrom(const SearchEntryModeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SearchEntryModeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SearchEntryModeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    SearchEntryModeCode_Value_INVALID_UNINITIALIZED;
  static const Value MATCH =
    SearchEntryModeCode_Value_MATCH;
  static const Value INCLUDE =
    SearchEntryModeCode_Value_INCLUDE;
  static const Value OUTCOME =
    SearchEntryModeCode_Value_OUTCOME;
  static inline bool Value_IsValid(int value) {
    return SearchEntryModeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    SearchEntryModeCode_Value_Value_MIN;
  static const Value Value_MAX =
    SearchEntryModeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    SearchEntryModeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return SearchEntryModeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return SearchEntryModeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return SearchEntryModeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.SearchEntryModeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::SearchEntryModeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::SearchEntryModeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.SearchEntryModeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SearchModifierCodeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.SearchModifierCodeCode) */ {
 public:
  SearchModifierCodeCode();
  virtual ~SearchModifierCodeCode();

  SearchModifierCodeCode(const SearchModifierCodeCode& from);

  inline SearchModifierCodeCode& operator=(const SearchModifierCodeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchModifierCodeCode(SearchModifierCodeCode&& from) noexcept
    : SearchModifierCodeCode() {
    *this = ::std::move(from);
  }

  inline SearchModifierCodeCode& operator=(SearchModifierCodeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchModifierCodeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SearchModifierCodeCode* internal_default_instance() {
    return reinterpret_cast<const SearchModifierCodeCode*>(
               &_SearchModifierCodeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    257;

  void Swap(SearchModifierCodeCode* other);
  friend void swap(SearchModifierCodeCode& a, SearchModifierCodeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchModifierCodeCode* New() const final {
    return CreateMaybeMessage<SearchModifierCodeCode>(NULL);
  }

  SearchModifierCodeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SearchModifierCodeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SearchModifierCodeCode& from);
  void MergeFrom(const SearchModifierCodeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SearchModifierCodeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SearchModifierCodeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    SearchModifierCodeCode_Value_INVALID_UNINITIALIZED;
  static const Value MISSING =
    SearchModifierCodeCode_Value_MISSING;
  static const Value EXACT =
    SearchModifierCodeCode_Value_EXACT;
  static const Value CONTAINS =
    SearchModifierCodeCode_Value_CONTAINS;
  static const Value NOT =
    SearchModifierCodeCode_Value_NOT;
  static const Value TEXT =
    SearchModifierCodeCode_Value_TEXT;
  static const Value IN =
    SearchModifierCodeCode_Value_IN;
  static const Value NOT_IN =
    SearchModifierCodeCode_Value_NOT_IN;
  static const Value BELOW =
    SearchModifierCodeCode_Value_BELOW;
  static const Value ABOVE =
    SearchModifierCodeCode_Value_ABOVE;
  static const Value TYPE =
    SearchModifierCodeCode_Value_TYPE;
  static inline bool Value_IsValid(int value) {
    return SearchModifierCodeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    SearchModifierCodeCode_Value_Value_MIN;
  static const Value Value_MAX =
    SearchModifierCodeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    SearchModifierCodeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return SearchModifierCodeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return SearchModifierCodeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return SearchModifierCodeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.SearchModifierCodeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::SearchModifierCodeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::SearchModifierCodeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.SearchModifierCodeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SearchParamTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.SearchParamTypeCode) */ {
 public:
  SearchParamTypeCode();
  virtual ~SearchParamTypeCode();

  SearchParamTypeCode(const SearchParamTypeCode& from);

  inline SearchParamTypeCode& operator=(const SearchParamTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchParamTypeCode(SearchParamTypeCode&& from) noexcept
    : SearchParamTypeCode() {
    *this = ::std::move(from);
  }

  inline SearchParamTypeCode& operator=(SearchParamTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchParamTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SearchParamTypeCode* internal_default_instance() {
    return reinterpret_cast<const SearchParamTypeCode*>(
               &_SearchParamTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    258;

  void Swap(SearchParamTypeCode* other);
  friend void swap(SearchParamTypeCode& a, SearchParamTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchParamTypeCode* New() const final {
    return CreateMaybeMessage<SearchParamTypeCode>(NULL);
  }

  SearchParamTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SearchParamTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SearchParamTypeCode& from);
  void MergeFrom(const SearchParamTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SearchParamTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SearchParamTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    SearchParamTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value NUMBER =
    SearchParamTypeCode_Value_NUMBER;
  static const Value DATE =
    SearchParamTypeCode_Value_DATE;
  static const Value STRING =
    SearchParamTypeCode_Value_STRING;
  static const Value TOKEN =
    SearchParamTypeCode_Value_TOKEN;
  static const Value REFERENCE =
    SearchParamTypeCode_Value_REFERENCE;
  static const Value COMPOSITE =
    SearchParamTypeCode_Value_COMPOSITE;
  static const Value QUANTITY =
    SearchParamTypeCode_Value_QUANTITY;
  static const Value URI =
    SearchParamTypeCode_Value_URI;
  static inline bool Value_IsValid(int value) {
    return SearchParamTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    SearchParamTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    SearchParamTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    SearchParamTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return SearchParamTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return SearchParamTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return SearchParamTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.SearchParamTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::SearchParamTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::SearchParamTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.SearchParamTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class XPathUsageTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.XPathUsageTypeCode) */ {
 public:
  XPathUsageTypeCode();
  virtual ~XPathUsageTypeCode();

  XPathUsageTypeCode(const XPathUsageTypeCode& from);

  inline XPathUsageTypeCode& operator=(const XPathUsageTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XPathUsageTypeCode(XPathUsageTypeCode&& from) noexcept
    : XPathUsageTypeCode() {
    *this = ::std::move(from);
  }

  inline XPathUsageTypeCode& operator=(XPathUsageTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XPathUsageTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XPathUsageTypeCode* internal_default_instance() {
    return reinterpret_cast<const XPathUsageTypeCode*>(
               &_XPathUsageTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    259;

  void Swap(XPathUsageTypeCode* other);
  friend void swap(XPathUsageTypeCode& a, XPathUsageTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XPathUsageTypeCode* New() const final {
    return CreateMaybeMessage<XPathUsageTypeCode>(NULL);
  }

  XPathUsageTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<XPathUsageTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const XPathUsageTypeCode& from);
  void MergeFrom(const XPathUsageTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(XPathUsageTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef XPathUsageTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    XPathUsageTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value NORMAL =
    XPathUsageTypeCode_Value_NORMAL;
  static const Value PHONETIC =
    XPathUsageTypeCode_Value_PHONETIC;
  static const Value NEARBY =
    XPathUsageTypeCode_Value_NEARBY;
  static const Value DISTANCE =
    XPathUsageTypeCode_Value_DISTANCE;
  static const Value OTHER =
    XPathUsageTypeCode_Value_OTHER;
  static inline bool Value_IsValid(int value) {
    return XPathUsageTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    XPathUsageTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    XPathUsageTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    XPathUsageTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return XPathUsageTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return XPathUsageTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return XPathUsageTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.XPathUsageTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::XPathUsageTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::XPathUsageTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.XPathUsageTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SequenceTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.SequenceTypeCode) */ {
 public:
  SequenceTypeCode();
  virtual ~SequenceTypeCode();

  SequenceTypeCode(const SequenceTypeCode& from);

  inline SequenceTypeCode& operator=(const SequenceTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SequenceTypeCode(SequenceTypeCode&& from) noexcept
    : SequenceTypeCode() {
    *this = ::std::move(from);
  }

  inline SequenceTypeCode& operator=(SequenceTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SequenceTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SequenceTypeCode* internal_default_instance() {
    return reinterpret_cast<const SequenceTypeCode*>(
               &_SequenceTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    260;

  void Swap(SequenceTypeCode* other);
  friend void swap(SequenceTypeCode& a, SequenceTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SequenceTypeCode* New() const final {
    return CreateMaybeMessage<SequenceTypeCode>(NULL);
  }

  SequenceTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SequenceTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SequenceTypeCode& from);
  void MergeFrom(const SequenceTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SequenceTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SequenceTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    SequenceTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value AA =
    SequenceTypeCode_Value_AA;
  static const Value DNA =
    SequenceTypeCode_Value_DNA;
  static const Value RNA =
    SequenceTypeCode_Value_RNA;
  static inline bool Value_IsValid(int value) {
    return SequenceTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    SequenceTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    SequenceTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    SequenceTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return SequenceTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return SequenceTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return SequenceTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.SequenceTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::SequenceTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::SequenceTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.SequenceTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServiceProvisionConditionsCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ServiceProvisionConditionsCode) */ {
 public:
  ServiceProvisionConditionsCode();
  virtual ~ServiceProvisionConditionsCode();

  ServiceProvisionConditionsCode(const ServiceProvisionConditionsCode& from);

  inline ServiceProvisionConditionsCode& operator=(const ServiceProvisionConditionsCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServiceProvisionConditionsCode(ServiceProvisionConditionsCode&& from) noexcept
    : ServiceProvisionConditionsCode() {
    *this = ::std::move(from);
  }

  inline ServiceProvisionConditionsCode& operator=(ServiceProvisionConditionsCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServiceProvisionConditionsCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServiceProvisionConditionsCode* internal_default_instance() {
    return reinterpret_cast<const ServiceProvisionConditionsCode*>(
               &_ServiceProvisionConditionsCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    261;

  void Swap(ServiceProvisionConditionsCode* other);
  friend void swap(ServiceProvisionConditionsCode& a, ServiceProvisionConditionsCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServiceProvisionConditionsCode* New() const final {
    return CreateMaybeMessage<ServiceProvisionConditionsCode>(NULL);
  }

  ServiceProvisionConditionsCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ServiceProvisionConditionsCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ServiceProvisionConditionsCode& from);
  void MergeFrom(const ServiceProvisionConditionsCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServiceProvisionConditionsCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ServiceProvisionConditionsCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ServiceProvisionConditionsCode_Value_INVALID_UNINITIALIZED;
  static const Value FREE =
    ServiceProvisionConditionsCode_Value_FREE;
  static const Value DISC =
    ServiceProvisionConditionsCode_Value_DISC;
  static const Value COST =
    ServiceProvisionConditionsCode_Value_COST;
  static inline bool Value_IsValid(int value) {
    return ServiceProvisionConditionsCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ServiceProvisionConditionsCode_Value_Value_MIN;
  static const Value Value_MAX =
    ServiceProvisionConditionsCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ServiceProvisionConditionsCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ServiceProvisionConditionsCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ServiceProvisionConditionsCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ServiceProvisionConditionsCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ServiceProvisionConditionsCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ServiceProvisionConditionsCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ServiceProvisionConditionsCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ServiceProvisionConditionsCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReferralMethodCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ReferralMethodCode) */ {
 public:
  ReferralMethodCode();
  virtual ~ReferralMethodCode();

  ReferralMethodCode(const ReferralMethodCode& from);

  inline ReferralMethodCode& operator=(const ReferralMethodCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReferralMethodCode(ReferralMethodCode&& from) noexcept
    : ReferralMethodCode() {
    *this = ::std::move(from);
  }

  inline ReferralMethodCode& operator=(ReferralMethodCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReferralMethodCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReferralMethodCode* internal_default_instance() {
    return reinterpret_cast<const ReferralMethodCode*>(
               &_ReferralMethodCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    262;

  void Swap(ReferralMethodCode* other);
  friend void swap(ReferralMethodCode& a, ReferralMethodCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReferralMethodCode* New() const final {
    return CreateMaybeMessage<ReferralMethodCode>(NULL);
  }

  ReferralMethodCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReferralMethodCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReferralMethodCode& from);
  void MergeFrom(const ReferralMethodCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReferralMethodCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ReferralMethodCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ReferralMethodCode_Value_INVALID_UNINITIALIZED;
  static const Value FAX =
    ReferralMethodCode_Value_FAX;
  static const Value PHONE =
    ReferralMethodCode_Value_PHONE;
  static const Value ELEC =
    ReferralMethodCode_Value_ELEC;
  static const Value SEMAIL =
    ReferralMethodCode_Value_SEMAIL;
  static const Value MAIL =
    ReferralMethodCode_Value_MAIL;
  static inline bool Value_IsValid(int value) {
    return ReferralMethodCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ReferralMethodCode_Value_Value_MIN;
  static const Value Value_MAX =
    ReferralMethodCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ReferralMethodCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ReferralMethodCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ReferralMethodCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ReferralMethodCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ReferralMethodCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ReferralMethodCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ReferralMethodCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ReferralMethodCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SlotStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.SlotStatusCode) */ {
 public:
  SlotStatusCode();
  virtual ~SlotStatusCode();

  SlotStatusCode(const SlotStatusCode& from);

  inline SlotStatusCode& operator=(const SlotStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SlotStatusCode(SlotStatusCode&& from) noexcept
    : SlotStatusCode() {
    *this = ::std::move(from);
  }

  inline SlotStatusCode& operator=(SlotStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SlotStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SlotStatusCode* internal_default_instance() {
    return reinterpret_cast<const SlotStatusCode*>(
               &_SlotStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    263;

  void Swap(SlotStatusCode* other);
  friend void swap(SlotStatusCode& a, SlotStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SlotStatusCode* New() const final {
    return CreateMaybeMessage<SlotStatusCode>(NULL);
  }

  SlotStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SlotStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SlotStatusCode& from);
  void MergeFrom(const SlotStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SlotStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SlotStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    SlotStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value BUSY =
    SlotStatusCode_Value_BUSY;
  static const Value FREE =
    SlotStatusCode_Value_FREE;
  static const Value BUSY_UNAVAILABLE =
    SlotStatusCode_Value_BUSY_UNAVAILABLE;
  static const Value BUSY_TENTATIVE =
    SlotStatusCode_Value_BUSY_TENTATIVE;
  static const Value ENTERED_IN_ERROR =
    SlotStatusCode_Value_ENTERED_IN_ERROR;
  static inline bool Value_IsValid(int value) {
    return SlotStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    SlotStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    SlotStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    SlotStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return SlotStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return SlotStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return SlotStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.SlotStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::SlotStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::SlotStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.SlotStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SpecialValuesCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.SpecialValuesCode) */ {
 public:
  SpecialValuesCode();
  virtual ~SpecialValuesCode();

  SpecialValuesCode(const SpecialValuesCode& from);

  inline SpecialValuesCode& operator=(const SpecialValuesCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SpecialValuesCode(SpecialValuesCode&& from) noexcept
    : SpecialValuesCode() {
    *this = ::std::move(from);
  }

  inline SpecialValuesCode& operator=(SpecialValuesCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SpecialValuesCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SpecialValuesCode* internal_default_instance() {
    return reinterpret_cast<const SpecialValuesCode*>(
               &_SpecialValuesCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    264;

  void Swap(SpecialValuesCode* other);
  friend void swap(SpecialValuesCode& a, SpecialValuesCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SpecialValuesCode* New() const final {
    return CreateMaybeMessage<SpecialValuesCode>(NULL);
  }

  SpecialValuesCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SpecialValuesCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SpecialValuesCode& from);
  void MergeFrom(const SpecialValuesCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpecialValuesCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SpecialValuesCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    SpecialValuesCode_Value_INVALID_UNINITIALIZED;
  static const Value TRUE =
    SpecialValuesCode_Value_TRUE;
  static const Value FALSE =
    SpecialValuesCode_Value_FALSE;
  static const Value TRACE =
    SpecialValuesCode_Value_TRACE;
  static const Value SUFFICIENT =
    SpecialValuesCode_Value_SUFFICIENT;
  static const Value WITHDRAWN =
    SpecialValuesCode_Value_WITHDRAWN;
  static const Value NIL_KNOWN =
    SpecialValuesCode_Value_NIL_KNOWN;
  static inline bool Value_IsValid(int value) {
    return SpecialValuesCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    SpecialValuesCode_Value_Value_MIN;
  static const Value Value_MAX =
    SpecialValuesCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    SpecialValuesCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return SpecialValuesCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return SpecialValuesCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return SpecialValuesCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.SpecialValuesCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::SpecialValuesCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::SpecialValuesCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.SpecialValuesCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeviceSpecificationSpecTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.DeviceSpecificationSpecTypeCode) */ {
 public:
  DeviceSpecificationSpecTypeCode();
  virtual ~DeviceSpecificationSpecTypeCode();

  DeviceSpecificationSpecTypeCode(const DeviceSpecificationSpecTypeCode& from);

  inline DeviceSpecificationSpecTypeCode& operator=(const DeviceSpecificationSpecTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeviceSpecificationSpecTypeCode(DeviceSpecificationSpecTypeCode&& from) noexcept
    : DeviceSpecificationSpecTypeCode() {
    *this = ::std::move(from);
  }

  inline DeviceSpecificationSpecTypeCode& operator=(DeviceSpecificationSpecTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeviceSpecificationSpecTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeviceSpecificationSpecTypeCode* internal_default_instance() {
    return reinterpret_cast<const DeviceSpecificationSpecTypeCode*>(
               &_DeviceSpecificationSpecTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    265;

  void Swap(DeviceSpecificationSpecTypeCode* other);
  friend void swap(DeviceSpecificationSpecTypeCode& a, DeviceSpecificationSpecTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeviceSpecificationSpecTypeCode* New() const final {
    return CreateMaybeMessage<DeviceSpecificationSpecTypeCode>(NULL);
  }

  DeviceSpecificationSpecTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeviceSpecificationSpecTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeviceSpecificationSpecTypeCode& from);
  void MergeFrom(const DeviceSpecificationSpecTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeviceSpecificationSpecTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DeviceSpecificationSpecTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    DeviceSpecificationSpecTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value UNSPECIFIED =
    DeviceSpecificationSpecTypeCode_Value_UNSPECIFIED;
  static const Value SERIAL_NUMBER =
    DeviceSpecificationSpecTypeCode_Value_SERIAL_NUMBER;
  static const Value PART_NUMBER =
    DeviceSpecificationSpecTypeCode_Value_PART_NUMBER;
  static const Value HARDWARE_REVISION =
    DeviceSpecificationSpecTypeCode_Value_HARDWARE_REVISION;
  static const Value SOFTWARE_REVISION =
    DeviceSpecificationSpecTypeCode_Value_SOFTWARE_REVISION;
  static const Value FIRMWARE_REVISION =
    DeviceSpecificationSpecTypeCode_Value_FIRMWARE_REVISION;
  static const Value PROTOCOL_REVISION =
    DeviceSpecificationSpecTypeCode_Value_PROTOCOL_REVISION;
  static const Value GMDN =
    DeviceSpecificationSpecTypeCode_Value_GMDN;
  static inline bool Value_IsValid(int value) {
    return DeviceSpecificationSpecTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    DeviceSpecificationSpecTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    DeviceSpecificationSpecTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    DeviceSpecificationSpecTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return DeviceSpecificationSpecTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return DeviceSpecificationSpecTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return DeviceSpecificationSpecTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.DeviceSpecificationSpecTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::DeviceSpecificationSpecTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::DeviceSpecificationSpecTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.DeviceSpecificationSpecTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SpecimenStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.SpecimenStatusCode) */ {
 public:
  SpecimenStatusCode();
  virtual ~SpecimenStatusCode();

  SpecimenStatusCode(const SpecimenStatusCode& from);

  inline SpecimenStatusCode& operator=(const SpecimenStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SpecimenStatusCode(SpecimenStatusCode&& from) noexcept
    : SpecimenStatusCode() {
    *this = ::std::move(from);
  }

  inline SpecimenStatusCode& operator=(SpecimenStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SpecimenStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SpecimenStatusCode* internal_default_instance() {
    return reinterpret_cast<const SpecimenStatusCode*>(
               &_SpecimenStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    266;

  void Swap(SpecimenStatusCode* other);
  friend void swap(SpecimenStatusCode& a, SpecimenStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SpecimenStatusCode* New() const final {
    return CreateMaybeMessage<SpecimenStatusCode>(NULL);
  }

  SpecimenStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SpecimenStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SpecimenStatusCode& from);
  void MergeFrom(const SpecimenStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpecimenStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SpecimenStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    SpecimenStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value AVAILABLE =
    SpecimenStatusCode_Value_AVAILABLE;
  static const Value UNAVAILABLE =
    SpecimenStatusCode_Value_UNAVAILABLE;
  static const Value UNSATISFACTORY =
    SpecimenStatusCode_Value_UNSATISFACTORY;
  static const Value ENTERED_IN_ERROR =
    SpecimenStatusCode_Value_ENTERED_IN_ERROR;
  static inline bool Value_IsValid(int value) {
    return SpecimenStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    SpecimenStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    SpecimenStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    SpecimenStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return SpecimenStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return SpecimenStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return SpecimenStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.SpecimenStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::SpecimenStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::SpecimenStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.SpecimenStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StructureDefinitionKindCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.StructureDefinitionKindCode) */ {
 public:
  StructureDefinitionKindCode();
  virtual ~StructureDefinitionKindCode();

  StructureDefinitionKindCode(const StructureDefinitionKindCode& from);

  inline StructureDefinitionKindCode& operator=(const StructureDefinitionKindCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StructureDefinitionKindCode(StructureDefinitionKindCode&& from) noexcept
    : StructureDefinitionKindCode() {
    *this = ::std::move(from);
  }

  inline StructureDefinitionKindCode& operator=(StructureDefinitionKindCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StructureDefinitionKindCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StructureDefinitionKindCode* internal_default_instance() {
    return reinterpret_cast<const StructureDefinitionKindCode*>(
               &_StructureDefinitionKindCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    267;

  void Swap(StructureDefinitionKindCode* other);
  friend void swap(StructureDefinitionKindCode& a, StructureDefinitionKindCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StructureDefinitionKindCode* New() const final {
    return CreateMaybeMessage<StructureDefinitionKindCode>(NULL);
  }

  StructureDefinitionKindCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StructureDefinitionKindCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StructureDefinitionKindCode& from);
  void MergeFrom(const StructureDefinitionKindCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StructureDefinitionKindCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef StructureDefinitionKindCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    StructureDefinitionKindCode_Value_INVALID_UNINITIALIZED;
  static const Value PRIMITIVE_TYPE =
    StructureDefinitionKindCode_Value_PRIMITIVE_TYPE;
  static const Value COMPLEX_TYPE =
    StructureDefinitionKindCode_Value_COMPLEX_TYPE;
  static const Value RESOURCE =
    StructureDefinitionKindCode_Value_RESOURCE;
  static const Value LOGICAL =
    StructureDefinitionKindCode_Value_LOGICAL;
  static inline bool Value_IsValid(int value) {
    return StructureDefinitionKindCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    StructureDefinitionKindCode_Value_Value_MIN;
  static const Value Value_MAX =
    StructureDefinitionKindCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    StructureDefinitionKindCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return StructureDefinitionKindCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return StructureDefinitionKindCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return StructureDefinitionKindCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.StructureDefinitionKindCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::StructureDefinitionKindCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::StructureDefinitionKindCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.StructureDefinitionKindCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SubscriptionChannelTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.SubscriptionChannelTypeCode) */ {
 public:
  SubscriptionChannelTypeCode();
  virtual ~SubscriptionChannelTypeCode();

  SubscriptionChannelTypeCode(const SubscriptionChannelTypeCode& from);

  inline SubscriptionChannelTypeCode& operator=(const SubscriptionChannelTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SubscriptionChannelTypeCode(SubscriptionChannelTypeCode&& from) noexcept
    : SubscriptionChannelTypeCode() {
    *this = ::std::move(from);
  }

  inline SubscriptionChannelTypeCode& operator=(SubscriptionChannelTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubscriptionChannelTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubscriptionChannelTypeCode* internal_default_instance() {
    return reinterpret_cast<const SubscriptionChannelTypeCode*>(
               &_SubscriptionChannelTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    268;

  void Swap(SubscriptionChannelTypeCode* other);
  friend void swap(SubscriptionChannelTypeCode& a, SubscriptionChannelTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SubscriptionChannelTypeCode* New() const final {
    return CreateMaybeMessage<SubscriptionChannelTypeCode>(NULL);
  }

  SubscriptionChannelTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SubscriptionChannelTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SubscriptionChannelTypeCode& from);
  void MergeFrom(const SubscriptionChannelTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubscriptionChannelTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SubscriptionChannelTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    SubscriptionChannelTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value REST_HOOK =
    SubscriptionChannelTypeCode_Value_REST_HOOK;
  static const Value WEBSOCKET =
    SubscriptionChannelTypeCode_Value_WEBSOCKET;
  static const Value EMAIL =
    SubscriptionChannelTypeCode_Value_EMAIL;
  static const Value SMS =
    SubscriptionChannelTypeCode_Value_SMS;
  static const Value MESSAGE =
    SubscriptionChannelTypeCode_Value_MESSAGE;
  static inline bool Value_IsValid(int value) {
    return SubscriptionChannelTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    SubscriptionChannelTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    SubscriptionChannelTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    SubscriptionChannelTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return SubscriptionChannelTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return SubscriptionChannelTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return SubscriptionChannelTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.SubscriptionChannelTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::SubscriptionChannelTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::SubscriptionChannelTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.SubscriptionChannelTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SubscriptionStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.SubscriptionStatusCode) */ {
 public:
  SubscriptionStatusCode();
  virtual ~SubscriptionStatusCode();

  SubscriptionStatusCode(const SubscriptionStatusCode& from);

  inline SubscriptionStatusCode& operator=(const SubscriptionStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SubscriptionStatusCode(SubscriptionStatusCode&& from) noexcept
    : SubscriptionStatusCode() {
    *this = ::std::move(from);
  }

  inline SubscriptionStatusCode& operator=(SubscriptionStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubscriptionStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubscriptionStatusCode* internal_default_instance() {
    return reinterpret_cast<const SubscriptionStatusCode*>(
               &_SubscriptionStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    269;

  void Swap(SubscriptionStatusCode* other);
  friend void swap(SubscriptionStatusCode& a, SubscriptionStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SubscriptionStatusCode* New() const final {
    return CreateMaybeMessage<SubscriptionStatusCode>(NULL);
  }

  SubscriptionStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SubscriptionStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SubscriptionStatusCode& from);
  void MergeFrom(const SubscriptionStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubscriptionStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SubscriptionStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    SubscriptionStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value REQUESTED =
    SubscriptionStatusCode_Value_REQUESTED;
  static const Value ACTIVE =
    SubscriptionStatusCode_Value_ACTIVE;
  static const Value ERROR =
    SubscriptionStatusCode_Value_ERROR;
  static const Value OFF =
    SubscriptionStatusCode_Value_OFF;
  static inline bool Value_IsValid(int value) {
    return SubscriptionStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    SubscriptionStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    SubscriptionStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    SubscriptionStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return SubscriptionStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return SubscriptionStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return SubscriptionStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.SubscriptionStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::SubscriptionStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::SubscriptionStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.SubscriptionStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SubscriptionTagCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.SubscriptionTagCode) */ {
 public:
  SubscriptionTagCode();
  virtual ~SubscriptionTagCode();

  SubscriptionTagCode(const SubscriptionTagCode& from);

  inline SubscriptionTagCode& operator=(const SubscriptionTagCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SubscriptionTagCode(SubscriptionTagCode&& from) noexcept
    : SubscriptionTagCode() {
    *this = ::std::move(from);
  }

  inline SubscriptionTagCode& operator=(SubscriptionTagCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubscriptionTagCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubscriptionTagCode* internal_default_instance() {
    return reinterpret_cast<const SubscriptionTagCode*>(
               &_SubscriptionTagCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    270;

  void Swap(SubscriptionTagCode* other);
  friend void swap(SubscriptionTagCode& a, SubscriptionTagCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SubscriptionTagCode* New() const final {
    return CreateMaybeMessage<SubscriptionTagCode>(NULL);
  }

  SubscriptionTagCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SubscriptionTagCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SubscriptionTagCode& from);
  void MergeFrom(const SubscriptionTagCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubscriptionTagCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SubscriptionTagCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    SubscriptionTagCode_Value_INVALID_UNINITIALIZED;
  static const Value QUEUED =
    SubscriptionTagCode_Value_QUEUED;
  static const Value DELIVERED =
    SubscriptionTagCode_Value_DELIVERED;
  static inline bool Value_IsValid(int value) {
    return SubscriptionTagCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    SubscriptionTagCode_Value_Value_MIN;
  static const Value Value_MAX =
    SubscriptionTagCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    SubscriptionTagCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return SubscriptionTagCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return SubscriptionTagCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return SubscriptionTagCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.SubscriptionTagCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::SubscriptionTagCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::SubscriptionTagCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.SubscriptionTagCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SubstanceCategoryCodesCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.SubstanceCategoryCodesCode) */ {
 public:
  SubstanceCategoryCodesCode();
  virtual ~SubstanceCategoryCodesCode();

  SubstanceCategoryCodesCode(const SubstanceCategoryCodesCode& from);

  inline SubstanceCategoryCodesCode& operator=(const SubstanceCategoryCodesCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SubstanceCategoryCodesCode(SubstanceCategoryCodesCode&& from) noexcept
    : SubstanceCategoryCodesCode() {
    *this = ::std::move(from);
  }

  inline SubstanceCategoryCodesCode& operator=(SubstanceCategoryCodesCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubstanceCategoryCodesCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubstanceCategoryCodesCode* internal_default_instance() {
    return reinterpret_cast<const SubstanceCategoryCodesCode*>(
               &_SubstanceCategoryCodesCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    271;

  void Swap(SubstanceCategoryCodesCode* other);
  friend void swap(SubstanceCategoryCodesCode& a, SubstanceCategoryCodesCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SubstanceCategoryCodesCode* New() const final {
    return CreateMaybeMessage<SubstanceCategoryCodesCode>(NULL);
  }

  SubstanceCategoryCodesCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SubstanceCategoryCodesCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SubstanceCategoryCodesCode& from);
  void MergeFrom(const SubstanceCategoryCodesCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubstanceCategoryCodesCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SubstanceCategoryCodesCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    SubstanceCategoryCodesCode_Value_INVALID_UNINITIALIZED;
  static const Value ALLERGEN =
    SubstanceCategoryCodesCode_Value_ALLERGEN;
  static const Value BIOLOGICAL =
    SubstanceCategoryCodesCode_Value_BIOLOGICAL;
  static const Value BODY =
    SubstanceCategoryCodesCode_Value_BODY;
  static const Value CHEMICAL =
    SubstanceCategoryCodesCode_Value_CHEMICAL;
  static const Value FOOD =
    SubstanceCategoryCodesCode_Value_FOOD;
  static const Value DRUG =
    SubstanceCategoryCodesCode_Value_DRUG;
  static const Value MATERIAL =
    SubstanceCategoryCodesCode_Value_MATERIAL;
  static inline bool Value_IsValid(int value) {
    return SubstanceCategoryCodesCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    SubstanceCategoryCodesCode_Value_Value_MIN;
  static const Value Value_MAX =
    SubstanceCategoryCodesCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    SubstanceCategoryCodesCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return SubstanceCategoryCodesCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return SubstanceCategoryCodesCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return SubstanceCategoryCodesCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.SubstanceCategoryCodesCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::SubstanceCategoryCodesCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::SubstanceCategoryCodesCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.SubstanceCategoryCodesCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FHIRSubstanceStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.FHIRSubstanceStatusCode) */ {
 public:
  FHIRSubstanceStatusCode();
  virtual ~FHIRSubstanceStatusCode();

  FHIRSubstanceStatusCode(const FHIRSubstanceStatusCode& from);

  inline FHIRSubstanceStatusCode& operator=(const FHIRSubstanceStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FHIRSubstanceStatusCode(FHIRSubstanceStatusCode&& from) noexcept
    : FHIRSubstanceStatusCode() {
    *this = ::std::move(from);
  }

  inline FHIRSubstanceStatusCode& operator=(FHIRSubstanceStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FHIRSubstanceStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FHIRSubstanceStatusCode* internal_default_instance() {
    return reinterpret_cast<const FHIRSubstanceStatusCode*>(
               &_FHIRSubstanceStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    272;

  void Swap(FHIRSubstanceStatusCode* other);
  friend void swap(FHIRSubstanceStatusCode& a, FHIRSubstanceStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FHIRSubstanceStatusCode* New() const final {
    return CreateMaybeMessage<FHIRSubstanceStatusCode>(NULL);
  }

  FHIRSubstanceStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FHIRSubstanceStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FHIRSubstanceStatusCode& from);
  void MergeFrom(const FHIRSubstanceStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FHIRSubstanceStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef FHIRSubstanceStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    FHIRSubstanceStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value ACTIVE =
    FHIRSubstanceStatusCode_Value_ACTIVE;
  static const Value INACTIVE =
    FHIRSubstanceStatusCode_Value_INACTIVE;
  static const Value ENTERED_IN_ERROR =
    FHIRSubstanceStatusCode_Value_ENTERED_IN_ERROR;
  static inline bool Value_IsValid(int value) {
    return FHIRSubstanceStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    FHIRSubstanceStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    FHIRSubstanceStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    FHIRSubstanceStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return FHIRSubstanceStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return FHIRSubstanceStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return FHIRSubstanceStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.FHIRSubstanceStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::FHIRSubstanceStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::FHIRSubstanceStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.FHIRSubstanceStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SupplyDeliveryStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.SupplyDeliveryStatusCode) */ {
 public:
  SupplyDeliveryStatusCode();
  virtual ~SupplyDeliveryStatusCode();

  SupplyDeliveryStatusCode(const SupplyDeliveryStatusCode& from);

  inline SupplyDeliveryStatusCode& operator=(const SupplyDeliveryStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SupplyDeliveryStatusCode(SupplyDeliveryStatusCode&& from) noexcept
    : SupplyDeliveryStatusCode() {
    *this = ::std::move(from);
  }

  inline SupplyDeliveryStatusCode& operator=(SupplyDeliveryStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SupplyDeliveryStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SupplyDeliveryStatusCode* internal_default_instance() {
    return reinterpret_cast<const SupplyDeliveryStatusCode*>(
               &_SupplyDeliveryStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    273;

  void Swap(SupplyDeliveryStatusCode* other);
  friend void swap(SupplyDeliveryStatusCode& a, SupplyDeliveryStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SupplyDeliveryStatusCode* New() const final {
    return CreateMaybeMessage<SupplyDeliveryStatusCode>(NULL);
  }

  SupplyDeliveryStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SupplyDeliveryStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SupplyDeliveryStatusCode& from);
  void MergeFrom(const SupplyDeliveryStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SupplyDeliveryStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SupplyDeliveryStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    SupplyDeliveryStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value IN_PROGRESS =
    SupplyDeliveryStatusCode_Value_IN_PROGRESS;
  static const Value COMPLETED =
    SupplyDeliveryStatusCode_Value_COMPLETED;
  static const Value ABANDONED =
    SupplyDeliveryStatusCode_Value_ABANDONED;
  static const Value ENTERED_IN_ERROR =
    SupplyDeliveryStatusCode_Value_ENTERED_IN_ERROR;
  static inline bool Value_IsValid(int value) {
    return SupplyDeliveryStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    SupplyDeliveryStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    SupplyDeliveryStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    SupplyDeliveryStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return SupplyDeliveryStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return SupplyDeliveryStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return SupplyDeliveryStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.SupplyDeliveryStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::SupplyDeliveryStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::SupplyDeliveryStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.SupplyDeliveryStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SupplyItemTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.SupplyItemTypeCode) */ {
 public:
  SupplyItemTypeCode();
  virtual ~SupplyItemTypeCode();

  SupplyItemTypeCode(const SupplyItemTypeCode& from);

  inline SupplyItemTypeCode& operator=(const SupplyItemTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SupplyItemTypeCode(SupplyItemTypeCode&& from) noexcept
    : SupplyItemTypeCode() {
    *this = ::std::move(from);
  }

  inline SupplyItemTypeCode& operator=(SupplyItemTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SupplyItemTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SupplyItemTypeCode* internal_default_instance() {
    return reinterpret_cast<const SupplyItemTypeCode*>(
               &_SupplyItemTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    274;

  void Swap(SupplyItemTypeCode* other);
  friend void swap(SupplyItemTypeCode& a, SupplyItemTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SupplyItemTypeCode* New() const final {
    return CreateMaybeMessage<SupplyItemTypeCode>(NULL);
  }

  SupplyItemTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SupplyItemTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SupplyItemTypeCode& from);
  void MergeFrom(const SupplyItemTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SupplyItemTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SupplyItemTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    SupplyItemTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value MEDICATION =
    SupplyItemTypeCode_Value_MEDICATION;
  static const Value DEVICE =
    SupplyItemTypeCode_Value_DEVICE;
  static inline bool Value_IsValid(int value) {
    return SupplyItemTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    SupplyItemTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    SupplyItemTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    SupplyItemTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return SupplyItemTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return SupplyItemTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return SupplyItemTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.SupplyItemTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::SupplyItemTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::SupplyItemTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.SupplyItemTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SupplyTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.SupplyTypeCode) */ {
 public:
  SupplyTypeCode();
  virtual ~SupplyTypeCode();

  SupplyTypeCode(const SupplyTypeCode& from);

  inline SupplyTypeCode& operator=(const SupplyTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SupplyTypeCode(SupplyTypeCode&& from) noexcept
    : SupplyTypeCode() {
    *this = ::std::move(from);
  }

  inline SupplyTypeCode& operator=(SupplyTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SupplyTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SupplyTypeCode* internal_default_instance() {
    return reinterpret_cast<const SupplyTypeCode*>(
               &_SupplyTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    275;

  void Swap(SupplyTypeCode* other);
  friend void swap(SupplyTypeCode& a, SupplyTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SupplyTypeCode* New() const final {
    return CreateMaybeMessage<SupplyTypeCode>(NULL);
  }

  SupplyTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SupplyTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SupplyTypeCode& from);
  void MergeFrom(const SupplyTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SupplyTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SupplyTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    SupplyTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value CENTRAL =
    SupplyTypeCode_Value_CENTRAL;
  static const Value NONSTOCK =
    SupplyTypeCode_Value_NONSTOCK;
  static inline bool Value_IsValid(int value) {
    return SupplyTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    SupplyTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    SupplyTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    SupplyTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return SupplyTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return SupplyTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return SupplyTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.SupplyTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::SupplyTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::SupplyTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.SupplyTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SupplyRequestReasonCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.SupplyRequestReasonCode) */ {
 public:
  SupplyRequestReasonCode();
  virtual ~SupplyRequestReasonCode();

  SupplyRequestReasonCode(const SupplyRequestReasonCode& from);

  inline SupplyRequestReasonCode& operator=(const SupplyRequestReasonCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SupplyRequestReasonCode(SupplyRequestReasonCode&& from) noexcept
    : SupplyRequestReasonCode() {
    *this = ::std::move(from);
  }

  inline SupplyRequestReasonCode& operator=(SupplyRequestReasonCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SupplyRequestReasonCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SupplyRequestReasonCode* internal_default_instance() {
    return reinterpret_cast<const SupplyRequestReasonCode*>(
               &_SupplyRequestReasonCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    276;

  void Swap(SupplyRequestReasonCode* other);
  friend void swap(SupplyRequestReasonCode& a, SupplyRequestReasonCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SupplyRequestReasonCode* New() const final {
    return CreateMaybeMessage<SupplyRequestReasonCode>(NULL);
  }

  SupplyRequestReasonCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SupplyRequestReasonCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SupplyRequestReasonCode& from);
  void MergeFrom(const SupplyRequestReasonCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SupplyRequestReasonCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SupplyRequestReasonCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    SupplyRequestReasonCode_Value_INVALID_UNINITIALIZED;
  static const Value PATIENT_CARE =
    SupplyRequestReasonCode_Value_PATIENT_CARE;
  static const Value WARD_STOCK =
    SupplyRequestReasonCode_Value_WARD_STOCK;
  static inline bool Value_IsValid(int value) {
    return SupplyRequestReasonCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    SupplyRequestReasonCode_Value_Value_MIN;
  static const Value Value_MAX =
    SupplyRequestReasonCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    SupplyRequestReasonCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return SupplyRequestReasonCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return SupplyRequestReasonCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return SupplyRequestReasonCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.SupplyRequestReasonCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::SupplyRequestReasonCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::SupplyRequestReasonCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.SupplyRequestReasonCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SupplyRequestStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.SupplyRequestStatusCode) */ {
 public:
  SupplyRequestStatusCode();
  virtual ~SupplyRequestStatusCode();

  SupplyRequestStatusCode(const SupplyRequestStatusCode& from);

  inline SupplyRequestStatusCode& operator=(const SupplyRequestStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SupplyRequestStatusCode(SupplyRequestStatusCode&& from) noexcept
    : SupplyRequestStatusCode() {
    *this = ::std::move(from);
  }

  inline SupplyRequestStatusCode& operator=(SupplyRequestStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SupplyRequestStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SupplyRequestStatusCode* internal_default_instance() {
    return reinterpret_cast<const SupplyRequestStatusCode*>(
               &_SupplyRequestStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    277;

  void Swap(SupplyRequestStatusCode* other);
  friend void swap(SupplyRequestStatusCode& a, SupplyRequestStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SupplyRequestStatusCode* New() const final {
    return CreateMaybeMessage<SupplyRequestStatusCode>(NULL);
  }

  SupplyRequestStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SupplyRequestStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SupplyRequestStatusCode& from);
  void MergeFrom(const SupplyRequestStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SupplyRequestStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SupplyRequestStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    SupplyRequestStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value DRAFT =
    SupplyRequestStatusCode_Value_DRAFT;
  static const Value ACTIVE =
    SupplyRequestStatusCode_Value_ACTIVE;
  static const Value SUSPENDED =
    SupplyRequestStatusCode_Value_SUSPENDED;
  static const Value CANCELLED =
    SupplyRequestStatusCode_Value_CANCELLED;
  static const Value COMPLETED =
    SupplyRequestStatusCode_Value_COMPLETED;
  static const Value ENTERED_IN_ERROR =
    SupplyRequestStatusCode_Value_ENTERED_IN_ERROR;
  static const Value UNKNOWN =
    SupplyRequestStatusCode_Value_UNKNOWN;
  static inline bool Value_IsValid(int value) {
    return SupplyRequestStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    SupplyRequestStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    SupplyRequestStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    SupplyRequestStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return SupplyRequestStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return SupplyRequestStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return SupplyRequestStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.SupplyRequestStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::SupplyRequestStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::SupplyRequestStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.SupplyRequestStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SystemRestfulInteractionCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.SystemRestfulInteractionCode) */ {
 public:
  SystemRestfulInteractionCode();
  virtual ~SystemRestfulInteractionCode();

  SystemRestfulInteractionCode(const SystemRestfulInteractionCode& from);

  inline SystemRestfulInteractionCode& operator=(const SystemRestfulInteractionCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SystemRestfulInteractionCode(SystemRestfulInteractionCode&& from) noexcept
    : SystemRestfulInteractionCode() {
    *this = ::std::move(from);
  }

  inline SystemRestfulInteractionCode& operator=(SystemRestfulInteractionCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SystemRestfulInteractionCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemRestfulInteractionCode* internal_default_instance() {
    return reinterpret_cast<const SystemRestfulInteractionCode*>(
               &_SystemRestfulInteractionCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    278;

  void Swap(SystemRestfulInteractionCode* other);
  friend void swap(SystemRestfulInteractionCode& a, SystemRestfulInteractionCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SystemRestfulInteractionCode* New() const final {
    return CreateMaybeMessage<SystemRestfulInteractionCode>(NULL);
  }

  SystemRestfulInteractionCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SystemRestfulInteractionCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SystemRestfulInteractionCode& from);
  void MergeFrom(const SystemRestfulInteractionCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SystemRestfulInteractionCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SystemRestfulInteractionCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    SystemRestfulInteractionCode_Value_INVALID_UNINITIALIZED;
  static const Value TRANSACTION =
    SystemRestfulInteractionCode_Value_TRANSACTION;
  static const Value BATCH =
    SystemRestfulInteractionCode_Value_BATCH;
  static const Value SEARCH_SYSTEM =
    SystemRestfulInteractionCode_Value_SEARCH_SYSTEM;
  static const Value HISTORY_SYSTEM =
    SystemRestfulInteractionCode_Value_HISTORY_SYSTEM;
  static inline bool Value_IsValid(int value) {
    return SystemRestfulInteractionCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    SystemRestfulInteractionCode_Value_Value_MIN;
  static const Value Value_MAX =
    SystemRestfulInteractionCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    SystemRestfulInteractionCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return SystemRestfulInteractionCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return SystemRestfulInteractionCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return SystemRestfulInteractionCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.SystemRestfulInteractionCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::SystemRestfulInteractionCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::SystemRestfulInteractionCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.SystemRestfulInteractionCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SystemVersionProcessingModeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.SystemVersionProcessingModeCode) */ {
 public:
  SystemVersionProcessingModeCode();
  virtual ~SystemVersionProcessingModeCode();

  SystemVersionProcessingModeCode(const SystemVersionProcessingModeCode& from);

  inline SystemVersionProcessingModeCode& operator=(const SystemVersionProcessingModeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SystemVersionProcessingModeCode(SystemVersionProcessingModeCode&& from) noexcept
    : SystemVersionProcessingModeCode() {
    *this = ::std::move(from);
  }

  inline SystemVersionProcessingModeCode& operator=(SystemVersionProcessingModeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SystemVersionProcessingModeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemVersionProcessingModeCode* internal_default_instance() {
    return reinterpret_cast<const SystemVersionProcessingModeCode*>(
               &_SystemVersionProcessingModeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    279;

  void Swap(SystemVersionProcessingModeCode* other);
  friend void swap(SystemVersionProcessingModeCode& a, SystemVersionProcessingModeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SystemVersionProcessingModeCode* New() const final {
    return CreateMaybeMessage<SystemVersionProcessingModeCode>(NULL);
  }

  SystemVersionProcessingModeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SystemVersionProcessingModeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SystemVersionProcessingModeCode& from);
  void MergeFrom(const SystemVersionProcessingModeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SystemVersionProcessingModeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SystemVersionProcessingModeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    SystemVersionProcessingModeCode_Value_INVALID_UNINITIALIZED;
  static const Value DEFAULT =
    SystemVersionProcessingModeCode_Value_DEFAULT;
  static const Value CHECK =
    SystemVersionProcessingModeCode_Value_CHECK;
  static const Value OVERRIDE =
    SystemVersionProcessingModeCode_Value_OVERRIDE;
  static inline bool Value_IsValid(int value) {
    return SystemVersionProcessingModeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    SystemVersionProcessingModeCode_Value_Value_MIN;
  static const Value Value_MAX =
    SystemVersionProcessingModeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    SystemVersionProcessingModeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return SystemVersionProcessingModeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return SystemVersionProcessingModeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return SystemVersionProcessingModeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.SystemVersionProcessingModeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::SystemVersionProcessingModeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::SystemVersionProcessingModeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.SystemVersionProcessingModeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TaskPerformerTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.TaskPerformerTypeCode) */ {
 public:
  TaskPerformerTypeCode();
  virtual ~TaskPerformerTypeCode();

  TaskPerformerTypeCode(const TaskPerformerTypeCode& from);

  inline TaskPerformerTypeCode& operator=(const TaskPerformerTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TaskPerformerTypeCode(TaskPerformerTypeCode&& from) noexcept
    : TaskPerformerTypeCode() {
    *this = ::std::move(from);
  }

  inline TaskPerformerTypeCode& operator=(TaskPerformerTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskPerformerTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TaskPerformerTypeCode* internal_default_instance() {
    return reinterpret_cast<const TaskPerformerTypeCode*>(
               &_TaskPerformerTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    280;

  void Swap(TaskPerformerTypeCode* other);
  friend void swap(TaskPerformerTypeCode& a, TaskPerformerTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TaskPerformerTypeCode* New() const final {
    return CreateMaybeMessage<TaskPerformerTypeCode>(NULL);
  }

  TaskPerformerTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TaskPerformerTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TaskPerformerTypeCode& from);
  void MergeFrom(const TaskPerformerTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TaskPerformerTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef TaskPerformerTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    TaskPerformerTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value REQUESTER =
    TaskPerformerTypeCode_Value_REQUESTER;
  static const Value DISPATCHER =
    TaskPerformerTypeCode_Value_DISPATCHER;
  static const Value SCHEDULER =
    TaskPerformerTypeCode_Value_SCHEDULER;
  static const Value PERFORMER =
    TaskPerformerTypeCode_Value_PERFORMER;
  static const Value MONITOR =
    TaskPerformerTypeCode_Value_MONITOR;
  static const Value MANAGER =
    TaskPerformerTypeCode_Value_MANAGER;
  static const Value ACQUIRER =
    TaskPerformerTypeCode_Value_ACQUIRER;
  static const Value REVIEWER =
    TaskPerformerTypeCode_Value_REVIEWER;
  static inline bool Value_IsValid(int value) {
    return TaskPerformerTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    TaskPerformerTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    TaskPerformerTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    TaskPerformerTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return TaskPerformerTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return TaskPerformerTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return TaskPerformerTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.TaskPerformerTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::TaskPerformerTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::TaskPerformerTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.TaskPerformerTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TemplateStatusCodeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.TemplateStatusCodeCode) */ {
 public:
  TemplateStatusCodeCode();
  virtual ~TemplateStatusCodeCode();

  TemplateStatusCodeCode(const TemplateStatusCodeCode& from);

  inline TemplateStatusCodeCode& operator=(const TemplateStatusCodeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TemplateStatusCodeCode(TemplateStatusCodeCode&& from) noexcept
    : TemplateStatusCodeCode() {
    *this = ::std::move(from);
  }

  inline TemplateStatusCodeCode& operator=(TemplateStatusCodeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TemplateStatusCodeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TemplateStatusCodeCode* internal_default_instance() {
    return reinterpret_cast<const TemplateStatusCodeCode*>(
               &_TemplateStatusCodeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    281;

  void Swap(TemplateStatusCodeCode* other);
  friend void swap(TemplateStatusCodeCode& a, TemplateStatusCodeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TemplateStatusCodeCode* New() const final {
    return CreateMaybeMessage<TemplateStatusCodeCode>(NULL);
  }

  TemplateStatusCodeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TemplateStatusCodeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TemplateStatusCodeCode& from);
  void MergeFrom(const TemplateStatusCodeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TemplateStatusCodeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef TemplateStatusCodeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    TemplateStatusCodeCode_Value_INVALID_UNINITIALIZED;
  static const Value DRAFT =
    TemplateStatusCodeCode_Value_DRAFT;
  static const Value PENDING =
    TemplateStatusCodeCode_Value_PENDING;
  static const Value ACTIVE =
    TemplateStatusCodeCode_Value_ACTIVE;
  static const Value REVIEW =
    TemplateStatusCodeCode_Value_REVIEW;
  static const Value CANCELLED =
    TemplateStatusCodeCode_Value_CANCELLED;
  static const Value REJECTED =
    TemplateStatusCodeCode_Value_REJECTED;
  static const Value RETIRED =
    TemplateStatusCodeCode_Value_RETIRED;
  static const Value TERMINATED =
    TemplateStatusCodeCode_Value_TERMINATED;
  static inline bool Value_IsValid(int value) {
    return TemplateStatusCodeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    TemplateStatusCodeCode_Value_Value_MIN;
  static const Value Value_MAX =
    TemplateStatusCodeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    TemplateStatusCodeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return TemplateStatusCodeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return TemplateStatusCodeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return TemplateStatusCodeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.TemplateStatusCodeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::TemplateStatusCodeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::TemplateStatusCodeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.TemplateStatusCodeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TaskStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.TaskStatusCode) */ {
 public:
  TaskStatusCode();
  virtual ~TaskStatusCode();

  TaskStatusCode(const TaskStatusCode& from);

  inline TaskStatusCode& operator=(const TaskStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TaskStatusCode(TaskStatusCode&& from) noexcept
    : TaskStatusCode() {
    *this = ::std::move(from);
  }

  inline TaskStatusCode& operator=(TaskStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TaskStatusCode* internal_default_instance() {
    return reinterpret_cast<const TaskStatusCode*>(
               &_TaskStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    282;

  void Swap(TaskStatusCode* other);
  friend void swap(TaskStatusCode& a, TaskStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TaskStatusCode* New() const final {
    return CreateMaybeMessage<TaskStatusCode>(NULL);
  }

  TaskStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TaskStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TaskStatusCode& from);
  void MergeFrom(const TaskStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TaskStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef TaskStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    TaskStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value DRAFT =
    TaskStatusCode_Value_DRAFT;
  static const Value REQUESTED =
    TaskStatusCode_Value_REQUESTED;
  static const Value RECEIVED =
    TaskStatusCode_Value_RECEIVED;
  static const Value ACCEPTED =
    TaskStatusCode_Value_ACCEPTED;
  static const Value REJECTED =
    TaskStatusCode_Value_REJECTED;
  static const Value READY =
    TaskStatusCode_Value_READY;
  static const Value CANCELLED =
    TaskStatusCode_Value_CANCELLED;
  static const Value IN_PROGRESS =
    TaskStatusCode_Value_IN_PROGRESS;
  static const Value ON_HOLD =
    TaskStatusCode_Value_ON_HOLD;
  static const Value FAILED =
    TaskStatusCode_Value_FAILED;
  static const Value COMPLETED =
    TaskStatusCode_Value_COMPLETED;
  static const Value ENTERED_IN_ERROR =
    TaskStatusCode_Value_ENTERED_IN_ERROR;
  static inline bool Value_IsValid(int value) {
    return TaskStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    TaskStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    TaskStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    TaskStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return TaskStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return TaskStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return TaskStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.TaskStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::TaskStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::TaskStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.TaskStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TestScriptOperationCodeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.TestScriptOperationCodeCode) */ {
 public:
  TestScriptOperationCodeCode();
  virtual ~TestScriptOperationCodeCode();

  TestScriptOperationCodeCode(const TestScriptOperationCodeCode& from);

  inline TestScriptOperationCodeCode& operator=(const TestScriptOperationCodeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TestScriptOperationCodeCode(TestScriptOperationCodeCode&& from) noexcept
    : TestScriptOperationCodeCode() {
    *this = ::std::move(from);
  }

  inline TestScriptOperationCodeCode& operator=(TestScriptOperationCodeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TestScriptOperationCodeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestScriptOperationCodeCode* internal_default_instance() {
    return reinterpret_cast<const TestScriptOperationCodeCode*>(
               &_TestScriptOperationCodeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    283;

  void Swap(TestScriptOperationCodeCode* other);
  friend void swap(TestScriptOperationCodeCode& a, TestScriptOperationCodeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TestScriptOperationCodeCode* New() const final {
    return CreateMaybeMessage<TestScriptOperationCodeCode>(NULL);
  }

  TestScriptOperationCodeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TestScriptOperationCodeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TestScriptOperationCodeCode& from);
  void MergeFrom(const TestScriptOperationCodeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestScriptOperationCodeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef TestScriptOperationCodeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    TestScriptOperationCodeCode_Value_INVALID_UNINITIALIZED;
  static const Value READ =
    TestScriptOperationCodeCode_Value_READ;
  static const Value VREAD =
    TestScriptOperationCodeCode_Value_VREAD;
  static const Value UPDATE =
    TestScriptOperationCodeCode_Value_UPDATE;
  static const Value UPDATE_CREATE =
    TestScriptOperationCodeCode_Value_UPDATE_CREATE;
  static const Value DELETE =
    TestScriptOperationCodeCode_Value_DELETE;
  static const Value DELETE_COND_SINGLE =
    TestScriptOperationCodeCode_Value_DELETE_COND_SINGLE;
  static const Value DELETE_COND_MULTIPLE =
    TestScriptOperationCodeCode_Value_DELETE_COND_MULTIPLE;
  static const Value HISTORY =
    TestScriptOperationCodeCode_Value_HISTORY;
  static const Value CREATE =
    TestScriptOperationCodeCode_Value_CREATE;
  static const Value SEARCH =
    TestScriptOperationCodeCode_Value_SEARCH;
  static const Value BATCH =
    TestScriptOperationCodeCode_Value_BATCH;
  static const Value TRANSACTION =
    TestScriptOperationCodeCode_Value_TRANSACTION;
  static const Value CAPABILITIES =
    TestScriptOperationCodeCode_Value_CAPABILITIES;
  static const Value APPLY =
    TestScriptOperationCodeCode_Value_APPLY;
  static const Value CANCEL =
    TestScriptOperationCodeCode_Value_CANCEL;
  static const Value CLOSURE =
    TestScriptOperationCodeCode_Value_CLOSURE;
  static const Value COMPOSE =
    TestScriptOperationCodeCode_Value_COMPOSE;
  static const Value CONFORMS =
    TestScriptOperationCodeCode_Value_CONFORMS;
  static const Value DATA_REQUIREMENTS =
    TestScriptOperationCodeCode_Value_DATA_REQUIREMENTS;
  static const Value DOCUMENT =
    TestScriptOperationCodeCode_Value_DOCUMENT;
  static const Value EVALUATE =
    TestScriptOperationCodeCode_Value_EVALUATE;
  static const Value EVALUATE_MEASURE =
    TestScriptOperationCodeCode_Value_EVALUATE_MEASURE;
  static const Value EVERYTHING =
    TestScriptOperationCodeCode_Value_EVERYTHING;
  static const Value EXPAND =
    TestScriptOperationCodeCode_Value_EXPAND;
  static const Value FAIL =
    TestScriptOperationCodeCode_Value_FAIL;
  static const Value FIND =
    TestScriptOperationCodeCode_Value_FIND;
  static const Value FINISH =
    TestScriptOperationCodeCode_Value_FINISH;
  static const Value IMPLEMENTS =
    TestScriptOperationCodeCode_Value_IMPLEMENTS;
  static const Value LOOKUP =
    TestScriptOperationCodeCode_Value_LOOKUP;
  static const Value MATCH =
    TestScriptOperationCodeCode_Value_MATCH;
  static const Value META =
    TestScriptOperationCodeCode_Value_META;
  static const Value META_ADD =
    TestScriptOperationCodeCode_Value_META_ADD;
  static const Value META_DELETE =
    TestScriptOperationCodeCode_Value_META_DELETE;
  static const Value POPULATE =
    TestScriptOperationCodeCode_Value_POPULATE;
  static const Value POPULATEHTML =
    TestScriptOperationCodeCode_Value_POPULATEHTML;
  static const Value POPULATELINK =
    TestScriptOperationCodeCode_Value_POPULATELINK;
  static const Value PROCESS_MESSAGE =
    TestScriptOperationCodeCode_Value_PROCESS_MESSAGE;
  static const Value QUESTIONNAIRE =
    TestScriptOperationCodeCode_Value_QUESTIONNAIRE;
  static const Value RELEASE =
    TestScriptOperationCodeCode_Value_RELEASE;
  static const Value RESERVE =
    TestScriptOperationCodeCode_Value_RESERVE;
  static const Value RESUME =
    TestScriptOperationCodeCode_Value_RESUME;
  static const Value SET_INPUT =
    TestScriptOperationCodeCode_Value_SET_INPUT;
  static const Value SET_OUTPUT =
    TestScriptOperationCodeCode_Value_SET_OUTPUT;
  static const Value START =
    TestScriptOperationCodeCode_Value_START;
  static const Value STATS =
    TestScriptOperationCodeCode_Value_STATS;
  static const Value STOP =
    TestScriptOperationCodeCode_Value_STOP;
  static const Value SUBSET =
    TestScriptOperationCodeCode_Value_SUBSET;
  static const Value SUBSUMES =
    TestScriptOperationCodeCode_Value_SUBSUMES;
  static const Value SUSPEND =
    TestScriptOperationCodeCode_Value_SUSPEND;
  static const Value TRANSFORM =
    TestScriptOperationCodeCode_Value_TRANSFORM;
  static const Value TRANSLATE =
    TestScriptOperationCodeCode_Value_TRANSLATE;
  static const Value VALIDATE =
    TestScriptOperationCodeCode_Value_VALIDATE;
  static const Value VALIDATE_CODE =
    TestScriptOperationCodeCode_Value_VALIDATE_CODE;
  static inline bool Value_IsValid(int value) {
    return TestScriptOperationCodeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    TestScriptOperationCodeCode_Value_Value_MIN;
  static const Value Value_MAX =
    TestScriptOperationCodeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    TestScriptOperationCodeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return TestScriptOperationCodeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return TestScriptOperationCodeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return TestScriptOperationCodeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.TestScriptOperationCodeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::TestScriptOperationCodeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::TestScriptOperationCodeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.TestScriptOperationCodeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TestScriptProfileDestinationTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.TestScriptProfileDestinationTypeCode) */ {
 public:
  TestScriptProfileDestinationTypeCode();
  virtual ~TestScriptProfileDestinationTypeCode();

  TestScriptProfileDestinationTypeCode(const TestScriptProfileDestinationTypeCode& from);

  inline TestScriptProfileDestinationTypeCode& operator=(const TestScriptProfileDestinationTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TestScriptProfileDestinationTypeCode(TestScriptProfileDestinationTypeCode&& from) noexcept
    : TestScriptProfileDestinationTypeCode() {
    *this = ::std::move(from);
  }

  inline TestScriptProfileDestinationTypeCode& operator=(TestScriptProfileDestinationTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TestScriptProfileDestinationTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestScriptProfileDestinationTypeCode* internal_default_instance() {
    return reinterpret_cast<const TestScriptProfileDestinationTypeCode*>(
               &_TestScriptProfileDestinationTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    284;

  void Swap(TestScriptProfileDestinationTypeCode* other);
  friend void swap(TestScriptProfileDestinationTypeCode& a, TestScriptProfileDestinationTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TestScriptProfileDestinationTypeCode* New() const final {
    return CreateMaybeMessage<TestScriptProfileDestinationTypeCode>(NULL);
  }

  TestScriptProfileDestinationTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TestScriptProfileDestinationTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TestScriptProfileDestinationTypeCode& from);
  void MergeFrom(const TestScriptProfileDestinationTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestScriptProfileDestinationTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef TestScriptProfileDestinationTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    TestScriptProfileDestinationTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value FHIR_SERVER =
    TestScriptProfileDestinationTypeCode_Value_FHIR_SERVER;
  static const Value FHIR_SDC_FORMMANAGER =
    TestScriptProfileDestinationTypeCode_Value_FHIR_SDC_FORMMANAGER;
  static const Value FHIR_SDC_FORMPROCESSOR =
    TestScriptProfileDestinationTypeCode_Value_FHIR_SDC_FORMPROCESSOR;
  static const Value FHIR_SDC_FORMRECEIVER =
    TestScriptProfileDestinationTypeCode_Value_FHIR_SDC_FORMRECEIVER;
  static inline bool Value_IsValid(int value) {
    return TestScriptProfileDestinationTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    TestScriptProfileDestinationTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    TestScriptProfileDestinationTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    TestScriptProfileDestinationTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return TestScriptProfileDestinationTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return TestScriptProfileDestinationTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return TestScriptProfileDestinationTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.TestScriptProfileDestinationTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::TestScriptProfileDestinationTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::TestScriptProfileDestinationTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.TestScriptProfileDestinationTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TestScriptProfileOriginTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.TestScriptProfileOriginTypeCode) */ {
 public:
  TestScriptProfileOriginTypeCode();
  virtual ~TestScriptProfileOriginTypeCode();

  TestScriptProfileOriginTypeCode(const TestScriptProfileOriginTypeCode& from);

  inline TestScriptProfileOriginTypeCode& operator=(const TestScriptProfileOriginTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TestScriptProfileOriginTypeCode(TestScriptProfileOriginTypeCode&& from) noexcept
    : TestScriptProfileOriginTypeCode() {
    *this = ::std::move(from);
  }

  inline TestScriptProfileOriginTypeCode& operator=(TestScriptProfileOriginTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TestScriptProfileOriginTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestScriptProfileOriginTypeCode* internal_default_instance() {
    return reinterpret_cast<const TestScriptProfileOriginTypeCode*>(
               &_TestScriptProfileOriginTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    285;

  void Swap(TestScriptProfileOriginTypeCode* other);
  friend void swap(TestScriptProfileOriginTypeCode& a, TestScriptProfileOriginTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TestScriptProfileOriginTypeCode* New() const final {
    return CreateMaybeMessage<TestScriptProfileOriginTypeCode>(NULL);
  }

  TestScriptProfileOriginTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TestScriptProfileOriginTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TestScriptProfileOriginTypeCode& from);
  void MergeFrom(const TestScriptProfileOriginTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestScriptProfileOriginTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef TestScriptProfileOriginTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    TestScriptProfileOriginTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value FHIR_CLIENT =
    TestScriptProfileOriginTypeCode_Value_FHIR_CLIENT;
  static const Value FHIR_SDC_FORMFILLER =
    TestScriptProfileOriginTypeCode_Value_FHIR_SDC_FORMFILLER;
  static inline bool Value_IsValid(int value) {
    return TestScriptProfileOriginTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    TestScriptProfileOriginTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    TestScriptProfileOriginTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    TestScriptProfileOriginTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return TestScriptProfileOriginTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return TestScriptProfileOriginTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return TestScriptProfileOriginTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.TestScriptProfileOriginTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::TestScriptProfileOriginTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::TestScriptProfileOriginTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.TestScriptProfileOriginTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TransactionModeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.TransactionModeCode) */ {
 public:
  TransactionModeCode();
  virtual ~TransactionModeCode();

  TransactionModeCode(const TransactionModeCode& from);

  inline TransactionModeCode& operator=(const TransactionModeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransactionModeCode(TransactionModeCode&& from) noexcept
    : TransactionModeCode() {
    *this = ::std::move(from);
  }

  inline TransactionModeCode& operator=(TransactionModeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TransactionModeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransactionModeCode* internal_default_instance() {
    return reinterpret_cast<const TransactionModeCode*>(
               &_TransactionModeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    286;

  void Swap(TransactionModeCode* other);
  friend void swap(TransactionModeCode& a, TransactionModeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransactionModeCode* New() const final {
    return CreateMaybeMessage<TransactionModeCode>(NULL);
  }

  TransactionModeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TransactionModeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TransactionModeCode& from);
  void MergeFrom(const TransactionModeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransactionModeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef TransactionModeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    TransactionModeCode_Value_INVALID_UNINITIALIZED;
  static const Value NOT_SUPPORTED =
    TransactionModeCode_Value_NOT_SUPPORTED;
  static const Value BATCH =
    TransactionModeCode_Value_BATCH;
  static const Value TRANSACTION =
    TransactionModeCode_Value_TRANSACTION;
  static const Value BOTH =
    TransactionModeCode_Value_BOTH;
  static inline bool Value_IsValid(int value) {
    return TransactionModeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    TransactionModeCode_Value_Value_MIN;
  static const Value Value_MAX =
    TransactionModeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    TransactionModeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return TransactionModeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return TransactionModeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return TransactionModeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.TransactionModeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::TransactionModeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::TransactionModeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.TransactionModeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TypeDerivationRuleCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.TypeDerivationRuleCode) */ {
 public:
  TypeDerivationRuleCode();
  virtual ~TypeDerivationRuleCode();

  TypeDerivationRuleCode(const TypeDerivationRuleCode& from);

  inline TypeDerivationRuleCode& operator=(const TypeDerivationRuleCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TypeDerivationRuleCode(TypeDerivationRuleCode&& from) noexcept
    : TypeDerivationRuleCode() {
    *this = ::std::move(from);
  }

  inline TypeDerivationRuleCode& operator=(TypeDerivationRuleCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TypeDerivationRuleCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TypeDerivationRuleCode* internal_default_instance() {
    return reinterpret_cast<const TypeDerivationRuleCode*>(
               &_TypeDerivationRuleCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    287;

  void Swap(TypeDerivationRuleCode* other);
  friend void swap(TypeDerivationRuleCode& a, TypeDerivationRuleCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TypeDerivationRuleCode* New() const final {
    return CreateMaybeMessage<TypeDerivationRuleCode>(NULL);
  }

  TypeDerivationRuleCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TypeDerivationRuleCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TypeDerivationRuleCode& from);
  void MergeFrom(const TypeDerivationRuleCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TypeDerivationRuleCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef TypeDerivationRuleCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    TypeDerivationRuleCode_Value_INVALID_UNINITIALIZED;
  static const Value SPECIALIZATION =
    TypeDerivationRuleCode_Value_SPECIALIZATION;
  static const Value CONSTRAINT =
    TypeDerivationRuleCode_Value_CONSTRAINT;
  static inline bool Value_IsValid(int value) {
    return TypeDerivationRuleCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    TypeDerivationRuleCode_Value_Value_MIN;
  static const Value Value_MAX =
    TypeDerivationRuleCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    TypeDerivationRuleCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return TypeDerivationRuleCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return TypeDerivationRuleCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return TypeDerivationRuleCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.TypeDerivationRuleCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::TypeDerivationRuleCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::TypeDerivationRuleCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.TypeDerivationRuleCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TypeRestfulInteractionCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.TypeRestfulInteractionCode) */ {
 public:
  TypeRestfulInteractionCode();
  virtual ~TypeRestfulInteractionCode();

  TypeRestfulInteractionCode(const TypeRestfulInteractionCode& from);

  inline TypeRestfulInteractionCode& operator=(const TypeRestfulInteractionCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TypeRestfulInteractionCode(TypeRestfulInteractionCode&& from) noexcept
    : TypeRestfulInteractionCode() {
    *this = ::std::move(from);
  }

  inline TypeRestfulInteractionCode& operator=(TypeRestfulInteractionCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TypeRestfulInteractionCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TypeRestfulInteractionCode* internal_default_instance() {
    return reinterpret_cast<const TypeRestfulInteractionCode*>(
               &_TypeRestfulInteractionCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    288;

  void Swap(TypeRestfulInteractionCode* other);
  friend void swap(TypeRestfulInteractionCode& a, TypeRestfulInteractionCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TypeRestfulInteractionCode* New() const final {
    return CreateMaybeMessage<TypeRestfulInteractionCode>(NULL);
  }

  TypeRestfulInteractionCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TypeRestfulInteractionCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TypeRestfulInteractionCode& from);
  void MergeFrom(const TypeRestfulInteractionCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TypeRestfulInteractionCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef TypeRestfulInteractionCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    TypeRestfulInteractionCode_Value_INVALID_UNINITIALIZED;
  static const Value READ =
    TypeRestfulInteractionCode_Value_READ;
  static const Value VREAD =
    TypeRestfulInteractionCode_Value_VREAD;
  static const Value UPDATE =
    TypeRestfulInteractionCode_Value_UPDATE;
  static const Value PATCH =
    TypeRestfulInteractionCode_Value_PATCH;
  static const Value DELETE =
    TypeRestfulInteractionCode_Value_DELETE;
  static const Value HISTORY_INSTANCE =
    TypeRestfulInteractionCode_Value_HISTORY_INSTANCE;
  static const Value HISTORY_TYPE =
    TypeRestfulInteractionCode_Value_HISTORY_TYPE;
  static const Value CREATE =
    TypeRestfulInteractionCode_Value_CREATE;
  static const Value SEARCH_TYPE =
    TypeRestfulInteractionCode_Value_SEARCH_TYPE;
  static inline bool Value_IsValid(int value) {
    return TypeRestfulInteractionCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    TypeRestfulInteractionCode_Value_Value_MIN;
  static const Value Value_MAX =
    TypeRestfulInteractionCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    TypeRestfulInteractionCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return TypeRestfulInteractionCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return TypeRestfulInteractionCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return TypeRestfulInteractionCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.TypeRestfulInteractionCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::TypeRestfulInteractionCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::TypeRestfulInteractionCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.TypeRestfulInteractionCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UDIEntryTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.UDIEntryTypeCode) */ {
 public:
  UDIEntryTypeCode();
  virtual ~UDIEntryTypeCode();

  UDIEntryTypeCode(const UDIEntryTypeCode& from);

  inline UDIEntryTypeCode& operator=(const UDIEntryTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UDIEntryTypeCode(UDIEntryTypeCode&& from) noexcept
    : UDIEntryTypeCode() {
    *this = ::std::move(from);
  }

  inline UDIEntryTypeCode& operator=(UDIEntryTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UDIEntryTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UDIEntryTypeCode* internal_default_instance() {
    return reinterpret_cast<const UDIEntryTypeCode*>(
               &_UDIEntryTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    289;

  void Swap(UDIEntryTypeCode* other);
  friend void swap(UDIEntryTypeCode& a, UDIEntryTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UDIEntryTypeCode* New() const final {
    return CreateMaybeMessage<UDIEntryTypeCode>(NULL);
  }

  UDIEntryTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UDIEntryTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UDIEntryTypeCode& from);
  void MergeFrom(const UDIEntryTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UDIEntryTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UDIEntryTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    UDIEntryTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value BARCODE =
    UDIEntryTypeCode_Value_BARCODE;
  static const Value RFID =
    UDIEntryTypeCode_Value_RFID;
  static const Value MANUAL =
    UDIEntryTypeCode_Value_MANUAL;
  static const Value CARD =
    UDIEntryTypeCode_Value_CARD;
  static const Value SELF_REPORTED =
    UDIEntryTypeCode_Value_SELF_REPORTED;
  static const Value UNKNOWN =
    UDIEntryTypeCode_Value_UNKNOWN;
  static inline bool Value_IsValid(int value) {
    return UDIEntryTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    UDIEntryTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    UDIEntryTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    UDIEntryTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return UDIEntryTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return UDIEntryTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return UDIEntryTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.UDIEntryTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::UDIEntryTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::UDIEntryTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.UDIEntryTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnknownContentCodeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.UnknownContentCodeCode) */ {
 public:
  UnknownContentCodeCode();
  virtual ~UnknownContentCodeCode();

  UnknownContentCodeCode(const UnknownContentCodeCode& from);

  inline UnknownContentCodeCode& operator=(const UnknownContentCodeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnknownContentCodeCode(UnknownContentCodeCode&& from) noexcept
    : UnknownContentCodeCode() {
    *this = ::std::move(from);
  }

  inline UnknownContentCodeCode& operator=(UnknownContentCodeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnknownContentCodeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnknownContentCodeCode* internal_default_instance() {
    return reinterpret_cast<const UnknownContentCodeCode*>(
               &_UnknownContentCodeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    290;

  void Swap(UnknownContentCodeCode* other);
  friend void swap(UnknownContentCodeCode& a, UnknownContentCodeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnknownContentCodeCode* New() const final {
    return CreateMaybeMessage<UnknownContentCodeCode>(NULL);
  }

  UnknownContentCodeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UnknownContentCodeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UnknownContentCodeCode& from);
  void MergeFrom(const UnknownContentCodeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnknownContentCodeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UnknownContentCodeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    UnknownContentCodeCode_Value_INVALID_UNINITIALIZED;
  static const Value NO =
    UnknownContentCodeCode_Value_NO;
  static const Value EXTENSIONS =
    UnknownContentCodeCode_Value_EXTENSIONS;
  static const Value ELEMENTS =
    UnknownContentCodeCode_Value_ELEMENTS;
  static const Value BOTH =
    UnknownContentCodeCode_Value_BOTH;
  static inline bool Value_IsValid(int value) {
    return UnknownContentCodeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    UnknownContentCodeCode_Value_Value_MIN;
  static const Value Value_MAX =
    UnknownContentCodeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    UnknownContentCodeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return UnknownContentCodeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return UnknownContentCodeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return UnknownContentCodeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.UnknownContentCodeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::UnknownContentCodeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::UnknownContentCodeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.UnknownContentCodeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsageContextTypeCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.UsageContextTypeCode) */ {
 public:
  UsageContextTypeCode();
  virtual ~UsageContextTypeCode();

  UsageContextTypeCode(const UsageContextTypeCode& from);

  inline UsageContextTypeCode& operator=(const UsageContextTypeCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsageContextTypeCode(UsageContextTypeCode&& from) noexcept
    : UsageContextTypeCode() {
    *this = ::std::move(from);
  }

  inline UsageContextTypeCode& operator=(UsageContextTypeCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsageContextTypeCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsageContextTypeCode* internal_default_instance() {
    return reinterpret_cast<const UsageContextTypeCode*>(
               &_UsageContextTypeCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    291;

  void Swap(UsageContextTypeCode* other);
  friend void swap(UsageContextTypeCode& a, UsageContextTypeCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsageContextTypeCode* New() const final {
    return CreateMaybeMessage<UsageContextTypeCode>(NULL);
  }

  UsageContextTypeCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsageContextTypeCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsageContextTypeCode& from);
  void MergeFrom(const UsageContextTypeCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsageContextTypeCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UsageContextTypeCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    UsageContextTypeCode_Value_INVALID_UNINITIALIZED;
  static const Value GENDER =
    UsageContextTypeCode_Value_GENDER;
  static const Value AGE =
    UsageContextTypeCode_Value_AGE;
  static const Value FOCUS =
    UsageContextTypeCode_Value_FOCUS;
  static const Value USER =
    UsageContextTypeCode_Value_USER;
  static const Value WORKFLOW =
    UsageContextTypeCode_Value_WORKFLOW;
  static const Value TASK =
    UsageContextTypeCode_Value_TASK;
  static const Value VENUE =
    UsageContextTypeCode_Value_VENUE;
  static const Value SPECIES =
    UsageContextTypeCode_Value_SPECIES;
  static inline bool Value_IsValid(int value) {
    return UsageContextTypeCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    UsageContextTypeCode_Value_Value_MIN;
  static const Value Value_MAX =
    UsageContextTypeCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    UsageContextTypeCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return UsageContextTypeCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return UsageContextTypeCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return UsageContextTypeCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.UsageContextTypeCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::UsageContextTypeCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::UsageContextTypeCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.UsageContextTypeCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfidentialityClassificationCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ConfidentialityClassificationCode) */ {
 public:
  ConfidentialityClassificationCode();
  virtual ~ConfidentialityClassificationCode();

  ConfidentialityClassificationCode(const ConfidentialityClassificationCode& from);

  inline ConfidentialityClassificationCode& operator=(const ConfidentialityClassificationCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfidentialityClassificationCode(ConfidentialityClassificationCode&& from) noexcept
    : ConfidentialityClassificationCode() {
    *this = ::std::move(from);
  }

  inline ConfidentialityClassificationCode& operator=(ConfidentialityClassificationCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfidentialityClassificationCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfidentialityClassificationCode* internal_default_instance() {
    return reinterpret_cast<const ConfidentialityClassificationCode*>(
               &_ConfidentialityClassificationCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    292;

  void Swap(ConfidentialityClassificationCode* other);
  friend void swap(ConfidentialityClassificationCode& a, ConfidentialityClassificationCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfidentialityClassificationCode* New() const final {
    return CreateMaybeMessage<ConfidentialityClassificationCode>(NULL);
  }

  ConfidentialityClassificationCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfidentialityClassificationCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfidentialityClassificationCode& from);
  void MergeFrom(const ConfidentialityClassificationCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfidentialityClassificationCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ConfidentialityClassificationCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ConfidentialityClassificationCode_Value_INVALID_UNINITIALIZED;
  static const Value U =
    ConfidentialityClassificationCode_Value_U;
  static const Value L =
    ConfidentialityClassificationCode_Value_L;
  static const Value M =
    ConfidentialityClassificationCode_Value_M;
  static const Value N =
    ConfidentialityClassificationCode_Value_N;
  static const Value R =
    ConfidentialityClassificationCode_Value_R;
  static const Value V =
    ConfidentialityClassificationCode_Value_V;
  static inline bool Value_IsValid(int value) {
    return ConfidentialityClassificationCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ConfidentialityClassificationCode_Value_Value_MIN;
  static const Value Value_MAX =
    ConfidentialityClassificationCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ConfidentialityClassificationCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ConfidentialityClassificationCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ConfidentialityClassificationCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ConfidentialityClassificationCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ConfidentialityClassificationCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ConfidentialityClassificationCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ConfidentialityClassificationCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ConfidentialityClassificationCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VaccinationProtocolDoseStatuscodesCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.VaccinationProtocolDoseStatuscodesCode) */ {
 public:
  VaccinationProtocolDoseStatuscodesCode();
  virtual ~VaccinationProtocolDoseStatuscodesCode();

  VaccinationProtocolDoseStatuscodesCode(const VaccinationProtocolDoseStatuscodesCode& from);

  inline VaccinationProtocolDoseStatuscodesCode& operator=(const VaccinationProtocolDoseStatuscodesCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VaccinationProtocolDoseStatuscodesCode(VaccinationProtocolDoseStatuscodesCode&& from) noexcept
    : VaccinationProtocolDoseStatuscodesCode() {
    *this = ::std::move(from);
  }

  inline VaccinationProtocolDoseStatuscodesCode& operator=(VaccinationProtocolDoseStatuscodesCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VaccinationProtocolDoseStatuscodesCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VaccinationProtocolDoseStatuscodesCode* internal_default_instance() {
    return reinterpret_cast<const VaccinationProtocolDoseStatuscodesCode*>(
               &_VaccinationProtocolDoseStatuscodesCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    293;

  void Swap(VaccinationProtocolDoseStatuscodesCode* other);
  friend void swap(VaccinationProtocolDoseStatuscodesCode& a, VaccinationProtocolDoseStatuscodesCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VaccinationProtocolDoseStatuscodesCode* New() const final {
    return CreateMaybeMessage<VaccinationProtocolDoseStatuscodesCode>(NULL);
  }

  VaccinationProtocolDoseStatuscodesCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VaccinationProtocolDoseStatuscodesCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VaccinationProtocolDoseStatuscodesCode& from);
  void MergeFrom(const VaccinationProtocolDoseStatuscodesCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VaccinationProtocolDoseStatuscodesCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef VaccinationProtocolDoseStatuscodesCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    VaccinationProtocolDoseStatuscodesCode_Value_INVALID_UNINITIALIZED;
  static const Value COUNT =
    VaccinationProtocolDoseStatuscodesCode_Value_COUNT;
  static const Value NOCOUNT =
    VaccinationProtocolDoseStatuscodesCode_Value_NOCOUNT;
  static inline bool Value_IsValid(int value) {
    return VaccinationProtocolDoseStatuscodesCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    VaccinationProtocolDoseStatuscodesCode_Value_Value_MIN;
  static const Value Value_MAX =
    VaccinationProtocolDoseStatuscodesCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    VaccinationProtocolDoseStatuscodesCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return VaccinationProtocolDoseStatuscodesCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return VaccinationProtocolDoseStatuscodesCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return VaccinationProtocolDoseStatuscodesCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.VaccinationProtocolDoseStatuscodesCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::VaccinationProtocolDoseStatuscodesCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::VaccinationProtocolDoseStatuscodesCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.VaccinationProtocolDoseStatuscodesCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VaccinationProtocolDoseStatusReasoncodesCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.VaccinationProtocolDoseStatusReasoncodesCode) */ {
 public:
  VaccinationProtocolDoseStatusReasoncodesCode();
  virtual ~VaccinationProtocolDoseStatusReasoncodesCode();

  VaccinationProtocolDoseStatusReasoncodesCode(const VaccinationProtocolDoseStatusReasoncodesCode& from);

  inline VaccinationProtocolDoseStatusReasoncodesCode& operator=(const VaccinationProtocolDoseStatusReasoncodesCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VaccinationProtocolDoseStatusReasoncodesCode(VaccinationProtocolDoseStatusReasoncodesCode&& from) noexcept
    : VaccinationProtocolDoseStatusReasoncodesCode() {
    *this = ::std::move(from);
  }

  inline VaccinationProtocolDoseStatusReasoncodesCode& operator=(VaccinationProtocolDoseStatusReasoncodesCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VaccinationProtocolDoseStatusReasoncodesCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VaccinationProtocolDoseStatusReasoncodesCode* internal_default_instance() {
    return reinterpret_cast<const VaccinationProtocolDoseStatusReasoncodesCode*>(
               &_VaccinationProtocolDoseStatusReasoncodesCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    294;

  void Swap(VaccinationProtocolDoseStatusReasoncodesCode* other);
  friend void swap(VaccinationProtocolDoseStatusReasoncodesCode& a, VaccinationProtocolDoseStatusReasoncodesCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VaccinationProtocolDoseStatusReasoncodesCode* New() const final {
    return CreateMaybeMessage<VaccinationProtocolDoseStatusReasoncodesCode>(NULL);
  }

  VaccinationProtocolDoseStatusReasoncodesCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VaccinationProtocolDoseStatusReasoncodesCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VaccinationProtocolDoseStatusReasoncodesCode& from);
  void MergeFrom(const VaccinationProtocolDoseStatusReasoncodesCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VaccinationProtocolDoseStatusReasoncodesCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef VaccinationProtocolDoseStatusReasoncodesCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    VaccinationProtocolDoseStatusReasoncodesCode_Value_INVALID_UNINITIALIZED;
  static const Value ADVSTORAGE =
    VaccinationProtocolDoseStatusReasoncodesCode_Value_ADVSTORAGE;
  static const Value COLDCHBRK =
    VaccinationProtocolDoseStatusReasoncodesCode_Value_COLDCHBRK;
  static const Value EXPLOT =
    VaccinationProtocolDoseStatusReasoncodesCode_Value_EXPLOT;
  static const Value OUTSIDESCHED =
    VaccinationProtocolDoseStatusReasoncodesCode_Value_OUTSIDESCHED;
  static const Value PRODRECALL =
    VaccinationProtocolDoseStatusReasoncodesCode_Value_PRODRECALL;
  static inline bool Value_IsValid(int value) {
    return VaccinationProtocolDoseStatusReasoncodesCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    VaccinationProtocolDoseStatusReasoncodesCode_Value_Value_MIN;
  static const Value Value_MAX =
    VaccinationProtocolDoseStatusReasoncodesCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    VaccinationProtocolDoseStatusReasoncodesCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return VaccinationProtocolDoseStatusReasoncodesCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return VaccinationProtocolDoseStatusReasoncodesCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return VaccinationProtocolDoseStatusReasoncodesCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.VaccinationProtocolDoseStatusReasoncodesCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::VaccinationProtocolDoseStatusReasoncodesCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::VaccinationProtocolDoseStatusReasoncodesCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.VaccinationProtocolDoseStatusReasoncodesCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class sequenceStatusCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.sequenceStatusCode) */ {
 public:
  sequenceStatusCode();
  virtual ~sequenceStatusCode();

  sequenceStatusCode(const sequenceStatusCode& from);

  inline sequenceStatusCode& operator=(const sequenceStatusCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  sequenceStatusCode(sequenceStatusCode&& from) noexcept
    : sequenceStatusCode() {
    *this = ::std::move(from);
  }

  inline sequenceStatusCode& operator=(sequenceStatusCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const sequenceStatusCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const sequenceStatusCode* internal_default_instance() {
    return reinterpret_cast<const sequenceStatusCode*>(
               &_sequenceStatusCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    295;

  void Swap(sequenceStatusCode* other);
  friend void swap(sequenceStatusCode& a, sequenceStatusCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline sequenceStatusCode* New() const final {
    return CreateMaybeMessage<sequenceStatusCode>(NULL);
  }

  sequenceStatusCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<sequenceStatusCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const sequenceStatusCode& from);
  void MergeFrom(const sequenceStatusCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(sequenceStatusCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef sequenceStatusCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    sequenceStatusCode_Value_INVALID_UNINITIALIZED;
  static const Value POSITIVE =
    sequenceStatusCode_Value_POSITIVE;
  static const Value NEGATIVE =
    sequenceStatusCode_Value_NEGATIVE;
  static const Value ABSENT =
    sequenceStatusCode_Value_ABSENT;
  static inline bool Value_IsValid(int value) {
    return sequenceStatusCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    sequenceStatusCode_Value_Value_MIN;
  static const Value Value_MAX =
    sequenceStatusCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    sequenceStatusCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return sequenceStatusCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return sequenceStatusCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return sequenceStatusCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.sequenceStatusCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::sequenceStatusCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::sequenceStatusCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.sequenceStatusCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResourceVersionPolicyCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ResourceVersionPolicyCode) */ {
 public:
  ResourceVersionPolicyCode();
  virtual ~ResourceVersionPolicyCode();

  ResourceVersionPolicyCode(const ResourceVersionPolicyCode& from);

  inline ResourceVersionPolicyCode& operator=(const ResourceVersionPolicyCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResourceVersionPolicyCode(ResourceVersionPolicyCode&& from) noexcept
    : ResourceVersionPolicyCode() {
    *this = ::std::move(from);
  }

  inline ResourceVersionPolicyCode& operator=(ResourceVersionPolicyCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceVersionPolicyCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResourceVersionPolicyCode* internal_default_instance() {
    return reinterpret_cast<const ResourceVersionPolicyCode*>(
               &_ResourceVersionPolicyCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    296;

  void Swap(ResourceVersionPolicyCode* other);
  friend void swap(ResourceVersionPolicyCode& a, ResourceVersionPolicyCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResourceVersionPolicyCode* New() const final {
    return CreateMaybeMessage<ResourceVersionPolicyCode>(NULL);
  }

  ResourceVersionPolicyCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResourceVersionPolicyCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResourceVersionPolicyCode& from);
  void MergeFrom(const ResourceVersionPolicyCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResourceVersionPolicyCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ResourceVersionPolicyCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    ResourceVersionPolicyCode_Value_INVALID_UNINITIALIZED;
  static const Value NO_VERSION =
    ResourceVersionPolicyCode_Value_NO_VERSION;
  static const Value VERSIONED =
    ResourceVersionPolicyCode_Value_VERSIONED;
  static const Value VERSIONED_UPDATE =
    ResourceVersionPolicyCode_Value_VERSIONED_UPDATE;
  static inline bool Value_IsValid(int value) {
    return ResourceVersionPolicyCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    ResourceVersionPolicyCode_Value_Value_MIN;
  static const Value Value_MAX =
    ResourceVersionPolicyCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    ResourceVersionPolicyCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return ResourceVersionPolicyCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return ResourceVersionPolicyCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return ResourceVersionPolicyCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ResourceVersionPolicyCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::ResourceVersionPolicyCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::ResourceVersionPolicyCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ResourceVersionPolicyCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VisionBaseCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.VisionBaseCode) */ {
 public:
  VisionBaseCode();
  virtual ~VisionBaseCode();

  VisionBaseCode(const VisionBaseCode& from);

  inline VisionBaseCode& operator=(const VisionBaseCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VisionBaseCode(VisionBaseCode&& from) noexcept
    : VisionBaseCode() {
    *this = ::std::move(from);
  }

  inline VisionBaseCode& operator=(VisionBaseCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VisionBaseCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VisionBaseCode* internal_default_instance() {
    return reinterpret_cast<const VisionBaseCode*>(
               &_VisionBaseCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    297;

  void Swap(VisionBaseCode* other);
  friend void swap(VisionBaseCode& a, VisionBaseCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VisionBaseCode* New() const final {
    return CreateMaybeMessage<VisionBaseCode>(NULL);
  }

  VisionBaseCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VisionBaseCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VisionBaseCode& from);
  void MergeFrom(const VisionBaseCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VisionBaseCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef VisionBaseCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    VisionBaseCode_Value_INVALID_UNINITIALIZED;
  static const Value UP =
    VisionBaseCode_Value_UP;
  static const Value DOWN =
    VisionBaseCode_Value_DOWN;
  static const Value IN =
    VisionBaseCode_Value_IN;
  static const Value OUT =
    VisionBaseCode_Value_OUT;
  static inline bool Value_IsValid(int value) {
    return VisionBaseCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    VisionBaseCode_Value_Value_MIN;
  static const Value Value_MAX =
    VisionBaseCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    VisionBaseCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return VisionBaseCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return VisionBaseCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return VisionBaseCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.VisionBaseCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::VisionBaseCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::VisionBaseCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.VisionBaseCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VisionEyesCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.VisionEyesCode) */ {
 public:
  VisionEyesCode();
  virtual ~VisionEyesCode();

  VisionEyesCode(const VisionEyesCode& from);

  inline VisionEyesCode& operator=(const VisionEyesCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VisionEyesCode(VisionEyesCode&& from) noexcept
    : VisionEyesCode() {
    *this = ::std::move(from);
  }

  inline VisionEyesCode& operator=(VisionEyesCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VisionEyesCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VisionEyesCode* internal_default_instance() {
    return reinterpret_cast<const VisionEyesCode*>(
               &_VisionEyesCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    298;

  void Swap(VisionEyesCode* other);
  friend void swap(VisionEyesCode& a, VisionEyesCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VisionEyesCode* New() const final {
    return CreateMaybeMessage<VisionEyesCode>(NULL);
  }

  VisionEyesCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VisionEyesCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VisionEyesCode& from);
  void MergeFrom(const VisionEyesCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VisionEyesCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef VisionEyesCode_Value Value;
  static const Value INVALID_UNINITIALIZED =
    VisionEyesCode_Value_INVALID_UNINITIALIZED;
  static const Value RIGHT =
    VisionEyesCode_Value_RIGHT;
  static const Value LEFT =
    VisionEyesCode_Value_LEFT;
  static inline bool Value_IsValid(int value) {
    return VisionEyesCode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    VisionEyesCode_Value_Value_MIN;
  static const Value Value_MAX =
    VisionEyesCode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    VisionEyesCode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return VisionEyesCode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return VisionEyesCode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return VisionEyesCode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.VisionEyesCode.Value value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::fhir::stu3::proto::VisionEyesCode_Value value() const;
  void set_value(::google::fhir::stu3::proto::VisionEyesCode_Value value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.VisionEyesCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fcodes_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AbstractTypeCode

// .google.fhir.stu3.proto.AbstractTypeCode.Value value = 1;
inline void AbstractTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::AbstractTypeCode_Value AbstractTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AbstractTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::AbstractTypeCode_Value >(value_);
}
inline void AbstractTypeCode::set_value(::google::fhir::stu3::proto::AbstractTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.AbstractTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool AbstractTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& AbstractTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& AbstractTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AbstractTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* AbstractTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.AbstractTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* AbstractTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AbstractTypeCode.id)
  return id_;
}
inline void AbstractTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.AbstractTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int AbstractTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* AbstractTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AbstractTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
AbstractTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.AbstractTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& AbstractTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AbstractTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* AbstractTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.AbstractTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
AbstractTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.AbstractTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// AggregationModeCode

// .google.fhir.stu3.proto.AggregationModeCode.Value value = 1;
inline void AggregationModeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::AggregationModeCode_Value AggregationModeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AggregationModeCode.value)
  return static_cast< ::google::fhir::stu3::proto::AggregationModeCode_Value >(value_);
}
inline void AggregationModeCode::set_value(::google::fhir::stu3::proto::AggregationModeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.AggregationModeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool AggregationModeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& AggregationModeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& AggregationModeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AggregationModeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* AggregationModeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.AggregationModeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* AggregationModeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AggregationModeCode.id)
  return id_;
}
inline void AggregationModeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.AggregationModeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int AggregationModeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* AggregationModeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AggregationModeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
AggregationModeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.AggregationModeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& AggregationModeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AggregationModeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* AggregationModeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.AggregationModeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
AggregationModeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.AggregationModeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// BindingStrengthCode

// .google.fhir.stu3.proto.BindingStrengthCode.Value value = 1;
inline void BindingStrengthCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::BindingStrengthCode_Value BindingStrengthCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.BindingStrengthCode.value)
  return static_cast< ::google::fhir::stu3::proto::BindingStrengthCode_Value >(value_);
}
inline void BindingStrengthCode::set_value(::google::fhir::stu3::proto::BindingStrengthCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.BindingStrengthCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool BindingStrengthCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& BindingStrengthCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& BindingStrengthCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.BindingStrengthCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* BindingStrengthCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.BindingStrengthCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* BindingStrengthCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.BindingStrengthCode.id)
  return id_;
}
inline void BindingStrengthCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.BindingStrengthCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int BindingStrengthCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* BindingStrengthCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.BindingStrengthCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
BindingStrengthCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.BindingStrengthCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& BindingStrengthCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.BindingStrengthCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* BindingStrengthCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.BindingStrengthCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
BindingStrengthCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.BindingStrengthCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ConstraintSeverityCode

// .google.fhir.stu3.proto.ConstraintSeverityCode.Value value = 1;
inline void ConstraintSeverityCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ConstraintSeverityCode_Value ConstraintSeverityCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConstraintSeverityCode.value)
  return static_cast< ::google::fhir::stu3::proto::ConstraintSeverityCode_Value >(value_);
}
inline void ConstraintSeverityCode::set_value(::google::fhir::stu3::proto::ConstraintSeverityCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ConstraintSeverityCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ConstraintSeverityCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ConstraintSeverityCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ConstraintSeverityCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConstraintSeverityCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ConstraintSeverityCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ConstraintSeverityCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ConstraintSeverityCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ConstraintSeverityCode.id)
  return id_;
}
inline void ConstraintSeverityCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ConstraintSeverityCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ConstraintSeverityCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ConstraintSeverityCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ConstraintSeverityCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ConstraintSeverityCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ConstraintSeverityCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ConstraintSeverityCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConstraintSeverityCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ConstraintSeverityCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ConstraintSeverityCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ConstraintSeverityCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ConstraintSeverityCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// SlicingRulesCode

// .google.fhir.stu3.proto.SlicingRulesCode.Value value = 1;
inline void SlicingRulesCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::SlicingRulesCode_Value SlicingRulesCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SlicingRulesCode.value)
  return static_cast< ::google::fhir::stu3::proto::SlicingRulesCode_Value >(value_);
}
inline void SlicingRulesCode::set_value(::google::fhir::stu3::proto::SlicingRulesCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.SlicingRulesCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool SlicingRulesCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& SlicingRulesCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& SlicingRulesCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SlicingRulesCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* SlicingRulesCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.SlicingRulesCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* SlicingRulesCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SlicingRulesCode.id)
  return id_;
}
inline void SlicingRulesCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.SlicingRulesCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int SlicingRulesCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* SlicingRulesCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SlicingRulesCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
SlicingRulesCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.SlicingRulesCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& SlicingRulesCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SlicingRulesCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* SlicingRulesCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.SlicingRulesCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
SlicingRulesCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.SlicingRulesCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// DiscriminatorTypeCode

// .google.fhir.stu3.proto.DiscriminatorTypeCode.Value value = 1;
inline void DiscriminatorTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::DiscriminatorTypeCode_Value DiscriminatorTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DiscriminatorTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::DiscriminatorTypeCode_Value >(value_);
}
inline void DiscriminatorTypeCode::set_value(::google::fhir::stu3::proto::DiscriminatorTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.DiscriminatorTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool DiscriminatorTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& DiscriminatorTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& DiscriminatorTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DiscriminatorTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* DiscriminatorTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DiscriminatorTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* DiscriminatorTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DiscriminatorTypeCode.id)
  return id_;
}
inline void DiscriminatorTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DiscriminatorTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int DiscriminatorTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* DiscriminatorTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DiscriminatorTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
DiscriminatorTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DiscriminatorTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& DiscriminatorTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DiscriminatorTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* DiscriminatorTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DiscriminatorTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
DiscriminatorTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DiscriminatorTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// PropertyRepresentationCode

// .google.fhir.stu3.proto.PropertyRepresentationCode.Value value = 1;
inline void PropertyRepresentationCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::PropertyRepresentationCode_Value PropertyRepresentationCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.PropertyRepresentationCode.value)
  return static_cast< ::google::fhir::stu3::proto::PropertyRepresentationCode_Value >(value_);
}
inline void PropertyRepresentationCode::set_value(::google::fhir::stu3::proto::PropertyRepresentationCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.PropertyRepresentationCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool PropertyRepresentationCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& PropertyRepresentationCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& PropertyRepresentationCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.PropertyRepresentationCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* PropertyRepresentationCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.PropertyRepresentationCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* PropertyRepresentationCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.PropertyRepresentationCode.id)
  return id_;
}
inline void PropertyRepresentationCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.PropertyRepresentationCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int PropertyRepresentationCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* PropertyRepresentationCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.PropertyRepresentationCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
PropertyRepresentationCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.PropertyRepresentationCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& PropertyRepresentationCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.PropertyRepresentationCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* PropertyRepresentationCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.PropertyRepresentationCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
PropertyRepresentationCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.PropertyRepresentationCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ReferenceVersionRulesCode

// .google.fhir.stu3.proto.ReferenceVersionRulesCode.Value value = 1;
inline void ReferenceVersionRulesCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ReferenceVersionRulesCode_Value ReferenceVersionRulesCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ReferenceVersionRulesCode.value)
  return static_cast< ::google::fhir::stu3::proto::ReferenceVersionRulesCode_Value >(value_);
}
inline void ReferenceVersionRulesCode::set_value(::google::fhir::stu3::proto::ReferenceVersionRulesCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ReferenceVersionRulesCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ReferenceVersionRulesCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ReferenceVersionRulesCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ReferenceVersionRulesCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ReferenceVersionRulesCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ReferenceVersionRulesCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ReferenceVersionRulesCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ReferenceVersionRulesCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ReferenceVersionRulesCode.id)
  return id_;
}
inline void ReferenceVersionRulesCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ReferenceVersionRulesCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ReferenceVersionRulesCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ReferenceVersionRulesCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ReferenceVersionRulesCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ReferenceVersionRulesCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ReferenceVersionRulesCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ReferenceVersionRulesCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ReferenceVersionRulesCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ReferenceVersionRulesCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ReferenceVersionRulesCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ReferenceVersionRulesCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ReferenceVersionRulesCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// AccountStatusCode

// .google.fhir.stu3.proto.AccountStatusCode.Value value = 1;
inline void AccountStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::AccountStatusCode_Value AccountStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AccountStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::AccountStatusCode_Value >(value_);
}
inline void AccountStatusCode::set_value(::google::fhir::stu3::proto::AccountStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.AccountStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool AccountStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& AccountStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& AccountStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AccountStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* AccountStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.AccountStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* AccountStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AccountStatusCode.id)
  return id_;
}
inline void AccountStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.AccountStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int AccountStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* AccountStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AccountStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
AccountStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.AccountStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& AccountStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AccountStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* AccountStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.AccountStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
AccountStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.AccountStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ActionCardinalityBehaviorCode

// .google.fhir.stu3.proto.ActionCardinalityBehaviorCode.Value value = 1;
inline void ActionCardinalityBehaviorCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ActionCardinalityBehaviorCode_Value ActionCardinalityBehaviorCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActionCardinalityBehaviorCode.value)
  return static_cast< ::google::fhir::stu3::proto::ActionCardinalityBehaviorCode_Value >(value_);
}
inline void ActionCardinalityBehaviorCode::set_value(::google::fhir::stu3::proto::ActionCardinalityBehaviorCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ActionCardinalityBehaviorCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ActionCardinalityBehaviorCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ActionCardinalityBehaviorCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ActionCardinalityBehaviorCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActionCardinalityBehaviorCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ActionCardinalityBehaviorCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ActionCardinalityBehaviorCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ActionCardinalityBehaviorCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ActionCardinalityBehaviorCode.id)
  return id_;
}
inline void ActionCardinalityBehaviorCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ActionCardinalityBehaviorCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ActionCardinalityBehaviorCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ActionCardinalityBehaviorCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ActionCardinalityBehaviorCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ActionCardinalityBehaviorCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ActionCardinalityBehaviorCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ActionCardinalityBehaviorCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActionCardinalityBehaviorCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ActionCardinalityBehaviorCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ActionCardinalityBehaviorCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ActionCardinalityBehaviorCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ActionCardinalityBehaviorCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ActionConditionKindCode

// .google.fhir.stu3.proto.ActionConditionKindCode.Value value = 1;
inline void ActionConditionKindCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ActionConditionKindCode_Value ActionConditionKindCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActionConditionKindCode.value)
  return static_cast< ::google::fhir::stu3::proto::ActionConditionKindCode_Value >(value_);
}
inline void ActionConditionKindCode::set_value(::google::fhir::stu3::proto::ActionConditionKindCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ActionConditionKindCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ActionConditionKindCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ActionConditionKindCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ActionConditionKindCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActionConditionKindCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ActionConditionKindCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ActionConditionKindCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ActionConditionKindCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ActionConditionKindCode.id)
  return id_;
}
inline void ActionConditionKindCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ActionConditionKindCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ActionConditionKindCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ActionConditionKindCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ActionConditionKindCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ActionConditionKindCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ActionConditionKindCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ActionConditionKindCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActionConditionKindCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ActionConditionKindCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ActionConditionKindCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ActionConditionKindCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ActionConditionKindCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ActionGroupingBehaviorCode

// .google.fhir.stu3.proto.ActionGroupingBehaviorCode.Value value = 1;
inline void ActionGroupingBehaviorCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ActionGroupingBehaviorCode_Value ActionGroupingBehaviorCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActionGroupingBehaviorCode.value)
  return static_cast< ::google::fhir::stu3::proto::ActionGroupingBehaviorCode_Value >(value_);
}
inline void ActionGroupingBehaviorCode::set_value(::google::fhir::stu3::proto::ActionGroupingBehaviorCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ActionGroupingBehaviorCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ActionGroupingBehaviorCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ActionGroupingBehaviorCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ActionGroupingBehaviorCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActionGroupingBehaviorCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ActionGroupingBehaviorCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ActionGroupingBehaviorCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ActionGroupingBehaviorCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ActionGroupingBehaviorCode.id)
  return id_;
}
inline void ActionGroupingBehaviorCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ActionGroupingBehaviorCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ActionGroupingBehaviorCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ActionGroupingBehaviorCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ActionGroupingBehaviorCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ActionGroupingBehaviorCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ActionGroupingBehaviorCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ActionGroupingBehaviorCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActionGroupingBehaviorCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ActionGroupingBehaviorCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ActionGroupingBehaviorCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ActionGroupingBehaviorCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ActionGroupingBehaviorCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ActionListCode

// .google.fhir.stu3.proto.ActionListCode.Value value = 1;
inline void ActionListCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ActionListCode_Value ActionListCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActionListCode.value)
  return static_cast< ::google::fhir::stu3::proto::ActionListCode_Value >(value_);
}
inline void ActionListCode::set_value(::google::fhir::stu3::proto::ActionListCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ActionListCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ActionListCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ActionListCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ActionListCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActionListCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ActionListCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ActionListCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ActionListCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ActionListCode.id)
  return id_;
}
inline void ActionListCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ActionListCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ActionListCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ActionListCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ActionListCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ActionListCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ActionListCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ActionListCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActionListCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ActionListCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ActionListCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ActionListCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ActionListCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ActionParticipantTypeCode

// .google.fhir.stu3.proto.ActionParticipantTypeCode.Value value = 1;
inline void ActionParticipantTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ActionParticipantTypeCode_Value ActionParticipantTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActionParticipantTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::ActionParticipantTypeCode_Value >(value_);
}
inline void ActionParticipantTypeCode::set_value(::google::fhir::stu3::proto::ActionParticipantTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ActionParticipantTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ActionParticipantTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ActionParticipantTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ActionParticipantTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActionParticipantTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ActionParticipantTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ActionParticipantTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ActionParticipantTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ActionParticipantTypeCode.id)
  return id_;
}
inline void ActionParticipantTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ActionParticipantTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ActionParticipantTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ActionParticipantTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ActionParticipantTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ActionParticipantTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ActionParticipantTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ActionParticipantTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActionParticipantTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ActionParticipantTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ActionParticipantTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ActionParticipantTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ActionParticipantTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ActionPrecheckBehaviorCode

// .google.fhir.stu3.proto.ActionPrecheckBehaviorCode.Value value = 1;
inline void ActionPrecheckBehaviorCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ActionPrecheckBehaviorCode_Value ActionPrecheckBehaviorCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActionPrecheckBehaviorCode.value)
  return static_cast< ::google::fhir::stu3::proto::ActionPrecheckBehaviorCode_Value >(value_);
}
inline void ActionPrecheckBehaviorCode::set_value(::google::fhir::stu3::proto::ActionPrecheckBehaviorCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ActionPrecheckBehaviorCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ActionPrecheckBehaviorCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ActionPrecheckBehaviorCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ActionPrecheckBehaviorCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActionPrecheckBehaviorCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ActionPrecheckBehaviorCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ActionPrecheckBehaviorCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ActionPrecheckBehaviorCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ActionPrecheckBehaviorCode.id)
  return id_;
}
inline void ActionPrecheckBehaviorCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ActionPrecheckBehaviorCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ActionPrecheckBehaviorCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ActionPrecheckBehaviorCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ActionPrecheckBehaviorCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ActionPrecheckBehaviorCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ActionPrecheckBehaviorCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ActionPrecheckBehaviorCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActionPrecheckBehaviorCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ActionPrecheckBehaviorCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ActionPrecheckBehaviorCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ActionPrecheckBehaviorCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ActionPrecheckBehaviorCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ActionRelationshipTypeCode

// .google.fhir.stu3.proto.ActionRelationshipTypeCode.Value value = 1;
inline void ActionRelationshipTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ActionRelationshipTypeCode_Value ActionRelationshipTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActionRelationshipTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::ActionRelationshipTypeCode_Value >(value_);
}
inline void ActionRelationshipTypeCode::set_value(::google::fhir::stu3::proto::ActionRelationshipTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ActionRelationshipTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ActionRelationshipTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ActionRelationshipTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ActionRelationshipTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActionRelationshipTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ActionRelationshipTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ActionRelationshipTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ActionRelationshipTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ActionRelationshipTypeCode.id)
  return id_;
}
inline void ActionRelationshipTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ActionRelationshipTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ActionRelationshipTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ActionRelationshipTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ActionRelationshipTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ActionRelationshipTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ActionRelationshipTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ActionRelationshipTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActionRelationshipTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ActionRelationshipTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ActionRelationshipTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ActionRelationshipTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ActionRelationshipTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ActionRequiredBehaviorCode

// .google.fhir.stu3.proto.ActionRequiredBehaviorCode.Value value = 1;
inline void ActionRequiredBehaviorCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ActionRequiredBehaviorCode_Value ActionRequiredBehaviorCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActionRequiredBehaviorCode.value)
  return static_cast< ::google::fhir::stu3::proto::ActionRequiredBehaviorCode_Value >(value_);
}
inline void ActionRequiredBehaviorCode::set_value(::google::fhir::stu3::proto::ActionRequiredBehaviorCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ActionRequiredBehaviorCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ActionRequiredBehaviorCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ActionRequiredBehaviorCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ActionRequiredBehaviorCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActionRequiredBehaviorCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ActionRequiredBehaviorCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ActionRequiredBehaviorCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ActionRequiredBehaviorCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ActionRequiredBehaviorCode.id)
  return id_;
}
inline void ActionRequiredBehaviorCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ActionRequiredBehaviorCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ActionRequiredBehaviorCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ActionRequiredBehaviorCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ActionRequiredBehaviorCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ActionRequiredBehaviorCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ActionRequiredBehaviorCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ActionRequiredBehaviorCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActionRequiredBehaviorCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ActionRequiredBehaviorCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ActionRequiredBehaviorCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ActionRequiredBehaviorCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ActionRequiredBehaviorCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ActionSelectionBehaviorCode

// .google.fhir.stu3.proto.ActionSelectionBehaviorCode.Value value = 1;
inline void ActionSelectionBehaviorCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ActionSelectionBehaviorCode_Value ActionSelectionBehaviorCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActionSelectionBehaviorCode.value)
  return static_cast< ::google::fhir::stu3::proto::ActionSelectionBehaviorCode_Value >(value_);
}
inline void ActionSelectionBehaviorCode::set_value(::google::fhir::stu3::proto::ActionSelectionBehaviorCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ActionSelectionBehaviorCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ActionSelectionBehaviorCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ActionSelectionBehaviorCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ActionSelectionBehaviorCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActionSelectionBehaviorCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ActionSelectionBehaviorCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ActionSelectionBehaviorCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ActionSelectionBehaviorCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ActionSelectionBehaviorCode.id)
  return id_;
}
inline void ActionSelectionBehaviorCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ActionSelectionBehaviorCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ActionSelectionBehaviorCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ActionSelectionBehaviorCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ActionSelectionBehaviorCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ActionSelectionBehaviorCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ActionSelectionBehaviorCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ActionSelectionBehaviorCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActionSelectionBehaviorCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ActionSelectionBehaviorCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ActionSelectionBehaviorCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ActionSelectionBehaviorCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ActionSelectionBehaviorCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ActionTypeCode

// .google.fhir.stu3.proto.ActionTypeCode.Value value = 1;
inline void ActionTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ActionTypeCode_Value ActionTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActionTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::ActionTypeCode_Value >(value_);
}
inline void ActionTypeCode::set_value(::google::fhir::stu3::proto::ActionTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ActionTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ActionTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ActionTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ActionTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActionTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ActionTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ActionTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ActionTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ActionTypeCode.id)
  return id_;
}
inline void ActionTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ActionTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ActionTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ActionTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ActionTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ActionTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ActionTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ActionTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActionTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ActionTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ActionTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ActionTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ActionTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ActivityDefinitionCategoryCode

// .google.fhir.stu3.proto.ActivityDefinitionCategoryCode.Value value = 1;
inline void ActivityDefinitionCategoryCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ActivityDefinitionCategoryCode_Value ActivityDefinitionCategoryCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActivityDefinitionCategoryCode.value)
  return static_cast< ::google::fhir::stu3::proto::ActivityDefinitionCategoryCode_Value >(value_);
}
inline void ActivityDefinitionCategoryCode::set_value(::google::fhir::stu3::proto::ActivityDefinitionCategoryCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ActivityDefinitionCategoryCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ActivityDefinitionCategoryCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ActivityDefinitionCategoryCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ActivityDefinitionCategoryCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActivityDefinitionCategoryCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ActivityDefinitionCategoryCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ActivityDefinitionCategoryCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ActivityDefinitionCategoryCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ActivityDefinitionCategoryCode.id)
  return id_;
}
inline void ActivityDefinitionCategoryCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ActivityDefinitionCategoryCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ActivityDefinitionCategoryCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ActivityDefinitionCategoryCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ActivityDefinitionCategoryCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ActivityDefinitionCategoryCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ActivityDefinitionCategoryCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ActivityDefinitionCategoryCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ActivityDefinitionCategoryCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ActivityDefinitionCategoryCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ActivityDefinitionCategoryCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ActivityDefinitionCategoryCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ActivityDefinitionCategoryCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// AdministrativeGenderCode

// .google.fhir.stu3.proto.AdministrativeGenderCode.Value value = 1;
inline void AdministrativeGenderCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::AdministrativeGenderCode_Value AdministrativeGenderCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AdministrativeGenderCode.value)
  return static_cast< ::google::fhir::stu3::proto::AdministrativeGenderCode_Value >(value_);
}
inline void AdministrativeGenderCode::set_value(::google::fhir::stu3::proto::AdministrativeGenderCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.AdministrativeGenderCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool AdministrativeGenderCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& AdministrativeGenderCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& AdministrativeGenderCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AdministrativeGenderCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* AdministrativeGenderCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.AdministrativeGenderCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* AdministrativeGenderCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AdministrativeGenderCode.id)
  return id_;
}
inline void AdministrativeGenderCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.AdministrativeGenderCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int AdministrativeGenderCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* AdministrativeGenderCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AdministrativeGenderCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
AdministrativeGenderCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.AdministrativeGenderCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& AdministrativeGenderCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AdministrativeGenderCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* AdministrativeGenderCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.AdministrativeGenderCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
AdministrativeGenderCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.AdministrativeGenderCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// AdverseEventCategoryCode

// .google.fhir.stu3.proto.AdverseEventCategoryCode.Value value = 1;
inline void AdverseEventCategoryCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::AdverseEventCategoryCode_Value AdverseEventCategoryCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AdverseEventCategoryCode.value)
  return static_cast< ::google::fhir::stu3::proto::AdverseEventCategoryCode_Value >(value_);
}
inline void AdverseEventCategoryCode::set_value(::google::fhir::stu3::proto::AdverseEventCategoryCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.AdverseEventCategoryCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool AdverseEventCategoryCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& AdverseEventCategoryCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& AdverseEventCategoryCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AdverseEventCategoryCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* AdverseEventCategoryCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.AdverseEventCategoryCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* AdverseEventCategoryCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AdverseEventCategoryCode.id)
  return id_;
}
inline void AdverseEventCategoryCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.AdverseEventCategoryCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int AdverseEventCategoryCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* AdverseEventCategoryCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AdverseEventCategoryCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
AdverseEventCategoryCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.AdverseEventCategoryCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& AdverseEventCategoryCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AdverseEventCategoryCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* AdverseEventCategoryCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.AdverseEventCategoryCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
AdverseEventCategoryCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.AdverseEventCategoryCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// AdverseEventCausalityAssessmentCode

// .google.fhir.stu3.proto.AdverseEventCausalityAssessmentCode.Value value = 1;
inline void AdverseEventCausalityAssessmentCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::AdverseEventCausalityAssessmentCode_Value AdverseEventCausalityAssessmentCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AdverseEventCausalityAssessmentCode.value)
  return static_cast< ::google::fhir::stu3::proto::AdverseEventCausalityAssessmentCode_Value >(value_);
}
inline void AdverseEventCausalityAssessmentCode::set_value(::google::fhir::stu3::proto::AdverseEventCausalityAssessmentCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.AdverseEventCausalityAssessmentCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool AdverseEventCausalityAssessmentCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& AdverseEventCausalityAssessmentCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& AdverseEventCausalityAssessmentCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AdverseEventCausalityAssessmentCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* AdverseEventCausalityAssessmentCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.AdverseEventCausalityAssessmentCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* AdverseEventCausalityAssessmentCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AdverseEventCausalityAssessmentCode.id)
  return id_;
}
inline void AdverseEventCausalityAssessmentCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.AdverseEventCausalityAssessmentCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int AdverseEventCausalityAssessmentCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* AdverseEventCausalityAssessmentCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AdverseEventCausalityAssessmentCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
AdverseEventCausalityAssessmentCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.AdverseEventCausalityAssessmentCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& AdverseEventCausalityAssessmentCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AdverseEventCausalityAssessmentCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* AdverseEventCausalityAssessmentCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.AdverseEventCausalityAssessmentCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
AdverseEventCausalityAssessmentCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.AdverseEventCausalityAssessmentCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// AdverseEventCausalityCode

// .google.fhir.stu3.proto.AdverseEventCausalityCode.Value value = 1;
inline void AdverseEventCausalityCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::AdverseEventCausalityCode_Value AdverseEventCausalityCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AdverseEventCausalityCode.value)
  return static_cast< ::google::fhir::stu3::proto::AdverseEventCausalityCode_Value >(value_);
}
inline void AdverseEventCausalityCode::set_value(::google::fhir::stu3::proto::AdverseEventCausalityCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.AdverseEventCausalityCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool AdverseEventCausalityCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& AdverseEventCausalityCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& AdverseEventCausalityCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AdverseEventCausalityCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* AdverseEventCausalityCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.AdverseEventCausalityCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* AdverseEventCausalityCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AdverseEventCausalityCode.id)
  return id_;
}
inline void AdverseEventCausalityCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.AdverseEventCausalityCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int AdverseEventCausalityCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* AdverseEventCausalityCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AdverseEventCausalityCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
AdverseEventCausalityCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.AdverseEventCausalityCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& AdverseEventCausalityCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AdverseEventCausalityCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* AdverseEventCausalityCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.AdverseEventCausalityCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
AdverseEventCausalityCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.AdverseEventCausalityCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// AdverseEventCausalityMethodCode

// .google.fhir.stu3.proto.AdverseEventCausalityMethodCode.Value value = 1;
inline void AdverseEventCausalityMethodCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::AdverseEventCausalityMethodCode_Value AdverseEventCausalityMethodCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AdverseEventCausalityMethodCode.value)
  return static_cast< ::google::fhir::stu3::proto::AdverseEventCausalityMethodCode_Value >(value_);
}
inline void AdverseEventCausalityMethodCode::set_value(::google::fhir::stu3::proto::AdverseEventCausalityMethodCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.AdverseEventCausalityMethodCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool AdverseEventCausalityMethodCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& AdverseEventCausalityMethodCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& AdverseEventCausalityMethodCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AdverseEventCausalityMethodCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* AdverseEventCausalityMethodCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.AdverseEventCausalityMethodCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* AdverseEventCausalityMethodCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AdverseEventCausalityMethodCode.id)
  return id_;
}
inline void AdverseEventCausalityMethodCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.AdverseEventCausalityMethodCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int AdverseEventCausalityMethodCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* AdverseEventCausalityMethodCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AdverseEventCausalityMethodCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
AdverseEventCausalityMethodCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.AdverseEventCausalityMethodCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& AdverseEventCausalityMethodCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AdverseEventCausalityMethodCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* AdverseEventCausalityMethodCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.AdverseEventCausalityMethodCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
AdverseEventCausalityMethodCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.AdverseEventCausalityMethodCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// AdverseEventCausalityResultCode

// .google.fhir.stu3.proto.AdverseEventCausalityResultCode.Value value = 1;
inline void AdverseEventCausalityResultCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::AdverseEventCausalityResultCode_Value AdverseEventCausalityResultCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AdverseEventCausalityResultCode.value)
  return static_cast< ::google::fhir::stu3::proto::AdverseEventCausalityResultCode_Value >(value_);
}
inline void AdverseEventCausalityResultCode::set_value(::google::fhir::stu3::proto::AdverseEventCausalityResultCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.AdverseEventCausalityResultCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool AdverseEventCausalityResultCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& AdverseEventCausalityResultCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& AdverseEventCausalityResultCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AdverseEventCausalityResultCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* AdverseEventCausalityResultCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.AdverseEventCausalityResultCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* AdverseEventCausalityResultCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AdverseEventCausalityResultCode.id)
  return id_;
}
inline void AdverseEventCausalityResultCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.AdverseEventCausalityResultCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int AdverseEventCausalityResultCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* AdverseEventCausalityResultCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AdverseEventCausalityResultCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
AdverseEventCausalityResultCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.AdverseEventCausalityResultCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& AdverseEventCausalityResultCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AdverseEventCausalityResultCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* AdverseEventCausalityResultCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.AdverseEventCausalityResultCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
AdverseEventCausalityResultCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.AdverseEventCausalityResultCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// AdverseEventOutcomeCode

// .google.fhir.stu3.proto.AdverseEventOutcomeCode.Value value = 1;
inline void AdverseEventOutcomeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::AdverseEventOutcomeCode_Value AdverseEventOutcomeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AdverseEventOutcomeCode.value)
  return static_cast< ::google::fhir::stu3::proto::AdverseEventOutcomeCode_Value >(value_);
}
inline void AdverseEventOutcomeCode::set_value(::google::fhir::stu3::proto::AdverseEventOutcomeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.AdverseEventOutcomeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool AdverseEventOutcomeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& AdverseEventOutcomeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& AdverseEventOutcomeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AdverseEventOutcomeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* AdverseEventOutcomeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.AdverseEventOutcomeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* AdverseEventOutcomeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AdverseEventOutcomeCode.id)
  return id_;
}
inline void AdverseEventOutcomeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.AdverseEventOutcomeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int AdverseEventOutcomeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* AdverseEventOutcomeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AdverseEventOutcomeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
AdverseEventOutcomeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.AdverseEventOutcomeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& AdverseEventOutcomeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AdverseEventOutcomeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* AdverseEventOutcomeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.AdverseEventOutcomeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
AdverseEventOutcomeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.AdverseEventOutcomeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// AdverseEventSeriousnessCode

// .google.fhir.stu3.proto.AdverseEventSeriousnessCode.Value value = 1;
inline void AdverseEventSeriousnessCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::AdverseEventSeriousnessCode_Value AdverseEventSeriousnessCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AdverseEventSeriousnessCode.value)
  return static_cast< ::google::fhir::stu3::proto::AdverseEventSeriousnessCode_Value >(value_);
}
inline void AdverseEventSeriousnessCode::set_value(::google::fhir::stu3::proto::AdverseEventSeriousnessCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.AdverseEventSeriousnessCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool AdverseEventSeriousnessCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& AdverseEventSeriousnessCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& AdverseEventSeriousnessCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AdverseEventSeriousnessCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* AdverseEventSeriousnessCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.AdverseEventSeriousnessCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* AdverseEventSeriousnessCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AdverseEventSeriousnessCode.id)
  return id_;
}
inline void AdverseEventSeriousnessCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.AdverseEventSeriousnessCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int AdverseEventSeriousnessCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* AdverseEventSeriousnessCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AdverseEventSeriousnessCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
AdverseEventSeriousnessCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.AdverseEventSeriousnessCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& AdverseEventSeriousnessCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AdverseEventSeriousnessCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* AdverseEventSeriousnessCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.AdverseEventSeriousnessCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
AdverseEventSeriousnessCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.AdverseEventSeriousnessCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// AllergyIntoleranceSubstanceExposureRiskCode

// .google.fhir.stu3.proto.AllergyIntoleranceSubstanceExposureRiskCode.Value value = 1;
inline void AllergyIntoleranceSubstanceExposureRiskCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::AllergyIntoleranceSubstanceExposureRiskCode_Value AllergyIntoleranceSubstanceExposureRiskCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AllergyIntoleranceSubstanceExposureRiskCode.value)
  return static_cast< ::google::fhir::stu3::proto::AllergyIntoleranceSubstanceExposureRiskCode_Value >(value_);
}
inline void AllergyIntoleranceSubstanceExposureRiskCode::set_value(::google::fhir::stu3::proto::AllergyIntoleranceSubstanceExposureRiskCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.AllergyIntoleranceSubstanceExposureRiskCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool AllergyIntoleranceSubstanceExposureRiskCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& AllergyIntoleranceSubstanceExposureRiskCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& AllergyIntoleranceSubstanceExposureRiskCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AllergyIntoleranceSubstanceExposureRiskCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* AllergyIntoleranceSubstanceExposureRiskCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.AllergyIntoleranceSubstanceExposureRiskCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* AllergyIntoleranceSubstanceExposureRiskCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AllergyIntoleranceSubstanceExposureRiskCode.id)
  return id_;
}
inline void AllergyIntoleranceSubstanceExposureRiskCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.AllergyIntoleranceSubstanceExposureRiskCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int AllergyIntoleranceSubstanceExposureRiskCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* AllergyIntoleranceSubstanceExposureRiskCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AllergyIntoleranceSubstanceExposureRiskCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
AllergyIntoleranceSubstanceExposureRiskCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.AllergyIntoleranceSubstanceExposureRiskCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& AllergyIntoleranceSubstanceExposureRiskCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AllergyIntoleranceSubstanceExposureRiskCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* AllergyIntoleranceSubstanceExposureRiskCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.AllergyIntoleranceSubstanceExposureRiskCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
AllergyIntoleranceSubstanceExposureRiskCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.AllergyIntoleranceSubstanceExposureRiskCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// AllergyIntoleranceClinicalStatusCode

// .google.fhir.stu3.proto.AllergyIntoleranceClinicalStatusCode.Value value = 1;
inline void AllergyIntoleranceClinicalStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::AllergyIntoleranceClinicalStatusCode_Value AllergyIntoleranceClinicalStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AllergyIntoleranceClinicalStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::AllergyIntoleranceClinicalStatusCode_Value >(value_);
}
inline void AllergyIntoleranceClinicalStatusCode::set_value(::google::fhir::stu3::proto::AllergyIntoleranceClinicalStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.AllergyIntoleranceClinicalStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool AllergyIntoleranceClinicalStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& AllergyIntoleranceClinicalStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& AllergyIntoleranceClinicalStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AllergyIntoleranceClinicalStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* AllergyIntoleranceClinicalStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.AllergyIntoleranceClinicalStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* AllergyIntoleranceClinicalStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AllergyIntoleranceClinicalStatusCode.id)
  return id_;
}
inline void AllergyIntoleranceClinicalStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.AllergyIntoleranceClinicalStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int AllergyIntoleranceClinicalStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* AllergyIntoleranceClinicalStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AllergyIntoleranceClinicalStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
AllergyIntoleranceClinicalStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.AllergyIntoleranceClinicalStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& AllergyIntoleranceClinicalStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AllergyIntoleranceClinicalStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* AllergyIntoleranceClinicalStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.AllergyIntoleranceClinicalStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
AllergyIntoleranceClinicalStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.AllergyIntoleranceClinicalStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// AllergyIntoleranceCategoryCode

// .google.fhir.stu3.proto.AllergyIntoleranceCategoryCode.Value value = 1;
inline void AllergyIntoleranceCategoryCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::AllergyIntoleranceCategoryCode_Value AllergyIntoleranceCategoryCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AllergyIntoleranceCategoryCode.value)
  return static_cast< ::google::fhir::stu3::proto::AllergyIntoleranceCategoryCode_Value >(value_);
}
inline void AllergyIntoleranceCategoryCode::set_value(::google::fhir::stu3::proto::AllergyIntoleranceCategoryCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.AllergyIntoleranceCategoryCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool AllergyIntoleranceCategoryCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& AllergyIntoleranceCategoryCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& AllergyIntoleranceCategoryCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AllergyIntoleranceCategoryCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* AllergyIntoleranceCategoryCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.AllergyIntoleranceCategoryCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* AllergyIntoleranceCategoryCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AllergyIntoleranceCategoryCode.id)
  return id_;
}
inline void AllergyIntoleranceCategoryCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.AllergyIntoleranceCategoryCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int AllergyIntoleranceCategoryCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* AllergyIntoleranceCategoryCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AllergyIntoleranceCategoryCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
AllergyIntoleranceCategoryCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.AllergyIntoleranceCategoryCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& AllergyIntoleranceCategoryCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AllergyIntoleranceCategoryCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* AllergyIntoleranceCategoryCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.AllergyIntoleranceCategoryCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
AllergyIntoleranceCategoryCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.AllergyIntoleranceCategoryCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// AllergyIntoleranceCriticalityCode

// .google.fhir.stu3.proto.AllergyIntoleranceCriticalityCode.Value value = 1;
inline void AllergyIntoleranceCriticalityCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::AllergyIntoleranceCriticalityCode_Value AllergyIntoleranceCriticalityCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AllergyIntoleranceCriticalityCode.value)
  return static_cast< ::google::fhir::stu3::proto::AllergyIntoleranceCriticalityCode_Value >(value_);
}
inline void AllergyIntoleranceCriticalityCode::set_value(::google::fhir::stu3::proto::AllergyIntoleranceCriticalityCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.AllergyIntoleranceCriticalityCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool AllergyIntoleranceCriticalityCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& AllergyIntoleranceCriticalityCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& AllergyIntoleranceCriticalityCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AllergyIntoleranceCriticalityCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* AllergyIntoleranceCriticalityCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.AllergyIntoleranceCriticalityCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* AllergyIntoleranceCriticalityCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AllergyIntoleranceCriticalityCode.id)
  return id_;
}
inline void AllergyIntoleranceCriticalityCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.AllergyIntoleranceCriticalityCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int AllergyIntoleranceCriticalityCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* AllergyIntoleranceCriticalityCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AllergyIntoleranceCriticalityCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
AllergyIntoleranceCriticalityCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.AllergyIntoleranceCriticalityCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& AllergyIntoleranceCriticalityCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AllergyIntoleranceCriticalityCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* AllergyIntoleranceCriticalityCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.AllergyIntoleranceCriticalityCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
AllergyIntoleranceCriticalityCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.AllergyIntoleranceCriticalityCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// AllergyIntoleranceTypeCode

// .google.fhir.stu3.proto.AllergyIntoleranceTypeCode.Value value = 1;
inline void AllergyIntoleranceTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::AllergyIntoleranceTypeCode_Value AllergyIntoleranceTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AllergyIntoleranceTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::AllergyIntoleranceTypeCode_Value >(value_);
}
inline void AllergyIntoleranceTypeCode::set_value(::google::fhir::stu3::proto::AllergyIntoleranceTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.AllergyIntoleranceTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool AllergyIntoleranceTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& AllergyIntoleranceTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& AllergyIntoleranceTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AllergyIntoleranceTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* AllergyIntoleranceTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.AllergyIntoleranceTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* AllergyIntoleranceTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AllergyIntoleranceTypeCode.id)
  return id_;
}
inline void AllergyIntoleranceTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.AllergyIntoleranceTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int AllergyIntoleranceTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* AllergyIntoleranceTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AllergyIntoleranceTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
AllergyIntoleranceTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.AllergyIntoleranceTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& AllergyIntoleranceTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AllergyIntoleranceTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* AllergyIntoleranceTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.AllergyIntoleranceTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
AllergyIntoleranceTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.AllergyIntoleranceTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// AllergyIntoleranceVerificationStatusCode

// .google.fhir.stu3.proto.AllergyIntoleranceVerificationStatusCode.Value value = 1;
inline void AllergyIntoleranceVerificationStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::AllergyIntoleranceVerificationStatusCode_Value AllergyIntoleranceVerificationStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AllergyIntoleranceVerificationStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::AllergyIntoleranceVerificationStatusCode_Value >(value_);
}
inline void AllergyIntoleranceVerificationStatusCode::set_value(::google::fhir::stu3::proto::AllergyIntoleranceVerificationStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.AllergyIntoleranceVerificationStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool AllergyIntoleranceVerificationStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& AllergyIntoleranceVerificationStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& AllergyIntoleranceVerificationStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AllergyIntoleranceVerificationStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* AllergyIntoleranceVerificationStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.AllergyIntoleranceVerificationStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* AllergyIntoleranceVerificationStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AllergyIntoleranceVerificationStatusCode.id)
  return id_;
}
inline void AllergyIntoleranceVerificationStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.AllergyIntoleranceVerificationStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int AllergyIntoleranceVerificationStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* AllergyIntoleranceVerificationStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AllergyIntoleranceVerificationStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
AllergyIntoleranceVerificationStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.AllergyIntoleranceVerificationStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& AllergyIntoleranceVerificationStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AllergyIntoleranceVerificationStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* AllergyIntoleranceVerificationStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.AllergyIntoleranceVerificationStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
AllergyIntoleranceVerificationStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.AllergyIntoleranceVerificationStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// GenderStatusCode

// .google.fhir.stu3.proto.GenderStatusCode.Value value = 1;
inline void GenderStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::GenderStatusCode_Value GenderStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GenderStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::GenderStatusCode_Value >(value_);
}
inline void GenderStatusCode::set_value(::google::fhir::stu3::proto::GenderStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.GenderStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool GenderStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& GenderStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& GenderStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GenderStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* GenderStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.GenderStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* GenderStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.GenderStatusCode.id)
  return id_;
}
inline void GenderStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.GenderStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int GenderStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* GenderStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.GenderStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
GenderStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.GenderStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& GenderStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GenderStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* GenderStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.GenderStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
GenderStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.GenderStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// AppointmentStatusCode

// .google.fhir.stu3.proto.AppointmentStatusCode.Value value = 1;
inline void AppointmentStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::AppointmentStatusCode_Value AppointmentStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AppointmentStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::AppointmentStatusCode_Value >(value_);
}
inline void AppointmentStatusCode::set_value(::google::fhir::stu3::proto::AppointmentStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.AppointmentStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool AppointmentStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& AppointmentStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& AppointmentStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AppointmentStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* AppointmentStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.AppointmentStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* AppointmentStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AppointmentStatusCode.id)
  return id_;
}
inline void AppointmentStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.AppointmentStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int AppointmentStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* AppointmentStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AppointmentStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
AppointmentStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.AppointmentStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& AppointmentStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AppointmentStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* AppointmentStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.AppointmentStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
AppointmentStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.AppointmentStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// AssertionDirectionTypeCode

// .google.fhir.stu3.proto.AssertionDirectionTypeCode.Value value = 1;
inline void AssertionDirectionTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::AssertionDirectionTypeCode_Value AssertionDirectionTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AssertionDirectionTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::AssertionDirectionTypeCode_Value >(value_);
}
inline void AssertionDirectionTypeCode::set_value(::google::fhir::stu3::proto::AssertionDirectionTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.AssertionDirectionTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool AssertionDirectionTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& AssertionDirectionTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& AssertionDirectionTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AssertionDirectionTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* AssertionDirectionTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.AssertionDirectionTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* AssertionDirectionTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AssertionDirectionTypeCode.id)
  return id_;
}
inline void AssertionDirectionTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.AssertionDirectionTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int AssertionDirectionTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* AssertionDirectionTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AssertionDirectionTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
AssertionDirectionTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.AssertionDirectionTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& AssertionDirectionTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AssertionDirectionTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* AssertionDirectionTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.AssertionDirectionTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
AssertionDirectionTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.AssertionDirectionTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// AssertionOperatorTypeCode

// .google.fhir.stu3.proto.AssertionOperatorTypeCode.Value value = 1;
inline void AssertionOperatorTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::AssertionOperatorTypeCode_Value AssertionOperatorTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AssertionOperatorTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::AssertionOperatorTypeCode_Value >(value_);
}
inline void AssertionOperatorTypeCode::set_value(::google::fhir::stu3::proto::AssertionOperatorTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.AssertionOperatorTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool AssertionOperatorTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& AssertionOperatorTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& AssertionOperatorTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AssertionOperatorTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* AssertionOperatorTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.AssertionOperatorTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* AssertionOperatorTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AssertionOperatorTypeCode.id)
  return id_;
}
inline void AssertionOperatorTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.AssertionOperatorTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int AssertionOperatorTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* AssertionOperatorTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AssertionOperatorTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
AssertionOperatorTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.AssertionOperatorTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& AssertionOperatorTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AssertionOperatorTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* AssertionOperatorTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.AssertionOperatorTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
AssertionOperatorTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.AssertionOperatorTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// AssertionResponseTypesCode

// .google.fhir.stu3.proto.AssertionResponseTypesCode.Value value = 1;
inline void AssertionResponseTypesCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::AssertionResponseTypesCode_Value AssertionResponseTypesCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AssertionResponseTypesCode.value)
  return static_cast< ::google::fhir::stu3::proto::AssertionResponseTypesCode_Value >(value_);
}
inline void AssertionResponseTypesCode::set_value(::google::fhir::stu3::proto::AssertionResponseTypesCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.AssertionResponseTypesCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool AssertionResponseTypesCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& AssertionResponseTypesCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& AssertionResponseTypesCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AssertionResponseTypesCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* AssertionResponseTypesCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.AssertionResponseTypesCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* AssertionResponseTypesCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AssertionResponseTypesCode.id)
  return id_;
}
inline void AssertionResponseTypesCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.AssertionResponseTypesCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int AssertionResponseTypesCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* AssertionResponseTypesCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AssertionResponseTypesCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
AssertionResponseTypesCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.AssertionResponseTypesCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& AssertionResponseTypesCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AssertionResponseTypesCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* AssertionResponseTypesCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.AssertionResponseTypesCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
AssertionResponseTypesCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.AssertionResponseTypesCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// AuditEventActionCode

// .google.fhir.stu3.proto.AuditEventActionCode.Value value = 1;
inline void AuditEventActionCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::AuditEventActionCode_Value AuditEventActionCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AuditEventActionCode.value)
  return static_cast< ::google::fhir::stu3::proto::AuditEventActionCode_Value >(value_);
}
inline void AuditEventActionCode::set_value(::google::fhir::stu3::proto::AuditEventActionCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.AuditEventActionCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool AuditEventActionCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& AuditEventActionCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& AuditEventActionCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AuditEventActionCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* AuditEventActionCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.AuditEventActionCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* AuditEventActionCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AuditEventActionCode.id)
  return id_;
}
inline void AuditEventActionCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.AuditEventActionCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int AuditEventActionCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* AuditEventActionCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AuditEventActionCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
AuditEventActionCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.AuditEventActionCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& AuditEventActionCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AuditEventActionCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* AuditEventActionCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.AuditEventActionCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
AuditEventActionCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.AuditEventActionCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// AuditEventOutcomeCode

// .google.fhir.stu3.proto.AuditEventOutcomeCode.Value value = 1;
inline void AuditEventOutcomeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::AuditEventOutcomeCode_Value AuditEventOutcomeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AuditEventOutcomeCode.value)
  return static_cast< ::google::fhir::stu3::proto::AuditEventOutcomeCode_Value >(value_);
}
inline void AuditEventOutcomeCode::set_value(::google::fhir::stu3::proto::AuditEventOutcomeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.AuditEventOutcomeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool AuditEventOutcomeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& AuditEventOutcomeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& AuditEventOutcomeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AuditEventOutcomeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* AuditEventOutcomeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.AuditEventOutcomeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* AuditEventOutcomeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AuditEventOutcomeCode.id)
  return id_;
}
inline void AuditEventOutcomeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.AuditEventOutcomeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int AuditEventOutcomeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* AuditEventOutcomeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AuditEventOutcomeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
AuditEventOutcomeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.AuditEventOutcomeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& AuditEventOutcomeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AuditEventOutcomeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* AuditEventOutcomeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.AuditEventOutcomeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
AuditEventOutcomeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.AuditEventOutcomeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// BasicResourceTypesCode

// .google.fhir.stu3.proto.BasicResourceTypesCode.Value value = 1;
inline void BasicResourceTypesCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::BasicResourceTypesCode_Value BasicResourceTypesCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.BasicResourceTypesCode.value)
  return static_cast< ::google::fhir::stu3::proto::BasicResourceTypesCode_Value >(value_);
}
inline void BasicResourceTypesCode::set_value(::google::fhir::stu3::proto::BasicResourceTypesCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.BasicResourceTypesCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool BasicResourceTypesCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& BasicResourceTypesCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& BasicResourceTypesCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.BasicResourceTypesCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* BasicResourceTypesCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.BasicResourceTypesCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* BasicResourceTypesCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.BasicResourceTypesCode.id)
  return id_;
}
inline void BasicResourceTypesCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.BasicResourceTypesCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int BasicResourceTypesCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* BasicResourceTypesCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.BasicResourceTypesCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
BasicResourceTypesCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.BasicResourceTypesCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& BasicResourceTypesCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.BasicResourceTypesCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* BasicResourceTypesCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.BasicResourceTypesCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
BasicResourceTypesCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.BasicResourceTypesCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// BundleTypeCode

// .google.fhir.stu3.proto.BundleTypeCode.Value value = 1;
inline void BundleTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::BundleTypeCode_Value BundleTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.BundleTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::BundleTypeCode_Value >(value_);
}
inline void BundleTypeCode::set_value(::google::fhir::stu3::proto::BundleTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.BundleTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool BundleTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& BundleTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& BundleTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.BundleTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* BundleTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.BundleTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* BundleTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.BundleTypeCode.id)
  return id_;
}
inline void BundleTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.BundleTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int BundleTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* BundleTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.BundleTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
BundleTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.BundleTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& BundleTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.BundleTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* BundleTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.BundleTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
BundleTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.BundleTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// CapabilityStatementKindCode

// .google.fhir.stu3.proto.CapabilityStatementKindCode.Value value = 1;
inline void CapabilityStatementKindCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::CapabilityStatementKindCode_Value CapabilityStatementKindCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CapabilityStatementKindCode.value)
  return static_cast< ::google::fhir::stu3::proto::CapabilityStatementKindCode_Value >(value_);
}
inline void CapabilityStatementKindCode::set_value(::google::fhir::stu3::proto::CapabilityStatementKindCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.CapabilityStatementKindCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool CapabilityStatementKindCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& CapabilityStatementKindCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& CapabilityStatementKindCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CapabilityStatementKindCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* CapabilityStatementKindCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.CapabilityStatementKindCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* CapabilityStatementKindCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CapabilityStatementKindCode.id)
  return id_;
}
inline void CapabilityStatementKindCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.CapabilityStatementKindCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int CapabilityStatementKindCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* CapabilityStatementKindCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CapabilityStatementKindCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
CapabilityStatementKindCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.CapabilityStatementKindCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& CapabilityStatementKindCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CapabilityStatementKindCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* CapabilityStatementKindCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.CapabilityStatementKindCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
CapabilityStatementKindCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.CapabilityStatementKindCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// CarePlanActivityCategoryCode

// .google.fhir.stu3.proto.CarePlanActivityCategoryCode.Value value = 1;
inline void CarePlanActivityCategoryCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::CarePlanActivityCategoryCode_Value CarePlanActivityCategoryCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CarePlanActivityCategoryCode.value)
  return static_cast< ::google::fhir::stu3::proto::CarePlanActivityCategoryCode_Value >(value_);
}
inline void CarePlanActivityCategoryCode::set_value(::google::fhir::stu3::proto::CarePlanActivityCategoryCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.CarePlanActivityCategoryCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool CarePlanActivityCategoryCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& CarePlanActivityCategoryCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& CarePlanActivityCategoryCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CarePlanActivityCategoryCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* CarePlanActivityCategoryCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.CarePlanActivityCategoryCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* CarePlanActivityCategoryCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CarePlanActivityCategoryCode.id)
  return id_;
}
inline void CarePlanActivityCategoryCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.CarePlanActivityCategoryCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int CarePlanActivityCategoryCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* CarePlanActivityCategoryCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CarePlanActivityCategoryCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
CarePlanActivityCategoryCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.CarePlanActivityCategoryCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& CarePlanActivityCategoryCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CarePlanActivityCategoryCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* CarePlanActivityCategoryCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.CarePlanActivityCategoryCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
CarePlanActivityCategoryCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.CarePlanActivityCategoryCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// CarePlanActivityStatusCode

// .google.fhir.stu3.proto.CarePlanActivityStatusCode.Value value = 1;
inline void CarePlanActivityStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::CarePlanActivityStatusCode_Value CarePlanActivityStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CarePlanActivityStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::CarePlanActivityStatusCode_Value >(value_);
}
inline void CarePlanActivityStatusCode::set_value(::google::fhir::stu3::proto::CarePlanActivityStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.CarePlanActivityStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool CarePlanActivityStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& CarePlanActivityStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& CarePlanActivityStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CarePlanActivityStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* CarePlanActivityStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.CarePlanActivityStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* CarePlanActivityStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CarePlanActivityStatusCode.id)
  return id_;
}
inline void CarePlanActivityStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.CarePlanActivityStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int CarePlanActivityStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* CarePlanActivityStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CarePlanActivityStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
CarePlanActivityStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.CarePlanActivityStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& CarePlanActivityStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CarePlanActivityStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* CarePlanActivityStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.CarePlanActivityStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
CarePlanActivityStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.CarePlanActivityStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// CarePlanIntentCode

// .google.fhir.stu3.proto.CarePlanIntentCode.Value value = 1;
inline void CarePlanIntentCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::CarePlanIntentCode_Value CarePlanIntentCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CarePlanIntentCode.value)
  return static_cast< ::google::fhir::stu3::proto::CarePlanIntentCode_Value >(value_);
}
inline void CarePlanIntentCode::set_value(::google::fhir::stu3::proto::CarePlanIntentCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.CarePlanIntentCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool CarePlanIntentCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& CarePlanIntentCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& CarePlanIntentCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CarePlanIntentCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* CarePlanIntentCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.CarePlanIntentCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* CarePlanIntentCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CarePlanIntentCode.id)
  return id_;
}
inline void CarePlanIntentCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.CarePlanIntentCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int CarePlanIntentCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* CarePlanIntentCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CarePlanIntentCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
CarePlanIntentCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.CarePlanIntentCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& CarePlanIntentCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CarePlanIntentCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* CarePlanIntentCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.CarePlanIntentCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
CarePlanIntentCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.CarePlanIntentCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// CarePlanStatusCode

// .google.fhir.stu3.proto.CarePlanStatusCode.Value value = 1;
inline void CarePlanStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::CarePlanStatusCode_Value CarePlanStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CarePlanStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::CarePlanStatusCode_Value >(value_);
}
inline void CarePlanStatusCode::set_value(::google::fhir::stu3::proto::CarePlanStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.CarePlanStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool CarePlanStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& CarePlanStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& CarePlanStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CarePlanStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* CarePlanStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.CarePlanStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* CarePlanStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CarePlanStatusCode.id)
  return id_;
}
inline void CarePlanStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.CarePlanStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int CarePlanStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* CarePlanStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CarePlanStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
CarePlanStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.CarePlanStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& CarePlanStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CarePlanStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* CarePlanStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.CarePlanStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
CarePlanStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.CarePlanStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// CareTeamCategoryCode

// .google.fhir.stu3.proto.CareTeamCategoryCode.Value value = 1;
inline void CareTeamCategoryCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::CareTeamCategoryCode_Value CareTeamCategoryCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CareTeamCategoryCode.value)
  return static_cast< ::google::fhir::stu3::proto::CareTeamCategoryCode_Value >(value_);
}
inline void CareTeamCategoryCode::set_value(::google::fhir::stu3::proto::CareTeamCategoryCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.CareTeamCategoryCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool CareTeamCategoryCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& CareTeamCategoryCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& CareTeamCategoryCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CareTeamCategoryCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* CareTeamCategoryCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.CareTeamCategoryCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* CareTeamCategoryCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CareTeamCategoryCode.id)
  return id_;
}
inline void CareTeamCategoryCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.CareTeamCategoryCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int CareTeamCategoryCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* CareTeamCategoryCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CareTeamCategoryCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
CareTeamCategoryCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.CareTeamCategoryCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& CareTeamCategoryCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CareTeamCategoryCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* CareTeamCategoryCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.CareTeamCategoryCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
CareTeamCategoryCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.CareTeamCategoryCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// CareTeamStatusCode

// .google.fhir.stu3.proto.CareTeamStatusCode.Value value = 1;
inline void CareTeamStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::CareTeamStatusCode_Value CareTeamStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CareTeamStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::CareTeamStatusCode_Value >(value_);
}
inline void CareTeamStatusCode::set_value(::google::fhir::stu3::proto::CareTeamStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.CareTeamStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool CareTeamStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& CareTeamStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& CareTeamStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CareTeamStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* CareTeamStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.CareTeamStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* CareTeamStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CareTeamStatusCode.id)
  return id_;
}
inline void CareTeamStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.CareTeamStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int CareTeamStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* CareTeamStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CareTeamStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
CareTeamStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.CareTeamStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& CareTeamStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CareTeamStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* CareTeamStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.CareTeamStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
CareTeamStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.CareTeamStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ChargeItemStatusCode

// .google.fhir.stu3.proto.ChargeItemStatusCode.Value value = 1;
inline void ChargeItemStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ChargeItemStatusCode_Value ChargeItemStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ChargeItemStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::ChargeItemStatusCode_Value >(value_);
}
inline void ChargeItemStatusCode::set_value(::google::fhir::stu3::proto::ChargeItemStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ChargeItemStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ChargeItemStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ChargeItemStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ChargeItemStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ChargeItemStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ChargeItemStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ChargeItemStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ChargeItemStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ChargeItemStatusCode.id)
  return id_;
}
inline void ChargeItemStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ChargeItemStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ChargeItemStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ChargeItemStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ChargeItemStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ChargeItemStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ChargeItemStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ChargeItemStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ChargeItemStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ChargeItemStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ChargeItemStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ChargeItemStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ChargeItemStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ChoiceListOrientationCode

// .google.fhir.stu3.proto.ChoiceListOrientationCode.Value value = 1;
inline void ChoiceListOrientationCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ChoiceListOrientationCode_Value ChoiceListOrientationCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ChoiceListOrientationCode.value)
  return static_cast< ::google::fhir::stu3::proto::ChoiceListOrientationCode_Value >(value_);
}
inline void ChoiceListOrientationCode::set_value(::google::fhir::stu3::proto::ChoiceListOrientationCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ChoiceListOrientationCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ChoiceListOrientationCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ChoiceListOrientationCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ChoiceListOrientationCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ChoiceListOrientationCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ChoiceListOrientationCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ChoiceListOrientationCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ChoiceListOrientationCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ChoiceListOrientationCode.id)
  return id_;
}
inline void ChoiceListOrientationCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ChoiceListOrientationCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ChoiceListOrientationCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ChoiceListOrientationCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ChoiceListOrientationCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ChoiceListOrientationCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ChoiceListOrientationCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ChoiceListOrientationCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ChoiceListOrientationCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ChoiceListOrientationCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ChoiceListOrientationCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ChoiceListOrientationCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ChoiceListOrientationCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// UseCode

// .google.fhir.stu3.proto.UseCode.Value value = 1;
inline void UseCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::UseCode_Value UseCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.UseCode.value)
  return static_cast< ::google::fhir::stu3::proto::UseCode_Value >(value_);
}
inline void UseCode::set_value(::google::fhir::stu3::proto::UseCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.UseCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool UseCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UseCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UseCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.UseCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UseCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.UseCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UseCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.UseCode.id)
  return id_;
}
inline void UseCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.UseCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int UseCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UseCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.UseCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UseCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.UseCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UseCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.UseCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UseCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.UseCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UseCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.UseCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ClassificationOrContextCode

// .google.fhir.stu3.proto.ClassificationOrContextCode.Value value = 1;
inline void ClassificationOrContextCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ClassificationOrContextCode_Value ClassificationOrContextCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ClassificationOrContextCode.value)
  return static_cast< ::google::fhir::stu3::proto::ClassificationOrContextCode_Value >(value_);
}
inline void ClassificationOrContextCode::set_value(::google::fhir::stu3::proto::ClassificationOrContextCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ClassificationOrContextCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ClassificationOrContextCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ClassificationOrContextCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ClassificationOrContextCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ClassificationOrContextCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ClassificationOrContextCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ClassificationOrContextCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ClassificationOrContextCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ClassificationOrContextCode.id)
  return id_;
}
inline void ClassificationOrContextCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ClassificationOrContextCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ClassificationOrContextCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ClassificationOrContextCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ClassificationOrContextCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ClassificationOrContextCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ClassificationOrContextCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ClassificationOrContextCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ClassificationOrContextCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ClassificationOrContextCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ClassificationOrContextCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ClassificationOrContextCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ClassificationOrContextCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ClinicalImpressionStatusCode

// .google.fhir.stu3.proto.ClinicalImpressionStatusCode.Value value = 1;
inline void ClinicalImpressionStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ClinicalImpressionStatusCode_Value ClinicalImpressionStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ClinicalImpressionStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::ClinicalImpressionStatusCode_Value >(value_);
}
inline void ClinicalImpressionStatusCode::set_value(::google::fhir::stu3::proto::ClinicalImpressionStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ClinicalImpressionStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ClinicalImpressionStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ClinicalImpressionStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ClinicalImpressionStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ClinicalImpressionStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ClinicalImpressionStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ClinicalImpressionStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ClinicalImpressionStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ClinicalImpressionStatusCode.id)
  return id_;
}
inline void ClinicalImpressionStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ClinicalImpressionStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ClinicalImpressionStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ClinicalImpressionStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ClinicalImpressionStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ClinicalImpressionStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ClinicalImpressionStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ClinicalImpressionStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ClinicalImpressionStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ClinicalImpressionStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ClinicalImpressionStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ClinicalImpressionStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ClinicalImpressionStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// CodeSystemContentModeCode

// .google.fhir.stu3.proto.CodeSystemContentModeCode.Value value = 1;
inline void CodeSystemContentModeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::CodeSystemContentModeCode_Value CodeSystemContentModeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CodeSystemContentModeCode.value)
  return static_cast< ::google::fhir::stu3::proto::CodeSystemContentModeCode_Value >(value_);
}
inline void CodeSystemContentModeCode::set_value(::google::fhir::stu3::proto::CodeSystemContentModeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.CodeSystemContentModeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool CodeSystemContentModeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& CodeSystemContentModeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& CodeSystemContentModeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CodeSystemContentModeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* CodeSystemContentModeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.CodeSystemContentModeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* CodeSystemContentModeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CodeSystemContentModeCode.id)
  return id_;
}
inline void CodeSystemContentModeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.CodeSystemContentModeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int CodeSystemContentModeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* CodeSystemContentModeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CodeSystemContentModeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
CodeSystemContentModeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.CodeSystemContentModeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& CodeSystemContentModeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CodeSystemContentModeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* CodeSystemContentModeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.CodeSystemContentModeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
CodeSystemContentModeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.CodeSystemContentModeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// CodeSystemHierarchyMeaningCode

// .google.fhir.stu3.proto.CodeSystemHierarchyMeaningCode.Value value = 1;
inline void CodeSystemHierarchyMeaningCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::CodeSystemHierarchyMeaningCode_Value CodeSystemHierarchyMeaningCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CodeSystemHierarchyMeaningCode.value)
  return static_cast< ::google::fhir::stu3::proto::CodeSystemHierarchyMeaningCode_Value >(value_);
}
inline void CodeSystemHierarchyMeaningCode::set_value(::google::fhir::stu3::proto::CodeSystemHierarchyMeaningCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.CodeSystemHierarchyMeaningCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool CodeSystemHierarchyMeaningCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& CodeSystemHierarchyMeaningCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& CodeSystemHierarchyMeaningCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CodeSystemHierarchyMeaningCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* CodeSystemHierarchyMeaningCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.CodeSystemHierarchyMeaningCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* CodeSystemHierarchyMeaningCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CodeSystemHierarchyMeaningCode.id)
  return id_;
}
inline void CodeSystemHierarchyMeaningCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.CodeSystemHierarchyMeaningCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int CodeSystemHierarchyMeaningCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* CodeSystemHierarchyMeaningCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CodeSystemHierarchyMeaningCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
CodeSystemHierarchyMeaningCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.CodeSystemHierarchyMeaningCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& CodeSystemHierarchyMeaningCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CodeSystemHierarchyMeaningCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* CodeSystemHierarchyMeaningCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.CodeSystemHierarchyMeaningCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
CodeSystemHierarchyMeaningCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.CodeSystemHierarchyMeaningCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// CommonTagsCode

// .google.fhir.stu3.proto.CommonTagsCode.Value value = 1;
inline void CommonTagsCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::CommonTagsCode_Value CommonTagsCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CommonTagsCode.value)
  return static_cast< ::google::fhir::stu3::proto::CommonTagsCode_Value >(value_);
}
inline void CommonTagsCode::set_value(::google::fhir::stu3::proto::CommonTagsCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.CommonTagsCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool CommonTagsCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& CommonTagsCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& CommonTagsCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CommonTagsCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* CommonTagsCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.CommonTagsCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* CommonTagsCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CommonTagsCode.id)
  return id_;
}
inline void CommonTagsCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.CommonTagsCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int CommonTagsCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* CommonTagsCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CommonTagsCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
CommonTagsCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.CommonTagsCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& CommonTagsCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CommonTagsCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* CommonTagsCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.CommonTagsCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
CommonTagsCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.CommonTagsCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// CommunicationCategoryCode

// .google.fhir.stu3.proto.CommunicationCategoryCode.Value value = 1;
inline void CommunicationCategoryCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::CommunicationCategoryCode_Value CommunicationCategoryCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CommunicationCategoryCode.value)
  return static_cast< ::google::fhir::stu3::proto::CommunicationCategoryCode_Value >(value_);
}
inline void CommunicationCategoryCode::set_value(::google::fhir::stu3::proto::CommunicationCategoryCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.CommunicationCategoryCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool CommunicationCategoryCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& CommunicationCategoryCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& CommunicationCategoryCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CommunicationCategoryCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* CommunicationCategoryCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.CommunicationCategoryCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* CommunicationCategoryCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CommunicationCategoryCode.id)
  return id_;
}
inline void CommunicationCategoryCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.CommunicationCategoryCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int CommunicationCategoryCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* CommunicationCategoryCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CommunicationCategoryCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
CommunicationCategoryCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.CommunicationCategoryCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& CommunicationCategoryCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CommunicationCategoryCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* CommunicationCategoryCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.CommunicationCategoryCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
CommunicationCategoryCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.CommunicationCategoryCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// CommunicationNotDoneReasonCode

// .google.fhir.stu3.proto.CommunicationNotDoneReasonCode.Value value = 1;
inline void CommunicationNotDoneReasonCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::CommunicationNotDoneReasonCode_Value CommunicationNotDoneReasonCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CommunicationNotDoneReasonCode.value)
  return static_cast< ::google::fhir::stu3::proto::CommunicationNotDoneReasonCode_Value >(value_);
}
inline void CommunicationNotDoneReasonCode::set_value(::google::fhir::stu3::proto::CommunicationNotDoneReasonCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.CommunicationNotDoneReasonCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool CommunicationNotDoneReasonCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& CommunicationNotDoneReasonCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& CommunicationNotDoneReasonCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CommunicationNotDoneReasonCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* CommunicationNotDoneReasonCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.CommunicationNotDoneReasonCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* CommunicationNotDoneReasonCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CommunicationNotDoneReasonCode.id)
  return id_;
}
inline void CommunicationNotDoneReasonCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.CommunicationNotDoneReasonCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int CommunicationNotDoneReasonCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* CommunicationNotDoneReasonCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CommunicationNotDoneReasonCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
CommunicationNotDoneReasonCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.CommunicationNotDoneReasonCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& CommunicationNotDoneReasonCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CommunicationNotDoneReasonCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* CommunicationNotDoneReasonCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.CommunicationNotDoneReasonCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
CommunicationNotDoneReasonCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.CommunicationNotDoneReasonCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// CompartmentTypeCode

// .google.fhir.stu3.proto.CompartmentTypeCode.Value value = 1;
inline void CompartmentTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::CompartmentTypeCode_Value CompartmentTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CompartmentTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::CompartmentTypeCode_Value >(value_);
}
inline void CompartmentTypeCode::set_value(::google::fhir::stu3::proto::CompartmentTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.CompartmentTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool CompartmentTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& CompartmentTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& CompartmentTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CompartmentTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* CompartmentTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.CompartmentTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* CompartmentTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CompartmentTypeCode.id)
  return id_;
}
inline void CompartmentTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.CompartmentTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int CompartmentTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* CompartmentTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CompartmentTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
CompartmentTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.CompartmentTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& CompartmentTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CompartmentTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* CompartmentTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.CompartmentTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
CompartmentTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.CompartmentTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// CompositeMeasureScoringCode

// .google.fhir.stu3.proto.CompositeMeasureScoringCode.Value value = 1;
inline void CompositeMeasureScoringCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::CompositeMeasureScoringCode_Value CompositeMeasureScoringCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CompositeMeasureScoringCode.value)
  return static_cast< ::google::fhir::stu3::proto::CompositeMeasureScoringCode_Value >(value_);
}
inline void CompositeMeasureScoringCode::set_value(::google::fhir::stu3::proto::CompositeMeasureScoringCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.CompositeMeasureScoringCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool CompositeMeasureScoringCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& CompositeMeasureScoringCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& CompositeMeasureScoringCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CompositeMeasureScoringCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* CompositeMeasureScoringCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.CompositeMeasureScoringCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* CompositeMeasureScoringCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CompositeMeasureScoringCode.id)
  return id_;
}
inline void CompositeMeasureScoringCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.CompositeMeasureScoringCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int CompositeMeasureScoringCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* CompositeMeasureScoringCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CompositeMeasureScoringCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
CompositeMeasureScoringCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.CompositeMeasureScoringCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& CompositeMeasureScoringCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CompositeMeasureScoringCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* CompositeMeasureScoringCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.CompositeMeasureScoringCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
CompositeMeasureScoringCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.CompositeMeasureScoringCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// CompositionAttestationModeCode

// .google.fhir.stu3.proto.CompositionAttestationModeCode.Value value = 1;
inline void CompositionAttestationModeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::CompositionAttestationModeCode_Value CompositionAttestationModeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CompositionAttestationModeCode.value)
  return static_cast< ::google::fhir::stu3::proto::CompositionAttestationModeCode_Value >(value_);
}
inline void CompositionAttestationModeCode::set_value(::google::fhir::stu3::proto::CompositionAttestationModeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.CompositionAttestationModeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool CompositionAttestationModeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& CompositionAttestationModeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& CompositionAttestationModeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CompositionAttestationModeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* CompositionAttestationModeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.CompositionAttestationModeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* CompositionAttestationModeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CompositionAttestationModeCode.id)
  return id_;
}
inline void CompositionAttestationModeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.CompositionAttestationModeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int CompositionAttestationModeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* CompositionAttestationModeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CompositionAttestationModeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
CompositionAttestationModeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.CompositionAttestationModeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& CompositionAttestationModeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CompositionAttestationModeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* CompositionAttestationModeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.CompositionAttestationModeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
CompositionAttestationModeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.CompositionAttestationModeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// CompositionStatusCode

// .google.fhir.stu3.proto.CompositionStatusCode.Value value = 1;
inline void CompositionStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::CompositionStatusCode_Value CompositionStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CompositionStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::CompositionStatusCode_Value >(value_);
}
inline void CompositionStatusCode::set_value(::google::fhir::stu3::proto::CompositionStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.CompositionStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool CompositionStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& CompositionStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& CompositionStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CompositionStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* CompositionStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.CompositionStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* CompositionStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CompositionStatusCode.id)
  return id_;
}
inline void CompositionStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.CompositionStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int CompositionStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* CompositionStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CompositionStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
CompositionStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.CompositionStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& CompositionStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CompositionStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* CompositionStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.CompositionStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
CompositionStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.CompositionStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ConceptMapEquivalenceCode

// .google.fhir.stu3.proto.ConceptMapEquivalenceCode.Value value = 1;
inline void ConceptMapEquivalenceCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ConceptMapEquivalenceCode_Value ConceptMapEquivalenceCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConceptMapEquivalenceCode.value)
  return static_cast< ::google::fhir::stu3::proto::ConceptMapEquivalenceCode_Value >(value_);
}
inline void ConceptMapEquivalenceCode::set_value(::google::fhir::stu3::proto::ConceptMapEquivalenceCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ConceptMapEquivalenceCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ConceptMapEquivalenceCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ConceptMapEquivalenceCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ConceptMapEquivalenceCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConceptMapEquivalenceCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ConceptMapEquivalenceCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ConceptMapEquivalenceCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ConceptMapEquivalenceCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ConceptMapEquivalenceCode.id)
  return id_;
}
inline void ConceptMapEquivalenceCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ConceptMapEquivalenceCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ConceptMapEquivalenceCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ConceptMapEquivalenceCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ConceptMapEquivalenceCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ConceptMapEquivalenceCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ConceptMapEquivalenceCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ConceptMapEquivalenceCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConceptMapEquivalenceCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ConceptMapEquivalenceCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ConceptMapEquivalenceCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ConceptMapEquivalenceCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ConceptMapEquivalenceCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ConceptMapGroupUnmappedModeCode

// .google.fhir.stu3.proto.ConceptMapGroupUnmappedModeCode.Value value = 1;
inline void ConceptMapGroupUnmappedModeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ConceptMapGroupUnmappedModeCode_Value ConceptMapGroupUnmappedModeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConceptMapGroupUnmappedModeCode.value)
  return static_cast< ::google::fhir::stu3::proto::ConceptMapGroupUnmappedModeCode_Value >(value_);
}
inline void ConceptMapGroupUnmappedModeCode::set_value(::google::fhir::stu3::proto::ConceptMapGroupUnmappedModeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ConceptMapGroupUnmappedModeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ConceptMapGroupUnmappedModeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ConceptMapGroupUnmappedModeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ConceptMapGroupUnmappedModeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConceptMapGroupUnmappedModeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ConceptMapGroupUnmappedModeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ConceptMapGroupUnmappedModeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ConceptMapGroupUnmappedModeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ConceptMapGroupUnmappedModeCode.id)
  return id_;
}
inline void ConceptMapGroupUnmappedModeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ConceptMapGroupUnmappedModeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ConceptMapGroupUnmappedModeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ConceptMapGroupUnmappedModeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ConceptMapGroupUnmappedModeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ConceptMapGroupUnmappedModeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ConceptMapGroupUnmappedModeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ConceptMapGroupUnmappedModeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConceptMapGroupUnmappedModeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ConceptMapGroupUnmappedModeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ConceptMapGroupUnmappedModeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ConceptMapGroupUnmappedModeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ConceptMapGroupUnmappedModeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// PropertyTypeCode

// .google.fhir.stu3.proto.PropertyTypeCode.Value value = 1;
inline void PropertyTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::PropertyTypeCode_Value PropertyTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.PropertyTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::PropertyTypeCode_Value >(value_);
}
inline void PropertyTypeCode::set_value(::google::fhir::stu3::proto::PropertyTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.PropertyTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool PropertyTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& PropertyTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& PropertyTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.PropertyTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* PropertyTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.PropertyTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* PropertyTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.PropertyTypeCode.id)
  return id_;
}
inline void PropertyTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.PropertyTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int PropertyTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* PropertyTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.PropertyTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
PropertyTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.PropertyTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& PropertyTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.PropertyTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* PropertyTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.PropertyTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
PropertyTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.PropertyTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ConditionalDeleteStatusCode

// .google.fhir.stu3.proto.ConditionalDeleteStatusCode.Value value = 1;
inline void ConditionalDeleteStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ConditionalDeleteStatusCode_Value ConditionalDeleteStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConditionalDeleteStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::ConditionalDeleteStatusCode_Value >(value_);
}
inline void ConditionalDeleteStatusCode::set_value(::google::fhir::stu3::proto::ConditionalDeleteStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ConditionalDeleteStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ConditionalDeleteStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ConditionalDeleteStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ConditionalDeleteStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConditionalDeleteStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ConditionalDeleteStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ConditionalDeleteStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ConditionalDeleteStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ConditionalDeleteStatusCode.id)
  return id_;
}
inline void ConditionalDeleteStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ConditionalDeleteStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ConditionalDeleteStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ConditionalDeleteStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ConditionalDeleteStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ConditionalDeleteStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ConditionalDeleteStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ConditionalDeleteStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConditionalDeleteStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ConditionalDeleteStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ConditionalDeleteStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ConditionalDeleteStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ConditionalDeleteStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ConditionalReadStatusCode

// .google.fhir.stu3.proto.ConditionalReadStatusCode.Value value = 1;
inline void ConditionalReadStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ConditionalReadStatusCode_Value ConditionalReadStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConditionalReadStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::ConditionalReadStatusCode_Value >(value_);
}
inline void ConditionalReadStatusCode::set_value(::google::fhir::stu3::proto::ConditionalReadStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ConditionalReadStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ConditionalReadStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ConditionalReadStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ConditionalReadStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConditionalReadStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ConditionalReadStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ConditionalReadStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ConditionalReadStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ConditionalReadStatusCode.id)
  return id_;
}
inline void ConditionalReadStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ConditionalReadStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ConditionalReadStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ConditionalReadStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ConditionalReadStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ConditionalReadStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ConditionalReadStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ConditionalReadStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConditionalReadStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ConditionalReadStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ConditionalReadStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ConditionalReadStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ConditionalReadStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ConditionCategoryCodesCode

// .google.fhir.stu3.proto.ConditionCategoryCodesCode.Value value = 1;
inline void ConditionCategoryCodesCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ConditionCategoryCodesCode_Value ConditionCategoryCodesCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConditionCategoryCodesCode.value)
  return static_cast< ::google::fhir::stu3::proto::ConditionCategoryCodesCode_Value >(value_);
}
inline void ConditionCategoryCodesCode::set_value(::google::fhir::stu3::proto::ConditionCategoryCodesCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ConditionCategoryCodesCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ConditionCategoryCodesCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ConditionCategoryCodesCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ConditionCategoryCodesCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConditionCategoryCodesCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ConditionCategoryCodesCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ConditionCategoryCodesCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ConditionCategoryCodesCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ConditionCategoryCodesCode.id)
  return id_;
}
inline void ConditionCategoryCodesCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ConditionCategoryCodesCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ConditionCategoryCodesCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ConditionCategoryCodesCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ConditionCategoryCodesCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ConditionCategoryCodesCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ConditionCategoryCodesCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ConditionCategoryCodesCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConditionCategoryCodesCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ConditionCategoryCodesCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ConditionCategoryCodesCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ConditionCategoryCodesCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ConditionCategoryCodesCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ConditionClinicalStatusCodesCode

// .google.fhir.stu3.proto.ConditionClinicalStatusCodesCode.Value value = 1;
inline void ConditionClinicalStatusCodesCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ConditionClinicalStatusCodesCode_Value ConditionClinicalStatusCodesCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConditionClinicalStatusCodesCode.value)
  return static_cast< ::google::fhir::stu3::proto::ConditionClinicalStatusCodesCode_Value >(value_);
}
inline void ConditionClinicalStatusCodesCode::set_value(::google::fhir::stu3::proto::ConditionClinicalStatusCodesCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ConditionClinicalStatusCodesCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ConditionClinicalStatusCodesCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ConditionClinicalStatusCodesCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ConditionClinicalStatusCodesCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConditionClinicalStatusCodesCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ConditionClinicalStatusCodesCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ConditionClinicalStatusCodesCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ConditionClinicalStatusCodesCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ConditionClinicalStatusCodesCode.id)
  return id_;
}
inline void ConditionClinicalStatusCodesCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ConditionClinicalStatusCodesCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ConditionClinicalStatusCodesCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ConditionClinicalStatusCodesCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ConditionClinicalStatusCodesCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ConditionClinicalStatusCodesCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ConditionClinicalStatusCodesCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ConditionClinicalStatusCodesCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConditionClinicalStatusCodesCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ConditionClinicalStatusCodesCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ConditionClinicalStatusCodesCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ConditionClinicalStatusCodesCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ConditionClinicalStatusCodesCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ConditionStateCode

// .google.fhir.stu3.proto.ConditionStateCode.Value value = 1;
inline void ConditionStateCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ConditionStateCode_Value ConditionStateCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConditionStateCode.value)
  return static_cast< ::google::fhir::stu3::proto::ConditionStateCode_Value >(value_);
}
inline void ConditionStateCode::set_value(::google::fhir::stu3::proto::ConditionStateCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ConditionStateCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ConditionStateCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ConditionStateCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ConditionStateCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConditionStateCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ConditionStateCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ConditionStateCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ConditionStateCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ConditionStateCode.id)
  return id_;
}
inline void ConditionStateCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ConditionStateCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ConditionStateCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ConditionStateCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ConditionStateCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ConditionStateCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ConditionStateCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ConditionStateCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConditionStateCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ConditionStateCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ConditionStateCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ConditionStateCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ConditionStateCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ConditionVerificationStatusCode

// .google.fhir.stu3.proto.ConditionVerificationStatusCode.Value value = 1;
inline void ConditionVerificationStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ConditionVerificationStatusCode_Value ConditionVerificationStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConditionVerificationStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::ConditionVerificationStatusCode_Value >(value_);
}
inline void ConditionVerificationStatusCode::set_value(::google::fhir::stu3::proto::ConditionVerificationStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ConditionVerificationStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ConditionVerificationStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ConditionVerificationStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ConditionVerificationStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConditionVerificationStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ConditionVerificationStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ConditionVerificationStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ConditionVerificationStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ConditionVerificationStatusCode.id)
  return id_;
}
inline void ConditionVerificationStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ConditionVerificationStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ConditionVerificationStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ConditionVerificationStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ConditionVerificationStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ConditionVerificationStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ConditionVerificationStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ConditionVerificationStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConditionVerificationStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ConditionVerificationStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ConditionVerificationStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ConditionVerificationStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ConditionVerificationStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ConformanceExpectationCode

// .google.fhir.stu3.proto.ConformanceExpectationCode.Value value = 1;
inline void ConformanceExpectationCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ConformanceExpectationCode_Value ConformanceExpectationCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConformanceExpectationCode.value)
  return static_cast< ::google::fhir::stu3::proto::ConformanceExpectationCode_Value >(value_);
}
inline void ConformanceExpectationCode::set_value(::google::fhir::stu3::proto::ConformanceExpectationCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ConformanceExpectationCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ConformanceExpectationCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ConformanceExpectationCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ConformanceExpectationCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConformanceExpectationCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ConformanceExpectationCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ConformanceExpectationCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ConformanceExpectationCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ConformanceExpectationCode.id)
  return id_;
}
inline void ConformanceExpectationCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ConformanceExpectationCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ConformanceExpectationCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ConformanceExpectationCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ConformanceExpectationCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ConformanceExpectationCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ConformanceExpectationCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ConformanceExpectationCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConformanceExpectationCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ConformanceExpectationCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ConformanceExpectationCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ConformanceExpectationCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ConformanceExpectationCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ConsentDataMeaningCode

// .google.fhir.stu3.proto.ConsentDataMeaningCode.Value value = 1;
inline void ConsentDataMeaningCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ConsentDataMeaningCode_Value ConsentDataMeaningCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConsentDataMeaningCode.value)
  return static_cast< ::google::fhir::stu3::proto::ConsentDataMeaningCode_Value >(value_);
}
inline void ConsentDataMeaningCode::set_value(::google::fhir::stu3::proto::ConsentDataMeaningCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ConsentDataMeaningCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ConsentDataMeaningCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ConsentDataMeaningCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ConsentDataMeaningCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConsentDataMeaningCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ConsentDataMeaningCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ConsentDataMeaningCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ConsentDataMeaningCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ConsentDataMeaningCode.id)
  return id_;
}
inline void ConsentDataMeaningCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ConsentDataMeaningCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ConsentDataMeaningCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ConsentDataMeaningCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ConsentDataMeaningCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ConsentDataMeaningCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ConsentDataMeaningCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ConsentDataMeaningCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConsentDataMeaningCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ConsentDataMeaningCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ConsentDataMeaningCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ConsentDataMeaningCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ConsentDataMeaningCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ConsentExceptTypeCode

// .google.fhir.stu3.proto.ConsentExceptTypeCode.Value value = 1;
inline void ConsentExceptTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ConsentExceptTypeCode_Value ConsentExceptTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConsentExceptTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::ConsentExceptTypeCode_Value >(value_);
}
inline void ConsentExceptTypeCode::set_value(::google::fhir::stu3::proto::ConsentExceptTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ConsentExceptTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ConsentExceptTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ConsentExceptTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ConsentExceptTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConsentExceptTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ConsentExceptTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ConsentExceptTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ConsentExceptTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ConsentExceptTypeCode.id)
  return id_;
}
inline void ConsentExceptTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ConsentExceptTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ConsentExceptTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ConsentExceptTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ConsentExceptTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ConsentExceptTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ConsentExceptTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ConsentExceptTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConsentExceptTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ConsentExceptTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ConsentExceptTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ConsentExceptTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ConsentExceptTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ConsentStateCode

// .google.fhir.stu3.proto.ConsentStateCode.Value value = 1;
inline void ConsentStateCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ConsentStateCode_Value ConsentStateCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConsentStateCode.value)
  return static_cast< ::google::fhir::stu3::proto::ConsentStateCode_Value >(value_);
}
inline void ConsentStateCode::set_value(::google::fhir::stu3::proto::ConsentStateCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ConsentStateCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ConsentStateCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ConsentStateCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ConsentStateCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConsentStateCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ConsentStateCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ConsentStateCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ConsentStateCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ConsentStateCode.id)
  return id_;
}
inline void ConsentStateCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ConsentStateCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ConsentStateCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ConsentStateCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ConsentStateCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ConsentStateCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ConsentStateCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ConsentStateCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConsentStateCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ConsentStateCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ConsentStateCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ConsentStateCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ConsentStateCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ContactEntityTypeCode

// .google.fhir.stu3.proto.ContactEntityTypeCode.Value value = 1;
inline void ContactEntityTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ContactEntityTypeCode_Value ContactEntityTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ContactEntityTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::ContactEntityTypeCode_Value >(value_);
}
inline void ContactEntityTypeCode::set_value(::google::fhir::stu3::proto::ContactEntityTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ContactEntityTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ContactEntityTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ContactEntityTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ContactEntityTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ContactEntityTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ContactEntityTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ContactEntityTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ContactEntityTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ContactEntityTypeCode.id)
  return id_;
}
inline void ContactEntityTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ContactEntityTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ContactEntityTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ContactEntityTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ContactEntityTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ContactEntityTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ContactEntityTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ContactEntityTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ContactEntityTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ContactEntityTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ContactEntityTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ContactEntityTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ContactEntityTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ContentTypeCode

// .google.fhir.stu3.proto.ContentTypeCode.Value value = 1;
inline void ContentTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ContentTypeCode_Value ContentTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ContentTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::ContentTypeCode_Value >(value_);
}
inline void ContentTypeCode::set_value(::google::fhir::stu3::proto::ContentTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ContentTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ContentTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ContentTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ContentTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ContentTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ContentTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ContentTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ContentTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ContentTypeCode.id)
  return id_;
}
inline void ContentTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ContentTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ContentTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ContentTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ContentTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ContentTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ContentTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ContentTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ContentTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ContentTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ContentTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ContentTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ContentTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ContractResourceStatusCode

// .google.fhir.stu3.proto.ContractResourceStatusCode.Value value = 1;
inline void ContractResourceStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ContractResourceStatusCode_Value ContractResourceStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ContractResourceStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::ContractResourceStatusCode_Value >(value_);
}
inline void ContractResourceStatusCode::set_value(::google::fhir::stu3::proto::ContractResourceStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ContractResourceStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ContractResourceStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ContractResourceStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ContractResourceStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ContractResourceStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ContractResourceStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ContractResourceStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ContractResourceStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ContractResourceStatusCode.id)
  return id_;
}
inline void ContractResourceStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ContractResourceStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ContractResourceStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ContractResourceStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ContractResourceStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ContractResourceStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ContractResourceStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ContractResourceStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ContractResourceStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ContractResourceStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ContractResourceStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ContractResourceStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ContractResourceStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ContributorTypeCode

// .google.fhir.stu3.proto.ContributorTypeCode.Value value = 1;
inline void ContributorTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ContributorTypeCode_Value ContributorTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ContributorTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::ContributorTypeCode_Value >(value_);
}
inline void ContributorTypeCode::set_value(::google::fhir::stu3::proto::ContributorTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ContributorTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ContributorTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ContributorTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ContributorTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ContributorTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ContributorTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ContributorTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ContributorTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ContributorTypeCode.id)
  return id_;
}
inline void ContributorTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ContributorTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ContributorTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ContributorTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ContributorTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ContributorTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ContributorTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ContributorTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ContributorTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ContributorTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ContributorTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ContributorTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ContributorTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// CopyNumberEventCode

// .google.fhir.stu3.proto.CopyNumberEventCode.Value value = 1;
inline void CopyNumberEventCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::CopyNumberEventCode_Value CopyNumberEventCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CopyNumberEventCode.value)
  return static_cast< ::google::fhir::stu3::proto::CopyNumberEventCode_Value >(value_);
}
inline void CopyNumberEventCode::set_value(::google::fhir::stu3::proto::CopyNumberEventCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.CopyNumberEventCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool CopyNumberEventCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& CopyNumberEventCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& CopyNumberEventCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CopyNumberEventCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* CopyNumberEventCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.CopyNumberEventCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* CopyNumberEventCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CopyNumberEventCode.id)
  return id_;
}
inline void CopyNumberEventCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.CopyNumberEventCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int CopyNumberEventCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* CopyNumberEventCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.CopyNumberEventCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
CopyNumberEventCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.CopyNumberEventCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& CopyNumberEventCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.CopyNumberEventCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* CopyNumberEventCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.CopyNumberEventCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
CopyNumberEventCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.CopyNumberEventCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// DataAbsentReasonCode

// .google.fhir.stu3.proto.DataAbsentReasonCode.Value value = 1;
inline void DataAbsentReasonCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::DataAbsentReasonCode_Value DataAbsentReasonCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataAbsentReasonCode.value)
  return static_cast< ::google::fhir::stu3::proto::DataAbsentReasonCode_Value >(value_);
}
inline void DataAbsentReasonCode::set_value(::google::fhir::stu3::proto::DataAbsentReasonCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.DataAbsentReasonCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool DataAbsentReasonCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& DataAbsentReasonCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& DataAbsentReasonCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataAbsentReasonCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* DataAbsentReasonCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DataAbsentReasonCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* DataAbsentReasonCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DataAbsentReasonCode.id)
  return id_;
}
inline void DataAbsentReasonCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DataAbsentReasonCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int DataAbsentReasonCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* DataAbsentReasonCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DataAbsentReasonCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
DataAbsentReasonCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DataAbsentReasonCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& DataAbsentReasonCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataAbsentReasonCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* DataAbsentReasonCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DataAbsentReasonCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
DataAbsentReasonCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DataAbsentReasonCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// DataElementStringencyCode

// .google.fhir.stu3.proto.DataElementStringencyCode.Value value = 1;
inline void DataElementStringencyCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::DataElementStringencyCode_Value DataElementStringencyCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataElementStringencyCode.value)
  return static_cast< ::google::fhir::stu3::proto::DataElementStringencyCode_Value >(value_);
}
inline void DataElementStringencyCode::set_value(::google::fhir::stu3::proto::DataElementStringencyCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.DataElementStringencyCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool DataElementStringencyCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& DataElementStringencyCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& DataElementStringencyCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataElementStringencyCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* DataElementStringencyCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DataElementStringencyCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* DataElementStringencyCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DataElementStringencyCode.id)
  return id_;
}
inline void DataElementStringencyCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DataElementStringencyCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int DataElementStringencyCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* DataElementStringencyCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DataElementStringencyCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
DataElementStringencyCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DataElementStringencyCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& DataElementStringencyCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataElementStringencyCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* DataElementStringencyCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DataElementStringencyCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
DataElementStringencyCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DataElementStringencyCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// TriggerTypeCode

// .google.fhir.stu3.proto.TriggerTypeCode.Value value = 1;
inline void TriggerTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::TriggerTypeCode_Value TriggerTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TriggerTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::TriggerTypeCode_Value >(value_);
}
inline void TriggerTypeCode::set_value(::google::fhir::stu3::proto::TriggerTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.TriggerTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool TriggerTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& TriggerTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& TriggerTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TriggerTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* TriggerTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.TriggerTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* TriggerTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TriggerTypeCode.id)
  return id_;
}
inline void TriggerTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.TriggerTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int TriggerTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* TriggerTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TriggerTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
TriggerTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.TriggerTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& TriggerTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TriggerTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* TriggerTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.TriggerTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
TriggerTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.TriggerTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// DataTypeCode

// .google.fhir.stu3.proto.DataTypeCode.Value value = 1;
inline void DataTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::DataTypeCode_Value DataTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::DataTypeCode_Value >(value_);
}
inline void DataTypeCode::set_value(::google::fhir::stu3::proto::DataTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.DataTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool DataTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& DataTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& DataTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* DataTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DataTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* DataTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DataTypeCode.id)
  return id_;
}
inline void DataTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DataTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int DataTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* DataTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DataTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
DataTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DataTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& DataTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* DataTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DataTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
DataTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DataTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// FHIRAllTypesCode

// .google.fhir.stu3.proto.FHIRAllTypesCode.Value value = 1;
inline void FHIRAllTypesCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::FHIRAllTypesCode_Value FHIRAllTypesCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FHIRAllTypesCode.value)
  return static_cast< ::google::fhir::stu3::proto::FHIRAllTypesCode_Value >(value_);
}
inline void FHIRAllTypesCode::set_value(::google::fhir::stu3::proto::FHIRAllTypesCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.FHIRAllTypesCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool FHIRAllTypesCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& FHIRAllTypesCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& FHIRAllTypesCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FHIRAllTypesCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* FHIRAllTypesCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.FHIRAllTypesCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* FHIRAllTypesCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.FHIRAllTypesCode.id)
  return id_;
}
inline void FHIRAllTypesCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.FHIRAllTypesCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int FHIRAllTypesCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* FHIRAllTypesCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.FHIRAllTypesCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
FHIRAllTypesCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.FHIRAllTypesCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& FHIRAllTypesCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FHIRAllTypesCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* FHIRAllTypesCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.FHIRAllTypesCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
FHIRAllTypesCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.FHIRAllTypesCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// FHIRDefinedTypeCode

// .google.fhir.stu3.proto.FHIRDefinedTypeCode.Value value = 1;
inline void FHIRDefinedTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::FHIRDefinedTypeCode_Value FHIRDefinedTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FHIRDefinedTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::FHIRDefinedTypeCode_Value >(value_);
}
inline void FHIRDefinedTypeCode::set_value(::google::fhir::stu3::proto::FHIRDefinedTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.FHIRDefinedTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool FHIRDefinedTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& FHIRDefinedTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& FHIRDefinedTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FHIRDefinedTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* FHIRDefinedTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.FHIRDefinedTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* FHIRDefinedTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.FHIRDefinedTypeCode.id)
  return id_;
}
inline void FHIRDefinedTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.FHIRDefinedTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int FHIRDefinedTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* FHIRDefinedTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.FHIRDefinedTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
FHIRDefinedTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.FHIRDefinedTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& FHIRDefinedTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FHIRDefinedTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* FHIRDefinedTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.FHIRDefinedTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
FHIRDefinedTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.FHIRDefinedTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// FHIRDefinedTypeExtCode

// string value = 1;
inline void FHIRDefinedTypeExtCode::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FHIRDefinedTypeExtCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FHIRDefinedTypeExtCode.value)
  return value_.GetNoArena();
}
inline void FHIRDefinedTypeExtCode::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.FHIRDefinedTypeExtCode.value)
}
#if LANG_CXX11
inline void FHIRDefinedTypeExtCode::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.fhir.stu3.proto.FHIRDefinedTypeExtCode.value)
}
#endif
inline void FHIRDefinedTypeExtCode::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.fhir.stu3.proto.FHIRDefinedTypeExtCode.value)
}
inline void FHIRDefinedTypeExtCode::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.fhir.stu3.proto.FHIRDefinedTypeExtCode.value)
}
inline ::std::string* FHIRDefinedTypeExtCode::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.FHIRDefinedTypeExtCode.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FHIRDefinedTypeExtCode::release_value() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.FHIRDefinedTypeExtCode.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FHIRDefinedTypeExtCode::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.FHIRDefinedTypeExtCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool FHIRDefinedTypeExtCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& FHIRDefinedTypeExtCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& FHIRDefinedTypeExtCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FHIRDefinedTypeExtCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* FHIRDefinedTypeExtCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.FHIRDefinedTypeExtCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* FHIRDefinedTypeExtCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.FHIRDefinedTypeExtCode.id)
  return id_;
}
inline void FHIRDefinedTypeExtCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.FHIRDefinedTypeExtCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int FHIRDefinedTypeExtCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* FHIRDefinedTypeExtCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.FHIRDefinedTypeExtCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
FHIRDefinedTypeExtCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.FHIRDefinedTypeExtCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& FHIRDefinedTypeExtCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FHIRDefinedTypeExtCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* FHIRDefinedTypeExtCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.FHIRDefinedTypeExtCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
FHIRDefinedTypeExtCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.FHIRDefinedTypeExtCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// DefinitionStatusCode

// .google.fhir.stu3.proto.DefinitionStatusCode.Value value = 1;
inline void DefinitionStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::DefinitionStatusCode_Value DefinitionStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DefinitionStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::DefinitionStatusCode_Value >(value_);
}
inline void DefinitionStatusCode::set_value(::google::fhir::stu3::proto::DefinitionStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.DefinitionStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool DefinitionStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& DefinitionStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& DefinitionStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DefinitionStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* DefinitionStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DefinitionStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* DefinitionStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DefinitionStatusCode.id)
  return id_;
}
inline void DefinitionStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DefinitionStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int DefinitionStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* DefinitionStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DefinitionStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
DefinitionStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DefinitionStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& DefinitionStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DefinitionStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* DefinitionStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DefinitionStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
DefinitionStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DefinitionStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// DefinitionTopicCode

// .google.fhir.stu3.proto.DefinitionTopicCode.Value value = 1;
inline void DefinitionTopicCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::DefinitionTopicCode_Value DefinitionTopicCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DefinitionTopicCode.value)
  return static_cast< ::google::fhir::stu3::proto::DefinitionTopicCode_Value >(value_);
}
inline void DefinitionTopicCode::set_value(::google::fhir::stu3::proto::DefinitionTopicCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.DefinitionTopicCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool DefinitionTopicCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& DefinitionTopicCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& DefinitionTopicCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DefinitionTopicCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* DefinitionTopicCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DefinitionTopicCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* DefinitionTopicCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DefinitionTopicCode.id)
  return id_;
}
inline void DefinitionTopicCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DefinitionTopicCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int DefinitionTopicCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* DefinitionTopicCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DefinitionTopicCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
DefinitionTopicCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DefinitionTopicCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& DefinitionTopicCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DefinitionTopicCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* DefinitionTopicCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DefinitionTopicCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
DefinitionTopicCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DefinitionTopicCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// DetectedIssueSeverityCode

// .google.fhir.stu3.proto.DetectedIssueSeverityCode.Value value = 1;
inline void DetectedIssueSeverityCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::DetectedIssueSeverityCode_Value DetectedIssueSeverityCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DetectedIssueSeverityCode.value)
  return static_cast< ::google::fhir::stu3::proto::DetectedIssueSeverityCode_Value >(value_);
}
inline void DetectedIssueSeverityCode::set_value(::google::fhir::stu3::proto::DetectedIssueSeverityCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.DetectedIssueSeverityCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool DetectedIssueSeverityCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& DetectedIssueSeverityCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& DetectedIssueSeverityCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DetectedIssueSeverityCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* DetectedIssueSeverityCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DetectedIssueSeverityCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* DetectedIssueSeverityCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DetectedIssueSeverityCode.id)
  return id_;
}
inline void DetectedIssueSeverityCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DetectedIssueSeverityCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int DetectedIssueSeverityCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* DetectedIssueSeverityCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DetectedIssueSeverityCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
DetectedIssueSeverityCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DetectedIssueSeverityCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& DetectedIssueSeverityCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DetectedIssueSeverityCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* DetectedIssueSeverityCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DetectedIssueSeverityCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
DetectedIssueSeverityCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DetectedIssueSeverityCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// DeviceUseStatementStatusCode

// .google.fhir.stu3.proto.DeviceUseStatementStatusCode.Value value = 1;
inline void DeviceUseStatementStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::DeviceUseStatementStatusCode_Value DeviceUseStatementStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DeviceUseStatementStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::DeviceUseStatementStatusCode_Value >(value_);
}
inline void DeviceUseStatementStatusCode::set_value(::google::fhir::stu3::proto::DeviceUseStatementStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.DeviceUseStatementStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool DeviceUseStatementStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& DeviceUseStatementStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& DeviceUseStatementStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DeviceUseStatementStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* DeviceUseStatementStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DeviceUseStatementStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* DeviceUseStatementStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DeviceUseStatementStatusCode.id)
  return id_;
}
inline void DeviceUseStatementStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DeviceUseStatementStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int DeviceUseStatementStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* DeviceUseStatementStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DeviceUseStatementStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
DeviceUseStatementStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DeviceUseStatementStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& DeviceUseStatementStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DeviceUseStatementStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* DeviceUseStatementStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DeviceUseStatementStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
DeviceUseStatementStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DeviceUseStatementStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// FHIRDeviceStatusCode

// .google.fhir.stu3.proto.FHIRDeviceStatusCode.Value value = 1;
inline void FHIRDeviceStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::FHIRDeviceStatusCode_Value FHIRDeviceStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FHIRDeviceStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::FHIRDeviceStatusCode_Value >(value_);
}
inline void FHIRDeviceStatusCode::set_value(::google::fhir::stu3::proto::FHIRDeviceStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.FHIRDeviceStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool FHIRDeviceStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& FHIRDeviceStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& FHIRDeviceStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FHIRDeviceStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* FHIRDeviceStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.FHIRDeviceStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* FHIRDeviceStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.FHIRDeviceStatusCode.id)
  return id_;
}
inline void FHIRDeviceStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.FHIRDeviceStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int FHIRDeviceStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* FHIRDeviceStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.FHIRDeviceStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
FHIRDeviceStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.FHIRDeviceStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& FHIRDeviceStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FHIRDeviceStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* FHIRDeviceStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.FHIRDeviceStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
FHIRDeviceStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.FHIRDeviceStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// DiagnosisRoleCode

// .google.fhir.stu3.proto.DiagnosisRoleCode.Value value = 1;
inline void DiagnosisRoleCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::DiagnosisRoleCode_Value DiagnosisRoleCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DiagnosisRoleCode.value)
  return static_cast< ::google::fhir::stu3::proto::DiagnosisRoleCode_Value >(value_);
}
inline void DiagnosisRoleCode::set_value(::google::fhir::stu3::proto::DiagnosisRoleCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.DiagnosisRoleCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool DiagnosisRoleCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& DiagnosisRoleCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& DiagnosisRoleCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DiagnosisRoleCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* DiagnosisRoleCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DiagnosisRoleCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* DiagnosisRoleCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DiagnosisRoleCode.id)
  return id_;
}
inline void DiagnosisRoleCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DiagnosisRoleCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int DiagnosisRoleCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* DiagnosisRoleCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DiagnosisRoleCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
DiagnosisRoleCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DiagnosisRoleCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& DiagnosisRoleCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DiagnosisRoleCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* DiagnosisRoleCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DiagnosisRoleCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
DiagnosisRoleCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DiagnosisRoleCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// DiagnosticReportStatusCode

// .google.fhir.stu3.proto.DiagnosticReportStatusCode.Value value = 1;
inline void DiagnosticReportStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::DiagnosticReportStatusCode_Value DiagnosticReportStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DiagnosticReportStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::DiagnosticReportStatusCode_Value >(value_);
}
inline void DiagnosticReportStatusCode::set_value(::google::fhir::stu3::proto::DiagnosticReportStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.DiagnosticReportStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool DiagnosticReportStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& DiagnosticReportStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& DiagnosticReportStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DiagnosticReportStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* DiagnosticReportStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DiagnosticReportStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* DiagnosticReportStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DiagnosticReportStatusCode.id)
  return id_;
}
inline void DiagnosticReportStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DiagnosticReportStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int DiagnosticReportStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* DiagnosticReportStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DiagnosticReportStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
DiagnosticReportStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DiagnosticReportStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& DiagnosticReportStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DiagnosticReportStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* DiagnosticReportStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DiagnosticReportStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
DiagnosticReportStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DiagnosticReportStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// DigitalMediaTypeCode

// .google.fhir.stu3.proto.DigitalMediaTypeCode.Value value = 1;
inline void DigitalMediaTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::DigitalMediaTypeCode_Value DigitalMediaTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DigitalMediaTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::DigitalMediaTypeCode_Value >(value_);
}
inline void DigitalMediaTypeCode::set_value(::google::fhir::stu3::proto::DigitalMediaTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.DigitalMediaTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool DigitalMediaTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& DigitalMediaTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& DigitalMediaTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DigitalMediaTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* DigitalMediaTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DigitalMediaTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* DigitalMediaTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DigitalMediaTypeCode.id)
  return id_;
}
inline void DigitalMediaTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DigitalMediaTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int DigitalMediaTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* DigitalMediaTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DigitalMediaTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
DigitalMediaTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DigitalMediaTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& DigitalMediaTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DigitalMediaTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* DigitalMediaTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DigitalMediaTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
DigitalMediaTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DigitalMediaTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// DocumentModeCode

// .google.fhir.stu3.proto.DocumentModeCode.Value value = 1;
inline void DocumentModeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::DocumentModeCode_Value DocumentModeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DocumentModeCode.value)
  return static_cast< ::google::fhir::stu3::proto::DocumentModeCode_Value >(value_);
}
inline void DocumentModeCode::set_value(::google::fhir::stu3::proto::DocumentModeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.DocumentModeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool DocumentModeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& DocumentModeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& DocumentModeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DocumentModeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* DocumentModeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DocumentModeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* DocumentModeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DocumentModeCode.id)
  return id_;
}
inline void DocumentModeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DocumentModeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int DocumentModeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* DocumentModeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DocumentModeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
DocumentModeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DocumentModeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& DocumentModeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DocumentModeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* DocumentModeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DocumentModeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
DocumentModeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DocumentModeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// DocumentReferenceStatusCode

// .google.fhir.stu3.proto.DocumentReferenceStatusCode.Value value = 1;
inline void DocumentReferenceStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::DocumentReferenceStatusCode_Value DocumentReferenceStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DocumentReferenceStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::DocumentReferenceStatusCode_Value >(value_);
}
inline void DocumentReferenceStatusCode::set_value(::google::fhir::stu3::proto::DocumentReferenceStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.DocumentReferenceStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool DocumentReferenceStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& DocumentReferenceStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& DocumentReferenceStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DocumentReferenceStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* DocumentReferenceStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DocumentReferenceStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* DocumentReferenceStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DocumentReferenceStatusCode.id)
  return id_;
}
inline void DocumentReferenceStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DocumentReferenceStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int DocumentReferenceStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* DocumentReferenceStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DocumentReferenceStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
DocumentReferenceStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DocumentReferenceStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& DocumentReferenceStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DocumentReferenceStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* DocumentReferenceStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DocumentReferenceStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
DocumentReferenceStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DocumentReferenceStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// DocumentRelationshipTypeCode

// .google.fhir.stu3.proto.DocumentRelationshipTypeCode.Value value = 1;
inline void DocumentRelationshipTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::DocumentRelationshipTypeCode_Value DocumentRelationshipTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DocumentRelationshipTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::DocumentRelationshipTypeCode_Value >(value_);
}
inline void DocumentRelationshipTypeCode::set_value(::google::fhir::stu3::proto::DocumentRelationshipTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.DocumentRelationshipTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool DocumentRelationshipTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& DocumentRelationshipTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& DocumentRelationshipTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DocumentRelationshipTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* DocumentRelationshipTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DocumentRelationshipTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* DocumentRelationshipTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DocumentRelationshipTypeCode.id)
  return id_;
}
inline void DocumentRelationshipTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DocumentRelationshipTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int DocumentRelationshipTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* DocumentRelationshipTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DocumentRelationshipTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
DocumentRelationshipTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DocumentRelationshipTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& DocumentRelationshipTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DocumentRelationshipTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* DocumentRelationshipTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DocumentRelationshipTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
DocumentRelationshipTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DocumentRelationshipTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// AdmitSourceCode

// .google.fhir.stu3.proto.AdmitSourceCode.Value value = 1;
inline void AdmitSourceCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::AdmitSourceCode_Value AdmitSourceCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AdmitSourceCode.value)
  return static_cast< ::google::fhir::stu3::proto::AdmitSourceCode_Value >(value_);
}
inline void AdmitSourceCode::set_value(::google::fhir::stu3::proto::AdmitSourceCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.AdmitSourceCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool AdmitSourceCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& AdmitSourceCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& AdmitSourceCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AdmitSourceCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* AdmitSourceCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.AdmitSourceCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* AdmitSourceCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AdmitSourceCode.id)
  return id_;
}
inline void AdmitSourceCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.AdmitSourceCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int AdmitSourceCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* AdmitSourceCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AdmitSourceCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
AdmitSourceCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.AdmitSourceCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& AdmitSourceCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AdmitSourceCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* AdmitSourceCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.AdmitSourceCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
AdmitSourceCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.AdmitSourceCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// DietCode

// .google.fhir.stu3.proto.DietCode.Value value = 1;
inline void DietCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::DietCode_Value DietCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DietCode.value)
  return static_cast< ::google::fhir::stu3::proto::DietCode_Value >(value_);
}
inline void DietCode::set_value(::google::fhir::stu3::proto::DietCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.DietCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool DietCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& DietCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& DietCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DietCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* DietCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DietCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* DietCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DietCode.id)
  return id_;
}
inline void DietCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DietCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int DietCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* DietCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DietCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
DietCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DietCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& DietCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DietCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* DietCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DietCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
DietCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DietCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// DischargeDispositionCode

// .google.fhir.stu3.proto.DischargeDispositionCode.Value value = 1;
inline void DischargeDispositionCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::DischargeDispositionCode_Value DischargeDispositionCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DischargeDispositionCode.value)
  return static_cast< ::google::fhir::stu3::proto::DischargeDispositionCode_Value >(value_);
}
inline void DischargeDispositionCode::set_value(::google::fhir::stu3::proto::DischargeDispositionCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.DischargeDispositionCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool DischargeDispositionCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& DischargeDispositionCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& DischargeDispositionCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DischargeDispositionCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* DischargeDispositionCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DischargeDispositionCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* DischargeDispositionCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DischargeDispositionCode.id)
  return id_;
}
inline void DischargeDispositionCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DischargeDispositionCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int DischargeDispositionCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* DischargeDispositionCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DischargeDispositionCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
DischargeDispositionCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DischargeDispositionCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& DischargeDispositionCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DischargeDispositionCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* DischargeDispositionCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DischargeDispositionCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
DischargeDispositionCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DischargeDispositionCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// EncounterLocationStatusCode

// .google.fhir.stu3.proto.EncounterLocationStatusCode.Value value = 1;
inline void EncounterLocationStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::EncounterLocationStatusCode_Value EncounterLocationStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.EncounterLocationStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::EncounterLocationStatusCode_Value >(value_);
}
inline void EncounterLocationStatusCode::set_value(::google::fhir::stu3::proto::EncounterLocationStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.EncounterLocationStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool EncounterLocationStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& EncounterLocationStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& EncounterLocationStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.EncounterLocationStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* EncounterLocationStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.EncounterLocationStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* EncounterLocationStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.EncounterLocationStatusCode.id)
  return id_;
}
inline void EncounterLocationStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.EncounterLocationStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int EncounterLocationStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* EncounterLocationStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.EncounterLocationStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
EncounterLocationStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.EncounterLocationStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& EncounterLocationStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.EncounterLocationStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* EncounterLocationStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.EncounterLocationStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
EncounterLocationStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.EncounterLocationStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// SpecialArrangementsCode

// .google.fhir.stu3.proto.SpecialArrangementsCode.Value value = 1;
inline void SpecialArrangementsCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::SpecialArrangementsCode_Value SpecialArrangementsCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SpecialArrangementsCode.value)
  return static_cast< ::google::fhir::stu3::proto::SpecialArrangementsCode_Value >(value_);
}
inline void SpecialArrangementsCode::set_value(::google::fhir::stu3::proto::SpecialArrangementsCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.SpecialArrangementsCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool SpecialArrangementsCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& SpecialArrangementsCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& SpecialArrangementsCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SpecialArrangementsCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* SpecialArrangementsCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.SpecialArrangementsCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* SpecialArrangementsCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SpecialArrangementsCode.id)
  return id_;
}
inline void SpecialArrangementsCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.SpecialArrangementsCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int SpecialArrangementsCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* SpecialArrangementsCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SpecialArrangementsCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
SpecialArrangementsCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.SpecialArrangementsCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& SpecialArrangementsCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SpecialArrangementsCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* SpecialArrangementsCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.SpecialArrangementsCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
SpecialArrangementsCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.SpecialArrangementsCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// EncounterStatusCode

// .google.fhir.stu3.proto.EncounterStatusCode.Value value = 1;
inline void EncounterStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::EncounterStatusCode_Value EncounterStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.EncounterStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::EncounterStatusCode_Value >(value_);
}
inline void EncounterStatusCode::set_value(::google::fhir::stu3::proto::EncounterStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.EncounterStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool EncounterStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& EncounterStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& EncounterStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.EncounterStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* EncounterStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.EncounterStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* EncounterStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.EncounterStatusCode.id)
  return id_;
}
inline void EncounterStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.EncounterStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int EncounterStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* EncounterStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.EncounterStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
EncounterStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.EncounterStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& EncounterStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.EncounterStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* EncounterStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.EncounterStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
EncounterStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.EncounterStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// EncounterTypeCode

// .google.fhir.stu3.proto.EncounterTypeCode.Value value = 1;
inline void EncounterTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::EncounterTypeCode_Value EncounterTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.EncounterTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::EncounterTypeCode_Value >(value_);
}
inline void EncounterTypeCode::set_value(::google::fhir::stu3::proto::EncounterTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.EncounterTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool EncounterTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& EncounterTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& EncounterTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.EncounterTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* EncounterTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.EncounterTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* EncounterTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.EncounterTypeCode.id)
  return id_;
}
inline void EncounterTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.EncounterTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int EncounterTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* EncounterTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.EncounterTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
EncounterTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.EncounterTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& EncounterTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.EncounterTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* EncounterTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.EncounterTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
EncounterTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.EncounterTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// EndpointStatusCode

// .google.fhir.stu3.proto.EndpointStatusCode.Value value = 1;
inline void EndpointStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::EndpointStatusCode_Value EndpointStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.EndpointStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::EndpointStatusCode_Value >(value_);
}
inline void EndpointStatusCode::set_value(::google::fhir::stu3::proto::EndpointStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.EndpointStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool EndpointStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& EndpointStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& EndpointStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.EndpointStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* EndpointStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.EndpointStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* EndpointStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.EndpointStatusCode.id)
  return id_;
}
inline void EndpointStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.EndpointStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int EndpointStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* EndpointStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.EndpointStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
EndpointStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.EndpointStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& EndpointStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.EndpointStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* EndpointStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.EndpointStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
EndpointStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.EndpointStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// EntityNamePartQualifierCode

// .google.fhir.stu3.proto.EntityNamePartQualifierCode.Value value = 1;
inline void EntityNamePartQualifierCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::EntityNamePartQualifierCode_Value EntityNamePartQualifierCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.EntityNamePartQualifierCode.value)
  return static_cast< ::google::fhir::stu3::proto::EntityNamePartQualifierCode_Value >(value_);
}
inline void EntityNamePartQualifierCode::set_value(::google::fhir::stu3::proto::EntityNamePartQualifierCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.EntityNamePartQualifierCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool EntityNamePartQualifierCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& EntityNamePartQualifierCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& EntityNamePartQualifierCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.EntityNamePartQualifierCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* EntityNamePartQualifierCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.EntityNamePartQualifierCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* EntityNamePartQualifierCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.EntityNamePartQualifierCode.id)
  return id_;
}
inline void EntityNamePartQualifierCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.EntityNamePartQualifierCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int EntityNamePartQualifierCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* EntityNamePartQualifierCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.EntityNamePartQualifierCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
EntityNamePartQualifierCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.EntityNamePartQualifierCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& EntityNamePartQualifierCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.EntityNamePartQualifierCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* EntityNamePartQualifierCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.EntityNamePartQualifierCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
EntityNamePartQualifierCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.EntityNamePartQualifierCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// EnteralFormulaAdditiveTypeCodeCode

// .google.fhir.stu3.proto.EnteralFormulaAdditiveTypeCodeCode.Value value = 1;
inline void EnteralFormulaAdditiveTypeCodeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::EnteralFormulaAdditiveTypeCodeCode_Value EnteralFormulaAdditiveTypeCodeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.EnteralFormulaAdditiveTypeCodeCode.value)
  return static_cast< ::google::fhir::stu3::proto::EnteralFormulaAdditiveTypeCodeCode_Value >(value_);
}
inline void EnteralFormulaAdditiveTypeCodeCode::set_value(::google::fhir::stu3::proto::EnteralFormulaAdditiveTypeCodeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.EnteralFormulaAdditiveTypeCodeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool EnteralFormulaAdditiveTypeCodeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& EnteralFormulaAdditiveTypeCodeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& EnteralFormulaAdditiveTypeCodeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.EnteralFormulaAdditiveTypeCodeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* EnteralFormulaAdditiveTypeCodeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.EnteralFormulaAdditiveTypeCodeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* EnteralFormulaAdditiveTypeCodeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.EnteralFormulaAdditiveTypeCodeCode.id)
  return id_;
}
inline void EnteralFormulaAdditiveTypeCodeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.EnteralFormulaAdditiveTypeCodeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int EnteralFormulaAdditiveTypeCodeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* EnteralFormulaAdditiveTypeCodeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.EnteralFormulaAdditiveTypeCodeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
EnteralFormulaAdditiveTypeCodeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.EnteralFormulaAdditiveTypeCodeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& EnteralFormulaAdditiveTypeCodeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.EnteralFormulaAdditiveTypeCodeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* EnteralFormulaAdditiveTypeCodeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.EnteralFormulaAdditiveTypeCodeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
EnteralFormulaAdditiveTypeCodeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.EnteralFormulaAdditiveTypeCodeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// EpisodeOfCareStatusCode

// .google.fhir.stu3.proto.EpisodeOfCareStatusCode.Value value = 1;
inline void EpisodeOfCareStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::EpisodeOfCareStatusCode_Value EpisodeOfCareStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.EpisodeOfCareStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::EpisodeOfCareStatusCode_Value >(value_);
}
inline void EpisodeOfCareStatusCode::set_value(::google::fhir::stu3::proto::EpisodeOfCareStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.EpisodeOfCareStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool EpisodeOfCareStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& EpisodeOfCareStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& EpisodeOfCareStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.EpisodeOfCareStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* EpisodeOfCareStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.EpisodeOfCareStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* EpisodeOfCareStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.EpisodeOfCareStatusCode.id)
  return id_;
}
inline void EpisodeOfCareStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.EpisodeOfCareStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int EpisodeOfCareStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* EpisodeOfCareStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.EpisodeOfCareStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
EpisodeOfCareStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.EpisodeOfCareStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& EpisodeOfCareStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.EpisodeOfCareStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* EpisodeOfCareStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.EpisodeOfCareStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
EpisodeOfCareStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.EpisodeOfCareStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// EpisodeOfCareTypeCode

// .google.fhir.stu3.proto.EpisodeOfCareTypeCode.Value value = 1;
inline void EpisodeOfCareTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::EpisodeOfCareTypeCode_Value EpisodeOfCareTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.EpisodeOfCareTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::EpisodeOfCareTypeCode_Value >(value_);
}
inline void EpisodeOfCareTypeCode::set_value(::google::fhir::stu3::proto::EpisodeOfCareTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.EpisodeOfCareTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool EpisodeOfCareTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& EpisodeOfCareTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& EpisodeOfCareTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.EpisodeOfCareTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* EpisodeOfCareTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.EpisodeOfCareTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* EpisodeOfCareTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.EpisodeOfCareTypeCode.id)
  return id_;
}
inline void EpisodeOfCareTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.EpisodeOfCareTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int EpisodeOfCareTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* EpisodeOfCareTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.EpisodeOfCareTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
EpisodeOfCareTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.EpisodeOfCareTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& EpisodeOfCareTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.EpisodeOfCareTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* EpisodeOfCareTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.EpisodeOfCareTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
EpisodeOfCareTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.EpisodeOfCareTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// EventCapabilityModeCode

// .google.fhir.stu3.proto.EventCapabilityModeCode.Value value = 1;
inline void EventCapabilityModeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::EventCapabilityModeCode_Value EventCapabilityModeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.EventCapabilityModeCode.value)
  return static_cast< ::google::fhir::stu3::proto::EventCapabilityModeCode_Value >(value_);
}
inline void EventCapabilityModeCode::set_value(::google::fhir::stu3::proto::EventCapabilityModeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.EventCapabilityModeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool EventCapabilityModeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& EventCapabilityModeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& EventCapabilityModeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.EventCapabilityModeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* EventCapabilityModeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.EventCapabilityModeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* EventCapabilityModeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.EventCapabilityModeCode.id)
  return id_;
}
inline void EventCapabilityModeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.EventCapabilityModeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int EventCapabilityModeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* EventCapabilityModeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.EventCapabilityModeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
EventCapabilityModeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.EventCapabilityModeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& EventCapabilityModeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.EventCapabilityModeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* EventCapabilityModeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.EventCapabilityModeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
EventCapabilityModeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.EventCapabilityModeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// EventStatusCode

// .google.fhir.stu3.proto.EventStatusCode.Value value = 1;
inline void EventStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::EventStatusCode_Value EventStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.EventStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::EventStatusCode_Value >(value_);
}
inline void EventStatusCode::set_value(::google::fhir::stu3::proto::EventStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.EventStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool EventStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& EventStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& EventStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.EventStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* EventStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.EventStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* EventStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.EventStatusCode.id)
  return id_;
}
inline void EventStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.EventStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int EventStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* EventStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.EventStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
EventStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.EventStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& EventStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.EventStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* EventStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.EventStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
EventStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.EventStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ClaimPayeeResourceTypeCode

// .google.fhir.stu3.proto.ClaimPayeeResourceTypeCode.Value value = 1;
inline void ClaimPayeeResourceTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ClaimPayeeResourceTypeCode_Value ClaimPayeeResourceTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ClaimPayeeResourceTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::ClaimPayeeResourceTypeCode_Value >(value_);
}
inline void ClaimPayeeResourceTypeCode::set_value(::google::fhir::stu3::proto::ClaimPayeeResourceTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ClaimPayeeResourceTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ClaimPayeeResourceTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ClaimPayeeResourceTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ClaimPayeeResourceTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ClaimPayeeResourceTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ClaimPayeeResourceTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ClaimPayeeResourceTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ClaimPayeeResourceTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ClaimPayeeResourceTypeCode.id)
  return id_;
}
inline void ClaimPayeeResourceTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ClaimPayeeResourceTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ClaimPayeeResourceTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ClaimPayeeResourceTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ClaimPayeeResourceTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ClaimPayeeResourceTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ClaimPayeeResourceTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ClaimPayeeResourceTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ClaimPayeeResourceTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ClaimPayeeResourceTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ClaimPayeeResourceTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ClaimPayeeResourceTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ClaimPayeeResourceTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ExplanationOfBenefitStatusCode

// .google.fhir.stu3.proto.ExplanationOfBenefitStatusCode.Value value = 1;
inline void ExplanationOfBenefitStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ExplanationOfBenefitStatusCode_Value ExplanationOfBenefitStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ExplanationOfBenefitStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::ExplanationOfBenefitStatusCode_Value >(value_);
}
inline void ExplanationOfBenefitStatusCode::set_value(::google::fhir::stu3::proto::ExplanationOfBenefitStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ExplanationOfBenefitStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ExplanationOfBenefitStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ExplanationOfBenefitStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ExplanationOfBenefitStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ExplanationOfBenefitStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ExplanationOfBenefitStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ExplanationOfBenefitStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ExplanationOfBenefitStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ExplanationOfBenefitStatusCode.id)
  return id_;
}
inline void ExplanationOfBenefitStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ExplanationOfBenefitStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ExplanationOfBenefitStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ExplanationOfBenefitStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ExplanationOfBenefitStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ExplanationOfBenefitStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ExplanationOfBenefitStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ExplanationOfBenefitStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ExplanationOfBenefitStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ExplanationOfBenefitStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ExplanationOfBenefitStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ExplanationOfBenefitStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ExplanationOfBenefitStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ExtensionContextCode

// .google.fhir.stu3.proto.ExtensionContextCode.Value value = 1;
inline void ExtensionContextCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ExtensionContextCode_Value ExtensionContextCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ExtensionContextCode.value)
  return static_cast< ::google::fhir::stu3::proto::ExtensionContextCode_Value >(value_);
}
inline void ExtensionContextCode::set_value(::google::fhir::stu3::proto::ExtensionContextCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ExtensionContextCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ExtensionContextCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ExtensionContextCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ExtensionContextCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ExtensionContextCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ExtensionContextCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ExtensionContextCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ExtensionContextCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ExtensionContextCode.id)
  return id_;
}
inline void ExtensionContextCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ExtensionContextCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ExtensionContextCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ExtensionContextCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ExtensionContextCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ExtensionContextCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ExtensionContextCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ExtensionContextCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ExtensionContextCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ExtensionContextCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ExtensionContextCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ExtensionContextCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ExtensionContextCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// FilterOperatorCode

// .google.fhir.stu3.proto.FilterOperatorCode.Value value = 1;
inline void FilterOperatorCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::FilterOperatorCode_Value FilterOperatorCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FilterOperatorCode.value)
  return static_cast< ::google::fhir::stu3::proto::FilterOperatorCode_Value >(value_);
}
inline void FilterOperatorCode::set_value(::google::fhir::stu3::proto::FilterOperatorCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.FilterOperatorCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool FilterOperatorCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& FilterOperatorCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& FilterOperatorCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FilterOperatorCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* FilterOperatorCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.FilterOperatorCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* FilterOperatorCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.FilterOperatorCode.id)
  return id_;
}
inline void FilterOperatorCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.FilterOperatorCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int FilterOperatorCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* FilterOperatorCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.FilterOperatorCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
FilterOperatorCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.FilterOperatorCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& FilterOperatorCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FilterOperatorCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* FilterOperatorCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.FilterOperatorCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
FilterOperatorCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.FilterOperatorCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// FlagCategoryCode

// .google.fhir.stu3.proto.FlagCategoryCode.Value value = 1;
inline void FlagCategoryCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::FlagCategoryCode_Value FlagCategoryCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FlagCategoryCode.value)
  return static_cast< ::google::fhir::stu3::proto::FlagCategoryCode_Value >(value_);
}
inline void FlagCategoryCode::set_value(::google::fhir::stu3::proto::FlagCategoryCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.FlagCategoryCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool FlagCategoryCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& FlagCategoryCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& FlagCategoryCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FlagCategoryCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* FlagCategoryCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.FlagCategoryCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* FlagCategoryCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.FlagCategoryCode.id)
  return id_;
}
inline void FlagCategoryCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.FlagCategoryCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int FlagCategoryCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* FlagCategoryCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.FlagCategoryCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
FlagCategoryCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.FlagCategoryCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& FlagCategoryCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FlagCategoryCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* FlagCategoryCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.FlagCategoryCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
FlagCategoryCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.FlagCategoryCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// FlagPriorityCodesCode

// .google.fhir.stu3.proto.FlagPriorityCodesCode.Value value = 1;
inline void FlagPriorityCodesCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::FlagPriorityCodesCode_Value FlagPriorityCodesCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FlagPriorityCodesCode.value)
  return static_cast< ::google::fhir::stu3::proto::FlagPriorityCodesCode_Value >(value_);
}
inline void FlagPriorityCodesCode::set_value(::google::fhir::stu3::proto::FlagPriorityCodesCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.FlagPriorityCodesCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool FlagPriorityCodesCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& FlagPriorityCodesCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& FlagPriorityCodesCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FlagPriorityCodesCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* FlagPriorityCodesCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.FlagPriorityCodesCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* FlagPriorityCodesCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.FlagPriorityCodesCode.id)
  return id_;
}
inline void FlagPriorityCodesCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.FlagPriorityCodesCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int FlagPriorityCodesCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* FlagPriorityCodesCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.FlagPriorityCodesCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
FlagPriorityCodesCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.FlagPriorityCodesCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& FlagPriorityCodesCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FlagPriorityCodesCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* FlagPriorityCodesCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.FlagPriorityCodesCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
FlagPriorityCodesCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.FlagPriorityCodesCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// FlagStatusCode

// .google.fhir.stu3.proto.FlagStatusCode.Value value = 1;
inline void FlagStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::FlagStatusCode_Value FlagStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FlagStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::FlagStatusCode_Value >(value_);
}
inline void FlagStatusCode::set_value(::google::fhir::stu3::proto::FlagStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.FlagStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool FlagStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& FlagStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& FlagStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FlagStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* FlagStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.FlagStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* FlagStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.FlagStatusCode.id)
  return id_;
}
inline void FlagStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.FlagStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int FlagStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* FlagStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.FlagStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
FlagStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.FlagStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& FlagStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FlagStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* FlagStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.FlagStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
FlagStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.FlagStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// FinancialResourceStatusCode

// .google.fhir.stu3.proto.FinancialResourceStatusCode.Value value = 1;
inline void FinancialResourceStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::FinancialResourceStatusCode_Value FinancialResourceStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FinancialResourceStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::FinancialResourceStatusCode_Value >(value_);
}
inline void FinancialResourceStatusCode::set_value(::google::fhir::stu3::proto::FinancialResourceStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.FinancialResourceStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool FinancialResourceStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& FinancialResourceStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& FinancialResourceStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FinancialResourceStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* FinancialResourceStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.FinancialResourceStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* FinancialResourceStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.FinancialResourceStatusCode.id)
  return id_;
}
inline void FinancialResourceStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.FinancialResourceStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int FinancialResourceStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* FinancialResourceStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.FinancialResourceStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
FinancialResourceStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.FinancialResourceStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& FinancialResourceStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FinancialResourceStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* FinancialResourceStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.FinancialResourceStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
FinancialResourceStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.FinancialResourceStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// GoalAcceptanceStatusCode

// .google.fhir.stu3.proto.GoalAcceptanceStatusCode.Value value = 1;
inline void GoalAcceptanceStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::GoalAcceptanceStatusCode_Value GoalAcceptanceStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GoalAcceptanceStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::GoalAcceptanceStatusCode_Value >(value_);
}
inline void GoalAcceptanceStatusCode::set_value(::google::fhir::stu3::proto::GoalAcceptanceStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.GoalAcceptanceStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool GoalAcceptanceStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& GoalAcceptanceStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& GoalAcceptanceStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GoalAcceptanceStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* GoalAcceptanceStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.GoalAcceptanceStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* GoalAcceptanceStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.GoalAcceptanceStatusCode.id)
  return id_;
}
inline void GoalAcceptanceStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.GoalAcceptanceStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int GoalAcceptanceStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* GoalAcceptanceStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.GoalAcceptanceStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
GoalAcceptanceStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.GoalAcceptanceStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& GoalAcceptanceStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GoalAcceptanceStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* GoalAcceptanceStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.GoalAcceptanceStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
GoalAcceptanceStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.GoalAcceptanceStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// GoalCategoryCode

// .google.fhir.stu3.proto.GoalCategoryCode.Value value = 1;
inline void GoalCategoryCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::GoalCategoryCode_Value GoalCategoryCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GoalCategoryCode.value)
  return static_cast< ::google::fhir::stu3::proto::GoalCategoryCode_Value >(value_);
}
inline void GoalCategoryCode::set_value(::google::fhir::stu3::proto::GoalCategoryCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.GoalCategoryCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool GoalCategoryCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& GoalCategoryCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& GoalCategoryCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GoalCategoryCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* GoalCategoryCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.GoalCategoryCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* GoalCategoryCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.GoalCategoryCode.id)
  return id_;
}
inline void GoalCategoryCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.GoalCategoryCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int GoalCategoryCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* GoalCategoryCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.GoalCategoryCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
GoalCategoryCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.GoalCategoryCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& GoalCategoryCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GoalCategoryCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* GoalCategoryCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.GoalCategoryCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
GoalCategoryCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.GoalCategoryCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// GoalPriorityCode

// .google.fhir.stu3.proto.GoalPriorityCode.Value value = 1;
inline void GoalPriorityCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::GoalPriorityCode_Value GoalPriorityCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GoalPriorityCode.value)
  return static_cast< ::google::fhir::stu3::proto::GoalPriorityCode_Value >(value_);
}
inline void GoalPriorityCode::set_value(::google::fhir::stu3::proto::GoalPriorityCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.GoalPriorityCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool GoalPriorityCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& GoalPriorityCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& GoalPriorityCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GoalPriorityCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* GoalPriorityCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.GoalPriorityCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* GoalPriorityCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.GoalPriorityCode.id)
  return id_;
}
inline void GoalPriorityCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.GoalPriorityCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int GoalPriorityCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* GoalPriorityCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.GoalPriorityCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
GoalPriorityCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.GoalPriorityCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& GoalPriorityCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GoalPriorityCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* GoalPriorityCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.GoalPriorityCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
GoalPriorityCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.GoalPriorityCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// GoalRelationshipTypeCode

// .google.fhir.stu3.proto.GoalRelationshipTypeCode.Value value = 1;
inline void GoalRelationshipTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::GoalRelationshipTypeCode_Value GoalRelationshipTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GoalRelationshipTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::GoalRelationshipTypeCode_Value >(value_);
}
inline void GoalRelationshipTypeCode::set_value(::google::fhir::stu3::proto::GoalRelationshipTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.GoalRelationshipTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool GoalRelationshipTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& GoalRelationshipTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& GoalRelationshipTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GoalRelationshipTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* GoalRelationshipTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.GoalRelationshipTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* GoalRelationshipTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.GoalRelationshipTypeCode.id)
  return id_;
}
inline void GoalRelationshipTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.GoalRelationshipTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int GoalRelationshipTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* GoalRelationshipTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.GoalRelationshipTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
GoalRelationshipTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.GoalRelationshipTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& GoalRelationshipTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GoalRelationshipTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* GoalRelationshipTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.GoalRelationshipTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
GoalRelationshipTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.GoalRelationshipTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// GoalStatusCode

// .google.fhir.stu3.proto.GoalStatusCode.Value value = 1;
inline void GoalStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::GoalStatusCode_Value GoalStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GoalStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::GoalStatusCode_Value >(value_);
}
inline void GoalStatusCode::set_value(::google::fhir::stu3::proto::GoalStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.GoalStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool GoalStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& GoalStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& GoalStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GoalStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* GoalStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.GoalStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* GoalStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.GoalStatusCode.id)
  return id_;
}
inline void GoalStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.GoalStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int GoalStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* GoalStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.GoalStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
GoalStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.GoalStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& GoalStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GoalStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* GoalStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.GoalStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
GoalStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.GoalStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// GoalStatusReasonCode

// .google.fhir.stu3.proto.GoalStatusReasonCode.Value value = 1;
inline void GoalStatusReasonCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::GoalStatusReasonCode_Value GoalStatusReasonCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GoalStatusReasonCode.value)
  return static_cast< ::google::fhir::stu3::proto::GoalStatusReasonCode_Value >(value_);
}
inline void GoalStatusReasonCode::set_value(::google::fhir::stu3::proto::GoalStatusReasonCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.GoalStatusReasonCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool GoalStatusReasonCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& GoalStatusReasonCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& GoalStatusReasonCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GoalStatusReasonCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* GoalStatusReasonCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.GoalStatusReasonCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* GoalStatusReasonCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.GoalStatusReasonCode.id)
  return id_;
}
inline void GoalStatusReasonCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.GoalStatusReasonCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int GoalStatusReasonCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* GoalStatusReasonCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.GoalStatusReasonCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
GoalStatusReasonCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.GoalStatusReasonCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& GoalStatusReasonCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GoalStatusReasonCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* GoalStatusReasonCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.GoalStatusReasonCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
GoalStatusReasonCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.GoalStatusReasonCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// GraphCompartmentRuleCode

// .google.fhir.stu3.proto.GraphCompartmentRuleCode.Value value = 1;
inline void GraphCompartmentRuleCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::GraphCompartmentRuleCode_Value GraphCompartmentRuleCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GraphCompartmentRuleCode.value)
  return static_cast< ::google::fhir::stu3::proto::GraphCompartmentRuleCode_Value >(value_);
}
inline void GraphCompartmentRuleCode::set_value(::google::fhir::stu3::proto::GraphCompartmentRuleCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.GraphCompartmentRuleCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool GraphCompartmentRuleCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& GraphCompartmentRuleCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& GraphCompartmentRuleCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GraphCompartmentRuleCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* GraphCompartmentRuleCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.GraphCompartmentRuleCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* GraphCompartmentRuleCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.GraphCompartmentRuleCode.id)
  return id_;
}
inline void GraphCompartmentRuleCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.GraphCompartmentRuleCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int GraphCompartmentRuleCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* GraphCompartmentRuleCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.GraphCompartmentRuleCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
GraphCompartmentRuleCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.GraphCompartmentRuleCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& GraphCompartmentRuleCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GraphCompartmentRuleCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* GraphCompartmentRuleCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.GraphCompartmentRuleCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
GraphCompartmentRuleCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.GraphCompartmentRuleCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// GroupTypeCode

// .google.fhir.stu3.proto.GroupTypeCode.Value value = 1;
inline void GroupTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::GroupTypeCode_Value GroupTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GroupTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::GroupTypeCode_Value >(value_);
}
inline void GroupTypeCode::set_value(::google::fhir::stu3::proto::GroupTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.GroupTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool GroupTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& GroupTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& GroupTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GroupTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* GroupTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.GroupTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* GroupTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.GroupTypeCode.id)
  return id_;
}
inline void GroupTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.GroupTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int GroupTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* GroupTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.GroupTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
GroupTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.GroupTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& GroupTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GroupTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* GroupTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.GroupTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
GroupTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.GroupTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// GuidanceResponseStatusCode

// .google.fhir.stu3.proto.GuidanceResponseStatusCode.Value value = 1;
inline void GuidanceResponseStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::GuidanceResponseStatusCode_Value GuidanceResponseStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GuidanceResponseStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::GuidanceResponseStatusCode_Value >(value_);
}
inline void GuidanceResponseStatusCode::set_value(::google::fhir::stu3::proto::GuidanceResponseStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.GuidanceResponseStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool GuidanceResponseStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& GuidanceResponseStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& GuidanceResponseStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GuidanceResponseStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* GuidanceResponseStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.GuidanceResponseStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* GuidanceResponseStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.GuidanceResponseStatusCode.id)
  return id_;
}
inline void GuidanceResponseStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.GuidanceResponseStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int GuidanceResponseStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* GuidanceResponseStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.GuidanceResponseStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
GuidanceResponseStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.GuidanceResponseStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& GuidanceResponseStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GuidanceResponseStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* GuidanceResponseStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.GuidanceResponseStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
GuidanceResponseStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.GuidanceResponseStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// GuideDependencyTypeCode

// .google.fhir.stu3.proto.GuideDependencyTypeCode.Value value = 1;
inline void GuideDependencyTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::GuideDependencyTypeCode_Value GuideDependencyTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GuideDependencyTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::GuideDependencyTypeCode_Value >(value_);
}
inline void GuideDependencyTypeCode::set_value(::google::fhir::stu3::proto::GuideDependencyTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.GuideDependencyTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool GuideDependencyTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& GuideDependencyTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& GuideDependencyTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GuideDependencyTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* GuideDependencyTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.GuideDependencyTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* GuideDependencyTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.GuideDependencyTypeCode.id)
  return id_;
}
inline void GuideDependencyTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.GuideDependencyTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int GuideDependencyTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* GuideDependencyTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.GuideDependencyTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
GuideDependencyTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.GuideDependencyTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& GuideDependencyTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GuideDependencyTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* GuideDependencyTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.GuideDependencyTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
GuideDependencyTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.GuideDependencyTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// GuidePageKindCode

// .google.fhir.stu3.proto.GuidePageKindCode.Value value = 1;
inline void GuidePageKindCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::GuidePageKindCode_Value GuidePageKindCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GuidePageKindCode.value)
  return static_cast< ::google::fhir::stu3::proto::GuidePageKindCode_Value >(value_);
}
inline void GuidePageKindCode::set_value(::google::fhir::stu3::proto::GuidePageKindCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.GuidePageKindCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool GuidePageKindCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& GuidePageKindCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& GuidePageKindCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GuidePageKindCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* GuidePageKindCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.GuidePageKindCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* GuidePageKindCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.GuidePageKindCode.id)
  return id_;
}
inline void GuidePageKindCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.GuidePageKindCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int GuidePageKindCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* GuidePageKindCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.GuidePageKindCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
GuidePageKindCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.GuidePageKindCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& GuidePageKindCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.GuidePageKindCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* GuidePageKindCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.GuidePageKindCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
GuidePageKindCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.GuidePageKindCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// FamilyHistoryNotDoneReasonCode

// .google.fhir.stu3.proto.FamilyHistoryNotDoneReasonCode.Value value = 1;
inline void FamilyHistoryNotDoneReasonCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::FamilyHistoryNotDoneReasonCode_Value FamilyHistoryNotDoneReasonCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FamilyHistoryNotDoneReasonCode.value)
  return static_cast< ::google::fhir::stu3::proto::FamilyHistoryNotDoneReasonCode_Value >(value_);
}
inline void FamilyHistoryNotDoneReasonCode::set_value(::google::fhir::stu3::proto::FamilyHistoryNotDoneReasonCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.FamilyHistoryNotDoneReasonCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool FamilyHistoryNotDoneReasonCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& FamilyHistoryNotDoneReasonCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& FamilyHistoryNotDoneReasonCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FamilyHistoryNotDoneReasonCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* FamilyHistoryNotDoneReasonCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.FamilyHistoryNotDoneReasonCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* FamilyHistoryNotDoneReasonCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.FamilyHistoryNotDoneReasonCode.id)
  return id_;
}
inline void FamilyHistoryNotDoneReasonCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.FamilyHistoryNotDoneReasonCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int FamilyHistoryNotDoneReasonCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* FamilyHistoryNotDoneReasonCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.FamilyHistoryNotDoneReasonCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
FamilyHistoryNotDoneReasonCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.FamilyHistoryNotDoneReasonCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& FamilyHistoryNotDoneReasonCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FamilyHistoryNotDoneReasonCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* FamilyHistoryNotDoneReasonCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.FamilyHistoryNotDoneReasonCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
FamilyHistoryNotDoneReasonCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.FamilyHistoryNotDoneReasonCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// FamilyHistoryStatusCode

// .google.fhir.stu3.proto.FamilyHistoryStatusCode.Value value = 1;
inline void FamilyHistoryStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::FamilyHistoryStatusCode_Value FamilyHistoryStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FamilyHistoryStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::FamilyHistoryStatusCode_Value >(value_);
}
inline void FamilyHistoryStatusCode::set_value(::google::fhir::stu3::proto::FamilyHistoryStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.FamilyHistoryStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool FamilyHistoryStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& FamilyHistoryStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& FamilyHistoryStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FamilyHistoryStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* FamilyHistoryStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.FamilyHistoryStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* FamilyHistoryStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.FamilyHistoryStatusCode.id)
  return id_;
}
inline void FamilyHistoryStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.FamilyHistoryStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int FamilyHistoryStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* FamilyHistoryStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.FamilyHistoryStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
FamilyHistoryStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.FamilyHistoryStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& FamilyHistoryStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FamilyHistoryStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* FamilyHistoryStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.FamilyHistoryStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
FamilyHistoryStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.FamilyHistoryStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// HL7WorkgroupCode

// .google.fhir.stu3.proto.HL7WorkgroupCode.Value value = 1;
inline void HL7WorkgroupCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::HL7WorkgroupCode_Value HL7WorkgroupCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.HL7WorkgroupCode.value)
  return static_cast< ::google::fhir::stu3::proto::HL7WorkgroupCode_Value >(value_);
}
inline void HL7WorkgroupCode::set_value(::google::fhir::stu3::proto::HL7WorkgroupCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.HL7WorkgroupCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool HL7WorkgroupCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& HL7WorkgroupCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& HL7WorkgroupCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.HL7WorkgroupCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* HL7WorkgroupCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.HL7WorkgroupCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* HL7WorkgroupCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.HL7WorkgroupCode.id)
  return id_;
}
inline void HL7WorkgroupCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.HL7WorkgroupCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int HL7WorkgroupCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* HL7WorkgroupCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.HL7WorkgroupCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
HL7WorkgroupCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.HL7WorkgroupCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& HL7WorkgroupCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.HL7WorkgroupCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* HL7WorkgroupCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.HL7WorkgroupCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
HL7WorkgroupCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.HL7WorkgroupCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// TestScriptRequestMethodCodeCode

// .google.fhir.stu3.proto.TestScriptRequestMethodCodeCode.Value value = 1;
inline void TestScriptRequestMethodCodeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::TestScriptRequestMethodCodeCode_Value TestScriptRequestMethodCodeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TestScriptRequestMethodCodeCode.value)
  return static_cast< ::google::fhir::stu3::proto::TestScriptRequestMethodCodeCode_Value >(value_);
}
inline void TestScriptRequestMethodCodeCode::set_value(::google::fhir::stu3::proto::TestScriptRequestMethodCodeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.TestScriptRequestMethodCodeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool TestScriptRequestMethodCodeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& TestScriptRequestMethodCodeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& TestScriptRequestMethodCodeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TestScriptRequestMethodCodeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* TestScriptRequestMethodCodeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.TestScriptRequestMethodCodeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* TestScriptRequestMethodCodeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TestScriptRequestMethodCodeCode.id)
  return id_;
}
inline void TestScriptRequestMethodCodeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.TestScriptRequestMethodCodeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int TestScriptRequestMethodCodeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* TestScriptRequestMethodCodeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TestScriptRequestMethodCodeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
TestScriptRequestMethodCodeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.TestScriptRequestMethodCodeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& TestScriptRequestMethodCodeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TestScriptRequestMethodCodeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* TestScriptRequestMethodCodeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.TestScriptRequestMethodCodeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
TestScriptRequestMethodCodeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.TestScriptRequestMethodCodeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// HTTPVerbCode

// .google.fhir.stu3.proto.HTTPVerbCode.Value value = 1;
inline void HTTPVerbCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::HTTPVerbCode_Value HTTPVerbCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.HTTPVerbCode.value)
  return static_cast< ::google::fhir::stu3::proto::HTTPVerbCode_Value >(value_);
}
inline void HTTPVerbCode::set_value(::google::fhir::stu3::proto::HTTPVerbCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.HTTPVerbCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool HTTPVerbCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& HTTPVerbCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& HTTPVerbCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.HTTPVerbCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* HTTPVerbCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.HTTPVerbCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* HTTPVerbCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.HTTPVerbCode.id)
  return id_;
}
inline void HTTPVerbCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.HTTPVerbCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int HTTPVerbCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* HTTPVerbCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.HTTPVerbCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
HTTPVerbCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.HTTPVerbCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& HTTPVerbCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.HTTPVerbCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* HTTPVerbCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.HTTPVerbCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
HTTPVerbCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.HTTPVerbCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// IdentityAssuranceLevelCode

// .google.fhir.stu3.proto.IdentityAssuranceLevelCode.Value value = 1;
inline void IdentityAssuranceLevelCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::IdentityAssuranceLevelCode_Value IdentityAssuranceLevelCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.IdentityAssuranceLevelCode.value)
  return static_cast< ::google::fhir::stu3::proto::IdentityAssuranceLevelCode_Value >(value_);
}
inline void IdentityAssuranceLevelCode::set_value(::google::fhir::stu3::proto::IdentityAssuranceLevelCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.IdentityAssuranceLevelCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool IdentityAssuranceLevelCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& IdentityAssuranceLevelCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& IdentityAssuranceLevelCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.IdentityAssuranceLevelCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* IdentityAssuranceLevelCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.IdentityAssuranceLevelCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* IdentityAssuranceLevelCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.IdentityAssuranceLevelCode.id)
  return id_;
}
inline void IdentityAssuranceLevelCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.IdentityAssuranceLevelCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int IdentityAssuranceLevelCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* IdentityAssuranceLevelCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.IdentityAssuranceLevelCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
IdentityAssuranceLevelCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.IdentityAssuranceLevelCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& IdentityAssuranceLevelCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.IdentityAssuranceLevelCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* IdentityAssuranceLevelCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.IdentityAssuranceLevelCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
IdentityAssuranceLevelCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.IdentityAssuranceLevelCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ImmunizationOriginCodesCode

// .google.fhir.stu3.proto.ImmunizationOriginCodesCode.Value value = 1;
inline void ImmunizationOriginCodesCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ImmunizationOriginCodesCode_Value ImmunizationOriginCodesCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ImmunizationOriginCodesCode.value)
  return static_cast< ::google::fhir::stu3::proto::ImmunizationOriginCodesCode_Value >(value_);
}
inline void ImmunizationOriginCodesCode::set_value(::google::fhir::stu3::proto::ImmunizationOriginCodesCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ImmunizationOriginCodesCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ImmunizationOriginCodesCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ImmunizationOriginCodesCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ImmunizationOriginCodesCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ImmunizationOriginCodesCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ImmunizationOriginCodesCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ImmunizationOriginCodesCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ImmunizationOriginCodesCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ImmunizationOriginCodesCode.id)
  return id_;
}
inline void ImmunizationOriginCodesCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ImmunizationOriginCodesCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ImmunizationOriginCodesCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ImmunizationOriginCodesCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ImmunizationOriginCodesCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ImmunizationOriginCodesCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ImmunizationOriginCodesCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ImmunizationOriginCodesCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ImmunizationOriginCodesCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ImmunizationOriginCodesCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ImmunizationOriginCodesCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ImmunizationOriginCodesCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ImmunizationOriginCodesCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ImmunizationRecommendationDateCriterionCodesCode

// .google.fhir.stu3.proto.ImmunizationRecommendationDateCriterionCodesCode.Value value = 1;
inline void ImmunizationRecommendationDateCriterionCodesCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ImmunizationRecommendationDateCriterionCodesCode_Value ImmunizationRecommendationDateCriterionCodesCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ImmunizationRecommendationDateCriterionCodesCode.value)
  return static_cast< ::google::fhir::stu3::proto::ImmunizationRecommendationDateCriterionCodesCode_Value >(value_);
}
inline void ImmunizationRecommendationDateCriterionCodesCode::set_value(::google::fhir::stu3::proto::ImmunizationRecommendationDateCriterionCodesCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ImmunizationRecommendationDateCriterionCodesCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ImmunizationRecommendationDateCriterionCodesCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ImmunizationRecommendationDateCriterionCodesCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ImmunizationRecommendationDateCriterionCodesCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ImmunizationRecommendationDateCriterionCodesCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ImmunizationRecommendationDateCriterionCodesCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ImmunizationRecommendationDateCriterionCodesCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ImmunizationRecommendationDateCriterionCodesCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ImmunizationRecommendationDateCriterionCodesCode.id)
  return id_;
}
inline void ImmunizationRecommendationDateCriterionCodesCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ImmunizationRecommendationDateCriterionCodesCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ImmunizationRecommendationDateCriterionCodesCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ImmunizationRecommendationDateCriterionCodesCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ImmunizationRecommendationDateCriterionCodesCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ImmunizationRecommendationDateCriterionCodesCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ImmunizationRecommendationDateCriterionCodesCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ImmunizationRecommendationDateCriterionCodesCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ImmunizationRecommendationDateCriterionCodesCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ImmunizationRecommendationDateCriterionCodesCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ImmunizationRecommendationDateCriterionCodesCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ImmunizationRecommendationDateCriterionCodesCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ImmunizationRecommendationDateCriterionCodesCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ImmunizationRecommendationStatusCodesCode

// .google.fhir.stu3.proto.ImmunizationRecommendationStatusCodesCode.Value value = 1;
inline void ImmunizationRecommendationStatusCodesCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ImmunizationRecommendationStatusCodesCode_Value ImmunizationRecommendationStatusCodesCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ImmunizationRecommendationStatusCodesCode.value)
  return static_cast< ::google::fhir::stu3::proto::ImmunizationRecommendationStatusCodesCode_Value >(value_);
}
inline void ImmunizationRecommendationStatusCodesCode::set_value(::google::fhir::stu3::proto::ImmunizationRecommendationStatusCodesCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ImmunizationRecommendationStatusCodesCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ImmunizationRecommendationStatusCodesCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ImmunizationRecommendationStatusCodesCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ImmunizationRecommendationStatusCodesCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ImmunizationRecommendationStatusCodesCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ImmunizationRecommendationStatusCodesCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ImmunizationRecommendationStatusCodesCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ImmunizationRecommendationStatusCodesCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ImmunizationRecommendationStatusCodesCode.id)
  return id_;
}
inline void ImmunizationRecommendationStatusCodesCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ImmunizationRecommendationStatusCodesCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ImmunizationRecommendationStatusCodesCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ImmunizationRecommendationStatusCodesCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ImmunizationRecommendationStatusCodesCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ImmunizationRecommendationStatusCodesCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ImmunizationRecommendationStatusCodesCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ImmunizationRecommendationStatusCodesCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ImmunizationRecommendationStatusCodesCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ImmunizationRecommendationStatusCodesCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ImmunizationRecommendationStatusCodesCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ImmunizationRecommendationStatusCodesCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ImmunizationRecommendationStatusCodesCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ImmunizationStatusCodesCode

// .google.fhir.stu3.proto.ImmunizationStatusCodesCode.Value value = 1;
inline void ImmunizationStatusCodesCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ImmunizationStatusCodesCode_Value ImmunizationStatusCodesCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ImmunizationStatusCodesCode.value)
  return static_cast< ::google::fhir::stu3::proto::ImmunizationStatusCodesCode_Value >(value_);
}
inline void ImmunizationStatusCodesCode::set_value(::google::fhir::stu3::proto::ImmunizationStatusCodesCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ImmunizationStatusCodesCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ImmunizationStatusCodesCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ImmunizationStatusCodesCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ImmunizationStatusCodesCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ImmunizationStatusCodesCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ImmunizationStatusCodesCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ImmunizationStatusCodesCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ImmunizationStatusCodesCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ImmunizationStatusCodesCode.id)
  return id_;
}
inline void ImmunizationStatusCodesCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ImmunizationStatusCodesCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ImmunizationStatusCodesCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ImmunizationStatusCodesCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ImmunizationStatusCodesCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ImmunizationStatusCodesCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ImmunizationStatusCodesCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ImmunizationStatusCodesCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ImmunizationStatusCodesCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ImmunizationStatusCodesCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ImmunizationStatusCodesCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ImmunizationStatusCodesCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ImmunizationStatusCodesCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ImplantStatusCode

// .google.fhir.stu3.proto.ImplantStatusCode.Value value = 1;
inline void ImplantStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ImplantStatusCode_Value ImplantStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ImplantStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::ImplantStatusCode_Value >(value_);
}
inline void ImplantStatusCode::set_value(::google::fhir::stu3::proto::ImplantStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ImplantStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ImplantStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ImplantStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ImplantStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ImplantStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ImplantStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ImplantStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ImplantStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ImplantStatusCode.id)
  return id_;
}
inline void ImplantStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ImplantStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ImplantStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ImplantStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ImplantStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ImplantStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ImplantStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ImplantStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ImplantStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ImplantStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ImplantStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ImplantStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ImplantStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// InstanceAvailabilityCode

// .google.fhir.stu3.proto.InstanceAvailabilityCode.Value value = 1;
inline void InstanceAvailabilityCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::InstanceAvailabilityCode_Value InstanceAvailabilityCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.InstanceAvailabilityCode.value)
  return static_cast< ::google::fhir::stu3::proto::InstanceAvailabilityCode_Value >(value_);
}
inline void InstanceAvailabilityCode::set_value(::google::fhir::stu3::proto::InstanceAvailabilityCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.InstanceAvailabilityCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool InstanceAvailabilityCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& InstanceAvailabilityCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& InstanceAvailabilityCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.InstanceAvailabilityCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* InstanceAvailabilityCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.InstanceAvailabilityCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* InstanceAvailabilityCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.InstanceAvailabilityCode.id)
  return id_;
}
inline void InstanceAvailabilityCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.InstanceAvailabilityCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int InstanceAvailabilityCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* InstanceAvailabilityCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.InstanceAvailabilityCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
InstanceAvailabilityCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.InstanceAvailabilityCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& InstanceAvailabilityCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.InstanceAvailabilityCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* InstanceAvailabilityCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.InstanceAvailabilityCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
InstanceAvailabilityCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.InstanceAvailabilityCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// IssueSeverityCode

// .google.fhir.stu3.proto.IssueSeverityCode.Value value = 1;
inline void IssueSeverityCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::IssueSeverityCode_Value IssueSeverityCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.IssueSeverityCode.value)
  return static_cast< ::google::fhir::stu3::proto::IssueSeverityCode_Value >(value_);
}
inline void IssueSeverityCode::set_value(::google::fhir::stu3::proto::IssueSeverityCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.IssueSeverityCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool IssueSeverityCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& IssueSeverityCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& IssueSeverityCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.IssueSeverityCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* IssueSeverityCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.IssueSeverityCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* IssueSeverityCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.IssueSeverityCode.id)
  return id_;
}
inline void IssueSeverityCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.IssueSeverityCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int IssueSeverityCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* IssueSeverityCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.IssueSeverityCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
IssueSeverityCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.IssueSeverityCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& IssueSeverityCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.IssueSeverityCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* IssueSeverityCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.IssueSeverityCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
IssueSeverityCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.IssueSeverityCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// IssueTypeCode

// .google.fhir.stu3.proto.IssueTypeCode.Value value = 1;
inline void IssueTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::IssueTypeCode_Value IssueTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.IssueTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::IssueTypeCode_Value >(value_);
}
inline void IssueTypeCode::set_value(::google::fhir::stu3::proto::IssueTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.IssueTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool IssueTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& IssueTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& IssueTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.IssueTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* IssueTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.IssueTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* IssueTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.IssueTypeCode.id)
  return id_;
}
inline void IssueTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.IssueTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int IssueTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* IssueTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.IssueTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
IssueTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.IssueTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& IssueTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.IssueTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* IssueTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.IssueTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
IssueTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.IssueTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// QuestionnaireItemTypeCode

// .google.fhir.stu3.proto.QuestionnaireItemTypeCode.Value value = 1;
inline void QuestionnaireItemTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::QuestionnaireItemTypeCode_Value QuestionnaireItemTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.QuestionnaireItemTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::QuestionnaireItemTypeCode_Value >(value_);
}
inline void QuestionnaireItemTypeCode::set_value(::google::fhir::stu3::proto::QuestionnaireItemTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.QuestionnaireItemTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool QuestionnaireItemTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& QuestionnaireItemTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& QuestionnaireItemTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.QuestionnaireItemTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* QuestionnaireItemTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.QuestionnaireItemTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* QuestionnaireItemTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.QuestionnaireItemTypeCode.id)
  return id_;
}
inline void QuestionnaireItemTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.QuestionnaireItemTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int QuestionnaireItemTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* QuestionnaireItemTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.QuestionnaireItemTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
QuestionnaireItemTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.QuestionnaireItemTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& QuestionnaireItemTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.QuestionnaireItemTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* QuestionnaireItemTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.QuestionnaireItemTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
QuestionnaireItemTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.QuestionnaireItemTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// LibraryTypeCode

// .google.fhir.stu3.proto.LibraryTypeCode.Value value = 1;
inline void LibraryTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::LibraryTypeCode_Value LibraryTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.LibraryTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::LibraryTypeCode_Value >(value_);
}
inline void LibraryTypeCode::set_value(::google::fhir::stu3::proto::LibraryTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.LibraryTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool LibraryTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& LibraryTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& LibraryTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.LibraryTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* LibraryTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.LibraryTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* LibraryTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.LibraryTypeCode.id)
  return id_;
}
inline void LibraryTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.LibraryTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int LibraryTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* LibraryTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.LibraryTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
LibraryTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.LibraryTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& LibraryTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.LibraryTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* LibraryTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.LibraryTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
LibraryTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.LibraryTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// LinkageTypeCode

// .google.fhir.stu3.proto.LinkageTypeCode.Value value = 1;
inline void LinkageTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::LinkageTypeCode_Value LinkageTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.LinkageTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::LinkageTypeCode_Value >(value_);
}
inline void LinkageTypeCode::set_value(::google::fhir::stu3::proto::LinkageTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.LinkageTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool LinkageTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& LinkageTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& LinkageTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.LinkageTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* LinkageTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.LinkageTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* LinkageTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.LinkageTypeCode.id)
  return id_;
}
inline void LinkageTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.LinkageTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int LinkageTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* LinkageTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.LinkageTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
LinkageTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.LinkageTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& LinkageTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.LinkageTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* LinkageTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.LinkageTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
LinkageTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.LinkageTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// LinkTypeCode

// .google.fhir.stu3.proto.LinkTypeCode.Value value = 1;
inline void LinkTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::LinkTypeCode_Value LinkTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.LinkTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::LinkTypeCode_Value >(value_);
}
inline void LinkTypeCode::set_value(::google::fhir::stu3::proto::LinkTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.LinkTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool LinkTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& LinkTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& LinkTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.LinkTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* LinkTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.LinkTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* LinkTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.LinkTypeCode.id)
  return id_;
}
inline void LinkTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.LinkTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int LinkTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* LinkTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.LinkTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
LinkTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.LinkTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& LinkTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.LinkTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* LinkTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.LinkTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
LinkTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.LinkTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ListEmptyReasonsCode

// .google.fhir.stu3.proto.ListEmptyReasonsCode.Value value = 1;
inline void ListEmptyReasonsCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ListEmptyReasonsCode_Value ListEmptyReasonsCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ListEmptyReasonsCode.value)
  return static_cast< ::google::fhir::stu3::proto::ListEmptyReasonsCode_Value >(value_);
}
inline void ListEmptyReasonsCode::set_value(::google::fhir::stu3::proto::ListEmptyReasonsCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ListEmptyReasonsCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ListEmptyReasonsCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ListEmptyReasonsCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ListEmptyReasonsCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ListEmptyReasonsCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ListEmptyReasonsCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ListEmptyReasonsCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ListEmptyReasonsCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ListEmptyReasonsCode.id)
  return id_;
}
inline void ListEmptyReasonsCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ListEmptyReasonsCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ListEmptyReasonsCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ListEmptyReasonsCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ListEmptyReasonsCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ListEmptyReasonsCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ListEmptyReasonsCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ListEmptyReasonsCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ListEmptyReasonsCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ListEmptyReasonsCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ListEmptyReasonsCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ListEmptyReasonsCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ListEmptyReasonsCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ExampleUseCodesforListCode

// .google.fhir.stu3.proto.ExampleUseCodesforListCode.Value value = 1;
inline void ExampleUseCodesforListCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ExampleUseCodesforListCode_Value ExampleUseCodesforListCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ExampleUseCodesforListCode.value)
  return static_cast< ::google::fhir::stu3::proto::ExampleUseCodesforListCode_Value >(value_);
}
inline void ExampleUseCodesforListCode::set_value(::google::fhir::stu3::proto::ExampleUseCodesforListCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ExampleUseCodesforListCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ExampleUseCodesforListCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ExampleUseCodesforListCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ExampleUseCodesforListCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ExampleUseCodesforListCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ExampleUseCodesforListCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ExampleUseCodesforListCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ExampleUseCodesforListCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ExampleUseCodesforListCode.id)
  return id_;
}
inline void ExampleUseCodesforListCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ExampleUseCodesforListCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ExampleUseCodesforListCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ExampleUseCodesforListCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ExampleUseCodesforListCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ExampleUseCodesforListCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ExampleUseCodesforListCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ExampleUseCodesforListCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ExampleUseCodesforListCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ExampleUseCodesforListCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ExampleUseCodesforListCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ExampleUseCodesforListCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ExampleUseCodesforListCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ListModeCode

// .google.fhir.stu3.proto.ListModeCode.Value value = 1;
inline void ListModeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ListModeCode_Value ListModeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ListModeCode.value)
  return static_cast< ::google::fhir::stu3::proto::ListModeCode_Value >(value_);
}
inline void ListModeCode::set_value(::google::fhir::stu3::proto::ListModeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ListModeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ListModeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ListModeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ListModeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ListModeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ListModeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ListModeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ListModeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ListModeCode.id)
  return id_;
}
inline void ListModeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ListModeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ListModeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ListModeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ListModeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ListModeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ListModeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ListModeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ListModeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ListModeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ListModeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ListModeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ListModeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ListOrderCodesCode

// .google.fhir.stu3.proto.ListOrderCodesCode.Value value = 1;
inline void ListOrderCodesCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ListOrderCodesCode_Value ListOrderCodesCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ListOrderCodesCode.value)
  return static_cast< ::google::fhir::stu3::proto::ListOrderCodesCode_Value >(value_);
}
inline void ListOrderCodesCode::set_value(::google::fhir::stu3::proto::ListOrderCodesCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ListOrderCodesCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ListOrderCodesCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ListOrderCodesCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ListOrderCodesCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ListOrderCodesCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ListOrderCodesCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ListOrderCodesCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ListOrderCodesCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ListOrderCodesCode.id)
  return id_;
}
inline void ListOrderCodesCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ListOrderCodesCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ListOrderCodesCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ListOrderCodesCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ListOrderCodesCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ListOrderCodesCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ListOrderCodesCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ListOrderCodesCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ListOrderCodesCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ListOrderCodesCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ListOrderCodesCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ListOrderCodesCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ListOrderCodesCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ListStatusCode

// .google.fhir.stu3.proto.ListStatusCode.Value value = 1;
inline void ListStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ListStatusCode_Value ListStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ListStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::ListStatusCode_Value >(value_);
}
inline void ListStatusCode::set_value(::google::fhir::stu3::proto::ListStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ListStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ListStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ListStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ListStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ListStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ListStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ListStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ListStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ListStatusCode.id)
  return id_;
}
inline void ListStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ListStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ListStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ListStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ListStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ListStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ListStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ListStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ListStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ListStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ListStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ListStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ListStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// LocationModeCode

// .google.fhir.stu3.proto.LocationModeCode.Value value = 1;
inline void LocationModeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::LocationModeCode_Value LocationModeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.LocationModeCode.value)
  return static_cast< ::google::fhir::stu3::proto::LocationModeCode_Value >(value_);
}
inline void LocationModeCode::set_value(::google::fhir::stu3::proto::LocationModeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.LocationModeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool LocationModeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& LocationModeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& LocationModeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.LocationModeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* LocationModeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.LocationModeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* LocationModeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.LocationModeCode.id)
  return id_;
}
inline void LocationModeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.LocationModeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int LocationModeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* LocationModeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.LocationModeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
LocationModeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.LocationModeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& LocationModeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.LocationModeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* LocationModeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.LocationModeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
LocationModeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.LocationModeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// LocationTypeCode

// .google.fhir.stu3.proto.LocationTypeCode.Value value = 1;
inline void LocationTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::LocationTypeCode_Value LocationTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.LocationTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::LocationTypeCode_Value >(value_);
}
inline void LocationTypeCode::set_value(::google::fhir::stu3::proto::LocationTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.LocationTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool LocationTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& LocationTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& LocationTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.LocationTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* LocationTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.LocationTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* LocationTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.LocationTypeCode.id)
  return id_;
}
inline void LocationTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.LocationTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int LocationTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* LocationTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.LocationTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
LocationTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.LocationTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& LocationTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.LocationTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* LocationTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.LocationTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
LocationTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.LocationTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// LocationStatusCode

// .google.fhir.stu3.proto.LocationStatusCode.Value value = 1;
inline void LocationStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::LocationStatusCode_Value LocationStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.LocationStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::LocationStatusCode_Value >(value_);
}
inline void LocationStatusCode::set_value(::google::fhir::stu3::proto::LocationStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.LocationStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool LocationStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& LocationStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& LocationStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.LocationStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* LocationStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.LocationStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* LocationStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.LocationStatusCode.id)
  return id_;
}
inline void LocationStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.LocationStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int LocationStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* LocationStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.LocationStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
LocationStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.LocationStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& LocationStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.LocationStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* LocationStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.LocationStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
LocationStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.LocationStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ProbabilityDistributionTypeCode

// .google.fhir.stu3.proto.ProbabilityDistributionTypeCode.Value value = 1;
inline void ProbabilityDistributionTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ProbabilityDistributionTypeCode_Value ProbabilityDistributionTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ProbabilityDistributionTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::ProbabilityDistributionTypeCode_Value >(value_);
}
inline void ProbabilityDistributionTypeCode::set_value(::google::fhir::stu3::proto::ProbabilityDistributionTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ProbabilityDistributionTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ProbabilityDistributionTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ProbabilityDistributionTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ProbabilityDistributionTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ProbabilityDistributionTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ProbabilityDistributionTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ProbabilityDistributionTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ProbabilityDistributionTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ProbabilityDistributionTypeCode.id)
  return id_;
}
inline void ProbabilityDistributionTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ProbabilityDistributionTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ProbabilityDistributionTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ProbabilityDistributionTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ProbabilityDistributionTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ProbabilityDistributionTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ProbabilityDistributionTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ProbabilityDistributionTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ProbabilityDistributionTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ProbabilityDistributionTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ProbabilityDistributionTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ProbabilityDistributionTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ProbabilityDistributionTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// StructureMapContextTypeCode

// .google.fhir.stu3.proto.StructureMapContextTypeCode.Value value = 1;
inline void StructureMapContextTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::StructureMapContextTypeCode_Value StructureMapContextTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.StructureMapContextTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::StructureMapContextTypeCode_Value >(value_);
}
inline void StructureMapContextTypeCode::set_value(::google::fhir::stu3::proto::StructureMapContextTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.StructureMapContextTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool StructureMapContextTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& StructureMapContextTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& StructureMapContextTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.StructureMapContextTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* StructureMapContextTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.StructureMapContextTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* StructureMapContextTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.StructureMapContextTypeCode.id)
  return id_;
}
inline void StructureMapContextTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.StructureMapContextTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int StructureMapContextTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* StructureMapContextTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.StructureMapContextTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
StructureMapContextTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.StructureMapContextTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& StructureMapContextTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.StructureMapContextTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* StructureMapContextTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.StructureMapContextTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
StructureMapContextTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.StructureMapContextTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// StructureMapGroupTypeModeCode

// .google.fhir.stu3.proto.StructureMapGroupTypeModeCode.Value value = 1;
inline void StructureMapGroupTypeModeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::StructureMapGroupTypeModeCode_Value StructureMapGroupTypeModeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.StructureMapGroupTypeModeCode.value)
  return static_cast< ::google::fhir::stu3::proto::StructureMapGroupTypeModeCode_Value >(value_);
}
inline void StructureMapGroupTypeModeCode::set_value(::google::fhir::stu3::proto::StructureMapGroupTypeModeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.StructureMapGroupTypeModeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool StructureMapGroupTypeModeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& StructureMapGroupTypeModeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& StructureMapGroupTypeModeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.StructureMapGroupTypeModeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* StructureMapGroupTypeModeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.StructureMapGroupTypeModeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* StructureMapGroupTypeModeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.StructureMapGroupTypeModeCode.id)
  return id_;
}
inline void StructureMapGroupTypeModeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.StructureMapGroupTypeModeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int StructureMapGroupTypeModeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* StructureMapGroupTypeModeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.StructureMapGroupTypeModeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
StructureMapGroupTypeModeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.StructureMapGroupTypeModeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& StructureMapGroupTypeModeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.StructureMapGroupTypeModeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* StructureMapGroupTypeModeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.StructureMapGroupTypeModeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
StructureMapGroupTypeModeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.StructureMapGroupTypeModeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// StructureMapInputModeCode

// .google.fhir.stu3.proto.StructureMapInputModeCode.Value value = 1;
inline void StructureMapInputModeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::StructureMapInputModeCode_Value StructureMapInputModeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.StructureMapInputModeCode.value)
  return static_cast< ::google::fhir::stu3::proto::StructureMapInputModeCode_Value >(value_);
}
inline void StructureMapInputModeCode::set_value(::google::fhir::stu3::proto::StructureMapInputModeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.StructureMapInputModeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool StructureMapInputModeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& StructureMapInputModeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& StructureMapInputModeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.StructureMapInputModeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* StructureMapInputModeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.StructureMapInputModeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* StructureMapInputModeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.StructureMapInputModeCode.id)
  return id_;
}
inline void StructureMapInputModeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.StructureMapInputModeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int StructureMapInputModeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* StructureMapInputModeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.StructureMapInputModeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
StructureMapInputModeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.StructureMapInputModeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& StructureMapInputModeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.StructureMapInputModeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* StructureMapInputModeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.StructureMapInputModeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
StructureMapInputModeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.StructureMapInputModeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// StructureMapModelModeCode

// .google.fhir.stu3.proto.StructureMapModelModeCode.Value value = 1;
inline void StructureMapModelModeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::StructureMapModelModeCode_Value StructureMapModelModeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.StructureMapModelModeCode.value)
  return static_cast< ::google::fhir::stu3::proto::StructureMapModelModeCode_Value >(value_);
}
inline void StructureMapModelModeCode::set_value(::google::fhir::stu3::proto::StructureMapModelModeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.StructureMapModelModeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool StructureMapModelModeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& StructureMapModelModeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& StructureMapModelModeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.StructureMapModelModeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* StructureMapModelModeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.StructureMapModelModeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* StructureMapModelModeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.StructureMapModelModeCode.id)
  return id_;
}
inline void StructureMapModelModeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.StructureMapModelModeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int StructureMapModelModeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* StructureMapModelModeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.StructureMapModelModeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
StructureMapModelModeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.StructureMapModelModeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& StructureMapModelModeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.StructureMapModelModeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* StructureMapModelModeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.StructureMapModelModeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
StructureMapModelModeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.StructureMapModelModeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// StructureMapSourceListModeCode

// .google.fhir.stu3.proto.StructureMapSourceListModeCode.Value value = 1;
inline void StructureMapSourceListModeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::StructureMapSourceListModeCode_Value StructureMapSourceListModeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.StructureMapSourceListModeCode.value)
  return static_cast< ::google::fhir::stu3::proto::StructureMapSourceListModeCode_Value >(value_);
}
inline void StructureMapSourceListModeCode::set_value(::google::fhir::stu3::proto::StructureMapSourceListModeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.StructureMapSourceListModeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool StructureMapSourceListModeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& StructureMapSourceListModeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& StructureMapSourceListModeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.StructureMapSourceListModeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* StructureMapSourceListModeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.StructureMapSourceListModeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* StructureMapSourceListModeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.StructureMapSourceListModeCode.id)
  return id_;
}
inline void StructureMapSourceListModeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.StructureMapSourceListModeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int StructureMapSourceListModeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* StructureMapSourceListModeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.StructureMapSourceListModeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
StructureMapSourceListModeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.StructureMapSourceListModeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& StructureMapSourceListModeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.StructureMapSourceListModeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* StructureMapSourceListModeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.StructureMapSourceListModeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
StructureMapSourceListModeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.StructureMapSourceListModeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// StructureMapTargetListModeCode

// .google.fhir.stu3.proto.StructureMapTargetListModeCode.Value value = 1;
inline void StructureMapTargetListModeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::StructureMapTargetListModeCode_Value StructureMapTargetListModeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.StructureMapTargetListModeCode.value)
  return static_cast< ::google::fhir::stu3::proto::StructureMapTargetListModeCode_Value >(value_);
}
inline void StructureMapTargetListModeCode::set_value(::google::fhir::stu3::proto::StructureMapTargetListModeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.StructureMapTargetListModeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool StructureMapTargetListModeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& StructureMapTargetListModeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& StructureMapTargetListModeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.StructureMapTargetListModeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* StructureMapTargetListModeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.StructureMapTargetListModeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* StructureMapTargetListModeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.StructureMapTargetListModeCode.id)
  return id_;
}
inline void StructureMapTargetListModeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.StructureMapTargetListModeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int StructureMapTargetListModeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* StructureMapTargetListModeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.StructureMapTargetListModeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
StructureMapTargetListModeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.StructureMapTargetListModeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& StructureMapTargetListModeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.StructureMapTargetListModeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* StructureMapTargetListModeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.StructureMapTargetListModeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
StructureMapTargetListModeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.StructureMapTargetListModeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// StructureMapTransformCode

// .google.fhir.stu3.proto.StructureMapTransformCode.Value value = 1;
inline void StructureMapTransformCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::StructureMapTransformCode_Value StructureMapTransformCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.StructureMapTransformCode.value)
  return static_cast< ::google::fhir::stu3::proto::StructureMapTransformCode_Value >(value_);
}
inline void StructureMapTransformCode::set_value(::google::fhir::stu3::proto::StructureMapTransformCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.StructureMapTransformCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool StructureMapTransformCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& StructureMapTransformCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& StructureMapTransformCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.StructureMapTransformCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* StructureMapTransformCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.StructureMapTransformCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* StructureMapTransformCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.StructureMapTransformCode.id)
  return id_;
}
inline void StructureMapTransformCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.StructureMapTransformCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int StructureMapTransformCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* StructureMapTransformCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.StructureMapTransformCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
StructureMapTransformCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.StructureMapTransformCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& StructureMapTransformCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.StructureMapTransformCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* StructureMapTransformCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.StructureMapTransformCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
StructureMapTransformCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.StructureMapTransformCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// MatchGradeCode

// .google.fhir.stu3.proto.MatchGradeCode.Value value = 1;
inline void MatchGradeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::MatchGradeCode_Value MatchGradeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MatchGradeCode.value)
  return static_cast< ::google::fhir::stu3::proto::MatchGradeCode_Value >(value_);
}
inline void MatchGradeCode::set_value(::google::fhir::stu3::proto::MatchGradeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.MatchGradeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool MatchGradeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& MatchGradeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& MatchGradeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MatchGradeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* MatchGradeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.MatchGradeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* MatchGradeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MatchGradeCode.id)
  return id_;
}
inline void MatchGradeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.MatchGradeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int MatchGradeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* MatchGradeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MatchGradeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
MatchGradeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.MatchGradeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& MatchGradeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MatchGradeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* MatchGradeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.MatchGradeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
MatchGradeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.MatchGradeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// MeasureDataUsageCode

// .google.fhir.stu3.proto.MeasureDataUsageCode.Value value = 1;
inline void MeasureDataUsageCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::MeasureDataUsageCode_Value MeasureDataUsageCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MeasureDataUsageCode.value)
  return static_cast< ::google::fhir::stu3::proto::MeasureDataUsageCode_Value >(value_);
}
inline void MeasureDataUsageCode::set_value(::google::fhir::stu3::proto::MeasureDataUsageCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.MeasureDataUsageCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool MeasureDataUsageCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& MeasureDataUsageCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& MeasureDataUsageCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MeasureDataUsageCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* MeasureDataUsageCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.MeasureDataUsageCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* MeasureDataUsageCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MeasureDataUsageCode.id)
  return id_;
}
inline void MeasureDataUsageCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.MeasureDataUsageCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int MeasureDataUsageCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* MeasureDataUsageCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MeasureDataUsageCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
MeasureDataUsageCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.MeasureDataUsageCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& MeasureDataUsageCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MeasureDataUsageCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* MeasureDataUsageCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.MeasureDataUsageCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
MeasureDataUsageCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.MeasureDataUsageCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// MeasmntPrincipleCode

// .google.fhir.stu3.proto.MeasmntPrincipleCode.Value value = 1;
inline void MeasmntPrincipleCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::MeasmntPrincipleCode_Value MeasmntPrincipleCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MeasmntPrincipleCode.value)
  return static_cast< ::google::fhir::stu3::proto::MeasmntPrincipleCode_Value >(value_);
}
inline void MeasmntPrincipleCode::set_value(::google::fhir::stu3::proto::MeasmntPrincipleCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.MeasmntPrincipleCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool MeasmntPrincipleCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& MeasmntPrincipleCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& MeasmntPrincipleCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MeasmntPrincipleCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* MeasmntPrincipleCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.MeasmntPrincipleCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* MeasmntPrincipleCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MeasmntPrincipleCode.id)
  return id_;
}
inline void MeasmntPrincipleCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.MeasmntPrincipleCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int MeasmntPrincipleCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* MeasmntPrincipleCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MeasmntPrincipleCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
MeasmntPrincipleCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.MeasmntPrincipleCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& MeasmntPrincipleCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MeasmntPrincipleCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* MeasmntPrincipleCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.MeasmntPrincipleCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
MeasmntPrincipleCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.MeasmntPrincipleCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// MeasurePopulationTypeCode

// .google.fhir.stu3.proto.MeasurePopulationTypeCode.Value value = 1;
inline void MeasurePopulationTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::MeasurePopulationTypeCode_Value MeasurePopulationTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MeasurePopulationTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::MeasurePopulationTypeCode_Value >(value_);
}
inline void MeasurePopulationTypeCode::set_value(::google::fhir::stu3::proto::MeasurePopulationTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.MeasurePopulationTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool MeasurePopulationTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& MeasurePopulationTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& MeasurePopulationTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MeasurePopulationTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* MeasurePopulationTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.MeasurePopulationTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* MeasurePopulationTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MeasurePopulationTypeCode.id)
  return id_;
}
inline void MeasurePopulationTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.MeasurePopulationTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int MeasurePopulationTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* MeasurePopulationTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MeasurePopulationTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
MeasurePopulationTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.MeasurePopulationTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& MeasurePopulationTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MeasurePopulationTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* MeasurePopulationTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.MeasurePopulationTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
MeasurePopulationTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.MeasurePopulationTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// MeasureReportStatusCode

// .google.fhir.stu3.proto.MeasureReportStatusCode.Value value = 1;
inline void MeasureReportStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::MeasureReportStatusCode_Value MeasureReportStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MeasureReportStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::MeasureReportStatusCode_Value >(value_);
}
inline void MeasureReportStatusCode::set_value(::google::fhir::stu3::proto::MeasureReportStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.MeasureReportStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool MeasureReportStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& MeasureReportStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& MeasureReportStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MeasureReportStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* MeasureReportStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.MeasureReportStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* MeasureReportStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MeasureReportStatusCode.id)
  return id_;
}
inline void MeasureReportStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.MeasureReportStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int MeasureReportStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* MeasureReportStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MeasureReportStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
MeasureReportStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.MeasureReportStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& MeasureReportStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MeasureReportStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* MeasureReportStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.MeasureReportStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
MeasureReportStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.MeasureReportStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// MeasureReportTypeCode

// .google.fhir.stu3.proto.MeasureReportTypeCode.Value value = 1;
inline void MeasureReportTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::MeasureReportTypeCode_Value MeasureReportTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MeasureReportTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::MeasureReportTypeCode_Value >(value_);
}
inline void MeasureReportTypeCode::set_value(::google::fhir::stu3::proto::MeasureReportTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.MeasureReportTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool MeasureReportTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& MeasureReportTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& MeasureReportTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MeasureReportTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* MeasureReportTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.MeasureReportTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* MeasureReportTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MeasureReportTypeCode.id)
  return id_;
}
inline void MeasureReportTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.MeasureReportTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int MeasureReportTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* MeasureReportTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MeasureReportTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
MeasureReportTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.MeasureReportTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& MeasureReportTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MeasureReportTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* MeasureReportTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.MeasureReportTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
MeasureReportTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.MeasureReportTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// MeasureScoringCode

// .google.fhir.stu3.proto.MeasureScoringCode.Value value = 1;
inline void MeasureScoringCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::MeasureScoringCode_Value MeasureScoringCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MeasureScoringCode.value)
  return static_cast< ::google::fhir::stu3::proto::MeasureScoringCode_Value >(value_);
}
inline void MeasureScoringCode::set_value(::google::fhir::stu3::proto::MeasureScoringCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.MeasureScoringCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool MeasureScoringCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& MeasureScoringCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& MeasureScoringCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MeasureScoringCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* MeasureScoringCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.MeasureScoringCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* MeasureScoringCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MeasureScoringCode.id)
  return id_;
}
inline void MeasureScoringCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.MeasureScoringCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int MeasureScoringCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* MeasureScoringCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MeasureScoringCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
MeasureScoringCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.MeasureScoringCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& MeasureScoringCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MeasureScoringCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* MeasureScoringCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.MeasureScoringCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
MeasureScoringCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.MeasureScoringCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// MeasureTypeCode

// .google.fhir.stu3.proto.MeasureTypeCode.Value value = 1;
inline void MeasureTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::MeasureTypeCode_Value MeasureTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MeasureTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::MeasureTypeCode_Value >(value_);
}
inline void MeasureTypeCode::set_value(::google::fhir::stu3::proto::MeasureTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.MeasureTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool MeasureTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& MeasureTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& MeasureTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MeasureTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* MeasureTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.MeasureTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* MeasureTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MeasureTypeCode.id)
  return id_;
}
inline void MeasureTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.MeasureTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int MeasureTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* MeasureTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MeasureTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
MeasureTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.MeasureTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& MeasureTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MeasureTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* MeasureTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.MeasureTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
MeasureTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.MeasureTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// MedicationAdministrationCategoryCode

// .google.fhir.stu3.proto.MedicationAdministrationCategoryCode.Value value = 1;
inline void MedicationAdministrationCategoryCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::MedicationAdministrationCategoryCode_Value MedicationAdministrationCategoryCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationAdministrationCategoryCode.value)
  return static_cast< ::google::fhir::stu3::proto::MedicationAdministrationCategoryCode_Value >(value_);
}
inline void MedicationAdministrationCategoryCode::set_value(::google::fhir::stu3::proto::MedicationAdministrationCategoryCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.MedicationAdministrationCategoryCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool MedicationAdministrationCategoryCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& MedicationAdministrationCategoryCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& MedicationAdministrationCategoryCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationAdministrationCategoryCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* MedicationAdministrationCategoryCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.MedicationAdministrationCategoryCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* MedicationAdministrationCategoryCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MedicationAdministrationCategoryCode.id)
  return id_;
}
inline void MedicationAdministrationCategoryCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.MedicationAdministrationCategoryCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int MedicationAdministrationCategoryCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* MedicationAdministrationCategoryCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MedicationAdministrationCategoryCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
MedicationAdministrationCategoryCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.MedicationAdministrationCategoryCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& MedicationAdministrationCategoryCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationAdministrationCategoryCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* MedicationAdministrationCategoryCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.MedicationAdministrationCategoryCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
MedicationAdministrationCategoryCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.MedicationAdministrationCategoryCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// MedicationAdministrationStatusCode

// .google.fhir.stu3.proto.MedicationAdministrationStatusCode.Value value = 1;
inline void MedicationAdministrationStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::MedicationAdministrationStatusCode_Value MedicationAdministrationStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationAdministrationStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::MedicationAdministrationStatusCode_Value >(value_);
}
inline void MedicationAdministrationStatusCode::set_value(::google::fhir::stu3::proto::MedicationAdministrationStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.MedicationAdministrationStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool MedicationAdministrationStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& MedicationAdministrationStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& MedicationAdministrationStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationAdministrationStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* MedicationAdministrationStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.MedicationAdministrationStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* MedicationAdministrationStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MedicationAdministrationStatusCode.id)
  return id_;
}
inline void MedicationAdministrationStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.MedicationAdministrationStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int MedicationAdministrationStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* MedicationAdministrationStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MedicationAdministrationStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
MedicationAdministrationStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.MedicationAdministrationStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& MedicationAdministrationStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationAdministrationStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* MedicationAdministrationStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.MedicationAdministrationStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
MedicationAdministrationStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.MedicationAdministrationStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// MedicationDispenseCategoryCode

// .google.fhir.stu3.proto.MedicationDispenseCategoryCode.Value value = 1;
inline void MedicationDispenseCategoryCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::MedicationDispenseCategoryCode_Value MedicationDispenseCategoryCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationDispenseCategoryCode.value)
  return static_cast< ::google::fhir::stu3::proto::MedicationDispenseCategoryCode_Value >(value_);
}
inline void MedicationDispenseCategoryCode::set_value(::google::fhir::stu3::proto::MedicationDispenseCategoryCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.MedicationDispenseCategoryCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool MedicationDispenseCategoryCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& MedicationDispenseCategoryCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& MedicationDispenseCategoryCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationDispenseCategoryCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* MedicationDispenseCategoryCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.MedicationDispenseCategoryCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* MedicationDispenseCategoryCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MedicationDispenseCategoryCode.id)
  return id_;
}
inline void MedicationDispenseCategoryCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.MedicationDispenseCategoryCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int MedicationDispenseCategoryCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* MedicationDispenseCategoryCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MedicationDispenseCategoryCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
MedicationDispenseCategoryCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.MedicationDispenseCategoryCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& MedicationDispenseCategoryCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationDispenseCategoryCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* MedicationDispenseCategoryCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.MedicationDispenseCategoryCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
MedicationDispenseCategoryCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.MedicationDispenseCategoryCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// MedicationDispenseStatusCode

// .google.fhir.stu3.proto.MedicationDispenseStatusCode.Value value = 1;
inline void MedicationDispenseStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::MedicationDispenseStatusCode_Value MedicationDispenseStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationDispenseStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::MedicationDispenseStatusCode_Value >(value_);
}
inline void MedicationDispenseStatusCode::set_value(::google::fhir::stu3::proto::MedicationDispenseStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.MedicationDispenseStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool MedicationDispenseStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& MedicationDispenseStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& MedicationDispenseStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationDispenseStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* MedicationDispenseStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.MedicationDispenseStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* MedicationDispenseStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MedicationDispenseStatusCode.id)
  return id_;
}
inline void MedicationDispenseStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.MedicationDispenseStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int MedicationDispenseStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* MedicationDispenseStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MedicationDispenseStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
MedicationDispenseStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.MedicationDispenseStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& MedicationDispenseStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationDispenseStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* MedicationDispenseStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.MedicationDispenseStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
MedicationDispenseStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.MedicationDispenseStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// MedicationContainerCode

// .google.fhir.stu3.proto.MedicationContainerCode.Value value = 1;
inline void MedicationContainerCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::MedicationContainerCode_Value MedicationContainerCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationContainerCode.value)
  return static_cast< ::google::fhir::stu3::proto::MedicationContainerCode_Value >(value_);
}
inline void MedicationContainerCode::set_value(::google::fhir::stu3::proto::MedicationContainerCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.MedicationContainerCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool MedicationContainerCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& MedicationContainerCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& MedicationContainerCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationContainerCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* MedicationContainerCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.MedicationContainerCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* MedicationContainerCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MedicationContainerCode.id)
  return id_;
}
inline void MedicationContainerCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.MedicationContainerCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int MedicationContainerCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* MedicationContainerCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MedicationContainerCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
MedicationContainerCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.MedicationContainerCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& MedicationContainerCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationContainerCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* MedicationContainerCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.MedicationContainerCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
MedicationContainerCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.MedicationContainerCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// MedicationRequestCategoryCode

// .google.fhir.stu3.proto.MedicationRequestCategoryCode.Value value = 1;
inline void MedicationRequestCategoryCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::MedicationRequestCategoryCode_Value MedicationRequestCategoryCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationRequestCategoryCode.value)
  return static_cast< ::google::fhir::stu3::proto::MedicationRequestCategoryCode_Value >(value_);
}
inline void MedicationRequestCategoryCode::set_value(::google::fhir::stu3::proto::MedicationRequestCategoryCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.MedicationRequestCategoryCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool MedicationRequestCategoryCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& MedicationRequestCategoryCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& MedicationRequestCategoryCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationRequestCategoryCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* MedicationRequestCategoryCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.MedicationRequestCategoryCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* MedicationRequestCategoryCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MedicationRequestCategoryCode.id)
  return id_;
}
inline void MedicationRequestCategoryCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.MedicationRequestCategoryCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int MedicationRequestCategoryCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* MedicationRequestCategoryCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MedicationRequestCategoryCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
MedicationRequestCategoryCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.MedicationRequestCategoryCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& MedicationRequestCategoryCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationRequestCategoryCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* MedicationRequestCategoryCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.MedicationRequestCategoryCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
MedicationRequestCategoryCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.MedicationRequestCategoryCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// MedicationRequestIntentCode

// .google.fhir.stu3.proto.MedicationRequestIntentCode.Value value = 1;
inline void MedicationRequestIntentCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::MedicationRequestIntentCode_Value MedicationRequestIntentCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationRequestIntentCode.value)
  return static_cast< ::google::fhir::stu3::proto::MedicationRequestIntentCode_Value >(value_);
}
inline void MedicationRequestIntentCode::set_value(::google::fhir::stu3::proto::MedicationRequestIntentCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.MedicationRequestIntentCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool MedicationRequestIntentCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& MedicationRequestIntentCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& MedicationRequestIntentCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationRequestIntentCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* MedicationRequestIntentCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.MedicationRequestIntentCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* MedicationRequestIntentCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MedicationRequestIntentCode.id)
  return id_;
}
inline void MedicationRequestIntentCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.MedicationRequestIntentCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int MedicationRequestIntentCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* MedicationRequestIntentCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MedicationRequestIntentCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
MedicationRequestIntentCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.MedicationRequestIntentCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& MedicationRequestIntentCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationRequestIntentCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* MedicationRequestIntentCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.MedicationRequestIntentCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
MedicationRequestIntentCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.MedicationRequestIntentCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// MedicationRequestPriorityCode

// .google.fhir.stu3.proto.MedicationRequestPriorityCode.Value value = 1;
inline void MedicationRequestPriorityCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::MedicationRequestPriorityCode_Value MedicationRequestPriorityCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationRequestPriorityCode.value)
  return static_cast< ::google::fhir::stu3::proto::MedicationRequestPriorityCode_Value >(value_);
}
inline void MedicationRequestPriorityCode::set_value(::google::fhir::stu3::proto::MedicationRequestPriorityCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.MedicationRequestPriorityCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool MedicationRequestPriorityCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& MedicationRequestPriorityCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& MedicationRequestPriorityCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationRequestPriorityCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* MedicationRequestPriorityCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.MedicationRequestPriorityCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* MedicationRequestPriorityCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MedicationRequestPriorityCode.id)
  return id_;
}
inline void MedicationRequestPriorityCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.MedicationRequestPriorityCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int MedicationRequestPriorityCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* MedicationRequestPriorityCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MedicationRequestPriorityCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
MedicationRequestPriorityCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.MedicationRequestPriorityCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& MedicationRequestPriorityCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationRequestPriorityCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* MedicationRequestPriorityCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.MedicationRequestPriorityCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
MedicationRequestPriorityCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.MedicationRequestPriorityCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// MedicationRequestStatusCode

// .google.fhir.stu3.proto.MedicationRequestStatusCode.Value value = 1;
inline void MedicationRequestStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::MedicationRequestStatusCode_Value MedicationRequestStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationRequestStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::MedicationRequestStatusCode_Value >(value_);
}
inline void MedicationRequestStatusCode::set_value(::google::fhir::stu3::proto::MedicationRequestStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.MedicationRequestStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool MedicationRequestStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& MedicationRequestStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& MedicationRequestStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationRequestStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* MedicationRequestStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.MedicationRequestStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* MedicationRequestStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MedicationRequestStatusCode.id)
  return id_;
}
inline void MedicationRequestStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.MedicationRequestStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int MedicationRequestStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* MedicationRequestStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MedicationRequestStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
MedicationRequestStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.MedicationRequestStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& MedicationRequestStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationRequestStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* MedicationRequestStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.MedicationRequestStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
MedicationRequestStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.MedicationRequestStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// MedicationStatementCategoryCode

// .google.fhir.stu3.proto.MedicationStatementCategoryCode.Value value = 1;
inline void MedicationStatementCategoryCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::MedicationStatementCategoryCode_Value MedicationStatementCategoryCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationStatementCategoryCode.value)
  return static_cast< ::google::fhir::stu3::proto::MedicationStatementCategoryCode_Value >(value_);
}
inline void MedicationStatementCategoryCode::set_value(::google::fhir::stu3::proto::MedicationStatementCategoryCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.MedicationStatementCategoryCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool MedicationStatementCategoryCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& MedicationStatementCategoryCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& MedicationStatementCategoryCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationStatementCategoryCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* MedicationStatementCategoryCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.MedicationStatementCategoryCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* MedicationStatementCategoryCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MedicationStatementCategoryCode.id)
  return id_;
}
inline void MedicationStatementCategoryCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.MedicationStatementCategoryCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int MedicationStatementCategoryCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* MedicationStatementCategoryCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MedicationStatementCategoryCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
MedicationStatementCategoryCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.MedicationStatementCategoryCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& MedicationStatementCategoryCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationStatementCategoryCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* MedicationStatementCategoryCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.MedicationStatementCategoryCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
MedicationStatementCategoryCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.MedicationStatementCategoryCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// MedicationStatementStatusCode

// .google.fhir.stu3.proto.MedicationStatementStatusCode.Value value = 1;
inline void MedicationStatementStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::MedicationStatementStatusCode_Value MedicationStatementStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationStatementStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::MedicationStatementStatusCode_Value >(value_);
}
inline void MedicationStatementStatusCode::set_value(::google::fhir::stu3::proto::MedicationStatementStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.MedicationStatementStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool MedicationStatementStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& MedicationStatementStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& MedicationStatementStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationStatementStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* MedicationStatementStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.MedicationStatementStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* MedicationStatementStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MedicationStatementStatusCode.id)
  return id_;
}
inline void MedicationStatementStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.MedicationStatementStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int MedicationStatementStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* MedicationStatementStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MedicationStatementStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
MedicationStatementStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.MedicationStatementStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& MedicationStatementStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationStatementStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* MedicationStatementStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.MedicationStatementStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
MedicationStatementStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.MedicationStatementStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// MedicationStatementTakenCode

// .google.fhir.stu3.proto.MedicationStatementTakenCode.Value value = 1;
inline void MedicationStatementTakenCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::MedicationStatementTakenCode_Value MedicationStatementTakenCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationStatementTakenCode.value)
  return static_cast< ::google::fhir::stu3::proto::MedicationStatementTakenCode_Value >(value_);
}
inline void MedicationStatementTakenCode::set_value(::google::fhir::stu3::proto::MedicationStatementTakenCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.MedicationStatementTakenCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool MedicationStatementTakenCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& MedicationStatementTakenCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& MedicationStatementTakenCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationStatementTakenCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* MedicationStatementTakenCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.MedicationStatementTakenCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* MedicationStatementTakenCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MedicationStatementTakenCode.id)
  return id_;
}
inline void MedicationStatementTakenCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.MedicationStatementTakenCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int MedicationStatementTakenCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* MedicationStatementTakenCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MedicationStatementTakenCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
MedicationStatementTakenCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.MedicationStatementTakenCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& MedicationStatementTakenCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationStatementTakenCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* MedicationStatementTakenCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.MedicationStatementTakenCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
MedicationStatementTakenCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.MedicationStatementTakenCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// MedicationStatusCode

// .google.fhir.stu3.proto.MedicationStatusCode.Value value = 1;
inline void MedicationStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::MedicationStatusCode_Value MedicationStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::MedicationStatusCode_Value >(value_);
}
inline void MedicationStatusCode::set_value(::google::fhir::stu3::proto::MedicationStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.MedicationStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool MedicationStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& MedicationStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& MedicationStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* MedicationStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.MedicationStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* MedicationStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MedicationStatusCode.id)
  return id_;
}
inline void MedicationStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.MedicationStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int MedicationStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* MedicationStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MedicationStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
MedicationStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.MedicationStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& MedicationStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MedicationStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* MedicationStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.MedicationStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
MedicationStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.MedicationStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// MessageEventCode

// .google.fhir.stu3.proto.MessageEventCode.Value value = 1;
inline void MessageEventCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::MessageEventCode_Value MessageEventCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MessageEventCode.value)
  return static_cast< ::google::fhir::stu3::proto::MessageEventCode_Value >(value_);
}
inline void MessageEventCode::set_value(::google::fhir::stu3::proto::MessageEventCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.MessageEventCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool MessageEventCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& MessageEventCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& MessageEventCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MessageEventCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* MessageEventCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.MessageEventCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* MessageEventCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MessageEventCode.id)
  return id_;
}
inline void MessageEventCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.MessageEventCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int MessageEventCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* MessageEventCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MessageEventCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
MessageEventCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.MessageEventCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& MessageEventCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MessageEventCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* MessageEventCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.MessageEventCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
MessageEventCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.MessageEventCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// MessageHeaderResponseRequestCode

// .google.fhir.stu3.proto.MessageHeaderResponseRequestCode.Value value = 1;
inline void MessageHeaderResponseRequestCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::MessageHeaderResponseRequestCode_Value MessageHeaderResponseRequestCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MessageHeaderResponseRequestCode.value)
  return static_cast< ::google::fhir::stu3::proto::MessageHeaderResponseRequestCode_Value >(value_);
}
inline void MessageHeaderResponseRequestCode::set_value(::google::fhir::stu3::proto::MessageHeaderResponseRequestCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.MessageHeaderResponseRequestCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool MessageHeaderResponseRequestCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& MessageHeaderResponseRequestCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& MessageHeaderResponseRequestCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MessageHeaderResponseRequestCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* MessageHeaderResponseRequestCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.MessageHeaderResponseRequestCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* MessageHeaderResponseRequestCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MessageHeaderResponseRequestCode.id)
  return id_;
}
inline void MessageHeaderResponseRequestCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.MessageHeaderResponseRequestCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int MessageHeaderResponseRequestCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* MessageHeaderResponseRequestCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MessageHeaderResponseRequestCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
MessageHeaderResponseRequestCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.MessageHeaderResponseRequestCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& MessageHeaderResponseRequestCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MessageHeaderResponseRequestCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* MessageHeaderResponseRequestCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.MessageHeaderResponseRequestCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
MessageHeaderResponseRequestCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.MessageHeaderResponseRequestCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ExampleMessageReasonCodesCode

// .google.fhir.stu3.proto.ExampleMessageReasonCodesCode.Value value = 1;
inline void ExampleMessageReasonCodesCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ExampleMessageReasonCodesCode_Value ExampleMessageReasonCodesCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ExampleMessageReasonCodesCode.value)
  return static_cast< ::google::fhir::stu3::proto::ExampleMessageReasonCodesCode_Value >(value_);
}
inline void ExampleMessageReasonCodesCode::set_value(::google::fhir::stu3::proto::ExampleMessageReasonCodesCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ExampleMessageReasonCodesCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ExampleMessageReasonCodesCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ExampleMessageReasonCodesCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ExampleMessageReasonCodesCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ExampleMessageReasonCodesCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ExampleMessageReasonCodesCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ExampleMessageReasonCodesCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ExampleMessageReasonCodesCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ExampleMessageReasonCodesCode.id)
  return id_;
}
inline void ExampleMessageReasonCodesCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ExampleMessageReasonCodesCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ExampleMessageReasonCodesCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ExampleMessageReasonCodesCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ExampleMessageReasonCodesCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ExampleMessageReasonCodesCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ExampleMessageReasonCodesCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ExampleMessageReasonCodesCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ExampleMessageReasonCodesCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ExampleMessageReasonCodesCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ExampleMessageReasonCodesCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ExampleMessageReasonCodesCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ExampleMessageReasonCodesCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// MessageSignificanceCategoryCode

// .google.fhir.stu3.proto.MessageSignificanceCategoryCode.Value value = 1;
inline void MessageSignificanceCategoryCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::MessageSignificanceCategoryCode_Value MessageSignificanceCategoryCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MessageSignificanceCategoryCode.value)
  return static_cast< ::google::fhir::stu3::proto::MessageSignificanceCategoryCode_Value >(value_);
}
inline void MessageSignificanceCategoryCode::set_value(::google::fhir::stu3::proto::MessageSignificanceCategoryCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.MessageSignificanceCategoryCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool MessageSignificanceCategoryCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& MessageSignificanceCategoryCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& MessageSignificanceCategoryCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MessageSignificanceCategoryCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* MessageSignificanceCategoryCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.MessageSignificanceCategoryCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* MessageSignificanceCategoryCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MessageSignificanceCategoryCode.id)
  return id_;
}
inline void MessageSignificanceCategoryCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.MessageSignificanceCategoryCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int MessageSignificanceCategoryCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* MessageSignificanceCategoryCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MessageSignificanceCategoryCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
MessageSignificanceCategoryCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.MessageSignificanceCategoryCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& MessageSignificanceCategoryCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MessageSignificanceCategoryCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* MessageSignificanceCategoryCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.MessageSignificanceCategoryCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
MessageSignificanceCategoryCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.MessageSignificanceCategoryCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// MessageTransportCode

// .google.fhir.stu3.proto.MessageTransportCode.Value value = 1;
inline void MessageTransportCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::MessageTransportCode_Value MessageTransportCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MessageTransportCode.value)
  return static_cast< ::google::fhir::stu3::proto::MessageTransportCode_Value >(value_);
}
inline void MessageTransportCode::set_value(::google::fhir::stu3::proto::MessageTransportCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.MessageTransportCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool MessageTransportCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& MessageTransportCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& MessageTransportCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MessageTransportCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* MessageTransportCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.MessageTransportCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* MessageTransportCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MessageTransportCode.id)
  return id_;
}
inline void MessageTransportCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.MessageTransportCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int MessageTransportCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* MessageTransportCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MessageTransportCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
MessageTransportCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.MessageTransportCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& MessageTransportCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MessageTransportCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* MessageTransportCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.MessageTransportCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
MessageTransportCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.MessageTransportCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// DeviceMetricCalibrationStateCode

// .google.fhir.stu3.proto.DeviceMetricCalibrationStateCode.Value value = 1;
inline void DeviceMetricCalibrationStateCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::DeviceMetricCalibrationStateCode_Value DeviceMetricCalibrationStateCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DeviceMetricCalibrationStateCode.value)
  return static_cast< ::google::fhir::stu3::proto::DeviceMetricCalibrationStateCode_Value >(value_);
}
inline void DeviceMetricCalibrationStateCode::set_value(::google::fhir::stu3::proto::DeviceMetricCalibrationStateCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.DeviceMetricCalibrationStateCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool DeviceMetricCalibrationStateCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& DeviceMetricCalibrationStateCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& DeviceMetricCalibrationStateCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DeviceMetricCalibrationStateCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* DeviceMetricCalibrationStateCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DeviceMetricCalibrationStateCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* DeviceMetricCalibrationStateCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DeviceMetricCalibrationStateCode.id)
  return id_;
}
inline void DeviceMetricCalibrationStateCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DeviceMetricCalibrationStateCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int DeviceMetricCalibrationStateCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* DeviceMetricCalibrationStateCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DeviceMetricCalibrationStateCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
DeviceMetricCalibrationStateCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DeviceMetricCalibrationStateCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& DeviceMetricCalibrationStateCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DeviceMetricCalibrationStateCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* DeviceMetricCalibrationStateCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DeviceMetricCalibrationStateCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
DeviceMetricCalibrationStateCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DeviceMetricCalibrationStateCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// DeviceMetricCalibrationTypeCode

// .google.fhir.stu3.proto.DeviceMetricCalibrationTypeCode.Value value = 1;
inline void DeviceMetricCalibrationTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::DeviceMetricCalibrationTypeCode_Value DeviceMetricCalibrationTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DeviceMetricCalibrationTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::DeviceMetricCalibrationTypeCode_Value >(value_);
}
inline void DeviceMetricCalibrationTypeCode::set_value(::google::fhir::stu3::proto::DeviceMetricCalibrationTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.DeviceMetricCalibrationTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool DeviceMetricCalibrationTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& DeviceMetricCalibrationTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& DeviceMetricCalibrationTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DeviceMetricCalibrationTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* DeviceMetricCalibrationTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DeviceMetricCalibrationTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* DeviceMetricCalibrationTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DeviceMetricCalibrationTypeCode.id)
  return id_;
}
inline void DeviceMetricCalibrationTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DeviceMetricCalibrationTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int DeviceMetricCalibrationTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* DeviceMetricCalibrationTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DeviceMetricCalibrationTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
DeviceMetricCalibrationTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DeviceMetricCalibrationTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& DeviceMetricCalibrationTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DeviceMetricCalibrationTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* DeviceMetricCalibrationTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DeviceMetricCalibrationTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
DeviceMetricCalibrationTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DeviceMetricCalibrationTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// DeviceMetricCategoryCode

// .google.fhir.stu3.proto.DeviceMetricCategoryCode.Value value = 1;
inline void DeviceMetricCategoryCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::DeviceMetricCategoryCode_Value DeviceMetricCategoryCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DeviceMetricCategoryCode.value)
  return static_cast< ::google::fhir::stu3::proto::DeviceMetricCategoryCode_Value >(value_);
}
inline void DeviceMetricCategoryCode::set_value(::google::fhir::stu3::proto::DeviceMetricCategoryCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.DeviceMetricCategoryCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool DeviceMetricCategoryCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& DeviceMetricCategoryCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& DeviceMetricCategoryCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DeviceMetricCategoryCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* DeviceMetricCategoryCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DeviceMetricCategoryCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* DeviceMetricCategoryCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DeviceMetricCategoryCode.id)
  return id_;
}
inline void DeviceMetricCategoryCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DeviceMetricCategoryCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int DeviceMetricCategoryCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* DeviceMetricCategoryCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DeviceMetricCategoryCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
DeviceMetricCategoryCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DeviceMetricCategoryCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& DeviceMetricCategoryCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DeviceMetricCategoryCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* DeviceMetricCategoryCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DeviceMetricCategoryCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
DeviceMetricCategoryCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DeviceMetricCategoryCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// DeviceMetricColorCode

// .google.fhir.stu3.proto.DeviceMetricColorCode.Value value = 1;
inline void DeviceMetricColorCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::DeviceMetricColorCode_Value DeviceMetricColorCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DeviceMetricColorCode.value)
  return static_cast< ::google::fhir::stu3::proto::DeviceMetricColorCode_Value >(value_);
}
inline void DeviceMetricColorCode::set_value(::google::fhir::stu3::proto::DeviceMetricColorCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.DeviceMetricColorCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool DeviceMetricColorCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& DeviceMetricColorCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& DeviceMetricColorCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DeviceMetricColorCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* DeviceMetricColorCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DeviceMetricColorCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* DeviceMetricColorCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DeviceMetricColorCode.id)
  return id_;
}
inline void DeviceMetricColorCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DeviceMetricColorCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int DeviceMetricColorCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* DeviceMetricColorCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DeviceMetricColorCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
DeviceMetricColorCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DeviceMetricColorCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& DeviceMetricColorCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DeviceMetricColorCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* DeviceMetricColorCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DeviceMetricColorCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
DeviceMetricColorCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DeviceMetricColorCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// DeviceMetricOperationalStatusCode

// .google.fhir.stu3.proto.DeviceMetricOperationalStatusCode.Value value = 1;
inline void DeviceMetricOperationalStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::DeviceMetricOperationalStatusCode_Value DeviceMetricOperationalStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DeviceMetricOperationalStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::DeviceMetricOperationalStatusCode_Value >(value_);
}
inline void DeviceMetricOperationalStatusCode::set_value(::google::fhir::stu3::proto::DeviceMetricOperationalStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.DeviceMetricOperationalStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool DeviceMetricOperationalStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& DeviceMetricOperationalStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& DeviceMetricOperationalStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DeviceMetricOperationalStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* DeviceMetricOperationalStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DeviceMetricOperationalStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* DeviceMetricOperationalStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DeviceMetricOperationalStatusCode.id)
  return id_;
}
inline void DeviceMetricOperationalStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DeviceMetricOperationalStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int DeviceMetricOperationalStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* DeviceMetricOperationalStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DeviceMetricOperationalStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
DeviceMetricOperationalStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DeviceMetricOperationalStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& DeviceMetricOperationalStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DeviceMetricOperationalStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* DeviceMetricOperationalStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DeviceMetricOperationalStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
DeviceMetricOperationalStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DeviceMetricOperationalStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// HumanNameAssemblyOrderCode

// .google.fhir.stu3.proto.HumanNameAssemblyOrderCode.Value value = 1;
inline void HumanNameAssemblyOrderCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::HumanNameAssemblyOrderCode_Value HumanNameAssemblyOrderCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.HumanNameAssemblyOrderCode.value)
  return static_cast< ::google::fhir::stu3::proto::HumanNameAssemblyOrderCode_Value >(value_);
}
inline void HumanNameAssemblyOrderCode::set_value(::google::fhir::stu3::proto::HumanNameAssemblyOrderCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.HumanNameAssemblyOrderCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool HumanNameAssemblyOrderCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& HumanNameAssemblyOrderCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& HumanNameAssemblyOrderCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.HumanNameAssemblyOrderCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* HumanNameAssemblyOrderCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.HumanNameAssemblyOrderCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* HumanNameAssemblyOrderCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.HumanNameAssemblyOrderCode.id)
  return id_;
}
inline void HumanNameAssemblyOrderCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.HumanNameAssemblyOrderCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int HumanNameAssemblyOrderCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* HumanNameAssemblyOrderCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.HumanNameAssemblyOrderCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
HumanNameAssemblyOrderCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.HumanNameAssemblyOrderCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& HumanNameAssemblyOrderCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.HumanNameAssemblyOrderCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* HumanNameAssemblyOrderCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.HumanNameAssemblyOrderCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
HumanNameAssemblyOrderCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.HumanNameAssemblyOrderCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// NameRepresentationUseCode

// .google.fhir.stu3.proto.NameRepresentationUseCode.Value value = 1;
inline void NameRepresentationUseCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::NameRepresentationUseCode_Value NameRepresentationUseCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.NameRepresentationUseCode.value)
  return static_cast< ::google::fhir::stu3::proto::NameRepresentationUseCode_Value >(value_);
}
inline void NameRepresentationUseCode::set_value(::google::fhir::stu3::proto::NameRepresentationUseCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.NameRepresentationUseCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool NameRepresentationUseCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& NameRepresentationUseCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& NameRepresentationUseCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.NameRepresentationUseCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* NameRepresentationUseCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.NameRepresentationUseCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* NameRepresentationUseCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.NameRepresentationUseCode.id)
  return id_;
}
inline void NameRepresentationUseCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.NameRepresentationUseCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int NameRepresentationUseCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* NameRepresentationUseCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.NameRepresentationUseCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
NameRepresentationUseCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.NameRepresentationUseCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& NameRepresentationUseCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.NameRepresentationUseCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* NameRepresentationUseCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.NameRepresentationUseCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
NameRepresentationUseCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.NameRepresentationUseCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// NamingSystemIdentifierTypeCode

// .google.fhir.stu3.proto.NamingSystemIdentifierTypeCode.Value value = 1;
inline void NamingSystemIdentifierTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::NamingSystemIdentifierTypeCode_Value NamingSystemIdentifierTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.NamingSystemIdentifierTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::NamingSystemIdentifierTypeCode_Value >(value_);
}
inline void NamingSystemIdentifierTypeCode::set_value(::google::fhir::stu3::proto::NamingSystemIdentifierTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.NamingSystemIdentifierTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool NamingSystemIdentifierTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& NamingSystemIdentifierTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& NamingSystemIdentifierTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.NamingSystemIdentifierTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* NamingSystemIdentifierTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.NamingSystemIdentifierTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* NamingSystemIdentifierTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.NamingSystemIdentifierTypeCode.id)
  return id_;
}
inline void NamingSystemIdentifierTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.NamingSystemIdentifierTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int NamingSystemIdentifierTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* NamingSystemIdentifierTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.NamingSystemIdentifierTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
NamingSystemIdentifierTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.NamingSystemIdentifierTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& NamingSystemIdentifierTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.NamingSystemIdentifierTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* NamingSystemIdentifierTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.NamingSystemIdentifierTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
NamingSystemIdentifierTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.NamingSystemIdentifierTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// NamingSystemTypeCode

// .google.fhir.stu3.proto.NamingSystemTypeCode.Value value = 1;
inline void NamingSystemTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::NamingSystemTypeCode_Value NamingSystemTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.NamingSystemTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::NamingSystemTypeCode_Value >(value_);
}
inline void NamingSystemTypeCode::set_value(::google::fhir::stu3::proto::NamingSystemTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.NamingSystemTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool NamingSystemTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& NamingSystemTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& NamingSystemTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.NamingSystemTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* NamingSystemTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.NamingSystemTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* NamingSystemTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.NamingSystemTypeCode.id)
  return id_;
}
inline void NamingSystemTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.NamingSystemTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int NamingSystemTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* NamingSystemTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.NamingSystemTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
NamingSystemTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.NamingSystemTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& NamingSystemTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.NamingSystemTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* NamingSystemTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.NamingSystemTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
NamingSystemTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.NamingSystemTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// AuditEventAgentNetworkTypeCode

// .google.fhir.stu3.proto.AuditEventAgentNetworkTypeCode.Value value = 1;
inline void AuditEventAgentNetworkTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::AuditEventAgentNetworkTypeCode_Value AuditEventAgentNetworkTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AuditEventAgentNetworkTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::AuditEventAgentNetworkTypeCode_Value >(value_);
}
inline void AuditEventAgentNetworkTypeCode::set_value(::google::fhir::stu3::proto::AuditEventAgentNetworkTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.AuditEventAgentNetworkTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool AuditEventAgentNetworkTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& AuditEventAgentNetworkTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& AuditEventAgentNetworkTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AuditEventAgentNetworkTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* AuditEventAgentNetworkTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.AuditEventAgentNetworkTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* AuditEventAgentNetworkTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AuditEventAgentNetworkTypeCode.id)
  return id_;
}
inline void AuditEventAgentNetworkTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.AuditEventAgentNetworkTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int AuditEventAgentNetworkTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* AuditEventAgentNetworkTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AuditEventAgentNetworkTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
AuditEventAgentNetworkTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.AuditEventAgentNetworkTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& AuditEventAgentNetworkTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AuditEventAgentNetworkTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* AuditEventAgentNetworkTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.AuditEventAgentNetworkTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
AuditEventAgentNetworkTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.AuditEventAgentNetworkTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// NoteTypeCode

// .google.fhir.stu3.proto.NoteTypeCode.Value value = 1;
inline void NoteTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::NoteTypeCode_Value NoteTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.NoteTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::NoteTypeCode_Value >(value_);
}
inline void NoteTypeCode::set_value(::google::fhir::stu3::proto::NoteTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.NoteTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool NoteTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& NoteTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& NoteTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.NoteTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* NoteTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.NoteTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* NoteTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.NoteTypeCode.id)
  return id_;
}
inline void NoteTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.NoteTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int NoteTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* NoteTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.NoteTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
NoteTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.NoteTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& NoteTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.NoteTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* NoteTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.NoteTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
NoteTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.NoteTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// NullFlavorCode

// .google.fhir.stu3.proto.NullFlavorCode.Value value = 1;
inline void NullFlavorCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::NullFlavorCode_Value NullFlavorCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.NullFlavorCode.value)
  return static_cast< ::google::fhir::stu3::proto::NullFlavorCode_Value >(value_);
}
inline void NullFlavorCode::set_value(::google::fhir::stu3::proto::NullFlavorCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.NullFlavorCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool NullFlavorCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& NullFlavorCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& NullFlavorCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.NullFlavorCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* NullFlavorCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.NullFlavorCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* NullFlavorCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.NullFlavorCode.id)
  return id_;
}
inline void NullFlavorCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.NullFlavorCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int NullFlavorCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* NullFlavorCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.NullFlavorCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
NullFlavorCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.NullFlavorCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& NullFlavorCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.NullFlavorCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* NullFlavorCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.NullFlavorCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
NullFlavorCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.NullFlavorCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// NutritionOrderStatusCode

// .google.fhir.stu3.proto.NutritionOrderStatusCode.Value value = 1;
inline void NutritionOrderStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::NutritionOrderStatusCode_Value NutritionOrderStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.NutritionOrderStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::NutritionOrderStatusCode_Value >(value_);
}
inline void NutritionOrderStatusCode::set_value(::google::fhir::stu3::proto::NutritionOrderStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.NutritionOrderStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool NutritionOrderStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& NutritionOrderStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& NutritionOrderStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.NutritionOrderStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* NutritionOrderStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.NutritionOrderStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* NutritionOrderStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.NutritionOrderStatusCode.id)
  return id_;
}
inline void NutritionOrderStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.NutritionOrderStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int NutritionOrderStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* NutritionOrderStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.NutritionOrderStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
NutritionOrderStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.NutritionOrderStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& NutritionOrderStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.NutritionOrderStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* NutritionOrderStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.NutritionOrderStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
NutritionOrderStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.NutritionOrderStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ObservationCategoryCodesCode

// .google.fhir.stu3.proto.ObservationCategoryCodesCode.Value value = 1;
inline void ObservationCategoryCodesCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ObservationCategoryCodesCode_Value ObservationCategoryCodesCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ObservationCategoryCodesCode.value)
  return static_cast< ::google::fhir::stu3::proto::ObservationCategoryCodesCode_Value >(value_);
}
inline void ObservationCategoryCodesCode::set_value(::google::fhir::stu3::proto::ObservationCategoryCodesCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ObservationCategoryCodesCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ObservationCategoryCodesCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ObservationCategoryCodesCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ObservationCategoryCodesCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ObservationCategoryCodesCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ObservationCategoryCodesCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ObservationCategoryCodesCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ObservationCategoryCodesCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ObservationCategoryCodesCode.id)
  return id_;
}
inline void ObservationCategoryCodesCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ObservationCategoryCodesCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ObservationCategoryCodesCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ObservationCategoryCodesCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ObservationCategoryCodesCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ObservationCategoryCodesCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ObservationCategoryCodesCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ObservationCategoryCodesCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ObservationCategoryCodesCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ObservationCategoryCodesCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ObservationCategoryCodesCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ObservationCategoryCodesCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ObservationCategoryCodesCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ObservationRelationshipTypeCode

// .google.fhir.stu3.proto.ObservationRelationshipTypeCode.Value value = 1;
inline void ObservationRelationshipTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ObservationRelationshipTypeCode_Value ObservationRelationshipTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ObservationRelationshipTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::ObservationRelationshipTypeCode_Value >(value_);
}
inline void ObservationRelationshipTypeCode::set_value(::google::fhir::stu3::proto::ObservationRelationshipTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ObservationRelationshipTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ObservationRelationshipTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ObservationRelationshipTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ObservationRelationshipTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ObservationRelationshipTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ObservationRelationshipTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ObservationRelationshipTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ObservationRelationshipTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ObservationRelationshipTypeCode.id)
  return id_;
}
inline void ObservationRelationshipTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ObservationRelationshipTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ObservationRelationshipTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ObservationRelationshipTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ObservationRelationshipTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ObservationRelationshipTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ObservationRelationshipTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ObservationRelationshipTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ObservationRelationshipTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ObservationRelationshipTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ObservationRelationshipTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ObservationRelationshipTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ObservationRelationshipTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// StatisticsCodeCode

// .google.fhir.stu3.proto.StatisticsCodeCode.Value value = 1;
inline void StatisticsCodeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::StatisticsCodeCode_Value StatisticsCodeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.StatisticsCodeCode.value)
  return static_cast< ::google::fhir::stu3::proto::StatisticsCodeCode_Value >(value_);
}
inline void StatisticsCodeCode::set_value(::google::fhir::stu3::proto::StatisticsCodeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.StatisticsCodeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool StatisticsCodeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& StatisticsCodeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& StatisticsCodeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.StatisticsCodeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* StatisticsCodeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.StatisticsCodeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* StatisticsCodeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.StatisticsCodeCode.id)
  return id_;
}
inline void StatisticsCodeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.StatisticsCodeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int StatisticsCodeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* StatisticsCodeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.StatisticsCodeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
StatisticsCodeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.StatisticsCodeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& StatisticsCodeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.StatisticsCodeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* StatisticsCodeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.StatisticsCodeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
StatisticsCodeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.StatisticsCodeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ObservationStatusCode

// .google.fhir.stu3.proto.ObservationStatusCode.Value value = 1;
inline void ObservationStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ObservationStatusCode_Value ObservationStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ObservationStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::ObservationStatusCode_Value >(value_);
}
inline void ObservationStatusCode::set_value(::google::fhir::stu3::proto::ObservationStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ObservationStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ObservationStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ObservationStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ObservationStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ObservationStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ObservationStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ObservationStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ObservationStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ObservationStatusCode.id)
  return id_;
}
inline void ObservationStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ObservationStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ObservationStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ObservationStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ObservationStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ObservationStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ObservationStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ObservationStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ObservationStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ObservationStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ObservationStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ObservationStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ObservationStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// DeviceComponentOperationalStatusCode

// .google.fhir.stu3.proto.DeviceComponentOperationalStatusCode.Value value = 1;
inline void DeviceComponentOperationalStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::DeviceComponentOperationalStatusCode_Value DeviceComponentOperationalStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DeviceComponentOperationalStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::DeviceComponentOperationalStatusCode_Value >(value_);
}
inline void DeviceComponentOperationalStatusCode::set_value(::google::fhir::stu3::proto::DeviceComponentOperationalStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.DeviceComponentOperationalStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool DeviceComponentOperationalStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& DeviceComponentOperationalStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& DeviceComponentOperationalStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DeviceComponentOperationalStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* DeviceComponentOperationalStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DeviceComponentOperationalStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* DeviceComponentOperationalStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DeviceComponentOperationalStatusCode.id)
  return id_;
}
inline void DeviceComponentOperationalStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DeviceComponentOperationalStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int DeviceComponentOperationalStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* DeviceComponentOperationalStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DeviceComponentOperationalStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
DeviceComponentOperationalStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DeviceComponentOperationalStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& DeviceComponentOperationalStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DeviceComponentOperationalStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* DeviceComponentOperationalStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DeviceComponentOperationalStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
DeviceComponentOperationalStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DeviceComponentOperationalStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// OperationKindCode

// .google.fhir.stu3.proto.OperationKindCode.Value value = 1;
inline void OperationKindCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::OperationKindCode_Value OperationKindCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.OperationKindCode.value)
  return static_cast< ::google::fhir::stu3::proto::OperationKindCode_Value >(value_);
}
inline void OperationKindCode::set_value(::google::fhir::stu3::proto::OperationKindCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.OperationKindCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool OperationKindCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& OperationKindCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& OperationKindCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.OperationKindCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* OperationKindCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.OperationKindCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* OperationKindCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.OperationKindCode.id)
  return id_;
}
inline void OperationKindCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.OperationKindCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int OperationKindCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* OperationKindCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.OperationKindCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
OperationKindCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.OperationKindCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& OperationKindCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.OperationKindCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* OperationKindCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.OperationKindCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
OperationKindCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.OperationKindCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// OperationOutcomeCodesCode

// .google.fhir.stu3.proto.OperationOutcomeCodesCode.Value value = 1;
inline void OperationOutcomeCodesCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::OperationOutcomeCodesCode_Value OperationOutcomeCodesCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.OperationOutcomeCodesCode.value)
  return static_cast< ::google::fhir::stu3::proto::OperationOutcomeCodesCode_Value >(value_);
}
inline void OperationOutcomeCodesCode::set_value(::google::fhir::stu3::proto::OperationOutcomeCodesCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.OperationOutcomeCodesCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool OperationOutcomeCodesCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& OperationOutcomeCodesCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& OperationOutcomeCodesCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.OperationOutcomeCodesCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* OperationOutcomeCodesCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.OperationOutcomeCodesCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* OperationOutcomeCodesCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.OperationOutcomeCodesCode.id)
  return id_;
}
inline void OperationOutcomeCodesCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.OperationOutcomeCodesCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int OperationOutcomeCodesCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* OperationOutcomeCodesCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.OperationOutcomeCodesCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
OperationOutcomeCodesCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.OperationOutcomeCodesCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& OperationOutcomeCodesCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.OperationOutcomeCodesCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* OperationOutcomeCodesCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.OperationOutcomeCodesCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
OperationOutcomeCodesCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.OperationOutcomeCodesCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// NarrativeStatusCode

// .google.fhir.stu3.proto.NarrativeStatusCode.Value value = 1;
inline void NarrativeStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::NarrativeStatusCode_Value NarrativeStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.NarrativeStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::NarrativeStatusCode_Value >(value_);
}
inline void NarrativeStatusCode::set_value(::google::fhir::stu3::proto::NarrativeStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.NarrativeStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool NarrativeStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& NarrativeStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& NarrativeStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.NarrativeStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* NarrativeStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.NarrativeStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* NarrativeStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.NarrativeStatusCode.id)
  return id_;
}
inline void NarrativeStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.NarrativeStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int NarrativeStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* NarrativeStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.NarrativeStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
NarrativeStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.NarrativeStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& NarrativeStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.NarrativeStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* NarrativeStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.NarrativeStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
NarrativeStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.NarrativeStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// OperationParameterUseCode

// .google.fhir.stu3.proto.OperationParameterUseCode.Value value = 1;
inline void OperationParameterUseCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::OperationParameterUseCode_Value OperationParameterUseCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.OperationParameterUseCode.value)
  return static_cast< ::google::fhir::stu3::proto::OperationParameterUseCode_Value >(value_);
}
inline void OperationParameterUseCode::set_value(::google::fhir::stu3::proto::OperationParameterUseCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.OperationParameterUseCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool OperationParameterUseCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& OperationParameterUseCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& OperationParameterUseCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.OperationParameterUseCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* OperationParameterUseCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.OperationParameterUseCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* OperationParameterUseCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.OperationParameterUseCode.id)
  return id_;
}
inline void OperationParameterUseCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.OperationParameterUseCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int OperationParameterUseCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* OperationParameterUseCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.OperationParameterUseCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
OperationParameterUseCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.OperationParameterUseCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& OperationParameterUseCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.OperationParameterUseCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* OperationParameterUseCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.OperationParameterUseCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
OperationParameterUseCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.OperationParameterUseCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// OrganizationTypeCode

// .google.fhir.stu3.proto.OrganizationTypeCode.Value value = 1;
inline void OrganizationTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::OrganizationTypeCode_Value OrganizationTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.OrganizationTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::OrganizationTypeCode_Value >(value_);
}
inline void OrganizationTypeCode::set_value(::google::fhir::stu3::proto::OrganizationTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.OrganizationTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool OrganizationTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& OrganizationTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& OrganizationTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.OrganizationTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* OrganizationTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.OrganizationTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* OrganizationTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.OrganizationTypeCode.id)
  return id_;
}
inline void OrganizationTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.OrganizationTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int OrganizationTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* OrganizationTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.OrganizationTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
OrganizationTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.OrganizationTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& OrganizationTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.OrganizationTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* OrganizationTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.OrganizationTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
OrganizationTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.OrganizationTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// DeviceComponentParameterGroupCode

// .google.fhir.stu3.proto.DeviceComponentParameterGroupCode.Value value = 1;
inline void DeviceComponentParameterGroupCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::DeviceComponentParameterGroupCode_Value DeviceComponentParameterGroupCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DeviceComponentParameterGroupCode.value)
  return static_cast< ::google::fhir::stu3::proto::DeviceComponentParameterGroupCode_Value >(value_);
}
inline void DeviceComponentParameterGroupCode::set_value(::google::fhir::stu3::proto::DeviceComponentParameterGroupCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.DeviceComponentParameterGroupCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool DeviceComponentParameterGroupCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& DeviceComponentParameterGroupCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& DeviceComponentParameterGroupCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DeviceComponentParameterGroupCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* DeviceComponentParameterGroupCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DeviceComponentParameterGroupCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* DeviceComponentParameterGroupCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DeviceComponentParameterGroupCode.id)
  return id_;
}
inline void DeviceComponentParameterGroupCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DeviceComponentParameterGroupCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int DeviceComponentParameterGroupCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* DeviceComponentParameterGroupCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DeviceComponentParameterGroupCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
DeviceComponentParameterGroupCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DeviceComponentParameterGroupCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& DeviceComponentParameterGroupCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DeviceComponentParameterGroupCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* DeviceComponentParameterGroupCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DeviceComponentParameterGroupCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
DeviceComponentParameterGroupCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DeviceComponentParameterGroupCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ParticipantRequiredCode

// .google.fhir.stu3.proto.ParticipantRequiredCode.Value value = 1;
inline void ParticipantRequiredCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ParticipantRequiredCode_Value ParticipantRequiredCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ParticipantRequiredCode.value)
  return static_cast< ::google::fhir::stu3::proto::ParticipantRequiredCode_Value >(value_);
}
inline void ParticipantRequiredCode::set_value(::google::fhir::stu3::proto::ParticipantRequiredCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ParticipantRequiredCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ParticipantRequiredCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ParticipantRequiredCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ParticipantRequiredCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ParticipantRequiredCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ParticipantRequiredCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ParticipantRequiredCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ParticipantRequiredCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ParticipantRequiredCode.id)
  return id_;
}
inline void ParticipantRequiredCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ParticipantRequiredCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ParticipantRequiredCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ParticipantRequiredCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ParticipantRequiredCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ParticipantRequiredCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ParticipantRequiredCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ParticipantRequiredCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ParticipantRequiredCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ParticipantRequiredCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ParticipantRequiredCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ParticipantRequiredCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ParticipantRequiredCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ParticipationStatusCode

// .google.fhir.stu3.proto.ParticipationStatusCode.Value value = 1;
inline void ParticipationStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ParticipationStatusCode_Value ParticipationStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ParticipationStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::ParticipationStatusCode_Value >(value_);
}
inline void ParticipationStatusCode::set_value(::google::fhir::stu3::proto::ParticipationStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ParticipationStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ParticipationStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ParticipationStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ParticipationStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ParticipationStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ParticipationStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ParticipationStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ParticipationStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ParticipationStatusCode.id)
  return id_;
}
inline void ParticipationStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ParticipationStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ParticipationStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ParticipationStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ParticipationStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ParticipationStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ParticipationStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ParticipationStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ParticipationStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ParticipationStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ParticipationStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ParticipationStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ParticipationStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// PlanDefinitionTypeCode

// .google.fhir.stu3.proto.PlanDefinitionTypeCode.Value value = 1;
inline void PlanDefinitionTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::PlanDefinitionTypeCode_Value PlanDefinitionTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.PlanDefinitionTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::PlanDefinitionTypeCode_Value >(value_);
}
inline void PlanDefinitionTypeCode::set_value(::google::fhir::stu3::proto::PlanDefinitionTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.PlanDefinitionTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool PlanDefinitionTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& PlanDefinitionTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& PlanDefinitionTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.PlanDefinitionTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* PlanDefinitionTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.PlanDefinitionTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* PlanDefinitionTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.PlanDefinitionTypeCode.id)
  return id_;
}
inline void PlanDefinitionTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.PlanDefinitionTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int PlanDefinitionTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* PlanDefinitionTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.PlanDefinitionTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
PlanDefinitionTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.PlanDefinitionTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& PlanDefinitionTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.PlanDefinitionTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* PlanDefinitionTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.PlanDefinitionTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
PlanDefinitionTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.PlanDefinitionTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// PostalAddressUseTypeCode

// .google.fhir.stu3.proto.PostalAddressUseTypeCode.Value value = 1;
inline void PostalAddressUseTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::PostalAddressUseTypeCode_Value PostalAddressUseTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.PostalAddressUseTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::PostalAddressUseTypeCode_Value >(value_);
}
inline void PostalAddressUseTypeCode::set_value(::google::fhir::stu3::proto::PostalAddressUseTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.PostalAddressUseTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool PostalAddressUseTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& PostalAddressUseTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& PostalAddressUseTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.PostalAddressUseTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* PostalAddressUseTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.PostalAddressUseTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* PostalAddressUseTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.PostalAddressUseTypeCode.id)
  return id_;
}
inline void PostalAddressUseTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.PostalAddressUseTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int PostalAddressUseTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* PostalAddressUseTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.PostalAddressUseTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
PostalAddressUseTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.PostalAddressUseTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& PostalAddressUseTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.PostalAddressUseTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* PostalAddressUseTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.PostalAddressUseTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
PostalAddressUseTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.PostalAddressUseTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// PractitionerRoleCode

// .google.fhir.stu3.proto.PractitionerRoleCode.Value value = 1;
inline void PractitionerRoleCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::PractitionerRoleCode_Value PractitionerRoleCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.PractitionerRoleCode.value)
  return static_cast< ::google::fhir::stu3::proto::PractitionerRoleCode_Value >(value_);
}
inline void PractitionerRoleCode::set_value(::google::fhir::stu3::proto::PractitionerRoleCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.PractitionerRoleCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool PractitionerRoleCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& PractitionerRoleCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& PractitionerRoleCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.PractitionerRoleCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* PractitionerRoleCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.PractitionerRoleCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* PractitionerRoleCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.PractitionerRoleCode.id)
  return id_;
}
inline void PractitionerRoleCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.PractitionerRoleCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int PractitionerRoleCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* PractitionerRoleCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.PractitionerRoleCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
PractitionerRoleCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.PractitionerRoleCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& PractitionerRoleCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.PractitionerRoleCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* PractitionerRoleCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.PractitionerRoleCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
PractitionerRoleCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.PractitionerRoleCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// PractitionerSpecialtyCode

// .google.fhir.stu3.proto.PractitionerSpecialtyCode.Value value = 1;
inline void PractitionerSpecialtyCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::PractitionerSpecialtyCode_Value PractitionerSpecialtyCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.PractitionerSpecialtyCode.value)
  return static_cast< ::google::fhir::stu3::proto::PractitionerSpecialtyCode_Value >(value_);
}
inline void PractitionerSpecialtyCode::set_value(::google::fhir::stu3::proto::PractitionerSpecialtyCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.PractitionerSpecialtyCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool PractitionerSpecialtyCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& PractitionerSpecialtyCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& PractitionerSpecialtyCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.PractitionerSpecialtyCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* PractitionerSpecialtyCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.PractitionerSpecialtyCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* PractitionerSpecialtyCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.PractitionerSpecialtyCode.id)
  return id_;
}
inline void PractitionerSpecialtyCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.PractitionerSpecialtyCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int PractitionerSpecialtyCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* PractitionerSpecialtyCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.PractitionerSpecialtyCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
PractitionerSpecialtyCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.PractitionerSpecialtyCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& PractitionerSpecialtyCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.PractitionerSpecialtyCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* PractitionerSpecialtyCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.PractitionerSpecialtyCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
PractitionerSpecialtyCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.PractitionerSpecialtyCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ProcedureProgressStatusCodesCode

// .google.fhir.stu3.proto.ProcedureProgressStatusCodesCode.Value value = 1;
inline void ProcedureProgressStatusCodesCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ProcedureProgressStatusCodesCode_Value ProcedureProgressStatusCodesCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ProcedureProgressStatusCodesCode.value)
  return static_cast< ::google::fhir::stu3::proto::ProcedureProgressStatusCodesCode_Value >(value_);
}
inline void ProcedureProgressStatusCodesCode::set_value(::google::fhir::stu3::proto::ProcedureProgressStatusCodesCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ProcedureProgressStatusCodesCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ProcedureProgressStatusCodesCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ProcedureProgressStatusCodesCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ProcedureProgressStatusCodesCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ProcedureProgressStatusCodesCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ProcedureProgressStatusCodesCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ProcedureProgressStatusCodesCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ProcedureProgressStatusCodesCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ProcedureProgressStatusCodesCode.id)
  return id_;
}
inline void ProcedureProgressStatusCodesCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ProcedureProgressStatusCodesCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ProcedureProgressStatusCodesCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ProcedureProgressStatusCodesCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ProcedureProgressStatusCodesCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ProcedureProgressStatusCodesCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ProcedureProgressStatusCodesCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ProcedureProgressStatusCodesCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ProcedureProgressStatusCodesCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ProcedureProgressStatusCodesCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ProcedureProgressStatusCodesCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ProcedureProgressStatusCodesCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ProcedureProgressStatusCodesCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ProvenanceEntityRoleCode

// .google.fhir.stu3.proto.ProvenanceEntityRoleCode.Value value = 1;
inline void ProvenanceEntityRoleCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ProvenanceEntityRoleCode_Value ProvenanceEntityRoleCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ProvenanceEntityRoleCode.value)
  return static_cast< ::google::fhir::stu3::proto::ProvenanceEntityRoleCode_Value >(value_);
}
inline void ProvenanceEntityRoleCode::set_value(::google::fhir::stu3::proto::ProvenanceEntityRoleCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ProvenanceEntityRoleCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ProvenanceEntityRoleCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ProvenanceEntityRoleCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ProvenanceEntityRoleCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ProvenanceEntityRoleCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ProvenanceEntityRoleCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ProvenanceEntityRoleCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ProvenanceEntityRoleCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ProvenanceEntityRoleCode.id)
  return id_;
}
inline void ProvenanceEntityRoleCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ProvenanceEntityRoleCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ProvenanceEntityRoleCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ProvenanceEntityRoleCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ProvenanceEntityRoleCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ProvenanceEntityRoleCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ProvenanceEntityRoleCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ProvenanceEntityRoleCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ProvenanceEntityRoleCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ProvenanceEntityRoleCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ProvenanceEntityRoleCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ProvenanceEntityRoleCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ProvenanceEntityRoleCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// PublicationStatusCode

// .google.fhir.stu3.proto.PublicationStatusCode.Value value = 1;
inline void PublicationStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::PublicationStatusCode_Value PublicationStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.PublicationStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::PublicationStatusCode_Value >(value_);
}
inline void PublicationStatusCode::set_value(::google::fhir::stu3::proto::PublicationStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.PublicationStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool PublicationStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& PublicationStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& PublicationStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.PublicationStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* PublicationStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.PublicationStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* PublicationStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.PublicationStatusCode.id)
  return id_;
}
inline void PublicationStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.PublicationStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int PublicationStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* PublicationStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.PublicationStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
PublicationStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.PublicationStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& PublicationStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.PublicationStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* PublicationStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.PublicationStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
PublicationStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.PublicationStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// QualityTypeCode

// .google.fhir.stu3.proto.QualityTypeCode.Value value = 1;
inline void QualityTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::QualityTypeCode_Value QualityTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.QualityTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::QualityTypeCode_Value >(value_);
}
inline void QualityTypeCode::set_value(::google::fhir::stu3::proto::QualityTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.QualityTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool QualityTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& QualityTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& QualityTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.QualityTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* QualityTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.QualityTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* QualityTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.QualityTypeCode.id)
  return id_;
}
inline void QualityTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.QualityTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int QualityTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* QualityTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.QualityTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
QualityTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.QualityTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& QualityTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.QualityTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* QualityTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.QualityTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
QualityTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.QualityTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// MaxOccursCode

// .google.fhir.stu3.proto.MaxOccursCode.Value value = 1;
inline void MaxOccursCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::MaxOccursCode_Value MaxOccursCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MaxOccursCode.value)
  return static_cast< ::google::fhir::stu3::proto::MaxOccursCode_Value >(value_);
}
inline void MaxOccursCode::set_value(::google::fhir::stu3::proto::MaxOccursCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.MaxOccursCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool MaxOccursCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& MaxOccursCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& MaxOccursCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MaxOccursCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* MaxOccursCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.MaxOccursCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* MaxOccursCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MaxOccursCode.id)
  return id_;
}
inline void MaxOccursCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.MaxOccursCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int MaxOccursCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* MaxOccursCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.MaxOccursCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
MaxOccursCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.MaxOccursCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& MaxOccursCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.MaxOccursCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* MaxOccursCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.MaxOccursCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
MaxOccursCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.MaxOccursCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// QuestionnaireResponseStatusCode

// .google.fhir.stu3.proto.QuestionnaireResponseStatusCode.Value value = 1;
inline void QuestionnaireResponseStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::QuestionnaireResponseStatusCode_Value QuestionnaireResponseStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.QuestionnaireResponseStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::QuestionnaireResponseStatusCode_Value >(value_);
}
inline void QuestionnaireResponseStatusCode::set_value(::google::fhir::stu3::proto::QuestionnaireResponseStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.QuestionnaireResponseStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool QuestionnaireResponseStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& QuestionnaireResponseStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& QuestionnaireResponseStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.QuestionnaireResponseStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* QuestionnaireResponseStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.QuestionnaireResponseStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* QuestionnaireResponseStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.QuestionnaireResponseStatusCode.id)
  return id_;
}
inline void QuestionnaireResponseStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.QuestionnaireResponseStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int QuestionnaireResponseStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* QuestionnaireResponseStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.QuestionnaireResponseStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
QuestionnaireResponseStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.QuestionnaireResponseStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& QuestionnaireResponseStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.QuestionnaireResponseStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* QuestionnaireResponseStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.QuestionnaireResponseStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
QuestionnaireResponseStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.QuestionnaireResponseStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// QuestionnaireTextCategoriesCode

// .google.fhir.stu3.proto.QuestionnaireTextCategoriesCode.Value value = 1;
inline void QuestionnaireTextCategoriesCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::QuestionnaireTextCategoriesCode_Value QuestionnaireTextCategoriesCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.QuestionnaireTextCategoriesCode.value)
  return static_cast< ::google::fhir::stu3::proto::QuestionnaireTextCategoriesCode_Value >(value_);
}
inline void QuestionnaireTextCategoriesCode::set_value(::google::fhir::stu3::proto::QuestionnaireTextCategoriesCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.QuestionnaireTextCategoriesCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool QuestionnaireTextCategoriesCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& QuestionnaireTextCategoriesCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& QuestionnaireTextCategoriesCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.QuestionnaireTextCategoriesCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* QuestionnaireTextCategoriesCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.QuestionnaireTextCategoriesCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* QuestionnaireTextCategoriesCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.QuestionnaireTextCategoriesCode.id)
  return id_;
}
inline void QuestionnaireTextCategoriesCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.QuestionnaireTextCategoriesCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int QuestionnaireTextCategoriesCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* QuestionnaireTextCategoriesCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.QuestionnaireTextCategoriesCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
QuestionnaireTextCategoriesCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.QuestionnaireTextCategoriesCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& QuestionnaireTextCategoriesCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.QuestionnaireTextCategoriesCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* QuestionnaireTextCategoriesCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.QuestionnaireTextCategoriesCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
QuestionnaireTextCategoriesCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.QuestionnaireTextCategoriesCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// QuestionnaireItemUIControlCodesCode

// .google.fhir.stu3.proto.QuestionnaireItemUIControlCodesCode.Value value = 1;
inline void QuestionnaireItemUIControlCodesCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::QuestionnaireItemUIControlCodesCode_Value QuestionnaireItemUIControlCodesCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.QuestionnaireItemUIControlCodesCode.value)
  return static_cast< ::google::fhir::stu3::proto::QuestionnaireItemUIControlCodesCode_Value >(value_);
}
inline void QuestionnaireItemUIControlCodesCode::set_value(::google::fhir::stu3::proto::QuestionnaireItemUIControlCodesCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.QuestionnaireItemUIControlCodesCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool QuestionnaireItemUIControlCodesCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& QuestionnaireItemUIControlCodesCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& QuestionnaireItemUIControlCodesCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.QuestionnaireItemUIControlCodesCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* QuestionnaireItemUIControlCodesCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.QuestionnaireItemUIControlCodesCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* QuestionnaireItemUIControlCodesCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.QuestionnaireItemUIControlCodesCode.id)
  return id_;
}
inline void QuestionnaireItemUIControlCodesCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.QuestionnaireItemUIControlCodesCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int QuestionnaireItemUIControlCodesCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* QuestionnaireItemUIControlCodesCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.QuestionnaireItemUIControlCodesCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
QuestionnaireItemUIControlCodesCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.QuestionnaireItemUIControlCodesCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& QuestionnaireItemUIControlCodesCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.QuestionnaireItemUIControlCodesCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* QuestionnaireItemUIControlCodesCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.QuestionnaireItemUIControlCodesCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
QuestionnaireItemUIControlCodesCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.QuestionnaireItemUIControlCodesCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// QuestionnaireItemUsageModeCode

// .google.fhir.stu3.proto.QuestionnaireItemUsageModeCode.Value value = 1;
inline void QuestionnaireItemUsageModeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::QuestionnaireItemUsageModeCode_Value QuestionnaireItemUsageModeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.QuestionnaireItemUsageModeCode.value)
  return static_cast< ::google::fhir::stu3::proto::QuestionnaireItemUsageModeCode_Value >(value_);
}
inline void QuestionnaireItemUsageModeCode::set_value(::google::fhir::stu3::proto::QuestionnaireItemUsageModeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.QuestionnaireItemUsageModeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool QuestionnaireItemUsageModeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& QuestionnaireItemUsageModeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& QuestionnaireItemUsageModeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.QuestionnaireItemUsageModeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* QuestionnaireItemUsageModeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.QuestionnaireItemUsageModeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* QuestionnaireItemUsageModeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.QuestionnaireItemUsageModeCode.id)
  return id_;
}
inline void QuestionnaireItemUsageModeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.QuestionnaireItemUsageModeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int QuestionnaireItemUsageModeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* QuestionnaireItemUsageModeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.QuestionnaireItemUsageModeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
QuestionnaireItemUsageModeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.QuestionnaireItemUsageModeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& QuestionnaireItemUsageModeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.QuestionnaireItemUsageModeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* QuestionnaireItemUsageModeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.QuestionnaireItemUsageModeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
QuestionnaireItemUsageModeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.QuestionnaireItemUsageModeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// AllergyIntoleranceCertaintyCode

// .google.fhir.stu3.proto.AllergyIntoleranceCertaintyCode.Value value = 1;
inline void AllergyIntoleranceCertaintyCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::AllergyIntoleranceCertaintyCode_Value AllergyIntoleranceCertaintyCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AllergyIntoleranceCertaintyCode.value)
  return static_cast< ::google::fhir::stu3::proto::AllergyIntoleranceCertaintyCode_Value >(value_);
}
inline void AllergyIntoleranceCertaintyCode::set_value(::google::fhir::stu3::proto::AllergyIntoleranceCertaintyCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.AllergyIntoleranceCertaintyCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool AllergyIntoleranceCertaintyCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& AllergyIntoleranceCertaintyCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& AllergyIntoleranceCertaintyCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AllergyIntoleranceCertaintyCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* AllergyIntoleranceCertaintyCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.AllergyIntoleranceCertaintyCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* AllergyIntoleranceCertaintyCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AllergyIntoleranceCertaintyCode.id)
  return id_;
}
inline void AllergyIntoleranceCertaintyCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.AllergyIntoleranceCertaintyCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int AllergyIntoleranceCertaintyCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* AllergyIntoleranceCertaintyCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AllergyIntoleranceCertaintyCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
AllergyIntoleranceCertaintyCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.AllergyIntoleranceCertaintyCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& AllergyIntoleranceCertaintyCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AllergyIntoleranceCertaintyCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* AllergyIntoleranceCertaintyCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.AllergyIntoleranceCertaintyCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
AllergyIntoleranceCertaintyCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.AllergyIntoleranceCertaintyCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// AllergyIntoleranceSeverityCode

// .google.fhir.stu3.proto.AllergyIntoleranceSeverityCode.Value value = 1;
inline void AllergyIntoleranceSeverityCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::AllergyIntoleranceSeverityCode_Value AllergyIntoleranceSeverityCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AllergyIntoleranceSeverityCode.value)
  return static_cast< ::google::fhir::stu3::proto::AllergyIntoleranceSeverityCode_Value >(value_);
}
inline void AllergyIntoleranceSeverityCode::set_value(::google::fhir::stu3::proto::AllergyIntoleranceSeverityCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.AllergyIntoleranceSeverityCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool AllergyIntoleranceSeverityCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& AllergyIntoleranceSeverityCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& AllergyIntoleranceSeverityCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AllergyIntoleranceSeverityCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* AllergyIntoleranceSeverityCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.AllergyIntoleranceSeverityCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* AllergyIntoleranceSeverityCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AllergyIntoleranceSeverityCode.id)
  return id_;
}
inline void AllergyIntoleranceSeverityCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.AllergyIntoleranceSeverityCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int AllergyIntoleranceSeverityCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* AllergyIntoleranceSeverityCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.AllergyIntoleranceSeverityCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
AllergyIntoleranceSeverityCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.AllergyIntoleranceSeverityCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& AllergyIntoleranceSeverityCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.AllergyIntoleranceSeverityCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* AllergyIntoleranceSeverityCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.AllergyIntoleranceSeverityCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
AllergyIntoleranceSeverityCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.AllergyIntoleranceSeverityCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ReasonMedicationGivenCodesCode

// .google.fhir.stu3.proto.ReasonMedicationGivenCodesCode.Value value = 1;
inline void ReasonMedicationGivenCodesCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ReasonMedicationGivenCodesCode_Value ReasonMedicationGivenCodesCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ReasonMedicationGivenCodesCode.value)
  return static_cast< ::google::fhir::stu3::proto::ReasonMedicationGivenCodesCode_Value >(value_);
}
inline void ReasonMedicationGivenCodesCode::set_value(::google::fhir::stu3::proto::ReasonMedicationGivenCodesCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ReasonMedicationGivenCodesCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ReasonMedicationGivenCodesCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ReasonMedicationGivenCodesCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ReasonMedicationGivenCodesCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ReasonMedicationGivenCodesCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ReasonMedicationGivenCodesCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ReasonMedicationGivenCodesCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ReasonMedicationGivenCodesCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ReasonMedicationGivenCodesCode.id)
  return id_;
}
inline void ReasonMedicationGivenCodesCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ReasonMedicationGivenCodesCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ReasonMedicationGivenCodesCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ReasonMedicationGivenCodesCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ReasonMedicationGivenCodesCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ReasonMedicationGivenCodesCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ReasonMedicationGivenCodesCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ReasonMedicationGivenCodesCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ReasonMedicationGivenCodesCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ReasonMedicationGivenCodesCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ReasonMedicationGivenCodesCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ReasonMedicationGivenCodesCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ReasonMedicationGivenCodesCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ReferenceHandlingPolicyCode

// .google.fhir.stu3.proto.ReferenceHandlingPolicyCode.Value value = 1;
inline void ReferenceHandlingPolicyCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ReferenceHandlingPolicyCode_Value ReferenceHandlingPolicyCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ReferenceHandlingPolicyCode.value)
  return static_cast< ::google::fhir::stu3::proto::ReferenceHandlingPolicyCode_Value >(value_);
}
inline void ReferenceHandlingPolicyCode::set_value(::google::fhir::stu3::proto::ReferenceHandlingPolicyCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ReferenceHandlingPolicyCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ReferenceHandlingPolicyCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ReferenceHandlingPolicyCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ReferenceHandlingPolicyCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ReferenceHandlingPolicyCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ReferenceHandlingPolicyCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ReferenceHandlingPolicyCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ReferenceHandlingPolicyCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ReferenceHandlingPolicyCode.id)
  return id_;
}
inline void ReferenceHandlingPolicyCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ReferenceHandlingPolicyCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ReferenceHandlingPolicyCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ReferenceHandlingPolicyCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ReferenceHandlingPolicyCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ReferenceHandlingPolicyCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ReferenceHandlingPolicyCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ReferenceHandlingPolicyCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ReferenceHandlingPolicyCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ReferenceHandlingPolicyCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ReferenceHandlingPolicyCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ReferenceHandlingPolicyCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ReferenceHandlingPolicyCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// RelatedArtifactTypeCode

// .google.fhir.stu3.proto.RelatedArtifactTypeCode.Value value = 1;
inline void RelatedArtifactTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::RelatedArtifactTypeCode_Value RelatedArtifactTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RelatedArtifactTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::RelatedArtifactTypeCode_Value >(value_);
}
inline void RelatedArtifactTypeCode::set_value(::google::fhir::stu3::proto::RelatedArtifactTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.RelatedArtifactTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool RelatedArtifactTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& RelatedArtifactTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& RelatedArtifactTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RelatedArtifactTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* RelatedArtifactTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.RelatedArtifactTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* RelatedArtifactTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.RelatedArtifactTypeCode.id)
  return id_;
}
inline void RelatedArtifactTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.RelatedArtifactTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int RelatedArtifactTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* RelatedArtifactTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.RelatedArtifactTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
RelatedArtifactTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.RelatedArtifactTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& RelatedArtifactTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RelatedArtifactTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* RelatedArtifactTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.RelatedArtifactTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
RelatedArtifactTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.RelatedArtifactTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ObservationReferenceRangeMeaningCodesCode

// .google.fhir.stu3.proto.ObservationReferenceRangeMeaningCodesCode.Value value = 1;
inline void ObservationReferenceRangeMeaningCodesCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ObservationReferenceRangeMeaningCodesCode_Value ObservationReferenceRangeMeaningCodesCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ObservationReferenceRangeMeaningCodesCode.value)
  return static_cast< ::google::fhir::stu3::proto::ObservationReferenceRangeMeaningCodesCode_Value >(value_);
}
inline void ObservationReferenceRangeMeaningCodesCode::set_value(::google::fhir::stu3::proto::ObservationReferenceRangeMeaningCodesCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ObservationReferenceRangeMeaningCodesCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ObservationReferenceRangeMeaningCodesCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ObservationReferenceRangeMeaningCodesCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ObservationReferenceRangeMeaningCodesCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ObservationReferenceRangeMeaningCodesCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ObservationReferenceRangeMeaningCodesCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ObservationReferenceRangeMeaningCodesCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ObservationReferenceRangeMeaningCodesCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ObservationReferenceRangeMeaningCodesCode.id)
  return id_;
}
inline void ObservationReferenceRangeMeaningCodesCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ObservationReferenceRangeMeaningCodesCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ObservationReferenceRangeMeaningCodesCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ObservationReferenceRangeMeaningCodesCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ObservationReferenceRangeMeaningCodesCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ObservationReferenceRangeMeaningCodesCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ObservationReferenceRangeMeaningCodesCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ObservationReferenceRangeMeaningCodesCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ObservationReferenceRangeMeaningCodesCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ObservationReferenceRangeMeaningCodesCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ObservationReferenceRangeMeaningCodesCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ObservationReferenceRangeMeaningCodesCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ObservationReferenceRangeMeaningCodesCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// TestReportActionResultCode

// .google.fhir.stu3.proto.TestReportActionResultCode.Value value = 1;
inline void TestReportActionResultCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::TestReportActionResultCode_Value TestReportActionResultCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TestReportActionResultCode.value)
  return static_cast< ::google::fhir::stu3::proto::TestReportActionResultCode_Value >(value_);
}
inline void TestReportActionResultCode::set_value(::google::fhir::stu3::proto::TestReportActionResultCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.TestReportActionResultCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool TestReportActionResultCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& TestReportActionResultCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& TestReportActionResultCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TestReportActionResultCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* TestReportActionResultCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.TestReportActionResultCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* TestReportActionResultCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TestReportActionResultCode.id)
  return id_;
}
inline void TestReportActionResultCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.TestReportActionResultCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int TestReportActionResultCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* TestReportActionResultCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TestReportActionResultCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
TestReportActionResultCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.TestReportActionResultCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& TestReportActionResultCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TestReportActionResultCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* TestReportActionResultCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.TestReportActionResultCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
TestReportActionResultCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.TestReportActionResultCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// TestReportParticipantTypeCode

// .google.fhir.stu3.proto.TestReportParticipantTypeCode.Value value = 1;
inline void TestReportParticipantTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::TestReportParticipantTypeCode_Value TestReportParticipantTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TestReportParticipantTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::TestReportParticipantTypeCode_Value >(value_);
}
inline void TestReportParticipantTypeCode::set_value(::google::fhir::stu3::proto::TestReportParticipantTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.TestReportParticipantTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool TestReportParticipantTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& TestReportParticipantTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& TestReportParticipantTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TestReportParticipantTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* TestReportParticipantTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.TestReportParticipantTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* TestReportParticipantTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TestReportParticipantTypeCode.id)
  return id_;
}
inline void TestReportParticipantTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.TestReportParticipantTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int TestReportParticipantTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* TestReportParticipantTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TestReportParticipantTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
TestReportParticipantTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.TestReportParticipantTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& TestReportParticipantTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TestReportParticipantTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* TestReportParticipantTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.TestReportParticipantTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
TestReportParticipantTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.TestReportParticipantTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// TestReportResultCode

// .google.fhir.stu3.proto.TestReportResultCode.Value value = 1;
inline void TestReportResultCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::TestReportResultCode_Value TestReportResultCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TestReportResultCode.value)
  return static_cast< ::google::fhir::stu3::proto::TestReportResultCode_Value >(value_);
}
inline void TestReportResultCode::set_value(::google::fhir::stu3::proto::TestReportResultCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.TestReportResultCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool TestReportResultCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& TestReportResultCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& TestReportResultCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TestReportResultCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* TestReportResultCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.TestReportResultCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* TestReportResultCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TestReportResultCode.id)
  return id_;
}
inline void TestReportResultCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.TestReportResultCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int TestReportResultCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* TestReportResultCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TestReportResultCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
TestReportResultCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.TestReportResultCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& TestReportResultCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TestReportResultCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* TestReportResultCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.TestReportResultCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
TestReportResultCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.TestReportResultCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// TestReportStatusCode

// .google.fhir.stu3.proto.TestReportStatusCode.Value value = 1;
inline void TestReportStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::TestReportStatusCode_Value TestReportStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TestReportStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::TestReportStatusCode_Value >(value_);
}
inline void TestReportStatusCode::set_value(::google::fhir::stu3::proto::TestReportStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.TestReportStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool TestReportStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& TestReportStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& TestReportStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TestReportStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* TestReportStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.TestReportStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* TestReportStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TestReportStatusCode.id)
  return id_;
}
inline void TestReportStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.TestReportStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int TestReportStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* TestReportStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TestReportStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
TestReportStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.TestReportStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& TestReportStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TestReportStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* TestReportStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.TestReportStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
TestReportStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.TestReportStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// RepositoryTypeCode

// .google.fhir.stu3.proto.RepositoryTypeCode.Value value = 1;
inline void RepositoryTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::RepositoryTypeCode_Value RepositoryTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RepositoryTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::RepositoryTypeCode_Value >(value_);
}
inline void RepositoryTypeCode::set_value(::google::fhir::stu3::proto::RepositoryTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.RepositoryTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool RepositoryTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& RepositoryTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& RepositoryTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RepositoryTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* RepositoryTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.RepositoryTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* RepositoryTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.RepositoryTypeCode.id)
  return id_;
}
inline void RepositoryTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.RepositoryTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int RepositoryTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* RepositoryTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.RepositoryTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
RepositoryTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.RepositoryTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& RepositoryTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RepositoryTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* RepositoryTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.RepositoryTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
RepositoryTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.RepositoryTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// RequestIntentCode

// .google.fhir.stu3.proto.RequestIntentCode.Value value = 1;
inline void RequestIntentCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::RequestIntentCode_Value RequestIntentCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RequestIntentCode.value)
  return static_cast< ::google::fhir::stu3::proto::RequestIntentCode_Value >(value_);
}
inline void RequestIntentCode::set_value(::google::fhir::stu3::proto::RequestIntentCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.RequestIntentCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool RequestIntentCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& RequestIntentCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& RequestIntentCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RequestIntentCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* RequestIntentCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.RequestIntentCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* RequestIntentCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.RequestIntentCode.id)
  return id_;
}
inline void RequestIntentCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.RequestIntentCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int RequestIntentCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* RequestIntentCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.RequestIntentCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
RequestIntentCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.RequestIntentCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& RequestIntentCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RequestIntentCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* RequestIntentCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.RequestIntentCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
RequestIntentCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.RequestIntentCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// RequestPriorityCode

// .google.fhir.stu3.proto.RequestPriorityCode.Value value = 1;
inline void RequestPriorityCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::RequestPriorityCode_Value RequestPriorityCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RequestPriorityCode.value)
  return static_cast< ::google::fhir::stu3::proto::RequestPriorityCode_Value >(value_);
}
inline void RequestPriorityCode::set_value(::google::fhir::stu3::proto::RequestPriorityCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.RequestPriorityCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool RequestPriorityCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& RequestPriorityCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& RequestPriorityCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RequestPriorityCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* RequestPriorityCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.RequestPriorityCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* RequestPriorityCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.RequestPriorityCode.id)
  return id_;
}
inline void RequestPriorityCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.RequestPriorityCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int RequestPriorityCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* RequestPriorityCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.RequestPriorityCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
RequestPriorityCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.RequestPriorityCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& RequestPriorityCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RequestPriorityCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* RequestPriorityCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.RequestPriorityCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
RequestPriorityCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.RequestPriorityCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// RequestStatusCode

// .google.fhir.stu3.proto.RequestStatusCode.Value value = 1;
inline void RequestStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::RequestStatusCode_Value RequestStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RequestStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::RequestStatusCode_Value >(value_);
}
inline void RequestStatusCode::set_value(::google::fhir::stu3::proto::RequestStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.RequestStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool RequestStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& RequestStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& RequestStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RequestStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* RequestStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.RequestStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* RequestStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.RequestStatusCode.id)
  return id_;
}
inline void RequestStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.RequestStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int RequestStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* RequestStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.RequestStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
RequestStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.RequestStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& RequestStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RequestStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* RequestStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.RequestStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
RequestStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.RequestStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ResearchStudyStatusCode

// .google.fhir.stu3.proto.ResearchStudyStatusCode.Value value = 1;
inline void ResearchStudyStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ResearchStudyStatusCode_Value ResearchStudyStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ResearchStudyStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::ResearchStudyStatusCode_Value >(value_);
}
inline void ResearchStudyStatusCode::set_value(::google::fhir::stu3::proto::ResearchStudyStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ResearchStudyStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ResearchStudyStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ResearchStudyStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ResearchStudyStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ResearchStudyStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ResearchStudyStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ResearchStudyStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ResearchStudyStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ResearchStudyStatusCode.id)
  return id_;
}
inline void ResearchStudyStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ResearchStudyStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ResearchStudyStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ResearchStudyStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ResearchStudyStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ResearchStudyStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ResearchStudyStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ResearchStudyStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ResearchStudyStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ResearchStudyStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ResearchStudyStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ResearchStudyStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ResearchStudyStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ResearchSubjectStatusCode

// .google.fhir.stu3.proto.ResearchSubjectStatusCode.Value value = 1;
inline void ResearchSubjectStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ResearchSubjectStatusCode_Value ResearchSubjectStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ResearchSubjectStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::ResearchSubjectStatusCode_Value >(value_);
}
inline void ResearchSubjectStatusCode::set_value(::google::fhir::stu3::proto::ResearchSubjectStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ResearchSubjectStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ResearchSubjectStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ResearchSubjectStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ResearchSubjectStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ResearchSubjectStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ResearchSubjectStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ResearchSubjectStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ResearchSubjectStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ResearchSubjectStatusCode.id)
  return id_;
}
inline void ResearchSubjectStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ResearchSubjectStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ResearchSubjectStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ResearchSubjectStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ResearchSubjectStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ResearchSubjectStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ResearchSubjectStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ResearchSubjectStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ResearchSubjectStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ResearchSubjectStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ResearchSubjectStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ResearchSubjectStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ResearchSubjectStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// PayeeResourceTypeCode

// .google.fhir.stu3.proto.PayeeResourceTypeCode.Value value = 1;
inline void PayeeResourceTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::PayeeResourceTypeCode_Value PayeeResourceTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.PayeeResourceTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::PayeeResourceTypeCode_Value >(value_);
}
inline void PayeeResourceTypeCode::set_value(::google::fhir::stu3::proto::PayeeResourceTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.PayeeResourceTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool PayeeResourceTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& PayeeResourceTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& PayeeResourceTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.PayeeResourceTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* PayeeResourceTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.PayeeResourceTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* PayeeResourceTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.PayeeResourceTypeCode.id)
  return id_;
}
inline void PayeeResourceTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.PayeeResourceTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int PayeeResourceTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* PayeeResourceTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.PayeeResourceTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
PayeeResourceTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.PayeeResourceTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& PayeeResourceTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.PayeeResourceTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* PayeeResourceTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.PayeeResourceTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
PayeeResourceTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.PayeeResourceTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ResourceTypeCode

// .google.fhir.stu3.proto.ResourceTypeCode.Value value = 1;
inline void ResourceTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ResourceTypeCode_Value ResourceTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ResourceTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::ResourceTypeCode_Value >(value_);
}
inline void ResourceTypeCode::set_value(::google::fhir::stu3::proto::ResourceTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ResourceTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ResourceTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ResourceTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ResourceTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ResourceTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ResourceTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ResourceTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ResourceTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ResourceTypeCode.id)
  return id_;
}
inline void ResourceTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ResourceTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ResourceTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ResourceTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ResourceTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ResourceTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ResourceTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ResourceTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ResourceTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ResourceTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ResourceTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ResourceTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ResourceTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ResourceValidationModeCode

// .google.fhir.stu3.proto.ResourceValidationModeCode.Value value = 1;
inline void ResourceValidationModeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ResourceValidationModeCode_Value ResourceValidationModeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ResourceValidationModeCode.value)
  return static_cast< ::google::fhir::stu3::proto::ResourceValidationModeCode_Value >(value_);
}
inline void ResourceValidationModeCode::set_value(::google::fhir::stu3::proto::ResourceValidationModeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ResourceValidationModeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ResourceValidationModeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ResourceValidationModeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ResourceValidationModeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ResourceValidationModeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ResourceValidationModeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ResourceValidationModeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ResourceValidationModeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ResourceValidationModeCode.id)
  return id_;
}
inline void ResourceValidationModeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ResourceValidationModeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ResourceValidationModeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ResourceValidationModeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ResourceValidationModeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ResourceValidationModeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ResourceValidationModeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ResourceValidationModeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ResourceValidationModeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ResourceValidationModeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ResourceValidationModeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ResourceValidationModeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ResourceValidationModeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ResponseTypeCode

// .google.fhir.stu3.proto.ResponseTypeCode.Value value = 1;
inline void ResponseTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ResponseTypeCode_Value ResponseTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ResponseTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::ResponseTypeCode_Value >(value_);
}
inline void ResponseTypeCode::set_value(::google::fhir::stu3::proto::ResponseTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ResponseTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ResponseTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ResponseTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ResponseTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ResponseTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ResponseTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ResponseTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ResponseTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ResponseTypeCode.id)
  return id_;
}
inline void ResponseTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ResponseTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ResponseTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ResponseTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ResponseTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ResponseTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ResponseTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ResponseTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ResponseTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ResponseTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ResponseTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ResponseTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ResponseTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// RestfulCapabilityModeCode

// .google.fhir.stu3.proto.RestfulCapabilityModeCode.Value value = 1;
inline void RestfulCapabilityModeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::RestfulCapabilityModeCode_Value RestfulCapabilityModeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RestfulCapabilityModeCode.value)
  return static_cast< ::google::fhir::stu3::proto::RestfulCapabilityModeCode_Value >(value_);
}
inline void RestfulCapabilityModeCode::set_value(::google::fhir::stu3::proto::RestfulCapabilityModeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.RestfulCapabilityModeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool RestfulCapabilityModeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& RestfulCapabilityModeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& RestfulCapabilityModeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RestfulCapabilityModeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* RestfulCapabilityModeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.RestfulCapabilityModeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* RestfulCapabilityModeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.RestfulCapabilityModeCode.id)
  return id_;
}
inline void RestfulCapabilityModeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.RestfulCapabilityModeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int RestfulCapabilityModeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* RestfulCapabilityModeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.RestfulCapabilityModeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
RestfulCapabilityModeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.RestfulCapabilityModeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& RestfulCapabilityModeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RestfulCapabilityModeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* RestfulCapabilityModeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.RestfulCapabilityModeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
RestfulCapabilityModeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.RestfulCapabilityModeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// RestfulSecurityServiceCode

// .google.fhir.stu3.proto.RestfulSecurityServiceCode.Value value = 1;
inline void RestfulSecurityServiceCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::RestfulSecurityServiceCode_Value RestfulSecurityServiceCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RestfulSecurityServiceCode.value)
  return static_cast< ::google::fhir::stu3::proto::RestfulSecurityServiceCode_Value >(value_);
}
inline void RestfulSecurityServiceCode::set_value(::google::fhir::stu3::proto::RestfulSecurityServiceCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.RestfulSecurityServiceCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool RestfulSecurityServiceCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& RestfulSecurityServiceCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& RestfulSecurityServiceCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RestfulSecurityServiceCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* RestfulSecurityServiceCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.RestfulSecurityServiceCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* RestfulSecurityServiceCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.RestfulSecurityServiceCode.id)
  return id_;
}
inline void RestfulSecurityServiceCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.RestfulSecurityServiceCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int RestfulSecurityServiceCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* RestfulSecurityServiceCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.RestfulSecurityServiceCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
RestfulSecurityServiceCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.RestfulSecurityServiceCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& RestfulSecurityServiceCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RestfulSecurityServiceCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* RestfulSecurityServiceCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.RestfulSecurityServiceCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
RestfulSecurityServiceCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.RestfulSecurityServiceCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// RiskProbabilityCode

// .google.fhir.stu3.proto.RiskProbabilityCode.Value value = 1;
inline void RiskProbabilityCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::RiskProbabilityCode_Value RiskProbabilityCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RiskProbabilityCode.value)
  return static_cast< ::google::fhir::stu3::proto::RiskProbabilityCode_Value >(value_);
}
inline void RiskProbabilityCode::set_value(::google::fhir::stu3::proto::RiskProbabilityCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.RiskProbabilityCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool RiskProbabilityCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& RiskProbabilityCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& RiskProbabilityCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RiskProbabilityCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* RiskProbabilityCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.RiskProbabilityCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* RiskProbabilityCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.RiskProbabilityCode.id)
  return id_;
}
inline void RiskProbabilityCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.RiskProbabilityCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int RiskProbabilityCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* RiskProbabilityCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.RiskProbabilityCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
RiskProbabilityCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.RiskProbabilityCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& RiskProbabilityCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RiskProbabilityCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* RiskProbabilityCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.RiskProbabilityCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
RiskProbabilityCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.RiskProbabilityCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// SearchComparatorCode

// .google.fhir.stu3.proto.SearchComparatorCode.Value value = 1;
inline void SearchComparatorCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::SearchComparatorCode_Value SearchComparatorCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SearchComparatorCode.value)
  return static_cast< ::google::fhir::stu3::proto::SearchComparatorCode_Value >(value_);
}
inline void SearchComparatorCode::set_value(::google::fhir::stu3::proto::SearchComparatorCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.SearchComparatorCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool SearchComparatorCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& SearchComparatorCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& SearchComparatorCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SearchComparatorCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* SearchComparatorCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.SearchComparatorCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* SearchComparatorCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SearchComparatorCode.id)
  return id_;
}
inline void SearchComparatorCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.SearchComparatorCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int SearchComparatorCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* SearchComparatorCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SearchComparatorCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
SearchComparatorCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.SearchComparatorCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& SearchComparatorCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SearchComparatorCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* SearchComparatorCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.SearchComparatorCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
SearchComparatorCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.SearchComparatorCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// SearchEntryModeCode

// .google.fhir.stu3.proto.SearchEntryModeCode.Value value = 1;
inline void SearchEntryModeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::SearchEntryModeCode_Value SearchEntryModeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SearchEntryModeCode.value)
  return static_cast< ::google::fhir::stu3::proto::SearchEntryModeCode_Value >(value_);
}
inline void SearchEntryModeCode::set_value(::google::fhir::stu3::proto::SearchEntryModeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.SearchEntryModeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool SearchEntryModeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& SearchEntryModeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& SearchEntryModeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SearchEntryModeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* SearchEntryModeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.SearchEntryModeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* SearchEntryModeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SearchEntryModeCode.id)
  return id_;
}
inline void SearchEntryModeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.SearchEntryModeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int SearchEntryModeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* SearchEntryModeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SearchEntryModeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
SearchEntryModeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.SearchEntryModeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& SearchEntryModeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SearchEntryModeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* SearchEntryModeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.SearchEntryModeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
SearchEntryModeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.SearchEntryModeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// SearchModifierCodeCode

// .google.fhir.stu3.proto.SearchModifierCodeCode.Value value = 1;
inline void SearchModifierCodeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::SearchModifierCodeCode_Value SearchModifierCodeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SearchModifierCodeCode.value)
  return static_cast< ::google::fhir::stu3::proto::SearchModifierCodeCode_Value >(value_);
}
inline void SearchModifierCodeCode::set_value(::google::fhir::stu3::proto::SearchModifierCodeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.SearchModifierCodeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool SearchModifierCodeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& SearchModifierCodeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& SearchModifierCodeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SearchModifierCodeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* SearchModifierCodeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.SearchModifierCodeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* SearchModifierCodeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SearchModifierCodeCode.id)
  return id_;
}
inline void SearchModifierCodeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.SearchModifierCodeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int SearchModifierCodeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* SearchModifierCodeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SearchModifierCodeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
SearchModifierCodeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.SearchModifierCodeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& SearchModifierCodeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SearchModifierCodeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* SearchModifierCodeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.SearchModifierCodeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
SearchModifierCodeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.SearchModifierCodeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// SearchParamTypeCode

// .google.fhir.stu3.proto.SearchParamTypeCode.Value value = 1;
inline void SearchParamTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::SearchParamTypeCode_Value SearchParamTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SearchParamTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::SearchParamTypeCode_Value >(value_);
}
inline void SearchParamTypeCode::set_value(::google::fhir::stu3::proto::SearchParamTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.SearchParamTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool SearchParamTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& SearchParamTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& SearchParamTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SearchParamTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* SearchParamTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.SearchParamTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* SearchParamTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SearchParamTypeCode.id)
  return id_;
}
inline void SearchParamTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.SearchParamTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int SearchParamTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* SearchParamTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SearchParamTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
SearchParamTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.SearchParamTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& SearchParamTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SearchParamTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* SearchParamTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.SearchParamTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
SearchParamTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.SearchParamTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// XPathUsageTypeCode

// .google.fhir.stu3.proto.XPathUsageTypeCode.Value value = 1;
inline void XPathUsageTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::XPathUsageTypeCode_Value XPathUsageTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.XPathUsageTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::XPathUsageTypeCode_Value >(value_);
}
inline void XPathUsageTypeCode::set_value(::google::fhir::stu3::proto::XPathUsageTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.XPathUsageTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool XPathUsageTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& XPathUsageTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& XPathUsageTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.XPathUsageTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* XPathUsageTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.XPathUsageTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* XPathUsageTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.XPathUsageTypeCode.id)
  return id_;
}
inline void XPathUsageTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.XPathUsageTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int XPathUsageTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* XPathUsageTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.XPathUsageTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
XPathUsageTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.XPathUsageTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& XPathUsageTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.XPathUsageTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* XPathUsageTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.XPathUsageTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
XPathUsageTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.XPathUsageTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// SequenceTypeCode

// .google.fhir.stu3.proto.SequenceTypeCode.Value value = 1;
inline void SequenceTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::SequenceTypeCode_Value SequenceTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SequenceTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::SequenceTypeCode_Value >(value_);
}
inline void SequenceTypeCode::set_value(::google::fhir::stu3::proto::SequenceTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.SequenceTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool SequenceTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& SequenceTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& SequenceTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SequenceTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* SequenceTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.SequenceTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* SequenceTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SequenceTypeCode.id)
  return id_;
}
inline void SequenceTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.SequenceTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int SequenceTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* SequenceTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SequenceTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
SequenceTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.SequenceTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& SequenceTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SequenceTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* SequenceTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.SequenceTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
SequenceTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.SequenceTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ServiceProvisionConditionsCode

// .google.fhir.stu3.proto.ServiceProvisionConditionsCode.Value value = 1;
inline void ServiceProvisionConditionsCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ServiceProvisionConditionsCode_Value ServiceProvisionConditionsCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ServiceProvisionConditionsCode.value)
  return static_cast< ::google::fhir::stu3::proto::ServiceProvisionConditionsCode_Value >(value_);
}
inline void ServiceProvisionConditionsCode::set_value(::google::fhir::stu3::proto::ServiceProvisionConditionsCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ServiceProvisionConditionsCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ServiceProvisionConditionsCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ServiceProvisionConditionsCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ServiceProvisionConditionsCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ServiceProvisionConditionsCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ServiceProvisionConditionsCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ServiceProvisionConditionsCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ServiceProvisionConditionsCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ServiceProvisionConditionsCode.id)
  return id_;
}
inline void ServiceProvisionConditionsCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ServiceProvisionConditionsCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ServiceProvisionConditionsCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ServiceProvisionConditionsCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ServiceProvisionConditionsCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ServiceProvisionConditionsCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ServiceProvisionConditionsCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ServiceProvisionConditionsCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ServiceProvisionConditionsCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ServiceProvisionConditionsCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ServiceProvisionConditionsCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ServiceProvisionConditionsCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ServiceProvisionConditionsCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ReferralMethodCode

// .google.fhir.stu3.proto.ReferralMethodCode.Value value = 1;
inline void ReferralMethodCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ReferralMethodCode_Value ReferralMethodCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ReferralMethodCode.value)
  return static_cast< ::google::fhir::stu3::proto::ReferralMethodCode_Value >(value_);
}
inline void ReferralMethodCode::set_value(::google::fhir::stu3::proto::ReferralMethodCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ReferralMethodCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ReferralMethodCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ReferralMethodCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ReferralMethodCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ReferralMethodCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ReferralMethodCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ReferralMethodCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ReferralMethodCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ReferralMethodCode.id)
  return id_;
}
inline void ReferralMethodCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ReferralMethodCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ReferralMethodCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ReferralMethodCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ReferralMethodCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ReferralMethodCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ReferralMethodCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ReferralMethodCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ReferralMethodCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ReferralMethodCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ReferralMethodCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ReferralMethodCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ReferralMethodCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// SlotStatusCode

// .google.fhir.stu3.proto.SlotStatusCode.Value value = 1;
inline void SlotStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::SlotStatusCode_Value SlotStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SlotStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::SlotStatusCode_Value >(value_);
}
inline void SlotStatusCode::set_value(::google::fhir::stu3::proto::SlotStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.SlotStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool SlotStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& SlotStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& SlotStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SlotStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* SlotStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.SlotStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* SlotStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SlotStatusCode.id)
  return id_;
}
inline void SlotStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.SlotStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int SlotStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* SlotStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SlotStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
SlotStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.SlotStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& SlotStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SlotStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* SlotStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.SlotStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
SlotStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.SlotStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// SpecialValuesCode

// .google.fhir.stu3.proto.SpecialValuesCode.Value value = 1;
inline void SpecialValuesCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::SpecialValuesCode_Value SpecialValuesCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SpecialValuesCode.value)
  return static_cast< ::google::fhir::stu3::proto::SpecialValuesCode_Value >(value_);
}
inline void SpecialValuesCode::set_value(::google::fhir::stu3::proto::SpecialValuesCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.SpecialValuesCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool SpecialValuesCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& SpecialValuesCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& SpecialValuesCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SpecialValuesCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* SpecialValuesCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.SpecialValuesCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* SpecialValuesCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SpecialValuesCode.id)
  return id_;
}
inline void SpecialValuesCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.SpecialValuesCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int SpecialValuesCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* SpecialValuesCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SpecialValuesCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
SpecialValuesCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.SpecialValuesCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& SpecialValuesCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SpecialValuesCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* SpecialValuesCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.SpecialValuesCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
SpecialValuesCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.SpecialValuesCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// DeviceSpecificationSpecTypeCode

// .google.fhir.stu3.proto.DeviceSpecificationSpecTypeCode.Value value = 1;
inline void DeviceSpecificationSpecTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::DeviceSpecificationSpecTypeCode_Value DeviceSpecificationSpecTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DeviceSpecificationSpecTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::DeviceSpecificationSpecTypeCode_Value >(value_);
}
inline void DeviceSpecificationSpecTypeCode::set_value(::google::fhir::stu3::proto::DeviceSpecificationSpecTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.DeviceSpecificationSpecTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool DeviceSpecificationSpecTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& DeviceSpecificationSpecTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& DeviceSpecificationSpecTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DeviceSpecificationSpecTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* DeviceSpecificationSpecTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DeviceSpecificationSpecTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* DeviceSpecificationSpecTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DeviceSpecificationSpecTypeCode.id)
  return id_;
}
inline void DeviceSpecificationSpecTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DeviceSpecificationSpecTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int DeviceSpecificationSpecTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* DeviceSpecificationSpecTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DeviceSpecificationSpecTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
DeviceSpecificationSpecTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DeviceSpecificationSpecTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& DeviceSpecificationSpecTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DeviceSpecificationSpecTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* DeviceSpecificationSpecTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DeviceSpecificationSpecTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
DeviceSpecificationSpecTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DeviceSpecificationSpecTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// SpecimenStatusCode

// .google.fhir.stu3.proto.SpecimenStatusCode.Value value = 1;
inline void SpecimenStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::SpecimenStatusCode_Value SpecimenStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SpecimenStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::SpecimenStatusCode_Value >(value_);
}
inline void SpecimenStatusCode::set_value(::google::fhir::stu3::proto::SpecimenStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.SpecimenStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool SpecimenStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& SpecimenStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& SpecimenStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SpecimenStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* SpecimenStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.SpecimenStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* SpecimenStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SpecimenStatusCode.id)
  return id_;
}
inline void SpecimenStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.SpecimenStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int SpecimenStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* SpecimenStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SpecimenStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
SpecimenStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.SpecimenStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& SpecimenStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SpecimenStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* SpecimenStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.SpecimenStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
SpecimenStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.SpecimenStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// StructureDefinitionKindCode

// .google.fhir.stu3.proto.StructureDefinitionKindCode.Value value = 1;
inline void StructureDefinitionKindCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::StructureDefinitionKindCode_Value StructureDefinitionKindCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.StructureDefinitionKindCode.value)
  return static_cast< ::google::fhir::stu3::proto::StructureDefinitionKindCode_Value >(value_);
}
inline void StructureDefinitionKindCode::set_value(::google::fhir::stu3::proto::StructureDefinitionKindCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.StructureDefinitionKindCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool StructureDefinitionKindCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& StructureDefinitionKindCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& StructureDefinitionKindCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.StructureDefinitionKindCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* StructureDefinitionKindCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.StructureDefinitionKindCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* StructureDefinitionKindCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.StructureDefinitionKindCode.id)
  return id_;
}
inline void StructureDefinitionKindCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.StructureDefinitionKindCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int StructureDefinitionKindCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* StructureDefinitionKindCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.StructureDefinitionKindCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
StructureDefinitionKindCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.StructureDefinitionKindCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& StructureDefinitionKindCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.StructureDefinitionKindCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* StructureDefinitionKindCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.StructureDefinitionKindCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
StructureDefinitionKindCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.StructureDefinitionKindCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// SubscriptionChannelTypeCode

// .google.fhir.stu3.proto.SubscriptionChannelTypeCode.Value value = 1;
inline void SubscriptionChannelTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::SubscriptionChannelTypeCode_Value SubscriptionChannelTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SubscriptionChannelTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::SubscriptionChannelTypeCode_Value >(value_);
}
inline void SubscriptionChannelTypeCode::set_value(::google::fhir::stu3::proto::SubscriptionChannelTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.SubscriptionChannelTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool SubscriptionChannelTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& SubscriptionChannelTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& SubscriptionChannelTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SubscriptionChannelTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* SubscriptionChannelTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.SubscriptionChannelTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* SubscriptionChannelTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SubscriptionChannelTypeCode.id)
  return id_;
}
inline void SubscriptionChannelTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.SubscriptionChannelTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int SubscriptionChannelTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* SubscriptionChannelTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SubscriptionChannelTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
SubscriptionChannelTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.SubscriptionChannelTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& SubscriptionChannelTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SubscriptionChannelTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* SubscriptionChannelTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.SubscriptionChannelTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
SubscriptionChannelTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.SubscriptionChannelTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// SubscriptionStatusCode

// .google.fhir.stu3.proto.SubscriptionStatusCode.Value value = 1;
inline void SubscriptionStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::SubscriptionStatusCode_Value SubscriptionStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SubscriptionStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::SubscriptionStatusCode_Value >(value_);
}
inline void SubscriptionStatusCode::set_value(::google::fhir::stu3::proto::SubscriptionStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.SubscriptionStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool SubscriptionStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& SubscriptionStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& SubscriptionStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SubscriptionStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* SubscriptionStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.SubscriptionStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* SubscriptionStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SubscriptionStatusCode.id)
  return id_;
}
inline void SubscriptionStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.SubscriptionStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int SubscriptionStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* SubscriptionStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SubscriptionStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
SubscriptionStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.SubscriptionStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& SubscriptionStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SubscriptionStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* SubscriptionStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.SubscriptionStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
SubscriptionStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.SubscriptionStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// SubscriptionTagCode

// .google.fhir.stu3.proto.SubscriptionTagCode.Value value = 1;
inline void SubscriptionTagCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::SubscriptionTagCode_Value SubscriptionTagCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SubscriptionTagCode.value)
  return static_cast< ::google::fhir::stu3::proto::SubscriptionTagCode_Value >(value_);
}
inline void SubscriptionTagCode::set_value(::google::fhir::stu3::proto::SubscriptionTagCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.SubscriptionTagCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool SubscriptionTagCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& SubscriptionTagCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& SubscriptionTagCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SubscriptionTagCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* SubscriptionTagCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.SubscriptionTagCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* SubscriptionTagCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SubscriptionTagCode.id)
  return id_;
}
inline void SubscriptionTagCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.SubscriptionTagCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int SubscriptionTagCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* SubscriptionTagCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SubscriptionTagCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
SubscriptionTagCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.SubscriptionTagCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& SubscriptionTagCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SubscriptionTagCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* SubscriptionTagCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.SubscriptionTagCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
SubscriptionTagCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.SubscriptionTagCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// SubstanceCategoryCodesCode

// .google.fhir.stu3.proto.SubstanceCategoryCodesCode.Value value = 1;
inline void SubstanceCategoryCodesCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::SubstanceCategoryCodesCode_Value SubstanceCategoryCodesCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SubstanceCategoryCodesCode.value)
  return static_cast< ::google::fhir::stu3::proto::SubstanceCategoryCodesCode_Value >(value_);
}
inline void SubstanceCategoryCodesCode::set_value(::google::fhir::stu3::proto::SubstanceCategoryCodesCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.SubstanceCategoryCodesCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool SubstanceCategoryCodesCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& SubstanceCategoryCodesCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& SubstanceCategoryCodesCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SubstanceCategoryCodesCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* SubstanceCategoryCodesCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.SubstanceCategoryCodesCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* SubstanceCategoryCodesCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SubstanceCategoryCodesCode.id)
  return id_;
}
inline void SubstanceCategoryCodesCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.SubstanceCategoryCodesCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int SubstanceCategoryCodesCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* SubstanceCategoryCodesCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SubstanceCategoryCodesCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
SubstanceCategoryCodesCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.SubstanceCategoryCodesCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& SubstanceCategoryCodesCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SubstanceCategoryCodesCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* SubstanceCategoryCodesCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.SubstanceCategoryCodesCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
SubstanceCategoryCodesCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.SubstanceCategoryCodesCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// FHIRSubstanceStatusCode

// .google.fhir.stu3.proto.FHIRSubstanceStatusCode.Value value = 1;
inline void FHIRSubstanceStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::FHIRSubstanceStatusCode_Value FHIRSubstanceStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FHIRSubstanceStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::FHIRSubstanceStatusCode_Value >(value_);
}
inline void FHIRSubstanceStatusCode::set_value(::google::fhir::stu3::proto::FHIRSubstanceStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.FHIRSubstanceStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool FHIRSubstanceStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& FHIRSubstanceStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& FHIRSubstanceStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FHIRSubstanceStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* FHIRSubstanceStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.FHIRSubstanceStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* FHIRSubstanceStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.FHIRSubstanceStatusCode.id)
  return id_;
}
inline void FHIRSubstanceStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.FHIRSubstanceStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int FHIRSubstanceStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* FHIRSubstanceStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.FHIRSubstanceStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
FHIRSubstanceStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.FHIRSubstanceStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& FHIRSubstanceStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.FHIRSubstanceStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* FHIRSubstanceStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.FHIRSubstanceStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
FHIRSubstanceStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.FHIRSubstanceStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// SupplyDeliveryStatusCode

// .google.fhir.stu3.proto.SupplyDeliveryStatusCode.Value value = 1;
inline void SupplyDeliveryStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::SupplyDeliveryStatusCode_Value SupplyDeliveryStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SupplyDeliveryStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::SupplyDeliveryStatusCode_Value >(value_);
}
inline void SupplyDeliveryStatusCode::set_value(::google::fhir::stu3::proto::SupplyDeliveryStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.SupplyDeliveryStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool SupplyDeliveryStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& SupplyDeliveryStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& SupplyDeliveryStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SupplyDeliveryStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* SupplyDeliveryStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.SupplyDeliveryStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* SupplyDeliveryStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SupplyDeliveryStatusCode.id)
  return id_;
}
inline void SupplyDeliveryStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.SupplyDeliveryStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int SupplyDeliveryStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* SupplyDeliveryStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SupplyDeliveryStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
SupplyDeliveryStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.SupplyDeliveryStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& SupplyDeliveryStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SupplyDeliveryStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* SupplyDeliveryStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.SupplyDeliveryStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
SupplyDeliveryStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.SupplyDeliveryStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// SupplyItemTypeCode

// .google.fhir.stu3.proto.SupplyItemTypeCode.Value value = 1;
inline void SupplyItemTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::SupplyItemTypeCode_Value SupplyItemTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SupplyItemTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::SupplyItemTypeCode_Value >(value_);
}
inline void SupplyItemTypeCode::set_value(::google::fhir::stu3::proto::SupplyItemTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.SupplyItemTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool SupplyItemTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& SupplyItemTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& SupplyItemTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SupplyItemTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* SupplyItemTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.SupplyItemTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* SupplyItemTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SupplyItemTypeCode.id)
  return id_;
}
inline void SupplyItemTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.SupplyItemTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int SupplyItemTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* SupplyItemTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SupplyItemTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
SupplyItemTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.SupplyItemTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& SupplyItemTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SupplyItemTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* SupplyItemTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.SupplyItemTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
SupplyItemTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.SupplyItemTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// SupplyTypeCode

// .google.fhir.stu3.proto.SupplyTypeCode.Value value = 1;
inline void SupplyTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::SupplyTypeCode_Value SupplyTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SupplyTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::SupplyTypeCode_Value >(value_);
}
inline void SupplyTypeCode::set_value(::google::fhir::stu3::proto::SupplyTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.SupplyTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool SupplyTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& SupplyTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& SupplyTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SupplyTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* SupplyTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.SupplyTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* SupplyTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SupplyTypeCode.id)
  return id_;
}
inline void SupplyTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.SupplyTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int SupplyTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* SupplyTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SupplyTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
SupplyTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.SupplyTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& SupplyTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SupplyTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* SupplyTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.SupplyTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
SupplyTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.SupplyTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// SupplyRequestReasonCode

// .google.fhir.stu3.proto.SupplyRequestReasonCode.Value value = 1;
inline void SupplyRequestReasonCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::SupplyRequestReasonCode_Value SupplyRequestReasonCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SupplyRequestReasonCode.value)
  return static_cast< ::google::fhir::stu3::proto::SupplyRequestReasonCode_Value >(value_);
}
inline void SupplyRequestReasonCode::set_value(::google::fhir::stu3::proto::SupplyRequestReasonCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.SupplyRequestReasonCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool SupplyRequestReasonCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& SupplyRequestReasonCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& SupplyRequestReasonCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SupplyRequestReasonCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* SupplyRequestReasonCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.SupplyRequestReasonCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* SupplyRequestReasonCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SupplyRequestReasonCode.id)
  return id_;
}
inline void SupplyRequestReasonCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.SupplyRequestReasonCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int SupplyRequestReasonCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* SupplyRequestReasonCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SupplyRequestReasonCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
SupplyRequestReasonCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.SupplyRequestReasonCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& SupplyRequestReasonCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SupplyRequestReasonCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* SupplyRequestReasonCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.SupplyRequestReasonCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
SupplyRequestReasonCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.SupplyRequestReasonCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// SupplyRequestStatusCode

// .google.fhir.stu3.proto.SupplyRequestStatusCode.Value value = 1;
inline void SupplyRequestStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::SupplyRequestStatusCode_Value SupplyRequestStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SupplyRequestStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::SupplyRequestStatusCode_Value >(value_);
}
inline void SupplyRequestStatusCode::set_value(::google::fhir::stu3::proto::SupplyRequestStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.SupplyRequestStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool SupplyRequestStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& SupplyRequestStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& SupplyRequestStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SupplyRequestStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* SupplyRequestStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.SupplyRequestStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* SupplyRequestStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SupplyRequestStatusCode.id)
  return id_;
}
inline void SupplyRequestStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.SupplyRequestStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int SupplyRequestStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* SupplyRequestStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SupplyRequestStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
SupplyRequestStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.SupplyRequestStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& SupplyRequestStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SupplyRequestStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* SupplyRequestStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.SupplyRequestStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
SupplyRequestStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.SupplyRequestStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// SystemRestfulInteractionCode

// .google.fhir.stu3.proto.SystemRestfulInteractionCode.Value value = 1;
inline void SystemRestfulInteractionCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::SystemRestfulInteractionCode_Value SystemRestfulInteractionCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SystemRestfulInteractionCode.value)
  return static_cast< ::google::fhir::stu3::proto::SystemRestfulInteractionCode_Value >(value_);
}
inline void SystemRestfulInteractionCode::set_value(::google::fhir::stu3::proto::SystemRestfulInteractionCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.SystemRestfulInteractionCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool SystemRestfulInteractionCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& SystemRestfulInteractionCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& SystemRestfulInteractionCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SystemRestfulInteractionCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* SystemRestfulInteractionCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.SystemRestfulInteractionCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* SystemRestfulInteractionCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SystemRestfulInteractionCode.id)
  return id_;
}
inline void SystemRestfulInteractionCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.SystemRestfulInteractionCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int SystemRestfulInteractionCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* SystemRestfulInteractionCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SystemRestfulInteractionCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
SystemRestfulInteractionCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.SystemRestfulInteractionCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& SystemRestfulInteractionCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SystemRestfulInteractionCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* SystemRestfulInteractionCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.SystemRestfulInteractionCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
SystemRestfulInteractionCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.SystemRestfulInteractionCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// SystemVersionProcessingModeCode

// .google.fhir.stu3.proto.SystemVersionProcessingModeCode.Value value = 1;
inline void SystemVersionProcessingModeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::SystemVersionProcessingModeCode_Value SystemVersionProcessingModeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SystemVersionProcessingModeCode.value)
  return static_cast< ::google::fhir::stu3::proto::SystemVersionProcessingModeCode_Value >(value_);
}
inline void SystemVersionProcessingModeCode::set_value(::google::fhir::stu3::proto::SystemVersionProcessingModeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.SystemVersionProcessingModeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool SystemVersionProcessingModeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& SystemVersionProcessingModeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& SystemVersionProcessingModeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SystemVersionProcessingModeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* SystemVersionProcessingModeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.SystemVersionProcessingModeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* SystemVersionProcessingModeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SystemVersionProcessingModeCode.id)
  return id_;
}
inline void SystemVersionProcessingModeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.SystemVersionProcessingModeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int SystemVersionProcessingModeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* SystemVersionProcessingModeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.SystemVersionProcessingModeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
SystemVersionProcessingModeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.SystemVersionProcessingModeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& SystemVersionProcessingModeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.SystemVersionProcessingModeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* SystemVersionProcessingModeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.SystemVersionProcessingModeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
SystemVersionProcessingModeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.SystemVersionProcessingModeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// TaskPerformerTypeCode

// .google.fhir.stu3.proto.TaskPerformerTypeCode.Value value = 1;
inline void TaskPerformerTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::TaskPerformerTypeCode_Value TaskPerformerTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TaskPerformerTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::TaskPerformerTypeCode_Value >(value_);
}
inline void TaskPerformerTypeCode::set_value(::google::fhir::stu3::proto::TaskPerformerTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.TaskPerformerTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool TaskPerformerTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& TaskPerformerTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& TaskPerformerTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TaskPerformerTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* TaskPerformerTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.TaskPerformerTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* TaskPerformerTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TaskPerformerTypeCode.id)
  return id_;
}
inline void TaskPerformerTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.TaskPerformerTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int TaskPerformerTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* TaskPerformerTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TaskPerformerTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
TaskPerformerTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.TaskPerformerTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& TaskPerformerTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TaskPerformerTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* TaskPerformerTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.TaskPerformerTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
TaskPerformerTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.TaskPerformerTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// TemplateStatusCodeCode

// .google.fhir.stu3.proto.TemplateStatusCodeCode.Value value = 1;
inline void TemplateStatusCodeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::TemplateStatusCodeCode_Value TemplateStatusCodeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TemplateStatusCodeCode.value)
  return static_cast< ::google::fhir::stu3::proto::TemplateStatusCodeCode_Value >(value_);
}
inline void TemplateStatusCodeCode::set_value(::google::fhir::stu3::proto::TemplateStatusCodeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.TemplateStatusCodeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool TemplateStatusCodeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& TemplateStatusCodeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& TemplateStatusCodeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TemplateStatusCodeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* TemplateStatusCodeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.TemplateStatusCodeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* TemplateStatusCodeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TemplateStatusCodeCode.id)
  return id_;
}
inline void TemplateStatusCodeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.TemplateStatusCodeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int TemplateStatusCodeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* TemplateStatusCodeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TemplateStatusCodeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
TemplateStatusCodeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.TemplateStatusCodeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& TemplateStatusCodeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TemplateStatusCodeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* TemplateStatusCodeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.TemplateStatusCodeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
TemplateStatusCodeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.TemplateStatusCodeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// TaskStatusCode

// .google.fhir.stu3.proto.TaskStatusCode.Value value = 1;
inline void TaskStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::TaskStatusCode_Value TaskStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TaskStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::TaskStatusCode_Value >(value_);
}
inline void TaskStatusCode::set_value(::google::fhir::stu3::proto::TaskStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.TaskStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool TaskStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& TaskStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& TaskStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TaskStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* TaskStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.TaskStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* TaskStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TaskStatusCode.id)
  return id_;
}
inline void TaskStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.TaskStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int TaskStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* TaskStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TaskStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
TaskStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.TaskStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& TaskStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TaskStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* TaskStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.TaskStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
TaskStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.TaskStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// TestScriptOperationCodeCode

// .google.fhir.stu3.proto.TestScriptOperationCodeCode.Value value = 1;
inline void TestScriptOperationCodeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::TestScriptOperationCodeCode_Value TestScriptOperationCodeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TestScriptOperationCodeCode.value)
  return static_cast< ::google::fhir::stu3::proto::TestScriptOperationCodeCode_Value >(value_);
}
inline void TestScriptOperationCodeCode::set_value(::google::fhir::stu3::proto::TestScriptOperationCodeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.TestScriptOperationCodeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool TestScriptOperationCodeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& TestScriptOperationCodeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& TestScriptOperationCodeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TestScriptOperationCodeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* TestScriptOperationCodeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.TestScriptOperationCodeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* TestScriptOperationCodeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TestScriptOperationCodeCode.id)
  return id_;
}
inline void TestScriptOperationCodeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.TestScriptOperationCodeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int TestScriptOperationCodeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* TestScriptOperationCodeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TestScriptOperationCodeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
TestScriptOperationCodeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.TestScriptOperationCodeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& TestScriptOperationCodeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TestScriptOperationCodeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* TestScriptOperationCodeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.TestScriptOperationCodeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
TestScriptOperationCodeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.TestScriptOperationCodeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// TestScriptProfileDestinationTypeCode

// .google.fhir.stu3.proto.TestScriptProfileDestinationTypeCode.Value value = 1;
inline void TestScriptProfileDestinationTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::TestScriptProfileDestinationTypeCode_Value TestScriptProfileDestinationTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TestScriptProfileDestinationTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::TestScriptProfileDestinationTypeCode_Value >(value_);
}
inline void TestScriptProfileDestinationTypeCode::set_value(::google::fhir::stu3::proto::TestScriptProfileDestinationTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.TestScriptProfileDestinationTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool TestScriptProfileDestinationTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& TestScriptProfileDestinationTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& TestScriptProfileDestinationTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TestScriptProfileDestinationTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* TestScriptProfileDestinationTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.TestScriptProfileDestinationTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* TestScriptProfileDestinationTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TestScriptProfileDestinationTypeCode.id)
  return id_;
}
inline void TestScriptProfileDestinationTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.TestScriptProfileDestinationTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int TestScriptProfileDestinationTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* TestScriptProfileDestinationTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TestScriptProfileDestinationTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
TestScriptProfileDestinationTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.TestScriptProfileDestinationTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& TestScriptProfileDestinationTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TestScriptProfileDestinationTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* TestScriptProfileDestinationTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.TestScriptProfileDestinationTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
TestScriptProfileDestinationTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.TestScriptProfileDestinationTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// TestScriptProfileOriginTypeCode

// .google.fhir.stu3.proto.TestScriptProfileOriginTypeCode.Value value = 1;
inline void TestScriptProfileOriginTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::TestScriptProfileOriginTypeCode_Value TestScriptProfileOriginTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TestScriptProfileOriginTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::TestScriptProfileOriginTypeCode_Value >(value_);
}
inline void TestScriptProfileOriginTypeCode::set_value(::google::fhir::stu3::proto::TestScriptProfileOriginTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.TestScriptProfileOriginTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool TestScriptProfileOriginTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& TestScriptProfileOriginTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& TestScriptProfileOriginTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TestScriptProfileOriginTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* TestScriptProfileOriginTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.TestScriptProfileOriginTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* TestScriptProfileOriginTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TestScriptProfileOriginTypeCode.id)
  return id_;
}
inline void TestScriptProfileOriginTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.TestScriptProfileOriginTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int TestScriptProfileOriginTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* TestScriptProfileOriginTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TestScriptProfileOriginTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
TestScriptProfileOriginTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.TestScriptProfileOriginTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& TestScriptProfileOriginTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TestScriptProfileOriginTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* TestScriptProfileOriginTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.TestScriptProfileOriginTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
TestScriptProfileOriginTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.TestScriptProfileOriginTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// TransactionModeCode

// .google.fhir.stu3.proto.TransactionModeCode.Value value = 1;
inline void TransactionModeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::TransactionModeCode_Value TransactionModeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TransactionModeCode.value)
  return static_cast< ::google::fhir::stu3::proto::TransactionModeCode_Value >(value_);
}
inline void TransactionModeCode::set_value(::google::fhir::stu3::proto::TransactionModeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.TransactionModeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool TransactionModeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& TransactionModeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& TransactionModeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TransactionModeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* TransactionModeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.TransactionModeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* TransactionModeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TransactionModeCode.id)
  return id_;
}
inline void TransactionModeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.TransactionModeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int TransactionModeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* TransactionModeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TransactionModeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
TransactionModeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.TransactionModeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& TransactionModeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TransactionModeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* TransactionModeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.TransactionModeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
TransactionModeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.TransactionModeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// TypeDerivationRuleCode

// .google.fhir.stu3.proto.TypeDerivationRuleCode.Value value = 1;
inline void TypeDerivationRuleCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::TypeDerivationRuleCode_Value TypeDerivationRuleCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TypeDerivationRuleCode.value)
  return static_cast< ::google::fhir::stu3::proto::TypeDerivationRuleCode_Value >(value_);
}
inline void TypeDerivationRuleCode::set_value(::google::fhir::stu3::proto::TypeDerivationRuleCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.TypeDerivationRuleCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool TypeDerivationRuleCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& TypeDerivationRuleCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& TypeDerivationRuleCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TypeDerivationRuleCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* TypeDerivationRuleCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.TypeDerivationRuleCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* TypeDerivationRuleCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TypeDerivationRuleCode.id)
  return id_;
}
inline void TypeDerivationRuleCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.TypeDerivationRuleCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int TypeDerivationRuleCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* TypeDerivationRuleCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TypeDerivationRuleCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
TypeDerivationRuleCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.TypeDerivationRuleCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& TypeDerivationRuleCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TypeDerivationRuleCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* TypeDerivationRuleCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.TypeDerivationRuleCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
TypeDerivationRuleCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.TypeDerivationRuleCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// TypeRestfulInteractionCode

// .google.fhir.stu3.proto.TypeRestfulInteractionCode.Value value = 1;
inline void TypeRestfulInteractionCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::TypeRestfulInteractionCode_Value TypeRestfulInteractionCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TypeRestfulInteractionCode.value)
  return static_cast< ::google::fhir::stu3::proto::TypeRestfulInteractionCode_Value >(value_);
}
inline void TypeRestfulInteractionCode::set_value(::google::fhir::stu3::proto::TypeRestfulInteractionCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.TypeRestfulInteractionCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool TypeRestfulInteractionCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& TypeRestfulInteractionCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& TypeRestfulInteractionCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TypeRestfulInteractionCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* TypeRestfulInteractionCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.TypeRestfulInteractionCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* TypeRestfulInteractionCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TypeRestfulInteractionCode.id)
  return id_;
}
inline void TypeRestfulInteractionCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.TypeRestfulInteractionCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int TypeRestfulInteractionCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* TypeRestfulInteractionCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TypeRestfulInteractionCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
TypeRestfulInteractionCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.TypeRestfulInteractionCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& TypeRestfulInteractionCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TypeRestfulInteractionCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* TypeRestfulInteractionCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.TypeRestfulInteractionCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
TypeRestfulInteractionCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.TypeRestfulInteractionCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// UDIEntryTypeCode

// .google.fhir.stu3.proto.UDIEntryTypeCode.Value value = 1;
inline void UDIEntryTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::UDIEntryTypeCode_Value UDIEntryTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.UDIEntryTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::UDIEntryTypeCode_Value >(value_);
}
inline void UDIEntryTypeCode::set_value(::google::fhir::stu3::proto::UDIEntryTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.UDIEntryTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool UDIEntryTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UDIEntryTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UDIEntryTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.UDIEntryTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UDIEntryTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.UDIEntryTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UDIEntryTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.UDIEntryTypeCode.id)
  return id_;
}
inline void UDIEntryTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.UDIEntryTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int UDIEntryTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UDIEntryTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.UDIEntryTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UDIEntryTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.UDIEntryTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UDIEntryTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.UDIEntryTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UDIEntryTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.UDIEntryTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UDIEntryTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.UDIEntryTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// UnknownContentCodeCode

// .google.fhir.stu3.proto.UnknownContentCodeCode.Value value = 1;
inline void UnknownContentCodeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::UnknownContentCodeCode_Value UnknownContentCodeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.UnknownContentCodeCode.value)
  return static_cast< ::google::fhir::stu3::proto::UnknownContentCodeCode_Value >(value_);
}
inline void UnknownContentCodeCode::set_value(::google::fhir::stu3::proto::UnknownContentCodeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.UnknownContentCodeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool UnknownContentCodeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UnknownContentCodeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UnknownContentCodeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.UnknownContentCodeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UnknownContentCodeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.UnknownContentCodeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UnknownContentCodeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.UnknownContentCodeCode.id)
  return id_;
}
inline void UnknownContentCodeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.UnknownContentCodeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int UnknownContentCodeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UnknownContentCodeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.UnknownContentCodeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UnknownContentCodeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.UnknownContentCodeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UnknownContentCodeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.UnknownContentCodeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UnknownContentCodeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.UnknownContentCodeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UnknownContentCodeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.UnknownContentCodeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// UsageContextTypeCode

// .google.fhir.stu3.proto.UsageContextTypeCode.Value value = 1;
inline void UsageContextTypeCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::UsageContextTypeCode_Value UsageContextTypeCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.UsageContextTypeCode.value)
  return static_cast< ::google::fhir::stu3::proto::UsageContextTypeCode_Value >(value_);
}
inline void UsageContextTypeCode::set_value(::google::fhir::stu3::proto::UsageContextTypeCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.UsageContextTypeCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool UsageContextTypeCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsageContextTypeCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsageContextTypeCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.UsageContextTypeCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsageContextTypeCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.UsageContextTypeCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsageContextTypeCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.UsageContextTypeCode.id)
  return id_;
}
inline void UsageContextTypeCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.UsageContextTypeCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int UsageContextTypeCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsageContextTypeCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.UsageContextTypeCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsageContextTypeCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.UsageContextTypeCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsageContextTypeCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.UsageContextTypeCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsageContextTypeCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.UsageContextTypeCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsageContextTypeCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.UsageContextTypeCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ConfidentialityClassificationCode

// .google.fhir.stu3.proto.ConfidentialityClassificationCode.Value value = 1;
inline void ConfidentialityClassificationCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ConfidentialityClassificationCode_Value ConfidentialityClassificationCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConfidentialityClassificationCode.value)
  return static_cast< ::google::fhir::stu3::proto::ConfidentialityClassificationCode_Value >(value_);
}
inline void ConfidentialityClassificationCode::set_value(::google::fhir::stu3::proto::ConfidentialityClassificationCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ConfidentialityClassificationCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ConfidentialityClassificationCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ConfidentialityClassificationCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ConfidentialityClassificationCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConfidentialityClassificationCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ConfidentialityClassificationCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ConfidentialityClassificationCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ConfidentialityClassificationCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ConfidentialityClassificationCode.id)
  return id_;
}
inline void ConfidentialityClassificationCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ConfidentialityClassificationCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ConfidentialityClassificationCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ConfidentialityClassificationCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ConfidentialityClassificationCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ConfidentialityClassificationCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ConfidentialityClassificationCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ConfidentialityClassificationCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ConfidentialityClassificationCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ConfidentialityClassificationCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ConfidentialityClassificationCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ConfidentialityClassificationCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ConfidentialityClassificationCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// VaccinationProtocolDoseStatuscodesCode

// .google.fhir.stu3.proto.VaccinationProtocolDoseStatuscodesCode.Value value = 1;
inline void VaccinationProtocolDoseStatuscodesCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::VaccinationProtocolDoseStatuscodesCode_Value VaccinationProtocolDoseStatuscodesCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.VaccinationProtocolDoseStatuscodesCode.value)
  return static_cast< ::google::fhir::stu3::proto::VaccinationProtocolDoseStatuscodesCode_Value >(value_);
}
inline void VaccinationProtocolDoseStatuscodesCode::set_value(::google::fhir::stu3::proto::VaccinationProtocolDoseStatuscodesCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.VaccinationProtocolDoseStatuscodesCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool VaccinationProtocolDoseStatuscodesCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& VaccinationProtocolDoseStatuscodesCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& VaccinationProtocolDoseStatuscodesCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.VaccinationProtocolDoseStatuscodesCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* VaccinationProtocolDoseStatuscodesCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.VaccinationProtocolDoseStatuscodesCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* VaccinationProtocolDoseStatuscodesCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.VaccinationProtocolDoseStatuscodesCode.id)
  return id_;
}
inline void VaccinationProtocolDoseStatuscodesCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.VaccinationProtocolDoseStatuscodesCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int VaccinationProtocolDoseStatuscodesCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* VaccinationProtocolDoseStatuscodesCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.VaccinationProtocolDoseStatuscodesCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
VaccinationProtocolDoseStatuscodesCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.VaccinationProtocolDoseStatuscodesCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& VaccinationProtocolDoseStatuscodesCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.VaccinationProtocolDoseStatuscodesCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* VaccinationProtocolDoseStatuscodesCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.VaccinationProtocolDoseStatuscodesCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
VaccinationProtocolDoseStatuscodesCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.VaccinationProtocolDoseStatuscodesCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// VaccinationProtocolDoseStatusReasoncodesCode

// .google.fhir.stu3.proto.VaccinationProtocolDoseStatusReasoncodesCode.Value value = 1;
inline void VaccinationProtocolDoseStatusReasoncodesCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::VaccinationProtocolDoseStatusReasoncodesCode_Value VaccinationProtocolDoseStatusReasoncodesCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.VaccinationProtocolDoseStatusReasoncodesCode.value)
  return static_cast< ::google::fhir::stu3::proto::VaccinationProtocolDoseStatusReasoncodesCode_Value >(value_);
}
inline void VaccinationProtocolDoseStatusReasoncodesCode::set_value(::google::fhir::stu3::proto::VaccinationProtocolDoseStatusReasoncodesCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.VaccinationProtocolDoseStatusReasoncodesCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool VaccinationProtocolDoseStatusReasoncodesCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& VaccinationProtocolDoseStatusReasoncodesCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& VaccinationProtocolDoseStatusReasoncodesCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.VaccinationProtocolDoseStatusReasoncodesCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* VaccinationProtocolDoseStatusReasoncodesCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.VaccinationProtocolDoseStatusReasoncodesCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* VaccinationProtocolDoseStatusReasoncodesCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.VaccinationProtocolDoseStatusReasoncodesCode.id)
  return id_;
}
inline void VaccinationProtocolDoseStatusReasoncodesCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.VaccinationProtocolDoseStatusReasoncodesCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int VaccinationProtocolDoseStatusReasoncodesCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* VaccinationProtocolDoseStatusReasoncodesCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.VaccinationProtocolDoseStatusReasoncodesCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
VaccinationProtocolDoseStatusReasoncodesCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.VaccinationProtocolDoseStatusReasoncodesCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& VaccinationProtocolDoseStatusReasoncodesCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.VaccinationProtocolDoseStatusReasoncodesCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* VaccinationProtocolDoseStatusReasoncodesCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.VaccinationProtocolDoseStatusReasoncodesCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
VaccinationProtocolDoseStatusReasoncodesCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.VaccinationProtocolDoseStatusReasoncodesCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// sequenceStatusCode

// .google.fhir.stu3.proto.sequenceStatusCode.Value value = 1;
inline void sequenceStatusCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::sequenceStatusCode_Value sequenceStatusCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.sequenceStatusCode.value)
  return static_cast< ::google::fhir::stu3::proto::sequenceStatusCode_Value >(value_);
}
inline void sequenceStatusCode::set_value(::google::fhir::stu3::proto::sequenceStatusCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.sequenceStatusCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool sequenceStatusCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& sequenceStatusCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& sequenceStatusCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.sequenceStatusCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* sequenceStatusCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.sequenceStatusCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* sequenceStatusCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.sequenceStatusCode.id)
  return id_;
}
inline void sequenceStatusCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.sequenceStatusCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int sequenceStatusCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* sequenceStatusCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.sequenceStatusCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
sequenceStatusCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.sequenceStatusCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& sequenceStatusCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.sequenceStatusCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* sequenceStatusCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.sequenceStatusCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
sequenceStatusCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.sequenceStatusCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ResourceVersionPolicyCode

// .google.fhir.stu3.proto.ResourceVersionPolicyCode.Value value = 1;
inline void ResourceVersionPolicyCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::ResourceVersionPolicyCode_Value ResourceVersionPolicyCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ResourceVersionPolicyCode.value)
  return static_cast< ::google::fhir::stu3::proto::ResourceVersionPolicyCode_Value >(value_);
}
inline void ResourceVersionPolicyCode::set_value(::google::fhir::stu3::proto::ResourceVersionPolicyCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ResourceVersionPolicyCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool ResourceVersionPolicyCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ResourceVersionPolicyCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ResourceVersionPolicyCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ResourceVersionPolicyCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ResourceVersionPolicyCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ResourceVersionPolicyCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ResourceVersionPolicyCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ResourceVersionPolicyCode.id)
  return id_;
}
inline void ResourceVersionPolicyCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ResourceVersionPolicyCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int ResourceVersionPolicyCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ResourceVersionPolicyCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ResourceVersionPolicyCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ResourceVersionPolicyCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ResourceVersionPolicyCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ResourceVersionPolicyCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ResourceVersionPolicyCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ResourceVersionPolicyCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ResourceVersionPolicyCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ResourceVersionPolicyCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ResourceVersionPolicyCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// VisionBaseCode

// .google.fhir.stu3.proto.VisionBaseCode.Value value = 1;
inline void VisionBaseCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::VisionBaseCode_Value VisionBaseCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.VisionBaseCode.value)
  return static_cast< ::google::fhir::stu3::proto::VisionBaseCode_Value >(value_);
}
inline void VisionBaseCode::set_value(::google::fhir::stu3::proto::VisionBaseCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.VisionBaseCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool VisionBaseCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& VisionBaseCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& VisionBaseCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.VisionBaseCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* VisionBaseCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.VisionBaseCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* VisionBaseCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.VisionBaseCode.id)
  return id_;
}
inline void VisionBaseCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.VisionBaseCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int VisionBaseCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* VisionBaseCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.VisionBaseCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
VisionBaseCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.VisionBaseCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& VisionBaseCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.VisionBaseCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* VisionBaseCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.VisionBaseCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
VisionBaseCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.VisionBaseCode.extension)
  return extension_;
}

// -------------------------------------------------------------------

// VisionEyesCode

// .google.fhir.stu3.proto.VisionEyesCode.Value value = 1;
inline void VisionEyesCode::clear_value() {
  value_ = 0;
}
inline ::google::fhir::stu3::proto::VisionEyesCode_Value VisionEyesCode::value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.VisionEyesCode.value)
  return static_cast< ::google::fhir::stu3::proto::VisionEyesCode_Value >(value_);
}
inline void VisionEyesCode::set_value(::google::fhir::stu3::proto::VisionEyesCode_Value value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.VisionEyesCode.value)
}

// .google.fhir.stu3.proto.String id = 2;
inline bool VisionEyesCode::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& VisionEyesCode::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& VisionEyesCode::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.VisionEyesCode.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* VisionEyesCode::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.VisionEyesCode.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* VisionEyesCode::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.VisionEyesCode.id)
  return id_;
}
inline void VisionEyesCode::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.VisionEyesCode.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 3;
inline int VisionEyesCode::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* VisionEyesCode::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.VisionEyesCode.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
VisionEyesCode::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.VisionEyesCode.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& VisionEyesCode::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.VisionEyesCode.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* VisionEyesCode::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.VisionEyesCode.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
VisionEyesCode::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.VisionEyesCode.extension)
  return extension_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace stu3
}  // namespace fhir
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::fhir::stu3::proto::AbstractTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::AbstractTypeCode_Value>() {
  return ::google::fhir::stu3::proto::AbstractTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::AggregationModeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::AggregationModeCode_Value>() {
  return ::google::fhir::stu3::proto::AggregationModeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::BindingStrengthCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::BindingStrengthCode_Value>() {
  return ::google::fhir::stu3::proto::BindingStrengthCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ConstraintSeverityCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ConstraintSeverityCode_Value>() {
  return ::google::fhir::stu3::proto::ConstraintSeverityCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::SlicingRulesCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::SlicingRulesCode_Value>() {
  return ::google::fhir::stu3::proto::SlicingRulesCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::DiscriminatorTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::DiscriminatorTypeCode_Value>() {
  return ::google::fhir::stu3::proto::DiscriminatorTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::PropertyRepresentationCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::PropertyRepresentationCode_Value>() {
  return ::google::fhir::stu3::proto::PropertyRepresentationCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ReferenceVersionRulesCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ReferenceVersionRulesCode_Value>() {
  return ::google::fhir::stu3::proto::ReferenceVersionRulesCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::AccountStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::AccountStatusCode_Value>() {
  return ::google::fhir::stu3::proto::AccountStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ActionCardinalityBehaviorCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ActionCardinalityBehaviorCode_Value>() {
  return ::google::fhir::stu3::proto::ActionCardinalityBehaviorCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ActionConditionKindCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ActionConditionKindCode_Value>() {
  return ::google::fhir::stu3::proto::ActionConditionKindCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ActionGroupingBehaviorCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ActionGroupingBehaviorCode_Value>() {
  return ::google::fhir::stu3::proto::ActionGroupingBehaviorCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ActionListCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ActionListCode_Value>() {
  return ::google::fhir::stu3::proto::ActionListCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ActionParticipantTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ActionParticipantTypeCode_Value>() {
  return ::google::fhir::stu3::proto::ActionParticipantTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ActionPrecheckBehaviorCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ActionPrecheckBehaviorCode_Value>() {
  return ::google::fhir::stu3::proto::ActionPrecheckBehaviorCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ActionRelationshipTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ActionRelationshipTypeCode_Value>() {
  return ::google::fhir::stu3::proto::ActionRelationshipTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ActionRequiredBehaviorCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ActionRequiredBehaviorCode_Value>() {
  return ::google::fhir::stu3::proto::ActionRequiredBehaviorCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ActionSelectionBehaviorCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ActionSelectionBehaviorCode_Value>() {
  return ::google::fhir::stu3::proto::ActionSelectionBehaviorCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ActionTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ActionTypeCode_Value>() {
  return ::google::fhir::stu3::proto::ActionTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ActivityDefinitionCategoryCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ActivityDefinitionCategoryCode_Value>() {
  return ::google::fhir::stu3::proto::ActivityDefinitionCategoryCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::AdministrativeGenderCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::AdministrativeGenderCode_Value>() {
  return ::google::fhir::stu3::proto::AdministrativeGenderCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::AdverseEventCategoryCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::AdverseEventCategoryCode_Value>() {
  return ::google::fhir::stu3::proto::AdverseEventCategoryCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::AdverseEventCausalityAssessmentCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::AdverseEventCausalityAssessmentCode_Value>() {
  return ::google::fhir::stu3::proto::AdverseEventCausalityAssessmentCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::AdverseEventCausalityCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::AdverseEventCausalityCode_Value>() {
  return ::google::fhir::stu3::proto::AdverseEventCausalityCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::AdverseEventCausalityMethodCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::AdverseEventCausalityMethodCode_Value>() {
  return ::google::fhir::stu3::proto::AdverseEventCausalityMethodCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::AdverseEventCausalityResultCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::AdverseEventCausalityResultCode_Value>() {
  return ::google::fhir::stu3::proto::AdverseEventCausalityResultCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::AdverseEventOutcomeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::AdverseEventOutcomeCode_Value>() {
  return ::google::fhir::stu3::proto::AdverseEventOutcomeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::AdverseEventSeriousnessCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::AdverseEventSeriousnessCode_Value>() {
  return ::google::fhir::stu3::proto::AdverseEventSeriousnessCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::AllergyIntoleranceSubstanceExposureRiskCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::AllergyIntoleranceSubstanceExposureRiskCode_Value>() {
  return ::google::fhir::stu3::proto::AllergyIntoleranceSubstanceExposureRiskCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::AllergyIntoleranceClinicalStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::AllergyIntoleranceClinicalStatusCode_Value>() {
  return ::google::fhir::stu3::proto::AllergyIntoleranceClinicalStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::AllergyIntoleranceCategoryCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::AllergyIntoleranceCategoryCode_Value>() {
  return ::google::fhir::stu3::proto::AllergyIntoleranceCategoryCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::AllergyIntoleranceCriticalityCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::AllergyIntoleranceCriticalityCode_Value>() {
  return ::google::fhir::stu3::proto::AllergyIntoleranceCriticalityCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::AllergyIntoleranceTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::AllergyIntoleranceTypeCode_Value>() {
  return ::google::fhir::stu3::proto::AllergyIntoleranceTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::AllergyIntoleranceVerificationStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::AllergyIntoleranceVerificationStatusCode_Value>() {
  return ::google::fhir::stu3::proto::AllergyIntoleranceVerificationStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::GenderStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::GenderStatusCode_Value>() {
  return ::google::fhir::stu3::proto::GenderStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::AppointmentStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::AppointmentStatusCode_Value>() {
  return ::google::fhir::stu3::proto::AppointmentStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::AssertionDirectionTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::AssertionDirectionTypeCode_Value>() {
  return ::google::fhir::stu3::proto::AssertionDirectionTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::AssertionOperatorTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::AssertionOperatorTypeCode_Value>() {
  return ::google::fhir::stu3::proto::AssertionOperatorTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::AssertionResponseTypesCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::AssertionResponseTypesCode_Value>() {
  return ::google::fhir::stu3::proto::AssertionResponseTypesCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::AuditEventActionCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::AuditEventActionCode_Value>() {
  return ::google::fhir::stu3::proto::AuditEventActionCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::AuditEventOutcomeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::AuditEventOutcomeCode_Value>() {
  return ::google::fhir::stu3::proto::AuditEventOutcomeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::BasicResourceTypesCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::BasicResourceTypesCode_Value>() {
  return ::google::fhir::stu3::proto::BasicResourceTypesCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::BundleTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::BundleTypeCode_Value>() {
  return ::google::fhir::stu3::proto::BundleTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::CapabilityStatementKindCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::CapabilityStatementKindCode_Value>() {
  return ::google::fhir::stu3::proto::CapabilityStatementKindCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::CarePlanActivityCategoryCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::CarePlanActivityCategoryCode_Value>() {
  return ::google::fhir::stu3::proto::CarePlanActivityCategoryCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::CarePlanActivityStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::CarePlanActivityStatusCode_Value>() {
  return ::google::fhir::stu3::proto::CarePlanActivityStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::CarePlanIntentCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::CarePlanIntentCode_Value>() {
  return ::google::fhir::stu3::proto::CarePlanIntentCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::CarePlanStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::CarePlanStatusCode_Value>() {
  return ::google::fhir::stu3::proto::CarePlanStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::CareTeamCategoryCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::CareTeamCategoryCode_Value>() {
  return ::google::fhir::stu3::proto::CareTeamCategoryCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::CareTeamStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::CareTeamStatusCode_Value>() {
  return ::google::fhir::stu3::proto::CareTeamStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ChargeItemStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ChargeItemStatusCode_Value>() {
  return ::google::fhir::stu3::proto::ChargeItemStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ChoiceListOrientationCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ChoiceListOrientationCode_Value>() {
  return ::google::fhir::stu3::proto::ChoiceListOrientationCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::UseCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::UseCode_Value>() {
  return ::google::fhir::stu3::proto::UseCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ClassificationOrContextCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ClassificationOrContextCode_Value>() {
  return ::google::fhir::stu3::proto::ClassificationOrContextCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ClinicalImpressionStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ClinicalImpressionStatusCode_Value>() {
  return ::google::fhir::stu3::proto::ClinicalImpressionStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::CodeSystemContentModeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::CodeSystemContentModeCode_Value>() {
  return ::google::fhir::stu3::proto::CodeSystemContentModeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::CodeSystemHierarchyMeaningCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::CodeSystemHierarchyMeaningCode_Value>() {
  return ::google::fhir::stu3::proto::CodeSystemHierarchyMeaningCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::CommonTagsCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::CommonTagsCode_Value>() {
  return ::google::fhir::stu3::proto::CommonTagsCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::CommunicationCategoryCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::CommunicationCategoryCode_Value>() {
  return ::google::fhir::stu3::proto::CommunicationCategoryCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::CommunicationNotDoneReasonCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::CommunicationNotDoneReasonCode_Value>() {
  return ::google::fhir::stu3::proto::CommunicationNotDoneReasonCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::CompartmentTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::CompartmentTypeCode_Value>() {
  return ::google::fhir::stu3::proto::CompartmentTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::CompositeMeasureScoringCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::CompositeMeasureScoringCode_Value>() {
  return ::google::fhir::stu3::proto::CompositeMeasureScoringCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::CompositionAttestationModeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::CompositionAttestationModeCode_Value>() {
  return ::google::fhir::stu3::proto::CompositionAttestationModeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::CompositionStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::CompositionStatusCode_Value>() {
  return ::google::fhir::stu3::proto::CompositionStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ConceptMapEquivalenceCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ConceptMapEquivalenceCode_Value>() {
  return ::google::fhir::stu3::proto::ConceptMapEquivalenceCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ConceptMapGroupUnmappedModeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ConceptMapGroupUnmappedModeCode_Value>() {
  return ::google::fhir::stu3::proto::ConceptMapGroupUnmappedModeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::PropertyTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::PropertyTypeCode_Value>() {
  return ::google::fhir::stu3::proto::PropertyTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ConditionalDeleteStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ConditionalDeleteStatusCode_Value>() {
  return ::google::fhir::stu3::proto::ConditionalDeleteStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ConditionalReadStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ConditionalReadStatusCode_Value>() {
  return ::google::fhir::stu3::proto::ConditionalReadStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ConditionCategoryCodesCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ConditionCategoryCodesCode_Value>() {
  return ::google::fhir::stu3::proto::ConditionCategoryCodesCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ConditionClinicalStatusCodesCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ConditionClinicalStatusCodesCode_Value>() {
  return ::google::fhir::stu3::proto::ConditionClinicalStatusCodesCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ConditionStateCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ConditionStateCode_Value>() {
  return ::google::fhir::stu3::proto::ConditionStateCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ConditionVerificationStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ConditionVerificationStatusCode_Value>() {
  return ::google::fhir::stu3::proto::ConditionVerificationStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ConformanceExpectationCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ConformanceExpectationCode_Value>() {
  return ::google::fhir::stu3::proto::ConformanceExpectationCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ConsentDataMeaningCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ConsentDataMeaningCode_Value>() {
  return ::google::fhir::stu3::proto::ConsentDataMeaningCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ConsentExceptTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ConsentExceptTypeCode_Value>() {
  return ::google::fhir::stu3::proto::ConsentExceptTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ConsentStateCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ConsentStateCode_Value>() {
  return ::google::fhir::stu3::proto::ConsentStateCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ContactEntityTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ContactEntityTypeCode_Value>() {
  return ::google::fhir::stu3::proto::ContactEntityTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ContentTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ContentTypeCode_Value>() {
  return ::google::fhir::stu3::proto::ContentTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ContractResourceStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ContractResourceStatusCode_Value>() {
  return ::google::fhir::stu3::proto::ContractResourceStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ContributorTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ContributorTypeCode_Value>() {
  return ::google::fhir::stu3::proto::ContributorTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::CopyNumberEventCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::CopyNumberEventCode_Value>() {
  return ::google::fhir::stu3::proto::CopyNumberEventCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::DataAbsentReasonCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::DataAbsentReasonCode_Value>() {
  return ::google::fhir::stu3::proto::DataAbsentReasonCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::DataElementStringencyCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::DataElementStringencyCode_Value>() {
  return ::google::fhir::stu3::proto::DataElementStringencyCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::TriggerTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::TriggerTypeCode_Value>() {
  return ::google::fhir::stu3::proto::TriggerTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::DataTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::DataTypeCode_Value>() {
  return ::google::fhir::stu3::proto::DataTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::FHIRAllTypesCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::FHIRAllTypesCode_Value>() {
  return ::google::fhir::stu3::proto::FHIRAllTypesCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::FHIRDefinedTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::FHIRDefinedTypeCode_Value>() {
  return ::google::fhir::stu3::proto::FHIRDefinedTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::DefinitionStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::DefinitionStatusCode_Value>() {
  return ::google::fhir::stu3::proto::DefinitionStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::DefinitionTopicCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::DefinitionTopicCode_Value>() {
  return ::google::fhir::stu3::proto::DefinitionTopicCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::DetectedIssueSeverityCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::DetectedIssueSeverityCode_Value>() {
  return ::google::fhir::stu3::proto::DetectedIssueSeverityCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::DeviceUseStatementStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::DeviceUseStatementStatusCode_Value>() {
  return ::google::fhir::stu3::proto::DeviceUseStatementStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::FHIRDeviceStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::FHIRDeviceStatusCode_Value>() {
  return ::google::fhir::stu3::proto::FHIRDeviceStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::DiagnosisRoleCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::DiagnosisRoleCode_Value>() {
  return ::google::fhir::stu3::proto::DiagnosisRoleCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::DiagnosticReportStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::DiagnosticReportStatusCode_Value>() {
  return ::google::fhir::stu3::proto::DiagnosticReportStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::DigitalMediaTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::DigitalMediaTypeCode_Value>() {
  return ::google::fhir::stu3::proto::DigitalMediaTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::DocumentModeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::DocumentModeCode_Value>() {
  return ::google::fhir::stu3::proto::DocumentModeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::DocumentReferenceStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::DocumentReferenceStatusCode_Value>() {
  return ::google::fhir::stu3::proto::DocumentReferenceStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::DocumentRelationshipTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::DocumentRelationshipTypeCode_Value>() {
  return ::google::fhir::stu3::proto::DocumentRelationshipTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::AdmitSourceCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::AdmitSourceCode_Value>() {
  return ::google::fhir::stu3::proto::AdmitSourceCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::DietCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::DietCode_Value>() {
  return ::google::fhir::stu3::proto::DietCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::DischargeDispositionCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::DischargeDispositionCode_Value>() {
  return ::google::fhir::stu3::proto::DischargeDispositionCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::EncounterLocationStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::EncounterLocationStatusCode_Value>() {
  return ::google::fhir::stu3::proto::EncounterLocationStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::SpecialArrangementsCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::SpecialArrangementsCode_Value>() {
  return ::google::fhir::stu3::proto::SpecialArrangementsCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::EncounterStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::EncounterStatusCode_Value>() {
  return ::google::fhir::stu3::proto::EncounterStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::EncounterTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::EncounterTypeCode_Value>() {
  return ::google::fhir::stu3::proto::EncounterTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::EndpointStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::EndpointStatusCode_Value>() {
  return ::google::fhir::stu3::proto::EndpointStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::EntityNamePartQualifierCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::EntityNamePartQualifierCode_Value>() {
  return ::google::fhir::stu3::proto::EntityNamePartQualifierCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::EnteralFormulaAdditiveTypeCodeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::EnteralFormulaAdditiveTypeCodeCode_Value>() {
  return ::google::fhir::stu3::proto::EnteralFormulaAdditiveTypeCodeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::EpisodeOfCareStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::EpisodeOfCareStatusCode_Value>() {
  return ::google::fhir::stu3::proto::EpisodeOfCareStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::EpisodeOfCareTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::EpisodeOfCareTypeCode_Value>() {
  return ::google::fhir::stu3::proto::EpisodeOfCareTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::EventCapabilityModeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::EventCapabilityModeCode_Value>() {
  return ::google::fhir::stu3::proto::EventCapabilityModeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::EventStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::EventStatusCode_Value>() {
  return ::google::fhir::stu3::proto::EventStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ClaimPayeeResourceTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ClaimPayeeResourceTypeCode_Value>() {
  return ::google::fhir::stu3::proto::ClaimPayeeResourceTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ExplanationOfBenefitStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ExplanationOfBenefitStatusCode_Value>() {
  return ::google::fhir::stu3::proto::ExplanationOfBenefitStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ExtensionContextCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ExtensionContextCode_Value>() {
  return ::google::fhir::stu3::proto::ExtensionContextCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::FilterOperatorCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::FilterOperatorCode_Value>() {
  return ::google::fhir::stu3::proto::FilterOperatorCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::FlagCategoryCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::FlagCategoryCode_Value>() {
  return ::google::fhir::stu3::proto::FlagCategoryCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::FlagPriorityCodesCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::FlagPriorityCodesCode_Value>() {
  return ::google::fhir::stu3::proto::FlagPriorityCodesCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::FlagStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::FlagStatusCode_Value>() {
  return ::google::fhir::stu3::proto::FlagStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::FinancialResourceStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::FinancialResourceStatusCode_Value>() {
  return ::google::fhir::stu3::proto::FinancialResourceStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::GoalAcceptanceStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::GoalAcceptanceStatusCode_Value>() {
  return ::google::fhir::stu3::proto::GoalAcceptanceStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::GoalCategoryCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::GoalCategoryCode_Value>() {
  return ::google::fhir::stu3::proto::GoalCategoryCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::GoalPriorityCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::GoalPriorityCode_Value>() {
  return ::google::fhir::stu3::proto::GoalPriorityCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::GoalRelationshipTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::GoalRelationshipTypeCode_Value>() {
  return ::google::fhir::stu3::proto::GoalRelationshipTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::GoalStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::GoalStatusCode_Value>() {
  return ::google::fhir::stu3::proto::GoalStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::GoalStatusReasonCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::GoalStatusReasonCode_Value>() {
  return ::google::fhir::stu3::proto::GoalStatusReasonCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::GraphCompartmentRuleCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::GraphCompartmentRuleCode_Value>() {
  return ::google::fhir::stu3::proto::GraphCompartmentRuleCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::GroupTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::GroupTypeCode_Value>() {
  return ::google::fhir::stu3::proto::GroupTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::GuidanceResponseStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::GuidanceResponseStatusCode_Value>() {
  return ::google::fhir::stu3::proto::GuidanceResponseStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::GuideDependencyTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::GuideDependencyTypeCode_Value>() {
  return ::google::fhir::stu3::proto::GuideDependencyTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::GuidePageKindCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::GuidePageKindCode_Value>() {
  return ::google::fhir::stu3::proto::GuidePageKindCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::FamilyHistoryNotDoneReasonCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::FamilyHistoryNotDoneReasonCode_Value>() {
  return ::google::fhir::stu3::proto::FamilyHistoryNotDoneReasonCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::FamilyHistoryStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::FamilyHistoryStatusCode_Value>() {
  return ::google::fhir::stu3::proto::FamilyHistoryStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::HL7WorkgroupCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::HL7WorkgroupCode_Value>() {
  return ::google::fhir::stu3::proto::HL7WorkgroupCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::TestScriptRequestMethodCodeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::TestScriptRequestMethodCodeCode_Value>() {
  return ::google::fhir::stu3::proto::TestScriptRequestMethodCodeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::HTTPVerbCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::HTTPVerbCode_Value>() {
  return ::google::fhir::stu3::proto::HTTPVerbCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::IdentityAssuranceLevelCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::IdentityAssuranceLevelCode_Value>() {
  return ::google::fhir::stu3::proto::IdentityAssuranceLevelCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ImmunizationOriginCodesCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ImmunizationOriginCodesCode_Value>() {
  return ::google::fhir::stu3::proto::ImmunizationOriginCodesCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ImmunizationRecommendationDateCriterionCodesCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ImmunizationRecommendationDateCriterionCodesCode_Value>() {
  return ::google::fhir::stu3::proto::ImmunizationRecommendationDateCriterionCodesCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ImmunizationRecommendationStatusCodesCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ImmunizationRecommendationStatusCodesCode_Value>() {
  return ::google::fhir::stu3::proto::ImmunizationRecommendationStatusCodesCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ImmunizationStatusCodesCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ImmunizationStatusCodesCode_Value>() {
  return ::google::fhir::stu3::proto::ImmunizationStatusCodesCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ImplantStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ImplantStatusCode_Value>() {
  return ::google::fhir::stu3::proto::ImplantStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::InstanceAvailabilityCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::InstanceAvailabilityCode_Value>() {
  return ::google::fhir::stu3::proto::InstanceAvailabilityCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::IssueSeverityCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::IssueSeverityCode_Value>() {
  return ::google::fhir::stu3::proto::IssueSeverityCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::IssueTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::IssueTypeCode_Value>() {
  return ::google::fhir::stu3::proto::IssueTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::QuestionnaireItemTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::QuestionnaireItemTypeCode_Value>() {
  return ::google::fhir::stu3::proto::QuestionnaireItemTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::LibraryTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::LibraryTypeCode_Value>() {
  return ::google::fhir::stu3::proto::LibraryTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::LinkageTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::LinkageTypeCode_Value>() {
  return ::google::fhir::stu3::proto::LinkageTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::LinkTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::LinkTypeCode_Value>() {
  return ::google::fhir::stu3::proto::LinkTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ListEmptyReasonsCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ListEmptyReasonsCode_Value>() {
  return ::google::fhir::stu3::proto::ListEmptyReasonsCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ExampleUseCodesforListCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ExampleUseCodesforListCode_Value>() {
  return ::google::fhir::stu3::proto::ExampleUseCodesforListCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ListModeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ListModeCode_Value>() {
  return ::google::fhir::stu3::proto::ListModeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ListOrderCodesCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ListOrderCodesCode_Value>() {
  return ::google::fhir::stu3::proto::ListOrderCodesCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ListStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ListStatusCode_Value>() {
  return ::google::fhir::stu3::proto::ListStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::LocationModeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::LocationModeCode_Value>() {
  return ::google::fhir::stu3::proto::LocationModeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::LocationTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::LocationTypeCode_Value>() {
  return ::google::fhir::stu3::proto::LocationTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::LocationStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::LocationStatusCode_Value>() {
  return ::google::fhir::stu3::proto::LocationStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ProbabilityDistributionTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ProbabilityDistributionTypeCode_Value>() {
  return ::google::fhir::stu3::proto::ProbabilityDistributionTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::StructureMapContextTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::StructureMapContextTypeCode_Value>() {
  return ::google::fhir::stu3::proto::StructureMapContextTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::StructureMapGroupTypeModeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::StructureMapGroupTypeModeCode_Value>() {
  return ::google::fhir::stu3::proto::StructureMapGroupTypeModeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::StructureMapInputModeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::StructureMapInputModeCode_Value>() {
  return ::google::fhir::stu3::proto::StructureMapInputModeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::StructureMapModelModeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::StructureMapModelModeCode_Value>() {
  return ::google::fhir::stu3::proto::StructureMapModelModeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::StructureMapSourceListModeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::StructureMapSourceListModeCode_Value>() {
  return ::google::fhir::stu3::proto::StructureMapSourceListModeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::StructureMapTargetListModeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::StructureMapTargetListModeCode_Value>() {
  return ::google::fhir::stu3::proto::StructureMapTargetListModeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::StructureMapTransformCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::StructureMapTransformCode_Value>() {
  return ::google::fhir::stu3::proto::StructureMapTransformCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::MatchGradeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::MatchGradeCode_Value>() {
  return ::google::fhir::stu3::proto::MatchGradeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::MeasureDataUsageCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::MeasureDataUsageCode_Value>() {
  return ::google::fhir::stu3::proto::MeasureDataUsageCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::MeasmntPrincipleCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::MeasmntPrincipleCode_Value>() {
  return ::google::fhir::stu3::proto::MeasmntPrincipleCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::MeasurePopulationTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::MeasurePopulationTypeCode_Value>() {
  return ::google::fhir::stu3::proto::MeasurePopulationTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::MeasureReportStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::MeasureReportStatusCode_Value>() {
  return ::google::fhir::stu3::proto::MeasureReportStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::MeasureReportTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::MeasureReportTypeCode_Value>() {
  return ::google::fhir::stu3::proto::MeasureReportTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::MeasureScoringCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::MeasureScoringCode_Value>() {
  return ::google::fhir::stu3::proto::MeasureScoringCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::MeasureTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::MeasureTypeCode_Value>() {
  return ::google::fhir::stu3::proto::MeasureTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::MedicationAdministrationCategoryCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::MedicationAdministrationCategoryCode_Value>() {
  return ::google::fhir::stu3::proto::MedicationAdministrationCategoryCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::MedicationAdministrationStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::MedicationAdministrationStatusCode_Value>() {
  return ::google::fhir::stu3::proto::MedicationAdministrationStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::MedicationDispenseCategoryCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::MedicationDispenseCategoryCode_Value>() {
  return ::google::fhir::stu3::proto::MedicationDispenseCategoryCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::MedicationDispenseStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::MedicationDispenseStatusCode_Value>() {
  return ::google::fhir::stu3::proto::MedicationDispenseStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::MedicationContainerCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::MedicationContainerCode_Value>() {
  return ::google::fhir::stu3::proto::MedicationContainerCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::MedicationRequestCategoryCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::MedicationRequestCategoryCode_Value>() {
  return ::google::fhir::stu3::proto::MedicationRequestCategoryCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::MedicationRequestIntentCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::MedicationRequestIntentCode_Value>() {
  return ::google::fhir::stu3::proto::MedicationRequestIntentCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::MedicationRequestPriorityCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::MedicationRequestPriorityCode_Value>() {
  return ::google::fhir::stu3::proto::MedicationRequestPriorityCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::MedicationRequestStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::MedicationRequestStatusCode_Value>() {
  return ::google::fhir::stu3::proto::MedicationRequestStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::MedicationStatementCategoryCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::MedicationStatementCategoryCode_Value>() {
  return ::google::fhir::stu3::proto::MedicationStatementCategoryCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::MedicationStatementStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::MedicationStatementStatusCode_Value>() {
  return ::google::fhir::stu3::proto::MedicationStatementStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::MedicationStatementTakenCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::MedicationStatementTakenCode_Value>() {
  return ::google::fhir::stu3::proto::MedicationStatementTakenCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::MedicationStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::MedicationStatusCode_Value>() {
  return ::google::fhir::stu3::proto::MedicationStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::MessageEventCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::MessageEventCode_Value>() {
  return ::google::fhir::stu3::proto::MessageEventCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::MessageHeaderResponseRequestCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::MessageHeaderResponseRequestCode_Value>() {
  return ::google::fhir::stu3::proto::MessageHeaderResponseRequestCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ExampleMessageReasonCodesCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ExampleMessageReasonCodesCode_Value>() {
  return ::google::fhir::stu3::proto::ExampleMessageReasonCodesCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::MessageSignificanceCategoryCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::MessageSignificanceCategoryCode_Value>() {
  return ::google::fhir::stu3::proto::MessageSignificanceCategoryCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::MessageTransportCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::MessageTransportCode_Value>() {
  return ::google::fhir::stu3::proto::MessageTransportCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::DeviceMetricCalibrationStateCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::DeviceMetricCalibrationStateCode_Value>() {
  return ::google::fhir::stu3::proto::DeviceMetricCalibrationStateCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::DeviceMetricCalibrationTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::DeviceMetricCalibrationTypeCode_Value>() {
  return ::google::fhir::stu3::proto::DeviceMetricCalibrationTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::DeviceMetricCategoryCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::DeviceMetricCategoryCode_Value>() {
  return ::google::fhir::stu3::proto::DeviceMetricCategoryCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::DeviceMetricColorCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::DeviceMetricColorCode_Value>() {
  return ::google::fhir::stu3::proto::DeviceMetricColorCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::DeviceMetricOperationalStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::DeviceMetricOperationalStatusCode_Value>() {
  return ::google::fhir::stu3::proto::DeviceMetricOperationalStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::HumanNameAssemblyOrderCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::HumanNameAssemblyOrderCode_Value>() {
  return ::google::fhir::stu3::proto::HumanNameAssemblyOrderCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::NameRepresentationUseCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::NameRepresentationUseCode_Value>() {
  return ::google::fhir::stu3::proto::NameRepresentationUseCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::NamingSystemIdentifierTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::NamingSystemIdentifierTypeCode_Value>() {
  return ::google::fhir::stu3::proto::NamingSystemIdentifierTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::NamingSystemTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::NamingSystemTypeCode_Value>() {
  return ::google::fhir::stu3::proto::NamingSystemTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::AuditEventAgentNetworkTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::AuditEventAgentNetworkTypeCode_Value>() {
  return ::google::fhir::stu3::proto::AuditEventAgentNetworkTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::NoteTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::NoteTypeCode_Value>() {
  return ::google::fhir::stu3::proto::NoteTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::NullFlavorCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::NullFlavorCode_Value>() {
  return ::google::fhir::stu3::proto::NullFlavorCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::NutritionOrderStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::NutritionOrderStatusCode_Value>() {
  return ::google::fhir::stu3::proto::NutritionOrderStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ObservationCategoryCodesCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ObservationCategoryCodesCode_Value>() {
  return ::google::fhir::stu3::proto::ObservationCategoryCodesCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ObservationRelationshipTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ObservationRelationshipTypeCode_Value>() {
  return ::google::fhir::stu3::proto::ObservationRelationshipTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::StatisticsCodeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::StatisticsCodeCode_Value>() {
  return ::google::fhir::stu3::proto::StatisticsCodeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ObservationStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ObservationStatusCode_Value>() {
  return ::google::fhir::stu3::proto::ObservationStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::DeviceComponentOperationalStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::DeviceComponentOperationalStatusCode_Value>() {
  return ::google::fhir::stu3::proto::DeviceComponentOperationalStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::OperationKindCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::OperationKindCode_Value>() {
  return ::google::fhir::stu3::proto::OperationKindCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::OperationOutcomeCodesCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::OperationOutcomeCodesCode_Value>() {
  return ::google::fhir::stu3::proto::OperationOutcomeCodesCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::NarrativeStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::NarrativeStatusCode_Value>() {
  return ::google::fhir::stu3::proto::NarrativeStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::OperationParameterUseCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::OperationParameterUseCode_Value>() {
  return ::google::fhir::stu3::proto::OperationParameterUseCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::OrganizationTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::OrganizationTypeCode_Value>() {
  return ::google::fhir::stu3::proto::OrganizationTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::DeviceComponentParameterGroupCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::DeviceComponentParameterGroupCode_Value>() {
  return ::google::fhir::stu3::proto::DeviceComponentParameterGroupCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ParticipantRequiredCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ParticipantRequiredCode_Value>() {
  return ::google::fhir::stu3::proto::ParticipantRequiredCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ParticipationStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ParticipationStatusCode_Value>() {
  return ::google::fhir::stu3::proto::ParticipationStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::PlanDefinitionTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::PlanDefinitionTypeCode_Value>() {
  return ::google::fhir::stu3::proto::PlanDefinitionTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::PostalAddressUseTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::PostalAddressUseTypeCode_Value>() {
  return ::google::fhir::stu3::proto::PostalAddressUseTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::PractitionerRoleCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::PractitionerRoleCode_Value>() {
  return ::google::fhir::stu3::proto::PractitionerRoleCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::PractitionerSpecialtyCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::PractitionerSpecialtyCode_Value>() {
  return ::google::fhir::stu3::proto::PractitionerSpecialtyCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ProcedureProgressStatusCodesCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ProcedureProgressStatusCodesCode_Value>() {
  return ::google::fhir::stu3::proto::ProcedureProgressStatusCodesCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ProvenanceEntityRoleCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ProvenanceEntityRoleCode_Value>() {
  return ::google::fhir::stu3::proto::ProvenanceEntityRoleCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::PublicationStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::PublicationStatusCode_Value>() {
  return ::google::fhir::stu3::proto::PublicationStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::QualityTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::QualityTypeCode_Value>() {
  return ::google::fhir::stu3::proto::QualityTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::MaxOccursCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::MaxOccursCode_Value>() {
  return ::google::fhir::stu3::proto::MaxOccursCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::QuestionnaireResponseStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::QuestionnaireResponseStatusCode_Value>() {
  return ::google::fhir::stu3::proto::QuestionnaireResponseStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::QuestionnaireTextCategoriesCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::QuestionnaireTextCategoriesCode_Value>() {
  return ::google::fhir::stu3::proto::QuestionnaireTextCategoriesCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::QuestionnaireItemUIControlCodesCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::QuestionnaireItemUIControlCodesCode_Value>() {
  return ::google::fhir::stu3::proto::QuestionnaireItemUIControlCodesCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::QuestionnaireItemUsageModeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::QuestionnaireItemUsageModeCode_Value>() {
  return ::google::fhir::stu3::proto::QuestionnaireItemUsageModeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::AllergyIntoleranceCertaintyCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::AllergyIntoleranceCertaintyCode_Value>() {
  return ::google::fhir::stu3::proto::AllergyIntoleranceCertaintyCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::AllergyIntoleranceSeverityCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::AllergyIntoleranceSeverityCode_Value>() {
  return ::google::fhir::stu3::proto::AllergyIntoleranceSeverityCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ReasonMedicationGivenCodesCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ReasonMedicationGivenCodesCode_Value>() {
  return ::google::fhir::stu3::proto::ReasonMedicationGivenCodesCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ReferenceHandlingPolicyCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ReferenceHandlingPolicyCode_Value>() {
  return ::google::fhir::stu3::proto::ReferenceHandlingPolicyCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::RelatedArtifactTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::RelatedArtifactTypeCode_Value>() {
  return ::google::fhir::stu3::proto::RelatedArtifactTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ObservationReferenceRangeMeaningCodesCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ObservationReferenceRangeMeaningCodesCode_Value>() {
  return ::google::fhir::stu3::proto::ObservationReferenceRangeMeaningCodesCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::TestReportActionResultCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::TestReportActionResultCode_Value>() {
  return ::google::fhir::stu3::proto::TestReportActionResultCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::TestReportParticipantTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::TestReportParticipantTypeCode_Value>() {
  return ::google::fhir::stu3::proto::TestReportParticipantTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::TestReportResultCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::TestReportResultCode_Value>() {
  return ::google::fhir::stu3::proto::TestReportResultCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::TestReportStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::TestReportStatusCode_Value>() {
  return ::google::fhir::stu3::proto::TestReportStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::RepositoryTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::RepositoryTypeCode_Value>() {
  return ::google::fhir::stu3::proto::RepositoryTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::RequestIntentCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::RequestIntentCode_Value>() {
  return ::google::fhir::stu3::proto::RequestIntentCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::RequestPriorityCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::RequestPriorityCode_Value>() {
  return ::google::fhir::stu3::proto::RequestPriorityCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::RequestStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::RequestStatusCode_Value>() {
  return ::google::fhir::stu3::proto::RequestStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ResearchStudyStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ResearchStudyStatusCode_Value>() {
  return ::google::fhir::stu3::proto::ResearchStudyStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ResearchSubjectStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ResearchSubjectStatusCode_Value>() {
  return ::google::fhir::stu3::proto::ResearchSubjectStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::PayeeResourceTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::PayeeResourceTypeCode_Value>() {
  return ::google::fhir::stu3::proto::PayeeResourceTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ResourceTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ResourceTypeCode_Value>() {
  return ::google::fhir::stu3::proto::ResourceTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ResourceValidationModeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ResourceValidationModeCode_Value>() {
  return ::google::fhir::stu3::proto::ResourceValidationModeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ResponseTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ResponseTypeCode_Value>() {
  return ::google::fhir::stu3::proto::ResponseTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::RestfulCapabilityModeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::RestfulCapabilityModeCode_Value>() {
  return ::google::fhir::stu3::proto::RestfulCapabilityModeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::RestfulSecurityServiceCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::RestfulSecurityServiceCode_Value>() {
  return ::google::fhir::stu3::proto::RestfulSecurityServiceCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::RiskProbabilityCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::RiskProbabilityCode_Value>() {
  return ::google::fhir::stu3::proto::RiskProbabilityCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::SearchComparatorCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::SearchComparatorCode_Value>() {
  return ::google::fhir::stu3::proto::SearchComparatorCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::SearchEntryModeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::SearchEntryModeCode_Value>() {
  return ::google::fhir::stu3::proto::SearchEntryModeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::SearchModifierCodeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::SearchModifierCodeCode_Value>() {
  return ::google::fhir::stu3::proto::SearchModifierCodeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::SearchParamTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::SearchParamTypeCode_Value>() {
  return ::google::fhir::stu3::proto::SearchParamTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::XPathUsageTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::XPathUsageTypeCode_Value>() {
  return ::google::fhir::stu3::proto::XPathUsageTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::SequenceTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::SequenceTypeCode_Value>() {
  return ::google::fhir::stu3::proto::SequenceTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ServiceProvisionConditionsCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ServiceProvisionConditionsCode_Value>() {
  return ::google::fhir::stu3::proto::ServiceProvisionConditionsCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ReferralMethodCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ReferralMethodCode_Value>() {
  return ::google::fhir::stu3::proto::ReferralMethodCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::SlotStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::SlotStatusCode_Value>() {
  return ::google::fhir::stu3::proto::SlotStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::SpecialValuesCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::SpecialValuesCode_Value>() {
  return ::google::fhir::stu3::proto::SpecialValuesCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::DeviceSpecificationSpecTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::DeviceSpecificationSpecTypeCode_Value>() {
  return ::google::fhir::stu3::proto::DeviceSpecificationSpecTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::SpecimenStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::SpecimenStatusCode_Value>() {
  return ::google::fhir::stu3::proto::SpecimenStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::StructureDefinitionKindCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::StructureDefinitionKindCode_Value>() {
  return ::google::fhir::stu3::proto::StructureDefinitionKindCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::SubscriptionChannelTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::SubscriptionChannelTypeCode_Value>() {
  return ::google::fhir::stu3::proto::SubscriptionChannelTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::SubscriptionStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::SubscriptionStatusCode_Value>() {
  return ::google::fhir::stu3::proto::SubscriptionStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::SubscriptionTagCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::SubscriptionTagCode_Value>() {
  return ::google::fhir::stu3::proto::SubscriptionTagCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::SubstanceCategoryCodesCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::SubstanceCategoryCodesCode_Value>() {
  return ::google::fhir::stu3::proto::SubstanceCategoryCodesCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::FHIRSubstanceStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::FHIRSubstanceStatusCode_Value>() {
  return ::google::fhir::stu3::proto::FHIRSubstanceStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::SupplyDeliveryStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::SupplyDeliveryStatusCode_Value>() {
  return ::google::fhir::stu3::proto::SupplyDeliveryStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::SupplyItemTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::SupplyItemTypeCode_Value>() {
  return ::google::fhir::stu3::proto::SupplyItemTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::SupplyTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::SupplyTypeCode_Value>() {
  return ::google::fhir::stu3::proto::SupplyTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::SupplyRequestReasonCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::SupplyRequestReasonCode_Value>() {
  return ::google::fhir::stu3::proto::SupplyRequestReasonCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::SupplyRequestStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::SupplyRequestStatusCode_Value>() {
  return ::google::fhir::stu3::proto::SupplyRequestStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::SystemRestfulInteractionCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::SystemRestfulInteractionCode_Value>() {
  return ::google::fhir::stu3::proto::SystemRestfulInteractionCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::SystemVersionProcessingModeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::SystemVersionProcessingModeCode_Value>() {
  return ::google::fhir::stu3::proto::SystemVersionProcessingModeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::TaskPerformerTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::TaskPerformerTypeCode_Value>() {
  return ::google::fhir::stu3::proto::TaskPerformerTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::TemplateStatusCodeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::TemplateStatusCodeCode_Value>() {
  return ::google::fhir::stu3::proto::TemplateStatusCodeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::TaskStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::TaskStatusCode_Value>() {
  return ::google::fhir::stu3::proto::TaskStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::TestScriptOperationCodeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::TestScriptOperationCodeCode_Value>() {
  return ::google::fhir::stu3::proto::TestScriptOperationCodeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::TestScriptProfileDestinationTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::TestScriptProfileDestinationTypeCode_Value>() {
  return ::google::fhir::stu3::proto::TestScriptProfileDestinationTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::TestScriptProfileOriginTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::TestScriptProfileOriginTypeCode_Value>() {
  return ::google::fhir::stu3::proto::TestScriptProfileOriginTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::TransactionModeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::TransactionModeCode_Value>() {
  return ::google::fhir::stu3::proto::TransactionModeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::TypeDerivationRuleCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::TypeDerivationRuleCode_Value>() {
  return ::google::fhir::stu3::proto::TypeDerivationRuleCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::TypeRestfulInteractionCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::TypeRestfulInteractionCode_Value>() {
  return ::google::fhir::stu3::proto::TypeRestfulInteractionCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::UDIEntryTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::UDIEntryTypeCode_Value>() {
  return ::google::fhir::stu3::proto::UDIEntryTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::UnknownContentCodeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::UnknownContentCodeCode_Value>() {
  return ::google::fhir::stu3::proto::UnknownContentCodeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::UsageContextTypeCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::UsageContextTypeCode_Value>() {
  return ::google::fhir::stu3::proto::UsageContextTypeCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ConfidentialityClassificationCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ConfidentialityClassificationCode_Value>() {
  return ::google::fhir::stu3::proto::ConfidentialityClassificationCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::VaccinationProtocolDoseStatuscodesCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::VaccinationProtocolDoseStatuscodesCode_Value>() {
  return ::google::fhir::stu3::proto::VaccinationProtocolDoseStatuscodesCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::VaccinationProtocolDoseStatusReasoncodesCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::VaccinationProtocolDoseStatusReasoncodesCode_Value>() {
  return ::google::fhir::stu3::proto::VaccinationProtocolDoseStatusReasoncodesCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::sequenceStatusCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::sequenceStatusCode_Value>() {
  return ::google::fhir::stu3::proto::sequenceStatusCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::ResourceVersionPolicyCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::ResourceVersionPolicyCode_Value>() {
  return ::google::fhir::stu3::proto::ResourceVersionPolicyCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::VisionBaseCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::VisionBaseCode_Value>() {
  return ::google::fhir::stu3::proto::VisionBaseCode_Value_descriptor();
}
template <> struct is_proto_enum< ::google::fhir::stu3::proto::VisionEyesCode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::fhir::stu3::proto::VisionEyesCode_Value>() {
  return ::google::fhir::stu3::proto::VisionEyesCode_Value_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_proto_2fstu3_2fcodes_2eproto
