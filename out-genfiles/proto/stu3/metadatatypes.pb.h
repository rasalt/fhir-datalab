// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/stu3/metadatatypes.proto

#ifndef PROTOBUF_INCLUDED_proto_2fstu3_2fmetadatatypes_2eproto
#define PROTOBUF_INCLUDED_proto_2fstu3_2fmetadatatypes_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "proto/stu3/annotations.pb.h"
#include "proto/stu3/codes.pb.h"
#include "proto/stu3/datatypes.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fmetadatatypes_2eproto 

namespace protobuf_proto_2fstu3_2fmetadatatypes_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[33];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_proto_2fstu3_2fmetadatatypes_2eproto
namespace google {
namespace fhir {
namespace stu3 {
namespace proto {
class BackboneElement;
class BackboneElementDefaultTypeInternal;
extern BackboneElementDefaultTypeInternal _BackboneElement_default_instance_;
class ContactDetail;
class ContactDetailDefaultTypeInternal;
extern ContactDetailDefaultTypeInternal _ContactDetail_default_instance_;
class Contributor;
class ContributorDefaultTypeInternal;
extern ContributorDefaultTypeInternal _Contributor_default_instance_;
class DataRequirement;
class DataRequirementDefaultTypeInternal;
extern DataRequirementDefaultTypeInternal _DataRequirement_default_instance_;
class DataRequirement_CodeFilter;
class DataRequirement_CodeFilterDefaultTypeInternal;
extern DataRequirement_CodeFilterDefaultTypeInternal _DataRequirement_CodeFilter_default_instance_;
class DataRequirement_CodeFilter_ValueSet;
class DataRequirement_CodeFilter_ValueSetDefaultTypeInternal;
extern DataRequirement_CodeFilter_ValueSetDefaultTypeInternal _DataRequirement_CodeFilter_ValueSet_default_instance_;
class DataRequirement_DateFilter;
class DataRequirement_DateFilterDefaultTypeInternal;
extern DataRequirement_DateFilterDefaultTypeInternal _DataRequirement_DateFilter_default_instance_;
class DataRequirement_DateFilter_Value;
class DataRequirement_DateFilter_ValueDefaultTypeInternal;
extern DataRequirement_DateFilter_ValueDefaultTypeInternal _DataRequirement_DateFilter_Value_default_instance_;
class Element;
class ElementDefaultTypeInternal;
extern ElementDefaultTypeInternal _Element_default_instance_;
class ElementDefinition;
class ElementDefinitionDefaultTypeInternal;
extern ElementDefinitionDefaultTypeInternal _ElementDefinition_default_instance_;
class ElementDefinition_Base;
class ElementDefinition_BaseDefaultTypeInternal;
extern ElementDefinition_BaseDefaultTypeInternal _ElementDefinition_Base_default_instance_;
class ElementDefinition_Constraint;
class ElementDefinition_ConstraintDefaultTypeInternal;
extern ElementDefinition_ConstraintDefaultTypeInternal _ElementDefinition_Constraint_default_instance_;
class ElementDefinition_DefaultValue;
class ElementDefinition_DefaultValueDefaultTypeInternal;
extern ElementDefinition_DefaultValueDefaultTypeInternal _ElementDefinition_DefaultValue_default_instance_;
class ElementDefinition_ElementDefinitionBinding;
class ElementDefinition_ElementDefinitionBindingDefaultTypeInternal;
extern ElementDefinition_ElementDefinitionBindingDefaultTypeInternal _ElementDefinition_ElementDefinitionBinding_default_instance_;
class ElementDefinition_ElementDefinitionBinding_ValueSet;
class ElementDefinition_ElementDefinitionBinding_ValueSetDefaultTypeInternal;
extern ElementDefinition_ElementDefinitionBinding_ValueSetDefaultTypeInternal _ElementDefinition_ElementDefinitionBinding_ValueSet_default_instance_;
class ElementDefinition_Example;
class ElementDefinition_ExampleDefaultTypeInternal;
extern ElementDefinition_ExampleDefaultTypeInternal _ElementDefinition_Example_default_instance_;
class ElementDefinition_Example_Value;
class ElementDefinition_Example_ValueDefaultTypeInternal;
extern ElementDefinition_Example_ValueDefaultTypeInternal _ElementDefinition_Example_Value_default_instance_;
class ElementDefinition_Fixed;
class ElementDefinition_FixedDefaultTypeInternal;
extern ElementDefinition_FixedDefaultTypeInternal _ElementDefinition_Fixed_default_instance_;
class ElementDefinition_Mapping;
class ElementDefinition_MappingDefaultTypeInternal;
extern ElementDefinition_MappingDefaultTypeInternal _ElementDefinition_Mapping_default_instance_;
class ElementDefinition_MaxValue;
class ElementDefinition_MaxValueDefaultTypeInternal;
extern ElementDefinition_MaxValueDefaultTypeInternal _ElementDefinition_MaxValue_default_instance_;
class ElementDefinition_MinValue;
class ElementDefinition_MinValueDefaultTypeInternal;
extern ElementDefinition_MinValueDefaultTypeInternal _ElementDefinition_MinValue_default_instance_;
class ElementDefinition_Pattern;
class ElementDefinition_PatternDefaultTypeInternal;
extern ElementDefinition_PatternDefaultTypeInternal _ElementDefinition_Pattern_default_instance_;
class ElementDefinition_Slicing;
class ElementDefinition_SlicingDefaultTypeInternal;
extern ElementDefinition_SlicingDefaultTypeInternal _ElementDefinition_Slicing_default_instance_;
class ElementDefinition_Slicing_Discriminator;
class ElementDefinition_Slicing_DiscriminatorDefaultTypeInternal;
extern ElementDefinition_Slicing_DiscriminatorDefaultTypeInternal _ElementDefinition_Slicing_Discriminator_default_instance_;
class ElementDefinition_TypeRef;
class ElementDefinition_TypeRefDefaultTypeInternal;
extern ElementDefinition_TypeRefDefaultTypeInternal _ElementDefinition_TypeRef_default_instance_;
class Narrative;
class NarrativeDefaultTypeInternal;
extern NarrativeDefaultTypeInternal _Narrative_default_instance_;
class ParameterDefinition;
class ParameterDefinitionDefaultTypeInternal;
extern ParameterDefinitionDefaultTypeInternal _ParameterDefinition_default_instance_;
class RelatedArtifact;
class RelatedArtifactDefaultTypeInternal;
extern RelatedArtifactDefaultTypeInternal _RelatedArtifact_default_instance_;
class Resource;
class ResourceDefaultTypeInternal;
extern ResourceDefaultTypeInternal _Resource_default_instance_;
class TriggerDefinition;
class TriggerDefinitionDefaultTypeInternal;
extern TriggerDefinitionDefaultTypeInternal _TriggerDefinition_default_instance_;
class TriggerDefinition_EventTiming;
class TriggerDefinition_EventTimingDefaultTypeInternal;
extern TriggerDefinition_EventTimingDefaultTypeInternal _TriggerDefinition_EventTiming_default_instance_;
class UsageContext;
class UsageContextDefaultTypeInternal;
extern UsageContextDefaultTypeInternal _UsageContext_default_instance_;
class UsageContext_Value;
class UsageContext_ValueDefaultTypeInternal;
extern UsageContext_ValueDefaultTypeInternal _UsageContext_Value_default_instance_;
}  // namespace proto
}  // namespace stu3
}  // namespace fhir
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::fhir::stu3::proto::BackboneElement* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::BackboneElement>(Arena*);
template<> ::google::fhir::stu3::proto::ContactDetail* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ContactDetail>(Arena*);
template<> ::google::fhir::stu3::proto::Contributor* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::Contributor>(Arena*);
template<> ::google::fhir::stu3::proto::DataRequirement* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::DataRequirement>(Arena*);
template<> ::google::fhir::stu3::proto::DataRequirement_CodeFilter* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::DataRequirement_CodeFilter>(Arena*);
template<> ::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSet* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSet>(Arena*);
template<> ::google::fhir::stu3::proto::DataRequirement_DateFilter* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::DataRequirement_DateFilter>(Arena*);
template<> ::google::fhir::stu3::proto::DataRequirement_DateFilter_Value* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::DataRequirement_DateFilter_Value>(Arena*);
template<> ::google::fhir::stu3::proto::Element* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::Element>(Arena*);
template<> ::google::fhir::stu3::proto::ElementDefinition* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ElementDefinition>(Arena*);
template<> ::google::fhir::stu3::proto::ElementDefinition_Base* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ElementDefinition_Base>(Arena*);
template<> ::google::fhir::stu3::proto::ElementDefinition_Constraint* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ElementDefinition_Constraint>(Arena*);
template<> ::google::fhir::stu3::proto::ElementDefinition_DefaultValue* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ElementDefinition_DefaultValue>(Arena*);
template<> ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding>(Arena*);
template<> ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSet* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSet>(Arena*);
template<> ::google::fhir::stu3::proto::ElementDefinition_Example* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ElementDefinition_Example>(Arena*);
template<> ::google::fhir::stu3::proto::ElementDefinition_Example_Value* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ElementDefinition_Example_Value>(Arena*);
template<> ::google::fhir::stu3::proto::ElementDefinition_Fixed* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ElementDefinition_Fixed>(Arena*);
template<> ::google::fhir::stu3::proto::ElementDefinition_Mapping* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ElementDefinition_Mapping>(Arena*);
template<> ::google::fhir::stu3::proto::ElementDefinition_MaxValue* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ElementDefinition_MaxValue>(Arena*);
template<> ::google::fhir::stu3::proto::ElementDefinition_MinValue* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ElementDefinition_MinValue>(Arena*);
template<> ::google::fhir::stu3::proto::ElementDefinition_Pattern* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ElementDefinition_Pattern>(Arena*);
template<> ::google::fhir::stu3::proto::ElementDefinition_Slicing* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ElementDefinition_Slicing>(Arena*);
template<> ::google::fhir::stu3::proto::ElementDefinition_Slicing_Discriminator* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ElementDefinition_Slicing_Discriminator>(Arena*);
template<> ::google::fhir::stu3::proto::ElementDefinition_TypeRef* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ElementDefinition_TypeRef>(Arena*);
template<> ::google::fhir::stu3::proto::Narrative* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::Narrative>(Arena*);
template<> ::google::fhir::stu3::proto::ParameterDefinition* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ParameterDefinition>(Arena*);
template<> ::google::fhir::stu3::proto::RelatedArtifact* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::RelatedArtifact>(Arena*);
template<> ::google::fhir::stu3::proto::Resource* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::Resource>(Arena*);
template<> ::google::fhir::stu3::proto::TriggerDefinition* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::TriggerDefinition>(Arena*);
template<> ::google::fhir::stu3::proto::TriggerDefinition_EventTiming* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::TriggerDefinition_EventTiming>(Arena*);
template<> ::google::fhir::stu3::proto::UsageContext* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::UsageContext>(Arena*);
template<> ::google::fhir::stu3::proto::UsageContext_Value* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::UsageContext_Value>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace fhir {
namespace stu3 {
namespace proto {

// ===================================================================

class BackboneElement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.BackboneElement) */ {
 public:
  BackboneElement();
  virtual ~BackboneElement();

  BackboneElement(const BackboneElement& from);

  inline BackboneElement& operator=(const BackboneElement& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BackboneElement(BackboneElement&& from) noexcept
    : BackboneElement() {
    *this = ::std::move(from);
  }

  inline BackboneElement& operator=(BackboneElement&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BackboneElement& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BackboneElement* internal_default_instance() {
    return reinterpret_cast<const BackboneElement*>(
               &_BackboneElement_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(BackboneElement* other);
  friend void swap(BackboneElement& a, BackboneElement& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BackboneElement* New() const final {
    return CreateMaybeMessage<BackboneElement>(NULL);
  }

  BackboneElement* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BackboneElement>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BackboneElement& from);
  void MergeFrom(const BackboneElement& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BackboneElement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.BackboneElement)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::fhir::stu3::proto::String* id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ContactDetail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ContactDetail) */ {
 public:
  ContactDetail();
  virtual ~ContactDetail();

  ContactDetail(const ContactDetail& from);

  inline ContactDetail& operator=(const ContactDetail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ContactDetail(ContactDetail&& from) noexcept
    : ContactDetail() {
    *this = ::std::move(from);
  }

  inline ContactDetail& operator=(ContactDetail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactDetail& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ContactDetail* internal_default_instance() {
    return reinterpret_cast<const ContactDetail*>(
               &_ContactDetail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ContactDetail* other);
  friend void swap(ContactDetail& a, ContactDetail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ContactDetail* New() const final {
    return CreateMaybeMessage<ContactDetail>(NULL);
  }

  ContactDetail* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ContactDetail>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ContactDetail& from);
  void MergeFrom(const ContactDetail& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ContactDetail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.ContactPoint telecom = 4;
  int telecom_size() const;
  void clear_telecom();
  static const int kTelecomFieldNumber = 4;
  ::google::fhir::stu3::proto::ContactPoint* mutable_telecom(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >*
      mutable_telecom();
  const ::google::fhir::stu3::proto::ContactPoint& telecom(int index) const;
  ::google::fhir::stu3::proto::ContactPoint* add_telecom();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >&
      telecom() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.String name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::String& _internal_name() const;
  public:
  const ::google::fhir::stu3::proto::String& name() const;
  ::google::fhir::stu3::proto::String* release_name();
  ::google::fhir::stu3::proto::String* mutable_name();
  void set_allocated_name(::google::fhir::stu3::proto::String* name);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ContactDetail)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint > telecom_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::String* name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Contributor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.Contributor) */ {
 public:
  Contributor();
  virtual ~Contributor();

  Contributor(const Contributor& from);

  inline Contributor& operator=(const Contributor& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Contributor(Contributor&& from) noexcept
    : Contributor() {
    *this = ::std::move(from);
  }

  inline Contributor& operator=(Contributor&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Contributor& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Contributor* internal_default_instance() {
    return reinterpret_cast<const Contributor*>(
               &_Contributor_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Contributor* other);
  friend void swap(Contributor& a, Contributor& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Contributor* New() const final {
    return CreateMaybeMessage<Contributor>(NULL);
  }

  Contributor* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Contributor>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Contributor& from);
  void MergeFrom(const Contributor& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Contributor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.ContactDetail contact = 5;
  int contact_size() const;
  void clear_contact();
  static const int kContactFieldNumber = 5;
  ::google::fhir::stu3::proto::ContactDetail* mutable_contact(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactDetail >*
      mutable_contact();
  const ::google::fhir::stu3::proto::ContactDetail& contact(int index) const;
  ::google::fhir::stu3::proto::ContactDetail* add_contact();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactDetail >&
      contact() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ContributorTypeCode type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::ContributorTypeCode& _internal_type() const;
  public:
  const ::google::fhir::stu3::proto::ContributorTypeCode& type() const;
  ::google::fhir::stu3::proto::ContributorTypeCode* release_type();
  ::google::fhir::stu3::proto::ContributorTypeCode* mutable_type();
  void set_allocated_type(::google::fhir::stu3::proto::ContributorTypeCode* type);

  // .google.fhir.stu3.proto.String name = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::String& _internal_name() const;
  public:
  const ::google::fhir::stu3::proto::String& name() const;
  ::google::fhir::stu3::proto::String* release_name();
  ::google::fhir::stu3::proto::String* mutable_name();
  void set_allocated_name(::google::fhir::stu3::proto::String* name);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.Contributor)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactDetail > contact_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::ContributorTypeCode* type_;
  ::google::fhir::stu3::proto::String* name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataRequirement_CodeFilter_ValueSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet) */ {
 public:
  DataRequirement_CodeFilter_ValueSet();
  virtual ~DataRequirement_CodeFilter_ValueSet();

  DataRequirement_CodeFilter_ValueSet(const DataRequirement_CodeFilter_ValueSet& from);

  inline DataRequirement_CodeFilter_ValueSet& operator=(const DataRequirement_CodeFilter_ValueSet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataRequirement_CodeFilter_ValueSet(DataRequirement_CodeFilter_ValueSet&& from) noexcept
    : DataRequirement_CodeFilter_ValueSet() {
    *this = ::std::move(from);
  }

  inline DataRequirement_CodeFilter_ValueSet& operator=(DataRequirement_CodeFilter_ValueSet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataRequirement_CodeFilter_ValueSet& default_instance();

  enum ValueSetCase {
    kStringValue = 1,
    kReference = 2,
    VALUE_SET_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataRequirement_CodeFilter_ValueSet* internal_default_instance() {
    return reinterpret_cast<const DataRequirement_CodeFilter_ValueSet*>(
               &_DataRequirement_CodeFilter_ValueSet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(DataRequirement_CodeFilter_ValueSet* other);
  friend void swap(DataRequirement_CodeFilter_ValueSet& a, DataRequirement_CodeFilter_ValueSet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataRequirement_CodeFilter_ValueSet* New() const final {
    return CreateMaybeMessage<DataRequirement_CodeFilter_ValueSet>(NULL);
  }

  DataRequirement_CodeFilter_ValueSet* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataRequirement_CodeFilter_ValueSet>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataRequirement_CodeFilter_ValueSet& from);
  void MergeFrom(const DataRequirement_CodeFilter_ValueSet& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataRequirement_CodeFilter_ValueSet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.String string_value = 1[json_name = "string"];
  bool has_string_value() const;
  void clear_string_value();
  static const int kStringValueFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_string_value() const;
  public:
  const ::google::fhir::stu3::proto::String& string_value() const;
  ::google::fhir::stu3::proto::String* release_string_value();
  ::google::fhir::stu3::proto::String* mutable_string_value();
  void set_allocated_string_value(::google::fhir::stu3::proto::String* string_value);

  // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ValueSet"];
  bool has_reference() const;
  void clear_reference();
  static const int kReferenceFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_reference() const;
  public:
  const ::google::fhir::stu3::proto::Reference& reference() const;
  ::google::fhir::stu3::proto::Reference* release_reference();
  ::google::fhir::stu3::proto::Reference* mutable_reference();
  void set_allocated_reference(::google::fhir::stu3::proto::Reference* reference);

  void clear_value_set();
  ValueSetCase value_set_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet)
 private:
  void set_has_string_value();
  void set_has_reference();

  inline bool has_value_set() const;
  inline void clear_has_value_set();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union ValueSetUnion {
    ValueSetUnion() {}
    ::google::fhir::stu3::proto::String* string_value_;
    ::google::fhir::stu3::proto::Reference* reference_;
  } value_set_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataRequirement_CodeFilter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.DataRequirement.CodeFilter) */ {
 public:
  DataRequirement_CodeFilter();
  virtual ~DataRequirement_CodeFilter();

  DataRequirement_CodeFilter(const DataRequirement_CodeFilter& from);

  inline DataRequirement_CodeFilter& operator=(const DataRequirement_CodeFilter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataRequirement_CodeFilter(DataRequirement_CodeFilter&& from) noexcept
    : DataRequirement_CodeFilter() {
    *this = ::std::move(from);
  }

  inline DataRequirement_CodeFilter& operator=(DataRequirement_CodeFilter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataRequirement_CodeFilter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataRequirement_CodeFilter* internal_default_instance() {
    return reinterpret_cast<const DataRequirement_CodeFilter*>(
               &_DataRequirement_CodeFilter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(DataRequirement_CodeFilter* other);
  friend void swap(DataRequirement_CodeFilter& a, DataRequirement_CodeFilter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataRequirement_CodeFilter* New() const final {
    return CreateMaybeMessage<DataRequirement_CodeFilter>(NULL);
  }

  DataRequirement_CodeFilter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataRequirement_CodeFilter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataRequirement_CodeFilter& from);
  void MergeFrom(const DataRequirement_CodeFilter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataRequirement_CodeFilter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DataRequirement_CodeFilter_ValueSet ValueSet;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Code value_code = 5;
  int value_code_size() const;
  void clear_value_code();
  static const int kValueCodeFieldNumber = 5;
  ::google::fhir::stu3::proto::Code* mutable_value_code(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Code >*
      mutable_value_code();
  const ::google::fhir::stu3::proto::Code& value_code(int index) const;
  ::google::fhir::stu3::proto::Code* add_value_code();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Code >&
      value_code() const;

  // repeated .google.fhir.stu3.proto.Coding value_coding = 6;
  int value_coding_size() const;
  void clear_value_coding();
  static const int kValueCodingFieldNumber = 6;
  ::google::fhir::stu3::proto::Coding* mutable_value_coding(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Coding >*
      mutable_value_coding();
  const ::google::fhir::stu3::proto::Coding& value_coding(int index) const;
  ::google::fhir::stu3::proto::Coding* add_value_coding();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Coding >&
      value_coding() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept value_codeable_concept = 7;
  int value_codeable_concept_size() const;
  void clear_value_codeable_concept();
  static const int kValueCodeableConceptFieldNumber = 7;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_value_codeable_concept(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_value_codeable_concept();
  const ::google::fhir::stu3::proto::CodeableConcept& value_codeable_concept(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_value_codeable_concept();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      value_codeable_concept() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.String path = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::String& _internal_path() const;
  public:
  const ::google::fhir::stu3::proto::String& path() const;
  ::google::fhir::stu3::proto::String* release_path();
  ::google::fhir::stu3::proto::String* mutable_path();
  void set_allocated_path(::google::fhir::stu3::proto::String* path);

  // .google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet value_set = 4 [(.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_value_set() const;
  void clear_value_set();
  static const int kValueSetFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSet& _internal_value_set() const;
  public:
  const ::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSet& value_set() const;
  ::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSet* release_value_set();
  ::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSet* mutable_value_set();
  void set_allocated_value_set(::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSet* value_set);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.DataRequirement.CodeFilter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Code > value_code_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Coding > value_coding_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > value_codeable_concept_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::String* path_;
  ::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSet* value_set_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataRequirement_DateFilter_Value : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.DataRequirement.DateFilter.Value) */ {
 public:
  DataRequirement_DateFilter_Value();
  virtual ~DataRequirement_DateFilter_Value();

  DataRequirement_DateFilter_Value(const DataRequirement_DateFilter_Value& from);

  inline DataRequirement_DateFilter_Value& operator=(const DataRequirement_DateFilter_Value& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataRequirement_DateFilter_Value(DataRequirement_DateFilter_Value&& from) noexcept
    : DataRequirement_DateFilter_Value() {
    *this = ::std::move(from);
  }

  inline DataRequirement_DateFilter_Value& operator=(DataRequirement_DateFilter_Value&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataRequirement_DateFilter_Value& default_instance();

  enum ValueCase {
    kDateTime = 1,
    kPeriod = 2,
    kDuration = 3,
    VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataRequirement_DateFilter_Value* internal_default_instance() {
    return reinterpret_cast<const DataRequirement_DateFilter_Value*>(
               &_DataRequirement_DateFilter_Value_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(DataRequirement_DateFilter_Value* other);
  friend void swap(DataRequirement_DateFilter_Value& a, DataRequirement_DateFilter_Value& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataRequirement_DateFilter_Value* New() const final {
    return CreateMaybeMessage<DataRequirement_DateFilter_Value>(NULL);
  }

  DataRequirement_DateFilter_Value* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataRequirement_DateFilter_Value>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataRequirement_DateFilter_Value& from);
  void MergeFrom(const DataRequirement_DateFilter_Value& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataRequirement_DateFilter_Value* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.DateTime date_time = 1;
  bool has_date_time() const;
  void clear_date_time();
  static const int kDateTimeFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_date_time() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& date_time() const;
  ::google::fhir::stu3::proto::DateTime* release_date_time();
  ::google::fhir::stu3::proto::DateTime* mutable_date_time();
  void set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time);

  // .google.fhir.stu3.proto.Period period = 2;
  bool has_period() const;
  void clear_period();
  static const int kPeriodFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Period& _internal_period() const;
  public:
  const ::google::fhir::stu3::proto::Period& period() const;
  ::google::fhir::stu3::proto::Period* release_period();
  ::google::fhir::stu3::proto::Period* mutable_period();
  void set_allocated_period(::google::fhir::stu3::proto::Period* period);

  // .google.fhir.stu3.proto.Duration duration = 3;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Duration& _internal_duration() const;
  public:
  const ::google::fhir::stu3::proto::Duration& duration() const;
  ::google::fhir::stu3::proto::Duration* release_duration();
  ::google::fhir::stu3::proto::Duration* mutable_duration();
  void set_allocated_duration(::google::fhir::stu3::proto::Duration* duration);

  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.DataRequirement.DateFilter.Value)
 private:
  void set_has_date_time();
  void set_has_period();
  void set_has_duration();

  inline bool has_value() const;
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union ValueUnion {
    ValueUnion() {}
    ::google::fhir::stu3::proto::DateTime* date_time_;
    ::google::fhir::stu3::proto::Period* period_;
    ::google::fhir::stu3::proto::Duration* duration_;
  } value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataRequirement_DateFilter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.DataRequirement.DateFilter) */ {
 public:
  DataRequirement_DateFilter();
  virtual ~DataRequirement_DateFilter();

  DataRequirement_DateFilter(const DataRequirement_DateFilter& from);

  inline DataRequirement_DateFilter& operator=(const DataRequirement_DateFilter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataRequirement_DateFilter(DataRequirement_DateFilter&& from) noexcept
    : DataRequirement_DateFilter() {
    *this = ::std::move(from);
  }

  inline DataRequirement_DateFilter& operator=(DataRequirement_DateFilter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataRequirement_DateFilter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataRequirement_DateFilter* internal_default_instance() {
    return reinterpret_cast<const DataRequirement_DateFilter*>(
               &_DataRequirement_DateFilter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(DataRequirement_DateFilter* other);
  friend void swap(DataRequirement_DateFilter& a, DataRequirement_DateFilter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataRequirement_DateFilter* New() const final {
    return CreateMaybeMessage<DataRequirement_DateFilter>(NULL);
  }

  DataRequirement_DateFilter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataRequirement_DateFilter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataRequirement_DateFilter& from);
  void MergeFrom(const DataRequirement_DateFilter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataRequirement_DateFilter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DataRequirement_DateFilter_Value Value;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.String path = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::String& _internal_path() const;
  public:
  const ::google::fhir::stu3::proto::String& path() const;
  ::google::fhir::stu3::proto::String* release_path();
  ::google::fhir::stu3::proto::String* mutable_path();
  void set_allocated_path(::google::fhir::stu3::proto::String* path);

  // .google.fhir.stu3.proto.DataRequirement.DateFilter.Value value = 4 [(.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::DataRequirement_DateFilter_Value& _internal_value() const;
  public:
  const ::google::fhir::stu3::proto::DataRequirement_DateFilter_Value& value() const;
  ::google::fhir::stu3::proto::DataRequirement_DateFilter_Value* release_value();
  ::google::fhir::stu3::proto::DataRequirement_DateFilter_Value* mutable_value();
  void set_allocated_value(::google::fhir::stu3::proto::DataRequirement_DateFilter_Value* value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.DataRequirement.DateFilter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::String* path_;
  ::google::fhir::stu3::proto::DataRequirement_DateFilter_Value* value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataRequirement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.DataRequirement) */ {
 public:
  DataRequirement();
  virtual ~DataRequirement();

  DataRequirement(const DataRequirement& from);

  inline DataRequirement& operator=(const DataRequirement& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataRequirement(DataRequirement&& from) noexcept
    : DataRequirement() {
    *this = ::std::move(from);
  }

  inline DataRequirement& operator=(DataRequirement&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataRequirement& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataRequirement* internal_default_instance() {
    return reinterpret_cast<const DataRequirement*>(
               &_DataRequirement_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(DataRequirement* other);
  friend void swap(DataRequirement& a, DataRequirement& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataRequirement* New() const final {
    return CreateMaybeMessage<DataRequirement>(NULL);
  }

  DataRequirement* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataRequirement>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataRequirement& from);
  void MergeFrom(const DataRequirement& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataRequirement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DataRequirement_CodeFilter CodeFilter;
  typedef DataRequirement_DateFilter DateFilter;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Uri profile = 4;
  int profile_size() const;
  void clear_profile();
  static const int kProfileFieldNumber = 4;
  ::google::fhir::stu3::proto::Uri* mutable_profile(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Uri >*
      mutable_profile();
  const ::google::fhir::stu3::proto::Uri& profile(int index) const;
  ::google::fhir::stu3::proto::Uri* add_profile();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Uri >&
      profile() const;

  // repeated .google.fhir.stu3.proto.String must_support = 5;
  int must_support_size() const;
  void clear_must_support();
  static const int kMustSupportFieldNumber = 5;
  ::google::fhir::stu3::proto::String* mutable_must_support(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::String >*
      mutable_must_support();
  const ::google::fhir::stu3::proto::String& must_support(int index) const;
  ::google::fhir::stu3::proto::String* add_must_support();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::String >&
      must_support() const;

  // repeated .google.fhir.stu3.proto.DataRequirement.CodeFilter code_filter = 6;
  int code_filter_size() const;
  void clear_code_filter();
  static const int kCodeFilterFieldNumber = 6;
  ::google::fhir::stu3::proto::DataRequirement_CodeFilter* mutable_code_filter(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::DataRequirement_CodeFilter >*
      mutable_code_filter();
  const ::google::fhir::stu3::proto::DataRequirement_CodeFilter& code_filter(int index) const;
  ::google::fhir::stu3::proto::DataRequirement_CodeFilter* add_code_filter();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::DataRequirement_CodeFilter >&
      code_filter() const;

  // repeated .google.fhir.stu3.proto.DataRequirement.DateFilter date_filter = 7;
  int date_filter_size() const;
  void clear_date_filter();
  static const int kDateFilterFieldNumber = 7;
  ::google::fhir::stu3::proto::DataRequirement_DateFilter* mutable_date_filter(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::DataRequirement_DateFilter >*
      mutable_date_filter();
  const ::google::fhir::stu3::proto::DataRequirement_DateFilter& date_filter(int index) const;
  ::google::fhir::stu3::proto::DataRequirement_DateFilter* add_date_filter();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::DataRequirement_DateFilter >&
      date_filter() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.FHIRAllTypesCode type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::FHIRAllTypesCode& _internal_type() const;
  public:
  const ::google::fhir::stu3::proto::FHIRAllTypesCode& type() const;
  ::google::fhir::stu3::proto::FHIRAllTypesCode* release_type();
  ::google::fhir::stu3::proto::FHIRAllTypesCode* mutable_type();
  void set_allocated_type(::google::fhir::stu3::proto::FHIRAllTypesCode* type);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.DataRequirement)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Uri > profile_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::String > must_support_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::DataRequirement_CodeFilter > code_filter_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::DataRequirement_DateFilter > date_filter_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::FHIRAllTypesCode* type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Element : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.Element) */ {
 public:
  Element();
  virtual ~Element();

  Element(const Element& from);

  inline Element& operator=(const Element& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Element(Element&& from) noexcept
    : Element() {
    *this = ::std::move(from);
  }

  inline Element& operator=(Element&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Element& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Element* internal_default_instance() {
    return reinterpret_cast<const Element*>(
               &_Element_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(Element* other);
  friend void swap(Element& a, Element& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Element* New() const final {
    return CreateMaybeMessage<Element>(NULL);
  }

  Element* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Element>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Element& from);
  void MergeFrom(const Element& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Element* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.Element)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ElementDefinition_Slicing_Discriminator : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator) */ {
 public:
  ElementDefinition_Slicing_Discriminator();
  virtual ~ElementDefinition_Slicing_Discriminator();

  ElementDefinition_Slicing_Discriminator(const ElementDefinition_Slicing_Discriminator& from);

  inline ElementDefinition_Slicing_Discriminator& operator=(const ElementDefinition_Slicing_Discriminator& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ElementDefinition_Slicing_Discriminator(ElementDefinition_Slicing_Discriminator&& from) noexcept
    : ElementDefinition_Slicing_Discriminator() {
    *this = ::std::move(from);
  }

  inline ElementDefinition_Slicing_Discriminator& operator=(ElementDefinition_Slicing_Discriminator&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ElementDefinition_Slicing_Discriminator& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ElementDefinition_Slicing_Discriminator* internal_default_instance() {
    return reinterpret_cast<const ElementDefinition_Slicing_Discriminator*>(
               &_ElementDefinition_Slicing_Discriminator_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(ElementDefinition_Slicing_Discriminator* other);
  friend void swap(ElementDefinition_Slicing_Discriminator& a, ElementDefinition_Slicing_Discriminator& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ElementDefinition_Slicing_Discriminator* New() const final {
    return CreateMaybeMessage<ElementDefinition_Slicing_Discriminator>(NULL);
  }

  ElementDefinition_Slicing_Discriminator* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ElementDefinition_Slicing_Discriminator>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ElementDefinition_Slicing_Discriminator& from);
  void MergeFrom(const ElementDefinition_Slicing_Discriminator& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ElementDefinition_Slicing_Discriminator* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.DiscriminatorTypeCode type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::DiscriminatorTypeCode& _internal_type() const;
  public:
  const ::google::fhir::stu3::proto::DiscriminatorTypeCode& type() const;
  ::google::fhir::stu3::proto::DiscriminatorTypeCode* release_type();
  ::google::fhir::stu3::proto::DiscriminatorTypeCode* mutable_type();
  void set_allocated_type(::google::fhir::stu3::proto::DiscriminatorTypeCode* type);

  // .google.fhir.stu3.proto.String path = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::String& _internal_path() const;
  public:
  const ::google::fhir::stu3::proto::String& path() const;
  ::google::fhir::stu3::proto::String* release_path();
  ::google::fhir::stu3::proto::String* mutable_path();
  void set_allocated_path(::google::fhir::stu3::proto::String* path);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::DiscriminatorTypeCode* type_;
  ::google::fhir::stu3::proto::String* path_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ElementDefinition_Slicing : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ElementDefinition.Slicing) */ {
 public:
  ElementDefinition_Slicing();
  virtual ~ElementDefinition_Slicing();

  ElementDefinition_Slicing(const ElementDefinition_Slicing& from);

  inline ElementDefinition_Slicing& operator=(const ElementDefinition_Slicing& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ElementDefinition_Slicing(ElementDefinition_Slicing&& from) noexcept
    : ElementDefinition_Slicing() {
    *this = ::std::move(from);
  }

  inline ElementDefinition_Slicing& operator=(ElementDefinition_Slicing&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ElementDefinition_Slicing& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ElementDefinition_Slicing* internal_default_instance() {
    return reinterpret_cast<const ElementDefinition_Slicing*>(
               &_ElementDefinition_Slicing_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(ElementDefinition_Slicing* other);
  friend void swap(ElementDefinition_Slicing& a, ElementDefinition_Slicing& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ElementDefinition_Slicing* New() const final {
    return CreateMaybeMessage<ElementDefinition_Slicing>(NULL);
  }

  ElementDefinition_Slicing* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ElementDefinition_Slicing>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ElementDefinition_Slicing& from);
  void MergeFrom(const ElementDefinition_Slicing& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ElementDefinition_Slicing* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ElementDefinition_Slicing_Discriminator Discriminator;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator discriminator = 3;
  int discriminator_size() const;
  void clear_discriminator();
  static const int kDiscriminatorFieldNumber = 3;
  ::google::fhir::stu3::proto::ElementDefinition_Slicing_Discriminator* mutable_discriminator(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ElementDefinition_Slicing_Discriminator >*
      mutable_discriminator();
  const ::google::fhir::stu3::proto::ElementDefinition_Slicing_Discriminator& discriminator(int index) const;
  ::google::fhir::stu3::proto::ElementDefinition_Slicing_Discriminator* add_discriminator();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ElementDefinition_Slicing_Discriminator >&
      discriminator() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.String description = 4;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::String& _internal_description() const;
  public:
  const ::google::fhir::stu3::proto::String& description() const;
  ::google::fhir::stu3::proto::String* release_description();
  ::google::fhir::stu3::proto::String* mutable_description();
  void set_allocated_description(::google::fhir::stu3::proto::String* description);

  // .google.fhir.stu3.proto.Boolean ordered = 5;
  bool has_ordered() const;
  void clear_ordered();
  static const int kOrderedFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Boolean& _internal_ordered() const;
  public:
  const ::google::fhir::stu3::proto::Boolean& ordered() const;
  ::google::fhir::stu3::proto::Boolean* release_ordered();
  ::google::fhir::stu3::proto::Boolean* mutable_ordered();
  void set_allocated_ordered(::google::fhir::stu3::proto::Boolean* ordered);

  // .google.fhir.stu3.proto.SlicingRulesCode rules = 6 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_rules() const;
  void clear_rules();
  static const int kRulesFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::SlicingRulesCode& _internal_rules() const;
  public:
  const ::google::fhir::stu3::proto::SlicingRulesCode& rules() const;
  ::google::fhir::stu3::proto::SlicingRulesCode* release_rules();
  ::google::fhir::stu3::proto::SlicingRulesCode* mutable_rules();
  void set_allocated_rules(::google::fhir::stu3::proto::SlicingRulesCode* rules);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ElementDefinition.Slicing)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ElementDefinition_Slicing_Discriminator > discriminator_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::String* description_;
  ::google::fhir::stu3::proto::Boolean* ordered_;
  ::google::fhir::stu3::proto::SlicingRulesCode* rules_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ElementDefinition_Base : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ElementDefinition.Base) */ {
 public:
  ElementDefinition_Base();
  virtual ~ElementDefinition_Base();

  ElementDefinition_Base(const ElementDefinition_Base& from);

  inline ElementDefinition_Base& operator=(const ElementDefinition_Base& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ElementDefinition_Base(ElementDefinition_Base&& from) noexcept
    : ElementDefinition_Base() {
    *this = ::std::move(from);
  }

  inline ElementDefinition_Base& operator=(ElementDefinition_Base&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ElementDefinition_Base& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ElementDefinition_Base* internal_default_instance() {
    return reinterpret_cast<const ElementDefinition_Base*>(
               &_ElementDefinition_Base_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(ElementDefinition_Base* other);
  friend void swap(ElementDefinition_Base& a, ElementDefinition_Base& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ElementDefinition_Base* New() const final {
    return CreateMaybeMessage<ElementDefinition_Base>(NULL);
  }

  ElementDefinition_Base* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ElementDefinition_Base>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ElementDefinition_Base& from);
  void MergeFrom(const ElementDefinition_Base& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ElementDefinition_Base* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.String path = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::String& _internal_path() const;
  public:
  const ::google::fhir::stu3::proto::String& path() const;
  ::google::fhir::stu3::proto::String* release_path();
  ::google::fhir::stu3::proto::String* mutable_path();
  void set_allocated_path(::google::fhir::stu3::proto::String* path);

  // .google.fhir.stu3.proto.UnsignedInt min = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::UnsignedInt& _internal_min() const;
  public:
  const ::google::fhir::stu3::proto::UnsignedInt& min() const;
  ::google::fhir::stu3::proto::UnsignedInt* release_min();
  ::google::fhir::stu3::proto::UnsignedInt* mutable_min();
  void set_allocated_min(::google::fhir::stu3::proto::UnsignedInt* min);

  // .google.fhir.stu3.proto.String max = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::String& _internal_max() const;
  public:
  const ::google::fhir::stu3::proto::String& max() const;
  ::google::fhir::stu3::proto::String* release_max();
  ::google::fhir::stu3::proto::String* mutable_max();
  void set_allocated_max(::google::fhir::stu3::proto::String* max);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ElementDefinition.Base)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::String* path_;
  ::google::fhir::stu3::proto::UnsignedInt* min_;
  ::google::fhir::stu3::proto::String* max_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ElementDefinition_TypeRef : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ElementDefinition.TypeRef) */ {
 public:
  ElementDefinition_TypeRef();
  virtual ~ElementDefinition_TypeRef();

  ElementDefinition_TypeRef(const ElementDefinition_TypeRef& from);

  inline ElementDefinition_TypeRef& operator=(const ElementDefinition_TypeRef& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ElementDefinition_TypeRef(ElementDefinition_TypeRef&& from) noexcept
    : ElementDefinition_TypeRef() {
    *this = ::std::move(from);
  }

  inline ElementDefinition_TypeRef& operator=(ElementDefinition_TypeRef&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ElementDefinition_TypeRef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ElementDefinition_TypeRef* internal_default_instance() {
    return reinterpret_cast<const ElementDefinition_TypeRef*>(
               &_ElementDefinition_TypeRef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(ElementDefinition_TypeRef* other);
  friend void swap(ElementDefinition_TypeRef& a, ElementDefinition_TypeRef& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ElementDefinition_TypeRef* New() const final {
    return CreateMaybeMessage<ElementDefinition_TypeRef>(NULL);
  }

  ElementDefinition_TypeRef* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ElementDefinition_TypeRef>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ElementDefinition_TypeRef& from);
  void MergeFrom(const ElementDefinition_TypeRef& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ElementDefinition_TypeRef* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.AggregationModeCode aggregation = 6;
  int aggregation_size() const;
  void clear_aggregation();
  static const int kAggregationFieldNumber = 6;
  ::google::fhir::stu3::proto::AggregationModeCode* mutable_aggregation(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::AggregationModeCode >*
      mutable_aggregation();
  const ::google::fhir::stu3::proto::AggregationModeCode& aggregation(int index) const;
  ::google::fhir::stu3::proto::AggregationModeCode* add_aggregation();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::AggregationModeCode >&
      aggregation() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.Uri code = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_code() const;
  public:
  const ::google::fhir::stu3::proto::Uri& code() const;
  ::google::fhir::stu3::proto::Uri* release_code();
  ::google::fhir::stu3::proto::Uri* mutable_code();
  void set_allocated_code(::google::fhir::stu3::proto::Uri* code);

  // .google.fhir.stu3.proto.Uri profile = 4;
  bool has_profile() const;
  void clear_profile();
  static const int kProfileFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_profile() const;
  public:
  const ::google::fhir::stu3::proto::Uri& profile() const;
  ::google::fhir::stu3::proto::Uri* release_profile();
  ::google::fhir::stu3::proto::Uri* mutable_profile();
  void set_allocated_profile(::google::fhir::stu3::proto::Uri* profile);

  // .google.fhir.stu3.proto.Uri target_profile = 5;
  bool has_target_profile() const;
  void clear_target_profile();
  static const int kTargetProfileFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_target_profile() const;
  public:
  const ::google::fhir::stu3::proto::Uri& target_profile() const;
  ::google::fhir::stu3::proto::Uri* release_target_profile();
  ::google::fhir::stu3::proto::Uri* mutable_target_profile();
  void set_allocated_target_profile(::google::fhir::stu3::proto::Uri* target_profile);

  // .google.fhir.stu3.proto.ReferenceVersionRulesCode versioning = 7;
  bool has_versioning() const;
  void clear_versioning();
  static const int kVersioningFieldNumber = 7;
  private:
  const ::google::fhir::stu3::proto::ReferenceVersionRulesCode& _internal_versioning() const;
  public:
  const ::google::fhir::stu3::proto::ReferenceVersionRulesCode& versioning() const;
  ::google::fhir::stu3::proto::ReferenceVersionRulesCode* release_versioning();
  ::google::fhir::stu3::proto::ReferenceVersionRulesCode* mutable_versioning();
  void set_allocated_versioning(::google::fhir::stu3::proto::ReferenceVersionRulesCode* versioning);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ElementDefinition.TypeRef)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::AggregationModeCode > aggregation_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::Uri* code_;
  ::google::fhir::stu3::proto::Uri* profile_;
  ::google::fhir::stu3::proto::Uri* target_profile_;
  ::google::fhir::stu3::proto::ReferenceVersionRulesCode* versioning_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ElementDefinition_DefaultValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ElementDefinition.DefaultValue) */ {
 public:
  ElementDefinition_DefaultValue();
  virtual ~ElementDefinition_DefaultValue();

  ElementDefinition_DefaultValue(const ElementDefinition_DefaultValue& from);

  inline ElementDefinition_DefaultValue& operator=(const ElementDefinition_DefaultValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ElementDefinition_DefaultValue(ElementDefinition_DefaultValue&& from) noexcept
    : ElementDefinition_DefaultValue() {
    *this = ::std::move(from);
  }

  inline ElementDefinition_DefaultValue& operator=(ElementDefinition_DefaultValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ElementDefinition_DefaultValue& default_instance();

  enum DefaultValueCase {
    kBase64Binary = 1,
    kBoolean = 2,
    kCode = 3,
    kDate = 4,
    kDateTime = 5,
    kDecimal = 6,
    kId = 7,
    kInstant = 8,
    kInteger = 9,
    kMarkdown = 10,
    kOid = 11,
    kPositiveInt = 12,
    kStringValue = 13,
    kTime = 14,
    kUnsignedInt = 15,
    kUri = 16,
    kAddress = 17,
    kAge = 18,
    kAnnotation = 19,
    kAttachment = 20,
    kCodeableConcept = 21,
    kCoding = 22,
    kContactPoint = 23,
    kCount = 24,
    kDistance = 25,
    kDuration = 26,
    kHumanName = 27,
    kIdentifier = 28,
    kMoney = 29,
    kPeriod = 30,
    kQuantity = 31,
    kRange = 32,
    kRatio = 33,
    kReference = 34,
    kSampledData = 35,
    kSignature = 36,
    kTiming = 37,
    kMeta = 38,
    DEFAULT_VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ElementDefinition_DefaultValue* internal_default_instance() {
    return reinterpret_cast<const ElementDefinition_DefaultValue*>(
               &_ElementDefinition_DefaultValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(ElementDefinition_DefaultValue* other);
  friend void swap(ElementDefinition_DefaultValue& a, ElementDefinition_DefaultValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ElementDefinition_DefaultValue* New() const final {
    return CreateMaybeMessage<ElementDefinition_DefaultValue>(NULL);
  }

  ElementDefinition_DefaultValue* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ElementDefinition_DefaultValue>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ElementDefinition_DefaultValue& from);
  void MergeFrom(const ElementDefinition_DefaultValue& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ElementDefinition_DefaultValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.Base64Binary base64_binary = 1;
  bool has_base64_binary() const;
  void clear_base64_binary();
  static const int kBase64BinaryFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Base64Binary& _internal_base64_binary() const;
  public:
  const ::google::fhir::stu3::proto::Base64Binary& base64_binary() const;
  ::google::fhir::stu3::proto::Base64Binary* release_base64_binary();
  ::google::fhir::stu3::proto::Base64Binary* mutable_base64_binary();
  void set_allocated_base64_binary(::google::fhir::stu3::proto::Base64Binary* base64_binary);

  // .google.fhir.stu3.proto.Boolean boolean = 2;
  bool has_boolean() const;
  void clear_boolean();
  static const int kBooleanFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Boolean& _internal_boolean() const;
  public:
  const ::google::fhir::stu3::proto::Boolean& boolean() const;
  ::google::fhir::stu3::proto::Boolean* release_boolean();
  ::google::fhir::stu3::proto::Boolean* mutable_boolean();
  void set_allocated_boolean(::google::fhir::stu3::proto::Boolean* boolean);

  // .google.fhir.stu3.proto.Code code = 3;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Code& _internal_code() const;
  public:
  const ::google::fhir::stu3::proto::Code& code() const;
  ::google::fhir::stu3::proto::Code* release_code();
  ::google::fhir::stu3::proto::Code* mutable_code();
  void set_allocated_code(::google::fhir::stu3::proto::Code* code);

  // .google.fhir.stu3.proto.Date date = 4;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::Date& _internal_date() const;
  public:
  const ::google::fhir::stu3::proto::Date& date() const;
  ::google::fhir::stu3::proto::Date* release_date();
  ::google::fhir::stu3::proto::Date* mutable_date();
  void set_allocated_date(::google::fhir::stu3::proto::Date* date);

  // .google.fhir.stu3.proto.DateTime date_time = 5;
  bool has_date_time() const;
  void clear_date_time();
  static const int kDateTimeFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_date_time() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& date_time() const;
  ::google::fhir::stu3::proto::DateTime* release_date_time();
  ::google::fhir::stu3::proto::DateTime* mutable_date_time();
  void set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time);

  // .google.fhir.stu3.proto.Decimal decimal = 6;
  bool has_decimal() const;
  void clear_decimal();
  static const int kDecimalFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::Decimal& _internal_decimal() const;
  public:
  const ::google::fhir::stu3::proto::Decimal& decimal() const;
  ::google::fhir::stu3::proto::Decimal* release_decimal();
  ::google::fhir::stu3::proto::Decimal* mutable_decimal();
  void set_allocated_decimal(::google::fhir::stu3::proto::Decimal* decimal);

  // .google.fhir.stu3.proto.Id id = 7;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 7;
  private:
  const ::google::fhir::stu3::proto::Id& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::Id& id() const;
  ::google::fhir::stu3::proto::Id* release_id();
  ::google::fhir::stu3::proto::Id* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::Id* id);

  // .google.fhir.stu3.proto.Instant instant = 8;
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 8;
  private:
  const ::google::fhir::stu3::proto::Instant& _internal_instant() const;
  public:
  const ::google::fhir::stu3::proto::Instant& instant() const;
  ::google::fhir::stu3::proto::Instant* release_instant();
  ::google::fhir::stu3::proto::Instant* mutable_instant();
  void set_allocated_instant(::google::fhir::stu3::proto::Instant* instant);

  // .google.fhir.stu3.proto.Integer integer = 9;
  bool has_integer() const;
  void clear_integer();
  static const int kIntegerFieldNumber = 9;
  private:
  const ::google::fhir::stu3::proto::Integer& _internal_integer() const;
  public:
  const ::google::fhir::stu3::proto::Integer& integer() const;
  ::google::fhir::stu3::proto::Integer* release_integer();
  ::google::fhir::stu3::proto::Integer* mutable_integer();
  void set_allocated_integer(::google::fhir::stu3::proto::Integer* integer);

  // .google.fhir.stu3.proto.Markdown markdown = 10;
  bool has_markdown() const;
  void clear_markdown();
  static const int kMarkdownFieldNumber = 10;
  private:
  const ::google::fhir::stu3::proto::Markdown& _internal_markdown() const;
  public:
  const ::google::fhir::stu3::proto::Markdown& markdown() const;
  ::google::fhir::stu3::proto::Markdown* release_markdown();
  ::google::fhir::stu3::proto::Markdown* mutable_markdown();
  void set_allocated_markdown(::google::fhir::stu3::proto::Markdown* markdown);

  // .google.fhir.stu3.proto.Oid oid = 11;
  bool has_oid() const;
  void clear_oid();
  static const int kOidFieldNumber = 11;
  private:
  const ::google::fhir::stu3::proto::Oid& _internal_oid() const;
  public:
  const ::google::fhir::stu3::proto::Oid& oid() const;
  ::google::fhir::stu3::proto::Oid* release_oid();
  ::google::fhir::stu3::proto::Oid* mutable_oid();
  void set_allocated_oid(::google::fhir::stu3::proto::Oid* oid);

  // .google.fhir.stu3.proto.PositiveInt positive_int = 12;
  bool has_positive_int() const;
  void clear_positive_int();
  static const int kPositiveIntFieldNumber = 12;
  private:
  const ::google::fhir::stu3::proto::PositiveInt& _internal_positive_int() const;
  public:
  const ::google::fhir::stu3::proto::PositiveInt& positive_int() const;
  ::google::fhir::stu3::proto::PositiveInt* release_positive_int();
  ::google::fhir::stu3::proto::PositiveInt* mutable_positive_int();
  void set_allocated_positive_int(::google::fhir::stu3::proto::PositiveInt* positive_int);

  // .google.fhir.stu3.proto.String string_value = 13[json_name = "string"];
  bool has_string_value() const;
  void clear_string_value();
  static const int kStringValueFieldNumber = 13;
  private:
  const ::google::fhir::stu3::proto::String& _internal_string_value() const;
  public:
  const ::google::fhir::stu3::proto::String& string_value() const;
  ::google::fhir::stu3::proto::String* release_string_value();
  ::google::fhir::stu3::proto::String* mutable_string_value();
  void set_allocated_string_value(::google::fhir::stu3::proto::String* string_value);

  // .google.fhir.stu3.proto.Time time = 14;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 14;
  private:
  const ::google::fhir::stu3::proto::Time& _internal_time() const;
  public:
  const ::google::fhir::stu3::proto::Time& time() const;
  ::google::fhir::stu3::proto::Time* release_time();
  ::google::fhir::stu3::proto::Time* mutable_time();
  void set_allocated_time(::google::fhir::stu3::proto::Time* time);

  // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
  bool has_unsigned_int() const;
  void clear_unsigned_int();
  static const int kUnsignedIntFieldNumber = 15;
  private:
  const ::google::fhir::stu3::proto::UnsignedInt& _internal_unsigned_int() const;
  public:
  const ::google::fhir::stu3::proto::UnsignedInt& unsigned_int() const;
  ::google::fhir::stu3::proto::UnsignedInt* release_unsigned_int();
  ::google::fhir::stu3::proto::UnsignedInt* mutable_unsigned_int();
  void set_allocated_unsigned_int(::google::fhir::stu3::proto::UnsignedInt* unsigned_int);

  // .google.fhir.stu3.proto.Uri uri = 16;
  bool has_uri() const;
  void clear_uri();
  static const int kUriFieldNumber = 16;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_uri() const;
  public:
  const ::google::fhir::stu3::proto::Uri& uri() const;
  ::google::fhir::stu3::proto::Uri* release_uri();
  ::google::fhir::stu3::proto::Uri* mutable_uri();
  void set_allocated_uri(::google::fhir::stu3::proto::Uri* uri);

  // .google.fhir.stu3.proto.Address address = 17;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 17;
  private:
  const ::google::fhir::stu3::proto::Address& _internal_address() const;
  public:
  const ::google::fhir::stu3::proto::Address& address() const;
  ::google::fhir::stu3::proto::Address* release_address();
  ::google::fhir::stu3::proto::Address* mutable_address();
  void set_allocated_address(::google::fhir::stu3::proto::Address* address);

  // .google.fhir.stu3.proto.Age age = 18;
  bool has_age() const;
  void clear_age();
  static const int kAgeFieldNumber = 18;
  private:
  const ::google::fhir::stu3::proto::Age& _internal_age() const;
  public:
  const ::google::fhir::stu3::proto::Age& age() const;
  ::google::fhir::stu3::proto::Age* release_age();
  ::google::fhir::stu3::proto::Age* mutable_age();
  void set_allocated_age(::google::fhir::stu3::proto::Age* age);

  // .google.fhir.stu3.proto.Annotation annotation = 19;
  bool has_annotation() const;
  void clear_annotation();
  static const int kAnnotationFieldNumber = 19;
  private:
  const ::google::fhir::stu3::proto::Annotation& _internal_annotation() const;
  public:
  const ::google::fhir::stu3::proto::Annotation& annotation() const;
  ::google::fhir::stu3::proto::Annotation* release_annotation();
  ::google::fhir::stu3::proto::Annotation* mutable_annotation();
  void set_allocated_annotation(::google::fhir::stu3::proto::Annotation* annotation);

  // .google.fhir.stu3.proto.Attachment attachment = 20;
  bool has_attachment() const;
  void clear_attachment();
  static const int kAttachmentFieldNumber = 20;
  private:
  const ::google::fhir::stu3::proto::Attachment& _internal_attachment() const;
  public:
  const ::google::fhir::stu3::proto::Attachment& attachment() const;
  ::google::fhir::stu3::proto::Attachment* release_attachment();
  ::google::fhir::stu3::proto::Attachment* mutable_attachment();
  void set_allocated_attachment(::google::fhir::stu3::proto::Attachment* attachment);

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
  bool has_codeable_concept() const;
  void clear_codeable_concept();
  static const int kCodeableConceptFieldNumber = 21;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_codeable_concept() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& codeable_concept() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_codeable_concept();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_codeable_concept();
  void set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept);

  // .google.fhir.stu3.proto.Coding coding = 22;
  bool has_coding() const;
  void clear_coding();
  static const int kCodingFieldNumber = 22;
  private:
  const ::google::fhir::stu3::proto::Coding& _internal_coding() const;
  public:
  const ::google::fhir::stu3::proto::Coding& coding() const;
  ::google::fhir::stu3::proto::Coding* release_coding();
  ::google::fhir::stu3::proto::Coding* mutable_coding();
  void set_allocated_coding(::google::fhir::stu3::proto::Coding* coding);

  // .google.fhir.stu3.proto.ContactPoint contact_point = 23;
  bool has_contact_point() const;
  void clear_contact_point();
  static const int kContactPointFieldNumber = 23;
  private:
  const ::google::fhir::stu3::proto::ContactPoint& _internal_contact_point() const;
  public:
  const ::google::fhir::stu3::proto::ContactPoint& contact_point() const;
  ::google::fhir::stu3::proto::ContactPoint* release_contact_point();
  ::google::fhir::stu3::proto::ContactPoint* mutable_contact_point();
  void set_allocated_contact_point(::google::fhir::stu3::proto::ContactPoint* contact_point);

  // .google.fhir.stu3.proto.Count count = 24;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 24;
  private:
  const ::google::fhir::stu3::proto::Count& _internal_count() const;
  public:
  const ::google::fhir::stu3::proto::Count& count() const;
  ::google::fhir::stu3::proto::Count* release_count();
  ::google::fhir::stu3::proto::Count* mutable_count();
  void set_allocated_count(::google::fhir::stu3::proto::Count* count);

  // .google.fhir.stu3.proto.Distance distance = 25;
  bool has_distance() const;
  void clear_distance();
  static const int kDistanceFieldNumber = 25;
  private:
  const ::google::fhir::stu3::proto::Distance& _internal_distance() const;
  public:
  const ::google::fhir::stu3::proto::Distance& distance() const;
  ::google::fhir::stu3::proto::Distance* release_distance();
  ::google::fhir::stu3::proto::Distance* mutable_distance();
  void set_allocated_distance(::google::fhir::stu3::proto::Distance* distance);

  // .google.fhir.stu3.proto.Duration duration = 26;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 26;
  private:
  const ::google::fhir::stu3::proto::Duration& _internal_duration() const;
  public:
  const ::google::fhir::stu3::proto::Duration& duration() const;
  ::google::fhir::stu3::proto::Duration* release_duration();
  ::google::fhir::stu3::proto::Duration* mutable_duration();
  void set_allocated_duration(::google::fhir::stu3::proto::Duration* duration);

  // .google.fhir.stu3.proto.HumanName human_name = 27;
  bool has_human_name() const;
  void clear_human_name();
  static const int kHumanNameFieldNumber = 27;
  private:
  const ::google::fhir::stu3::proto::HumanName& _internal_human_name() const;
  public:
  const ::google::fhir::stu3::proto::HumanName& human_name() const;
  ::google::fhir::stu3::proto::HumanName* release_human_name();
  ::google::fhir::stu3::proto::HumanName* mutable_human_name();
  void set_allocated_human_name(::google::fhir::stu3::proto::HumanName* human_name);

  // .google.fhir.stu3.proto.Identifier identifier = 28;
  bool has_identifier() const;
  void clear_identifier();
  static const int kIdentifierFieldNumber = 28;
  private:
  const ::google::fhir::stu3::proto::Identifier& _internal_identifier() const;
  public:
  const ::google::fhir::stu3::proto::Identifier& identifier() const;
  ::google::fhir::stu3::proto::Identifier* release_identifier();
  ::google::fhir::stu3::proto::Identifier* mutable_identifier();
  void set_allocated_identifier(::google::fhir::stu3::proto::Identifier* identifier);

  // .google.fhir.stu3.proto.Money money = 29;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 29;
  private:
  const ::google::fhir::stu3::proto::Money& _internal_money() const;
  public:
  const ::google::fhir::stu3::proto::Money& money() const;
  ::google::fhir::stu3::proto::Money* release_money();
  ::google::fhir::stu3::proto::Money* mutable_money();
  void set_allocated_money(::google::fhir::stu3::proto::Money* money);

  // .google.fhir.stu3.proto.Period period = 30;
  bool has_period() const;
  void clear_period();
  static const int kPeriodFieldNumber = 30;
  private:
  const ::google::fhir::stu3::proto::Period& _internal_period() const;
  public:
  const ::google::fhir::stu3::proto::Period& period() const;
  ::google::fhir::stu3::proto::Period* release_period();
  ::google::fhir::stu3::proto::Period* mutable_period();
  void set_allocated_period(::google::fhir::stu3::proto::Period* period);

  // .google.fhir.stu3.proto.Quantity quantity = 31;
  bool has_quantity() const;
  void clear_quantity();
  static const int kQuantityFieldNumber = 31;
  private:
  const ::google::fhir::stu3::proto::Quantity& _internal_quantity() const;
  public:
  const ::google::fhir::stu3::proto::Quantity& quantity() const;
  ::google::fhir::stu3::proto::Quantity* release_quantity();
  ::google::fhir::stu3::proto::Quantity* mutable_quantity();
  void set_allocated_quantity(::google::fhir::stu3::proto::Quantity* quantity);

  // .google.fhir.stu3.proto.Range range = 32;
  bool has_range() const;
  void clear_range();
  static const int kRangeFieldNumber = 32;
  private:
  const ::google::fhir::stu3::proto::Range& _internal_range() const;
  public:
  const ::google::fhir::stu3::proto::Range& range() const;
  ::google::fhir::stu3::proto::Range* release_range();
  ::google::fhir::stu3::proto::Range* mutable_range();
  void set_allocated_range(::google::fhir::stu3::proto::Range* range);

  // .google.fhir.stu3.proto.Ratio ratio = 33;
  bool has_ratio() const;
  void clear_ratio();
  static const int kRatioFieldNumber = 33;
  private:
  const ::google::fhir::stu3::proto::Ratio& _internal_ratio() const;
  public:
  const ::google::fhir::stu3::proto::Ratio& ratio() const;
  ::google::fhir::stu3::proto::Ratio* release_ratio();
  ::google::fhir::stu3::proto::Ratio* mutable_ratio();
  void set_allocated_ratio(::google::fhir::stu3::proto::Ratio* ratio);

  // .google.fhir.stu3.proto.Reference reference = 34;
  bool has_reference() const;
  void clear_reference();
  static const int kReferenceFieldNumber = 34;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_reference() const;
  public:
  const ::google::fhir::stu3::proto::Reference& reference() const;
  ::google::fhir::stu3::proto::Reference* release_reference();
  ::google::fhir::stu3::proto::Reference* mutable_reference();
  void set_allocated_reference(::google::fhir::stu3::proto::Reference* reference);

  // .google.fhir.stu3.proto.SampledData sampled_data = 35;
  bool has_sampled_data() const;
  void clear_sampled_data();
  static const int kSampledDataFieldNumber = 35;
  private:
  const ::google::fhir::stu3::proto::SampledData& _internal_sampled_data() const;
  public:
  const ::google::fhir::stu3::proto::SampledData& sampled_data() const;
  ::google::fhir::stu3::proto::SampledData* release_sampled_data();
  ::google::fhir::stu3::proto::SampledData* mutable_sampled_data();
  void set_allocated_sampled_data(::google::fhir::stu3::proto::SampledData* sampled_data);

  // .google.fhir.stu3.proto.Signature signature = 36;
  bool has_signature() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 36;
  private:
  const ::google::fhir::stu3::proto::Signature& _internal_signature() const;
  public:
  const ::google::fhir::stu3::proto::Signature& signature() const;
  ::google::fhir::stu3::proto::Signature* release_signature();
  ::google::fhir::stu3::proto::Signature* mutable_signature();
  void set_allocated_signature(::google::fhir::stu3::proto::Signature* signature);

  // .google.fhir.stu3.proto.Timing timing = 37;
  bool has_timing() const;
  void clear_timing();
  static const int kTimingFieldNumber = 37;
  private:
  const ::google::fhir::stu3::proto::Timing& _internal_timing() const;
  public:
  const ::google::fhir::stu3::proto::Timing& timing() const;
  ::google::fhir::stu3::proto::Timing* release_timing();
  ::google::fhir::stu3::proto::Timing* mutable_timing();
  void set_allocated_timing(::google::fhir::stu3::proto::Timing* timing);

  // .google.fhir.stu3.proto.Meta meta = 38;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 38;
  private:
  const ::google::fhir::stu3::proto::Meta& _internal_meta() const;
  public:
  const ::google::fhir::stu3::proto::Meta& meta() const;
  ::google::fhir::stu3::proto::Meta* release_meta();
  ::google::fhir::stu3::proto::Meta* mutable_meta();
  void set_allocated_meta(::google::fhir::stu3::proto::Meta* meta);

  void clear_default_value();
  DefaultValueCase default_value_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ElementDefinition.DefaultValue)
 private:
  void set_has_base64_binary();
  void set_has_boolean();
  void set_has_code();
  void set_has_date();
  void set_has_date_time();
  void set_has_decimal();
  void set_has_id();
  void set_has_instant();
  void set_has_integer();
  void set_has_markdown();
  void set_has_oid();
  void set_has_positive_int();
  void set_has_string_value();
  void set_has_time();
  void set_has_unsigned_int();
  void set_has_uri();
  void set_has_address();
  void set_has_age();
  void set_has_annotation();
  void set_has_attachment();
  void set_has_codeable_concept();
  void set_has_coding();
  void set_has_contact_point();
  void set_has_count();
  void set_has_distance();
  void set_has_duration();
  void set_has_human_name();
  void set_has_identifier();
  void set_has_money();
  void set_has_period();
  void set_has_quantity();
  void set_has_range();
  void set_has_ratio();
  void set_has_reference();
  void set_has_sampled_data();
  void set_has_signature();
  void set_has_timing();
  void set_has_meta();

  inline bool has_default_value() const;
  inline void clear_has_default_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union DefaultValueUnion {
    DefaultValueUnion() {}
    ::google::fhir::stu3::proto::Base64Binary* base64_binary_;
    ::google::fhir::stu3::proto::Boolean* boolean_;
    ::google::fhir::stu3::proto::Code* code_;
    ::google::fhir::stu3::proto::Date* date_;
    ::google::fhir::stu3::proto::DateTime* date_time_;
    ::google::fhir::stu3::proto::Decimal* decimal_;
    ::google::fhir::stu3::proto::Id* id_;
    ::google::fhir::stu3::proto::Instant* instant_;
    ::google::fhir::stu3::proto::Integer* integer_;
    ::google::fhir::stu3::proto::Markdown* markdown_;
    ::google::fhir::stu3::proto::Oid* oid_;
    ::google::fhir::stu3::proto::PositiveInt* positive_int_;
    ::google::fhir::stu3::proto::String* string_value_;
    ::google::fhir::stu3::proto::Time* time_;
    ::google::fhir::stu3::proto::UnsignedInt* unsigned_int_;
    ::google::fhir::stu3::proto::Uri* uri_;
    ::google::fhir::stu3::proto::Address* address_;
    ::google::fhir::stu3::proto::Age* age_;
    ::google::fhir::stu3::proto::Annotation* annotation_;
    ::google::fhir::stu3::proto::Attachment* attachment_;
    ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
    ::google::fhir::stu3::proto::Coding* coding_;
    ::google::fhir::stu3::proto::ContactPoint* contact_point_;
    ::google::fhir::stu3::proto::Count* count_;
    ::google::fhir::stu3::proto::Distance* distance_;
    ::google::fhir::stu3::proto::Duration* duration_;
    ::google::fhir::stu3::proto::HumanName* human_name_;
    ::google::fhir::stu3::proto::Identifier* identifier_;
    ::google::fhir::stu3::proto::Money* money_;
    ::google::fhir::stu3::proto::Period* period_;
    ::google::fhir::stu3::proto::Quantity* quantity_;
    ::google::fhir::stu3::proto::Range* range_;
    ::google::fhir::stu3::proto::Ratio* ratio_;
    ::google::fhir::stu3::proto::Reference* reference_;
    ::google::fhir::stu3::proto::SampledData* sampled_data_;
    ::google::fhir::stu3::proto::Signature* signature_;
    ::google::fhir::stu3::proto::Timing* timing_;
    ::google::fhir::stu3::proto::Meta* meta_;
  } default_value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ElementDefinition_Fixed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ElementDefinition.Fixed) */ {
 public:
  ElementDefinition_Fixed();
  virtual ~ElementDefinition_Fixed();

  ElementDefinition_Fixed(const ElementDefinition_Fixed& from);

  inline ElementDefinition_Fixed& operator=(const ElementDefinition_Fixed& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ElementDefinition_Fixed(ElementDefinition_Fixed&& from) noexcept
    : ElementDefinition_Fixed() {
    *this = ::std::move(from);
  }

  inline ElementDefinition_Fixed& operator=(ElementDefinition_Fixed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ElementDefinition_Fixed& default_instance();

  enum FixedCase {
    kBase64Binary = 1,
    kBoolean = 2,
    kCode = 3,
    kDate = 4,
    kDateTime = 5,
    kDecimal = 6,
    kId = 7,
    kInstant = 8,
    kInteger = 9,
    kMarkdown = 10,
    kOid = 11,
    kPositiveInt = 12,
    kStringValue = 13,
    kTime = 14,
    kUnsignedInt = 15,
    kUri = 16,
    kAddress = 17,
    kAge = 18,
    kAnnotation = 19,
    kAttachment = 20,
    kCodeableConcept = 21,
    kCoding = 22,
    kContactPoint = 23,
    kCount = 24,
    kDistance = 25,
    kDuration = 26,
    kHumanName = 27,
    kIdentifier = 28,
    kMoney = 29,
    kPeriod = 30,
    kQuantity = 31,
    kRange = 32,
    kRatio = 33,
    kReference = 34,
    kSampledData = 35,
    kSignature = 36,
    kTiming = 37,
    kMeta = 38,
    FIXED_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ElementDefinition_Fixed* internal_default_instance() {
    return reinterpret_cast<const ElementDefinition_Fixed*>(
               &_ElementDefinition_Fixed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(ElementDefinition_Fixed* other);
  friend void swap(ElementDefinition_Fixed& a, ElementDefinition_Fixed& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ElementDefinition_Fixed* New() const final {
    return CreateMaybeMessage<ElementDefinition_Fixed>(NULL);
  }

  ElementDefinition_Fixed* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ElementDefinition_Fixed>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ElementDefinition_Fixed& from);
  void MergeFrom(const ElementDefinition_Fixed& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ElementDefinition_Fixed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.Base64Binary base64_binary = 1;
  bool has_base64_binary() const;
  void clear_base64_binary();
  static const int kBase64BinaryFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Base64Binary& _internal_base64_binary() const;
  public:
  const ::google::fhir::stu3::proto::Base64Binary& base64_binary() const;
  ::google::fhir::stu3::proto::Base64Binary* release_base64_binary();
  ::google::fhir::stu3::proto::Base64Binary* mutable_base64_binary();
  void set_allocated_base64_binary(::google::fhir::stu3::proto::Base64Binary* base64_binary);

  // .google.fhir.stu3.proto.Boolean boolean = 2;
  bool has_boolean() const;
  void clear_boolean();
  static const int kBooleanFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Boolean& _internal_boolean() const;
  public:
  const ::google::fhir::stu3::proto::Boolean& boolean() const;
  ::google::fhir::stu3::proto::Boolean* release_boolean();
  ::google::fhir::stu3::proto::Boolean* mutable_boolean();
  void set_allocated_boolean(::google::fhir::stu3::proto::Boolean* boolean);

  // .google.fhir.stu3.proto.Code code = 3;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Code& _internal_code() const;
  public:
  const ::google::fhir::stu3::proto::Code& code() const;
  ::google::fhir::stu3::proto::Code* release_code();
  ::google::fhir::stu3::proto::Code* mutable_code();
  void set_allocated_code(::google::fhir::stu3::proto::Code* code);

  // .google.fhir.stu3.proto.Date date = 4;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::Date& _internal_date() const;
  public:
  const ::google::fhir::stu3::proto::Date& date() const;
  ::google::fhir::stu3::proto::Date* release_date();
  ::google::fhir::stu3::proto::Date* mutable_date();
  void set_allocated_date(::google::fhir::stu3::proto::Date* date);

  // .google.fhir.stu3.proto.DateTime date_time = 5;
  bool has_date_time() const;
  void clear_date_time();
  static const int kDateTimeFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_date_time() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& date_time() const;
  ::google::fhir::stu3::proto::DateTime* release_date_time();
  ::google::fhir::stu3::proto::DateTime* mutable_date_time();
  void set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time);

  // .google.fhir.stu3.proto.Decimal decimal = 6;
  bool has_decimal() const;
  void clear_decimal();
  static const int kDecimalFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::Decimal& _internal_decimal() const;
  public:
  const ::google::fhir::stu3::proto::Decimal& decimal() const;
  ::google::fhir::stu3::proto::Decimal* release_decimal();
  ::google::fhir::stu3::proto::Decimal* mutable_decimal();
  void set_allocated_decimal(::google::fhir::stu3::proto::Decimal* decimal);

  // .google.fhir.stu3.proto.Id id = 7;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 7;
  private:
  const ::google::fhir::stu3::proto::Id& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::Id& id() const;
  ::google::fhir::stu3::proto::Id* release_id();
  ::google::fhir::stu3::proto::Id* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::Id* id);

  // .google.fhir.stu3.proto.Instant instant = 8;
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 8;
  private:
  const ::google::fhir::stu3::proto::Instant& _internal_instant() const;
  public:
  const ::google::fhir::stu3::proto::Instant& instant() const;
  ::google::fhir::stu3::proto::Instant* release_instant();
  ::google::fhir::stu3::proto::Instant* mutable_instant();
  void set_allocated_instant(::google::fhir::stu3::proto::Instant* instant);

  // .google.fhir.stu3.proto.Integer integer = 9;
  bool has_integer() const;
  void clear_integer();
  static const int kIntegerFieldNumber = 9;
  private:
  const ::google::fhir::stu3::proto::Integer& _internal_integer() const;
  public:
  const ::google::fhir::stu3::proto::Integer& integer() const;
  ::google::fhir::stu3::proto::Integer* release_integer();
  ::google::fhir::stu3::proto::Integer* mutable_integer();
  void set_allocated_integer(::google::fhir::stu3::proto::Integer* integer);

  // .google.fhir.stu3.proto.Markdown markdown = 10;
  bool has_markdown() const;
  void clear_markdown();
  static const int kMarkdownFieldNumber = 10;
  private:
  const ::google::fhir::stu3::proto::Markdown& _internal_markdown() const;
  public:
  const ::google::fhir::stu3::proto::Markdown& markdown() const;
  ::google::fhir::stu3::proto::Markdown* release_markdown();
  ::google::fhir::stu3::proto::Markdown* mutable_markdown();
  void set_allocated_markdown(::google::fhir::stu3::proto::Markdown* markdown);

  // .google.fhir.stu3.proto.Oid oid = 11;
  bool has_oid() const;
  void clear_oid();
  static const int kOidFieldNumber = 11;
  private:
  const ::google::fhir::stu3::proto::Oid& _internal_oid() const;
  public:
  const ::google::fhir::stu3::proto::Oid& oid() const;
  ::google::fhir::stu3::proto::Oid* release_oid();
  ::google::fhir::stu3::proto::Oid* mutable_oid();
  void set_allocated_oid(::google::fhir::stu3::proto::Oid* oid);

  // .google.fhir.stu3.proto.PositiveInt positive_int = 12;
  bool has_positive_int() const;
  void clear_positive_int();
  static const int kPositiveIntFieldNumber = 12;
  private:
  const ::google::fhir::stu3::proto::PositiveInt& _internal_positive_int() const;
  public:
  const ::google::fhir::stu3::proto::PositiveInt& positive_int() const;
  ::google::fhir::stu3::proto::PositiveInt* release_positive_int();
  ::google::fhir::stu3::proto::PositiveInt* mutable_positive_int();
  void set_allocated_positive_int(::google::fhir::stu3::proto::PositiveInt* positive_int);

  // .google.fhir.stu3.proto.String string_value = 13[json_name = "string"];
  bool has_string_value() const;
  void clear_string_value();
  static const int kStringValueFieldNumber = 13;
  private:
  const ::google::fhir::stu3::proto::String& _internal_string_value() const;
  public:
  const ::google::fhir::stu3::proto::String& string_value() const;
  ::google::fhir::stu3::proto::String* release_string_value();
  ::google::fhir::stu3::proto::String* mutable_string_value();
  void set_allocated_string_value(::google::fhir::stu3::proto::String* string_value);

  // .google.fhir.stu3.proto.Time time = 14;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 14;
  private:
  const ::google::fhir::stu3::proto::Time& _internal_time() const;
  public:
  const ::google::fhir::stu3::proto::Time& time() const;
  ::google::fhir::stu3::proto::Time* release_time();
  ::google::fhir::stu3::proto::Time* mutable_time();
  void set_allocated_time(::google::fhir::stu3::proto::Time* time);

  // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
  bool has_unsigned_int() const;
  void clear_unsigned_int();
  static const int kUnsignedIntFieldNumber = 15;
  private:
  const ::google::fhir::stu3::proto::UnsignedInt& _internal_unsigned_int() const;
  public:
  const ::google::fhir::stu3::proto::UnsignedInt& unsigned_int() const;
  ::google::fhir::stu3::proto::UnsignedInt* release_unsigned_int();
  ::google::fhir::stu3::proto::UnsignedInt* mutable_unsigned_int();
  void set_allocated_unsigned_int(::google::fhir::stu3::proto::UnsignedInt* unsigned_int);

  // .google.fhir.stu3.proto.Uri uri = 16;
  bool has_uri() const;
  void clear_uri();
  static const int kUriFieldNumber = 16;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_uri() const;
  public:
  const ::google::fhir::stu3::proto::Uri& uri() const;
  ::google::fhir::stu3::proto::Uri* release_uri();
  ::google::fhir::stu3::proto::Uri* mutable_uri();
  void set_allocated_uri(::google::fhir::stu3::proto::Uri* uri);

  // .google.fhir.stu3.proto.Address address = 17;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 17;
  private:
  const ::google::fhir::stu3::proto::Address& _internal_address() const;
  public:
  const ::google::fhir::stu3::proto::Address& address() const;
  ::google::fhir::stu3::proto::Address* release_address();
  ::google::fhir::stu3::proto::Address* mutable_address();
  void set_allocated_address(::google::fhir::stu3::proto::Address* address);

  // .google.fhir.stu3.proto.Age age = 18;
  bool has_age() const;
  void clear_age();
  static const int kAgeFieldNumber = 18;
  private:
  const ::google::fhir::stu3::proto::Age& _internal_age() const;
  public:
  const ::google::fhir::stu3::proto::Age& age() const;
  ::google::fhir::stu3::proto::Age* release_age();
  ::google::fhir::stu3::proto::Age* mutable_age();
  void set_allocated_age(::google::fhir::stu3::proto::Age* age);

  // .google.fhir.stu3.proto.Annotation annotation = 19;
  bool has_annotation() const;
  void clear_annotation();
  static const int kAnnotationFieldNumber = 19;
  private:
  const ::google::fhir::stu3::proto::Annotation& _internal_annotation() const;
  public:
  const ::google::fhir::stu3::proto::Annotation& annotation() const;
  ::google::fhir::stu3::proto::Annotation* release_annotation();
  ::google::fhir::stu3::proto::Annotation* mutable_annotation();
  void set_allocated_annotation(::google::fhir::stu3::proto::Annotation* annotation);

  // .google.fhir.stu3.proto.Attachment attachment = 20;
  bool has_attachment() const;
  void clear_attachment();
  static const int kAttachmentFieldNumber = 20;
  private:
  const ::google::fhir::stu3::proto::Attachment& _internal_attachment() const;
  public:
  const ::google::fhir::stu3::proto::Attachment& attachment() const;
  ::google::fhir::stu3::proto::Attachment* release_attachment();
  ::google::fhir::stu3::proto::Attachment* mutable_attachment();
  void set_allocated_attachment(::google::fhir::stu3::proto::Attachment* attachment);

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
  bool has_codeable_concept() const;
  void clear_codeable_concept();
  static const int kCodeableConceptFieldNumber = 21;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_codeable_concept() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& codeable_concept() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_codeable_concept();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_codeable_concept();
  void set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept);

  // .google.fhir.stu3.proto.Coding coding = 22;
  bool has_coding() const;
  void clear_coding();
  static const int kCodingFieldNumber = 22;
  private:
  const ::google::fhir::stu3::proto::Coding& _internal_coding() const;
  public:
  const ::google::fhir::stu3::proto::Coding& coding() const;
  ::google::fhir::stu3::proto::Coding* release_coding();
  ::google::fhir::stu3::proto::Coding* mutable_coding();
  void set_allocated_coding(::google::fhir::stu3::proto::Coding* coding);

  // .google.fhir.stu3.proto.ContactPoint contact_point = 23;
  bool has_contact_point() const;
  void clear_contact_point();
  static const int kContactPointFieldNumber = 23;
  private:
  const ::google::fhir::stu3::proto::ContactPoint& _internal_contact_point() const;
  public:
  const ::google::fhir::stu3::proto::ContactPoint& contact_point() const;
  ::google::fhir::stu3::proto::ContactPoint* release_contact_point();
  ::google::fhir::stu3::proto::ContactPoint* mutable_contact_point();
  void set_allocated_contact_point(::google::fhir::stu3::proto::ContactPoint* contact_point);

  // .google.fhir.stu3.proto.Count count = 24;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 24;
  private:
  const ::google::fhir::stu3::proto::Count& _internal_count() const;
  public:
  const ::google::fhir::stu3::proto::Count& count() const;
  ::google::fhir::stu3::proto::Count* release_count();
  ::google::fhir::stu3::proto::Count* mutable_count();
  void set_allocated_count(::google::fhir::stu3::proto::Count* count);

  // .google.fhir.stu3.proto.Distance distance = 25;
  bool has_distance() const;
  void clear_distance();
  static const int kDistanceFieldNumber = 25;
  private:
  const ::google::fhir::stu3::proto::Distance& _internal_distance() const;
  public:
  const ::google::fhir::stu3::proto::Distance& distance() const;
  ::google::fhir::stu3::proto::Distance* release_distance();
  ::google::fhir::stu3::proto::Distance* mutable_distance();
  void set_allocated_distance(::google::fhir::stu3::proto::Distance* distance);

  // .google.fhir.stu3.proto.Duration duration = 26;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 26;
  private:
  const ::google::fhir::stu3::proto::Duration& _internal_duration() const;
  public:
  const ::google::fhir::stu3::proto::Duration& duration() const;
  ::google::fhir::stu3::proto::Duration* release_duration();
  ::google::fhir::stu3::proto::Duration* mutable_duration();
  void set_allocated_duration(::google::fhir::stu3::proto::Duration* duration);

  // .google.fhir.stu3.proto.HumanName human_name = 27;
  bool has_human_name() const;
  void clear_human_name();
  static const int kHumanNameFieldNumber = 27;
  private:
  const ::google::fhir::stu3::proto::HumanName& _internal_human_name() const;
  public:
  const ::google::fhir::stu3::proto::HumanName& human_name() const;
  ::google::fhir::stu3::proto::HumanName* release_human_name();
  ::google::fhir::stu3::proto::HumanName* mutable_human_name();
  void set_allocated_human_name(::google::fhir::stu3::proto::HumanName* human_name);

  // .google.fhir.stu3.proto.Identifier identifier = 28;
  bool has_identifier() const;
  void clear_identifier();
  static const int kIdentifierFieldNumber = 28;
  private:
  const ::google::fhir::stu3::proto::Identifier& _internal_identifier() const;
  public:
  const ::google::fhir::stu3::proto::Identifier& identifier() const;
  ::google::fhir::stu3::proto::Identifier* release_identifier();
  ::google::fhir::stu3::proto::Identifier* mutable_identifier();
  void set_allocated_identifier(::google::fhir::stu3::proto::Identifier* identifier);

  // .google.fhir.stu3.proto.Money money = 29;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 29;
  private:
  const ::google::fhir::stu3::proto::Money& _internal_money() const;
  public:
  const ::google::fhir::stu3::proto::Money& money() const;
  ::google::fhir::stu3::proto::Money* release_money();
  ::google::fhir::stu3::proto::Money* mutable_money();
  void set_allocated_money(::google::fhir::stu3::proto::Money* money);

  // .google.fhir.stu3.proto.Period period = 30;
  bool has_period() const;
  void clear_period();
  static const int kPeriodFieldNumber = 30;
  private:
  const ::google::fhir::stu3::proto::Period& _internal_period() const;
  public:
  const ::google::fhir::stu3::proto::Period& period() const;
  ::google::fhir::stu3::proto::Period* release_period();
  ::google::fhir::stu3::proto::Period* mutable_period();
  void set_allocated_period(::google::fhir::stu3::proto::Period* period);

  // .google.fhir.stu3.proto.Quantity quantity = 31;
  bool has_quantity() const;
  void clear_quantity();
  static const int kQuantityFieldNumber = 31;
  private:
  const ::google::fhir::stu3::proto::Quantity& _internal_quantity() const;
  public:
  const ::google::fhir::stu3::proto::Quantity& quantity() const;
  ::google::fhir::stu3::proto::Quantity* release_quantity();
  ::google::fhir::stu3::proto::Quantity* mutable_quantity();
  void set_allocated_quantity(::google::fhir::stu3::proto::Quantity* quantity);

  // .google.fhir.stu3.proto.Range range = 32;
  bool has_range() const;
  void clear_range();
  static const int kRangeFieldNumber = 32;
  private:
  const ::google::fhir::stu3::proto::Range& _internal_range() const;
  public:
  const ::google::fhir::stu3::proto::Range& range() const;
  ::google::fhir::stu3::proto::Range* release_range();
  ::google::fhir::stu3::proto::Range* mutable_range();
  void set_allocated_range(::google::fhir::stu3::proto::Range* range);

  // .google.fhir.stu3.proto.Ratio ratio = 33;
  bool has_ratio() const;
  void clear_ratio();
  static const int kRatioFieldNumber = 33;
  private:
  const ::google::fhir::stu3::proto::Ratio& _internal_ratio() const;
  public:
  const ::google::fhir::stu3::proto::Ratio& ratio() const;
  ::google::fhir::stu3::proto::Ratio* release_ratio();
  ::google::fhir::stu3::proto::Ratio* mutable_ratio();
  void set_allocated_ratio(::google::fhir::stu3::proto::Ratio* ratio);

  // .google.fhir.stu3.proto.Reference reference = 34;
  bool has_reference() const;
  void clear_reference();
  static const int kReferenceFieldNumber = 34;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_reference() const;
  public:
  const ::google::fhir::stu3::proto::Reference& reference() const;
  ::google::fhir::stu3::proto::Reference* release_reference();
  ::google::fhir::stu3::proto::Reference* mutable_reference();
  void set_allocated_reference(::google::fhir::stu3::proto::Reference* reference);

  // .google.fhir.stu3.proto.SampledData sampled_data = 35;
  bool has_sampled_data() const;
  void clear_sampled_data();
  static const int kSampledDataFieldNumber = 35;
  private:
  const ::google::fhir::stu3::proto::SampledData& _internal_sampled_data() const;
  public:
  const ::google::fhir::stu3::proto::SampledData& sampled_data() const;
  ::google::fhir::stu3::proto::SampledData* release_sampled_data();
  ::google::fhir::stu3::proto::SampledData* mutable_sampled_data();
  void set_allocated_sampled_data(::google::fhir::stu3::proto::SampledData* sampled_data);

  // .google.fhir.stu3.proto.Signature signature = 36;
  bool has_signature() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 36;
  private:
  const ::google::fhir::stu3::proto::Signature& _internal_signature() const;
  public:
  const ::google::fhir::stu3::proto::Signature& signature() const;
  ::google::fhir::stu3::proto::Signature* release_signature();
  ::google::fhir::stu3::proto::Signature* mutable_signature();
  void set_allocated_signature(::google::fhir::stu3::proto::Signature* signature);

  // .google.fhir.stu3.proto.Timing timing = 37;
  bool has_timing() const;
  void clear_timing();
  static const int kTimingFieldNumber = 37;
  private:
  const ::google::fhir::stu3::proto::Timing& _internal_timing() const;
  public:
  const ::google::fhir::stu3::proto::Timing& timing() const;
  ::google::fhir::stu3::proto::Timing* release_timing();
  ::google::fhir::stu3::proto::Timing* mutable_timing();
  void set_allocated_timing(::google::fhir::stu3::proto::Timing* timing);

  // .google.fhir.stu3.proto.Meta meta = 38;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 38;
  private:
  const ::google::fhir::stu3::proto::Meta& _internal_meta() const;
  public:
  const ::google::fhir::stu3::proto::Meta& meta() const;
  ::google::fhir::stu3::proto::Meta* release_meta();
  ::google::fhir::stu3::proto::Meta* mutable_meta();
  void set_allocated_meta(::google::fhir::stu3::proto::Meta* meta);

  void clear_fixed();
  FixedCase fixed_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ElementDefinition.Fixed)
 private:
  void set_has_base64_binary();
  void set_has_boolean();
  void set_has_code();
  void set_has_date();
  void set_has_date_time();
  void set_has_decimal();
  void set_has_id();
  void set_has_instant();
  void set_has_integer();
  void set_has_markdown();
  void set_has_oid();
  void set_has_positive_int();
  void set_has_string_value();
  void set_has_time();
  void set_has_unsigned_int();
  void set_has_uri();
  void set_has_address();
  void set_has_age();
  void set_has_annotation();
  void set_has_attachment();
  void set_has_codeable_concept();
  void set_has_coding();
  void set_has_contact_point();
  void set_has_count();
  void set_has_distance();
  void set_has_duration();
  void set_has_human_name();
  void set_has_identifier();
  void set_has_money();
  void set_has_period();
  void set_has_quantity();
  void set_has_range();
  void set_has_ratio();
  void set_has_reference();
  void set_has_sampled_data();
  void set_has_signature();
  void set_has_timing();
  void set_has_meta();

  inline bool has_fixed() const;
  inline void clear_has_fixed();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union FixedUnion {
    FixedUnion() {}
    ::google::fhir::stu3::proto::Base64Binary* base64_binary_;
    ::google::fhir::stu3::proto::Boolean* boolean_;
    ::google::fhir::stu3::proto::Code* code_;
    ::google::fhir::stu3::proto::Date* date_;
    ::google::fhir::stu3::proto::DateTime* date_time_;
    ::google::fhir::stu3::proto::Decimal* decimal_;
    ::google::fhir::stu3::proto::Id* id_;
    ::google::fhir::stu3::proto::Instant* instant_;
    ::google::fhir::stu3::proto::Integer* integer_;
    ::google::fhir::stu3::proto::Markdown* markdown_;
    ::google::fhir::stu3::proto::Oid* oid_;
    ::google::fhir::stu3::proto::PositiveInt* positive_int_;
    ::google::fhir::stu3::proto::String* string_value_;
    ::google::fhir::stu3::proto::Time* time_;
    ::google::fhir::stu3::proto::UnsignedInt* unsigned_int_;
    ::google::fhir::stu3::proto::Uri* uri_;
    ::google::fhir::stu3::proto::Address* address_;
    ::google::fhir::stu3::proto::Age* age_;
    ::google::fhir::stu3::proto::Annotation* annotation_;
    ::google::fhir::stu3::proto::Attachment* attachment_;
    ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
    ::google::fhir::stu3::proto::Coding* coding_;
    ::google::fhir::stu3::proto::ContactPoint* contact_point_;
    ::google::fhir::stu3::proto::Count* count_;
    ::google::fhir::stu3::proto::Distance* distance_;
    ::google::fhir::stu3::proto::Duration* duration_;
    ::google::fhir::stu3::proto::HumanName* human_name_;
    ::google::fhir::stu3::proto::Identifier* identifier_;
    ::google::fhir::stu3::proto::Money* money_;
    ::google::fhir::stu3::proto::Period* period_;
    ::google::fhir::stu3::proto::Quantity* quantity_;
    ::google::fhir::stu3::proto::Range* range_;
    ::google::fhir::stu3::proto::Ratio* ratio_;
    ::google::fhir::stu3::proto::Reference* reference_;
    ::google::fhir::stu3::proto::SampledData* sampled_data_;
    ::google::fhir::stu3::proto::Signature* signature_;
    ::google::fhir::stu3::proto::Timing* timing_;
    ::google::fhir::stu3::proto::Meta* meta_;
  } fixed_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ElementDefinition_Pattern : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ElementDefinition.Pattern) */ {
 public:
  ElementDefinition_Pattern();
  virtual ~ElementDefinition_Pattern();

  ElementDefinition_Pattern(const ElementDefinition_Pattern& from);

  inline ElementDefinition_Pattern& operator=(const ElementDefinition_Pattern& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ElementDefinition_Pattern(ElementDefinition_Pattern&& from) noexcept
    : ElementDefinition_Pattern() {
    *this = ::std::move(from);
  }

  inline ElementDefinition_Pattern& operator=(ElementDefinition_Pattern&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ElementDefinition_Pattern& default_instance();

  enum PatternCase {
    kBase64Binary = 1,
    kBoolean = 2,
    kCode = 3,
    kDate = 4,
    kDateTime = 5,
    kDecimal = 6,
    kId = 7,
    kInstant = 8,
    kInteger = 9,
    kMarkdown = 10,
    kOid = 11,
    kPositiveInt = 12,
    kStringValue = 13,
    kTime = 14,
    kUnsignedInt = 15,
    kUri = 16,
    kAddress = 17,
    kAge = 18,
    kAnnotation = 19,
    kAttachment = 20,
    kCodeableConcept = 21,
    kCoding = 22,
    kContactPoint = 23,
    kCount = 24,
    kDistance = 25,
    kDuration = 26,
    kHumanName = 27,
    kIdentifier = 28,
    kMoney = 29,
    kPeriod = 30,
    kQuantity = 31,
    kRange = 32,
    kRatio = 33,
    kReference = 34,
    kSampledData = 35,
    kSignature = 36,
    kTiming = 37,
    kMeta = 38,
    PATTERN_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ElementDefinition_Pattern* internal_default_instance() {
    return reinterpret_cast<const ElementDefinition_Pattern*>(
               &_ElementDefinition_Pattern_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(ElementDefinition_Pattern* other);
  friend void swap(ElementDefinition_Pattern& a, ElementDefinition_Pattern& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ElementDefinition_Pattern* New() const final {
    return CreateMaybeMessage<ElementDefinition_Pattern>(NULL);
  }

  ElementDefinition_Pattern* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ElementDefinition_Pattern>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ElementDefinition_Pattern& from);
  void MergeFrom(const ElementDefinition_Pattern& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ElementDefinition_Pattern* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.Base64Binary base64_binary = 1;
  bool has_base64_binary() const;
  void clear_base64_binary();
  static const int kBase64BinaryFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Base64Binary& _internal_base64_binary() const;
  public:
  const ::google::fhir::stu3::proto::Base64Binary& base64_binary() const;
  ::google::fhir::stu3::proto::Base64Binary* release_base64_binary();
  ::google::fhir::stu3::proto::Base64Binary* mutable_base64_binary();
  void set_allocated_base64_binary(::google::fhir::stu3::proto::Base64Binary* base64_binary);

  // .google.fhir.stu3.proto.Boolean boolean = 2;
  bool has_boolean() const;
  void clear_boolean();
  static const int kBooleanFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Boolean& _internal_boolean() const;
  public:
  const ::google::fhir::stu3::proto::Boolean& boolean() const;
  ::google::fhir::stu3::proto::Boolean* release_boolean();
  ::google::fhir::stu3::proto::Boolean* mutable_boolean();
  void set_allocated_boolean(::google::fhir::stu3::proto::Boolean* boolean);

  // .google.fhir.stu3.proto.Code code = 3;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Code& _internal_code() const;
  public:
  const ::google::fhir::stu3::proto::Code& code() const;
  ::google::fhir::stu3::proto::Code* release_code();
  ::google::fhir::stu3::proto::Code* mutable_code();
  void set_allocated_code(::google::fhir::stu3::proto::Code* code);

  // .google.fhir.stu3.proto.Date date = 4;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::Date& _internal_date() const;
  public:
  const ::google::fhir::stu3::proto::Date& date() const;
  ::google::fhir::stu3::proto::Date* release_date();
  ::google::fhir::stu3::proto::Date* mutable_date();
  void set_allocated_date(::google::fhir::stu3::proto::Date* date);

  // .google.fhir.stu3.proto.DateTime date_time = 5;
  bool has_date_time() const;
  void clear_date_time();
  static const int kDateTimeFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_date_time() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& date_time() const;
  ::google::fhir::stu3::proto::DateTime* release_date_time();
  ::google::fhir::stu3::proto::DateTime* mutable_date_time();
  void set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time);

  // .google.fhir.stu3.proto.Decimal decimal = 6;
  bool has_decimal() const;
  void clear_decimal();
  static const int kDecimalFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::Decimal& _internal_decimal() const;
  public:
  const ::google::fhir::stu3::proto::Decimal& decimal() const;
  ::google::fhir::stu3::proto::Decimal* release_decimal();
  ::google::fhir::stu3::proto::Decimal* mutable_decimal();
  void set_allocated_decimal(::google::fhir::stu3::proto::Decimal* decimal);

  // .google.fhir.stu3.proto.Id id = 7;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 7;
  private:
  const ::google::fhir::stu3::proto::Id& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::Id& id() const;
  ::google::fhir::stu3::proto::Id* release_id();
  ::google::fhir::stu3::proto::Id* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::Id* id);

  // .google.fhir.stu3.proto.Instant instant = 8;
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 8;
  private:
  const ::google::fhir::stu3::proto::Instant& _internal_instant() const;
  public:
  const ::google::fhir::stu3::proto::Instant& instant() const;
  ::google::fhir::stu3::proto::Instant* release_instant();
  ::google::fhir::stu3::proto::Instant* mutable_instant();
  void set_allocated_instant(::google::fhir::stu3::proto::Instant* instant);

  // .google.fhir.stu3.proto.Integer integer = 9;
  bool has_integer() const;
  void clear_integer();
  static const int kIntegerFieldNumber = 9;
  private:
  const ::google::fhir::stu3::proto::Integer& _internal_integer() const;
  public:
  const ::google::fhir::stu3::proto::Integer& integer() const;
  ::google::fhir::stu3::proto::Integer* release_integer();
  ::google::fhir::stu3::proto::Integer* mutable_integer();
  void set_allocated_integer(::google::fhir::stu3::proto::Integer* integer);

  // .google.fhir.stu3.proto.Markdown markdown = 10;
  bool has_markdown() const;
  void clear_markdown();
  static const int kMarkdownFieldNumber = 10;
  private:
  const ::google::fhir::stu3::proto::Markdown& _internal_markdown() const;
  public:
  const ::google::fhir::stu3::proto::Markdown& markdown() const;
  ::google::fhir::stu3::proto::Markdown* release_markdown();
  ::google::fhir::stu3::proto::Markdown* mutable_markdown();
  void set_allocated_markdown(::google::fhir::stu3::proto::Markdown* markdown);

  // .google.fhir.stu3.proto.Oid oid = 11;
  bool has_oid() const;
  void clear_oid();
  static const int kOidFieldNumber = 11;
  private:
  const ::google::fhir::stu3::proto::Oid& _internal_oid() const;
  public:
  const ::google::fhir::stu3::proto::Oid& oid() const;
  ::google::fhir::stu3::proto::Oid* release_oid();
  ::google::fhir::stu3::proto::Oid* mutable_oid();
  void set_allocated_oid(::google::fhir::stu3::proto::Oid* oid);

  // .google.fhir.stu3.proto.PositiveInt positive_int = 12;
  bool has_positive_int() const;
  void clear_positive_int();
  static const int kPositiveIntFieldNumber = 12;
  private:
  const ::google::fhir::stu3::proto::PositiveInt& _internal_positive_int() const;
  public:
  const ::google::fhir::stu3::proto::PositiveInt& positive_int() const;
  ::google::fhir::stu3::proto::PositiveInt* release_positive_int();
  ::google::fhir::stu3::proto::PositiveInt* mutable_positive_int();
  void set_allocated_positive_int(::google::fhir::stu3::proto::PositiveInt* positive_int);

  // .google.fhir.stu3.proto.String string_value = 13[json_name = "string"];
  bool has_string_value() const;
  void clear_string_value();
  static const int kStringValueFieldNumber = 13;
  private:
  const ::google::fhir::stu3::proto::String& _internal_string_value() const;
  public:
  const ::google::fhir::stu3::proto::String& string_value() const;
  ::google::fhir::stu3::proto::String* release_string_value();
  ::google::fhir::stu3::proto::String* mutable_string_value();
  void set_allocated_string_value(::google::fhir::stu3::proto::String* string_value);

  // .google.fhir.stu3.proto.Time time = 14;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 14;
  private:
  const ::google::fhir::stu3::proto::Time& _internal_time() const;
  public:
  const ::google::fhir::stu3::proto::Time& time() const;
  ::google::fhir::stu3::proto::Time* release_time();
  ::google::fhir::stu3::proto::Time* mutable_time();
  void set_allocated_time(::google::fhir::stu3::proto::Time* time);

  // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
  bool has_unsigned_int() const;
  void clear_unsigned_int();
  static const int kUnsignedIntFieldNumber = 15;
  private:
  const ::google::fhir::stu3::proto::UnsignedInt& _internal_unsigned_int() const;
  public:
  const ::google::fhir::stu3::proto::UnsignedInt& unsigned_int() const;
  ::google::fhir::stu3::proto::UnsignedInt* release_unsigned_int();
  ::google::fhir::stu3::proto::UnsignedInt* mutable_unsigned_int();
  void set_allocated_unsigned_int(::google::fhir::stu3::proto::UnsignedInt* unsigned_int);

  // .google.fhir.stu3.proto.Uri uri = 16;
  bool has_uri() const;
  void clear_uri();
  static const int kUriFieldNumber = 16;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_uri() const;
  public:
  const ::google::fhir::stu3::proto::Uri& uri() const;
  ::google::fhir::stu3::proto::Uri* release_uri();
  ::google::fhir::stu3::proto::Uri* mutable_uri();
  void set_allocated_uri(::google::fhir::stu3::proto::Uri* uri);

  // .google.fhir.stu3.proto.Address address = 17;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 17;
  private:
  const ::google::fhir::stu3::proto::Address& _internal_address() const;
  public:
  const ::google::fhir::stu3::proto::Address& address() const;
  ::google::fhir::stu3::proto::Address* release_address();
  ::google::fhir::stu3::proto::Address* mutable_address();
  void set_allocated_address(::google::fhir::stu3::proto::Address* address);

  // .google.fhir.stu3.proto.Age age = 18;
  bool has_age() const;
  void clear_age();
  static const int kAgeFieldNumber = 18;
  private:
  const ::google::fhir::stu3::proto::Age& _internal_age() const;
  public:
  const ::google::fhir::stu3::proto::Age& age() const;
  ::google::fhir::stu3::proto::Age* release_age();
  ::google::fhir::stu3::proto::Age* mutable_age();
  void set_allocated_age(::google::fhir::stu3::proto::Age* age);

  // .google.fhir.stu3.proto.Annotation annotation = 19;
  bool has_annotation() const;
  void clear_annotation();
  static const int kAnnotationFieldNumber = 19;
  private:
  const ::google::fhir::stu3::proto::Annotation& _internal_annotation() const;
  public:
  const ::google::fhir::stu3::proto::Annotation& annotation() const;
  ::google::fhir::stu3::proto::Annotation* release_annotation();
  ::google::fhir::stu3::proto::Annotation* mutable_annotation();
  void set_allocated_annotation(::google::fhir::stu3::proto::Annotation* annotation);

  // .google.fhir.stu3.proto.Attachment attachment = 20;
  bool has_attachment() const;
  void clear_attachment();
  static const int kAttachmentFieldNumber = 20;
  private:
  const ::google::fhir::stu3::proto::Attachment& _internal_attachment() const;
  public:
  const ::google::fhir::stu3::proto::Attachment& attachment() const;
  ::google::fhir::stu3::proto::Attachment* release_attachment();
  ::google::fhir::stu3::proto::Attachment* mutable_attachment();
  void set_allocated_attachment(::google::fhir::stu3::proto::Attachment* attachment);

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
  bool has_codeable_concept() const;
  void clear_codeable_concept();
  static const int kCodeableConceptFieldNumber = 21;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_codeable_concept() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& codeable_concept() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_codeable_concept();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_codeable_concept();
  void set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept);

  // .google.fhir.stu3.proto.Coding coding = 22;
  bool has_coding() const;
  void clear_coding();
  static const int kCodingFieldNumber = 22;
  private:
  const ::google::fhir::stu3::proto::Coding& _internal_coding() const;
  public:
  const ::google::fhir::stu3::proto::Coding& coding() const;
  ::google::fhir::stu3::proto::Coding* release_coding();
  ::google::fhir::stu3::proto::Coding* mutable_coding();
  void set_allocated_coding(::google::fhir::stu3::proto::Coding* coding);

  // .google.fhir.stu3.proto.ContactPoint contact_point = 23;
  bool has_contact_point() const;
  void clear_contact_point();
  static const int kContactPointFieldNumber = 23;
  private:
  const ::google::fhir::stu3::proto::ContactPoint& _internal_contact_point() const;
  public:
  const ::google::fhir::stu3::proto::ContactPoint& contact_point() const;
  ::google::fhir::stu3::proto::ContactPoint* release_contact_point();
  ::google::fhir::stu3::proto::ContactPoint* mutable_contact_point();
  void set_allocated_contact_point(::google::fhir::stu3::proto::ContactPoint* contact_point);

  // .google.fhir.stu3.proto.Count count = 24;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 24;
  private:
  const ::google::fhir::stu3::proto::Count& _internal_count() const;
  public:
  const ::google::fhir::stu3::proto::Count& count() const;
  ::google::fhir::stu3::proto::Count* release_count();
  ::google::fhir::stu3::proto::Count* mutable_count();
  void set_allocated_count(::google::fhir::stu3::proto::Count* count);

  // .google.fhir.stu3.proto.Distance distance = 25;
  bool has_distance() const;
  void clear_distance();
  static const int kDistanceFieldNumber = 25;
  private:
  const ::google::fhir::stu3::proto::Distance& _internal_distance() const;
  public:
  const ::google::fhir::stu3::proto::Distance& distance() const;
  ::google::fhir::stu3::proto::Distance* release_distance();
  ::google::fhir::stu3::proto::Distance* mutable_distance();
  void set_allocated_distance(::google::fhir::stu3::proto::Distance* distance);

  // .google.fhir.stu3.proto.Duration duration = 26;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 26;
  private:
  const ::google::fhir::stu3::proto::Duration& _internal_duration() const;
  public:
  const ::google::fhir::stu3::proto::Duration& duration() const;
  ::google::fhir::stu3::proto::Duration* release_duration();
  ::google::fhir::stu3::proto::Duration* mutable_duration();
  void set_allocated_duration(::google::fhir::stu3::proto::Duration* duration);

  // .google.fhir.stu3.proto.HumanName human_name = 27;
  bool has_human_name() const;
  void clear_human_name();
  static const int kHumanNameFieldNumber = 27;
  private:
  const ::google::fhir::stu3::proto::HumanName& _internal_human_name() const;
  public:
  const ::google::fhir::stu3::proto::HumanName& human_name() const;
  ::google::fhir::stu3::proto::HumanName* release_human_name();
  ::google::fhir::stu3::proto::HumanName* mutable_human_name();
  void set_allocated_human_name(::google::fhir::stu3::proto::HumanName* human_name);

  // .google.fhir.stu3.proto.Identifier identifier = 28;
  bool has_identifier() const;
  void clear_identifier();
  static const int kIdentifierFieldNumber = 28;
  private:
  const ::google::fhir::stu3::proto::Identifier& _internal_identifier() const;
  public:
  const ::google::fhir::stu3::proto::Identifier& identifier() const;
  ::google::fhir::stu3::proto::Identifier* release_identifier();
  ::google::fhir::stu3::proto::Identifier* mutable_identifier();
  void set_allocated_identifier(::google::fhir::stu3::proto::Identifier* identifier);

  // .google.fhir.stu3.proto.Money money = 29;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 29;
  private:
  const ::google::fhir::stu3::proto::Money& _internal_money() const;
  public:
  const ::google::fhir::stu3::proto::Money& money() const;
  ::google::fhir::stu3::proto::Money* release_money();
  ::google::fhir::stu3::proto::Money* mutable_money();
  void set_allocated_money(::google::fhir::stu3::proto::Money* money);

  // .google.fhir.stu3.proto.Period period = 30;
  bool has_period() const;
  void clear_period();
  static const int kPeriodFieldNumber = 30;
  private:
  const ::google::fhir::stu3::proto::Period& _internal_period() const;
  public:
  const ::google::fhir::stu3::proto::Period& period() const;
  ::google::fhir::stu3::proto::Period* release_period();
  ::google::fhir::stu3::proto::Period* mutable_period();
  void set_allocated_period(::google::fhir::stu3::proto::Period* period);

  // .google.fhir.stu3.proto.Quantity quantity = 31;
  bool has_quantity() const;
  void clear_quantity();
  static const int kQuantityFieldNumber = 31;
  private:
  const ::google::fhir::stu3::proto::Quantity& _internal_quantity() const;
  public:
  const ::google::fhir::stu3::proto::Quantity& quantity() const;
  ::google::fhir::stu3::proto::Quantity* release_quantity();
  ::google::fhir::stu3::proto::Quantity* mutable_quantity();
  void set_allocated_quantity(::google::fhir::stu3::proto::Quantity* quantity);

  // .google.fhir.stu3.proto.Range range = 32;
  bool has_range() const;
  void clear_range();
  static const int kRangeFieldNumber = 32;
  private:
  const ::google::fhir::stu3::proto::Range& _internal_range() const;
  public:
  const ::google::fhir::stu3::proto::Range& range() const;
  ::google::fhir::stu3::proto::Range* release_range();
  ::google::fhir::stu3::proto::Range* mutable_range();
  void set_allocated_range(::google::fhir::stu3::proto::Range* range);

  // .google.fhir.stu3.proto.Ratio ratio = 33;
  bool has_ratio() const;
  void clear_ratio();
  static const int kRatioFieldNumber = 33;
  private:
  const ::google::fhir::stu3::proto::Ratio& _internal_ratio() const;
  public:
  const ::google::fhir::stu3::proto::Ratio& ratio() const;
  ::google::fhir::stu3::proto::Ratio* release_ratio();
  ::google::fhir::stu3::proto::Ratio* mutable_ratio();
  void set_allocated_ratio(::google::fhir::stu3::proto::Ratio* ratio);

  // .google.fhir.stu3.proto.Reference reference = 34;
  bool has_reference() const;
  void clear_reference();
  static const int kReferenceFieldNumber = 34;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_reference() const;
  public:
  const ::google::fhir::stu3::proto::Reference& reference() const;
  ::google::fhir::stu3::proto::Reference* release_reference();
  ::google::fhir::stu3::proto::Reference* mutable_reference();
  void set_allocated_reference(::google::fhir::stu3::proto::Reference* reference);

  // .google.fhir.stu3.proto.SampledData sampled_data = 35;
  bool has_sampled_data() const;
  void clear_sampled_data();
  static const int kSampledDataFieldNumber = 35;
  private:
  const ::google::fhir::stu3::proto::SampledData& _internal_sampled_data() const;
  public:
  const ::google::fhir::stu3::proto::SampledData& sampled_data() const;
  ::google::fhir::stu3::proto::SampledData* release_sampled_data();
  ::google::fhir::stu3::proto::SampledData* mutable_sampled_data();
  void set_allocated_sampled_data(::google::fhir::stu3::proto::SampledData* sampled_data);

  // .google.fhir.stu3.proto.Signature signature = 36;
  bool has_signature() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 36;
  private:
  const ::google::fhir::stu3::proto::Signature& _internal_signature() const;
  public:
  const ::google::fhir::stu3::proto::Signature& signature() const;
  ::google::fhir::stu3::proto::Signature* release_signature();
  ::google::fhir::stu3::proto::Signature* mutable_signature();
  void set_allocated_signature(::google::fhir::stu3::proto::Signature* signature);

  // .google.fhir.stu3.proto.Timing timing = 37;
  bool has_timing() const;
  void clear_timing();
  static const int kTimingFieldNumber = 37;
  private:
  const ::google::fhir::stu3::proto::Timing& _internal_timing() const;
  public:
  const ::google::fhir::stu3::proto::Timing& timing() const;
  ::google::fhir::stu3::proto::Timing* release_timing();
  ::google::fhir::stu3::proto::Timing* mutable_timing();
  void set_allocated_timing(::google::fhir::stu3::proto::Timing* timing);

  // .google.fhir.stu3.proto.Meta meta = 38;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 38;
  private:
  const ::google::fhir::stu3::proto::Meta& _internal_meta() const;
  public:
  const ::google::fhir::stu3::proto::Meta& meta() const;
  ::google::fhir::stu3::proto::Meta* release_meta();
  ::google::fhir::stu3::proto::Meta* mutable_meta();
  void set_allocated_meta(::google::fhir::stu3::proto::Meta* meta);

  void clear_pattern();
  PatternCase pattern_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ElementDefinition.Pattern)
 private:
  void set_has_base64_binary();
  void set_has_boolean();
  void set_has_code();
  void set_has_date();
  void set_has_date_time();
  void set_has_decimal();
  void set_has_id();
  void set_has_instant();
  void set_has_integer();
  void set_has_markdown();
  void set_has_oid();
  void set_has_positive_int();
  void set_has_string_value();
  void set_has_time();
  void set_has_unsigned_int();
  void set_has_uri();
  void set_has_address();
  void set_has_age();
  void set_has_annotation();
  void set_has_attachment();
  void set_has_codeable_concept();
  void set_has_coding();
  void set_has_contact_point();
  void set_has_count();
  void set_has_distance();
  void set_has_duration();
  void set_has_human_name();
  void set_has_identifier();
  void set_has_money();
  void set_has_period();
  void set_has_quantity();
  void set_has_range();
  void set_has_ratio();
  void set_has_reference();
  void set_has_sampled_data();
  void set_has_signature();
  void set_has_timing();
  void set_has_meta();

  inline bool has_pattern() const;
  inline void clear_has_pattern();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union PatternUnion {
    PatternUnion() {}
    ::google::fhir::stu3::proto::Base64Binary* base64_binary_;
    ::google::fhir::stu3::proto::Boolean* boolean_;
    ::google::fhir::stu3::proto::Code* code_;
    ::google::fhir::stu3::proto::Date* date_;
    ::google::fhir::stu3::proto::DateTime* date_time_;
    ::google::fhir::stu3::proto::Decimal* decimal_;
    ::google::fhir::stu3::proto::Id* id_;
    ::google::fhir::stu3::proto::Instant* instant_;
    ::google::fhir::stu3::proto::Integer* integer_;
    ::google::fhir::stu3::proto::Markdown* markdown_;
    ::google::fhir::stu3::proto::Oid* oid_;
    ::google::fhir::stu3::proto::PositiveInt* positive_int_;
    ::google::fhir::stu3::proto::String* string_value_;
    ::google::fhir::stu3::proto::Time* time_;
    ::google::fhir::stu3::proto::UnsignedInt* unsigned_int_;
    ::google::fhir::stu3::proto::Uri* uri_;
    ::google::fhir::stu3::proto::Address* address_;
    ::google::fhir::stu3::proto::Age* age_;
    ::google::fhir::stu3::proto::Annotation* annotation_;
    ::google::fhir::stu3::proto::Attachment* attachment_;
    ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
    ::google::fhir::stu3::proto::Coding* coding_;
    ::google::fhir::stu3::proto::ContactPoint* contact_point_;
    ::google::fhir::stu3::proto::Count* count_;
    ::google::fhir::stu3::proto::Distance* distance_;
    ::google::fhir::stu3::proto::Duration* duration_;
    ::google::fhir::stu3::proto::HumanName* human_name_;
    ::google::fhir::stu3::proto::Identifier* identifier_;
    ::google::fhir::stu3::proto::Money* money_;
    ::google::fhir::stu3::proto::Period* period_;
    ::google::fhir::stu3::proto::Quantity* quantity_;
    ::google::fhir::stu3::proto::Range* range_;
    ::google::fhir::stu3::proto::Ratio* ratio_;
    ::google::fhir::stu3::proto::Reference* reference_;
    ::google::fhir::stu3::proto::SampledData* sampled_data_;
    ::google::fhir::stu3::proto::Signature* signature_;
    ::google::fhir::stu3::proto::Timing* timing_;
    ::google::fhir::stu3::proto::Meta* meta_;
  } pattern_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ElementDefinition_Example_Value : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ElementDefinition.Example.Value) */ {
 public:
  ElementDefinition_Example_Value();
  virtual ~ElementDefinition_Example_Value();

  ElementDefinition_Example_Value(const ElementDefinition_Example_Value& from);

  inline ElementDefinition_Example_Value& operator=(const ElementDefinition_Example_Value& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ElementDefinition_Example_Value(ElementDefinition_Example_Value&& from) noexcept
    : ElementDefinition_Example_Value() {
    *this = ::std::move(from);
  }

  inline ElementDefinition_Example_Value& operator=(ElementDefinition_Example_Value&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ElementDefinition_Example_Value& default_instance();

  enum ValueCase {
    kBase64Binary = 1,
    kBoolean = 2,
    kCode = 3,
    kDate = 4,
    kDateTime = 5,
    kDecimal = 6,
    kId = 7,
    kInstant = 8,
    kInteger = 9,
    kMarkdown = 10,
    kOid = 11,
    kPositiveInt = 12,
    kStringValue = 13,
    kTime = 14,
    kUnsignedInt = 15,
    kUri = 16,
    kAddress = 17,
    kAge = 18,
    kAnnotation = 19,
    kAttachment = 20,
    kCodeableConcept = 21,
    kCoding = 22,
    kContactPoint = 23,
    kCount = 24,
    kDistance = 25,
    kDuration = 26,
    kHumanName = 27,
    kIdentifier = 28,
    kMoney = 29,
    kPeriod = 30,
    kQuantity = 31,
    kRange = 32,
    kRatio = 33,
    kReference = 34,
    kSampledData = 35,
    kSignature = 36,
    kTiming = 37,
    kMeta = 38,
    VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ElementDefinition_Example_Value* internal_default_instance() {
    return reinterpret_cast<const ElementDefinition_Example_Value*>(
               &_ElementDefinition_Example_Value_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(ElementDefinition_Example_Value* other);
  friend void swap(ElementDefinition_Example_Value& a, ElementDefinition_Example_Value& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ElementDefinition_Example_Value* New() const final {
    return CreateMaybeMessage<ElementDefinition_Example_Value>(NULL);
  }

  ElementDefinition_Example_Value* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ElementDefinition_Example_Value>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ElementDefinition_Example_Value& from);
  void MergeFrom(const ElementDefinition_Example_Value& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ElementDefinition_Example_Value* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.Base64Binary base64_binary = 1;
  bool has_base64_binary() const;
  void clear_base64_binary();
  static const int kBase64BinaryFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Base64Binary& _internal_base64_binary() const;
  public:
  const ::google::fhir::stu3::proto::Base64Binary& base64_binary() const;
  ::google::fhir::stu3::proto::Base64Binary* release_base64_binary();
  ::google::fhir::stu3::proto::Base64Binary* mutable_base64_binary();
  void set_allocated_base64_binary(::google::fhir::stu3::proto::Base64Binary* base64_binary);

  // .google.fhir.stu3.proto.Boolean boolean = 2;
  bool has_boolean() const;
  void clear_boolean();
  static const int kBooleanFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Boolean& _internal_boolean() const;
  public:
  const ::google::fhir::stu3::proto::Boolean& boolean() const;
  ::google::fhir::stu3::proto::Boolean* release_boolean();
  ::google::fhir::stu3::proto::Boolean* mutable_boolean();
  void set_allocated_boolean(::google::fhir::stu3::proto::Boolean* boolean);

  // .google.fhir.stu3.proto.Code code = 3;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Code& _internal_code() const;
  public:
  const ::google::fhir::stu3::proto::Code& code() const;
  ::google::fhir::stu3::proto::Code* release_code();
  ::google::fhir::stu3::proto::Code* mutable_code();
  void set_allocated_code(::google::fhir::stu3::proto::Code* code);

  // .google.fhir.stu3.proto.Date date = 4;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::Date& _internal_date() const;
  public:
  const ::google::fhir::stu3::proto::Date& date() const;
  ::google::fhir::stu3::proto::Date* release_date();
  ::google::fhir::stu3::proto::Date* mutable_date();
  void set_allocated_date(::google::fhir::stu3::proto::Date* date);

  // .google.fhir.stu3.proto.DateTime date_time = 5;
  bool has_date_time() const;
  void clear_date_time();
  static const int kDateTimeFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_date_time() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& date_time() const;
  ::google::fhir::stu3::proto::DateTime* release_date_time();
  ::google::fhir::stu3::proto::DateTime* mutable_date_time();
  void set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time);

  // .google.fhir.stu3.proto.Decimal decimal = 6;
  bool has_decimal() const;
  void clear_decimal();
  static const int kDecimalFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::Decimal& _internal_decimal() const;
  public:
  const ::google::fhir::stu3::proto::Decimal& decimal() const;
  ::google::fhir::stu3::proto::Decimal* release_decimal();
  ::google::fhir::stu3::proto::Decimal* mutable_decimal();
  void set_allocated_decimal(::google::fhir::stu3::proto::Decimal* decimal);

  // .google.fhir.stu3.proto.Id id = 7;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 7;
  private:
  const ::google::fhir::stu3::proto::Id& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::Id& id() const;
  ::google::fhir::stu3::proto::Id* release_id();
  ::google::fhir::stu3::proto::Id* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::Id* id);

  // .google.fhir.stu3.proto.Instant instant = 8;
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 8;
  private:
  const ::google::fhir::stu3::proto::Instant& _internal_instant() const;
  public:
  const ::google::fhir::stu3::proto::Instant& instant() const;
  ::google::fhir::stu3::proto::Instant* release_instant();
  ::google::fhir::stu3::proto::Instant* mutable_instant();
  void set_allocated_instant(::google::fhir::stu3::proto::Instant* instant);

  // .google.fhir.stu3.proto.Integer integer = 9;
  bool has_integer() const;
  void clear_integer();
  static const int kIntegerFieldNumber = 9;
  private:
  const ::google::fhir::stu3::proto::Integer& _internal_integer() const;
  public:
  const ::google::fhir::stu3::proto::Integer& integer() const;
  ::google::fhir::stu3::proto::Integer* release_integer();
  ::google::fhir::stu3::proto::Integer* mutable_integer();
  void set_allocated_integer(::google::fhir::stu3::proto::Integer* integer);

  // .google.fhir.stu3.proto.Markdown markdown = 10;
  bool has_markdown() const;
  void clear_markdown();
  static const int kMarkdownFieldNumber = 10;
  private:
  const ::google::fhir::stu3::proto::Markdown& _internal_markdown() const;
  public:
  const ::google::fhir::stu3::proto::Markdown& markdown() const;
  ::google::fhir::stu3::proto::Markdown* release_markdown();
  ::google::fhir::stu3::proto::Markdown* mutable_markdown();
  void set_allocated_markdown(::google::fhir::stu3::proto::Markdown* markdown);

  // .google.fhir.stu3.proto.Oid oid = 11;
  bool has_oid() const;
  void clear_oid();
  static const int kOidFieldNumber = 11;
  private:
  const ::google::fhir::stu3::proto::Oid& _internal_oid() const;
  public:
  const ::google::fhir::stu3::proto::Oid& oid() const;
  ::google::fhir::stu3::proto::Oid* release_oid();
  ::google::fhir::stu3::proto::Oid* mutable_oid();
  void set_allocated_oid(::google::fhir::stu3::proto::Oid* oid);

  // .google.fhir.stu3.proto.PositiveInt positive_int = 12;
  bool has_positive_int() const;
  void clear_positive_int();
  static const int kPositiveIntFieldNumber = 12;
  private:
  const ::google::fhir::stu3::proto::PositiveInt& _internal_positive_int() const;
  public:
  const ::google::fhir::stu3::proto::PositiveInt& positive_int() const;
  ::google::fhir::stu3::proto::PositiveInt* release_positive_int();
  ::google::fhir::stu3::proto::PositiveInt* mutable_positive_int();
  void set_allocated_positive_int(::google::fhir::stu3::proto::PositiveInt* positive_int);

  // .google.fhir.stu3.proto.String string_value = 13[json_name = "string"];
  bool has_string_value() const;
  void clear_string_value();
  static const int kStringValueFieldNumber = 13;
  private:
  const ::google::fhir::stu3::proto::String& _internal_string_value() const;
  public:
  const ::google::fhir::stu3::proto::String& string_value() const;
  ::google::fhir::stu3::proto::String* release_string_value();
  ::google::fhir::stu3::proto::String* mutable_string_value();
  void set_allocated_string_value(::google::fhir::stu3::proto::String* string_value);

  // .google.fhir.stu3.proto.Time time = 14;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 14;
  private:
  const ::google::fhir::stu3::proto::Time& _internal_time() const;
  public:
  const ::google::fhir::stu3::proto::Time& time() const;
  ::google::fhir::stu3::proto::Time* release_time();
  ::google::fhir::stu3::proto::Time* mutable_time();
  void set_allocated_time(::google::fhir::stu3::proto::Time* time);

  // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
  bool has_unsigned_int() const;
  void clear_unsigned_int();
  static const int kUnsignedIntFieldNumber = 15;
  private:
  const ::google::fhir::stu3::proto::UnsignedInt& _internal_unsigned_int() const;
  public:
  const ::google::fhir::stu3::proto::UnsignedInt& unsigned_int() const;
  ::google::fhir::stu3::proto::UnsignedInt* release_unsigned_int();
  ::google::fhir::stu3::proto::UnsignedInt* mutable_unsigned_int();
  void set_allocated_unsigned_int(::google::fhir::stu3::proto::UnsignedInt* unsigned_int);

  // .google.fhir.stu3.proto.Uri uri = 16;
  bool has_uri() const;
  void clear_uri();
  static const int kUriFieldNumber = 16;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_uri() const;
  public:
  const ::google::fhir::stu3::proto::Uri& uri() const;
  ::google::fhir::stu3::proto::Uri* release_uri();
  ::google::fhir::stu3::proto::Uri* mutable_uri();
  void set_allocated_uri(::google::fhir::stu3::proto::Uri* uri);

  // .google.fhir.stu3.proto.Address address = 17;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 17;
  private:
  const ::google::fhir::stu3::proto::Address& _internal_address() const;
  public:
  const ::google::fhir::stu3::proto::Address& address() const;
  ::google::fhir::stu3::proto::Address* release_address();
  ::google::fhir::stu3::proto::Address* mutable_address();
  void set_allocated_address(::google::fhir::stu3::proto::Address* address);

  // .google.fhir.stu3.proto.Age age = 18;
  bool has_age() const;
  void clear_age();
  static const int kAgeFieldNumber = 18;
  private:
  const ::google::fhir::stu3::proto::Age& _internal_age() const;
  public:
  const ::google::fhir::stu3::proto::Age& age() const;
  ::google::fhir::stu3::proto::Age* release_age();
  ::google::fhir::stu3::proto::Age* mutable_age();
  void set_allocated_age(::google::fhir::stu3::proto::Age* age);

  // .google.fhir.stu3.proto.Annotation annotation = 19;
  bool has_annotation() const;
  void clear_annotation();
  static const int kAnnotationFieldNumber = 19;
  private:
  const ::google::fhir::stu3::proto::Annotation& _internal_annotation() const;
  public:
  const ::google::fhir::stu3::proto::Annotation& annotation() const;
  ::google::fhir::stu3::proto::Annotation* release_annotation();
  ::google::fhir::stu3::proto::Annotation* mutable_annotation();
  void set_allocated_annotation(::google::fhir::stu3::proto::Annotation* annotation);

  // .google.fhir.stu3.proto.Attachment attachment = 20;
  bool has_attachment() const;
  void clear_attachment();
  static const int kAttachmentFieldNumber = 20;
  private:
  const ::google::fhir::stu3::proto::Attachment& _internal_attachment() const;
  public:
  const ::google::fhir::stu3::proto::Attachment& attachment() const;
  ::google::fhir::stu3::proto::Attachment* release_attachment();
  ::google::fhir::stu3::proto::Attachment* mutable_attachment();
  void set_allocated_attachment(::google::fhir::stu3::proto::Attachment* attachment);

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
  bool has_codeable_concept() const;
  void clear_codeable_concept();
  static const int kCodeableConceptFieldNumber = 21;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_codeable_concept() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& codeable_concept() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_codeable_concept();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_codeable_concept();
  void set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept);

  // .google.fhir.stu3.proto.Coding coding = 22;
  bool has_coding() const;
  void clear_coding();
  static const int kCodingFieldNumber = 22;
  private:
  const ::google::fhir::stu3::proto::Coding& _internal_coding() const;
  public:
  const ::google::fhir::stu3::proto::Coding& coding() const;
  ::google::fhir::stu3::proto::Coding* release_coding();
  ::google::fhir::stu3::proto::Coding* mutable_coding();
  void set_allocated_coding(::google::fhir::stu3::proto::Coding* coding);

  // .google.fhir.stu3.proto.ContactPoint contact_point = 23;
  bool has_contact_point() const;
  void clear_contact_point();
  static const int kContactPointFieldNumber = 23;
  private:
  const ::google::fhir::stu3::proto::ContactPoint& _internal_contact_point() const;
  public:
  const ::google::fhir::stu3::proto::ContactPoint& contact_point() const;
  ::google::fhir::stu3::proto::ContactPoint* release_contact_point();
  ::google::fhir::stu3::proto::ContactPoint* mutable_contact_point();
  void set_allocated_contact_point(::google::fhir::stu3::proto::ContactPoint* contact_point);

  // .google.fhir.stu3.proto.Count count = 24;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 24;
  private:
  const ::google::fhir::stu3::proto::Count& _internal_count() const;
  public:
  const ::google::fhir::stu3::proto::Count& count() const;
  ::google::fhir::stu3::proto::Count* release_count();
  ::google::fhir::stu3::proto::Count* mutable_count();
  void set_allocated_count(::google::fhir::stu3::proto::Count* count);

  // .google.fhir.stu3.proto.Distance distance = 25;
  bool has_distance() const;
  void clear_distance();
  static const int kDistanceFieldNumber = 25;
  private:
  const ::google::fhir::stu3::proto::Distance& _internal_distance() const;
  public:
  const ::google::fhir::stu3::proto::Distance& distance() const;
  ::google::fhir::stu3::proto::Distance* release_distance();
  ::google::fhir::stu3::proto::Distance* mutable_distance();
  void set_allocated_distance(::google::fhir::stu3::proto::Distance* distance);

  // .google.fhir.stu3.proto.Duration duration = 26;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 26;
  private:
  const ::google::fhir::stu3::proto::Duration& _internal_duration() const;
  public:
  const ::google::fhir::stu3::proto::Duration& duration() const;
  ::google::fhir::stu3::proto::Duration* release_duration();
  ::google::fhir::stu3::proto::Duration* mutable_duration();
  void set_allocated_duration(::google::fhir::stu3::proto::Duration* duration);

  // .google.fhir.stu3.proto.HumanName human_name = 27;
  bool has_human_name() const;
  void clear_human_name();
  static const int kHumanNameFieldNumber = 27;
  private:
  const ::google::fhir::stu3::proto::HumanName& _internal_human_name() const;
  public:
  const ::google::fhir::stu3::proto::HumanName& human_name() const;
  ::google::fhir::stu3::proto::HumanName* release_human_name();
  ::google::fhir::stu3::proto::HumanName* mutable_human_name();
  void set_allocated_human_name(::google::fhir::stu3::proto::HumanName* human_name);

  // .google.fhir.stu3.proto.Identifier identifier = 28;
  bool has_identifier() const;
  void clear_identifier();
  static const int kIdentifierFieldNumber = 28;
  private:
  const ::google::fhir::stu3::proto::Identifier& _internal_identifier() const;
  public:
  const ::google::fhir::stu3::proto::Identifier& identifier() const;
  ::google::fhir::stu3::proto::Identifier* release_identifier();
  ::google::fhir::stu3::proto::Identifier* mutable_identifier();
  void set_allocated_identifier(::google::fhir::stu3::proto::Identifier* identifier);

  // .google.fhir.stu3.proto.Money money = 29;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 29;
  private:
  const ::google::fhir::stu3::proto::Money& _internal_money() const;
  public:
  const ::google::fhir::stu3::proto::Money& money() const;
  ::google::fhir::stu3::proto::Money* release_money();
  ::google::fhir::stu3::proto::Money* mutable_money();
  void set_allocated_money(::google::fhir::stu3::proto::Money* money);

  // .google.fhir.stu3.proto.Period period = 30;
  bool has_period() const;
  void clear_period();
  static const int kPeriodFieldNumber = 30;
  private:
  const ::google::fhir::stu3::proto::Period& _internal_period() const;
  public:
  const ::google::fhir::stu3::proto::Period& period() const;
  ::google::fhir::stu3::proto::Period* release_period();
  ::google::fhir::stu3::proto::Period* mutable_period();
  void set_allocated_period(::google::fhir::stu3::proto::Period* period);

  // .google.fhir.stu3.proto.Quantity quantity = 31;
  bool has_quantity() const;
  void clear_quantity();
  static const int kQuantityFieldNumber = 31;
  private:
  const ::google::fhir::stu3::proto::Quantity& _internal_quantity() const;
  public:
  const ::google::fhir::stu3::proto::Quantity& quantity() const;
  ::google::fhir::stu3::proto::Quantity* release_quantity();
  ::google::fhir::stu3::proto::Quantity* mutable_quantity();
  void set_allocated_quantity(::google::fhir::stu3::proto::Quantity* quantity);

  // .google.fhir.stu3.proto.Range range = 32;
  bool has_range() const;
  void clear_range();
  static const int kRangeFieldNumber = 32;
  private:
  const ::google::fhir::stu3::proto::Range& _internal_range() const;
  public:
  const ::google::fhir::stu3::proto::Range& range() const;
  ::google::fhir::stu3::proto::Range* release_range();
  ::google::fhir::stu3::proto::Range* mutable_range();
  void set_allocated_range(::google::fhir::stu3::proto::Range* range);

  // .google.fhir.stu3.proto.Ratio ratio = 33;
  bool has_ratio() const;
  void clear_ratio();
  static const int kRatioFieldNumber = 33;
  private:
  const ::google::fhir::stu3::proto::Ratio& _internal_ratio() const;
  public:
  const ::google::fhir::stu3::proto::Ratio& ratio() const;
  ::google::fhir::stu3::proto::Ratio* release_ratio();
  ::google::fhir::stu3::proto::Ratio* mutable_ratio();
  void set_allocated_ratio(::google::fhir::stu3::proto::Ratio* ratio);

  // .google.fhir.stu3.proto.Reference reference = 34;
  bool has_reference() const;
  void clear_reference();
  static const int kReferenceFieldNumber = 34;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_reference() const;
  public:
  const ::google::fhir::stu3::proto::Reference& reference() const;
  ::google::fhir::stu3::proto::Reference* release_reference();
  ::google::fhir::stu3::proto::Reference* mutable_reference();
  void set_allocated_reference(::google::fhir::stu3::proto::Reference* reference);

  // .google.fhir.stu3.proto.SampledData sampled_data = 35;
  bool has_sampled_data() const;
  void clear_sampled_data();
  static const int kSampledDataFieldNumber = 35;
  private:
  const ::google::fhir::stu3::proto::SampledData& _internal_sampled_data() const;
  public:
  const ::google::fhir::stu3::proto::SampledData& sampled_data() const;
  ::google::fhir::stu3::proto::SampledData* release_sampled_data();
  ::google::fhir::stu3::proto::SampledData* mutable_sampled_data();
  void set_allocated_sampled_data(::google::fhir::stu3::proto::SampledData* sampled_data);

  // .google.fhir.stu3.proto.Signature signature = 36;
  bool has_signature() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 36;
  private:
  const ::google::fhir::stu3::proto::Signature& _internal_signature() const;
  public:
  const ::google::fhir::stu3::proto::Signature& signature() const;
  ::google::fhir::stu3::proto::Signature* release_signature();
  ::google::fhir::stu3::proto::Signature* mutable_signature();
  void set_allocated_signature(::google::fhir::stu3::proto::Signature* signature);

  // .google.fhir.stu3.proto.Timing timing = 37;
  bool has_timing() const;
  void clear_timing();
  static const int kTimingFieldNumber = 37;
  private:
  const ::google::fhir::stu3::proto::Timing& _internal_timing() const;
  public:
  const ::google::fhir::stu3::proto::Timing& timing() const;
  ::google::fhir::stu3::proto::Timing* release_timing();
  ::google::fhir::stu3::proto::Timing* mutable_timing();
  void set_allocated_timing(::google::fhir::stu3::proto::Timing* timing);

  // .google.fhir.stu3.proto.Meta meta = 38;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 38;
  private:
  const ::google::fhir::stu3::proto::Meta& _internal_meta() const;
  public:
  const ::google::fhir::stu3::proto::Meta& meta() const;
  ::google::fhir::stu3::proto::Meta* release_meta();
  ::google::fhir::stu3::proto::Meta* mutable_meta();
  void set_allocated_meta(::google::fhir::stu3::proto::Meta* meta);

  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ElementDefinition.Example.Value)
 private:
  void set_has_base64_binary();
  void set_has_boolean();
  void set_has_code();
  void set_has_date();
  void set_has_date_time();
  void set_has_decimal();
  void set_has_id();
  void set_has_instant();
  void set_has_integer();
  void set_has_markdown();
  void set_has_oid();
  void set_has_positive_int();
  void set_has_string_value();
  void set_has_time();
  void set_has_unsigned_int();
  void set_has_uri();
  void set_has_address();
  void set_has_age();
  void set_has_annotation();
  void set_has_attachment();
  void set_has_codeable_concept();
  void set_has_coding();
  void set_has_contact_point();
  void set_has_count();
  void set_has_distance();
  void set_has_duration();
  void set_has_human_name();
  void set_has_identifier();
  void set_has_money();
  void set_has_period();
  void set_has_quantity();
  void set_has_range();
  void set_has_ratio();
  void set_has_reference();
  void set_has_sampled_data();
  void set_has_signature();
  void set_has_timing();
  void set_has_meta();

  inline bool has_value() const;
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union ValueUnion {
    ValueUnion() {}
    ::google::fhir::stu3::proto::Base64Binary* base64_binary_;
    ::google::fhir::stu3::proto::Boolean* boolean_;
    ::google::fhir::stu3::proto::Code* code_;
    ::google::fhir::stu3::proto::Date* date_;
    ::google::fhir::stu3::proto::DateTime* date_time_;
    ::google::fhir::stu3::proto::Decimal* decimal_;
    ::google::fhir::stu3::proto::Id* id_;
    ::google::fhir::stu3::proto::Instant* instant_;
    ::google::fhir::stu3::proto::Integer* integer_;
    ::google::fhir::stu3::proto::Markdown* markdown_;
    ::google::fhir::stu3::proto::Oid* oid_;
    ::google::fhir::stu3::proto::PositiveInt* positive_int_;
    ::google::fhir::stu3::proto::String* string_value_;
    ::google::fhir::stu3::proto::Time* time_;
    ::google::fhir::stu3::proto::UnsignedInt* unsigned_int_;
    ::google::fhir::stu3::proto::Uri* uri_;
    ::google::fhir::stu3::proto::Address* address_;
    ::google::fhir::stu3::proto::Age* age_;
    ::google::fhir::stu3::proto::Annotation* annotation_;
    ::google::fhir::stu3::proto::Attachment* attachment_;
    ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
    ::google::fhir::stu3::proto::Coding* coding_;
    ::google::fhir::stu3::proto::ContactPoint* contact_point_;
    ::google::fhir::stu3::proto::Count* count_;
    ::google::fhir::stu3::proto::Distance* distance_;
    ::google::fhir::stu3::proto::Duration* duration_;
    ::google::fhir::stu3::proto::HumanName* human_name_;
    ::google::fhir::stu3::proto::Identifier* identifier_;
    ::google::fhir::stu3::proto::Money* money_;
    ::google::fhir::stu3::proto::Period* period_;
    ::google::fhir::stu3::proto::Quantity* quantity_;
    ::google::fhir::stu3::proto::Range* range_;
    ::google::fhir::stu3::proto::Ratio* ratio_;
    ::google::fhir::stu3::proto::Reference* reference_;
    ::google::fhir::stu3::proto::SampledData* sampled_data_;
    ::google::fhir::stu3::proto::Signature* signature_;
    ::google::fhir::stu3::proto::Timing* timing_;
    ::google::fhir::stu3::proto::Meta* meta_;
  } value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ElementDefinition_Example : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ElementDefinition.Example) */ {
 public:
  ElementDefinition_Example();
  virtual ~ElementDefinition_Example();

  ElementDefinition_Example(const ElementDefinition_Example& from);

  inline ElementDefinition_Example& operator=(const ElementDefinition_Example& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ElementDefinition_Example(ElementDefinition_Example&& from) noexcept
    : ElementDefinition_Example() {
    *this = ::std::move(from);
  }

  inline ElementDefinition_Example& operator=(ElementDefinition_Example&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ElementDefinition_Example& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ElementDefinition_Example* internal_default_instance() {
    return reinterpret_cast<const ElementDefinition_Example*>(
               &_ElementDefinition_Example_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(ElementDefinition_Example* other);
  friend void swap(ElementDefinition_Example& a, ElementDefinition_Example& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ElementDefinition_Example* New() const final {
    return CreateMaybeMessage<ElementDefinition_Example>(NULL);
  }

  ElementDefinition_Example* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ElementDefinition_Example>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ElementDefinition_Example& from);
  void MergeFrom(const ElementDefinition_Example& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ElementDefinition_Example* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ElementDefinition_Example_Value Value;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.String label = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_label() const;
  void clear_label();
  static const int kLabelFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::String& _internal_label() const;
  public:
  const ::google::fhir::stu3::proto::String& label() const;
  ::google::fhir::stu3::proto::String* release_label();
  ::google::fhir::stu3::proto::String* mutable_label();
  void set_allocated_label(::google::fhir::stu3::proto::String* label);

  // .google.fhir.stu3.proto.ElementDefinition.Example.Value value = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::ElementDefinition_Example_Value& _internal_value() const;
  public:
  const ::google::fhir::stu3::proto::ElementDefinition_Example_Value& value() const;
  ::google::fhir::stu3::proto::ElementDefinition_Example_Value* release_value();
  ::google::fhir::stu3::proto::ElementDefinition_Example_Value* mutable_value();
  void set_allocated_value(::google::fhir::stu3::proto::ElementDefinition_Example_Value* value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ElementDefinition.Example)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::String* label_;
  ::google::fhir::stu3::proto::ElementDefinition_Example_Value* value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ElementDefinition_MinValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ElementDefinition.MinValue) */ {
 public:
  ElementDefinition_MinValue();
  virtual ~ElementDefinition_MinValue();

  ElementDefinition_MinValue(const ElementDefinition_MinValue& from);

  inline ElementDefinition_MinValue& operator=(const ElementDefinition_MinValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ElementDefinition_MinValue(ElementDefinition_MinValue&& from) noexcept
    : ElementDefinition_MinValue() {
    *this = ::std::move(from);
  }

  inline ElementDefinition_MinValue& operator=(ElementDefinition_MinValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ElementDefinition_MinValue& default_instance();

  enum MinValueCase {
    kDate = 1,
    kDateTime = 2,
    kInstant = 3,
    kTime = 4,
    kDecimal = 5,
    kInteger = 6,
    kPositiveInt = 7,
    kUnsignedInt = 8,
    kQuantity = 9,
    MIN_VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ElementDefinition_MinValue* internal_default_instance() {
    return reinterpret_cast<const ElementDefinition_MinValue*>(
               &_ElementDefinition_MinValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(ElementDefinition_MinValue* other);
  friend void swap(ElementDefinition_MinValue& a, ElementDefinition_MinValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ElementDefinition_MinValue* New() const final {
    return CreateMaybeMessage<ElementDefinition_MinValue>(NULL);
  }

  ElementDefinition_MinValue* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ElementDefinition_MinValue>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ElementDefinition_MinValue& from);
  void MergeFrom(const ElementDefinition_MinValue& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ElementDefinition_MinValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.Date date = 1;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Date& _internal_date() const;
  public:
  const ::google::fhir::stu3::proto::Date& date() const;
  ::google::fhir::stu3::proto::Date* release_date();
  ::google::fhir::stu3::proto::Date* mutable_date();
  void set_allocated_date(::google::fhir::stu3::proto::Date* date);

  // .google.fhir.stu3.proto.DateTime date_time = 2;
  bool has_date_time() const;
  void clear_date_time();
  static const int kDateTimeFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_date_time() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& date_time() const;
  ::google::fhir::stu3::proto::DateTime* release_date_time();
  ::google::fhir::stu3::proto::DateTime* mutable_date_time();
  void set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time);

  // .google.fhir.stu3.proto.Instant instant = 3;
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Instant& _internal_instant() const;
  public:
  const ::google::fhir::stu3::proto::Instant& instant() const;
  ::google::fhir::stu3::proto::Instant* release_instant();
  ::google::fhir::stu3::proto::Instant* mutable_instant();
  void set_allocated_instant(::google::fhir::stu3::proto::Instant* instant);

  // .google.fhir.stu3.proto.Time time = 4;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::Time& _internal_time() const;
  public:
  const ::google::fhir::stu3::proto::Time& time() const;
  ::google::fhir::stu3::proto::Time* release_time();
  ::google::fhir::stu3::proto::Time* mutable_time();
  void set_allocated_time(::google::fhir::stu3::proto::Time* time);

  // .google.fhir.stu3.proto.Decimal decimal = 5;
  bool has_decimal() const;
  void clear_decimal();
  static const int kDecimalFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Decimal& _internal_decimal() const;
  public:
  const ::google::fhir::stu3::proto::Decimal& decimal() const;
  ::google::fhir::stu3::proto::Decimal* release_decimal();
  ::google::fhir::stu3::proto::Decimal* mutable_decimal();
  void set_allocated_decimal(::google::fhir::stu3::proto::Decimal* decimal);

  // .google.fhir.stu3.proto.Integer integer = 6;
  bool has_integer() const;
  void clear_integer();
  static const int kIntegerFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::Integer& _internal_integer() const;
  public:
  const ::google::fhir::stu3::proto::Integer& integer() const;
  ::google::fhir::stu3::proto::Integer* release_integer();
  ::google::fhir::stu3::proto::Integer* mutable_integer();
  void set_allocated_integer(::google::fhir::stu3::proto::Integer* integer);

  // .google.fhir.stu3.proto.PositiveInt positive_int = 7;
  bool has_positive_int() const;
  void clear_positive_int();
  static const int kPositiveIntFieldNumber = 7;
  private:
  const ::google::fhir::stu3::proto::PositiveInt& _internal_positive_int() const;
  public:
  const ::google::fhir::stu3::proto::PositiveInt& positive_int() const;
  ::google::fhir::stu3::proto::PositiveInt* release_positive_int();
  ::google::fhir::stu3::proto::PositiveInt* mutable_positive_int();
  void set_allocated_positive_int(::google::fhir::stu3::proto::PositiveInt* positive_int);

  // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 8;
  bool has_unsigned_int() const;
  void clear_unsigned_int();
  static const int kUnsignedIntFieldNumber = 8;
  private:
  const ::google::fhir::stu3::proto::UnsignedInt& _internal_unsigned_int() const;
  public:
  const ::google::fhir::stu3::proto::UnsignedInt& unsigned_int() const;
  ::google::fhir::stu3::proto::UnsignedInt* release_unsigned_int();
  ::google::fhir::stu3::proto::UnsignedInt* mutable_unsigned_int();
  void set_allocated_unsigned_int(::google::fhir::stu3::proto::UnsignedInt* unsigned_int);

  // .google.fhir.stu3.proto.Quantity quantity = 9;
  bool has_quantity() const;
  void clear_quantity();
  static const int kQuantityFieldNumber = 9;
  private:
  const ::google::fhir::stu3::proto::Quantity& _internal_quantity() const;
  public:
  const ::google::fhir::stu3::proto::Quantity& quantity() const;
  ::google::fhir::stu3::proto::Quantity* release_quantity();
  ::google::fhir::stu3::proto::Quantity* mutable_quantity();
  void set_allocated_quantity(::google::fhir::stu3::proto::Quantity* quantity);

  void clear_min_value();
  MinValueCase min_value_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ElementDefinition.MinValue)
 private:
  void set_has_date();
  void set_has_date_time();
  void set_has_instant();
  void set_has_time();
  void set_has_decimal();
  void set_has_integer();
  void set_has_positive_int();
  void set_has_unsigned_int();
  void set_has_quantity();

  inline bool has_min_value() const;
  inline void clear_has_min_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union MinValueUnion {
    MinValueUnion() {}
    ::google::fhir::stu3::proto::Date* date_;
    ::google::fhir::stu3::proto::DateTime* date_time_;
    ::google::fhir::stu3::proto::Instant* instant_;
    ::google::fhir::stu3::proto::Time* time_;
    ::google::fhir::stu3::proto::Decimal* decimal_;
    ::google::fhir::stu3::proto::Integer* integer_;
    ::google::fhir::stu3::proto::PositiveInt* positive_int_;
    ::google::fhir::stu3::proto::UnsignedInt* unsigned_int_;
    ::google::fhir::stu3::proto::Quantity* quantity_;
  } min_value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ElementDefinition_MaxValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ElementDefinition.MaxValue) */ {
 public:
  ElementDefinition_MaxValue();
  virtual ~ElementDefinition_MaxValue();

  ElementDefinition_MaxValue(const ElementDefinition_MaxValue& from);

  inline ElementDefinition_MaxValue& operator=(const ElementDefinition_MaxValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ElementDefinition_MaxValue(ElementDefinition_MaxValue&& from) noexcept
    : ElementDefinition_MaxValue() {
    *this = ::std::move(from);
  }

  inline ElementDefinition_MaxValue& operator=(ElementDefinition_MaxValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ElementDefinition_MaxValue& default_instance();

  enum MaxValueCase {
    kDate = 1,
    kDateTime = 2,
    kInstant = 3,
    kTime = 4,
    kDecimal = 5,
    kInteger = 6,
    kPositiveInt = 7,
    kUnsignedInt = 8,
    kQuantity = 9,
    MAX_VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ElementDefinition_MaxValue* internal_default_instance() {
    return reinterpret_cast<const ElementDefinition_MaxValue*>(
               &_ElementDefinition_MaxValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(ElementDefinition_MaxValue* other);
  friend void swap(ElementDefinition_MaxValue& a, ElementDefinition_MaxValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ElementDefinition_MaxValue* New() const final {
    return CreateMaybeMessage<ElementDefinition_MaxValue>(NULL);
  }

  ElementDefinition_MaxValue* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ElementDefinition_MaxValue>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ElementDefinition_MaxValue& from);
  void MergeFrom(const ElementDefinition_MaxValue& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ElementDefinition_MaxValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.Date date = 1;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Date& _internal_date() const;
  public:
  const ::google::fhir::stu3::proto::Date& date() const;
  ::google::fhir::stu3::proto::Date* release_date();
  ::google::fhir::stu3::proto::Date* mutable_date();
  void set_allocated_date(::google::fhir::stu3::proto::Date* date);

  // .google.fhir.stu3.proto.DateTime date_time = 2;
  bool has_date_time() const;
  void clear_date_time();
  static const int kDateTimeFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_date_time() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& date_time() const;
  ::google::fhir::stu3::proto::DateTime* release_date_time();
  ::google::fhir::stu3::proto::DateTime* mutable_date_time();
  void set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time);

  // .google.fhir.stu3.proto.Instant instant = 3;
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Instant& _internal_instant() const;
  public:
  const ::google::fhir::stu3::proto::Instant& instant() const;
  ::google::fhir::stu3::proto::Instant* release_instant();
  ::google::fhir::stu3::proto::Instant* mutable_instant();
  void set_allocated_instant(::google::fhir::stu3::proto::Instant* instant);

  // .google.fhir.stu3.proto.Time time = 4;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::Time& _internal_time() const;
  public:
  const ::google::fhir::stu3::proto::Time& time() const;
  ::google::fhir::stu3::proto::Time* release_time();
  ::google::fhir::stu3::proto::Time* mutable_time();
  void set_allocated_time(::google::fhir::stu3::proto::Time* time);

  // .google.fhir.stu3.proto.Decimal decimal = 5;
  bool has_decimal() const;
  void clear_decimal();
  static const int kDecimalFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Decimal& _internal_decimal() const;
  public:
  const ::google::fhir::stu3::proto::Decimal& decimal() const;
  ::google::fhir::stu3::proto::Decimal* release_decimal();
  ::google::fhir::stu3::proto::Decimal* mutable_decimal();
  void set_allocated_decimal(::google::fhir::stu3::proto::Decimal* decimal);

  // .google.fhir.stu3.proto.Integer integer = 6;
  bool has_integer() const;
  void clear_integer();
  static const int kIntegerFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::Integer& _internal_integer() const;
  public:
  const ::google::fhir::stu3::proto::Integer& integer() const;
  ::google::fhir::stu3::proto::Integer* release_integer();
  ::google::fhir::stu3::proto::Integer* mutable_integer();
  void set_allocated_integer(::google::fhir::stu3::proto::Integer* integer);

  // .google.fhir.stu3.proto.PositiveInt positive_int = 7;
  bool has_positive_int() const;
  void clear_positive_int();
  static const int kPositiveIntFieldNumber = 7;
  private:
  const ::google::fhir::stu3::proto::PositiveInt& _internal_positive_int() const;
  public:
  const ::google::fhir::stu3::proto::PositiveInt& positive_int() const;
  ::google::fhir::stu3::proto::PositiveInt* release_positive_int();
  ::google::fhir::stu3::proto::PositiveInt* mutable_positive_int();
  void set_allocated_positive_int(::google::fhir::stu3::proto::PositiveInt* positive_int);

  // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 8;
  bool has_unsigned_int() const;
  void clear_unsigned_int();
  static const int kUnsignedIntFieldNumber = 8;
  private:
  const ::google::fhir::stu3::proto::UnsignedInt& _internal_unsigned_int() const;
  public:
  const ::google::fhir::stu3::proto::UnsignedInt& unsigned_int() const;
  ::google::fhir::stu3::proto::UnsignedInt* release_unsigned_int();
  ::google::fhir::stu3::proto::UnsignedInt* mutable_unsigned_int();
  void set_allocated_unsigned_int(::google::fhir::stu3::proto::UnsignedInt* unsigned_int);

  // .google.fhir.stu3.proto.Quantity quantity = 9;
  bool has_quantity() const;
  void clear_quantity();
  static const int kQuantityFieldNumber = 9;
  private:
  const ::google::fhir::stu3::proto::Quantity& _internal_quantity() const;
  public:
  const ::google::fhir::stu3::proto::Quantity& quantity() const;
  ::google::fhir::stu3::proto::Quantity* release_quantity();
  ::google::fhir::stu3::proto::Quantity* mutable_quantity();
  void set_allocated_quantity(::google::fhir::stu3::proto::Quantity* quantity);

  void clear_max_value();
  MaxValueCase max_value_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ElementDefinition.MaxValue)
 private:
  void set_has_date();
  void set_has_date_time();
  void set_has_instant();
  void set_has_time();
  void set_has_decimal();
  void set_has_integer();
  void set_has_positive_int();
  void set_has_unsigned_int();
  void set_has_quantity();

  inline bool has_max_value() const;
  inline void clear_has_max_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union MaxValueUnion {
    MaxValueUnion() {}
    ::google::fhir::stu3::proto::Date* date_;
    ::google::fhir::stu3::proto::DateTime* date_time_;
    ::google::fhir::stu3::proto::Instant* instant_;
    ::google::fhir::stu3::proto::Time* time_;
    ::google::fhir::stu3::proto::Decimal* decimal_;
    ::google::fhir::stu3::proto::Integer* integer_;
    ::google::fhir::stu3::proto::PositiveInt* positive_int_;
    ::google::fhir::stu3::proto::UnsignedInt* unsigned_int_;
    ::google::fhir::stu3::proto::Quantity* quantity_;
  } max_value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ElementDefinition_Constraint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ElementDefinition.Constraint) */ {
 public:
  ElementDefinition_Constraint();
  virtual ~ElementDefinition_Constraint();

  ElementDefinition_Constraint(const ElementDefinition_Constraint& from);

  inline ElementDefinition_Constraint& operator=(const ElementDefinition_Constraint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ElementDefinition_Constraint(ElementDefinition_Constraint&& from) noexcept
    : ElementDefinition_Constraint() {
    *this = ::std::move(from);
  }

  inline ElementDefinition_Constraint& operator=(ElementDefinition_Constraint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ElementDefinition_Constraint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ElementDefinition_Constraint* internal_default_instance() {
    return reinterpret_cast<const ElementDefinition_Constraint*>(
               &_ElementDefinition_Constraint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(ElementDefinition_Constraint* other);
  friend void swap(ElementDefinition_Constraint& a, ElementDefinition_Constraint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ElementDefinition_Constraint* New() const final {
    return CreateMaybeMessage<ElementDefinition_Constraint>(NULL);
  }

  ElementDefinition_Constraint* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ElementDefinition_Constraint>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ElementDefinition_Constraint& from);
  void MergeFrom(const ElementDefinition_Constraint& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ElementDefinition_Constraint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.Id key = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Id& _internal_key() const;
  public:
  const ::google::fhir::stu3::proto::Id& key() const;
  ::google::fhir::stu3::proto::Id* release_key();
  ::google::fhir::stu3::proto::Id* mutable_key();
  void set_allocated_key(::google::fhir::stu3::proto::Id* key);

  // .google.fhir.stu3.proto.String requirements = 4;
  bool has_requirements() const;
  void clear_requirements();
  static const int kRequirementsFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::String& _internal_requirements() const;
  public:
  const ::google::fhir::stu3::proto::String& requirements() const;
  ::google::fhir::stu3::proto::String* release_requirements();
  ::google::fhir::stu3::proto::String* mutable_requirements();
  void set_allocated_requirements(::google::fhir::stu3::proto::String* requirements);

  // .google.fhir.stu3.proto.ConstraintSeverityCode severity = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_severity() const;
  void clear_severity();
  static const int kSeverityFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::ConstraintSeverityCode& _internal_severity() const;
  public:
  const ::google::fhir::stu3::proto::ConstraintSeverityCode& severity() const;
  ::google::fhir::stu3::proto::ConstraintSeverityCode* release_severity();
  ::google::fhir::stu3::proto::ConstraintSeverityCode* mutable_severity();
  void set_allocated_severity(::google::fhir::stu3::proto::ConstraintSeverityCode* severity);

  // .google.fhir.stu3.proto.String human = 6 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_human() const;
  void clear_human();
  static const int kHumanFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::String& _internal_human() const;
  public:
  const ::google::fhir::stu3::proto::String& human() const;
  ::google::fhir::stu3::proto::String* release_human();
  ::google::fhir::stu3::proto::String* mutable_human();
  void set_allocated_human(::google::fhir::stu3::proto::String* human);

  // .google.fhir.stu3.proto.String expression = 7 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_expression() const;
  void clear_expression();
  static const int kExpressionFieldNumber = 7;
  private:
  const ::google::fhir::stu3::proto::String& _internal_expression() const;
  public:
  const ::google::fhir::stu3::proto::String& expression() const;
  ::google::fhir::stu3::proto::String* release_expression();
  ::google::fhir::stu3::proto::String* mutable_expression();
  void set_allocated_expression(::google::fhir::stu3::proto::String* expression);

  // .google.fhir.stu3.proto.String xpath = 8;
  bool has_xpath() const;
  void clear_xpath();
  static const int kXpathFieldNumber = 8;
  private:
  const ::google::fhir::stu3::proto::String& _internal_xpath() const;
  public:
  const ::google::fhir::stu3::proto::String& xpath() const;
  ::google::fhir::stu3::proto::String* release_xpath();
  ::google::fhir::stu3::proto::String* mutable_xpath();
  void set_allocated_xpath(::google::fhir::stu3::proto::String* xpath);

  // .google.fhir.stu3.proto.Uri source = 9;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 9;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_source() const;
  public:
  const ::google::fhir::stu3::proto::Uri& source() const;
  ::google::fhir::stu3::proto::Uri* release_source();
  ::google::fhir::stu3::proto::Uri* mutable_source();
  void set_allocated_source(::google::fhir::stu3::proto::Uri* source);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ElementDefinition.Constraint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::Id* key_;
  ::google::fhir::stu3::proto::String* requirements_;
  ::google::fhir::stu3::proto::ConstraintSeverityCode* severity_;
  ::google::fhir::stu3::proto::String* human_;
  ::google::fhir::stu3::proto::String* expression_;
  ::google::fhir::stu3::proto::String* xpath_;
  ::google::fhir::stu3::proto::Uri* source_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ElementDefinition_ElementDefinitionBinding_ValueSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet) */ {
 public:
  ElementDefinition_ElementDefinitionBinding_ValueSet();
  virtual ~ElementDefinition_ElementDefinitionBinding_ValueSet();

  ElementDefinition_ElementDefinitionBinding_ValueSet(const ElementDefinition_ElementDefinitionBinding_ValueSet& from);

  inline ElementDefinition_ElementDefinitionBinding_ValueSet& operator=(const ElementDefinition_ElementDefinitionBinding_ValueSet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ElementDefinition_ElementDefinitionBinding_ValueSet(ElementDefinition_ElementDefinitionBinding_ValueSet&& from) noexcept
    : ElementDefinition_ElementDefinitionBinding_ValueSet() {
    *this = ::std::move(from);
  }

  inline ElementDefinition_ElementDefinitionBinding_ValueSet& operator=(ElementDefinition_ElementDefinitionBinding_ValueSet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ElementDefinition_ElementDefinitionBinding_ValueSet& default_instance();

  enum ValueSetCase {
    kUri = 1,
    kReference = 2,
    VALUE_SET_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ElementDefinition_ElementDefinitionBinding_ValueSet* internal_default_instance() {
    return reinterpret_cast<const ElementDefinition_ElementDefinitionBinding_ValueSet*>(
               &_ElementDefinition_ElementDefinitionBinding_ValueSet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(ElementDefinition_ElementDefinitionBinding_ValueSet* other);
  friend void swap(ElementDefinition_ElementDefinitionBinding_ValueSet& a, ElementDefinition_ElementDefinitionBinding_ValueSet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ElementDefinition_ElementDefinitionBinding_ValueSet* New() const final {
    return CreateMaybeMessage<ElementDefinition_ElementDefinitionBinding_ValueSet>(NULL);
  }

  ElementDefinition_ElementDefinitionBinding_ValueSet* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ElementDefinition_ElementDefinitionBinding_ValueSet>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ElementDefinition_ElementDefinitionBinding_ValueSet& from);
  void MergeFrom(const ElementDefinition_ElementDefinitionBinding_ValueSet& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ElementDefinition_ElementDefinitionBinding_ValueSet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.Uri uri = 1;
  bool has_uri() const;
  void clear_uri();
  static const int kUriFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_uri() const;
  public:
  const ::google::fhir::stu3::proto::Uri& uri() const;
  ::google::fhir::stu3::proto::Uri* release_uri();
  ::google::fhir::stu3::proto::Uri* mutable_uri();
  void set_allocated_uri(::google::fhir::stu3::proto::Uri* uri);

  // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ValueSet"];
  bool has_reference() const;
  void clear_reference();
  static const int kReferenceFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_reference() const;
  public:
  const ::google::fhir::stu3::proto::Reference& reference() const;
  ::google::fhir::stu3::proto::Reference* release_reference();
  ::google::fhir::stu3::proto::Reference* mutable_reference();
  void set_allocated_reference(::google::fhir::stu3::proto::Reference* reference);

  void clear_value_set();
  ValueSetCase value_set_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet)
 private:
  void set_has_uri();
  void set_has_reference();

  inline bool has_value_set() const;
  inline void clear_has_value_set();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union ValueSetUnion {
    ValueSetUnion() {}
    ::google::fhir::stu3::proto::Uri* uri_;
    ::google::fhir::stu3::proto::Reference* reference_;
  } value_set_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ElementDefinition_ElementDefinitionBinding : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding) */ {
 public:
  ElementDefinition_ElementDefinitionBinding();
  virtual ~ElementDefinition_ElementDefinitionBinding();

  ElementDefinition_ElementDefinitionBinding(const ElementDefinition_ElementDefinitionBinding& from);

  inline ElementDefinition_ElementDefinitionBinding& operator=(const ElementDefinition_ElementDefinitionBinding& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ElementDefinition_ElementDefinitionBinding(ElementDefinition_ElementDefinitionBinding&& from) noexcept
    : ElementDefinition_ElementDefinitionBinding() {
    *this = ::std::move(from);
  }

  inline ElementDefinition_ElementDefinitionBinding& operator=(ElementDefinition_ElementDefinitionBinding&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ElementDefinition_ElementDefinitionBinding& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ElementDefinition_ElementDefinitionBinding* internal_default_instance() {
    return reinterpret_cast<const ElementDefinition_ElementDefinitionBinding*>(
               &_ElementDefinition_ElementDefinitionBinding_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(ElementDefinition_ElementDefinitionBinding* other);
  friend void swap(ElementDefinition_ElementDefinitionBinding& a, ElementDefinition_ElementDefinitionBinding& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ElementDefinition_ElementDefinitionBinding* New() const final {
    return CreateMaybeMessage<ElementDefinition_ElementDefinitionBinding>(NULL);
  }

  ElementDefinition_ElementDefinitionBinding* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ElementDefinition_ElementDefinitionBinding>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ElementDefinition_ElementDefinitionBinding& from);
  void MergeFrom(const ElementDefinition_ElementDefinitionBinding& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ElementDefinition_ElementDefinitionBinding* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ElementDefinition_ElementDefinitionBinding_ValueSet ValueSet;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.BindingStrengthCode strength = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_strength() const;
  void clear_strength();
  static const int kStrengthFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::BindingStrengthCode& _internal_strength() const;
  public:
  const ::google::fhir::stu3::proto::BindingStrengthCode& strength() const;
  ::google::fhir::stu3::proto::BindingStrengthCode* release_strength();
  ::google::fhir::stu3::proto::BindingStrengthCode* mutable_strength();
  void set_allocated_strength(::google::fhir::stu3::proto::BindingStrengthCode* strength);

  // .google.fhir.stu3.proto.String description = 4;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::String& _internal_description() const;
  public:
  const ::google::fhir::stu3::proto::String& description() const;
  ::google::fhir::stu3::proto::String* release_description();
  ::google::fhir::stu3::proto::String* mutable_description();
  void set_allocated_description(::google::fhir::stu3::proto::String* description);

  // .google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet value_set = 5 [(.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_value_set() const;
  void clear_value_set();
  static const int kValueSetFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSet& _internal_value_set() const;
  public:
  const ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSet& value_set() const;
  ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSet* release_value_set();
  ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSet* mutable_value_set();
  void set_allocated_value_set(::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSet* value_set);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::BindingStrengthCode* strength_;
  ::google::fhir::stu3::proto::String* description_;
  ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSet* value_set_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ElementDefinition_Mapping : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ElementDefinition.Mapping) */ {
 public:
  ElementDefinition_Mapping();
  virtual ~ElementDefinition_Mapping();

  ElementDefinition_Mapping(const ElementDefinition_Mapping& from);

  inline ElementDefinition_Mapping& operator=(const ElementDefinition_Mapping& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ElementDefinition_Mapping(ElementDefinition_Mapping&& from) noexcept
    : ElementDefinition_Mapping() {
    *this = ::std::move(from);
  }

  inline ElementDefinition_Mapping& operator=(ElementDefinition_Mapping&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ElementDefinition_Mapping& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ElementDefinition_Mapping* internal_default_instance() {
    return reinterpret_cast<const ElementDefinition_Mapping*>(
               &_ElementDefinition_Mapping_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(ElementDefinition_Mapping* other);
  friend void swap(ElementDefinition_Mapping& a, ElementDefinition_Mapping& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ElementDefinition_Mapping* New() const final {
    return CreateMaybeMessage<ElementDefinition_Mapping>(NULL);
  }

  ElementDefinition_Mapping* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ElementDefinition_Mapping>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ElementDefinition_Mapping& from);
  void MergeFrom(const ElementDefinition_Mapping& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ElementDefinition_Mapping* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.Id identity = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_identity() const;
  void clear_identity();
  static const int kIdentityFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Id& _internal_identity() const;
  public:
  const ::google::fhir::stu3::proto::Id& identity() const;
  ::google::fhir::stu3::proto::Id* release_identity();
  ::google::fhir::stu3::proto::Id* mutable_identity();
  void set_allocated_identity(::google::fhir::stu3::proto::Id* identity);

  // .google.fhir.stu3.proto.MimeTypeCode language = 4;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::MimeTypeCode& _internal_language() const;
  public:
  const ::google::fhir::stu3::proto::MimeTypeCode& language() const;
  ::google::fhir::stu3::proto::MimeTypeCode* release_language();
  ::google::fhir::stu3::proto::MimeTypeCode* mutable_language();
  void set_allocated_language(::google::fhir::stu3::proto::MimeTypeCode* language);

  // .google.fhir.stu3.proto.String map = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_map() const;
  void clear_map();
  static const int kMapFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::String& _internal_map() const;
  public:
  const ::google::fhir::stu3::proto::String& map() const;
  ::google::fhir::stu3::proto::String* release_map();
  ::google::fhir::stu3::proto::String* mutable_map();
  void set_allocated_map(::google::fhir::stu3::proto::String* map);

  // .google.fhir.stu3.proto.String comment = 6;
  bool has_comment() const;
  void clear_comment();
  static const int kCommentFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::String& _internal_comment() const;
  public:
  const ::google::fhir::stu3::proto::String& comment() const;
  ::google::fhir::stu3::proto::String* release_comment();
  ::google::fhir::stu3::proto::String* mutable_comment();
  void set_allocated_comment(::google::fhir::stu3::proto::String* comment);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ElementDefinition.Mapping)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::Id* identity_;
  ::google::fhir::stu3::proto::MimeTypeCode* language_;
  ::google::fhir::stu3::proto::String* map_;
  ::google::fhir::stu3::proto::String* comment_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ElementDefinition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ElementDefinition) */ {
 public:
  ElementDefinition();
  virtual ~ElementDefinition();

  ElementDefinition(const ElementDefinition& from);

  inline ElementDefinition& operator=(const ElementDefinition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ElementDefinition(ElementDefinition&& from) noexcept
    : ElementDefinition() {
    *this = ::std::move(from);
  }

  inline ElementDefinition& operator=(ElementDefinition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ElementDefinition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ElementDefinition* internal_default_instance() {
    return reinterpret_cast<const ElementDefinition*>(
               &_ElementDefinition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(ElementDefinition* other);
  friend void swap(ElementDefinition& a, ElementDefinition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ElementDefinition* New() const final {
    return CreateMaybeMessage<ElementDefinition>(NULL);
  }

  ElementDefinition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ElementDefinition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ElementDefinition& from);
  void MergeFrom(const ElementDefinition& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ElementDefinition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ElementDefinition_Slicing Slicing;
  typedef ElementDefinition_Base Base;
  typedef ElementDefinition_TypeRef TypeRef;
  typedef ElementDefinition_DefaultValue DefaultValue;
  typedef ElementDefinition_Fixed Fixed;
  typedef ElementDefinition_Pattern Pattern;
  typedef ElementDefinition_Example Example;
  typedef ElementDefinition_MinValue MinValue;
  typedef ElementDefinition_MaxValue MaxValue;
  typedef ElementDefinition_Constraint Constraint;
  typedef ElementDefinition_ElementDefinitionBinding ElementDefinitionBinding;
  typedef ElementDefinition_Mapping Mapping;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.PropertyRepresentationCode representation = 4;
  int representation_size() const;
  void clear_representation();
  static const int kRepresentationFieldNumber = 4;
  ::google::fhir::stu3::proto::PropertyRepresentationCode* mutable_representation(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::PropertyRepresentationCode >*
      mutable_representation();
  const ::google::fhir::stu3::proto::PropertyRepresentationCode& representation(int index) const;
  ::google::fhir::stu3::proto::PropertyRepresentationCode* add_representation();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::PropertyRepresentationCode >&
      representation() const;

  // repeated .google.fhir.stu3.proto.Coding code = 7;
  int code_size() const;
  void clear_code();
  static const int kCodeFieldNumber = 7;
  ::google::fhir::stu3::proto::Coding* mutable_code(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Coding >*
      mutable_code();
  const ::google::fhir::stu3::proto::Coding& code(int index) const;
  ::google::fhir::stu3::proto::Coding* add_code();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Coding >&
      code() const;

  // repeated .google.fhir.stu3.proto.String alias = 13;
  int alias_size() const;
  void clear_alias();
  static const int kAliasFieldNumber = 13;
  ::google::fhir::stu3::proto::String* mutable_alias(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::String >*
      mutable_alias();
  const ::google::fhir::stu3::proto::String& alias(int index) const;
  ::google::fhir::stu3::proto::String* add_alias();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::String >&
      alias() const;

  // repeated .google.fhir.stu3.proto.ElementDefinition.TypeRef type = 18;
  int type_size() const;
  void clear_type();
  static const int kTypeFieldNumber = 18;
  ::google::fhir::stu3::proto::ElementDefinition_TypeRef* mutable_type(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ElementDefinition_TypeRef >*
      mutable_type();
  const ::google::fhir::stu3::proto::ElementDefinition_TypeRef& type(int index) const;
  ::google::fhir::stu3::proto::ElementDefinition_TypeRef* add_type();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ElementDefinition_TypeRef >&
      type() const;

  // repeated .google.fhir.stu3.proto.ElementDefinition.Example example = 24;
  int example_size() const;
  void clear_example();
  static const int kExampleFieldNumber = 24;
  ::google::fhir::stu3::proto::ElementDefinition_Example* mutable_example(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ElementDefinition_Example >*
      mutable_example();
  const ::google::fhir::stu3::proto::ElementDefinition_Example& example(int index) const;
  ::google::fhir::stu3::proto::ElementDefinition_Example* add_example();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ElementDefinition_Example >&
      example() const;

  // repeated .google.fhir.stu3.proto.Id condition = 28;
  int condition_size() const;
  void clear_condition();
  static const int kConditionFieldNumber = 28;
  ::google::fhir::stu3::proto::Id* mutable_condition(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Id >*
      mutable_condition();
  const ::google::fhir::stu3::proto::Id& condition(int index) const;
  ::google::fhir::stu3::proto::Id* add_condition();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Id >&
      condition() const;

  // repeated .google.fhir.stu3.proto.ElementDefinition.Constraint constraint = 29;
  int constraint_size() const;
  void clear_constraint();
  static const int kConstraintFieldNumber = 29;
  ::google::fhir::stu3::proto::ElementDefinition_Constraint* mutable_constraint(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ElementDefinition_Constraint >*
      mutable_constraint();
  const ::google::fhir::stu3::proto::ElementDefinition_Constraint& constraint(int index) const;
  ::google::fhir::stu3::proto::ElementDefinition_Constraint* add_constraint();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ElementDefinition_Constraint >&
      constraint() const;

  // repeated .google.fhir.stu3.proto.ElementDefinition.Mapping mapping = 34;
  int mapping_size() const;
  void clear_mapping();
  static const int kMappingFieldNumber = 34;
  ::google::fhir::stu3::proto::ElementDefinition_Mapping* mutable_mapping(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ElementDefinition_Mapping >*
      mutable_mapping();
  const ::google::fhir::stu3::proto::ElementDefinition_Mapping& mapping(int index) const;
  ::google::fhir::stu3::proto::ElementDefinition_Mapping* add_mapping();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ElementDefinition_Mapping >&
      mapping() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.String path = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::String& _internal_path() const;
  public:
  const ::google::fhir::stu3::proto::String& path() const;
  ::google::fhir::stu3::proto::String* release_path();
  ::google::fhir::stu3::proto::String* mutable_path();
  void set_allocated_path(::google::fhir::stu3::proto::String* path);

  // .google.fhir.stu3.proto.String slice_name = 5;
  bool has_slice_name() const;
  void clear_slice_name();
  static const int kSliceNameFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::String& _internal_slice_name() const;
  public:
  const ::google::fhir::stu3::proto::String& slice_name() const;
  ::google::fhir::stu3::proto::String* release_slice_name();
  ::google::fhir::stu3::proto::String* mutable_slice_name();
  void set_allocated_slice_name(::google::fhir::stu3::proto::String* slice_name);

  // .google.fhir.stu3.proto.String label = 6;
  bool has_label() const;
  void clear_label();
  static const int kLabelFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::String& _internal_label() const;
  public:
  const ::google::fhir::stu3::proto::String& label() const;
  ::google::fhir::stu3::proto::String* release_label();
  ::google::fhir::stu3::proto::String* mutable_label();
  void set_allocated_label(::google::fhir::stu3::proto::String* label);

  // .google.fhir.stu3.proto.ElementDefinition.Slicing slicing = 8;
  bool has_slicing() const;
  void clear_slicing();
  static const int kSlicingFieldNumber = 8;
  private:
  const ::google::fhir::stu3::proto::ElementDefinition_Slicing& _internal_slicing() const;
  public:
  const ::google::fhir::stu3::proto::ElementDefinition_Slicing& slicing() const;
  ::google::fhir::stu3::proto::ElementDefinition_Slicing* release_slicing();
  ::google::fhir::stu3::proto::ElementDefinition_Slicing* mutable_slicing();
  void set_allocated_slicing(::google::fhir::stu3::proto::ElementDefinition_Slicing* slicing);

  // .google.fhir.stu3.proto.String short = 9;
  bool has_short_() const;
  void clear_short_();
  static const int kShortFieldNumber = 9;
  private:
  const ::google::fhir::stu3::proto::String& _internal_short_() const;
  public:
  const ::google::fhir::stu3::proto::String& short_() const;
  ::google::fhir::stu3::proto::String* release_short_();
  ::google::fhir::stu3::proto::String* mutable_short_();
  void set_allocated_short_(::google::fhir::stu3::proto::String* short_);

  // .google.fhir.stu3.proto.Markdown definition = 10;
  bool has_definition() const;
  void clear_definition();
  static const int kDefinitionFieldNumber = 10;
  private:
  const ::google::fhir::stu3::proto::Markdown& _internal_definition() const;
  public:
  const ::google::fhir::stu3::proto::Markdown& definition() const;
  ::google::fhir::stu3::proto::Markdown* release_definition();
  ::google::fhir::stu3::proto::Markdown* mutable_definition();
  void set_allocated_definition(::google::fhir::stu3::proto::Markdown* definition);

  // .google.fhir.stu3.proto.Markdown comment = 11;
  bool has_comment() const;
  void clear_comment();
  static const int kCommentFieldNumber = 11;
  private:
  const ::google::fhir::stu3::proto::Markdown& _internal_comment() const;
  public:
  const ::google::fhir::stu3::proto::Markdown& comment() const;
  ::google::fhir::stu3::proto::Markdown* release_comment();
  ::google::fhir::stu3::proto::Markdown* mutable_comment();
  void set_allocated_comment(::google::fhir::stu3::proto::Markdown* comment);

  // .google.fhir.stu3.proto.Markdown requirements = 12;
  bool has_requirements() const;
  void clear_requirements();
  static const int kRequirementsFieldNumber = 12;
  private:
  const ::google::fhir::stu3::proto::Markdown& _internal_requirements() const;
  public:
  const ::google::fhir::stu3::proto::Markdown& requirements() const;
  ::google::fhir::stu3::proto::Markdown* release_requirements();
  ::google::fhir::stu3::proto::Markdown* mutable_requirements();
  void set_allocated_requirements(::google::fhir::stu3::proto::Markdown* requirements);

  // .google.fhir.stu3.proto.UnsignedInt min = 14;
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 14;
  private:
  const ::google::fhir::stu3::proto::UnsignedInt& _internal_min() const;
  public:
  const ::google::fhir::stu3::proto::UnsignedInt& min() const;
  ::google::fhir::stu3::proto::UnsignedInt* release_min();
  ::google::fhir::stu3::proto::UnsignedInt* mutable_min();
  void set_allocated_min(::google::fhir::stu3::proto::UnsignedInt* min);

  // .google.fhir.stu3.proto.String max = 15;
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 15;
  private:
  const ::google::fhir::stu3::proto::String& _internal_max() const;
  public:
  const ::google::fhir::stu3::proto::String& max() const;
  ::google::fhir::stu3::proto::String* release_max();
  ::google::fhir::stu3::proto::String* mutable_max();
  void set_allocated_max(::google::fhir::stu3::proto::String* max);

  // .google.fhir.stu3.proto.ElementDefinition.Base base = 16;
  bool has_base() const;
  void clear_base();
  static const int kBaseFieldNumber = 16;
  private:
  const ::google::fhir::stu3::proto::ElementDefinition_Base& _internal_base() const;
  public:
  const ::google::fhir::stu3::proto::ElementDefinition_Base& base() const;
  ::google::fhir::stu3::proto::ElementDefinition_Base* release_base();
  ::google::fhir::stu3::proto::ElementDefinition_Base* mutable_base();
  void set_allocated_base(::google::fhir::stu3::proto::ElementDefinition_Base* base);

  // .google.fhir.stu3.proto.Uri content_reference = 17;
  bool has_content_reference() const;
  void clear_content_reference();
  static const int kContentReferenceFieldNumber = 17;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_content_reference() const;
  public:
  const ::google::fhir::stu3::proto::Uri& content_reference() const;
  ::google::fhir::stu3::proto::Uri* release_content_reference();
  ::google::fhir::stu3::proto::Uri* mutable_content_reference();
  void set_allocated_content_reference(::google::fhir::stu3::proto::Uri* content_reference);

  // .google.fhir.stu3.proto.ElementDefinition.DefaultValue default_value = 19 [(.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_default_value() const;
  void clear_default_value();
  static const int kDefaultValueFieldNumber = 19;
  private:
  const ::google::fhir::stu3::proto::ElementDefinition_DefaultValue& _internal_default_value() const;
  public:
  const ::google::fhir::stu3::proto::ElementDefinition_DefaultValue& default_value() const;
  ::google::fhir::stu3::proto::ElementDefinition_DefaultValue* release_default_value();
  ::google::fhir::stu3::proto::ElementDefinition_DefaultValue* mutable_default_value();
  void set_allocated_default_value(::google::fhir::stu3::proto::ElementDefinition_DefaultValue* default_value);

  // .google.fhir.stu3.proto.Markdown meaning_when_missing = 20;
  bool has_meaning_when_missing() const;
  void clear_meaning_when_missing();
  static const int kMeaningWhenMissingFieldNumber = 20;
  private:
  const ::google::fhir::stu3::proto::Markdown& _internal_meaning_when_missing() const;
  public:
  const ::google::fhir::stu3::proto::Markdown& meaning_when_missing() const;
  ::google::fhir::stu3::proto::Markdown* release_meaning_when_missing();
  ::google::fhir::stu3::proto::Markdown* mutable_meaning_when_missing();
  void set_allocated_meaning_when_missing(::google::fhir::stu3::proto::Markdown* meaning_when_missing);

  // .google.fhir.stu3.proto.String order_meaning = 21;
  bool has_order_meaning() const;
  void clear_order_meaning();
  static const int kOrderMeaningFieldNumber = 21;
  private:
  const ::google::fhir::stu3::proto::String& _internal_order_meaning() const;
  public:
  const ::google::fhir::stu3::proto::String& order_meaning() const;
  ::google::fhir::stu3::proto::String* release_order_meaning();
  ::google::fhir::stu3::proto::String* mutable_order_meaning();
  void set_allocated_order_meaning(::google::fhir::stu3::proto::String* order_meaning);

  // .google.fhir.stu3.proto.ElementDefinition.Fixed fixed = 22 [(.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_fixed() const;
  void clear_fixed();
  static const int kFixedFieldNumber = 22;
  private:
  const ::google::fhir::stu3::proto::ElementDefinition_Fixed& _internal_fixed() const;
  public:
  const ::google::fhir::stu3::proto::ElementDefinition_Fixed& fixed() const;
  ::google::fhir::stu3::proto::ElementDefinition_Fixed* release_fixed();
  ::google::fhir::stu3::proto::ElementDefinition_Fixed* mutable_fixed();
  void set_allocated_fixed(::google::fhir::stu3::proto::ElementDefinition_Fixed* fixed);

  // .google.fhir.stu3.proto.ElementDefinition.Pattern pattern = 23 [(.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_pattern() const;
  void clear_pattern();
  static const int kPatternFieldNumber = 23;
  private:
  const ::google::fhir::stu3::proto::ElementDefinition_Pattern& _internal_pattern() const;
  public:
  const ::google::fhir::stu3::proto::ElementDefinition_Pattern& pattern() const;
  ::google::fhir::stu3::proto::ElementDefinition_Pattern* release_pattern();
  ::google::fhir::stu3::proto::ElementDefinition_Pattern* mutable_pattern();
  void set_allocated_pattern(::google::fhir::stu3::proto::ElementDefinition_Pattern* pattern);

  // .google.fhir.stu3.proto.ElementDefinition.MinValue min_value = 25 [(.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_min_value() const;
  void clear_min_value();
  static const int kMinValueFieldNumber = 25;
  private:
  const ::google::fhir::stu3::proto::ElementDefinition_MinValue& _internal_min_value() const;
  public:
  const ::google::fhir::stu3::proto::ElementDefinition_MinValue& min_value() const;
  ::google::fhir::stu3::proto::ElementDefinition_MinValue* release_min_value();
  ::google::fhir::stu3::proto::ElementDefinition_MinValue* mutable_min_value();
  void set_allocated_min_value(::google::fhir::stu3::proto::ElementDefinition_MinValue* min_value);

  // .google.fhir.stu3.proto.ElementDefinition.MaxValue max_value = 26 [(.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_max_value() const;
  void clear_max_value();
  static const int kMaxValueFieldNumber = 26;
  private:
  const ::google::fhir::stu3::proto::ElementDefinition_MaxValue& _internal_max_value() const;
  public:
  const ::google::fhir::stu3::proto::ElementDefinition_MaxValue& max_value() const;
  ::google::fhir::stu3::proto::ElementDefinition_MaxValue* release_max_value();
  ::google::fhir::stu3::proto::ElementDefinition_MaxValue* mutable_max_value();
  void set_allocated_max_value(::google::fhir::stu3::proto::ElementDefinition_MaxValue* max_value);

  // .google.fhir.stu3.proto.Integer max_length = 27;
  bool has_max_length() const;
  void clear_max_length();
  static const int kMaxLengthFieldNumber = 27;
  private:
  const ::google::fhir::stu3::proto::Integer& _internal_max_length() const;
  public:
  const ::google::fhir::stu3::proto::Integer& max_length() const;
  ::google::fhir::stu3::proto::Integer* release_max_length();
  ::google::fhir::stu3::proto::Integer* mutable_max_length();
  void set_allocated_max_length(::google::fhir::stu3::proto::Integer* max_length);

  // .google.fhir.stu3.proto.Boolean must_support = 30;
  bool has_must_support() const;
  void clear_must_support();
  static const int kMustSupportFieldNumber = 30;
  private:
  const ::google::fhir::stu3::proto::Boolean& _internal_must_support() const;
  public:
  const ::google::fhir::stu3::proto::Boolean& must_support() const;
  ::google::fhir::stu3::proto::Boolean* release_must_support();
  ::google::fhir::stu3::proto::Boolean* mutable_must_support();
  void set_allocated_must_support(::google::fhir::stu3::proto::Boolean* must_support);

  // .google.fhir.stu3.proto.Boolean is_modifier = 31;
  bool has_is_modifier() const;
  void clear_is_modifier();
  static const int kIsModifierFieldNumber = 31;
  private:
  const ::google::fhir::stu3::proto::Boolean& _internal_is_modifier() const;
  public:
  const ::google::fhir::stu3::proto::Boolean& is_modifier() const;
  ::google::fhir::stu3::proto::Boolean* release_is_modifier();
  ::google::fhir::stu3::proto::Boolean* mutable_is_modifier();
  void set_allocated_is_modifier(::google::fhir::stu3::proto::Boolean* is_modifier);

  // .google.fhir.stu3.proto.Boolean is_summary = 32;
  bool has_is_summary() const;
  void clear_is_summary();
  static const int kIsSummaryFieldNumber = 32;
  private:
  const ::google::fhir::stu3::proto::Boolean& _internal_is_summary() const;
  public:
  const ::google::fhir::stu3::proto::Boolean& is_summary() const;
  ::google::fhir::stu3::proto::Boolean* release_is_summary();
  ::google::fhir::stu3::proto::Boolean* mutable_is_summary();
  void set_allocated_is_summary(::google::fhir::stu3::proto::Boolean* is_summary);

  // .google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding binding = 33;
  bool has_binding() const;
  void clear_binding();
  static const int kBindingFieldNumber = 33;
  private:
  const ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding& _internal_binding() const;
  public:
  const ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding& binding() const;
  ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding* release_binding();
  ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding* mutable_binding();
  void set_allocated_binding(::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding* binding);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ElementDefinition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::PropertyRepresentationCode > representation_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Coding > code_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::String > alias_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ElementDefinition_TypeRef > type_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ElementDefinition_Example > example_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Id > condition_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ElementDefinition_Constraint > constraint_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ElementDefinition_Mapping > mapping_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::String* path_;
  ::google::fhir::stu3::proto::String* slice_name_;
  ::google::fhir::stu3::proto::String* label_;
  ::google::fhir::stu3::proto::ElementDefinition_Slicing* slicing_;
  ::google::fhir::stu3::proto::String* short__;
  ::google::fhir::stu3::proto::Markdown* definition_;
  ::google::fhir::stu3::proto::Markdown* comment_;
  ::google::fhir::stu3::proto::Markdown* requirements_;
  ::google::fhir::stu3::proto::UnsignedInt* min_;
  ::google::fhir::stu3::proto::String* max_;
  ::google::fhir::stu3::proto::ElementDefinition_Base* base_;
  ::google::fhir::stu3::proto::Uri* content_reference_;
  ::google::fhir::stu3::proto::ElementDefinition_DefaultValue* default_value_;
  ::google::fhir::stu3::proto::Markdown* meaning_when_missing_;
  ::google::fhir::stu3::proto::String* order_meaning_;
  ::google::fhir::stu3::proto::ElementDefinition_Fixed* fixed_;
  ::google::fhir::stu3::proto::ElementDefinition_Pattern* pattern_;
  ::google::fhir::stu3::proto::ElementDefinition_MinValue* min_value_;
  ::google::fhir::stu3::proto::ElementDefinition_MaxValue* max_value_;
  ::google::fhir::stu3::proto::Integer* max_length_;
  ::google::fhir::stu3::proto::Boolean* must_support_;
  ::google::fhir::stu3::proto::Boolean* is_modifier_;
  ::google::fhir::stu3::proto::Boolean* is_summary_;
  ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding* binding_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Narrative : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.Narrative) */ {
 public:
  Narrative();
  virtual ~Narrative();

  Narrative(const Narrative& from);

  inline Narrative& operator=(const Narrative& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Narrative(Narrative&& from) noexcept
    : Narrative() {
    *this = ::std::move(from);
  }

  inline Narrative& operator=(Narrative&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Narrative& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Narrative* internal_default_instance() {
    return reinterpret_cast<const Narrative*>(
               &_Narrative_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(Narrative* other);
  friend void swap(Narrative& a, Narrative& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Narrative* New() const final {
    return CreateMaybeMessage<Narrative>(NULL);
  }

  Narrative* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Narrative>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Narrative& from);
  void MergeFrom(const Narrative& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Narrative* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.NarrativeStatusCode status = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::NarrativeStatusCode& _internal_status() const;
  public:
  const ::google::fhir::stu3::proto::NarrativeStatusCode& status() const;
  ::google::fhir::stu3::proto::NarrativeStatusCode* release_status();
  ::google::fhir::stu3::proto::NarrativeStatusCode* mutable_status();
  void set_allocated_status(::google::fhir::stu3::proto::NarrativeStatusCode* status);

  // .google.fhir.stu3.proto.Xhtml div = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_div() const;
  void clear_div();
  static const int kDivFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::Xhtml& _internal_div() const;
  public:
  const ::google::fhir::stu3::proto::Xhtml& div() const;
  ::google::fhir::stu3::proto::Xhtml* release_div();
  ::google::fhir::stu3::proto::Xhtml* mutable_div();
  void set_allocated_div(::google::fhir::stu3::proto::Xhtml* div);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.Narrative)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::NarrativeStatusCode* status_;
  ::google::fhir::stu3::proto::Xhtml* div_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ParameterDefinition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ParameterDefinition) */ {
 public:
  ParameterDefinition();
  virtual ~ParameterDefinition();

  ParameterDefinition(const ParameterDefinition& from);

  inline ParameterDefinition& operator=(const ParameterDefinition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParameterDefinition(ParameterDefinition&& from) noexcept
    : ParameterDefinition() {
    *this = ::std::move(from);
  }

  inline ParameterDefinition& operator=(ParameterDefinition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParameterDefinition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParameterDefinition* internal_default_instance() {
    return reinterpret_cast<const ParameterDefinition*>(
               &_ParameterDefinition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(ParameterDefinition* other);
  friend void swap(ParameterDefinition& a, ParameterDefinition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParameterDefinition* New() const final {
    return CreateMaybeMessage<ParameterDefinition>(NULL);
  }

  ParameterDefinition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParameterDefinition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParameterDefinition& from);
  void MergeFrom(const ParameterDefinition& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterDefinition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.Code name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Code& _internal_name() const;
  public:
  const ::google::fhir::stu3::proto::Code& name() const;
  ::google::fhir::stu3::proto::Code* release_name();
  ::google::fhir::stu3::proto::Code* mutable_name();
  void set_allocated_name(::google::fhir::stu3::proto::Code* name);

  // .google.fhir.stu3.proto.OperationParameterUseCode use = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_use() const;
  void clear_use();
  static const int kUseFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::OperationParameterUseCode& _internal_use() const;
  public:
  const ::google::fhir::stu3::proto::OperationParameterUseCode& use() const;
  ::google::fhir::stu3::proto::OperationParameterUseCode* release_use();
  ::google::fhir::stu3::proto::OperationParameterUseCode* mutable_use();
  void set_allocated_use(::google::fhir::stu3::proto::OperationParameterUseCode* use);

  // .google.fhir.stu3.proto.Integer min = 5;
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Integer& _internal_min() const;
  public:
  const ::google::fhir::stu3::proto::Integer& min() const;
  ::google::fhir::stu3::proto::Integer* release_min();
  ::google::fhir::stu3::proto::Integer* mutable_min();
  void set_allocated_min(::google::fhir::stu3::proto::Integer* min);

  // .google.fhir.stu3.proto.String max = 6;
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::String& _internal_max() const;
  public:
  const ::google::fhir::stu3::proto::String& max() const;
  ::google::fhir::stu3::proto::String* release_max();
  ::google::fhir::stu3::proto::String* mutable_max();
  void set_allocated_max(::google::fhir::stu3::proto::String* max);

  // .google.fhir.stu3.proto.String documentation = 7;
  bool has_documentation() const;
  void clear_documentation();
  static const int kDocumentationFieldNumber = 7;
  private:
  const ::google::fhir::stu3::proto::String& _internal_documentation() const;
  public:
  const ::google::fhir::stu3::proto::String& documentation() const;
  ::google::fhir::stu3::proto::String* release_documentation();
  ::google::fhir::stu3::proto::String* mutable_documentation();
  void set_allocated_documentation(::google::fhir::stu3::proto::String* documentation);

  // .google.fhir.stu3.proto.FHIRAllTypesCode type = 8 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 8;
  private:
  const ::google::fhir::stu3::proto::FHIRAllTypesCode& _internal_type() const;
  public:
  const ::google::fhir::stu3::proto::FHIRAllTypesCode& type() const;
  ::google::fhir::stu3::proto::FHIRAllTypesCode* release_type();
  ::google::fhir::stu3::proto::FHIRAllTypesCode* mutable_type();
  void set_allocated_type(::google::fhir::stu3::proto::FHIRAllTypesCode* type);

  // .google.fhir.stu3.proto.Reference profile = 9 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/StructureDefinition"];
  bool has_profile() const;
  void clear_profile();
  static const int kProfileFieldNumber = 9;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_profile() const;
  public:
  const ::google::fhir::stu3::proto::Reference& profile() const;
  ::google::fhir::stu3::proto::Reference* release_profile();
  ::google::fhir::stu3::proto::Reference* mutable_profile();
  void set_allocated_profile(::google::fhir::stu3::proto::Reference* profile);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ParameterDefinition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::Code* name_;
  ::google::fhir::stu3::proto::OperationParameterUseCode* use_;
  ::google::fhir::stu3::proto::Integer* min_;
  ::google::fhir::stu3::proto::String* max_;
  ::google::fhir::stu3::proto::String* documentation_;
  ::google::fhir::stu3::proto::FHIRAllTypesCode* type_;
  ::google::fhir::stu3::proto::Reference* profile_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RelatedArtifact : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.RelatedArtifact) */ {
 public:
  RelatedArtifact();
  virtual ~RelatedArtifact();

  RelatedArtifact(const RelatedArtifact& from);

  inline RelatedArtifact& operator=(const RelatedArtifact& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RelatedArtifact(RelatedArtifact&& from) noexcept
    : RelatedArtifact() {
    *this = ::std::move(from);
  }

  inline RelatedArtifact& operator=(RelatedArtifact&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RelatedArtifact& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RelatedArtifact* internal_default_instance() {
    return reinterpret_cast<const RelatedArtifact*>(
               &_RelatedArtifact_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(RelatedArtifact* other);
  friend void swap(RelatedArtifact& a, RelatedArtifact& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RelatedArtifact* New() const final {
    return CreateMaybeMessage<RelatedArtifact>(NULL);
  }

  RelatedArtifact* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RelatedArtifact>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RelatedArtifact& from);
  void MergeFrom(const RelatedArtifact& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RelatedArtifact* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.RelatedArtifactTypeCode type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::RelatedArtifactTypeCode& _internal_type() const;
  public:
  const ::google::fhir::stu3::proto::RelatedArtifactTypeCode& type() const;
  ::google::fhir::stu3::proto::RelatedArtifactTypeCode* release_type();
  ::google::fhir::stu3::proto::RelatedArtifactTypeCode* mutable_type();
  void set_allocated_type(::google::fhir::stu3::proto::RelatedArtifactTypeCode* type);

  // .google.fhir.stu3.proto.String display = 4;
  bool has_display() const;
  void clear_display();
  static const int kDisplayFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::String& _internal_display() const;
  public:
  const ::google::fhir::stu3::proto::String& display() const;
  ::google::fhir::stu3::proto::String* release_display();
  ::google::fhir::stu3::proto::String* mutable_display();
  void set_allocated_display(::google::fhir::stu3::proto::String* display);

  // .google.fhir.stu3.proto.String citation = 5;
  bool has_citation() const;
  void clear_citation();
  static const int kCitationFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::String& _internal_citation() const;
  public:
  const ::google::fhir::stu3::proto::String& citation() const;
  ::google::fhir::stu3::proto::String* release_citation();
  ::google::fhir::stu3::proto::String* mutable_citation();
  void set_allocated_citation(::google::fhir::stu3::proto::String* citation);

  // .google.fhir.stu3.proto.Uri url = 6;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_url() const;
  public:
  const ::google::fhir::stu3::proto::Uri& url() const;
  ::google::fhir::stu3::proto::Uri* release_url();
  ::google::fhir::stu3::proto::Uri* mutable_url();
  void set_allocated_url(::google::fhir::stu3::proto::Uri* url);

  // .google.fhir.stu3.proto.Attachment document = 7;
  bool has_document() const;
  void clear_document();
  static const int kDocumentFieldNumber = 7;
  private:
  const ::google::fhir::stu3::proto::Attachment& _internal_document() const;
  public:
  const ::google::fhir::stu3::proto::Attachment& document() const;
  ::google::fhir::stu3::proto::Attachment* release_document();
  ::google::fhir::stu3::proto::Attachment* mutable_document();
  void set_allocated_document(::google::fhir::stu3::proto::Attachment* document);

  // .google.fhir.stu3.proto.Reference resource = 8 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
  bool has_resource() const;
  void clear_resource();
  static const int kResourceFieldNumber = 8;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_resource() const;
  public:
  const ::google::fhir::stu3::proto::Reference& resource() const;
  ::google::fhir::stu3::proto::Reference* release_resource();
  ::google::fhir::stu3::proto::Reference* mutable_resource();
  void set_allocated_resource(::google::fhir::stu3::proto::Reference* resource);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.RelatedArtifact)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::RelatedArtifactTypeCode* type_;
  ::google::fhir::stu3::proto::String* display_;
  ::google::fhir::stu3::proto::String* citation_;
  ::google::fhir::stu3::proto::Uri* url_;
  ::google::fhir::stu3::proto::Attachment* document_;
  ::google::fhir::stu3::proto::Reference* resource_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Resource : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.Resource) */ {
 public:
  Resource();
  virtual ~Resource();

  Resource(const Resource& from);

  inline Resource& operator=(const Resource& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Resource(Resource&& from) noexcept
    : Resource() {
    *this = ::std::move(from);
  }

  inline Resource& operator=(Resource&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Resource& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Resource* internal_default_instance() {
    return reinterpret_cast<const Resource*>(
               &_Resource_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(Resource* other);
  friend void swap(Resource& a, Resource& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Resource* New() const final {
    return CreateMaybeMessage<Resource>(NULL);
  }

  Resource* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Resource>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Resource& from);
  void MergeFrom(const Resource& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Resource* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.Id id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Id& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::Id& id() const;
  ::google::fhir::stu3::proto::Id* release_id();
  ::google::fhir::stu3::proto::Id* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::Id* id);

  // .google.fhir.stu3.proto.Meta meta = 2;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Meta& _internal_meta() const;
  public:
  const ::google::fhir::stu3::proto::Meta& meta() const;
  ::google::fhir::stu3::proto::Meta* release_meta();
  ::google::fhir::stu3::proto::Meta* mutable_meta();
  void set_allocated_meta(::google::fhir::stu3::proto::Meta* meta);

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  bool has_implicit_rules() const;
  void clear_implicit_rules();
  static const int kImplicitRulesFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_implicit_rules() const;
  public:
  const ::google::fhir::stu3::proto::Uri& implicit_rules() const;
  ::google::fhir::stu3::proto::Uri* release_implicit_rules();
  ::google::fhir::stu3::proto::Uri* mutable_implicit_rules();
  void set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules);

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::LanguageCode& _internal_language() const;
  public:
  const ::google::fhir::stu3::proto::LanguageCode& language() const;
  ::google::fhir::stu3::proto::LanguageCode* release_language();
  ::google::fhir::stu3::proto::LanguageCode* mutable_language();
  void set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.Resource)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::fhir::stu3::proto::Id* id_;
  ::google::fhir::stu3::proto::Meta* meta_;
  ::google::fhir::stu3::proto::Uri* implicit_rules_;
  ::google::fhir::stu3::proto::LanguageCode* language_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TriggerDefinition_EventTiming : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.TriggerDefinition.EventTiming) */ {
 public:
  TriggerDefinition_EventTiming();
  virtual ~TriggerDefinition_EventTiming();

  TriggerDefinition_EventTiming(const TriggerDefinition_EventTiming& from);

  inline TriggerDefinition_EventTiming& operator=(const TriggerDefinition_EventTiming& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TriggerDefinition_EventTiming(TriggerDefinition_EventTiming&& from) noexcept
    : TriggerDefinition_EventTiming() {
    *this = ::std::move(from);
  }

  inline TriggerDefinition_EventTiming& operator=(TriggerDefinition_EventTiming&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TriggerDefinition_EventTiming& default_instance();

  enum EventTimingCase {
    kTiming = 1,
    kReference = 2,
    kDate = 3,
    kDateTime = 4,
    EVENT_TIMING_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TriggerDefinition_EventTiming* internal_default_instance() {
    return reinterpret_cast<const TriggerDefinition_EventTiming*>(
               &_TriggerDefinition_EventTiming_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(TriggerDefinition_EventTiming* other);
  friend void swap(TriggerDefinition_EventTiming& a, TriggerDefinition_EventTiming& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TriggerDefinition_EventTiming* New() const final {
    return CreateMaybeMessage<TriggerDefinition_EventTiming>(NULL);
  }

  TriggerDefinition_EventTiming* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TriggerDefinition_EventTiming>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TriggerDefinition_EventTiming& from);
  void MergeFrom(const TriggerDefinition_EventTiming& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TriggerDefinition_EventTiming* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.Timing timing = 1;
  bool has_timing() const;
  void clear_timing();
  static const int kTimingFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Timing& _internal_timing() const;
  public:
  const ::google::fhir::stu3::proto::Timing& timing() const;
  ::google::fhir::stu3::proto::Timing* release_timing();
  ::google::fhir::stu3::proto::Timing* mutable_timing();
  void set_allocated_timing(::google::fhir::stu3::proto::Timing* timing);

  // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Schedule"];
  bool has_reference() const;
  void clear_reference();
  static const int kReferenceFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_reference() const;
  public:
  const ::google::fhir::stu3::proto::Reference& reference() const;
  ::google::fhir::stu3::proto::Reference* release_reference();
  ::google::fhir::stu3::proto::Reference* mutable_reference();
  void set_allocated_reference(::google::fhir::stu3::proto::Reference* reference);

  // .google.fhir.stu3.proto.Date date = 3;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Date& _internal_date() const;
  public:
  const ::google::fhir::stu3::proto::Date& date() const;
  ::google::fhir::stu3::proto::Date* release_date();
  ::google::fhir::stu3::proto::Date* mutable_date();
  void set_allocated_date(::google::fhir::stu3::proto::Date* date);

  // .google.fhir.stu3.proto.DateTime date_time = 4;
  bool has_date_time() const;
  void clear_date_time();
  static const int kDateTimeFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_date_time() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& date_time() const;
  ::google::fhir::stu3::proto::DateTime* release_date_time();
  ::google::fhir::stu3::proto::DateTime* mutable_date_time();
  void set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time);

  void clear_event_timing();
  EventTimingCase event_timing_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.TriggerDefinition.EventTiming)
 private:
  void set_has_timing();
  void set_has_reference();
  void set_has_date();
  void set_has_date_time();

  inline bool has_event_timing() const;
  inline void clear_has_event_timing();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union EventTimingUnion {
    EventTimingUnion() {}
    ::google::fhir::stu3::proto::Timing* timing_;
    ::google::fhir::stu3::proto::Reference* reference_;
    ::google::fhir::stu3::proto::Date* date_;
    ::google::fhir::stu3::proto::DateTime* date_time_;
  } event_timing_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TriggerDefinition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.TriggerDefinition) */ {
 public:
  TriggerDefinition();
  virtual ~TriggerDefinition();

  TriggerDefinition(const TriggerDefinition& from);

  inline TriggerDefinition& operator=(const TriggerDefinition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TriggerDefinition(TriggerDefinition&& from) noexcept
    : TriggerDefinition() {
    *this = ::std::move(from);
  }

  inline TriggerDefinition& operator=(TriggerDefinition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TriggerDefinition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TriggerDefinition* internal_default_instance() {
    return reinterpret_cast<const TriggerDefinition*>(
               &_TriggerDefinition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(TriggerDefinition* other);
  friend void swap(TriggerDefinition& a, TriggerDefinition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TriggerDefinition* New() const final {
    return CreateMaybeMessage<TriggerDefinition>(NULL);
  }

  TriggerDefinition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TriggerDefinition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TriggerDefinition& from);
  void MergeFrom(const TriggerDefinition& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TriggerDefinition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef TriggerDefinition_EventTiming EventTiming;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.TriggerTypeCode type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::TriggerTypeCode& _internal_type() const;
  public:
  const ::google::fhir::stu3::proto::TriggerTypeCode& type() const;
  ::google::fhir::stu3::proto::TriggerTypeCode* release_type();
  ::google::fhir::stu3::proto::TriggerTypeCode* mutable_type();
  void set_allocated_type(::google::fhir::stu3::proto::TriggerTypeCode* type);

  // .google.fhir.stu3.proto.String event_name = 4;
  bool has_event_name() const;
  void clear_event_name();
  static const int kEventNameFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::String& _internal_event_name() const;
  public:
  const ::google::fhir::stu3::proto::String& event_name() const;
  ::google::fhir::stu3::proto::String* release_event_name();
  ::google::fhir::stu3::proto::String* mutable_event_name();
  void set_allocated_event_name(::google::fhir::stu3::proto::String* event_name);

  // .google.fhir.stu3.proto.TriggerDefinition.EventTiming event_timing = 5 [(.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_event_timing() const;
  void clear_event_timing();
  static const int kEventTimingFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::TriggerDefinition_EventTiming& _internal_event_timing() const;
  public:
  const ::google::fhir::stu3::proto::TriggerDefinition_EventTiming& event_timing() const;
  ::google::fhir::stu3::proto::TriggerDefinition_EventTiming* release_event_timing();
  ::google::fhir::stu3::proto::TriggerDefinition_EventTiming* mutable_event_timing();
  void set_allocated_event_timing(::google::fhir::stu3::proto::TriggerDefinition_EventTiming* event_timing);

  // .google.fhir.stu3.proto.DataRequirement event_data = 6;
  bool has_event_data() const;
  void clear_event_data();
  static const int kEventDataFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::DataRequirement& _internal_event_data() const;
  public:
  const ::google::fhir::stu3::proto::DataRequirement& event_data() const;
  ::google::fhir::stu3::proto::DataRequirement* release_event_data();
  ::google::fhir::stu3::proto::DataRequirement* mutable_event_data();
  void set_allocated_event_data(::google::fhir::stu3::proto::DataRequirement* event_data);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.TriggerDefinition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::TriggerTypeCode* type_;
  ::google::fhir::stu3::proto::String* event_name_;
  ::google::fhir::stu3::proto::TriggerDefinition_EventTiming* event_timing_;
  ::google::fhir::stu3::proto::DataRequirement* event_data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsageContext_Value : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.UsageContext.Value) */ {
 public:
  UsageContext_Value();
  virtual ~UsageContext_Value();

  UsageContext_Value(const UsageContext_Value& from);

  inline UsageContext_Value& operator=(const UsageContext_Value& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsageContext_Value(UsageContext_Value&& from) noexcept
    : UsageContext_Value() {
    *this = ::std::move(from);
  }

  inline UsageContext_Value& operator=(UsageContext_Value&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsageContext_Value& default_instance();

  enum ValueCase {
    kCodeableConcept = 1,
    kQuantity = 2,
    kRange = 3,
    VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsageContext_Value* internal_default_instance() {
    return reinterpret_cast<const UsageContext_Value*>(
               &_UsageContext_Value_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(UsageContext_Value* other);
  friend void swap(UsageContext_Value& a, UsageContext_Value& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsageContext_Value* New() const final {
    return CreateMaybeMessage<UsageContext_Value>(NULL);
  }

  UsageContext_Value* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsageContext_Value>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsageContext_Value& from);
  void MergeFrom(const UsageContext_Value& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsageContext_Value* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
  bool has_codeable_concept() const;
  void clear_codeable_concept();
  static const int kCodeableConceptFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_codeable_concept() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& codeable_concept() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_codeable_concept();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_codeable_concept();
  void set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept);

  // .google.fhir.stu3.proto.Quantity quantity = 2;
  bool has_quantity() const;
  void clear_quantity();
  static const int kQuantityFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Quantity& _internal_quantity() const;
  public:
  const ::google::fhir::stu3::proto::Quantity& quantity() const;
  ::google::fhir::stu3::proto::Quantity* release_quantity();
  ::google::fhir::stu3::proto::Quantity* mutable_quantity();
  void set_allocated_quantity(::google::fhir::stu3::proto::Quantity* quantity);

  // .google.fhir.stu3.proto.Range range = 3;
  bool has_range() const;
  void clear_range();
  static const int kRangeFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Range& _internal_range() const;
  public:
  const ::google::fhir::stu3::proto::Range& range() const;
  ::google::fhir::stu3::proto::Range* release_range();
  ::google::fhir::stu3::proto::Range* mutable_range();
  void set_allocated_range(::google::fhir::stu3::proto::Range* range);

  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.UsageContext.Value)
 private:
  void set_has_codeable_concept();
  void set_has_quantity();
  void set_has_range();

  inline bool has_value() const;
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union ValueUnion {
    ValueUnion() {}
    ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
    ::google::fhir::stu3::proto::Quantity* quantity_;
    ::google::fhir::stu3::proto::Range* range_;
  } value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsageContext : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.UsageContext) */ {
 public:
  UsageContext();
  virtual ~UsageContext();

  UsageContext(const UsageContext& from);

  inline UsageContext& operator=(const UsageContext& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsageContext(UsageContext&& from) noexcept
    : UsageContext() {
    *this = ::std::move(from);
  }

  inline UsageContext& operator=(UsageContext&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsageContext& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsageContext* internal_default_instance() {
    return reinterpret_cast<const UsageContext*>(
               &_UsageContext_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(UsageContext* other);
  friend void swap(UsageContext& a, UsageContext& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsageContext* New() const final {
    return CreateMaybeMessage<UsageContext>(NULL);
  }

  UsageContext* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsageContext>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsageContext& from);
  void MergeFrom(const UsageContext& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsageContext* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UsageContext_Value Value;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.Coding code = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Coding& _internal_code() const;
  public:
  const ::google::fhir::stu3::proto::Coding& code() const;
  ::google::fhir::stu3::proto::Coding* release_code();
  ::google::fhir::stu3::proto::Coding* mutable_code();
  void set_allocated_code(::google::fhir::stu3::proto::Coding* code);

  // .google.fhir.stu3.proto.UsageContext.Value value = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::UsageContext_Value& _internal_value() const;
  public:
  const ::google::fhir::stu3::proto::UsageContext_Value& value() const;
  ::google::fhir::stu3::proto::UsageContext_Value* release_value();
  ::google::fhir::stu3::proto::UsageContext_Value* mutable_value();
  void set_allocated_value(::google::fhir::stu3::proto::UsageContext_Value* value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.UsageContext)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::Coding* code_;
  ::google::fhir::stu3::proto::UsageContext_Value* value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BackboneElement

// .google.fhir.stu3.proto.String id = 1;
inline bool BackboneElement::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& BackboneElement::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& BackboneElement::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.BackboneElement.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* BackboneElement::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.BackboneElement.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* BackboneElement::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.BackboneElement.id)
  return id_;
}
inline void BackboneElement::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.BackboneElement.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int BackboneElement::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* BackboneElement::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.BackboneElement.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
BackboneElement::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.BackboneElement.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& BackboneElement::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.BackboneElement.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* BackboneElement::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.BackboneElement.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
BackboneElement::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.BackboneElement.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int BackboneElement::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* BackboneElement::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.BackboneElement.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
BackboneElement::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.BackboneElement.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& BackboneElement::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.BackboneElement.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* BackboneElement::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.BackboneElement.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
BackboneElement::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.BackboneElement.modifier_extension)
  return modifier_extension_;
}

// -------------------------------------------------------------------

// ContactDetail

// .google.fhir.stu3.proto.String id = 1;
inline bool ContactDetail::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ContactDetail::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ContactDetail::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ContactDetail.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ContactDetail::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ContactDetail.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ContactDetail::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ContactDetail.id)
  return id_;
}
inline void ContactDetail::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ContactDetail.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int ContactDetail::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ContactDetail::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ContactDetail.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ContactDetail::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ContactDetail.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ContactDetail::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ContactDetail.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ContactDetail::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ContactDetail.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ContactDetail::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ContactDetail.extension)
  return extension_;
}

// .google.fhir.stu3.proto.String name = 3;
inline bool ContactDetail::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ContactDetail::_internal_name() const {
  return *name_;
}
inline const ::google::fhir::stu3::proto::String& ContactDetail::name() const {
  const ::google::fhir::stu3::proto::String* p = name_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ContactDetail.name)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ContactDetail::release_name() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ContactDetail.name)
  
  ::google::fhir::stu3::proto::String* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ContactDetail::mutable_name() {
  
  if (name_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    name_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ContactDetail.name)
  return name_;
}
inline void ContactDetail::set_allocated_name(::google::fhir::stu3::proto::String* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ContactDetail.name)
}

// repeated .google.fhir.stu3.proto.ContactPoint telecom = 4;
inline int ContactDetail::telecom_size() const {
  return telecom_.size();
}
inline ::google::fhir::stu3::proto::ContactPoint* ContactDetail::mutable_telecom(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ContactDetail.telecom)
  return telecom_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >*
ContactDetail::mutable_telecom() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ContactDetail.telecom)
  return &telecom_;
}
inline const ::google::fhir::stu3::proto::ContactPoint& ContactDetail::telecom(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ContactDetail.telecom)
  return telecom_.Get(index);
}
inline ::google::fhir::stu3::proto::ContactPoint* ContactDetail::add_telecom() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ContactDetail.telecom)
  return telecom_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >&
ContactDetail::telecom() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ContactDetail.telecom)
  return telecom_;
}

// -------------------------------------------------------------------

// Contributor

// .google.fhir.stu3.proto.String id = 1;
inline bool Contributor::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& Contributor::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& Contributor::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.Contributor.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* Contributor::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.Contributor.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* Contributor::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.Contributor.id)
  return id_;
}
inline void Contributor::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Contributor.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int Contributor::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* Contributor::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.Contributor.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
Contributor::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.Contributor.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& Contributor::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.Contributor.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* Contributor::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.Contributor.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
Contributor::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.Contributor.extension)
  return extension_;
}

// .google.fhir.stu3.proto.ContributorTypeCode type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool Contributor::has_type() const {
  return this != internal_default_instance() && type_ != NULL;
}
inline const ::google::fhir::stu3::proto::ContributorTypeCode& Contributor::_internal_type() const {
  return *type_;
}
inline const ::google::fhir::stu3::proto::ContributorTypeCode& Contributor::type() const {
  const ::google::fhir::stu3::proto::ContributorTypeCode* p = type_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.Contributor.type)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::ContributorTypeCode*>(
      &::google::fhir::stu3::proto::_ContributorTypeCode_default_instance_);
}
inline ::google::fhir::stu3::proto::ContributorTypeCode* Contributor::release_type() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.Contributor.type)
  
  ::google::fhir::stu3::proto::ContributorTypeCode* temp = type_;
  type_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::ContributorTypeCode* Contributor::mutable_type() {
  
  if (type_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::ContributorTypeCode>(GetArenaNoVirtual());
    type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.Contributor.type)
  return type_;
}
inline void Contributor::set_allocated_type(::google::fhir::stu3::proto::ContributorTypeCode* type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(type_);
  }
  if (type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, type, submessage_arena);
    }
    
  } else {
    
  }
  type_ = type;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Contributor.type)
}

// .google.fhir.stu3.proto.String name = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool Contributor::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& Contributor::_internal_name() const {
  return *name_;
}
inline const ::google::fhir::stu3::proto::String& Contributor::name() const {
  const ::google::fhir::stu3::proto::String* p = name_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.Contributor.name)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* Contributor::release_name() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.Contributor.name)
  
  ::google::fhir::stu3::proto::String* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* Contributor::mutable_name() {
  
  if (name_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    name_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.Contributor.name)
  return name_;
}
inline void Contributor::set_allocated_name(::google::fhir::stu3::proto::String* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Contributor.name)
}

// repeated .google.fhir.stu3.proto.ContactDetail contact = 5;
inline int Contributor::contact_size() const {
  return contact_.size();
}
inline void Contributor::clear_contact() {
  contact_.Clear();
}
inline ::google::fhir::stu3::proto::ContactDetail* Contributor::mutable_contact(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.Contributor.contact)
  return contact_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactDetail >*
Contributor::mutable_contact() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.Contributor.contact)
  return &contact_;
}
inline const ::google::fhir::stu3::proto::ContactDetail& Contributor::contact(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.Contributor.contact)
  return contact_.Get(index);
}
inline ::google::fhir::stu3::proto::ContactDetail* Contributor::add_contact() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.Contributor.contact)
  return contact_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactDetail >&
Contributor::contact() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.Contributor.contact)
  return contact_;
}

// -------------------------------------------------------------------

// DataRequirement_CodeFilter_ValueSet

// .google.fhir.stu3.proto.String string_value = 1[json_name = "string"];
inline bool DataRequirement_CodeFilter_ValueSet::has_string_value() const {
  return value_set_case() == kStringValue;
}
inline void DataRequirement_CodeFilter_ValueSet::set_has_string_value() {
  _oneof_case_[0] = kStringValue;
}
inline const ::google::fhir::stu3::proto::String& DataRequirement_CodeFilter_ValueSet::_internal_string_value() const {
  return *value_set_.string_value_;
}
inline ::google::fhir::stu3::proto::String* DataRequirement_CodeFilter_ValueSet::release_string_value() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet.string_value)
  if (has_string_value()) {
    clear_has_value_set();
      ::google::fhir::stu3::proto::String* temp = value_set_.string_value_;
    value_set_.string_value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::String& DataRequirement_CodeFilter_ValueSet::string_value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet.string_value)
  return has_string_value()
      ? *value_set_.string_value_
      : *reinterpret_cast< ::google::fhir::stu3::proto::String*>(&::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* DataRequirement_CodeFilter_ValueSet::mutable_string_value() {
  if (!has_string_value()) {
    clear_value_set();
    set_has_string_value();
    value_set_.string_value_ = CreateMaybeMessage< ::google::fhir::stu3::proto::String >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet.string_value)
  return value_set_.string_value_;
}

// .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ValueSet"];
inline bool DataRequirement_CodeFilter_ValueSet::has_reference() const {
  return value_set_case() == kReference;
}
inline void DataRequirement_CodeFilter_ValueSet::set_has_reference() {
  _oneof_case_[0] = kReference;
}
inline const ::google::fhir::stu3::proto::Reference& DataRequirement_CodeFilter_ValueSet::_internal_reference() const {
  return *value_set_.reference_;
}
inline ::google::fhir::stu3::proto::Reference* DataRequirement_CodeFilter_ValueSet::release_reference() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet.reference)
  if (has_reference()) {
    clear_has_value_set();
      ::google::fhir::stu3::proto::Reference* temp = value_set_.reference_;
    value_set_.reference_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Reference& DataRequirement_CodeFilter_ValueSet::reference() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet.reference)
  return has_reference()
      ? *value_set_.reference_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Reference*>(&::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* DataRequirement_CodeFilter_ValueSet::mutable_reference() {
  if (!has_reference()) {
    clear_value_set();
    set_has_reference();
    value_set_.reference_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Reference >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet.reference)
  return value_set_.reference_;
}

inline bool DataRequirement_CodeFilter_ValueSet::has_value_set() const {
  return value_set_case() != VALUE_SET_NOT_SET;
}
inline void DataRequirement_CodeFilter_ValueSet::clear_has_value_set() {
  _oneof_case_[0] = VALUE_SET_NOT_SET;
}
inline DataRequirement_CodeFilter_ValueSet::ValueSetCase DataRequirement_CodeFilter_ValueSet::value_set_case() const {
  return DataRequirement_CodeFilter_ValueSet::ValueSetCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// DataRequirement_CodeFilter

// .google.fhir.stu3.proto.String id = 1;
inline bool DataRequirement_CodeFilter::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& DataRequirement_CodeFilter::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& DataRequirement_CodeFilter::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataRequirement.CodeFilter.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* DataRequirement_CodeFilter::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DataRequirement.CodeFilter.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* DataRequirement_CodeFilter::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DataRequirement.CodeFilter.id)
  return id_;
}
inline void DataRequirement_CodeFilter::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DataRequirement.CodeFilter.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int DataRequirement_CodeFilter::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* DataRequirement_CodeFilter::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DataRequirement.CodeFilter.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
DataRequirement_CodeFilter::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DataRequirement.CodeFilter.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& DataRequirement_CodeFilter::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataRequirement.CodeFilter.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* DataRequirement_CodeFilter::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DataRequirement.CodeFilter.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
DataRequirement_CodeFilter::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DataRequirement.CodeFilter.extension)
  return extension_;
}

// .google.fhir.stu3.proto.String path = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool DataRequirement_CodeFilter::has_path() const {
  return this != internal_default_instance() && path_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& DataRequirement_CodeFilter::_internal_path() const {
  return *path_;
}
inline const ::google::fhir::stu3::proto::String& DataRequirement_CodeFilter::path() const {
  const ::google::fhir::stu3::proto::String* p = path_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataRequirement.CodeFilter.path)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* DataRequirement_CodeFilter::release_path() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DataRequirement.CodeFilter.path)
  
  ::google::fhir::stu3::proto::String* temp = path_;
  path_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* DataRequirement_CodeFilter::mutable_path() {
  
  if (path_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    path_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DataRequirement.CodeFilter.path)
  return path_;
}
inline void DataRequirement_CodeFilter::set_allocated_path(::google::fhir::stu3::proto::String* path) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(path_);
  }
  if (path) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      path = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, path, submessage_arena);
    }
    
  } else {
    
  }
  path_ = path;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DataRequirement.CodeFilter.path)
}

// .google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet value_set = 4 [(.google.fhir.stu3.proto.is_choice_type) = true];
inline bool DataRequirement_CodeFilter::has_value_set() const {
  return this != internal_default_instance() && value_set_ != NULL;
}
inline void DataRequirement_CodeFilter::clear_value_set() {
  if (GetArenaNoVirtual() == NULL && value_set_ != NULL) {
    delete value_set_;
  }
  value_set_ = NULL;
}
inline const ::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSet& DataRequirement_CodeFilter::_internal_value_set() const {
  return *value_set_;
}
inline const ::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSet& DataRequirement_CodeFilter::value_set() const {
  const ::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSet* p = value_set_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataRequirement.CodeFilter.value_set)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSet*>(
      &::google::fhir::stu3::proto::_DataRequirement_CodeFilter_ValueSet_default_instance_);
}
inline ::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSet* DataRequirement_CodeFilter::release_value_set() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DataRequirement.CodeFilter.value_set)
  
  ::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSet* temp = value_set_;
  value_set_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSet* DataRequirement_CodeFilter::mutable_value_set() {
  
  if (value_set_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSet>(GetArenaNoVirtual());
    value_set_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DataRequirement.CodeFilter.value_set)
  return value_set_;
}
inline void DataRequirement_CodeFilter::set_allocated_value_set(::google::fhir::stu3::proto::DataRequirement_CodeFilter_ValueSet* value_set) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete value_set_;
  }
  if (value_set) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      value_set = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value_set, submessage_arena);
    }
    
  } else {
    
  }
  value_set_ = value_set;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DataRequirement.CodeFilter.value_set)
}

// repeated .google.fhir.stu3.proto.Code value_code = 5;
inline int DataRequirement_CodeFilter::value_code_size() const {
  return value_code_.size();
}
inline ::google::fhir::stu3::proto::Code* DataRequirement_CodeFilter::mutable_value_code(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DataRequirement.CodeFilter.value_code)
  return value_code_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Code >*
DataRequirement_CodeFilter::mutable_value_code() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DataRequirement.CodeFilter.value_code)
  return &value_code_;
}
inline const ::google::fhir::stu3::proto::Code& DataRequirement_CodeFilter::value_code(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataRequirement.CodeFilter.value_code)
  return value_code_.Get(index);
}
inline ::google::fhir::stu3::proto::Code* DataRequirement_CodeFilter::add_value_code() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DataRequirement.CodeFilter.value_code)
  return value_code_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Code >&
DataRequirement_CodeFilter::value_code() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DataRequirement.CodeFilter.value_code)
  return value_code_;
}

// repeated .google.fhir.stu3.proto.Coding value_coding = 6;
inline int DataRequirement_CodeFilter::value_coding_size() const {
  return value_coding_.size();
}
inline ::google::fhir::stu3::proto::Coding* DataRequirement_CodeFilter::mutable_value_coding(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DataRequirement.CodeFilter.value_coding)
  return value_coding_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Coding >*
DataRequirement_CodeFilter::mutable_value_coding() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DataRequirement.CodeFilter.value_coding)
  return &value_coding_;
}
inline const ::google::fhir::stu3::proto::Coding& DataRequirement_CodeFilter::value_coding(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataRequirement.CodeFilter.value_coding)
  return value_coding_.Get(index);
}
inline ::google::fhir::stu3::proto::Coding* DataRequirement_CodeFilter::add_value_coding() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DataRequirement.CodeFilter.value_coding)
  return value_coding_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Coding >&
DataRequirement_CodeFilter::value_coding() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DataRequirement.CodeFilter.value_coding)
  return value_coding_;
}

// repeated .google.fhir.stu3.proto.CodeableConcept value_codeable_concept = 7;
inline int DataRequirement_CodeFilter::value_codeable_concept_size() const {
  return value_codeable_concept_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* DataRequirement_CodeFilter::mutable_value_codeable_concept(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DataRequirement.CodeFilter.value_codeable_concept)
  return value_codeable_concept_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
DataRequirement_CodeFilter::mutable_value_codeable_concept() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DataRequirement.CodeFilter.value_codeable_concept)
  return &value_codeable_concept_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& DataRequirement_CodeFilter::value_codeable_concept(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataRequirement.CodeFilter.value_codeable_concept)
  return value_codeable_concept_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* DataRequirement_CodeFilter::add_value_codeable_concept() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DataRequirement.CodeFilter.value_codeable_concept)
  return value_codeable_concept_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
DataRequirement_CodeFilter::value_codeable_concept() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DataRequirement.CodeFilter.value_codeable_concept)
  return value_codeable_concept_;
}

// -------------------------------------------------------------------

// DataRequirement_DateFilter_Value

// .google.fhir.stu3.proto.DateTime date_time = 1;
inline bool DataRequirement_DateFilter_Value::has_date_time() const {
  return value_case() == kDateTime;
}
inline void DataRequirement_DateFilter_Value::set_has_date_time() {
  _oneof_case_[0] = kDateTime;
}
inline const ::google::fhir::stu3::proto::DateTime& DataRequirement_DateFilter_Value::_internal_date_time() const {
  return *value_.date_time_;
}
inline ::google::fhir::stu3::proto::DateTime* DataRequirement_DateFilter_Value::release_date_time() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DataRequirement.DateFilter.Value.date_time)
  if (has_date_time()) {
    clear_has_value();
      ::google::fhir::stu3::proto::DateTime* temp = value_.date_time_;
    value_.date_time_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::DateTime& DataRequirement_DateFilter_Value::date_time() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataRequirement.DateFilter.Value.date_time)
  return has_date_time()
      ? *value_.date_time_
      : *reinterpret_cast< ::google::fhir::stu3::proto::DateTime*>(&::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* DataRequirement_DateFilter_Value::mutable_date_time() {
  if (!has_date_time()) {
    clear_value();
    set_has_date_time();
    value_.date_time_ = CreateMaybeMessage< ::google::fhir::stu3::proto::DateTime >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DataRequirement.DateFilter.Value.date_time)
  return value_.date_time_;
}

// .google.fhir.stu3.proto.Period period = 2;
inline bool DataRequirement_DateFilter_Value::has_period() const {
  return value_case() == kPeriod;
}
inline void DataRequirement_DateFilter_Value::set_has_period() {
  _oneof_case_[0] = kPeriod;
}
inline const ::google::fhir::stu3::proto::Period& DataRequirement_DateFilter_Value::_internal_period() const {
  return *value_.period_;
}
inline ::google::fhir::stu3::proto::Period* DataRequirement_DateFilter_Value::release_period() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DataRequirement.DateFilter.Value.period)
  if (has_period()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Period* temp = value_.period_;
    value_.period_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Period& DataRequirement_DateFilter_Value::period() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataRequirement.DateFilter.Value.period)
  return has_period()
      ? *value_.period_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Period*>(&::google::fhir::stu3::proto::_Period_default_instance_);
}
inline ::google::fhir::stu3::proto::Period* DataRequirement_DateFilter_Value::mutable_period() {
  if (!has_period()) {
    clear_value();
    set_has_period();
    value_.period_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Period >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DataRequirement.DateFilter.Value.period)
  return value_.period_;
}

// .google.fhir.stu3.proto.Duration duration = 3;
inline bool DataRequirement_DateFilter_Value::has_duration() const {
  return value_case() == kDuration;
}
inline void DataRequirement_DateFilter_Value::set_has_duration() {
  _oneof_case_[0] = kDuration;
}
inline const ::google::fhir::stu3::proto::Duration& DataRequirement_DateFilter_Value::_internal_duration() const {
  return *value_.duration_;
}
inline ::google::fhir::stu3::proto::Duration* DataRequirement_DateFilter_Value::release_duration() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DataRequirement.DateFilter.Value.duration)
  if (has_duration()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Duration* temp = value_.duration_;
    value_.duration_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Duration& DataRequirement_DateFilter_Value::duration() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataRequirement.DateFilter.Value.duration)
  return has_duration()
      ? *value_.duration_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Duration*>(&::google::fhir::stu3::proto::_Duration_default_instance_);
}
inline ::google::fhir::stu3::proto::Duration* DataRequirement_DateFilter_Value::mutable_duration() {
  if (!has_duration()) {
    clear_value();
    set_has_duration();
    value_.duration_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Duration >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DataRequirement.DateFilter.Value.duration)
  return value_.duration_;
}

inline bool DataRequirement_DateFilter_Value::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void DataRequirement_DateFilter_Value::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline DataRequirement_DateFilter_Value::ValueCase DataRequirement_DateFilter_Value::value_case() const {
  return DataRequirement_DateFilter_Value::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// DataRequirement_DateFilter

// .google.fhir.stu3.proto.String id = 1;
inline bool DataRequirement_DateFilter::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& DataRequirement_DateFilter::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& DataRequirement_DateFilter::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataRequirement.DateFilter.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* DataRequirement_DateFilter::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DataRequirement.DateFilter.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* DataRequirement_DateFilter::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DataRequirement.DateFilter.id)
  return id_;
}
inline void DataRequirement_DateFilter::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DataRequirement.DateFilter.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int DataRequirement_DateFilter::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* DataRequirement_DateFilter::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DataRequirement.DateFilter.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
DataRequirement_DateFilter::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DataRequirement.DateFilter.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& DataRequirement_DateFilter::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataRequirement.DateFilter.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* DataRequirement_DateFilter::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DataRequirement.DateFilter.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
DataRequirement_DateFilter::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DataRequirement.DateFilter.extension)
  return extension_;
}

// .google.fhir.stu3.proto.String path = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool DataRequirement_DateFilter::has_path() const {
  return this != internal_default_instance() && path_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& DataRequirement_DateFilter::_internal_path() const {
  return *path_;
}
inline const ::google::fhir::stu3::proto::String& DataRequirement_DateFilter::path() const {
  const ::google::fhir::stu3::proto::String* p = path_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataRequirement.DateFilter.path)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* DataRequirement_DateFilter::release_path() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DataRequirement.DateFilter.path)
  
  ::google::fhir::stu3::proto::String* temp = path_;
  path_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* DataRequirement_DateFilter::mutable_path() {
  
  if (path_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    path_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DataRequirement.DateFilter.path)
  return path_;
}
inline void DataRequirement_DateFilter::set_allocated_path(::google::fhir::stu3::proto::String* path) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(path_);
  }
  if (path) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      path = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, path, submessage_arena);
    }
    
  } else {
    
  }
  path_ = path;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DataRequirement.DateFilter.path)
}

// .google.fhir.stu3.proto.DataRequirement.DateFilter.Value value = 4 [(.google.fhir.stu3.proto.is_choice_type) = true];
inline bool DataRequirement_DateFilter::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
inline void DataRequirement_DateFilter::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
}
inline const ::google::fhir::stu3::proto::DataRequirement_DateFilter_Value& DataRequirement_DateFilter::_internal_value() const {
  return *value_;
}
inline const ::google::fhir::stu3::proto::DataRequirement_DateFilter_Value& DataRequirement_DateFilter::value() const {
  const ::google::fhir::stu3::proto::DataRequirement_DateFilter_Value* p = value_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataRequirement.DateFilter.value)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::DataRequirement_DateFilter_Value*>(
      &::google::fhir::stu3::proto::_DataRequirement_DateFilter_Value_default_instance_);
}
inline ::google::fhir::stu3::proto::DataRequirement_DateFilter_Value* DataRequirement_DateFilter::release_value() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DataRequirement.DateFilter.value)
  
  ::google::fhir::stu3::proto::DataRequirement_DateFilter_Value* temp = value_;
  value_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::DataRequirement_DateFilter_Value* DataRequirement_DateFilter::mutable_value() {
  
  if (value_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::DataRequirement_DateFilter_Value>(GetArenaNoVirtual());
    value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DataRequirement.DateFilter.value)
  return value_;
}
inline void DataRequirement_DateFilter::set_allocated_value(::google::fhir::stu3::proto::DataRequirement_DateFilter_Value* value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete value_;
  }
  if (value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DataRequirement.DateFilter.value)
}

// -------------------------------------------------------------------

// DataRequirement

// .google.fhir.stu3.proto.String id = 1;
inline bool DataRequirement::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& DataRequirement::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& DataRequirement::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataRequirement.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* DataRequirement::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DataRequirement.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* DataRequirement::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DataRequirement.id)
  return id_;
}
inline void DataRequirement::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DataRequirement.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int DataRequirement::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* DataRequirement::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DataRequirement.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
DataRequirement::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DataRequirement.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& DataRequirement::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataRequirement.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* DataRequirement::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DataRequirement.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
DataRequirement::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DataRequirement.extension)
  return extension_;
}

// .google.fhir.stu3.proto.FHIRAllTypesCode type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool DataRequirement::has_type() const {
  return this != internal_default_instance() && type_ != NULL;
}
inline const ::google::fhir::stu3::proto::FHIRAllTypesCode& DataRequirement::_internal_type() const {
  return *type_;
}
inline const ::google::fhir::stu3::proto::FHIRAllTypesCode& DataRequirement::type() const {
  const ::google::fhir::stu3::proto::FHIRAllTypesCode* p = type_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataRequirement.type)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::FHIRAllTypesCode*>(
      &::google::fhir::stu3::proto::_FHIRAllTypesCode_default_instance_);
}
inline ::google::fhir::stu3::proto::FHIRAllTypesCode* DataRequirement::release_type() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.DataRequirement.type)
  
  ::google::fhir::stu3::proto::FHIRAllTypesCode* temp = type_;
  type_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::FHIRAllTypesCode* DataRequirement::mutable_type() {
  
  if (type_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::FHIRAllTypesCode>(GetArenaNoVirtual());
    type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DataRequirement.type)
  return type_;
}
inline void DataRequirement::set_allocated_type(::google::fhir::stu3::proto::FHIRAllTypesCode* type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(type_);
  }
  if (type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, type, submessage_arena);
    }
    
  } else {
    
  }
  type_ = type;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.DataRequirement.type)
}

// repeated .google.fhir.stu3.proto.Uri profile = 4;
inline int DataRequirement::profile_size() const {
  return profile_.size();
}
inline ::google::fhir::stu3::proto::Uri* DataRequirement::mutable_profile(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DataRequirement.profile)
  return profile_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Uri >*
DataRequirement::mutable_profile() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DataRequirement.profile)
  return &profile_;
}
inline const ::google::fhir::stu3::proto::Uri& DataRequirement::profile(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataRequirement.profile)
  return profile_.Get(index);
}
inline ::google::fhir::stu3::proto::Uri* DataRequirement::add_profile() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DataRequirement.profile)
  return profile_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Uri >&
DataRequirement::profile() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DataRequirement.profile)
  return profile_;
}

// repeated .google.fhir.stu3.proto.String must_support = 5;
inline int DataRequirement::must_support_size() const {
  return must_support_.size();
}
inline ::google::fhir::stu3::proto::String* DataRequirement::mutable_must_support(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DataRequirement.must_support)
  return must_support_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::String >*
DataRequirement::mutable_must_support() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DataRequirement.must_support)
  return &must_support_;
}
inline const ::google::fhir::stu3::proto::String& DataRequirement::must_support(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataRequirement.must_support)
  return must_support_.Get(index);
}
inline ::google::fhir::stu3::proto::String* DataRequirement::add_must_support() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DataRequirement.must_support)
  return must_support_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::String >&
DataRequirement::must_support() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DataRequirement.must_support)
  return must_support_;
}

// repeated .google.fhir.stu3.proto.DataRequirement.CodeFilter code_filter = 6;
inline int DataRequirement::code_filter_size() const {
  return code_filter_.size();
}
inline void DataRequirement::clear_code_filter() {
  code_filter_.Clear();
}
inline ::google::fhir::stu3::proto::DataRequirement_CodeFilter* DataRequirement::mutable_code_filter(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DataRequirement.code_filter)
  return code_filter_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::DataRequirement_CodeFilter >*
DataRequirement::mutable_code_filter() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DataRequirement.code_filter)
  return &code_filter_;
}
inline const ::google::fhir::stu3::proto::DataRequirement_CodeFilter& DataRequirement::code_filter(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataRequirement.code_filter)
  return code_filter_.Get(index);
}
inline ::google::fhir::stu3::proto::DataRequirement_CodeFilter* DataRequirement::add_code_filter() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DataRequirement.code_filter)
  return code_filter_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::DataRequirement_CodeFilter >&
DataRequirement::code_filter() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DataRequirement.code_filter)
  return code_filter_;
}

// repeated .google.fhir.stu3.proto.DataRequirement.DateFilter date_filter = 7;
inline int DataRequirement::date_filter_size() const {
  return date_filter_.size();
}
inline void DataRequirement::clear_date_filter() {
  date_filter_.Clear();
}
inline ::google::fhir::stu3::proto::DataRequirement_DateFilter* DataRequirement::mutable_date_filter(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.DataRequirement.date_filter)
  return date_filter_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::DataRequirement_DateFilter >*
DataRequirement::mutable_date_filter() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.DataRequirement.date_filter)
  return &date_filter_;
}
inline const ::google::fhir::stu3::proto::DataRequirement_DateFilter& DataRequirement::date_filter(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.DataRequirement.date_filter)
  return date_filter_.Get(index);
}
inline ::google::fhir::stu3::proto::DataRequirement_DateFilter* DataRequirement::add_date_filter() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.DataRequirement.date_filter)
  return date_filter_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::DataRequirement_DateFilter >&
DataRequirement::date_filter() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.DataRequirement.date_filter)
  return date_filter_;
}

// -------------------------------------------------------------------

// Element

// .google.fhir.stu3.proto.String id = 1;
inline bool Element::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& Element::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& Element::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.Element.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* Element::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.Element.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* Element::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.Element.id)
  return id_;
}
inline void Element::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Element.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int Element::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* Element::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.Element.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
Element::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.Element.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& Element::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.Element.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* Element::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.Element.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
Element::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.Element.extension)
  return extension_;
}

// -------------------------------------------------------------------

// ElementDefinition_Slicing_Discriminator

// .google.fhir.stu3.proto.String id = 1;
inline bool ElementDefinition_Slicing_Discriminator::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Slicing_Discriminator::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Slicing_Discriminator::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Slicing_Discriminator::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Slicing_Discriminator::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator.id)
  return id_;
}
inline void ElementDefinition_Slicing_Discriminator::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int ElementDefinition_Slicing_Discriminator::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ElementDefinition_Slicing_Discriminator::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ElementDefinition_Slicing_Discriminator::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ElementDefinition_Slicing_Discriminator::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ElementDefinition_Slicing_Discriminator::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ElementDefinition_Slicing_Discriminator::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator.extension)
  return extension_;
}

// .google.fhir.stu3.proto.DiscriminatorTypeCode type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool ElementDefinition_Slicing_Discriminator::has_type() const {
  return this != internal_default_instance() && type_ != NULL;
}
inline const ::google::fhir::stu3::proto::DiscriminatorTypeCode& ElementDefinition_Slicing_Discriminator::_internal_type() const {
  return *type_;
}
inline const ::google::fhir::stu3::proto::DiscriminatorTypeCode& ElementDefinition_Slicing_Discriminator::type() const {
  const ::google::fhir::stu3::proto::DiscriminatorTypeCode* p = type_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator.type)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::DiscriminatorTypeCode*>(
      &::google::fhir::stu3::proto::_DiscriminatorTypeCode_default_instance_);
}
inline ::google::fhir::stu3::proto::DiscriminatorTypeCode* ElementDefinition_Slicing_Discriminator::release_type() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator.type)
  
  ::google::fhir::stu3::proto::DiscriminatorTypeCode* temp = type_;
  type_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::DiscriminatorTypeCode* ElementDefinition_Slicing_Discriminator::mutable_type() {
  
  if (type_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::DiscriminatorTypeCode>(GetArenaNoVirtual());
    type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator.type)
  return type_;
}
inline void ElementDefinition_Slicing_Discriminator::set_allocated_type(::google::fhir::stu3::proto::DiscriminatorTypeCode* type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(type_);
  }
  if (type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, type, submessage_arena);
    }
    
  } else {
    
  }
  type_ = type;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator.type)
}

// .google.fhir.stu3.proto.String path = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool ElementDefinition_Slicing_Discriminator::has_path() const {
  return this != internal_default_instance() && path_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Slicing_Discriminator::_internal_path() const {
  return *path_;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Slicing_Discriminator::path() const {
  const ::google::fhir::stu3::proto::String* p = path_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator.path)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Slicing_Discriminator::release_path() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator.path)
  
  ::google::fhir::stu3::proto::String* temp = path_;
  path_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Slicing_Discriminator::mutable_path() {
  
  if (path_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    path_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator.path)
  return path_;
}
inline void ElementDefinition_Slicing_Discriminator::set_allocated_path(::google::fhir::stu3::proto::String* path) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(path_);
  }
  if (path) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      path = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, path, submessage_arena);
    }
    
  } else {
    
  }
  path_ = path;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator.path)
}

// -------------------------------------------------------------------

// ElementDefinition_Slicing

// .google.fhir.stu3.proto.String id = 1;
inline bool ElementDefinition_Slicing::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Slicing::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Slicing::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Slicing.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Slicing::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Slicing.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Slicing::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Slicing.id)
  return id_;
}
inline void ElementDefinition_Slicing::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Slicing.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int ElementDefinition_Slicing::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ElementDefinition_Slicing::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Slicing.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ElementDefinition_Slicing::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ElementDefinition.Slicing.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ElementDefinition_Slicing::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Slicing.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ElementDefinition_Slicing::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ElementDefinition.Slicing.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ElementDefinition_Slicing::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ElementDefinition.Slicing.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator discriminator = 3;
inline int ElementDefinition_Slicing::discriminator_size() const {
  return discriminator_.size();
}
inline void ElementDefinition_Slicing::clear_discriminator() {
  discriminator_.Clear();
}
inline ::google::fhir::stu3::proto::ElementDefinition_Slicing_Discriminator* ElementDefinition_Slicing::mutable_discriminator(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Slicing.discriminator)
  return discriminator_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ElementDefinition_Slicing_Discriminator >*
ElementDefinition_Slicing::mutable_discriminator() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ElementDefinition.Slicing.discriminator)
  return &discriminator_;
}
inline const ::google::fhir::stu3::proto::ElementDefinition_Slicing_Discriminator& ElementDefinition_Slicing::discriminator(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Slicing.discriminator)
  return discriminator_.Get(index);
}
inline ::google::fhir::stu3::proto::ElementDefinition_Slicing_Discriminator* ElementDefinition_Slicing::add_discriminator() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ElementDefinition.Slicing.discriminator)
  return discriminator_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ElementDefinition_Slicing_Discriminator >&
ElementDefinition_Slicing::discriminator() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ElementDefinition.Slicing.discriminator)
  return discriminator_;
}

// .google.fhir.stu3.proto.String description = 4;
inline bool ElementDefinition_Slicing::has_description() const {
  return this != internal_default_instance() && description_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Slicing::_internal_description() const {
  return *description_;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Slicing::description() const {
  const ::google::fhir::stu3::proto::String* p = description_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Slicing.description)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Slicing::release_description() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Slicing.description)
  
  ::google::fhir::stu3::proto::String* temp = description_;
  description_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Slicing::mutable_description() {
  
  if (description_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    description_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Slicing.description)
  return description_;
}
inline void ElementDefinition_Slicing::set_allocated_description(::google::fhir::stu3::proto::String* description) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(description_);
  }
  if (description) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      description = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, description, submessage_arena);
    }
    
  } else {
    
  }
  description_ = description;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Slicing.description)
}

// .google.fhir.stu3.proto.Boolean ordered = 5;
inline bool ElementDefinition_Slicing::has_ordered() const {
  return this != internal_default_instance() && ordered_ != NULL;
}
inline const ::google::fhir::stu3::proto::Boolean& ElementDefinition_Slicing::_internal_ordered() const {
  return *ordered_;
}
inline const ::google::fhir::stu3::proto::Boolean& ElementDefinition_Slicing::ordered() const {
  const ::google::fhir::stu3::proto::Boolean* p = ordered_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Slicing.ordered)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Boolean*>(
      &::google::fhir::stu3::proto::_Boolean_default_instance_);
}
inline ::google::fhir::stu3::proto::Boolean* ElementDefinition_Slicing::release_ordered() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Slicing.ordered)
  
  ::google::fhir::stu3::proto::Boolean* temp = ordered_;
  ordered_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Boolean* ElementDefinition_Slicing::mutable_ordered() {
  
  if (ordered_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Boolean>(GetArenaNoVirtual());
    ordered_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Slicing.ordered)
  return ordered_;
}
inline void ElementDefinition_Slicing::set_allocated_ordered(::google::fhir::stu3::proto::Boolean* ordered) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ordered_);
  }
  if (ordered) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ordered = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ordered, submessage_arena);
    }
    
  } else {
    
  }
  ordered_ = ordered;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Slicing.ordered)
}

// .google.fhir.stu3.proto.SlicingRulesCode rules = 6 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool ElementDefinition_Slicing::has_rules() const {
  return this != internal_default_instance() && rules_ != NULL;
}
inline const ::google::fhir::stu3::proto::SlicingRulesCode& ElementDefinition_Slicing::_internal_rules() const {
  return *rules_;
}
inline const ::google::fhir::stu3::proto::SlicingRulesCode& ElementDefinition_Slicing::rules() const {
  const ::google::fhir::stu3::proto::SlicingRulesCode* p = rules_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Slicing.rules)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::SlicingRulesCode*>(
      &::google::fhir::stu3::proto::_SlicingRulesCode_default_instance_);
}
inline ::google::fhir::stu3::proto::SlicingRulesCode* ElementDefinition_Slicing::release_rules() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Slicing.rules)
  
  ::google::fhir::stu3::proto::SlicingRulesCode* temp = rules_;
  rules_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::SlicingRulesCode* ElementDefinition_Slicing::mutable_rules() {
  
  if (rules_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::SlicingRulesCode>(GetArenaNoVirtual());
    rules_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Slicing.rules)
  return rules_;
}
inline void ElementDefinition_Slicing::set_allocated_rules(::google::fhir::stu3::proto::SlicingRulesCode* rules) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rules_);
  }
  if (rules) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rules = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rules, submessage_arena);
    }
    
  } else {
    
  }
  rules_ = rules;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Slicing.rules)
}

// -------------------------------------------------------------------

// ElementDefinition_Base

// .google.fhir.stu3.proto.String id = 1;
inline bool ElementDefinition_Base::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Base::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Base::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Base.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Base::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Base.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Base::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Base.id)
  return id_;
}
inline void ElementDefinition_Base::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Base.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int ElementDefinition_Base::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ElementDefinition_Base::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Base.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ElementDefinition_Base::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ElementDefinition.Base.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ElementDefinition_Base::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Base.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ElementDefinition_Base::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ElementDefinition.Base.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ElementDefinition_Base::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ElementDefinition.Base.extension)
  return extension_;
}

// .google.fhir.stu3.proto.String path = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool ElementDefinition_Base::has_path() const {
  return this != internal_default_instance() && path_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Base::_internal_path() const {
  return *path_;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Base::path() const {
  const ::google::fhir::stu3::proto::String* p = path_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Base.path)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Base::release_path() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Base.path)
  
  ::google::fhir::stu3::proto::String* temp = path_;
  path_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Base::mutable_path() {
  
  if (path_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    path_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Base.path)
  return path_;
}
inline void ElementDefinition_Base::set_allocated_path(::google::fhir::stu3::proto::String* path) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(path_);
  }
  if (path) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      path = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, path, submessage_arena);
    }
    
  } else {
    
  }
  path_ = path;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Base.path)
}

// .google.fhir.stu3.proto.UnsignedInt min = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool ElementDefinition_Base::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::google::fhir::stu3::proto::UnsignedInt& ElementDefinition_Base::_internal_min() const {
  return *min_;
}
inline const ::google::fhir::stu3::proto::UnsignedInt& ElementDefinition_Base::min() const {
  const ::google::fhir::stu3::proto::UnsignedInt* p = min_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Base.min)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::UnsignedInt*>(
      &::google::fhir::stu3::proto::_UnsignedInt_default_instance_);
}
inline ::google::fhir::stu3::proto::UnsignedInt* ElementDefinition_Base::release_min() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Base.min)
  
  ::google::fhir::stu3::proto::UnsignedInt* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::UnsignedInt* ElementDefinition_Base::mutable_min() {
  
  if (min_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::UnsignedInt>(GetArenaNoVirtual());
    min_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Base.min)
  return min_;
}
inline void ElementDefinition_Base::set_allocated_min(::google::fhir::stu3::proto::UnsignedInt* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Base.min)
}

// .google.fhir.stu3.proto.String max = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool ElementDefinition_Base::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Base::_internal_max() const {
  return *max_;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Base::max() const {
  const ::google::fhir::stu3::proto::String* p = max_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Base.max)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Base::release_max() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Base.max)
  
  ::google::fhir::stu3::proto::String* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Base::mutable_max() {
  
  if (max_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    max_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Base.max)
  return max_;
}
inline void ElementDefinition_Base::set_allocated_max(::google::fhir::stu3::proto::String* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Base.max)
}

// -------------------------------------------------------------------

// ElementDefinition_TypeRef

// .google.fhir.stu3.proto.String id = 1;
inline bool ElementDefinition_TypeRef::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_TypeRef::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_TypeRef::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.TypeRef.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_TypeRef::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.TypeRef.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_TypeRef::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.TypeRef.id)
  return id_;
}
inline void ElementDefinition_TypeRef::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.TypeRef.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int ElementDefinition_TypeRef::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ElementDefinition_TypeRef::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.TypeRef.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ElementDefinition_TypeRef::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ElementDefinition.TypeRef.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ElementDefinition_TypeRef::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.TypeRef.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ElementDefinition_TypeRef::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ElementDefinition.TypeRef.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ElementDefinition_TypeRef::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ElementDefinition.TypeRef.extension)
  return extension_;
}

// .google.fhir.stu3.proto.Uri code = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool ElementDefinition_TypeRef::has_code() const {
  return this != internal_default_instance() && code_ != NULL;
}
inline const ::google::fhir::stu3::proto::Uri& ElementDefinition_TypeRef::_internal_code() const {
  return *code_;
}
inline const ::google::fhir::stu3::proto::Uri& ElementDefinition_TypeRef::code() const {
  const ::google::fhir::stu3::proto::Uri* p = code_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.TypeRef.code)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Uri*>(
      &::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* ElementDefinition_TypeRef::release_code() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.TypeRef.code)
  
  ::google::fhir::stu3::proto::Uri* temp = code_;
  code_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Uri* ElementDefinition_TypeRef::mutable_code() {
  
  if (code_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Uri>(GetArenaNoVirtual());
    code_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.TypeRef.code)
  return code_;
}
inline void ElementDefinition_TypeRef::set_allocated_code(::google::fhir::stu3::proto::Uri* code) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(code_);
  }
  if (code) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      code = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, code, submessage_arena);
    }
    
  } else {
    
  }
  code_ = code;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.TypeRef.code)
}

// .google.fhir.stu3.proto.Uri profile = 4;
inline bool ElementDefinition_TypeRef::has_profile() const {
  return this != internal_default_instance() && profile_ != NULL;
}
inline const ::google::fhir::stu3::proto::Uri& ElementDefinition_TypeRef::_internal_profile() const {
  return *profile_;
}
inline const ::google::fhir::stu3::proto::Uri& ElementDefinition_TypeRef::profile() const {
  const ::google::fhir::stu3::proto::Uri* p = profile_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.TypeRef.profile)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Uri*>(
      &::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* ElementDefinition_TypeRef::release_profile() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.TypeRef.profile)
  
  ::google::fhir::stu3::proto::Uri* temp = profile_;
  profile_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Uri* ElementDefinition_TypeRef::mutable_profile() {
  
  if (profile_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Uri>(GetArenaNoVirtual());
    profile_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.TypeRef.profile)
  return profile_;
}
inline void ElementDefinition_TypeRef::set_allocated_profile(::google::fhir::stu3::proto::Uri* profile) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(profile_);
  }
  if (profile) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      profile = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, profile, submessage_arena);
    }
    
  } else {
    
  }
  profile_ = profile;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.TypeRef.profile)
}

// .google.fhir.stu3.proto.Uri target_profile = 5;
inline bool ElementDefinition_TypeRef::has_target_profile() const {
  return this != internal_default_instance() && target_profile_ != NULL;
}
inline const ::google::fhir::stu3::proto::Uri& ElementDefinition_TypeRef::_internal_target_profile() const {
  return *target_profile_;
}
inline const ::google::fhir::stu3::proto::Uri& ElementDefinition_TypeRef::target_profile() const {
  const ::google::fhir::stu3::proto::Uri* p = target_profile_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.TypeRef.target_profile)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Uri*>(
      &::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* ElementDefinition_TypeRef::release_target_profile() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.TypeRef.target_profile)
  
  ::google::fhir::stu3::proto::Uri* temp = target_profile_;
  target_profile_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Uri* ElementDefinition_TypeRef::mutable_target_profile() {
  
  if (target_profile_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Uri>(GetArenaNoVirtual());
    target_profile_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.TypeRef.target_profile)
  return target_profile_;
}
inline void ElementDefinition_TypeRef::set_allocated_target_profile(::google::fhir::stu3::proto::Uri* target_profile) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(target_profile_);
  }
  if (target_profile) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      target_profile = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, target_profile, submessage_arena);
    }
    
  } else {
    
  }
  target_profile_ = target_profile;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.TypeRef.target_profile)
}

// repeated .google.fhir.stu3.proto.AggregationModeCode aggregation = 6;
inline int ElementDefinition_TypeRef::aggregation_size() const {
  return aggregation_.size();
}
inline ::google::fhir::stu3::proto::AggregationModeCode* ElementDefinition_TypeRef::mutable_aggregation(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.TypeRef.aggregation)
  return aggregation_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::AggregationModeCode >*
ElementDefinition_TypeRef::mutable_aggregation() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ElementDefinition.TypeRef.aggregation)
  return &aggregation_;
}
inline const ::google::fhir::stu3::proto::AggregationModeCode& ElementDefinition_TypeRef::aggregation(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.TypeRef.aggregation)
  return aggregation_.Get(index);
}
inline ::google::fhir::stu3::proto::AggregationModeCode* ElementDefinition_TypeRef::add_aggregation() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ElementDefinition.TypeRef.aggregation)
  return aggregation_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::AggregationModeCode >&
ElementDefinition_TypeRef::aggregation() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ElementDefinition.TypeRef.aggregation)
  return aggregation_;
}

// .google.fhir.stu3.proto.ReferenceVersionRulesCode versioning = 7;
inline bool ElementDefinition_TypeRef::has_versioning() const {
  return this != internal_default_instance() && versioning_ != NULL;
}
inline const ::google::fhir::stu3::proto::ReferenceVersionRulesCode& ElementDefinition_TypeRef::_internal_versioning() const {
  return *versioning_;
}
inline const ::google::fhir::stu3::proto::ReferenceVersionRulesCode& ElementDefinition_TypeRef::versioning() const {
  const ::google::fhir::stu3::proto::ReferenceVersionRulesCode* p = versioning_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.TypeRef.versioning)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::ReferenceVersionRulesCode*>(
      &::google::fhir::stu3::proto::_ReferenceVersionRulesCode_default_instance_);
}
inline ::google::fhir::stu3::proto::ReferenceVersionRulesCode* ElementDefinition_TypeRef::release_versioning() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.TypeRef.versioning)
  
  ::google::fhir::stu3::proto::ReferenceVersionRulesCode* temp = versioning_;
  versioning_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::ReferenceVersionRulesCode* ElementDefinition_TypeRef::mutable_versioning() {
  
  if (versioning_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::ReferenceVersionRulesCode>(GetArenaNoVirtual());
    versioning_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.TypeRef.versioning)
  return versioning_;
}
inline void ElementDefinition_TypeRef::set_allocated_versioning(::google::fhir::stu3::proto::ReferenceVersionRulesCode* versioning) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(versioning_);
  }
  if (versioning) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      versioning = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, versioning, submessage_arena);
    }
    
  } else {
    
  }
  versioning_ = versioning;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.TypeRef.versioning)
}

// -------------------------------------------------------------------

// ElementDefinition_DefaultValue

// .google.fhir.stu3.proto.Base64Binary base64_binary = 1;
inline bool ElementDefinition_DefaultValue::has_base64_binary() const {
  return default_value_case() == kBase64Binary;
}
inline void ElementDefinition_DefaultValue::set_has_base64_binary() {
  _oneof_case_[0] = kBase64Binary;
}
inline const ::google::fhir::stu3::proto::Base64Binary& ElementDefinition_DefaultValue::_internal_base64_binary() const {
  return *default_value_.base64_binary_;
}
inline ::google::fhir::stu3::proto::Base64Binary* ElementDefinition_DefaultValue::release_base64_binary() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.base64_binary)
  if (has_base64_binary()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::Base64Binary* temp = default_value_.base64_binary_;
    default_value_.base64_binary_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Base64Binary& ElementDefinition_DefaultValue::base64_binary() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.base64_binary)
  return has_base64_binary()
      ? *default_value_.base64_binary_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Base64Binary*>(&::google::fhir::stu3::proto::_Base64Binary_default_instance_);
}
inline ::google::fhir::stu3::proto::Base64Binary* ElementDefinition_DefaultValue::mutable_base64_binary() {
  if (!has_base64_binary()) {
    clear_default_value();
    set_has_base64_binary();
    default_value_.base64_binary_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Base64Binary >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.base64_binary)
  return default_value_.base64_binary_;
}

// .google.fhir.stu3.proto.Boolean boolean = 2;
inline bool ElementDefinition_DefaultValue::has_boolean() const {
  return default_value_case() == kBoolean;
}
inline void ElementDefinition_DefaultValue::set_has_boolean() {
  _oneof_case_[0] = kBoolean;
}
inline const ::google::fhir::stu3::proto::Boolean& ElementDefinition_DefaultValue::_internal_boolean() const {
  return *default_value_.boolean_;
}
inline ::google::fhir::stu3::proto::Boolean* ElementDefinition_DefaultValue::release_boolean() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.boolean)
  if (has_boolean()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::Boolean* temp = default_value_.boolean_;
    default_value_.boolean_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Boolean& ElementDefinition_DefaultValue::boolean() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.boolean)
  return has_boolean()
      ? *default_value_.boolean_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Boolean*>(&::google::fhir::stu3::proto::_Boolean_default_instance_);
}
inline ::google::fhir::stu3::proto::Boolean* ElementDefinition_DefaultValue::mutable_boolean() {
  if (!has_boolean()) {
    clear_default_value();
    set_has_boolean();
    default_value_.boolean_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Boolean >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.boolean)
  return default_value_.boolean_;
}

// .google.fhir.stu3.proto.Code code = 3;
inline bool ElementDefinition_DefaultValue::has_code() const {
  return default_value_case() == kCode;
}
inline void ElementDefinition_DefaultValue::set_has_code() {
  _oneof_case_[0] = kCode;
}
inline const ::google::fhir::stu3::proto::Code& ElementDefinition_DefaultValue::_internal_code() const {
  return *default_value_.code_;
}
inline ::google::fhir::stu3::proto::Code* ElementDefinition_DefaultValue::release_code() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.code)
  if (has_code()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::Code* temp = default_value_.code_;
    default_value_.code_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Code& ElementDefinition_DefaultValue::code() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.code)
  return has_code()
      ? *default_value_.code_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Code*>(&::google::fhir::stu3::proto::_Code_default_instance_);
}
inline ::google::fhir::stu3::proto::Code* ElementDefinition_DefaultValue::mutable_code() {
  if (!has_code()) {
    clear_default_value();
    set_has_code();
    default_value_.code_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Code >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.code)
  return default_value_.code_;
}

// .google.fhir.stu3.proto.Date date = 4;
inline bool ElementDefinition_DefaultValue::has_date() const {
  return default_value_case() == kDate;
}
inline void ElementDefinition_DefaultValue::set_has_date() {
  _oneof_case_[0] = kDate;
}
inline const ::google::fhir::stu3::proto::Date& ElementDefinition_DefaultValue::_internal_date() const {
  return *default_value_.date_;
}
inline ::google::fhir::stu3::proto::Date* ElementDefinition_DefaultValue::release_date() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.date)
  if (has_date()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::Date* temp = default_value_.date_;
    default_value_.date_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Date& ElementDefinition_DefaultValue::date() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.date)
  return has_date()
      ? *default_value_.date_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Date*>(&::google::fhir::stu3::proto::_Date_default_instance_);
}
inline ::google::fhir::stu3::proto::Date* ElementDefinition_DefaultValue::mutable_date() {
  if (!has_date()) {
    clear_default_value();
    set_has_date();
    default_value_.date_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Date >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.date)
  return default_value_.date_;
}

// .google.fhir.stu3.proto.DateTime date_time = 5;
inline bool ElementDefinition_DefaultValue::has_date_time() const {
  return default_value_case() == kDateTime;
}
inline void ElementDefinition_DefaultValue::set_has_date_time() {
  _oneof_case_[0] = kDateTime;
}
inline const ::google::fhir::stu3::proto::DateTime& ElementDefinition_DefaultValue::_internal_date_time() const {
  return *default_value_.date_time_;
}
inline ::google::fhir::stu3::proto::DateTime* ElementDefinition_DefaultValue::release_date_time() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.date_time)
  if (has_date_time()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::DateTime* temp = default_value_.date_time_;
    default_value_.date_time_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::DateTime& ElementDefinition_DefaultValue::date_time() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.date_time)
  return has_date_time()
      ? *default_value_.date_time_
      : *reinterpret_cast< ::google::fhir::stu3::proto::DateTime*>(&::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* ElementDefinition_DefaultValue::mutable_date_time() {
  if (!has_date_time()) {
    clear_default_value();
    set_has_date_time();
    default_value_.date_time_ = CreateMaybeMessage< ::google::fhir::stu3::proto::DateTime >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.date_time)
  return default_value_.date_time_;
}

// .google.fhir.stu3.proto.Decimal decimal = 6;
inline bool ElementDefinition_DefaultValue::has_decimal() const {
  return default_value_case() == kDecimal;
}
inline void ElementDefinition_DefaultValue::set_has_decimal() {
  _oneof_case_[0] = kDecimal;
}
inline const ::google::fhir::stu3::proto::Decimal& ElementDefinition_DefaultValue::_internal_decimal() const {
  return *default_value_.decimal_;
}
inline ::google::fhir::stu3::proto::Decimal* ElementDefinition_DefaultValue::release_decimal() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.decimal)
  if (has_decimal()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::Decimal* temp = default_value_.decimal_;
    default_value_.decimal_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Decimal& ElementDefinition_DefaultValue::decimal() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.decimal)
  return has_decimal()
      ? *default_value_.decimal_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Decimal*>(&::google::fhir::stu3::proto::_Decimal_default_instance_);
}
inline ::google::fhir::stu3::proto::Decimal* ElementDefinition_DefaultValue::mutable_decimal() {
  if (!has_decimal()) {
    clear_default_value();
    set_has_decimal();
    default_value_.decimal_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Decimal >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.decimal)
  return default_value_.decimal_;
}

// .google.fhir.stu3.proto.Id id = 7;
inline bool ElementDefinition_DefaultValue::has_id() const {
  return default_value_case() == kId;
}
inline void ElementDefinition_DefaultValue::set_has_id() {
  _oneof_case_[0] = kId;
}
inline const ::google::fhir::stu3::proto::Id& ElementDefinition_DefaultValue::_internal_id() const {
  return *default_value_.id_;
}
inline ::google::fhir::stu3::proto::Id* ElementDefinition_DefaultValue::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.id)
  if (has_id()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::Id* temp = default_value_.id_;
    default_value_.id_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Id& ElementDefinition_DefaultValue::id() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.id)
  return has_id()
      ? *default_value_.id_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Id*>(&::google::fhir::stu3::proto::_Id_default_instance_);
}
inline ::google::fhir::stu3::proto::Id* ElementDefinition_DefaultValue::mutable_id() {
  if (!has_id()) {
    clear_default_value();
    set_has_id();
    default_value_.id_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Id >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.id)
  return default_value_.id_;
}

// .google.fhir.stu3.proto.Instant instant = 8;
inline bool ElementDefinition_DefaultValue::has_instant() const {
  return default_value_case() == kInstant;
}
inline void ElementDefinition_DefaultValue::set_has_instant() {
  _oneof_case_[0] = kInstant;
}
inline const ::google::fhir::stu3::proto::Instant& ElementDefinition_DefaultValue::_internal_instant() const {
  return *default_value_.instant_;
}
inline ::google::fhir::stu3::proto::Instant* ElementDefinition_DefaultValue::release_instant() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.instant)
  if (has_instant()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::Instant* temp = default_value_.instant_;
    default_value_.instant_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Instant& ElementDefinition_DefaultValue::instant() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.instant)
  return has_instant()
      ? *default_value_.instant_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Instant*>(&::google::fhir::stu3::proto::_Instant_default_instance_);
}
inline ::google::fhir::stu3::proto::Instant* ElementDefinition_DefaultValue::mutable_instant() {
  if (!has_instant()) {
    clear_default_value();
    set_has_instant();
    default_value_.instant_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Instant >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.instant)
  return default_value_.instant_;
}

// .google.fhir.stu3.proto.Integer integer = 9;
inline bool ElementDefinition_DefaultValue::has_integer() const {
  return default_value_case() == kInteger;
}
inline void ElementDefinition_DefaultValue::set_has_integer() {
  _oneof_case_[0] = kInteger;
}
inline const ::google::fhir::stu3::proto::Integer& ElementDefinition_DefaultValue::_internal_integer() const {
  return *default_value_.integer_;
}
inline ::google::fhir::stu3::proto::Integer* ElementDefinition_DefaultValue::release_integer() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.integer)
  if (has_integer()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::Integer* temp = default_value_.integer_;
    default_value_.integer_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Integer& ElementDefinition_DefaultValue::integer() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.integer)
  return has_integer()
      ? *default_value_.integer_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Integer*>(&::google::fhir::stu3::proto::_Integer_default_instance_);
}
inline ::google::fhir::stu3::proto::Integer* ElementDefinition_DefaultValue::mutable_integer() {
  if (!has_integer()) {
    clear_default_value();
    set_has_integer();
    default_value_.integer_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Integer >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.integer)
  return default_value_.integer_;
}

// .google.fhir.stu3.proto.Markdown markdown = 10;
inline bool ElementDefinition_DefaultValue::has_markdown() const {
  return default_value_case() == kMarkdown;
}
inline void ElementDefinition_DefaultValue::set_has_markdown() {
  _oneof_case_[0] = kMarkdown;
}
inline const ::google::fhir::stu3::proto::Markdown& ElementDefinition_DefaultValue::_internal_markdown() const {
  return *default_value_.markdown_;
}
inline ::google::fhir::stu3::proto::Markdown* ElementDefinition_DefaultValue::release_markdown() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.markdown)
  if (has_markdown()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::Markdown* temp = default_value_.markdown_;
    default_value_.markdown_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Markdown& ElementDefinition_DefaultValue::markdown() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.markdown)
  return has_markdown()
      ? *default_value_.markdown_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Markdown*>(&::google::fhir::stu3::proto::_Markdown_default_instance_);
}
inline ::google::fhir::stu3::proto::Markdown* ElementDefinition_DefaultValue::mutable_markdown() {
  if (!has_markdown()) {
    clear_default_value();
    set_has_markdown();
    default_value_.markdown_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Markdown >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.markdown)
  return default_value_.markdown_;
}

// .google.fhir.stu3.proto.Oid oid = 11;
inline bool ElementDefinition_DefaultValue::has_oid() const {
  return default_value_case() == kOid;
}
inline void ElementDefinition_DefaultValue::set_has_oid() {
  _oneof_case_[0] = kOid;
}
inline const ::google::fhir::stu3::proto::Oid& ElementDefinition_DefaultValue::_internal_oid() const {
  return *default_value_.oid_;
}
inline ::google::fhir::stu3::proto::Oid* ElementDefinition_DefaultValue::release_oid() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.oid)
  if (has_oid()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::Oid* temp = default_value_.oid_;
    default_value_.oid_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Oid& ElementDefinition_DefaultValue::oid() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.oid)
  return has_oid()
      ? *default_value_.oid_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Oid*>(&::google::fhir::stu3::proto::_Oid_default_instance_);
}
inline ::google::fhir::stu3::proto::Oid* ElementDefinition_DefaultValue::mutable_oid() {
  if (!has_oid()) {
    clear_default_value();
    set_has_oid();
    default_value_.oid_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Oid >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.oid)
  return default_value_.oid_;
}

// .google.fhir.stu3.proto.PositiveInt positive_int = 12;
inline bool ElementDefinition_DefaultValue::has_positive_int() const {
  return default_value_case() == kPositiveInt;
}
inline void ElementDefinition_DefaultValue::set_has_positive_int() {
  _oneof_case_[0] = kPositiveInt;
}
inline const ::google::fhir::stu3::proto::PositiveInt& ElementDefinition_DefaultValue::_internal_positive_int() const {
  return *default_value_.positive_int_;
}
inline ::google::fhir::stu3::proto::PositiveInt* ElementDefinition_DefaultValue::release_positive_int() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.positive_int)
  if (has_positive_int()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::PositiveInt* temp = default_value_.positive_int_;
    default_value_.positive_int_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::PositiveInt& ElementDefinition_DefaultValue::positive_int() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.positive_int)
  return has_positive_int()
      ? *default_value_.positive_int_
      : *reinterpret_cast< ::google::fhir::stu3::proto::PositiveInt*>(&::google::fhir::stu3::proto::_PositiveInt_default_instance_);
}
inline ::google::fhir::stu3::proto::PositiveInt* ElementDefinition_DefaultValue::mutable_positive_int() {
  if (!has_positive_int()) {
    clear_default_value();
    set_has_positive_int();
    default_value_.positive_int_ = CreateMaybeMessage< ::google::fhir::stu3::proto::PositiveInt >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.positive_int)
  return default_value_.positive_int_;
}

// .google.fhir.stu3.proto.String string_value = 13[json_name = "string"];
inline bool ElementDefinition_DefaultValue::has_string_value() const {
  return default_value_case() == kStringValue;
}
inline void ElementDefinition_DefaultValue::set_has_string_value() {
  _oneof_case_[0] = kStringValue;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_DefaultValue::_internal_string_value() const {
  return *default_value_.string_value_;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_DefaultValue::release_string_value() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.string_value)
  if (has_string_value()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::String* temp = default_value_.string_value_;
    default_value_.string_value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_DefaultValue::string_value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.string_value)
  return has_string_value()
      ? *default_value_.string_value_
      : *reinterpret_cast< ::google::fhir::stu3::proto::String*>(&::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_DefaultValue::mutable_string_value() {
  if (!has_string_value()) {
    clear_default_value();
    set_has_string_value();
    default_value_.string_value_ = CreateMaybeMessage< ::google::fhir::stu3::proto::String >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.string_value)
  return default_value_.string_value_;
}

// .google.fhir.stu3.proto.Time time = 14;
inline bool ElementDefinition_DefaultValue::has_time() const {
  return default_value_case() == kTime;
}
inline void ElementDefinition_DefaultValue::set_has_time() {
  _oneof_case_[0] = kTime;
}
inline const ::google::fhir::stu3::proto::Time& ElementDefinition_DefaultValue::_internal_time() const {
  return *default_value_.time_;
}
inline ::google::fhir::stu3::proto::Time* ElementDefinition_DefaultValue::release_time() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.time)
  if (has_time()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::Time* temp = default_value_.time_;
    default_value_.time_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Time& ElementDefinition_DefaultValue::time() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.time)
  return has_time()
      ? *default_value_.time_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Time*>(&::google::fhir::stu3::proto::_Time_default_instance_);
}
inline ::google::fhir::stu3::proto::Time* ElementDefinition_DefaultValue::mutable_time() {
  if (!has_time()) {
    clear_default_value();
    set_has_time();
    default_value_.time_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Time >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.time)
  return default_value_.time_;
}

// .google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
inline bool ElementDefinition_DefaultValue::has_unsigned_int() const {
  return default_value_case() == kUnsignedInt;
}
inline void ElementDefinition_DefaultValue::set_has_unsigned_int() {
  _oneof_case_[0] = kUnsignedInt;
}
inline const ::google::fhir::stu3::proto::UnsignedInt& ElementDefinition_DefaultValue::_internal_unsigned_int() const {
  return *default_value_.unsigned_int_;
}
inline ::google::fhir::stu3::proto::UnsignedInt* ElementDefinition_DefaultValue::release_unsigned_int() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.unsigned_int)
  if (has_unsigned_int()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::UnsignedInt* temp = default_value_.unsigned_int_;
    default_value_.unsigned_int_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::UnsignedInt& ElementDefinition_DefaultValue::unsigned_int() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.unsigned_int)
  return has_unsigned_int()
      ? *default_value_.unsigned_int_
      : *reinterpret_cast< ::google::fhir::stu3::proto::UnsignedInt*>(&::google::fhir::stu3::proto::_UnsignedInt_default_instance_);
}
inline ::google::fhir::stu3::proto::UnsignedInt* ElementDefinition_DefaultValue::mutable_unsigned_int() {
  if (!has_unsigned_int()) {
    clear_default_value();
    set_has_unsigned_int();
    default_value_.unsigned_int_ = CreateMaybeMessage< ::google::fhir::stu3::proto::UnsignedInt >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.unsigned_int)
  return default_value_.unsigned_int_;
}

// .google.fhir.stu3.proto.Uri uri = 16;
inline bool ElementDefinition_DefaultValue::has_uri() const {
  return default_value_case() == kUri;
}
inline void ElementDefinition_DefaultValue::set_has_uri() {
  _oneof_case_[0] = kUri;
}
inline const ::google::fhir::stu3::proto::Uri& ElementDefinition_DefaultValue::_internal_uri() const {
  return *default_value_.uri_;
}
inline ::google::fhir::stu3::proto::Uri* ElementDefinition_DefaultValue::release_uri() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.uri)
  if (has_uri()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::Uri* temp = default_value_.uri_;
    default_value_.uri_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Uri& ElementDefinition_DefaultValue::uri() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.uri)
  return has_uri()
      ? *default_value_.uri_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Uri*>(&::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* ElementDefinition_DefaultValue::mutable_uri() {
  if (!has_uri()) {
    clear_default_value();
    set_has_uri();
    default_value_.uri_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Uri >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.uri)
  return default_value_.uri_;
}

// .google.fhir.stu3.proto.Address address = 17;
inline bool ElementDefinition_DefaultValue::has_address() const {
  return default_value_case() == kAddress;
}
inline void ElementDefinition_DefaultValue::set_has_address() {
  _oneof_case_[0] = kAddress;
}
inline const ::google::fhir::stu3::proto::Address& ElementDefinition_DefaultValue::_internal_address() const {
  return *default_value_.address_;
}
inline ::google::fhir::stu3::proto::Address* ElementDefinition_DefaultValue::release_address() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.address)
  if (has_address()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::Address* temp = default_value_.address_;
    default_value_.address_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Address& ElementDefinition_DefaultValue::address() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.address)
  return has_address()
      ? *default_value_.address_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Address*>(&::google::fhir::stu3::proto::_Address_default_instance_);
}
inline ::google::fhir::stu3::proto::Address* ElementDefinition_DefaultValue::mutable_address() {
  if (!has_address()) {
    clear_default_value();
    set_has_address();
    default_value_.address_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Address >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.address)
  return default_value_.address_;
}

// .google.fhir.stu3.proto.Age age = 18;
inline bool ElementDefinition_DefaultValue::has_age() const {
  return default_value_case() == kAge;
}
inline void ElementDefinition_DefaultValue::set_has_age() {
  _oneof_case_[0] = kAge;
}
inline const ::google::fhir::stu3::proto::Age& ElementDefinition_DefaultValue::_internal_age() const {
  return *default_value_.age_;
}
inline ::google::fhir::stu3::proto::Age* ElementDefinition_DefaultValue::release_age() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.age)
  if (has_age()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::Age* temp = default_value_.age_;
    default_value_.age_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Age& ElementDefinition_DefaultValue::age() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.age)
  return has_age()
      ? *default_value_.age_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Age*>(&::google::fhir::stu3::proto::_Age_default_instance_);
}
inline ::google::fhir::stu3::proto::Age* ElementDefinition_DefaultValue::mutable_age() {
  if (!has_age()) {
    clear_default_value();
    set_has_age();
    default_value_.age_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Age >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.age)
  return default_value_.age_;
}

// .google.fhir.stu3.proto.Annotation annotation = 19;
inline bool ElementDefinition_DefaultValue::has_annotation() const {
  return default_value_case() == kAnnotation;
}
inline void ElementDefinition_DefaultValue::set_has_annotation() {
  _oneof_case_[0] = kAnnotation;
}
inline const ::google::fhir::stu3::proto::Annotation& ElementDefinition_DefaultValue::_internal_annotation() const {
  return *default_value_.annotation_;
}
inline ::google::fhir::stu3::proto::Annotation* ElementDefinition_DefaultValue::release_annotation() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.annotation)
  if (has_annotation()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::Annotation* temp = default_value_.annotation_;
    default_value_.annotation_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Annotation& ElementDefinition_DefaultValue::annotation() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.annotation)
  return has_annotation()
      ? *default_value_.annotation_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Annotation*>(&::google::fhir::stu3::proto::_Annotation_default_instance_);
}
inline ::google::fhir::stu3::proto::Annotation* ElementDefinition_DefaultValue::mutable_annotation() {
  if (!has_annotation()) {
    clear_default_value();
    set_has_annotation();
    default_value_.annotation_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Annotation >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.annotation)
  return default_value_.annotation_;
}

// .google.fhir.stu3.proto.Attachment attachment = 20;
inline bool ElementDefinition_DefaultValue::has_attachment() const {
  return default_value_case() == kAttachment;
}
inline void ElementDefinition_DefaultValue::set_has_attachment() {
  _oneof_case_[0] = kAttachment;
}
inline const ::google::fhir::stu3::proto::Attachment& ElementDefinition_DefaultValue::_internal_attachment() const {
  return *default_value_.attachment_;
}
inline ::google::fhir::stu3::proto::Attachment* ElementDefinition_DefaultValue::release_attachment() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.attachment)
  if (has_attachment()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::Attachment* temp = default_value_.attachment_;
    default_value_.attachment_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Attachment& ElementDefinition_DefaultValue::attachment() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.attachment)
  return has_attachment()
      ? *default_value_.attachment_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Attachment*>(&::google::fhir::stu3::proto::_Attachment_default_instance_);
}
inline ::google::fhir::stu3::proto::Attachment* ElementDefinition_DefaultValue::mutable_attachment() {
  if (!has_attachment()) {
    clear_default_value();
    set_has_attachment();
    default_value_.attachment_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Attachment >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.attachment)
  return default_value_.attachment_;
}

// .google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
inline bool ElementDefinition_DefaultValue::has_codeable_concept() const {
  return default_value_case() == kCodeableConcept;
}
inline void ElementDefinition_DefaultValue::set_has_codeable_concept() {
  _oneof_case_[0] = kCodeableConcept;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& ElementDefinition_DefaultValue::_internal_codeable_concept() const {
  return *default_value_.codeable_concept_;
}
inline ::google::fhir::stu3::proto::CodeableConcept* ElementDefinition_DefaultValue::release_codeable_concept() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.codeable_concept)
  if (has_codeable_concept()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::CodeableConcept* temp = default_value_.codeable_concept_;
    default_value_.codeable_concept_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::CodeableConcept& ElementDefinition_DefaultValue::codeable_concept() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.codeable_concept)
  return has_codeable_concept()
      ? *default_value_.codeable_concept_
      : *reinterpret_cast< ::google::fhir::stu3::proto::CodeableConcept*>(&::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* ElementDefinition_DefaultValue::mutable_codeable_concept() {
  if (!has_codeable_concept()) {
    clear_default_value();
    set_has_codeable_concept();
    default_value_.codeable_concept_ = CreateMaybeMessage< ::google::fhir::stu3::proto::CodeableConcept >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.codeable_concept)
  return default_value_.codeable_concept_;
}

// .google.fhir.stu3.proto.Coding coding = 22;
inline bool ElementDefinition_DefaultValue::has_coding() const {
  return default_value_case() == kCoding;
}
inline void ElementDefinition_DefaultValue::set_has_coding() {
  _oneof_case_[0] = kCoding;
}
inline const ::google::fhir::stu3::proto::Coding& ElementDefinition_DefaultValue::_internal_coding() const {
  return *default_value_.coding_;
}
inline ::google::fhir::stu3::proto::Coding* ElementDefinition_DefaultValue::release_coding() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.coding)
  if (has_coding()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::Coding* temp = default_value_.coding_;
    default_value_.coding_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Coding& ElementDefinition_DefaultValue::coding() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.coding)
  return has_coding()
      ? *default_value_.coding_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Coding*>(&::google::fhir::stu3::proto::_Coding_default_instance_);
}
inline ::google::fhir::stu3::proto::Coding* ElementDefinition_DefaultValue::mutable_coding() {
  if (!has_coding()) {
    clear_default_value();
    set_has_coding();
    default_value_.coding_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Coding >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.coding)
  return default_value_.coding_;
}

// .google.fhir.stu3.proto.ContactPoint contact_point = 23;
inline bool ElementDefinition_DefaultValue::has_contact_point() const {
  return default_value_case() == kContactPoint;
}
inline void ElementDefinition_DefaultValue::set_has_contact_point() {
  _oneof_case_[0] = kContactPoint;
}
inline const ::google::fhir::stu3::proto::ContactPoint& ElementDefinition_DefaultValue::_internal_contact_point() const {
  return *default_value_.contact_point_;
}
inline ::google::fhir::stu3::proto::ContactPoint* ElementDefinition_DefaultValue::release_contact_point() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.contact_point)
  if (has_contact_point()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::ContactPoint* temp = default_value_.contact_point_;
    default_value_.contact_point_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::ContactPoint& ElementDefinition_DefaultValue::contact_point() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.contact_point)
  return has_contact_point()
      ? *default_value_.contact_point_
      : *reinterpret_cast< ::google::fhir::stu3::proto::ContactPoint*>(&::google::fhir::stu3::proto::_ContactPoint_default_instance_);
}
inline ::google::fhir::stu3::proto::ContactPoint* ElementDefinition_DefaultValue::mutable_contact_point() {
  if (!has_contact_point()) {
    clear_default_value();
    set_has_contact_point();
    default_value_.contact_point_ = CreateMaybeMessage< ::google::fhir::stu3::proto::ContactPoint >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.contact_point)
  return default_value_.contact_point_;
}

// .google.fhir.stu3.proto.Count count = 24;
inline bool ElementDefinition_DefaultValue::has_count() const {
  return default_value_case() == kCount;
}
inline void ElementDefinition_DefaultValue::set_has_count() {
  _oneof_case_[0] = kCount;
}
inline const ::google::fhir::stu3::proto::Count& ElementDefinition_DefaultValue::_internal_count() const {
  return *default_value_.count_;
}
inline ::google::fhir::stu3::proto::Count* ElementDefinition_DefaultValue::release_count() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.count)
  if (has_count()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::Count* temp = default_value_.count_;
    default_value_.count_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Count& ElementDefinition_DefaultValue::count() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.count)
  return has_count()
      ? *default_value_.count_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Count*>(&::google::fhir::stu3::proto::_Count_default_instance_);
}
inline ::google::fhir::stu3::proto::Count* ElementDefinition_DefaultValue::mutable_count() {
  if (!has_count()) {
    clear_default_value();
    set_has_count();
    default_value_.count_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Count >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.count)
  return default_value_.count_;
}

// .google.fhir.stu3.proto.Distance distance = 25;
inline bool ElementDefinition_DefaultValue::has_distance() const {
  return default_value_case() == kDistance;
}
inline void ElementDefinition_DefaultValue::set_has_distance() {
  _oneof_case_[0] = kDistance;
}
inline const ::google::fhir::stu3::proto::Distance& ElementDefinition_DefaultValue::_internal_distance() const {
  return *default_value_.distance_;
}
inline ::google::fhir::stu3::proto::Distance* ElementDefinition_DefaultValue::release_distance() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.distance)
  if (has_distance()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::Distance* temp = default_value_.distance_;
    default_value_.distance_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Distance& ElementDefinition_DefaultValue::distance() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.distance)
  return has_distance()
      ? *default_value_.distance_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Distance*>(&::google::fhir::stu3::proto::_Distance_default_instance_);
}
inline ::google::fhir::stu3::proto::Distance* ElementDefinition_DefaultValue::mutable_distance() {
  if (!has_distance()) {
    clear_default_value();
    set_has_distance();
    default_value_.distance_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Distance >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.distance)
  return default_value_.distance_;
}

// .google.fhir.stu3.proto.Duration duration = 26;
inline bool ElementDefinition_DefaultValue::has_duration() const {
  return default_value_case() == kDuration;
}
inline void ElementDefinition_DefaultValue::set_has_duration() {
  _oneof_case_[0] = kDuration;
}
inline const ::google::fhir::stu3::proto::Duration& ElementDefinition_DefaultValue::_internal_duration() const {
  return *default_value_.duration_;
}
inline ::google::fhir::stu3::proto::Duration* ElementDefinition_DefaultValue::release_duration() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.duration)
  if (has_duration()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::Duration* temp = default_value_.duration_;
    default_value_.duration_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Duration& ElementDefinition_DefaultValue::duration() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.duration)
  return has_duration()
      ? *default_value_.duration_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Duration*>(&::google::fhir::stu3::proto::_Duration_default_instance_);
}
inline ::google::fhir::stu3::proto::Duration* ElementDefinition_DefaultValue::mutable_duration() {
  if (!has_duration()) {
    clear_default_value();
    set_has_duration();
    default_value_.duration_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Duration >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.duration)
  return default_value_.duration_;
}

// .google.fhir.stu3.proto.HumanName human_name = 27;
inline bool ElementDefinition_DefaultValue::has_human_name() const {
  return default_value_case() == kHumanName;
}
inline void ElementDefinition_DefaultValue::set_has_human_name() {
  _oneof_case_[0] = kHumanName;
}
inline const ::google::fhir::stu3::proto::HumanName& ElementDefinition_DefaultValue::_internal_human_name() const {
  return *default_value_.human_name_;
}
inline ::google::fhir::stu3::proto::HumanName* ElementDefinition_DefaultValue::release_human_name() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.human_name)
  if (has_human_name()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::HumanName* temp = default_value_.human_name_;
    default_value_.human_name_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::HumanName& ElementDefinition_DefaultValue::human_name() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.human_name)
  return has_human_name()
      ? *default_value_.human_name_
      : *reinterpret_cast< ::google::fhir::stu3::proto::HumanName*>(&::google::fhir::stu3::proto::_HumanName_default_instance_);
}
inline ::google::fhir::stu3::proto::HumanName* ElementDefinition_DefaultValue::mutable_human_name() {
  if (!has_human_name()) {
    clear_default_value();
    set_has_human_name();
    default_value_.human_name_ = CreateMaybeMessage< ::google::fhir::stu3::proto::HumanName >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.human_name)
  return default_value_.human_name_;
}

// .google.fhir.stu3.proto.Identifier identifier = 28;
inline bool ElementDefinition_DefaultValue::has_identifier() const {
  return default_value_case() == kIdentifier;
}
inline void ElementDefinition_DefaultValue::set_has_identifier() {
  _oneof_case_[0] = kIdentifier;
}
inline const ::google::fhir::stu3::proto::Identifier& ElementDefinition_DefaultValue::_internal_identifier() const {
  return *default_value_.identifier_;
}
inline ::google::fhir::stu3::proto::Identifier* ElementDefinition_DefaultValue::release_identifier() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.identifier)
  if (has_identifier()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::Identifier* temp = default_value_.identifier_;
    default_value_.identifier_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Identifier& ElementDefinition_DefaultValue::identifier() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.identifier)
  return has_identifier()
      ? *default_value_.identifier_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Identifier*>(&::google::fhir::stu3::proto::_Identifier_default_instance_);
}
inline ::google::fhir::stu3::proto::Identifier* ElementDefinition_DefaultValue::mutable_identifier() {
  if (!has_identifier()) {
    clear_default_value();
    set_has_identifier();
    default_value_.identifier_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Identifier >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.identifier)
  return default_value_.identifier_;
}

// .google.fhir.stu3.proto.Money money = 29;
inline bool ElementDefinition_DefaultValue::has_money() const {
  return default_value_case() == kMoney;
}
inline void ElementDefinition_DefaultValue::set_has_money() {
  _oneof_case_[0] = kMoney;
}
inline const ::google::fhir::stu3::proto::Money& ElementDefinition_DefaultValue::_internal_money() const {
  return *default_value_.money_;
}
inline ::google::fhir::stu3::proto::Money* ElementDefinition_DefaultValue::release_money() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.money)
  if (has_money()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::Money* temp = default_value_.money_;
    default_value_.money_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Money& ElementDefinition_DefaultValue::money() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.money)
  return has_money()
      ? *default_value_.money_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Money*>(&::google::fhir::stu3::proto::_Money_default_instance_);
}
inline ::google::fhir::stu3::proto::Money* ElementDefinition_DefaultValue::mutable_money() {
  if (!has_money()) {
    clear_default_value();
    set_has_money();
    default_value_.money_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Money >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.money)
  return default_value_.money_;
}

// .google.fhir.stu3.proto.Period period = 30;
inline bool ElementDefinition_DefaultValue::has_period() const {
  return default_value_case() == kPeriod;
}
inline void ElementDefinition_DefaultValue::set_has_period() {
  _oneof_case_[0] = kPeriod;
}
inline const ::google::fhir::stu3::proto::Period& ElementDefinition_DefaultValue::_internal_period() const {
  return *default_value_.period_;
}
inline ::google::fhir::stu3::proto::Period* ElementDefinition_DefaultValue::release_period() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.period)
  if (has_period()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::Period* temp = default_value_.period_;
    default_value_.period_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Period& ElementDefinition_DefaultValue::period() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.period)
  return has_period()
      ? *default_value_.period_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Period*>(&::google::fhir::stu3::proto::_Period_default_instance_);
}
inline ::google::fhir::stu3::proto::Period* ElementDefinition_DefaultValue::mutable_period() {
  if (!has_period()) {
    clear_default_value();
    set_has_period();
    default_value_.period_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Period >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.period)
  return default_value_.period_;
}

// .google.fhir.stu3.proto.Quantity quantity = 31;
inline bool ElementDefinition_DefaultValue::has_quantity() const {
  return default_value_case() == kQuantity;
}
inline void ElementDefinition_DefaultValue::set_has_quantity() {
  _oneof_case_[0] = kQuantity;
}
inline const ::google::fhir::stu3::proto::Quantity& ElementDefinition_DefaultValue::_internal_quantity() const {
  return *default_value_.quantity_;
}
inline ::google::fhir::stu3::proto::Quantity* ElementDefinition_DefaultValue::release_quantity() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.quantity)
  if (has_quantity()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::Quantity* temp = default_value_.quantity_;
    default_value_.quantity_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Quantity& ElementDefinition_DefaultValue::quantity() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.quantity)
  return has_quantity()
      ? *default_value_.quantity_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Quantity*>(&::google::fhir::stu3::proto::_Quantity_default_instance_);
}
inline ::google::fhir::stu3::proto::Quantity* ElementDefinition_DefaultValue::mutable_quantity() {
  if (!has_quantity()) {
    clear_default_value();
    set_has_quantity();
    default_value_.quantity_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Quantity >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.quantity)
  return default_value_.quantity_;
}

// .google.fhir.stu3.proto.Range range = 32;
inline bool ElementDefinition_DefaultValue::has_range() const {
  return default_value_case() == kRange;
}
inline void ElementDefinition_DefaultValue::set_has_range() {
  _oneof_case_[0] = kRange;
}
inline const ::google::fhir::stu3::proto::Range& ElementDefinition_DefaultValue::_internal_range() const {
  return *default_value_.range_;
}
inline ::google::fhir::stu3::proto::Range* ElementDefinition_DefaultValue::release_range() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.range)
  if (has_range()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::Range* temp = default_value_.range_;
    default_value_.range_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Range& ElementDefinition_DefaultValue::range() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.range)
  return has_range()
      ? *default_value_.range_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Range*>(&::google::fhir::stu3::proto::_Range_default_instance_);
}
inline ::google::fhir::stu3::proto::Range* ElementDefinition_DefaultValue::mutable_range() {
  if (!has_range()) {
    clear_default_value();
    set_has_range();
    default_value_.range_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Range >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.range)
  return default_value_.range_;
}

// .google.fhir.stu3.proto.Ratio ratio = 33;
inline bool ElementDefinition_DefaultValue::has_ratio() const {
  return default_value_case() == kRatio;
}
inline void ElementDefinition_DefaultValue::set_has_ratio() {
  _oneof_case_[0] = kRatio;
}
inline const ::google::fhir::stu3::proto::Ratio& ElementDefinition_DefaultValue::_internal_ratio() const {
  return *default_value_.ratio_;
}
inline ::google::fhir::stu3::proto::Ratio* ElementDefinition_DefaultValue::release_ratio() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.ratio)
  if (has_ratio()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::Ratio* temp = default_value_.ratio_;
    default_value_.ratio_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Ratio& ElementDefinition_DefaultValue::ratio() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.ratio)
  return has_ratio()
      ? *default_value_.ratio_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Ratio*>(&::google::fhir::stu3::proto::_Ratio_default_instance_);
}
inline ::google::fhir::stu3::proto::Ratio* ElementDefinition_DefaultValue::mutable_ratio() {
  if (!has_ratio()) {
    clear_default_value();
    set_has_ratio();
    default_value_.ratio_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Ratio >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.ratio)
  return default_value_.ratio_;
}

// .google.fhir.stu3.proto.Reference reference = 34;
inline bool ElementDefinition_DefaultValue::has_reference() const {
  return default_value_case() == kReference;
}
inline void ElementDefinition_DefaultValue::set_has_reference() {
  _oneof_case_[0] = kReference;
}
inline const ::google::fhir::stu3::proto::Reference& ElementDefinition_DefaultValue::_internal_reference() const {
  return *default_value_.reference_;
}
inline ::google::fhir::stu3::proto::Reference* ElementDefinition_DefaultValue::release_reference() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.reference)
  if (has_reference()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::Reference* temp = default_value_.reference_;
    default_value_.reference_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Reference& ElementDefinition_DefaultValue::reference() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.reference)
  return has_reference()
      ? *default_value_.reference_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Reference*>(&::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* ElementDefinition_DefaultValue::mutable_reference() {
  if (!has_reference()) {
    clear_default_value();
    set_has_reference();
    default_value_.reference_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Reference >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.reference)
  return default_value_.reference_;
}

// .google.fhir.stu3.proto.SampledData sampled_data = 35;
inline bool ElementDefinition_DefaultValue::has_sampled_data() const {
  return default_value_case() == kSampledData;
}
inline void ElementDefinition_DefaultValue::set_has_sampled_data() {
  _oneof_case_[0] = kSampledData;
}
inline const ::google::fhir::stu3::proto::SampledData& ElementDefinition_DefaultValue::_internal_sampled_data() const {
  return *default_value_.sampled_data_;
}
inline ::google::fhir::stu3::proto::SampledData* ElementDefinition_DefaultValue::release_sampled_data() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.sampled_data)
  if (has_sampled_data()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::SampledData* temp = default_value_.sampled_data_;
    default_value_.sampled_data_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::SampledData& ElementDefinition_DefaultValue::sampled_data() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.sampled_data)
  return has_sampled_data()
      ? *default_value_.sampled_data_
      : *reinterpret_cast< ::google::fhir::stu3::proto::SampledData*>(&::google::fhir::stu3::proto::_SampledData_default_instance_);
}
inline ::google::fhir::stu3::proto::SampledData* ElementDefinition_DefaultValue::mutable_sampled_data() {
  if (!has_sampled_data()) {
    clear_default_value();
    set_has_sampled_data();
    default_value_.sampled_data_ = CreateMaybeMessage< ::google::fhir::stu3::proto::SampledData >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.sampled_data)
  return default_value_.sampled_data_;
}

// .google.fhir.stu3.proto.Signature signature = 36;
inline bool ElementDefinition_DefaultValue::has_signature() const {
  return default_value_case() == kSignature;
}
inline void ElementDefinition_DefaultValue::set_has_signature() {
  _oneof_case_[0] = kSignature;
}
inline const ::google::fhir::stu3::proto::Signature& ElementDefinition_DefaultValue::_internal_signature() const {
  return *default_value_.signature_;
}
inline ::google::fhir::stu3::proto::Signature* ElementDefinition_DefaultValue::release_signature() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.signature)
  if (has_signature()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::Signature* temp = default_value_.signature_;
    default_value_.signature_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Signature& ElementDefinition_DefaultValue::signature() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.signature)
  return has_signature()
      ? *default_value_.signature_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Signature*>(&::google::fhir::stu3::proto::_Signature_default_instance_);
}
inline ::google::fhir::stu3::proto::Signature* ElementDefinition_DefaultValue::mutable_signature() {
  if (!has_signature()) {
    clear_default_value();
    set_has_signature();
    default_value_.signature_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Signature >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.signature)
  return default_value_.signature_;
}

// .google.fhir.stu3.proto.Timing timing = 37;
inline bool ElementDefinition_DefaultValue::has_timing() const {
  return default_value_case() == kTiming;
}
inline void ElementDefinition_DefaultValue::set_has_timing() {
  _oneof_case_[0] = kTiming;
}
inline const ::google::fhir::stu3::proto::Timing& ElementDefinition_DefaultValue::_internal_timing() const {
  return *default_value_.timing_;
}
inline ::google::fhir::stu3::proto::Timing* ElementDefinition_DefaultValue::release_timing() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.timing)
  if (has_timing()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::Timing* temp = default_value_.timing_;
    default_value_.timing_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Timing& ElementDefinition_DefaultValue::timing() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.timing)
  return has_timing()
      ? *default_value_.timing_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Timing*>(&::google::fhir::stu3::proto::_Timing_default_instance_);
}
inline ::google::fhir::stu3::proto::Timing* ElementDefinition_DefaultValue::mutable_timing() {
  if (!has_timing()) {
    clear_default_value();
    set_has_timing();
    default_value_.timing_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Timing >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.timing)
  return default_value_.timing_;
}

// .google.fhir.stu3.proto.Meta meta = 38;
inline bool ElementDefinition_DefaultValue::has_meta() const {
  return default_value_case() == kMeta;
}
inline void ElementDefinition_DefaultValue::set_has_meta() {
  _oneof_case_[0] = kMeta;
}
inline const ::google::fhir::stu3::proto::Meta& ElementDefinition_DefaultValue::_internal_meta() const {
  return *default_value_.meta_;
}
inline ::google::fhir::stu3::proto::Meta* ElementDefinition_DefaultValue::release_meta() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.DefaultValue.meta)
  if (has_meta()) {
    clear_has_default_value();
      ::google::fhir::stu3::proto::Meta* temp = default_value_.meta_;
    default_value_.meta_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Meta& ElementDefinition_DefaultValue::meta() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.DefaultValue.meta)
  return has_meta()
      ? *default_value_.meta_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Meta*>(&::google::fhir::stu3::proto::_Meta_default_instance_);
}
inline ::google::fhir::stu3::proto::Meta* ElementDefinition_DefaultValue::mutable_meta() {
  if (!has_meta()) {
    clear_default_value();
    set_has_meta();
    default_value_.meta_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Meta >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.DefaultValue.meta)
  return default_value_.meta_;
}

inline bool ElementDefinition_DefaultValue::has_default_value() const {
  return default_value_case() != DEFAULT_VALUE_NOT_SET;
}
inline void ElementDefinition_DefaultValue::clear_has_default_value() {
  _oneof_case_[0] = DEFAULT_VALUE_NOT_SET;
}
inline ElementDefinition_DefaultValue::DefaultValueCase ElementDefinition_DefaultValue::default_value_case() const {
  return ElementDefinition_DefaultValue::DefaultValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ElementDefinition_Fixed

// .google.fhir.stu3.proto.Base64Binary base64_binary = 1;
inline bool ElementDefinition_Fixed::has_base64_binary() const {
  return fixed_case() == kBase64Binary;
}
inline void ElementDefinition_Fixed::set_has_base64_binary() {
  _oneof_case_[0] = kBase64Binary;
}
inline const ::google::fhir::stu3::proto::Base64Binary& ElementDefinition_Fixed::_internal_base64_binary() const {
  return *fixed_.base64_binary_;
}
inline ::google::fhir::stu3::proto::Base64Binary* ElementDefinition_Fixed::release_base64_binary() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.base64_binary)
  if (has_base64_binary()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::Base64Binary* temp = fixed_.base64_binary_;
    fixed_.base64_binary_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Base64Binary& ElementDefinition_Fixed::base64_binary() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.base64_binary)
  return has_base64_binary()
      ? *fixed_.base64_binary_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Base64Binary*>(&::google::fhir::stu3::proto::_Base64Binary_default_instance_);
}
inline ::google::fhir::stu3::proto::Base64Binary* ElementDefinition_Fixed::mutable_base64_binary() {
  if (!has_base64_binary()) {
    clear_fixed();
    set_has_base64_binary();
    fixed_.base64_binary_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Base64Binary >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.base64_binary)
  return fixed_.base64_binary_;
}

// .google.fhir.stu3.proto.Boolean boolean = 2;
inline bool ElementDefinition_Fixed::has_boolean() const {
  return fixed_case() == kBoolean;
}
inline void ElementDefinition_Fixed::set_has_boolean() {
  _oneof_case_[0] = kBoolean;
}
inline const ::google::fhir::stu3::proto::Boolean& ElementDefinition_Fixed::_internal_boolean() const {
  return *fixed_.boolean_;
}
inline ::google::fhir::stu3::proto::Boolean* ElementDefinition_Fixed::release_boolean() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.boolean)
  if (has_boolean()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::Boolean* temp = fixed_.boolean_;
    fixed_.boolean_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Boolean& ElementDefinition_Fixed::boolean() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.boolean)
  return has_boolean()
      ? *fixed_.boolean_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Boolean*>(&::google::fhir::stu3::proto::_Boolean_default_instance_);
}
inline ::google::fhir::stu3::proto::Boolean* ElementDefinition_Fixed::mutable_boolean() {
  if (!has_boolean()) {
    clear_fixed();
    set_has_boolean();
    fixed_.boolean_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Boolean >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.boolean)
  return fixed_.boolean_;
}

// .google.fhir.stu3.proto.Code code = 3;
inline bool ElementDefinition_Fixed::has_code() const {
  return fixed_case() == kCode;
}
inline void ElementDefinition_Fixed::set_has_code() {
  _oneof_case_[0] = kCode;
}
inline const ::google::fhir::stu3::proto::Code& ElementDefinition_Fixed::_internal_code() const {
  return *fixed_.code_;
}
inline ::google::fhir::stu3::proto::Code* ElementDefinition_Fixed::release_code() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.code)
  if (has_code()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::Code* temp = fixed_.code_;
    fixed_.code_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Code& ElementDefinition_Fixed::code() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.code)
  return has_code()
      ? *fixed_.code_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Code*>(&::google::fhir::stu3::proto::_Code_default_instance_);
}
inline ::google::fhir::stu3::proto::Code* ElementDefinition_Fixed::mutable_code() {
  if (!has_code()) {
    clear_fixed();
    set_has_code();
    fixed_.code_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Code >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.code)
  return fixed_.code_;
}

// .google.fhir.stu3.proto.Date date = 4;
inline bool ElementDefinition_Fixed::has_date() const {
  return fixed_case() == kDate;
}
inline void ElementDefinition_Fixed::set_has_date() {
  _oneof_case_[0] = kDate;
}
inline const ::google::fhir::stu3::proto::Date& ElementDefinition_Fixed::_internal_date() const {
  return *fixed_.date_;
}
inline ::google::fhir::stu3::proto::Date* ElementDefinition_Fixed::release_date() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.date)
  if (has_date()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::Date* temp = fixed_.date_;
    fixed_.date_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Date& ElementDefinition_Fixed::date() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.date)
  return has_date()
      ? *fixed_.date_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Date*>(&::google::fhir::stu3::proto::_Date_default_instance_);
}
inline ::google::fhir::stu3::proto::Date* ElementDefinition_Fixed::mutable_date() {
  if (!has_date()) {
    clear_fixed();
    set_has_date();
    fixed_.date_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Date >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.date)
  return fixed_.date_;
}

// .google.fhir.stu3.proto.DateTime date_time = 5;
inline bool ElementDefinition_Fixed::has_date_time() const {
  return fixed_case() == kDateTime;
}
inline void ElementDefinition_Fixed::set_has_date_time() {
  _oneof_case_[0] = kDateTime;
}
inline const ::google::fhir::stu3::proto::DateTime& ElementDefinition_Fixed::_internal_date_time() const {
  return *fixed_.date_time_;
}
inline ::google::fhir::stu3::proto::DateTime* ElementDefinition_Fixed::release_date_time() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.date_time)
  if (has_date_time()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::DateTime* temp = fixed_.date_time_;
    fixed_.date_time_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::DateTime& ElementDefinition_Fixed::date_time() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.date_time)
  return has_date_time()
      ? *fixed_.date_time_
      : *reinterpret_cast< ::google::fhir::stu3::proto::DateTime*>(&::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* ElementDefinition_Fixed::mutable_date_time() {
  if (!has_date_time()) {
    clear_fixed();
    set_has_date_time();
    fixed_.date_time_ = CreateMaybeMessage< ::google::fhir::stu3::proto::DateTime >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.date_time)
  return fixed_.date_time_;
}

// .google.fhir.stu3.proto.Decimal decimal = 6;
inline bool ElementDefinition_Fixed::has_decimal() const {
  return fixed_case() == kDecimal;
}
inline void ElementDefinition_Fixed::set_has_decimal() {
  _oneof_case_[0] = kDecimal;
}
inline const ::google::fhir::stu3::proto::Decimal& ElementDefinition_Fixed::_internal_decimal() const {
  return *fixed_.decimal_;
}
inline ::google::fhir::stu3::proto::Decimal* ElementDefinition_Fixed::release_decimal() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.decimal)
  if (has_decimal()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::Decimal* temp = fixed_.decimal_;
    fixed_.decimal_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Decimal& ElementDefinition_Fixed::decimal() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.decimal)
  return has_decimal()
      ? *fixed_.decimal_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Decimal*>(&::google::fhir::stu3::proto::_Decimal_default_instance_);
}
inline ::google::fhir::stu3::proto::Decimal* ElementDefinition_Fixed::mutable_decimal() {
  if (!has_decimal()) {
    clear_fixed();
    set_has_decimal();
    fixed_.decimal_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Decimal >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.decimal)
  return fixed_.decimal_;
}

// .google.fhir.stu3.proto.Id id = 7;
inline bool ElementDefinition_Fixed::has_id() const {
  return fixed_case() == kId;
}
inline void ElementDefinition_Fixed::set_has_id() {
  _oneof_case_[0] = kId;
}
inline const ::google::fhir::stu3::proto::Id& ElementDefinition_Fixed::_internal_id() const {
  return *fixed_.id_;
}
inline ::google::fhir::stu3::proto::Id* ElementDefinition_Fixed::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.id)
  if (has_id()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::Id* temp = fixed_.id_;
    fixed_.id_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Id& ElementDefinition_Fixed::id() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.id)
  return has_id()
      ? *fixed_.id_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Id*>(&::google::fhir::stu3::proto::_Id_default_instance_);
}
inline ::google::fhir::stu3::proto::Id* ElementDefinition_Fixed::mutable_id() {
  if (!has_id()) {
    clear_fixed();
    set_has_id();
    fixed_.id_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Id >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.id)
  return fixed_.id_;
}

// .google.fhir.stu3.proto.Instant instant = 8;
inline bool ElementDefinition_Fixed::has_instant() const {
  return fixed_case() == kInstant;
}
inline void ElementDefinition_Fixed::set_has_instant() {
  _oneof_case_[0] = kInstant;
}
inline const ::google::fhir::stu3::proto::Instant& ElementDefinition_Fixed::_internal_instant() const {
  return *fixed_.instant_;
}
inline ::google::fhir::stu3::proto::Instant* ElementDefinition_Fixed::release_instant() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.instant)
  if (has_instant()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::Instant* temp = fixed_.instant_;
    fixed_.instant_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Instant& ElementDefinition_Fixed::instant() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.instant)
  return has_instant()
      ? *fixed_.instant_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Instant*>(&::google::fhir::stu3::proto::_Instant_default_instance_);
}
inline ::google::fhir::stu3::proto::Instant* ElementDefinition_Fixed::mutable_instant() {
  if (!has_instant()) {
    clear_fixed();
    set_has_instant();
    fixed_.instant_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Instant >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.instant)
  return fixed_.instant_;
}

// .google.fhir.stu3.proto.Integer integer = 9;
inline bool ElementDefinition_Fixed::has_integer() const {
  return fixed_case() == kInteger;
}
inline void ElementDefinition_Fixed::set_has_integer() {
  _oneof_case_[0] = kInteger;
}
inline const ::google::fhir::stu3::proto::Integer& ElementDefinition_Fixed::_internal_integer() const {
  return *fixed_.integer_;
}
inline ::google::fhir::stu3::proto::Integer* ElementDefinition_Fixed::release_integer() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.integer)
  if (has_integer()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::Integer* temp = fixed_.integer_;
    fixed_.integer_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Integer& ElementDefinition_Fixed::integer() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.integer)
  return has_integer()
      ? *fixed_.integer_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Integer*>(&::google::fhir::stu3::proto::_Integer_default_instance_);
}
inline ::google::fhir::stu3::proto::Integer* ElementDefinition_Fixed::mutable_integer() {
  if (!has_integer()) {
    clear_fixed();
    set_has_integer();
    fixed_.integer_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Integer >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.integer)
  return fixed_.integer_;
}

// .google.fhir.stu3.proto.Markdown markdown = 10;
inline bool ElementDefinition_Fixed::has_markdown() const {
  return fixed_case() == kMarkdown;
}
inline void ElementDefinition_Fixed::set_has_markdown() {
  _oneof_case_[0] = kMarkdown;
}
inline const ::google::fhir::stu3::proto::Markdown& ElementDefinition_Fixed::_internal_markdown() const {
  return *fixed_.markdown_;
}
inline ::google::fhir::stu3::proto::Markdown* ElementDefinition_Fixed::release_markdown() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.markdown)
  if (has_markdown()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::Markdown* temp = fixed_.markdown_;
    fixed_.markdown_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Markdown& ElementDefinition_Fixed::markdown() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.markdown)
  return has_markdown()
      ? *fixed_.markdown_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Markdown*>(&::google::fhir::stu3::proto::_Markdown_default_instance_);
}
inline ::google::fhir::stu3::proto::Markdown* ElementDefinition_Fixed::mutable_markdown() {
  if (!has_markdown()) {
    clear_fixed();
    set_has_markdown();
    fixed_.markdown_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Markdown >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.markdown)
  return fixed_.markdown_;
}

// .google.fhir.stu3.proto.Oid oid = 11;
inline bool ElementDefinition_Fixed::has_oid() const {
  return fixed_case() == kOid;
}
inline void ElementDefinition_Fixed::set_has_oid() {
  _oneof_case_[0] = kOid;
}
inline const ::google::fhir::stu3::proto::Oid& ElementDefinition_Fixed::_internal_oid() const {
  return *fixed_.oid_;
}
inline ::google::fhir::stu3::proto::Oid* ElementDefinition_Fixed::release_oid() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.oid)
  if (has_oid()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::Oid* temp = fixed_.oid_;
    fixed_.oid_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Oid& ElementDefinition_Fixed::oid() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.oid)
  return has_oid()
      ? *fixed_.oid_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Oid*>(&::google::fhir::stu3::proto::_Oid_default_instance_);
}
inline ::google::fhir::stu3::proto::Oid* ElementDefinition_Fixed::mutable_oid() {
  if (!has_oid()) {
    clear_fixed();
    set_has_oid();
    fixed_.oid_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Oid >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.oid)
  return fixed_.oid_;
}

// .google.fhir.stu3.proto.PositiveInt positive_int = 12;
inline bool ElementDefinition_Fixed::has_positive_int() const {
  return fixed_case() == kPositiveInt;
}
inline void ElementDefinition_Fixed::set_has_positive_int() {
  _oneof_case_[0] = kPositiveInt;
}
inline const ::google::fhir::stu3::proto::PositiveInt& ElementDefinition_Fixed::_internal_positive_int() const {
  return *fixed_.positive_int_;
}
inline ::google::fhir::stu3::proto::PositiveInt* ElementDefinition_Fixed::release_positive_int() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.positive_int)
  if (has_positive_int()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::PositiveInt* temp = fixed_.positive_int_;
    fixed_.positive_int_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::PositiveInt& ElementDefinition_Fixed::positive_int() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.positive_int)
  return has_positive_int()
      ? *fixed_.positive_int_
      : *reinterpret_cast< ::google::fhir::stu3::proto::PositiveInt*>(&::google::fhir::stu3::proto::_PositiveInt_default_instance_);
}
inline ::google::fhir::stu3::proto::PositiveInt* ElementDefinition_Fixed::mutable_positive_int() {
  if (!has_positive_int()) {
    clear_fixed();
    set_has_positive_int();
    fixed_.positive_int_ = CreateMaybeMessage< ::google::fhir::stu3::proto::PositiveInt >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.positive_int)
  return fixed_.positive_int_;
}

// .google.fhir.stu3.proto.String string_value = 13[json_name = "string"];
inline bool ElementDefinition_Fixed::has_string_value() const {
  return fixed_case() == kStringValue;
}
inline void ElementDefinition_Fixed::set_has_string_value() {
  _oneof_case_[0] = kStringValue;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Fixed::_internal_string_value() const {
  return *fixed_.string_value_;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Fixed::release_string_value() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.string_value)
  if (has_string_value()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::String* temp = fixed_.string_value_;
    fixed_.string_value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Fixed::string_value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.string_value)
  return has_string_value()
      ? *fixed_.string_value_
      : *reinterpret_cast< ::google::fhir::stu3::proto::String*>(&::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Fixed::mutable_string_value() {
  if (!has_string_value()) {
    clear_fixed();
    set_has_string_value();
    fixed_.string_value_ = CreateMaybeMessage< ::google::fhir::stu3::proto::String >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.string_value)
  return fixed_.string_value_;
}

// .google.fhir.stu3.proto.Time time = 14;
inline bool ElementDefinition_Fixed::has_time() const {
  return fixed_case() == kTime;
}
inline void ElementDefinition_Fixed::set_has_time() {
  _oneof_case_[0] = kTime;
}
inline const ::google::fhir::stu3::proto::Time& ElementDefinition_Fixed::_internal_time() const {
  return *fixed_.time_;
}
inline ::google::fhir::stu3::proto::Time* ElementDefinition_Fixed::release_time() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.time)
  if (has_time()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::Time* temp = fixed_.time_;
    fixed_.time_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Time& ElementDefinition_Fixed::time() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.time)
  return has_time()
      ? *fixed_.time_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Time*>(&::google::fhir::stu3::proto::_Time_default_instance_);
}
inline ::google::fhir::stu3::proto::Time* ElementDefinition_Fixed::mutable_time() {
  if (!has_time()) {
    clear_fixed();
    set_has_time();
    fixed_.time_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Time >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.time)
  return fixed_.time_;
}

// .google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
inline bool ElementDefinition_Fixed::has_unsigned_int() const {
  return fixed_case() == kUnsignedInt;
}
inline void ElementDefinition_Fixed::set_has_unsigned_int() {
  _oneof_case_[0] = kUnsignedInt;
}
inline const ::google::fhir::stu3::proto::UnsignedInt& ElementDefinition_Fixed::_internal_unsigned_int() const {
  return *fixed_.unsigned_int_;
}
inline ::google::fhir::stu3::proto::UnsignedInt* ElementDefinition_Fixed::release_unsigned_int() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.unsigned_int)
  if (has_unsigned_int()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::UnsignedInt* temp = fixed_.unsigned_int_;
    fixed_.unsigned_int_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::UnsignedInt& ElementDefinition_Fixed::unsigned_int() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.unsigned_int)
  return has_unsigned_int()
      ? *fixed_.unsigned_int_
      : *reinterpret_cast< ::google::fhir::stu3::proto::UnsignedInt*>(&::google::fhir::stu3::proto::_UnsignedInt_default_instance_);
}
inline ::google::fhir::stu3::proto::UnsignedInt* ElementDefinition_Fixed::mutable_unsigned_int() {
  if (!has_unsigned_int()) {
    clear_fixed();
    set_has_unsigned_int();
    fixed_.unsigned_int_ = CreateMaybeMessage< ::google::fhir::stu3::proto::UnsignedInt >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.unsigned_int)
  return fixed_.unsigned_int_;
}

// .google.fhir.stu3.proto.Uri uri = 16;
inline bool ElementDefinition_Fixed::has_uri() const {
  return fixed_case() == kUri;
}
inline void ElementDefinition_Fixed::set_has_uri() {
  _oneof_case_[0] = kUri;
}
inline const ::google::fhir::stu3::proto::Uri& ElementDefinition_Fixed::_internal_uri() const {
  return *fixed_.uri_;
}
inline ::google::fhir::stu3::proto::Uri* ElementDefinition_Fixed::release_uri() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.uri)
  if (has_uri()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::Uri* temp = fixed_.uri_;
    fixed_.uri_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Uri& ElementDefinition_Fixed::uri() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.uri)
  return has_uri()
      ? *fixed_.uri_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Uri*>(&::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* ElementDefinition_Fixed::mutable_uri() {
  if (!has_uri()) {
    clear_fixed();
    set_has_uri();
    fixed_.uri_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Uri >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.uri)
  return fixed_.uri_;
}

// .google.fhir.stu3.proto.Address address = 17;
inline bool ElementDefinition_Fixed::has_address() const {
  return fixed_case() == kAddress;
}
inline void ElementDefinition_Fixed::set_has_address() {
  _oneof_case_[0] = kAddress;
}
inline const ::google::fhir::stu3::proto::Address& ElementDefinition_Fixed::_internal_address() const {
  return *fixed_.address_;
}
inline ::google::fhir::stu3::proto::Address* ElementDefinition_Fixed::release_address() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.address)
  if (has_address()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::Address* temp = fixed_.address_;
    fixed_.address_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Address& ElementDefinition_Fixed::address() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.address)
  return has_address()
      ? *fixed_.address_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Address*>(&::google::fhir::stu3::proto::_Address_default_instance_);
}
inline ::google::fhir::stu3::proto::Address* ElementDefinition_Fixed::mutable_address() {
  if (!has_address()) {
    clear_fixed();
    set_has_address();
    fixed_.address_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Address >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.address)
  return fixed_.address_;
}

// .google.fhir.stu3.proto.Age age = 18;
inline bool ElementDefinition_Fixed::has_age() const {
  return fixed_case() == kAge;
}
inline void ElementDefinition_Fixed::set_has_age() {
  _oneof_case_[0] = kAge;
}
inline const ::google::fhir::stu3::proto::Age& ElementDefinition_Fixed::_internal_age() const {
  return *fixed_.age_;
}
inline ::google::fhir::stu3::proto::Age* ElementDefinition_Fixed::release_age() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.age)
  if (has_age()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::Age* temp = fixed_.age_;
    fixed_.age_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Age& ElementDefinition_Fixed::age() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.age)
  return has_age()
      ? *fixed_.age_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Age*>(&::google::fhir::stu3::proto::_Age_default_instance_);
}
inline ::google::fhir::stu3::proto::Age* ElementDefinition_Fixed::mutable_age() {
  if (!has_age()) {
    clear_fixed();
    set_has_age();
    fixed_.age_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Age >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.age)
  return fixed_.age_;
}

// .google.fhir.stu3.proto.Annotation annotation = 19;
inline bool ElementDefinition_Fixed::has_annotation() const {
  return fixed_case() == kAnnotation;
}
inline void ElementDefinition_Fixed::set_has_annotation() {
  _oneof_case_[0] = kAnnotation;
}
inline const ::google::fhir::stu3::proto::Annotation& ElementDefinition_Fixed::_internal_annotation() const {
  return *fixed_.annotation_;
}
inline ::google::fhir::stu3::proto::Annotation* ElementDefinition_Fixed::release_annotation() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.annotation)
  if (has_annotation()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::Annotation* temp = fixed_.annotation_;
    fixed_.annotation_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Annotation& ElementDefinition_Fixed::annotation() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.annotation)
  return has_annotation()
      ? *fixed_.annotation_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Annotation*>(&::google::fhir::stu3::proto::_Annotation_default_instance_);
}
inline ::google::fhir::stu3::proto::Annotation* ElementDefinition_Fixed::mutable_annotation() {
  if (!has_annotation()) {
    clear_fixed();
    set_has_annotation();
    fixed_.annotation_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Annotation >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.annotation)
  return fixed_.annotation_;
}

// .google.fhir.stu3.proto.Attachment attachment = 20;
inline bool ElementDefinition_Fixed::has_attachment() const {
  return fixed_case() == kAttachment;
}
inline void ElementDefinition_Fixed::set_has_attachment() {
  _oneof_case_[0] = kAttachment;
}
inline const ::google::fhir::stu3::proto::Attachment& ElementDefinition_Fixed::_internal_attachment() const {
  return *fixed_.attachment_;
}
inline ::google::fhir::stu3::proto::Attachment* ElementDefinition_Fixed::release_attachment() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.attachment)
  if (has_attachment()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::Attachment* temp = fixed_.attachment_;
    fixed_.attachment_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Attachment& ElementDefinition_Fixed::attachment() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.attachment)
  return has_attachment()
      ? *fixed_.attachment_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Attachment*>(&::google::fhir::stu3::proto::_Attachment_default_instance_);
}
inline ::google::fhir::stu3::proto::Attachment* ElementDefinition_Fixed::mutable_attachment() {
  if (!has_attachment()) {
    clear_fixed();
    set_has_attachment();
    fixed_.attachment_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Attachment >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.attachment)
  return fixed_.attachment_;
}

// .google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
inline bool ElementDefinition_Fixed::has_codeable_concept() const {
  return fixed_case() == kCodeableConcept;
}
inline void ElementDefinition_Fixed::set_has_codeable_concept() {
  _oneof_case_[0] = kCodeableConcept;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& ElementDefinition_Fixed::_internal_codeable_concept() const {
  return *fixed_.codeable_concept_;
}
inline ::google::fhir::stu3::proto::CodeableConcept* ElementDefinition_Fixed::release_codeable_concept() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.codeable_concept)
  if (has_codeable_concept()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::CodeableConcept* temp = fixed_.codeable_concept_;
    fixed_.codeable_concept_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::CodeableConcept& ElementDefinition_Fixed::codeable_concept() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.codeable_concept)
  return has_codeable_concept()
      ? *fixed_.codeable_concept_
      : *reinterpret_cast< ::google::fhir::stu3::proto::CodeableConcept*>(&::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* ElementDefinition_Fixed::mutable_codeable_concept() {
  if (!has_codeable_concept()) {
    clear_fixed();
    set_has_codeable_concept();
    fixed_.codeable_concept_ = CreateMaybeMessage< ::google::fhir::stu3::proto::CodeableConcept >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.codeable_concept)
  return fixed_.codeable_concept_;
}

// .google.fhir.stu3.proto.Coding coding = 22;
inline bool ElementDefinition_Fixed::has_coding() const {
  return fixed_case() == kCoding;
}
inline void ElementDefinition_Fixed::set_has_coding() {
  _oneof_case_[0] = kCoding;
}
inline const ::google::fhir::stu3::proto::Coding& ElementDefinition_Fixed::_internal_coding() const {
  return *fixed_.coding_;
}
inline ::google::fhir::stu3::proto::Coding* ElementDefinition_Fixed::release_coding() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.coding)
  if (has_coding()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::Coding* temp = fixed_.coding_;
    fixed_.coding_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Coding& ElementDefinition_Fixed::coding() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.coding)
  return has_coding()
      ? *fixed_.coding_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Coding*>(&::google::fhir::stu3::proto::_Coding_default_instance_);
}
inline ::google::fhir::stu3::proto::Coding* ElementDefinition_Fixed::mutable_coding() {
  if (!has_coding()) {
    clear_fixed();
    set_has_coding();
    fixed_.coding_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Coding >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.coding)
  return fixed_.coding_;
}

// .google.fhir.stu3.proto.ContactPoint contact_point = 23;
inline bool ElementDefinition_Fixed::has_contact_point() const {
  return fixed_case() == kContactPoint;
}
inline void ElementDefinition_Fixed::set_has_contact_point() {
  _oneof_case_[0] = kContactPoint;
}
inline const ::google::fhir::stu3::proto::ContactPoint& ElementDefinition_Fixed::_internal_contact_point() const {
  return *fixed_.contact_point_;
}
inline ::google::fhir::stu3::proto::ContactPoint* ElementDefinition_Fixed::release_contact_point() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.contact_point)
  if (has_contact_point()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::ContactPoint* temp = fixed_.contact_point_;
    fixed_.contact_point_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::ContactPoint& ElementDefinition_Fixed::contact_point() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.contact_point)
  return has_contact_point()
      ? *fixed_.contact_point_
      : *reinterpret_cast< ::google::fhir::stu3::proto::ContactPoint*>(&::google::fhir::stu3::proto::_ContactPoint_default_instance_);
}
inline ::google::fhir::stu3::proto::ContactPoint* ElementDefinition_Fixed::mutable_contact_point() {
  if (!has_contact_point()) {
    clear_fixed();
    set_has_contact_point();
    fixed_.contact_point_ = CreateMaybeMessage< ::google::fhir::stu3::proto::ContactPoint >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.contact_point)
  return fixed_.contact_point_;
}

// .google.fhir.stu3.proto.Count count = 24;
inline bool ElementDefinition_Fixed::has_count() const {
  return fixed_case() == kCount;
}
inline void ElementDefinition_Fixed::set_has_count() {
  _oneof_case_[0] = kCount;
}
inline const ::google::fhir::stu3::proto::Count& ElementDefinition_Fixed::_internal_count() const {
  return *fixed_.count_;
}
inline ::google::fhir::stu3::proto::Count* ElementDefinition_Fixed::release_count() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.count)
  if (has_count()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::Count* temp = fixed_.count_;
    fixed_.count_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Count& ElementDefinition_Fixed::count() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.count)
  return has_count()
      ? *fixed_.count_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Count*>(&::google::fhir::stu3::proto::_Count_default_instance_);
}
inline ::google::fhir::stu3::proto::Count* ElementDefinition_Fixed::mutable_count() {
  if (!has_count()) {
    clear_fixed();
    set_has_count();
    fixed_.count_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Count >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.count)
  return fixed_.count_;
}

// .google.fhir.stu3.proto.Distance distance = 25;
inline bool ElementDefinition_Fixed::has_distance() const {
  return fixed_case() == kDistance;
}
inline void ElementDefinition_Fixed::set_has_distance() {
  _oneof_case_[0] = kDistance;
}
inline const ::google::fhir::stu3::proto::Distance& ElementDefinition_Fixed::_internal_distance() const {
  return *fixed_.distance_;
}
inline ::google::fhir::stu3::proto::Distance* ElementDefinition_Fixed::release_distance() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.distance)
  if (has_distance()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::Distance* temp = fixed_.distance_;
    fixed_.distance_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Distance& ElementDefinition_Fixed::distance() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.distance)
  return has_distance()
      ? *fixed_.distance_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Distance*>(&::google::fhir::stu3::proto::_Distance_default_instance_);
}
inline ::google::fhir::stu3::proto::Distance* ElementDefinition_Fixed::mutable_distance() {
  if (!has_distance()) {
    clear_fixed();
    set_has_distance();
    fixed_.distance_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Distance >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.distance)
  return fixed_.distance_;
}

// .google.fhir.stu3.proto.Duration duration = 26;
inline bool ElementDefinition_Fixed::has_duration() const {
  return fixed_case() == kDuration;
}
inline void ElementDefinition_Fixed::set_has_duration() {
  _oneof_case_[0] = kDuration;
}
inline const ::google::fhir::stu3::proto::Duration& ElementDefinition_Fixed::_internal_duration() const {
  return *fixed_.duration_;
}
inline ::google::fhir::stu3::proto::Duration* ElementDefinition_Fixed::release_duration() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.duration)
  if (has_duration()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::Duration* temp = fixed_.duration_;
    fixed_.duration_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Duration& ElementDefinition_Fixed::duration() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.duration)
  return has_duration()
      ? *fixed_.duration_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Duration*>(&::google::fhir::stu3::proto::_Duration_default_instance_);
}
inline ::google::fhir::stu3::proto::Duration* ElementDefinition_Fixed::mutable_duration() {
  if (!has_duration()) {
    clear_fixed();
    set_has_duration();
    fixed_.duration_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Duration >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.duration)
  return fixed_.duration_;
}

// .google.fhir.stu3.proto.HumanName human_name = 27;
inline bool ElementDefinition_Fixed::has_human_name() const {
  return fixed_case() == kHumanName;
}
inline void ElementDefinition_Fixed::set_has_human_name() {
  _oneof_case_[0] = kHumanName;
}
inline const ::google::fhir::stu3::proto::HumanName& ElementDefinition_Fixed::_internal_human_name() const {
  return *fixed_.human_name_;
}
inline ::google::fhir::stu3::proto::HumanName* ElementDefinition_Fixed::release_human_name() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.human_name)
  if (has_human_name()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::HumanName* temp = fixed_.human_name_;
    fixed_.human_name_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::HumanName& ElementDefinition_Fixed::human_name() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.human_name)
  return has_human_name()
      ? *fixed_.human_name_
      : *reinterpret_cast< ::google::fhir::stu3::proto::HumanName*>(&::google::fhir::stu3::proto::_HumanName_default_instance_);
}
inline ::google::fhir::stu3::proto::HumanName* ElementDefinition_Fixed::mutable_human_name() {
  if (!has_human_name()) {
    clear_fixed();
    set_has_human_name();
    fixed_.human_name_ = CreateMaybeMessage< ::google::fhir::stu3::proto::HumanName >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.human_name)
  return fixed_.human_name_;
}

// .google.fhir.stu3.proto.Identifier identifier = 28;
inline bool ElementDefinition_Fixed::has_identifier() const {
  return fixed_case() == kIdentifier;
}
inline void ElementDefinition_Fixed::set_has_identifier() {
  _oneof_case_[0] = kIdentifier;
}
inline const ::google::fhir::stu3::proto::Identifier& ElementDefinition_Fixed::_internal_identifier() const {
  return *fixed_.identifier_;
}
inline ::google::fhir::stu3::proto::Identifier* ElementDefinition_Fixed::release_identifier() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.identifier)
  if (has_identifier()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::Identifier* temp = fixed_.identifier_;
    fixed_.identifier_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Identifier& ElementDefinition_Fixed::identifier() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.identifier)
  return has_identifier()
      ? *fixed_.identifier_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Identifier*>(&::google::fhir::stu3::proto::_Identifier_default_instance_);
}
inline ::google::fhir::stu3::proto::Identifier* ElementDefinition_Fixed::mutable_identifier() {
  if (!has_identifier()) {
    clear_fixed();
    set_has_identifier();
    fixed_.identifier_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Identifier >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.identifier)
  return fixed_.identifier_;
}

// .google.fhir.stu3.proto.Money money = 29;
inline bool ElementDefinition_Fixed::has_money() const {
  return fixed_case() == kMoney;
}
inline void ElementDefinition_Fixed::set_has_money() {
  _oneof_case_[0] = kMoney;
}
inline const ::google::fhir::stu3::proto::Money& ElementDefinition_Fixed::_internal_money() const {
  return *fixed_.money_;
}
inline ::google::fhir::stu3::proto::Money* ElementDefinition_Fixed::release_money() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.money)
  if (has_money()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::Money* temp = fixed_.money_;
    fixed_.money_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Money& ElementDefinition_Fixed::money() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.money)
  return has_money()
      ? *fixed_.money_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Money*>(&::google::fhir::stu3::proto::_Money_default_instance_);
}
inline ::google::fhir::stu3::proto::Money* ElementDefinition_Fixed::mutable_money() {
  if (!has_money()) {
    clear_fixed();
    set_has_money();
    fixed_.money_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Money >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.money)
  return fixed_.money_;
}

// .google.fhir.stu3.proto.Period period = 30;
inline bool ElementDefinition_Fixed::has_period() const {
  return fixed_case() == kPeriod;
}
inline void ElementDefinition_Fixed::set_has_period() {
  _oneof_case_[0] = kPeriod;
}
inline const ::google::fhir::stu3::proto::Period& ElementDefinition_Fixed::_internal_period() const {
  return *fixed_.period_;
}
inline ::google::fhir::stu3::proto::Period* ElementDefinition_Fixed::release_period() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.period)
  if (has_period()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::Period* temp = fixed_.period_;
    fixed_.period_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Period& ElementDefinition_Fixed::period() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.period)
  return has_period()
      ? *fixed_.period_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Period*>(&::google::fhir::stu3::proto::_Period_default_instance_);
}
inline ::google::fhir::stu3::proto::Period* ElementDefinition_Fixed::mutable_period() {
  if (!has_period()) {
    clear_fixed();
    set_has_period();
    fixed_.period_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Period >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.period)
  return fixed_.period_;
}

// .google.fhir.stu3.proto.Quantity quantity = 31;
inline bool ElementDefinition_Fixed::has_quantity() const {
  return fixed_case() == kQuantity;
}
inline void ElementDefinition_Fixed::set_has_quantity() {
  _oneof_case_[0] = kQuantity;
}
inline const ::google::fhir::stu3::proto::Quantity& ElementDefinition_Fixed::_internal_quantity() const {
  return *fixed_.quantity_;
}
inline ::google::fhir::stu3::proto::Quantity* ElementDefinition_Fixed::release_quantity() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.quantity)
  if (has_quantity()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::Quantity* temp = fixed_.quantity_;
    fixed_.quantity_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Quantity& ElementDefinition_Fixed::quantity() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.quantity)
  return has_quantity()
      ? *fixed_.quantity_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Quantity*>(&::google::fhir::stu3::proto::_Quantity_default_instance_);
}
inline ::google::fhir::stu3::proto::Quantity* ElementDefinition_Fixed::mutable_quantity() {
  if (!has_quantity()) {
    clear_fixed();
    set_has_quantity();
    fixed_.quantity_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Quantity >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.quantity)
  return fixed_.quantity_;
}

// .google.fhir.stu3.proto.Range range = 32;
inline bool ElementDefinition_Fixed::has_range() const {
  return fixed_case() == kRange;
}
inline void ElementDefinition_Fixed::set_has_range() {
  _oneof_case_[0] = kRange;
}
inline const ::google::fhir::stu3::proto::Range& ElementDefinition_Fixed::_internal_range() const {
  return *fixed_.range_;
}
inline ::google::fhir::stu3::proto::Range* ElementDefinition_Fixed::release_range() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.range)
  if (has_range()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::Range* temp = fixed_.range_;
    fixed_.range_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Range& ElementDefinition_Fixed::range() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.range)
  return has_range()
      ? *fixed_.range_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Range*>(&::google::fhir::stu3::proto::_Range_default_instance_);
}
inline ::google::fhir::stu3::proto::Range* ElementDefinition_Fixed::mutable_range() {
  if (!has_range()) {
    clear_fixed();
    set_has_range();
    fixed_.range_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Range >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.range)
  return fixed_.range_;
}

// .google.fhir.stu3.proto.Ratio ratio = 33;
inline bool ElementDefinition_Fixed::has_ratio() const {
  return fixed_case() == kRatio;
}
inline void ElementDefinition_Fixed::set_has_ratio() {
  _oneof_case_[0] = kRatio;
}
inline const ::google::fhir::stu3::proto::Ratio& ElementDefinition_Fixed::_internal_ratio() const {
  return *fixed_.ratio_;
}
inline ::google::fhir::stu3::proto::Ratio* ElementDefinition_Fixed::release_ratio() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.ratio)
  if (has_ratio()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::Ratio* temp = fixed_.ratio_;
    fixed_.ratio_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Ratio& ElementDefinition_Fixed::ratio() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.ratio)
  return has_ratio()
      ? *fixed_.ratio_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Ratio*>(&::google::fhir::stu3::proto::_Ratio_default_instance_);
}
inline ::google::fhir::stu3::proto::Ratio* ElementDefinition_Fixed::mutable_ratio() {
  if (!has_ratio()) {
    clear_fixed();
    set_has_ratio();
    fixed_.ratio_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Ratio >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.ratio)
  return fixed_.ratio_;
}

// .google.fhir.stu3.proto.Reference reference = 34;
inline bool ElementDefinition_Fixed::has_reference() const {
  return fixed_case() == kReference;
}
inline void ElementDefinition_Fixed::set_has_reference() {
  _oneof_case_[0] = kReference;
}
inline const ::google::fhir::stu3::proto::Reference& ElementDefinition_Fixed::_internal_reference() const {
  return *fixed_.reference_;
}
inline ::google::fhir::stu3::proto::Reference* ElementDefinition_Fixed::release_reference() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.reference)
  if (has_reference()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::Reference* temp = fixed_.reference_;
    fixed_.reference_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Reference& ElementDefinition_Fixed::reference() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.reference)
  return has_reference()
      ? *fixed_.reference_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Reference*>(&::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* ElementDefinition_Fixed::mutable_reference() {
  if (!has_reference()) {
    clear_fixed();
    set_has_reference();
    fixed_.reference_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Reference >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.reference)
  return fixed_.reference_;
}

// .google.fhir.stu3.proto.SampledData sampled_data = 35;
inline bool ElementDefinition_Fixed::has_sampled_data() const {
  return fixed_case() == kSampledData;
}
inline void ElementDefinition_Fixed::set_has_sampled_data() {
  _oneof_case_[0] = kSampledData;
}
inline const ::google::fhir::stu3::proto::SampledData& ElementDefinition_Fixed::_internal_sampled_data() const {
  return *fixed_.sampled_data_;
}
inline ::google::fhir::stu3::proto::SampledData* ElementDefinition_Fixed::release_sampled_data() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.sampled_data)
  if (has_sampled_data()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::SampledData* temp = fixed_.sampled_data_;
    fixed_.sampled_data_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::SampledData& ElementDefinition_Fixed::sampled_data() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.sampled_data)
  return has_sampled_data()
      ? *fixed_.sampled_data_
      : *reinterpret_cast< ::google::fhir::stu3::proto::SampledData*>(&::google::fhir::stu3::proto::_SampledData_default_instance_);
}
inline ::google::fhir::stu3::proto::SampledData* ElementDefinition_Fixed::mutable_sampled_data() {
  if (!has_sampled_data()) {
    clear_fixed();
    set_has_sampled_data();
    fixed_.sampled_data_ = CreateMaybeMessage< ::google::fhir::stu3::proto::SampledData >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.sampled_data)
  return fixed_.sampled_data_;
}

// .google.fhir.stu3.proto.Signature signature = 36;
inline bool ElementDefinition_Fixed::has_signature() const {
  return fixed_case() == kSignature;
}
inline void ElementDefinition_Fixed::set_has_signature() {
  _oneof_case_[0] = kSignature;
}
inline const ::google::fhir::stu3::proto::Signature& ElementDefinition_Fixed::_internal_signature() const {
  return *fixed_.signature_;
}
inline ::google::fhir::stu3::proto::Signature* ElementDefinition_Fixed::release_signature() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.signature)
  if (has_signature()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::Signature* temp = fixed_.signature_;
    fixed_.signature_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Signature& ElementDefinition_Fixed::signature() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.signature)
  return has_signature()
      ? *fixed_.signature_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Signature*>(&::google::fhir::stu3::proto::_Signature_default_instance_);
}
inline ::google::fhir::stu3::proto::Signature* ElementDefinition_Fixed::mutable_signature() {
  if (!has_signature()) {
    clear_fixed();
    set_has_signature();
    fixed_.signature_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Signature >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.signature)
  return fixed_.signature_;
}

// .google.fhir.stu3.proto.Timing timing = 37;
inline bool ElementDefinition_Fixed::has_timing() const {
  return fixed_case() == kTiming;
}
inline void ElementDefinition_Fixed::set_has_timing() {
  _oneof_case_[0] = kTiming;
}
inline const ::google::fhir::stu3::proto::Timing& ElementDefinition_Fixed::_internal_timing() const {
  return *fixed_.timing_;
}
inline ::google::fhir::stu3::proto::Timing* ElementDefinition_Fixed::release_timing() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.timing)
  if (has_timing()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::Timing* temp = fixed_.timing_;
    fixed_.timing_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Timing& ElementDefinition_Fixed::timing() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.timing)
  return has_timing()
      ? *fixed_.timing_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Timing*>(&::google::fhir::stu3::proto::_Timing_default_instance_);
}
inline ::google::fhir::stu3::proto::Timing* ElementDefinition_Fixed::mutable_timing() {
  if (!has_timing()) {
    clear_fixed();
    set_has_timing();
    fixed_.timing_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Timing >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.timing)
  return fixed_.timing_;
}

// .google.fhir.stu3.proto.Meta meta = 38;
inline bool ElementDefinition_Fixed::has_meta() const {
  return fixed_case() == kMeta;
}
inline void ElementDefinition_Fixed::set_has_meta() {
  _oneof_case_[0] = kMeta;
}
inline const ::google::fhir::stu3::proto::Meta& ElementDefinition_Fixed::_internal_meta() const {
  return *fixed_.meta_;
}
inline ::google::fhir::stu3::proto::Meta* ElementDefinition_Fixed::release_meta() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Fixed.meta)
  if (has_meta()) {
    clear_has_fixed();
      ::google::fhir::stu3::proto::Meta* temp = fixed_.meta_;
    fixed_.meta_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Meta& ElementDefinition_Fixed::meta() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Fixed.meta)
  return has_meta()
      ? *fixed_.meta_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Meta*>(&::google::fhir::stu3::proto::_Meta_default_instance_);
}
inline ::google::fhir::stu3::proto::Meta* ElementDefinition_Fixed::mutable_meta() {
  if (!has_meta()) {
    clear_fixed();
    set_has_meta();
    fixed_.meta_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Meta >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Fixed.meta)
  return fixed_.meta_;
}

inline bool ElementDefinition_Fixed::has_fixed() const {
  return fixed_case() != FIXED_NOT_SET;
}
inline void ElementDefinition_Fixed::clear_has_fixed() {
  _oneof_case_[0] = FIXED_NOT_SET;
}
inline ElementDefinition_Fixed::FixedCase ElementDefinition_Fixed::fixed_case() const {
  return ElementDefinition_Fixed::FixedCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ElementDefinition_Pattern

// .google.fhir.stu3.proto.Base64Binary base64_binary = 1;
inline bool ElementDefinition_Pattern::has_base64_binary() const {
  return pattern_case() == kBase64Binary;
}
inline void ElementDefinition_Pattern::set_has_base64_binary() {
  _oneof_case_[0] = kBase64Binary;
}
inline const ::google::fhir::stu3::proto::Base64Binary& ElementDefinition_Pattern::_internal_base64_binary() const {
  return *pattern_.base64_binary_;
}
inline ::google::fhir::stu3::proto::Base64Binary* ElementDefinition_Pattern::release_base64_binary() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.base64_binary)
  if (has_base64_binary()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::Base64Binary* temp = pattern_.base64_binary_;
    pattern_.base64_binary_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Base64Binary& ElementDefinition_Pattern::base64_binary() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.base64_binary)
  return has_base64_binary()
      ? *pattern_.base64_binary_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Base64Binary*>(&::google::fhir::stu3::proto::_Base64Binary_default_instance_);
}
inline ::google::fhir::stu3::proto::Base64Binary* ElementDefinition_Pattern::mutable_base64_binary() {
  if (!has_base64_binary()) {
    clear_pattern();
    set_has_base64_binary();
    pattern_.base64_binary_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Base64Binary >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.base64_binary)
  return pattern_.base64_binary_;
}

// .google.fhir.stu3.proto.Boolean boolean = 2;
inline bool ElementDefinition_Pattern::has_boolean() const {
  return pattern_case() == kBoolean;
}
inline void ElementDefinition_Pattern::set_has_boolean() {
  _oneof_case_[0] = kBoolean;
}
inline const ::google::fhir::stu3::proto::Boolean& ElementDefinition_Pattern::_internal_boolean() const {
  return *pattern_.boolean_;
}
inline ::google::fhir::stu3::proto::Boolean* ElementDefinition_Pattern::release_boolean() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.boolean)
  if (has_boolean()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::Boolean* temp = pattern_.boolean_;
    pattern_.boolean_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Boolean& ElementDefinition_Pattern::boolean() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.boolean)
  return has_boolean()
      ? *pattern_.boolean_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Boolean*>(&::google::fhir::stu3::proto::_Boolean_default_instance_);
}
inline ::google::fhir::stu3::proto::Boolean* ElementDefinition_Pattern::mutable_boolean() {
  if (!has_boolean()) {
    clear_pattern();
    set_has_boolean();
    pattern_.boolean_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Boolean >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.boolean)
  return pattern_.boolean_;
}

// .google.fhir.stu3.proto.Code code = 3;
inline bool ElementDefinition_Pattern::has_code() const {
  return pattern_case() == kCode;
}
inline void ElementDefinition_Pattern::set_has_code() {
  _oneof_case_[0] = kCode;
}
inline const ::google::fhir::stu3::proto::Code& ElementDefinition_Pattern::_internal_code() const {
  return *pattern_.code_;
}
inline ::google::fhir::stu3::proto::Code* ElementDefinition_Pattern::release_code() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.code)
  if (has_code()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::Code* temp = pattern_.code_;
    pattern_.code_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Code& ElementDefinition_Pattern::code() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.code)
  return has_code()
      ? *pattern_.code_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Code*>(&::google::fhir::stu3::proto::_Code_default_instance_);
}
inline ::google::fhir::stu3::proto::Code* ElementDefinition_Pattern::mutable_code() {
  if (!has_code()) {
    clear_pattern();
    set_has_code();
    pattern_.code_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Code >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.code)
  return pattern_.code_;
}

// .google.fhir.stu3.proto.Date date = 4;
inline bool ElementDefinition_Pattern::has_date() const {
  return pattern_case() == kDate;
}
inline void ElementDefinition_Pattern::set_has_date() {
  _oneof_case_[0] = kDate;
}
inline const ::google::fhir::stu3::proto::Date& ElementDefinition_Pattern::_internal_date() const {
  return *pattern_.date_;
}
inline ::google::fhir::stu3::proto::Date* ElementDefinition_Pattern::release_date() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.date)
  if (has_date()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::Date* temp = pattern_.date_;
    pattern_.date_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Date& ElementDefinition_Pattern::date() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.date)
  return has_date()
      ? *pattern_.date_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Date*>(&::google::fhir::stu3::proto::_Date_default_instance_);
}
inline ::google::fhir::stu3::proto::Date* ElementDefinition_Pattern::mutable_date() {
  if (!has_date()) {
    clear_pattern();
    set_has_date();
    pattern_.date_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Date >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.date)
  return pattern_.date_;
}

// .google.fhir.stu3.proto.DateTime date_time = 5;
inline bool ElementDefinition_Pattern::has_date_time() const {
  return pattern_case() == kDateTime;
}
inline void ElementDefinition_Pattern::set_has_date_time() {
  _oneof_case_[0] = kDateTime;
}
inline const ::google::fhir::stu3::proto::DateTime& ElementDefinition_Pattern::_internal_date_time() const {
  return *pattern_.date_time_;
}
inline ::google::fhir::stu3::proto::DateTime* ElementDefinition_Pattern::release_date_time() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.date_time)
  if (has_date_time()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::DateTime* temp = pattern_.date_time_;
    pattern_.date_time_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::DateTime& ElementDefinition_Pattern::date_time() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.date_time)
  return has_date_time()
      ? *pattern_.date_time_
      : *reinterpret_cast< ::google::fhir::stu3::proto::DateTime*>(&::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* ElementDefinition_Pattern::mutable_date_time() {
  if (!has_date_time()) {
    clear_pattern();
    set_has_date_time();
    pattern_.date_time_ = CreateMaybeMessage< ::google::fhir::stu3::proto::DateTime >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.date_time)
  return pattern_.date_time_;
}

// .google.fhir.stu3.proto.Decimal decimal = 6;
inline bool ElementDefinition_Pattern::has_decimal() const {
  return pattern_case() == kDecimal;
}
inline void ElementDefinition_Pattern::set_has_decimal() {
  _oneof_case_[0] = kDecimal;
}
inline const ::google::fhir::stu3::proto::Decimal& ElementDefinition_Pattern::_internal_decimal() const {
  return *pattern_.decimal_;
}
inline ::google::fhir::stu3::proto::Decimal* ElementDefinition_Pattern::release_decimal() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.decimal)
  if (has_decimal()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::Decimal* temp = pattern_.decimal_;
    pattern_.decimal_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Decimal& ElementDefinition_Pattern::decimal() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.decimal)
  return has_decimal()
      ? *pattern_.decimal_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Decimal*>(&::google::fhir::stu3::proto::_Decimal_default_instance_);
}
inline ::google::fhir::stu3::proto::Decimal* ElementDefinition_Pattern::mutable_decimal() {
  if (!has_decimal()) {
    clear_pattern();
    set_has_decimal();
    pattern_.decimal_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Decimal >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.decimal)
  return pattern_.decimal_;
}

// .google.fhir.stu3.proto.Id id = 7;
inline bool ElementDefinition_Pattern::has_id() const {
  return pattern_case() == kId;
}
inline void ElementDefinition_Pattern::set_has_id() {
  _oneof_case_[0] = kId;
}
inline const ::google::fhir::stu3::proto::Id& ElementDefinition_Pattern::_internal_id() const {
  return *pattern_.id_;
}
inline ::google::fhir::stu3::proto::Id* ElementDefinition_Pattern::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.id)
  if (has_id()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::Id* temp = pattern_.id_;
    pattern_.id_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Id& ElementDefinition_Pattern::id() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.id)
  return has_id()
      ? *pattern_.id_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Id*>(&::google::fhir::stu3::proto::_Id_default_instance_);
}
inline ::google::fhir::stu3::proto::Id* ElementDefinition_Pattern::mutable_id() {
  if (!has_id()) {
    clear_pattern();
    set_has_id();
    pattern_.id_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Id >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.id)
  return pattern_.id_;
}

// .google.fhir.stu3.proto.Instant instant = 8;
inline bool ElementDefinition_Pattern::has_instant() const {
  return pattern_case() == kInstant;
}
inline void ElementDefinition_Pattern::set_has_instant() {
  _oneof_case_[0] = kInstant;
}
inline const ::google::fhir::stu3::proto::Instant& ElementDefinition_Pattern::_internal_instant() const {
  return *pattern_.instant_;
}
inline ::google::fhir::stu3::proto::Instant* ElementDefinition_Pattern::release_instant() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.instant)
  if (has_instant()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::Instant* temp = pattern_.instant_;
    pattern_.instant_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Instant& ElementDefinition_Pattern::instant() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.instant)
  return has_instant()
      ? *pattern_.instant_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Instant*>(&::google::fhir::stu3::proto::_Instant_default_instance_);
}
inline ::google::fhir::stu3::proto::Instant* ElementDefinition_Pattern::mutable_instant() {
  if (!has_instant()) {
    clear_pattern();
    set_has_instant();
    pattern_.instant_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Instant >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.instant)
  return pattern_.instant_;
}

// .google.fhir.stu3.proto.Integer integer = 9;
inline bool ElementDefinition_Pattern::has_integer() const {
  return pattern_case() == kInteger;
}
inline void ElementDefinition_Pattern::set_has_integer() {
  _oneof_case_[0] = kInteger;
}
inline const ::google::fhir::stu3::proto::Integer& ElementDefinition_Pattern::_internal_integer() const {
  return *pattern_.integer_;
}
inline ::google::fhir::stu3::proto::Integer* ElementDefinition_Pattern::release_integer() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.integer)
  if (has_integer()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::Integer* temp = pattern_.integer_;
    pattern_.integer_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Integer& ElementDefinition_Pattern::integer() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.integer)
  return has_integer()
      ? *pattern_.integer_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Integer*>(&::google::fhir::stu3::proto::_Integer_default_instance_);
}
inline ::google::fhir::stu3::proto::Integer* ElementDefinition_Pattern::mutable_integer() {
  if (!has_integer()) {
    clear_pattern();
    set_has_integer();
    pattern_.integer_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Integer >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.integer)
  return pattern_.integer_;
}

// .google.fhir.stu3.proto.Markdown markdown = 10;
inline bool ElementDefinition_Pattern::has_markdown() const {
  return pattern_case() == kMarkdown;
}
inline void ElementDefinition_Pattern::set_has_markdown() {
  _oneof_case_[0] = kMarkdown;
}
inline const ::google::fhir::stu3::proto::Markdown& ElementDefinition_Pattern::_internal_markdown() const {
  return *pattern_.markdown_;
}
inline ::google::fhir::stu3::proto::Markdown* ElementDefinition_Pattern::release_markdown() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.markdown)
  if (has_markdown()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::Markdown* temp = pattern_.markdown_;
    pattern_.markdown_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Markdown& ElementDefinition_Pattern::markdown() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.markdown)
  return has_markdown()
      ? *pattern_.markdown_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Markdown*>(&::google::fhir::stu3::proto::_Markdown_default_instance_);
}
inline ::google::fhir::stu3::proto::Markdown* ElementDefinition_Pattern::mutable_markdown() {
  if (!has_markdown()) {
    clear_pattern();
    set_has_markdown();
    pattern_.markdown_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Markdown >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.markdown)
  return pattern_.markdown_;
}

// .google.fhir.stu3.proto.Oid oid = 11;
inline bool ElementDefinition_Pattern::has_oid() const {
  return pattern_case() == kOid;
}
inline void ElementDefinition_Pattern::set_has_oid() {
  _oneof_case_[0] = kOid;
}
inline const ::google::fhir::stu3::proto::Oid& ElementDefinition_Pattern::_internal_oid() const {
  return *pattern_.oid_;
}
inline ::google::fhir::stu3::proto::Oid* ElementDefinition_Pattern::release_oid() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.oid)
  if (has_oid()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::Oid* temp = pattern_.oid_;
    pattern_.oid_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Oid& ElementDefinition_Pattern::oid() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.oid)
  return has_oid()
      ? *pattern_.oid_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Oid*>(&::google::fhir::stu3::proto::_Oid_default_instance_);
}
inline ::google::fhir::stu3::proto::Oid* ElementDefinition_Pattern::mutable_oid() {
  if (!has_oid()) {
    clear_pattern();
    set_has_oid();
    pattern_.oid_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Oid >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.oid)
  return pattern_.oid_;
}

// .google.fhir.stu3.proto.PositiveInt positive_int = 12;
inline bool ElementDefinition_Pattern::has_positive_int() const {
  return pattern_case() == kPositiveInt;
}
inline void ElementDefinition_Pattern::set_has_positive_int() {
  _oneof_case_[0] = kPositiveInt;
}
inline const ::google::fhir::stu3::proto::PositiveInt& ElementDefinition_Pattern::_internal_positive_int() const {
  return *pattern_.positive_int_;
}
inline ::google::fhir::stu3::proto::PositiveInt* ElementDefinition_Pattern::release_positive_int() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.positive_int)
  if (has_positive_int()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::PositiveInt* temp = pattern_.positive_int_;
    pattern_.positive_int_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::PositiveInt& ElementDefinition_Pattern::positive_int() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.positive_int)
  return has_positive_int()
      ? *pattern_.positive_int_
      : *reinterpret_cast< ::google::fhir::stu3::proto::PositiveInt*>(&::google::fhir::stu3::proto::_PositiveInt_default_instance_);
}
inline ::google::fhir::stu3::proto::PositiveInt* ElementDefinition_Pattern::mutable_positive_int() {
  if (!has_positive_int()) {
    clear_pattern();
    set_has_positive_int();
    pattern_.positive_int_ = CreateMaybeMessage< ::google::fhir::stu3::proto::PositiveInt >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.positive_int)
  return pattern_.positive_int_;
}

// .google.fhir.stu3.proto.String string_value = 13[json_name = "string"];
inline bool ElementDefinition_Pattern::has_string_value() const {
  return pattern_case() == kStringValue;
}
inline void ElementDefinition_Pattern::set_has_string_value() {
  _oneof_case_[0] = kStringValue;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Pattern::_internal_string_value() const {
  return *pattern_.string_value_;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Pattern::release_string_value() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.string_value)
  if (has_string_value()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::String* temp = pattern_.string_value_;
    pattern_.string_value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Pattern::string_value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.string_value)
  return has_string_value()
      ? *pattern_.string_value_
      : *reinterpret_cast< ::google::fhir::stu3::proto::String*>(&::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Pattern::mutable_string_value() {
  if (!has_string_value()) {
    clear_pattern();
    set_has_string_value();
    pattern_.string_value_ = CreateMaybeMessage< ::google::fhir::stu3::proto::String >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.string_value)
  return pattern_.string_value_;
}

// .google.fhir.stu3.proto.Time time = 14;
inline bool ElementDefinition_Pattern::has_time() const {
  return pattern_case() == kTime;
}
inline void ElementDefinition_Pattern::set_has_time() {
  _oneof_case_[0] = kTime;
}
inline const ::google::fhir::stu3::proto::Time& ElementDefinition_Pattern::_internal_time() const {
  return *pattern_.time_;
}
inline ::google::fhir::stu3::proto::Time* ElementDefinition_Pattern::release_time() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.time)
  if (has_time()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::Time* temp = pattern_.time_;
    pattern_.time_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Time& ElementDefinition_Pattern::time() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.time)
  return has_time()
      ? *pattern_.time_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Time*>(&::google::fhir::stu3::proto::_Time_default_instance_);
}
inline ::google::fhir::stu3::proto::Time* ElementDefinition_Pattern::mutable_time() {
  if (!has_time()) {
    clear_pattern();
    set_has_time();
    pattern_.time_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Time >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.time)
  return pattern_.time_;
}

// .google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
inline bool ElementDefinition_Pattern::has_unsigned_int() const {
  return pattern_case() == kUnsignedInt;
}
inline void ElementDefinition_Pattern::set_has_unsigned_int() {
  _oneof_case_[0] = kUnsignedInt;
}
inline const ::google::fhir::stu3::proto::UnsignedInt& ElementDefinition_Pattern::_internal_unsigned_int() const {
  return *pattern_.unsigned_int_;
}
inline ::google::fhir::stu3::proto::UnsignedInt* ElementDefinition_Pattern::release_unsigned_int() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.unsigned_int)
  if (has_unsigned_int()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::UnsignedInt* temp = pattern_.unsigned_int_;
    pattern_.unsigned_int_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::UnsignedInt& ElementDefinition_Pattern::unsigned_int() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.unsigned_int)
  return has_unsigned_int()
      ? *pattern_.unsigned_int_
      : *reinterpret_cast< ::google::fhir::stu3::proto::UnsignedInt*>(&::google::fhir::stu3::proto::_UnsignedInt_default_instance_);
}
inline ::google::fhir::stu3::proto::UnsignedInt* ElementDefinition_Pattern::mutable_unsigned_int() {
  if (!has_unsigned_int()) {
    clear_pattern();
    set_has_unsigned_int();
    pattern_.unsigned_int_ = CreateMaybeMessage< ::google::fhir::stu3::proto::UnsignedInt >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.unsigned_int)
  return pattern_.unsigned_int_;
}

// .google.fhir.stu3.proto.Uri uri = 16;
inline bool ElementDefinition_Pattern::has_uri() const {
  return pattern_case() == kUri;
}
inline void ElementDefinition_Pattern::set_has_uri() {
  _oneof_case_[0] = kUri;
}
inline const ::google::fhir::stu3::proto::Uri& ElementDefinition_Pattern::_internal_uri() const {
  return *pattern_.uri_;
}
inline ::google::fhir::stu3::proto::Uri* ElementDefinition_Pattern::release_uri() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.uri)
  if (has_uri()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::Uri* temp = pattern_.uri_;
    pattern_.uri_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Uri& ElementDefinition_Pattern::uri() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.uri)
  return has_uri()
      ? *pattern_.uri_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Uri*>(&::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* ElementDefinition_Pattern::mutable_uri() {
  if (!has_uri()) {
    clear_pattern();
    set_has_uri();
    pattern_.uri_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Uri >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.uri)
  return pattern_.uri_;
}

// .google.fhir.stu3.proto.Address address = 17;
inline bool ElementDefinition_Pattern::has_address() const {
  return pattern_case() == kAddress;
}
inline void ElementDefinition_Pattern::set_has_address() {
  _oneof_case_[0] = kAddress;
}
inline const ::google::fhir::stu3::proto::Address& ElementDefinition_Pattern::_internal_address() const {
  return *pattern_.address_;
}
inline ::google::fhir::stu3::proto::Address* ElementDefinition_Pattern::release_address() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.address)
  if (has_address()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::Address* temp = pattern_.address_;
    pattern_.address_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Address& ElementDefinition_Pattern::address() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.address)
  return has_address()
      ? *pattern_.address_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Address*>(&::google::fhir::stu3::proto::_Address_default_instance_);
}
inline ::google::fhir::stu3::proto::Address* ElementDefinition_Pattern::mutable_address() {
  if (!has_address()) {
    clear_pattern();
    set_has_address();
    pattern_.address_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Address >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.address)
  return pattern_.address_;
}

// .google.fhir.stu3.proto.Age age = 18;
inline bool ElementDefinition_Pattern::has_age() const {
  return pattern_case() == kAge;
}
inline void ElementDefinition_Pattern::set_has_age() {
  _oneof_case_[0] = kAge;
}
inline const ::google::fhir::stu3::proto::Age& ElementDefinition_Pattern::_internal_age() const {
  return *pattern_.age_;
}
inline ::google::fhir::stu3::proto::Age* ElementDefinition_Pattern::release_age() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.age)
  if (has_age()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::Age* temp = pattern_.age_;
    pattern_.age_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Age& ElementDefinition_Pattern::age() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.age)
  return has_age()
      ? *pattern_.age_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Age*>(&::google::fhir::stu3::proto::_Age_default_instance_);
}
inline ::google::fhir::stu3::proto::Age* ElementDefinition_Pattern::mutable_age() {
  if (!has_age()) {
    clear_pattern();
    set_has_age();
    pattern_.age_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Age >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.age)
  return pattern_.age_;
}

// .google.fhir.stu3.proto.Annotation annotation = 19;
inline bool ElementDefinition_Pattern::has_annotation() const {
  return pattern_case() == kAnnotation;
}
inline void ElementDefinition_Pattern::set_has_annotation() {
  _oneof_case_[0] = kAnnotation;
}
inline const ::google::fhir::stu3::proto::Annotation& ElementDefinition_Pattern::_internal_annotation() const {
  return *pattern_.annotation_;
}
inline ::google::fhir::stu3::proto::Annotation* ElementDefinition_Pattern::release_annotation() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.annotation)
  if (has_annotation()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::Annotation* temp = pattern_.annotation_;
    pattern_.annotation_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Annotation& ElementDefinition_Pattern::annotation() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.annotation)
  return has_annotation()
      ? *pattern_.annotation_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Annotation*>(&::google::fhir::stu3::proto::_Annotation_default_instance_);
}
inline ::google::fhir::stu3::proto::Annotation* ElementDefinition_Pattern::mutable_annotation() {
  if (!has_annotation()) {
    clear_pattern();
    set_has_annotation();
    pattern_.annotation_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Annotation >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.annotation)
  return pattern_.annotation_;
}

// .google.fhir.stu3.proto.Attachment attachment = 20;
inline bool ElementDefinition_Pattern::has_attachment() const {
  return pattern_case() == kAttachment;
}
inline void ElementDefinition_Pattern::set_has_attachment() {
  _oneof_case_[0] = kAttachment;
}
inline const ::google::fhir::stu3::proto::Attachment& ElementDefinition_Pattern::_internal_attachment() const {
  return *pattern_.attachment_;
}
inline ::google::fhir::stu3::proto::Attachment* ElementDefinition_Pattern::release_attachment() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.attachment)
  if (has_attachment()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::Attachment* temp = pattern_.attachment_;
    pattern_.attachment_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Attachment& ElementDefinition_Pattern::attachment() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.attachment)
  return has_attachment()
      ? *pattern_.attachment_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Attachment*>(&::google::fhir::stu3::proto::_Attachment_default_instance_);
}
inline ::google::fhir::stu3::proto::Attachment* ElementDefinition_Pattern::mutable_attachment() {
  if (!has_attachment()) {
    clear_pattern();
    set_has_attachment();
    pattern_.attachment_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Attachment >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.attachment)
  return pattern_.attachment_;
}

// .google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
inline bool ElementDefinition_Pattern::has_codeable_concept() const {
  return pattern_case() == kCodeableConcept;
}
inline void ElementDefinition_Pattern::set_has_codeable_concept() {
  _oneof_case_[0] = kCodeableConcept;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& ElementDefinition_Pattern::_internal_codeable_concept() const {
  return *pattern_.codeable_concept_;
}
inline ::google::fhir::stu3::proto::CodeableConcept* ElementDefinition_Pattern::release_codeable_concept() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.codeable_concept)
  if (has_codeable_concept()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::CodeableConcept* temp = pattern_.codeable_concept_;
    pattern_.codeable_concept_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::CodeableConcept& ElementDefinition_Pattern::codeable_concept() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.codeable_concept)
  return has_codeable_concept()
      ? *pattern_.codeable_concept_
      : *reinterpret_cast< ::google::fhir::stu3::proto::CodeableConcept*>(&::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* ElementDefinition_Pattern::mutable_codeable_concept() {
  if (!has_codeable_concept()) {
    clear_pattern();
    set_has_codeable_concept();
    pattern_.codeable_concept_ = CreateMaybeMessage< ::google::fhir::stu3::proto::CodeableConcept >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.codeable_concept)
  return pattern_.codeable_concept_;
}

// .google.fhir.stu3.proto.Coding coding = 22;
inline bool ElementDefinition_Pattern::has_coding() const {
  return pattern_case() == kCoding;
}
inline void ElementDefinition_Pattern::set_has_coding() {
  _oneof_case_[0] = kCoding;
}
inline const ::google::fhir::stu3::proto::Coding& ElementDefinition_Pattern::_internal_coding() const {
  return *pattern_.coding_;
}
inline ::google::fhir::stu3::proto::Coding* ElementDefinition_Pattern::release_coding() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.coding)
  if (has_coding()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::Coding* temp = pattern_.coding_;
    pattern_.coding_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Coding& ElementDefinition_Pattern::coding() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.coding)
  return has_coding()
      ? *pattern_.coding_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Coding*>(&::google::fhir::stu3::proto::_Coding_default_instance_);
}
inline ::google::fhir::stu3::proto::Coding* ElementDefinition_Pattern::mutable_coding() {
  if (!has_coding()) {
    clear_pattern();
    set_has_coding();
    pattern_.coding_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Coding >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.coding)
  return pattern_.coding_;
}

// .google.fhir.stu3.proto.ContactPoint contact_point = 23;
inline bool ElementDefinition_Pattern::has_contact_point() const {
  return pattern_case() == kContactPoint;
}
inline void ElementDefinition_Pattern::set_has_contact_point() {
  _oneof_case_[0] = kContactPoint;
}
inline const ::google::fhir::stu3::proto::ContactPoint& ElementDefinition_Pattern::_internal_contact_point() const {
  return *pattern_.contact_point_;
}
inline ::google::fhir::stu3::proto::ContactPoint* ElementDefinition_Pattern::release_contact_point() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.contact_point)
  if (has_contact_point()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::ContactPoint* temp = pattern_.contact_point_;
    pattern_.contact_point_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::ContactPoint& ElementDefinition_Pattern::contact_point() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.contact_point)
  return has_contact_point()
      ? *pattern_.contact_point_
      : *reinterpret_cast< ::google::fhir::stu3::proto::ContactPoint*>(&::google::fhir::stu3::proto::_ContactPoint_default_instance_);
}
inline ::google::fhir::stu3::proto::ContactPoint* ElementDefinition_Pattern::mutable_contact_point() {
  if (!has_contact_point()) {
    clear_pattern();
    set_has_contact_point();
    pattern_.contact_point_ = CreateMaybeMessage< ::google::fhir::stu3::proto::ContactPoint >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.contact_point)
  return pattern_.contact_point_;
}

// .google.fhir.stu3.proto.Count count = 24;
inline bool ElementDefinition_Pattern::has_count() const {
  return pattern_case() == kCount;
}
inline void ElementDefinition_Pattern::set_has_count() {
  _oneof_case_[0] = kCount;
}
inline const ::google::fhir::stu3::proto::Count& ElementDefinition_Pattern::_internal_count() const {
  return *pattern_.count_;
}
inline ::google::fhir::stu3::proto::Count* ElementDefinition_Pattern::release_count() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.count)
  if (has_count()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::Count* temp = pattern_.count_;
    pattern_.count_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Count& ElementDefinition_Pattern::count() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.count)
  return has_count()
      ? *pattern_.count_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Count*>(&::google::fhir::stu3::proto::_Count_default_instance_);
}
inline ::google::fhir::stu3::proto::Count* ElementDefinition_Pattern::mutable_count() {
  if (!has_count()) {
    clear_pattern();
    set_has_count();
    pattern_.count_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Count >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.count)
  return pattern_.count_;
}

// .google.fhir.stu3.proto.Distance distance = 25;
inline bool ElementDefinition_Pattern::has_distance() const {
  return pattern_case() == kDistance;
}
inline void ElementDefinition_Pattern::set_has_distance() {
  _oneof_case_[0] = kDistance;
}
inline const ::google::fhir::stu3::proto::Distance& ElementDefinition_Pattern::_internal_distance() const {
  return *pattern_.distance_;
}
inline ::google::fhir::stu3::proto::Distance* ElementDefinition_Pattern::release_distance() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.distance)
  if (has_distance()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::Distance* temp = pattern_.distance_;
    pattern_.distance_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Distance& ElementDefinition_Pattern::distance() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.distance)
  return has_distance()
      ? *pattern_.distance_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Distance*>(&::google::fhir::stu3::proto::_Distance_default_instance_);
}
inline ::google::fhir::stu3::proto::Distance* ElementDefinition_Pattern::mutable_distance() {
  if (!has_distance()) {
    clear_pattern();
    set_has_distance();
    pattern_.distance_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Distance >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.distance)
  return pattern_.distance_;
}

// .google.fhir.stu3.proto.Duration duration = 26;
inline bool ElementDefinition_Pattern::has_duration() const {
  return pattern_case() == kDuration;
}
inline void ElementDefinition_Pattern::set_has_duration() {
  _oneof_case_[0] = kDuration;
}
inline const ::google::fhir::stu3::proto::Duration& ElementDefinition_Pattern::_internal_duration() const {
  return *pattern_.duration_;
}
inline ::google::fhir::stu3::proto::Duration* ElementDefinition_Pattern::release_duration() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.duration)
  if (has_duration()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::Duration* temp = pattern_.duration_;
    pattern_.duration_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Duration& ElementDefinition_Pattern::duration() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.duration)
  return has_duration()
      ? *pattern_.duration_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Duration*>(&::google::fhir::stu3::proto::_Duration_default_instance_);
}
inline ::google::fhir::stu3::proto::Duration* ElementDefinition_Pattern::mutable_duration() {
  if (!has_duration()) {
    clear_pattern();
    set_has_duration();
    pattern_.duration_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Duration >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.duration)
  return pattern_.duration_;
}

// .google.fhir.stu3.proto.HumanName human_name = 27;
inline bool ElementDefinition_Pattern::has_human_name() const {
  return pattern_case() == kHumanName;
}
inline void ElementDefinition_Pattern::set_has_human_name() {
  _oneof_case_[0] = kHumanName;
}
inline const ::google::fhir::stu3::proto::HumanName& ElementDefinition_Pattern::_internal_human_name() const {
  return *pattern_.human_name_;
}
inline ::google::fhir::stu3::proto::HumanName* ElementDefinition_Pattern::release_human_name() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.human_name)
  if (has_human_name()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::HumanName* temp = pattern_.human_name_;
    pattern_.human_name_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::HumanName& ElementDefinition_Pattern::human_name() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.human_name)
  return has_human_name()
      ? *pattern_.human_name_
      : *reinterpret_cast< ::google::fhir::stu3::proto::HumanName*>(&::google::fhir::stu3::proto::_HumanName_default_instance_);
}
inline ::google::fhir::stu3::proto::HumanName* ElementDefinition_Pattern::mutable_human_name() {
  if (!has_human_name()) {
    clear_pattern();
    set_has_human_name();
    pattern_.human_name_ = CreateMaybeMessage< ::google::fhir::stu3::proto::HumanName >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.human_name)
  return pattern_.human_name_;
}

// .google.fhir.stu3.proto.Identifier identifier = 28;
inline bool ElementDefinition_Pattern::has_identifier() const {
  return pattern_case() == kIdentifier;
}
inline void ElementDefinition_Pattern::set_has_identifier() {
  _oneof_case_[0] = kIdentifier;
}
inline const ::google::fhir::stu3::proto::Identifier& ElementDefinition_Pattern::_internal_identifier() const {
  return *pattern_.identifier_;
}
inline ::google::fhir::stu3::proto::Identifier* ElementDefinition_Pattern::release_identifier() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.identifier)
  if (has_identifier()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::Identifier* temp = pattern_.identifier_;
    pattern_.identifier_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Identifier& ElementDefinition_Pattern::identifier() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.identifier)
  return has_identifier()
      ? *pattern_.identifier_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Identifier*>(&::google::fhir::stu3::proto::_Identifier_default_instance_);
}
inline ::google::fhir::stu3::proto::Identifier* ElementDefinition_Pattern::mutable_identifier() {
  if (!has_identifier()) {
    clear_pattern();
    set_has_identifier();
    pattern_.identifier_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Identifier >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.identifier)
  return pattern_.identifier_;
}

// .google.fhir.stu3.proto.Money money = 29;
inline bool ElementDefinition_Pattern::has_money() const {
  return pattern_case() == kMoney;
}
inline void ElementDefinition_Pattern::set_has_money() {
  _oneof_case_[0] = kMoney;
}
inline const ::google::fhir::stu3::proto::Money& ElementDefinition_Pattern::_internal_money() const {
  return *pattern_.money_;
}
inline ::google::fhir::stu3::proto::Money* ElementDefinition_Pattern::release_money() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.money)
  if (has_money()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::Money* temp = pattern_.money_;
    pattern_.money_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Money& ElementDefinition_Pattern::money() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.money)
  return has_money()
      ? *pattern_.money_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Money*>(&::google::fhir::stu3::proto::_Money_default_instance_);
}
inline ::google::fhir::stu3::proto::Money* ElementDefinition_Pattern::mutable_money() {
  if (!has_money()) {
    clear_pattern();
    set_has_money();
    pattern_.money_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Money >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.money)
  return pattern_.money_;
}

// .google.fhir.stu3.proto.Period period = 30;
inline bool ElementDefinition_Pattern::has_period() const {
  return pattern_case() == kPeriod;
}
inline void ElementDefinition_Pattern::set_has_period() {
  _oneof_case_[0] = kPeriod;
}
inline const ::google::fhir::stu3::proto::Period& ElementDefinition_Pattern::_internal_period() const {
  return *pattern_.period_;
}
inline ::google::fhir::stu3::proto::Period* ElementDefinition_Pattern::release_period() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.period)
  if (has_period()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::Period* temp = pattern_.period_;
    pattern_.period_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Period& ElementDefinition_Pattern::period() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.period)
  return has_period()
      ? *pattern_.period_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Period*>(&::google::fhir::stu3::proto::_Period_default_instance_);
}
inline ::google::fhir::stu3::proto::Period* ElementDefinition_Pattern::mutable_period() {
  if (!has_period()) {
    clear_pattern();
    set_has_period();
    pattern_.period_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Period >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.period)
  return pattern_.period_;
}

// .google.fhir.stu3.proto.Quantity quantity = 31;
inline bool ElementDefinition_Pattern::has_quantity() const {
  return pattern_case() == kQuantity;
}
inline void ElementDefinition_Pattern::set_has_quantity() {
  _oneof_case_[0] = kQuantity;
}
inline const ::google::fhir::stu3::proto::Quantity& ElementDefinition_Pattern::_internal_quantity() const {
  return *pattern_.quantity_;
}
inline ::google::fhir::stu3::proto::Quantity* ElementDefinition_Pattern::release_quantity() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.quantity)
  if (has_quantity()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::Quantity* temp = pattern_.quantity_;
    pattern_.quantity_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Quantity& ElementDefinition_Pattern::quantity() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.quantity)
  return has_quantity()
      ? *pattern_.quantity_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Quantity*>(&::google::fhir::stu3::proto::_Quantity_default_instance_);
}
inline ::google::fhir::stu3::proto::Quantity* ElementDefinition_Pattern::mutable_quantity() {
  if (!has_quantity()) {
    clear_pattern();
    set_has_quantity();
    pattern_.quantity_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Quantity >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.quantity)
  return pattern_.quantity_;
}

// .google.fhir.stu3.proto.Range range = 32;
inline bool ElementDefinition_Pattern::has_range() const {
  return pattern_case() == kRange;
}
inline void ElementDefinition_Pattern::set_has_range() {
  _oneof_case_[0] = kRange;
}
inline const ::google::fhir::stu3::proto::Range& ElementDefinition_Pattern::_internal_range() const {
  return *pattern_.range_;
}
inline ::google::fhir::stu3::proto::Range* ElementDefinition_Pattern::release_range() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.range)
  if (has_range()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::Range* temp = pattern_.range_;
    pattern_.range_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Range& ElementDefinition_Pattern::range() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.range)
  return has_range()
      ? *pattern_.range_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Range*>(&::google::fhir::stu3::proto::_Range_default_instance_);
}
inline ::google::fhir::stu3::proto::Range* ElementDefinition_Pattern::mutable_range() {
  if (!has_range()) {
    clear_pattern();
    set_has_range();
    pattern_.range_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Range >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.range)
  return pattern_.range_;
}

// .google.fhir.stu3.proto.Ratio ratio = 33;
inline bool ElementDefinition_Pattern::has_ratio() const {
  return pattern_case() == kRatio;
}
inline void ElementDefinition_Pattern::set_has_ratio() {
  _oneof_case_[0] = kRatio;
}
inline const ::google::fhir::stu3::proto::Ratio& ElementDefinition_Pattern::_internal_ratio() const {
  return *pattern_.ratio_;
}
inline ::google::fhir::stu3::proto::Ratio* ElementDefinition_Pattern::release_ratio() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.ratio)
  if (has_ratio()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::Ratio* temp = pattern_.ratio_;
    pattern_.ratio_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Ratio& ElementDefinition_Pattern::ratio() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.ratio)
  return has_ratio()
      ? *pattern_.ratio_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Ratio*>(&::google::fhir::stu3::proto::_Ratio_default_instance_);
}
inline ::google::fhir::stu3::proto::Ratio* ElementDefinition_Pattern::mutable_ratio() {
  if (!has_ratio()) {
    clear_pattern();
    set_has_ratio();
    pattern_.ratio_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Ratio >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.ratio)
  return pattern_.ratio_;
}

// .google.fhir.stu3.proto.Reference reference = 34;
inline bool ElementDefinition_Pattern::has_reference() const {
  return pattern_case() == kReference;
}
inline void ElementDefinition_Pattern::set_has_reference() {
  _oneof_case_[0] = kReference;
}
inline const ::google::fhir::stu3::proto::Reference& ElementDefinition_Pattern::_internal_reference() const {
  return *pattern_.reference_;
}
inline ::google::fhir::stu3::proto::Reference* ElementDefinition_Pattern::release_reference() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.reference)
  if (has_reference()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::Reference* temp = pattern_.reference_;
    pattern_.reference_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Reference& ElementDefinition_Pattern::reference() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.reference)
  return has_reference()
      ? *pattern_.reference_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Reference*>(&::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* ElementDefinition_Pattern::mutable_reference() {
  if (!has_reference()) {
    clear_pattern();
    set_has_reference();
    pattern_.reference_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Reference >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.reference)
  return pattern_.reference_;
}

// .google.fhir.stu3.proto.SampledData sampled_data = 35;
inline bool ElementDefinition_Pattern::has_sampled_data() const {
  return pattern_case() == kSampledData;
}
inline void ElementDefinition_Pattern::set_has_sampled_data() {
  _oneof_case_[0] = kSampledData;
}
inline const ::google::fhir::stu3::proto::SampledData& ElementDefinition_Pattern::_internal_sampled_data() const {
  return *pattern_.sampled_data_;
}
inline ::google::fhir::stu3::proto::SampledData* ElementDefinition_Pattern::release_sampled_data() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.sampled_data)
  if (has_sampled_data()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::SampledData* temp = pattern_.sampled_data_;
    pattern_.sampled_data_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::SampledData& ElementDefinition_Pattern::sampled_data() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.sampled_data)
  return has_sampled_data()
      ? *pattern_.sampled_data_
      : *reinterpret_cast< ::google::fhir::stu3::proto::SampledData*>(&::google::fhir::stu3::proto::_SampledData_default_instance_);
}
inline ::google::fhir::stu3::proto::SampledData* ElementDefinition_Pattern::mutable_sampled_data() {
  if (!has_sampled_data()) {
    clear_pattern();
    set_has_sampled_data();
    pattern_.sampled_data_ = CreateMaybeMessage< ::google::fhir::stu3::proto::SampledData >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.sampled_data)
  return pattern_.sampled_data_;
}

// .google.fhir.stu3.proto.Signature signature = 36;
inline bool ElementDefinition_Pattern::has_signature() const {
  return pattern_case() == kSignature;
}
inline void ElementDefinition_Pattern::set_has_signature() {
  _oneof_case_[0] = kSignature;
}
inline const ::google::fhir::stu3::proto::Signature& ElementDefinition_Pattern::_internal_signature() const {
  return *pattern_.signature_;
}
inline ::google::fhir::stu3::proto::Signature* ElementDefinition_Pattern::release_signature() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.signature)
  if (has_signature()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::Signature* temp = pattern_.signature_;
    pattern_.signature_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Signature& ElementDefinition_Pattern::signature() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.signature)
  return has_signature()
      ? *pattern_.signature_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Signature*>(&::google::fhir::stu3::proto::_Signature_default_instance_);
}
inline ::google::fhir::stu3::proto::Signature* ElementDefinition_Pattern::mutable_signature() {
  if (!has_signature()) {
    clear_pattern();
    set_has_signature();
    pattern_.signature_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Signature >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.signature)
  return pattern_.signature_;
}

// .google.fhir.stu3.proto.Timing timing = 37;
inline bool ElementDefinition_Pattern::has_timing() const {
  return pattern_case() == kTiming;
}
inline void ElementDefinition_Pattern::set_has_timing() {
  _oneof_case_[0] = kTiming;
}
inline const ::google::fhir::stu3::proto::Timing& ElementDefinition_Pattern::_internal_timing() const {
  return *pattern_.timing_;
}
inline ::google::fhir::stu3::proto::Timing* ElementDefinition_Pattern::release_timing() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.timing)
  if (has_timing()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::Timing* temp = pattern_.timing_;
    pattern_.timing_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Timing& ElementDefinition_Pattern::timing() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.timing)
  return has_timing()
      ? *pattern_.timing_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Timing*>(&::google::fhir::stu3::proto::_Timing_default_instance_);
}
inline ::google::fhir::stu3::proto::Timing* ElementDefinition_Pattern::mutable_timing() {
  if (!has_timing()) {
    clear_pattern();
    set_has_timing();
    pattern_.timing_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Timing >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.timing)
  return pattern_.timing_;
}

// .google.fhir.stu3.proto.Meta meta = 38;
inline bool ElementDefinition_Pattern::has_meta() const {
  return pattern_case() == kMeta;
}
inline void ElementDefinition_Pattern::set_has_meta() {
  _oneof_case_[0] = kMeta;
}
inline const ::google::fhir::stu3::proto::Meta& ElementDefinition_Pattern::_internal_meta() const {
  return *pattern_.meta_;
}
inline ::google::fhir::stu3::proto::Meta* ElementDefinition_Pattern::release_meta() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Pattern.meta)
  if (has_meta()) {
    clear_has_pattern();
      ::google::fhir::stu3::proto::Meta* temp = pattern_.meta_;
    pattern_.meta_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Meta& ElementDefinition_Pattern::meta() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Pattern.meta)
  return has_meta()
      ? *pattern_.meta_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Meta*>(&::google::fhir::stu3::proto::_Meta_default_instance_);
}
inline ::google::fhir::stu3::proto::Meta* ElementDefinition_Pattern::mutable_meta() {
  if (!has_meta()) {
    clear_pattern();
    set_has_meta();
    pattern_.meta_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Meta >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Pattern.meta)
  return pattern_.meta_;
}

inline bool ElementDefinition_Pattern::has_pattern() const {
  return pattern_case() != PATTERN_NOT_SET;
}
inline void ElementDefinition_Pattern::clear_has_pattern() {
  _oneof_case_[0] = PATTERN_NOT_SET;
}
inline ElementDefinition_Pattern::PatternCase ElementDefinition_Pattern::pattern_case() const {
  return ElementDefinition_Pattern::PatternCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ElementDefinition_Example_Value

// .google.fhir.stu3.proto.Base64Binary base64_binary = 1;
inline bool ElementDefinition_Example_Value::has_base64_binary() const {
  return value_case() == kBase64Binary;
}
inline void ElementDefinition_Example_Value::set_has_base64_binary() {
  _oneof_case_[0] = kBase64Binary;
}
inline const ::google::fhir::stu3::proto::Base64Binary& ElementDefinition_Example_Value::_internal_base64_binary() const {
  return *value_.base64_binary_;
}
inline ::google::fhir::stu3::proto::Base64Binary* ElementDefinition_Example_Value::release_base64_binary() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.base64_binary)
  if (has_base64_binary()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Base64Binary* temp = value_.base64_binary_;
    value_.base64_binary_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Base64Binary& ElementDefinition_Example_Value::base64_binary() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.base64_binary)
  return has_base64_binary()
      ? *value_.base64_binary_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Base64Binary*>(&::google::fhir::stu3::proto::_Base64Binary_default_instance_);
}
inline ::google::fhir::stu3::proto::Base64Binary* ElementDefinition_Example_Value::mutable_base64_binary() {
  if (!has_base64_binary()) {
    clear_value();
    set_has_base64_binary();
    value_.base64_binary_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Base64Binary >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.base64_binary)
  return value_.base64_binary_;
}

// .google.fhir.stu3.proto.Boolean boolean = 2;
inline bool ElementDefinition_Example_Value::has_boolean() const {
  return value_case() == kBoolean;
}
inline void ElementDefinition_Example_Value::set_has_boolean() {
  _oneof_case_[0] = kBoolean;
}
inline const ::google::fhir::stu3::proto::Boolean& ElementDefinition_Example_Value::_internal_boolean() const {
  return *value_.boolean_;
}
inline ::google::fhir::stu3::proto::Boolean* ElementDefinition_Example_Value::release_boolean() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.boolean)
  if (has_boolean()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Boolean* temp = value_.boolean_;
    value_.boolean_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Boolean& ElementDefinition_Example_Value::boolean() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.boolean)
  return has_boolean()
      ? *value_.boolean_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Boolean*>(&::google::fhir::stu3::proto::_Boolean_default_instance_);
}
inline ::google::fhir::stu3::proto::Boolean* ElementDefinition_Example_Value::mutable_boolean() {
  if (!has_boolean()) {
    clear_value();
    set_has_boolean();
    value_.boolean_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Boolean >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.boolean)
  return value_.boolean_;
}

// .google.fhir.stu3.proto.Code code = 3;
inline bool ElementDefinition_Example_Value::has_code() const {
  return value_case() == kCode;
}
inline void ElementDefinition_Example_Value::set_has_code() {
  _oneof_case_[0] = kCode;
}
inline const ::google::fhir::stu3::proto::Code& ElementDefinition_Example_Value::_internal_code() const {
  return *value_.code_;
}
inline ::google::fhir::stu3::proto::Code* ElementDefinition_Example_Value::release_code() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.code)
  if (has_code()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Code* temp = value_.code_;
    value_.code_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Code& ElementDefinition_Example_Value::code() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.code)
  return has_code()
      ? *value_.code_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Code*>(&::google::fhir::stu3::proto::_Code_default_instance_);
}
inline ::google::fhir::stu3::proto::Code* ElementDefinition_Example_Value::mutable_code() {
  if (!has_code()) {
    clear_value();
    set_has_code();
    value_.code_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Code >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.code)
  return value_.code_;
}

// .google.fhir.stu3.proto.Date date = 4;
inline bool ElementDefinition_Example_Value::has_date() const {
  return value_case() == kDate;
}
inline void ElementDefinition_Example_Value::set_has_date() {
  _oneof_case_[0] = kDate;
}
inline const ::google::fhir::stu3::proto::Date& ElementDefinition_Example_Value::_internal_date() const {
  return *value_.date_;
}
inline ::google::fhir::stu3::proto::Date* ElementDefinition_Example_Value::release_date() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.date)
  if (has_date()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Date* temp = value_.date_;
    value_.date_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Date& ElementDefinition_Example_Value::date() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.date)
  return has_date()
      ? *value_.date_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Date*>(&::google::fhir::stu3::proto::_Date_default_instance_);
}
inline ::google::fhir::stu3::proto::Date* ElementDefinition_Example_Value::mutable_date() {
  if (!has_date()) {
    clear_value();
    set_has_date();
    value_.date_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Date >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.date)
  return value_.date_;
}

// .google.fhir.stu3.proto.DateTime date_time = 5;
inline bool ElementDefinition_Example_Value::has_date_time() const {
  return value_case() == kDateTime;
}
inline void ElementDefinition_Example_Value::set_has_date_time() {
  _oneof_case_[0] = kDateTime;
}
inline const ::google::fhir::stu3::proto::DateTime& ElementDefinition_Example_Value::_internal_date_time() const {
  return *value_.date_time_;
}
inline ::google::fhir::stu3::proto::DateTime* ElementDefinition_Example_Value::release_date_time() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.date_time)
  if (has_date_time()) {
    clear_has_value();
      ::google::fhir::stu3::proto::DateTime* temp = value_.date_time_;
    value_.date_time_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::DateTime& ElementDefinition_Example_Value::date_time() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.date_time)
  return has_date_time()
      ? *value_.date_time_
      : *reinterpret_cast< ::google::fhir::stu3::proto::DateTime*>(&::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* ElementDefinition_Example_Value::mutable_date_time() {
  if (!has_date_time()) {
    clear_value();
    set_has_date_time();
    value_.date_time_ = CreateMaybeMessage< ::google::fhir::stu3::proto::DateTime >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.date_time)
  return value_.date_time_;
}

// .google.fhir.stu3.proto.Decimal decimal = 6;
inline bool ElementDefinition_Example_Value::has_decimal() const {
  return value_case() == kDecimal;
}
inline void ElementDefinition_Example_Value::set_has_decimal() {
  _oneof_case_[0] = kDecimal;
}
inline const ::google::fhir::stu3::proto::Decimal& ElementDefinition_Example_Value::_internal_decimal() const {
  return *value_.decimal_;
}
inline ::google::fhir::stu3::proto::Decimal* ElementDefinition_Example_Value::release_decimal() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.decimal)
  if (has_decimal()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Decimal* temp = value_.decimal_;
    value_.decimal_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Decimal& ElementDefinition_Example_Value::decimal() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.decimal)
  return has_decimal()
      ? *value_.decimal_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Decimal*>(&::google::fhir::stu3::proto::_Decimal_default_instance_);
}
inline ::google::fhir::stu3::proto::Decimal* ElementDefinition_Example_Value::mutable_decimal() {
  if (!has_decimal()) {
    clear_value();
    set_has_decimal();
    value_.decimal_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Decimal >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.decimal)
  return value_.decimal_;
}

// .google.fhir.stu3.proto.Id id = 7;
inline bool ElementDefinition_Example_Value::has_id() const {
  return value_case() == kId;
}
inline void ElementDefinition_Example_Value::set_has_id() {
  _oneof_case_[0] = kId;
}
inline const ::google::fhir::stu3::proto::Id& ElementDefinition_Example_Value::_internal_id() const {
  return *value_.id_;
}
inline ::google::fhir::stu3::proto::Id* ElementDefinition_Example_Value::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.id)
  if (has_id()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Id* temp = value_.id_;
    value_.id_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Id& ElementDefinition_Example_Value::id() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.id)
  return has_id()
      ? *value_.id_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Id*>(&::google::fhir::stu3::proto::_Id_default_instance_);
}
inline ::google::fhir::stu3::proto::Id* ElementDefinition_Example_Value::mutable_id() {
  if (!has_id()) {
    clear_value();
    set_has_id();
    value_.id_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Id >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.id)
  return value_.id_;
}

// .google.fhir.stu3.proto.Instant instant = 8;
inline bool ElementDefinition_Example_Value::has_instant() const {
  return value_case() == kInstant;
}
inline void ElementDefinition_Example_Value::set_has_instant() {
  _oneof_case_[0] = kInstant;
}
inline const ::google::fhir::stu3::proto::Instant& ElementDefinition_Example_Value::_internal_instant() const {
  return *value_.instant_;
}
inline ::google::fhir::stu3::proto::Instant* ElementDefinition_Example_Value::release_instant() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.instant)
  if (has_instant()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Instant* temp = value_.instant_;
    value_.instant_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Instant& ElementDefinition_Example_Value::instant() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.instant)
  return has_instant()
      ? *value_.instant_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Instant*>(&::google::fhir::stu3::proto::_Instant_default_instance_);
}
inline ::google::fhir::stu3::proto::Instant* ElementDefinition_Example_Value::mutable_instant() {
  if (!has_instant()) {
    clear_value();
    set_has_instant();
    value_.instant_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Instant >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.instant)
  return value_.instant_;
}

// .google.fhir.stu3.proto.Integer integer = 9;
inline bool ElementDefinition_Example_Value::has_integer() const {
  return value_case() == kInteger;
}
inline void ElementDefinition_Example_Value::set_has_integer() {
  _oneof_case_[0] = kInteger;
}
inline const ::google::fhir::stu3::proto::Integer& ElementDefinition_Example_Value::_internal_integer() const {
  return *value_.integer_;
}
inline ::google::fhir::stu3::proto::Integer* ElementDefinition_Example_Value::release_integer() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.integer)
  if (has_integer()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Integer* temp = value_.integer_;
    value_.integer_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Integer& ElementDefinition_Example_Value::integer() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.integer)
  return has_integer()
      ? *value_.integer_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Integer*>(&::google::fhir::stu3::proto::_Integer_default_instance_);
}
inline ::google::fhir::stu3::proto::Integer* ElementDefinition_Example_Value::mutable_integer() {
  if (!has_integer()) {
    clear_value();
    set_has_integer();
    value_.integer_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Integer >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.integer)
  return value_.integer_;
}

// .google.fhir.stu3.proto.Markdown markdown = 10;
inline bool ElementDefinition_Example_Value::has_markdown() const {
  return value_case() == kMarkdown;
}
inline void ElementDefinition_Example_Value::set_has_markdown() {
  _oneof_case_[0] = kMarkdown;
}
inline const ::google::fhir::stu3::proto::Markdown& ElementDefinition_Example_Value::_internal_markdown() const {
  return *value_.markdown_;
}
inline ::google::fhir::stu3::proto::Markdown* ElementDefinition_Example_Value::release_markdown() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.markdown)
  if (has_markdown()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Markdown* temp = value_.markdown_;
    value_.markdown_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Markdown& ElementDefinition_Example_Value::markdown() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.markdown)
  return has_markdown()
      ? *value_.markdown_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Markdown*>(&::google::fhir::stu3::proto::_Markdown_default_instance_);
}
inline ::google::fhir::stu3::proto::Markdown* ElementDefinition_Example_Value::mutable_markdown() {
  if (!has_markdown()) {
    clear_value();
    set_has_markdown();
    value_.markdown_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Markdown >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.markdown)
  return value_.markdown_;
}

// .google.fhir.stu3.proto.Oid oid = 11;
inline bool ElementDefinition_Example_Value::has_oid() const {
  return value_case() == kOid;
}
inline void ElementDefinition_Example_Value::set_has_oid() {
  _oneof_case_[0] = kOid;
}
inline const ::google::fhir::stu3::proto::Oid& ElementDefinition_Example_Value::_internal_oid() const {
  return *value_.oid_;
}
inline ::google::fhir::stu3::proto::Oid* ElementDefinition_Example_Value::release_oid() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.oid)
  if (has_oid()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Oid* temp = value_.oid_;
    value_.oid_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Oid& ElementDefinition_Example_Value::oid() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.oid)
  return has_oid()
      ? *value_.oid_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Oid*>(&::google::fhir::stu3::proto::_Oid_default_instance_);
}
inline ::google::fhir::stu3::proto::Oid* ElementDefinition_Example_Value::mutable_oid() {
  if (!has_oid()) {
    clear_value();
    set_has_oid();
    value_.oid_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Oid >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.oid)
  return value_.oid_;
}

// .google.fhir.stu3.proto.PositiveInt positive_int = 12;
inline bool ElementDefinition_Example_Value::has_positive_int() const {
  return value_case() == kPositiveInt;
}
inline void ElementDefinition_Example_Value::set_has_positive_int() {
  _oneof_case_[0] = kPositiveInt;
}
inline const ::google::fhir::stu3::proto::PositiveInt& ElementDefinition_Example_Value::_internal_positive_int() const {
  return *value_.positive_int_;
}
inline ::google::fhir::stu3::proto::PositiveInt* ElementDefinition_Example_Value::release_positive_int() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.positive_int)
  if (has_positive_int()) {
    clear_has_value();
      ::google::fhir::stu3::proto::PositiveInt* temp = value_.positive_int_;
    value_.positive_int_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::PositiveInt& ElementDefinition_Example_Value::positive_int() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.positive_int)
  return has_positive_int()
      ? *value_.positive_int_
      : *reinterpret_cast< ::google::fhir::stu3::proto::PositiveInt*>(&::google::fhir::stu3::proto::_PositiveInt_default_instance_);
}
inline ::google::fhir::stu3::proto::PositiveInt* ElementDefinition_Example_Value::mutable_positive_int() {
  if (!has_positive_int()) {
    clear_value();
    set_has_positive_int();
    value_.positive_int_ = CreateMaybeMessage< ::google::fhir::stu3::proto::PositiveInt >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.positive_int)
  return value_.positive_int_;
}

// .google.fhir.stu3.proto.String string_value = 13[json_name = "string"];
inline bool ElementDefinition_Example_Value::has_string_value() const {
  return value_case() == kStringValue;
}
inline void ElementDefinition_Example_Value::set_has_string_value() {
  _oneof_case_[0] = kStringValue;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Example_Value::_internal_string_value() const {
  return *value_.string_value_;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Example_Value::release_string_value() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.string_value)
  if (has_string_value()) {
    clear_has_value();
      ::google::fhir::stu3::proto::String* temp = value_.string_value_;
    value_.string_value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Example_Value::string_value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.string_value)
  return has_string_value()
      ? *value_.string_value_
      : *reinterpret_cast< ::google::fhir::stu3::proto::String*>(&::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Example_Value::mutable_string_value() {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_ = CreateMaybeMessage< ::google::fhir::stu3::proto::String >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.string_value)
  return value_.string_value_;
}

// .google.fhir.stu3.proto.Time time = 14;
inline bool ElementDefinition_Example_Value::has_time() const {
  return value_case() == kTime;
}
inline void ElementDefinition_Example_Value::set_has_time() {
  _oneof_case_[0] = kTime;
}
inline const ::google::fhir::stu3::proto::Time& ElementDefinition_Example_Value::_internal_time() const {
  return *value_.time_;
}
inline ::google::fhir::stu3::proto::Time* ElementDefinition_Example_Value::release_time() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.time)
  if (has_time()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Time* temp = value_.time_;
    value_.time_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Time& ElementDefinition_Example_Value::time() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.time)
  return has_time()
      ? *value_.time_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Time*>(&::google::fhir::stu3::proto::_Time_default_instance_);
}
inline ::google::fhir::stu3::proto::Time* ElementDefinition_Example_Value::mutable_time() {
  if (!has_time()) {
    clear_value();
    set_has_time();
    value_.time_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Time >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.time)
  return value_.time_;
}

// .google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
inline bool ElementDefinition_Example_Value::has_unsigned_int() const {
  return value_case() == kUnsignedInt;
}
inline void ElementDefinition_Example_Value::set_has_unsigned_int() {
  _oneof_case_[0] = kUnsignedInt;
}
inline const ::google::fhir::stu3::proto::UnsignedInt& ElementDefinition_Example_Value::_internal_unsigned_int() const {
  return *value_.unsigned_int_;
}
inline ::google::fhir::stu3::proto::UnsignedInt* ElementDefinition_Example_Value::release_unsigned_int() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.unsigned_int)
  if (has_unsigned_int()) {
    clear_has_value();
      ::google::fhir::stu3::proto::UnsignedInt* temp = value_.unsigned_int_;
    value_.unsigned_int_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::UnsignedInt& ElementDefinition_Example_Value::unsigned_int() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.unsigned_int)
  return has_unsigned_int()
      ? *value_.unsigned_int_
      : *reinterpret_cast< ::google::fhir::stu3::proto::UnsignedInt*>(&::google::fhir::stu3::proto::_UnsignedInt_default_instance_);
}
inline ::google::fhir::stu3::proto::UnsignedInt* ElementDefinition_Example_Value::mutable_unsigned_int() {
  if (!has_unsigned_int()) {
    clear_value();
    set_has_unsigned_int();
    value_.unsigned_int_ = CreateMaybeMessage< ::google::fhir::stu3::proto::UnsignedInt >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.unsigned_int)
  return value_.unsigned_int_;
}

// .google.fhir.stu3.proto.Uri uri = 16;
inline bool ElementDefinition_Example_Value::has_uri() const {
  return value_case() == kUri;
}
inline void ElementDefinition_Example_Value::set_has_uri() {
  _oneof_case_[0] = kUri;
}
inline const ::google::fhir::stu3::proto::Uri& ElementDefinition_Example_Value::_internal_uri() const {
  return *value_.uri_;
}
inline ::google::fhir::stu3::proto::Uri* ElementDefinition_Example_Value::release_uri() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.uri)
  if (has_uri()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Uri* temp = value_.uri_;
    value_.uri_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Uri& ElementDefinition_Example_Value::uri() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.uri)
  return has_uri()
      ? *value_.uri_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Uri*>(&::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* ElementDefinition_Example_Value::mutable_uri() {
  if (!has_uri()) {
    clear_value();
    set_has_uri();
    value_.uri_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Uri >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.uri)
  return value_.uri_;
}

// .google.fhir.stu3.proto.Address address = 17;
inline bool ElementDefinition_Example_Value::has_address() const {
  return value_case() == kAddress;
}
inline void ElementDefinition_Example_Value::set_has_address() {
  _oneof_case_[0] = kAddress;
}
inline const ::google::fhir::stu3::proto::Address& ElementDefinition_Example_Value::_internal_address() const {
  return *value_.address_;
}
inline ::google::fhir::stu3::proto::Address* ElementDefinition_Example_Value::release_address() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.address)
  if (has_address()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Address* temp = value_.address_;
    value_.address_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Address& ElementDefinition_Example_Value::address() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.address)
  return has_address()
      ? *value_.address_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Address*>(&::google::fhir::stu3::proto::_Address_default_instance_);
}
inline ::google::fhir::stu3::proto::Address* ElementDefinition_Example_Value::mutable_address() {
  if (!has_address()) {
    clear_value();
    set_has_address();
    value_.address_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Address >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.address)
  return value_.address_;
}

// .google.fhir.stu3.proto.Age age = 18;
inline bool ElementDefinition_Example_Value::has_age() const {
  return value_case() == kAge;
}
inline void ElementDefinition_Example_Value::set_has_age() {
  _oneof_case_[0] = kAge;
}
inline const ::google::fhir::stu3::proto::Age& ElementDefinition_Example_Value::_internal_age() const {
  return *value_.age_;
}
inline ::google::fhir::stu3::proto::Age* ElementDefinition_Example_Value::release_age() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.age)
  if (has_age()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Age* temp = value_.age_;
    value_.age_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Age& ElementDefinition_Example_Value::age() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.age)
  return has_age()
      ? *value_.age_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Age*>(&::google::fhir::stu3::proto::_Age_default_instance_);
}
inline ::google::fhir::stu3::proto::Age* ElementDefinition_Example_Value::mutable_age() {
  if (!has_age()) {
    clear_value();
    set_has_age();
    value_.age_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Age >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.age)
  return value_.age_;
}

// .google.fhir.stu3.proto.Annotation annotation = 19;
inline bool ElementDefinition_Example_Value::has_annotation() const {
  return value_case() == kAnnotation;
}
inline void ElementDefinition_Example_Value::set_has_annotation() {
  _oneof_case_[0] = kAnnotation;
}
inline const ::google::fhir::stu3::proto::Annotation& ElementDefinition_Example_Value::_internal_annotation() const {
  return *value_.annotation_;
}
inline ::google::fhir::stu3::proto::Annotation* ElementDefinition_Example_Value::release_annotation() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.annotation)
  if (has_annotation()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Annotation* temp = value_.annotation_;
    value_.annotation_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Annotation& ElementDefinition_Example_Value::annotation() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.annotation)
  return has_annotation()
      ? *value_.annotation_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Annotation*>(&::google::fhir::stu3::proto::_Annotation_default_instance_);
}
inline ::google::fhir::stu3::proto::Annotation* ElementDefinition_Example_Value::mutable_annotation() {
  if (!has_annotation()) {
    clear_value();
    set_has_annotation();
    value_.annotation_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Annotation >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.annotation)
  return value_.annotation_;
}

// .google.fhir.stu3.proto.Attachment attachment = 20;
inline bool ElementDefinition_Example_Value::has_attachment() const {
  return value_case() == kAttachment;
}
inline void ElementDefinition_Example_Value::set_has_attachment() {
  _oneof_case_[0] = kAttachment;
}
inline const ::google::fhir::stu3::proto::Attachment& ElementDefinition_Example_Value::_internal_attachment() const {
  return *value_.attachment_;
}
inline ::google::fhir::stu3::proto::Attachment* ElementDefinition_Example_Value::release_attachment() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.attachment)
  if (has_attachment()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Attachment* temp = value_.attachment_;
    value_.attachment_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Attachment& ElementDefinition_Example_Value::attachment() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.attachment)
  return has_attachment()
      ? *value_.attachment_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Attachment*>(&::google::fhir::stu3::proto::_Attachment_default_instance_);
}
inline ::google::fhir::stu3::proto::Attachment* ElementDefinition_Example_Value::mutable_attachment() {
  if (!has_attachment()) {
    clear_value();
    set_has_attachment();
    value_.attachment_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Attachment >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.attachment)
  return value_.attachment_;
}

// .google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
inline bool ElementDefinition_Example_Value::has_codeable_concept() const {
  return value_case() == kCodeableConcept;
}
inline void ElementDefinition_Example_Value::set_has_codeable_concept() {
  _oneof_case_[0] = kCodeableConcept;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& ElementDefinition_Example_Value::_internal_codeable_concept() const {
  return *value_.codeable_concept_;
}
inline ::google::fhir::stu3::proto::CodeableConcept* ElementDefinition_Example_Value::release_codeable_concept() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.codeable_concept)
  if (has_codeable_concept()) {
    clear_has_value();
      ::google::fhir::stu3::proto::CodeableConcept* temp = value_.codeable_concept_;
    value_.codeable_concept_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::CodeableConcept& ElementDefinition_Example_Value::codeable_concept() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.codeable_concept)
  return has_codeable_concept()
      ? *value_.codeable_concept_
      : *reinterpret_cast< ::google::fhir::stu3::proto::CodeableConcept*>(&::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* ElementDefinition_Example_Value::mutable_codeable_concept() {
  if (!has_codeable_concept()) {
    clear_value();
    set_has_codeable_concept();
    value_.codeable_concept_ = CreateMaybeMessage< ::google::fhir::stu3::proto::CodeableConcept >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.codeable_concept)
  return value_.codeable_concept_;
}

// .google.fhir.stu3.proto.Coding coding = 22;
inline bool ElementDefinition_Example_Value::has_coding() const {
  return value_case() == kCoding;
}
inline void ElementDefinition_Example_Value::set_has_coding() {
  _oneof_case_[0] = kCoding;
}
inline const ::google::fhir::stu3::proto::Coding& ElementDefinition_Example_Value::_internal_coding() const {
  return *value_.coding_;
}
inline ::google::fhir::stu3::proto::Coding* ElementDefinition_Example_Value::release_coding() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.coding)
  if (has_coding()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Coding* temp = value_.coding_;
    value_.coding_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Coding& ElementDefinition_Example_Value::coding() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.coding)
  return has_coding()
      ? *value_.coding_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Coding*>(&::google::fhir::stu3::proto::_Coding_default_instance_);
}
inline ::google::fhir::stu3::proto::Coding* ElementDefinition_Example_Value::mutable_coding() {
  if (!has_coding()) {
    clear_value();
    set_has_coding();
    value_.coding_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Coding >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.coding)
  return value_.coding_;
}

// .google.fhir.stu3.proto.ContactPoint contact_point = 23;
inline bool ElementDefinition_Example_Value::has_contact_point() const {
  return value_case() == kContactPoint;
}
inline void ElementDefinition_Example_Value::set_has_contact_point() {
  _oneof_case_[0] = kContactPoint;
}
inline const ::google::fhir::stu3::proto::ContactPoint& ElementDefinition_Example_Value::_internal_contact_point() const {
  return *value_.contact_point_;
}
inline ::google::fhir::stu3::proto::ContactPoint* ElementDefinition_Example_Value::release_contact_point() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.contact_point)
  if (has_contact_point()) {
    clear_has_value();
      ::google::fhir::stu3::proto::ContactPoint* temp = value_.contact_point_;
    value_.contact_point_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::ContactPoint& ElementDefinition_Example_Value::contact_point() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.contact_point)
  return has_contact_point()
      ? *value_.contact_point_
      : *reinterpret_cast< ::google::fhir::stu3::proto::ContactPoint*>(&::google::fhir::stu3::proto::_ContactPoint_default_instance_);
}
inline ::google::fhir::stu3::proto::ContactPoint* ElementDefinition_Example_Value::mutable_contact_point() {
  if (!has_contact_point()) {
    clear_value();
    set_has_contact_point();
    value_.contact_point_ = CreateMaybeMessage< ::google::fhir::stu3::proto::ContactPoint >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.contact_point)
  return value_.contact_point_;
}

// .google.fhir.stu3.proto.Count count = 24;
inline bool ElementDefinition_Example_Value::has_count() const {
  return value_case() == kCount;
}
inline void ElementDefinition_Example_Value::set_has_count() {
  _oneof_case_[0] = kCount;
}
inline const ::google::fhir::stu3::proto::Count& ElementDefinition_Example_Value::_internal_count() const {
  return *value_.count_;
}
inline ::google::fhir::stu3::proto::Count* ElementDefinition_Example_Value::release_count() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.count)
  if (has_count()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Count* temp = value_.count_;
    value_.count_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Count& ElementDefinition_Example_Value::count() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.count)
  return has_count()
      ? *value_.count_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Count*>(&::google::fhir::stu3::proto::_Count_default_instance_);
}
inline ::google::fhir::stu3::proto::Count* ElementDefinition_Example_Value::mutable_count() {
  if (!has_count()) {
    clear_value();
    set_has_count();
    value_.count_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Count >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.count)
  return value_.count_;
}

// .google.fhir.stu3.proto.Distance distance = 25;
inline bool ElementDefinition_Example_Value::has_distance() const {
  return value_case() == kDistance;
}
inline void ElementDefinition_Example_Value::set_has_distance() {
  _oneof_case_[0] = kDistance;
}
inline const ::google::fhir::stu3::proto::Distance& ElementDefinition_Example_Value::_internal_distance() const {
  return *value_.distance_;
}
inline ::google::fhir::stu3::proto::Distance* ElementDefinition_Example_Value::release_distance() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.distance)
  if (has_distance()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Distance* temp = value_.distance_;
    value_.distance_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Distance& ElementDefinition_Example_Value::distance() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.distance)
  return has_distance()
      ? *value_.distance_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Distance*>(&::google::fhir::stu3::proto::_Distance_default_instance_);
}
inline ::google::fhir::stu3::proto::Distance* ElementDefinition_Example_Value::mutable_distance() {
  if (!has_distance()) {
    clear_value();
    set_has_distance();
    value_.distance_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Distance >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.distance)
  return value_.distance_;
}

// .google.fhir.stu3.proto.Duration duration = 26;
inline bool ElementDefinition_Example_Value::has_duration() const {
  return value_case() == kDuration;
}
inline void ElementDefinition_Example_Value::set_has_duration() {
  _oneof_case_[0] = kDuration;
}
inline const ::google::fhir::stu3::proto::Duration& ElementDefinition_Example_Value::_internal_duration() const {
  return *value_.duration_;
}
inline ::google::fhir::stu3::proto::Duration* ElementDefinition_Example_Value::release_duration() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.duration)
  if (has_duration()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Duration* temp = value_.duration_;
    value_.duration_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Duration& ElementDefinition_Example_Value::duration() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.duration)
  return has_duration()
      ? *value_.duration_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Duration*>(&::google::fhir::stu3::proto::_Duration_default_instance_);
}
inline ::google::fhir::stu3::proto::Duration* ElementDefinition_Example_Value::mutable_duration() {
  if (!has_duration()) {
    clear_value();
    set_has_duration();
    value_.duration_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Duration >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.duration)
  return value_.duration_;
}

// .google.fhir.stu3.proto.HumanName human_name = 27;
inline bool ElementDefinition_Example_Value::has_human_name() const {
  return value_case() == kHumanName;
}
inline void ElementDefinition_Example_Value::set_has_human_name() {
  _oneof_case_[0] = kHumanName;
}
inline const ::google::fhir::stu3::proto::HumanName& ElementDefinition_Example_Value::_internal_human_name() const {
  return *value_.human_name_;
}
inline ::google::fhir::stu3::proto::HumanName* ElementDefinition_Example_Value::release_human_name() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.human_name)
  if (has_human_name()) {
    clear_has_value();
      ::google::fhir::stu3::proto::HumanName* temp = value_.human_name_;
    value_.human_name_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::HumanName& ElementDefinition_Example_Value::human_name() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.human_name)
  return has_human_name()
      ? *value_.human_name_
      : *reinterpret_cast< ::google::fhir::stu3::proto::HumanName*>(&::google::fhir::stu3::proto::_HumanName_default_instance_);
}
inline ::google::fhir::stu3::proto::HumanName* ElementDefinition_Example_Value::mutable_human_name() {
  if (!has_human_name()) {
    clear_value();
    set_has_human_name();
    value_.human_name_ = CreateMaybeMessage< ::google::fhir::stu3::proto::HumanName >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.human_name)
  return value_.human_name_;
}

// .google.fhir.stu3.proto.Identifier identifier = 28;
inline bool ElementDefinition_Example_Value::has_identifier() const {
  return value_case() == kIdentifier;
}
inline void ElementDefinition_Example_Value::set_has_identifier() {
  _oneof_case_[0] = kIdentifier;
}
inline const ::google::fhir::stu3::proto::Identifier& ElementDefinition_Example_Value::_internal_identifier() const {
  return *value_.identifier_;
}
inline ::google::fhir::stu3::proto::Identifier* ElementDefinition_Example_Value::release_identifier() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.identifier)
  if (has_identifier()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Identifier* temp = value_.identifier_;
    value_.identifier_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Identifier& ElementDefinition_Example_Value::identifier() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.identifier)
  return has_identifier()
      ? *value_.identifier_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Identifier*>(&::google::fhir::stu3::proto::_Identifier_default_instance_);
}
inline ::google::fhir::stu3::proto::Identifier* ElementDefinition_Example_Value::mutable_identifier() {
  if (!has_identifier()) {
    clear_value();
    set_has_identifier();
    value_.identifier_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Identifier >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.identifier)
  return value_.identifier_;
}

// .google.fhir.stu3.proto.Money money = 29;
inline bool ElementDefinition_Example_Value::has_money() const {
  return value_case() == kMoney;
}
inline void ElementDefinition_Example_Value::set_has_money() {
  _oneof_case_[0] = kMoney;
}
inline const ::google::fhir::stu3::proto::Money& ElementDefinition_Example_Value::_internal_money() const {
  return *value_.money_;
}
inline ::google::fhir::stu3::proto::Money* ElementDefinition_Example_Value::release_money() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.money)
  if (has_money()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Money* temp = value_.money_;
    value_.money_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Money& ElementDefinition_Example_Value::money() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.money)
  return has_money()
      ? *value_.money_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Money*>(&::google::fhir::stu3::proto::_Money_default_instance_);
}
inline ::google::fhir::stu3::proto::Money* ElementDefinition_Example_Value::mutable_money() {
  if (!has_money()) {
    clear_value();
    set_has_money();
    value_.money_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Money >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.money)
  return value_.money_;
}

// .google.fhir.stu3.proto.Period period = 30;
inline bool ElementDefinition_Example_Value::has_period() const {
  return value_case() == kPeriod;
}
inline void ElementDefinition_Example_Value::set_has_period() {
  _oneof_case_[0] = kPeriod;
}
inline const ::google::fhir::stu3::proto::Period& ElementDefinition_Example_Value::_internal_period() const {
  return *value_.period_;
}
inline ::google::fhir::stu3::proto::Period* ElementDefinition_Example_Value::release_period() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.period)
  if (has_period()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Period* temp = value_.period_;
    value_.period_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Period& ElementDefinition_Example_Value::period() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.period)
  return has_period()
      ? *value_.period_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Period*>(&::google::fhir::stu3::proto::_Period_default_instance_);
}
inline ::google::fhir::stu3::proto::Period* ElementDefinition_Example_Value::mutable_period() {
  if (!has_period()) {
    clear_value();
    set_has_period();
    value_.period_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Period >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.period)
  return value_.period_;
}

// .google.fhir.stu3.proto.Quantity quantity = 31;
inline bool ElementDefinition_Example_Value::has_quantity() const {
  return value_case() == kQuantity;
}
inline void ElementDefinition_Example_Value::set_has_quantity() {
  _oneof_case_[0] = kQuantity;
}
inline const ::google::fhir::stu3::proto::Quantity& ElementDefinition_Example_Value::_internal_quantity() const {
  return *value_.quantity_;
}
inline ::google::fhir::stu3::proto::Quantity* ElementDefinition_Example_Value::release_quantity() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.quantity)
  if (has_quantity()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Quantity* temp = value_.quantity_;
    value_.quantity_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Quantity& ElementDefinition_Example_Value::quantity() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.quantity)
  return has_quantity()
      ? *value_.quantity_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Quantity*>(&::google::fhir::stu3::proto::_Quantity_default_instance_);
}
inline ::google::fhir::stu3::proto::Quantity* ElementDefinition_Example_Value::mutable_quantity() {
  if (!has_quantity()) {
    clear_value();
    set_has_quantity();
    value_.quantity_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Quantity >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.quantity)
  return value_.quantity_;
}

// .google.fhir.stu3.proto.Range range = 32;
inline bool ElementDefinition_Example_Value::has_range() const {
  return value_case() == kRange;
}
inline void ElementDefinition_Example_Value::set_has_range() {
  _oneof_case_[0] = kRange;
}
inline const ::google::fhir::stu3::proto::Range& ElementDefinition_Example_Value::_internal_range() const {
  return *value_.range_;
}
inline ::google::fhir::stu3::proto::Range* ElementDefinition_Example_Value::release_range() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.range)
  if (has_range()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Range* temp = value_.range_;
    value_.range_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Range& ElementDefinition_Example_Value::range() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.range)
  return has_range()
      ? *value_.range_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Range*>(&::google::fhir::stu3::proto::_Range_default_instance_);
}
inline ::google::fhir::stu3::proto::Range* ElementDefinition_Example_Value::mutable_range() {
  if (!has_range()) {
    clear_value();
    set_has_range();
    value_.range_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Range >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.range)
  return value_.range_;
}

// .google.fhir.stu3.proto.Ratio ratio = 33;
inline bool ElementDefinition_Example_Value::has_ratio() const {
  return value_case() == kRatio;
}
inline void ElementDefinition_Example_Value::set_has_ratio() {
  _oneof_case_[0] = kRatio;
}
inline const ::google::fhir::stu3::proto::Ratio& ElementDefinition_Example_Value::_internal_ratio() const {
  return *value_.ratio_;
}
inline ::google::fhir::stu3::proto::Ratio* ElementDefinition_Example_Value::release_ratio() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.ratio)
  if (has_ratio()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Ratio* temp = value_.ratio_;
    value_.ratio_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Ratio& ElementDefinition_Example_Value::ratio() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.ratio)
  return has_ratio()
      ? *value_.ratio_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Ratio*>(&::google::fhir::stu3::proto::_Ratio_default_instance_);
}
inline ::google::fhir::stu3::proto::Ratio* ElementDefinition_Example_Value::mutable_ratio() {
  if (!has_ratio()) {
    clear_value();
    set_has_ratio();
    value_.ratio_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Ratio >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.ratio)
  return value_.ratio_;
}

// .google.fhir.stu3.proto.Reference reference = 34;
inline bool ElementDefinition_Example_Value::has_reference() const {
  return value_case() == kReference;
}
inline void ElementDefinition_Example_Value::set_has_reference() {
  _oneof_case_[0] = kReference;
}
inline const ::google::fhir::stu3::proto::Reference& ElementDefinition_Example_Value::_internal_reference() const {
  return *value_.reference_;
}
inline ::google::fhir::stu3::proto::Reference* ElementDefinition_Example_Value::release_reference() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.reference)
  if (has_reference()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Reference* temp = value_.reference_;
    value_.reference_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Reference& ElementDefinition_Example_Value::reference() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.reference)
  return has_reference()
      ? *value_.reference_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Reference*>(&::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* ElementDefinition_Example_Value::mutable_reference() {
  if (!has_reference()) {
    clear_value();
    set_has_reference();
    value_.reference_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Reference >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.reference)
  return value_.reference_;
}

// .google.fhir.stu3.proto.SampledData sampled_data = 35;
inline bool ElementDefinition_Example_Value::has_sampled_data() const {
  return value_case() == kSampledData;
}
inline void ElementDefinition_Example_Value::set_has_sampled_data() {
  _oneof_case_[0] = kSampledData;
}
inline const ::google::fhir::stu3::proto::SampledData& ElementDefinition_Example_Value::_internal_sampled_data() const {
  return *value_.sampled_data_;
}
inline ::google::fhir::stu3::proto::SampledData* ElementDefinition_Example_Value::release_sampled_data() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.sampled_data)
  if (has_sampled_data()) {
    clear_has_value();
      ::google::fhir::stu3::proto::SampledData* temp = value_.sampled_data_;
    value_.sampled_data_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::SampledData& ElementDefinition_Example_Value::sampled_data() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.sampled_data)
  return has_sampled_data()
      ? *value_.sampled_data_
      : *reinterpret_cast< ::google::fhir::stu3::proto::SampledData*>(&::google::fhir::stu3::proto::_SampledData_default_instance_);
}
inline ::google::fhir::stu3::proto::SampledData* ElementDefinition_Example_Value::mutable_sampled_data() {
  if (!has_sampled_data()) {
    clear_value();
    set_has_sampled_data();
    value_.sampled_data_ = CreateMaybeMessage< ::google::fhir::stu3::proto::SampledData >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.sampled_data)
  return value_.sampled_data_;
}

// .google.fhir.stu3.proto.Signature signature = 36;
inline bool ElementDefinition_Example_Value::has_signature() const {
  return value_case() == kSignature;
}
inline void ElementDefinition_Example_Value::set_has_signature() {
  _oneof_case_[0] = kSignature;
}
inline const ::google::fhir::stu3::proto::Signature& ElementDefinition_Example_Value::_internal_signature() const {
  return *value_.signature_;
}
inline ::google::fhir::stu3::proto::Signature* ElementDefinition_Example_Value::release_signature() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.signature)
  if (has_signature()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Signature* temp = value_.signature_;
    value_.signature_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Signature& ElementDefinition_Example_Value::signature() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.signature)
  return has_signature()
      ? *value_.signature_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Signature*>(&::google::fhir::stu3::proto::_Signature_default_instance_);
}
inline ::google::fhir::stu3::proto::Signature* ElementDefinition_Example_Value::mutable_signature() {
  if (!has_signature()) {
    clear_value();
    set_has_signature();
    value_.signature_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Signature >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.signature)
  return value_.signature_;
}

// .google.fhir.stu3.proto.Timing timing = 37;
inline bool ElementDefinition_Example_Value::has_timing() const {
  return value_case() == kTiming;
}
inline void ElementDefinition_Example_Value::set_has_timing() {
  _oneof_case_[0] = kTiming;
}
inline const ::google::fhir::stu3::proto::Timing& ElementDefinition_Example_Value::_internal_timing() const {
  return *value_.timing_;
}
inline ::google::fhir::stu3::proto::Timing* ElementDefinition_Example_Value::release_timing() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.timing)
  if (has_timing()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Timing* temp = value_.timing_;
    value_.timing_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Timing& ElementDefinition_Example_Value::timing() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.timing)
  return has_timing()
      ? *value_.timing_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Timing*>(&::google::fhir::stu3::proto::_Timing_default_instance_);
}
inline ::google::fhir::stu3::proto::Timing* ElementDefinition_Example_Value::mutable_timing() {
  if (!has_timing()) {
    clear_value();
    set_has_timing();
    value_.timing_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Timing >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.timing)
  return value_.timing_;
}

// .google.fhir.stu3.proto.Meta meta = 38;
inline bool ElementDefinition_Example_Value::has_meta() const {
  return value_case() == kMeta;
}
inline void ElementDefinition_Example_Value::set_has_meta() {
  _oneof_case_[0] = kMeta;
}
inline const ::google::fhir::stu3::proto::Meta& ElementDefinition_Example_Value::_internal_meta() const {
  return *value_.meta_;
}
inline ::google::fhir::stu3::proto::Meta* ElementDefinition_Example_Value::release_meta() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.Value.meta)
  if (has_meta()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Meta* temp = value_.meta_;
    value_.meta_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Meta& ElementDefinition_Example_Value::meta() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.Value.meta)
  return has_meta()
      ? *value_.meta_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Meta*>(&::google::fhir::stu3::proto::_Meta_default_instance_);
}
inline ::google::fhir::stu3::proto::Meta* ElementDefinition_Example_Value::mutable_meta() {
  if (!has_meta()) {
    clear_value();
    set_has_meta();
    value_.meta_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Meta >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.Value.meta)
  return value_.meta_;
}

inline bool ElementDefinition_Example_Value::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void ElementDefinition_Example_Value::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline ElementDefinition_Example_Value::ValueCase ElementDefinition_Example_Value::value_case() const {
  return ElementDefinition_Example_Value::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ElementDefinition_Example

// .google.fhir.stu3.proto.String id = 1;
inline bool ElementDefinition_Example::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Example::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Example::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Example::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Example::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.id)
  return id_;
}
inline void ElementDefinition_Example::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int ElementDefinition_Example::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ElementDefinition_Example::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ElementDefinition_Example::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ElementDefinition.Example.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ElementDefinition_Example::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ElementDefinition_Example::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ElementDefinition.Example.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ElementDefinition_Example::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ElementDefinition.Example.extension)
  return extension_;
}

// .google.fhir.stu3.proto.String label = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool ElementDefinition_Example::has_label() const {
  return this != internal_default_instance() && label_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Example::_internal_label() const {
  return *label_;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Example::label() const {
  const ::google::fhir::stu3::proto::String* p = label_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.label)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Example::release_label() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.label)
  
  ::google::fhir::stu3::proto::String* temp = label_;
  label_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Example::mutable_label() {
  
  if (label_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    label_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.label)
  return label_;
}
inline void ElementDefinition_Example::set_allocated_label(::google::fhir::stu3::proto::String* label) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(label_);
  }
  if (label) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      label = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, label, submessage_arena);
    }
    
  } else {
    
  }
  label_ = label;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.label)
}

// .google.fhir.stu3.proto.ElementDefinition.Example.Value value = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
inline bool ElementDefinition_Example::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
inline void ElementDefinition_Example::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
}
inline const ::google::fhir::stu3::proto::ElementDefinition_Example_Value& ElementDefinition_Example::_internal_value() const {
  return *value_;
}
inline const ::google::fhir::stu3::proto::ElementDefinition_Example_Value& ElementDefinition_Example::value() const {
  const ::google::fhir::stu3::proto::ElementDefinition_Example_Value* p = value_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Example.value)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::ElementDefinition_Example_Value*>(
      &::google::fhir::stu3::proto::_ElementDefinition_Example_Value_default_instance_);
}
inline ::google::fhir::stu3::proto::ElementDefinition_Example_Value* ElementDefinition_Example::release_value() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Example.value)
  
  ::google::fhir::stu3::proto::ElementDefinition_Example_Value* temp = value_;
  value_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::ElementDefinition_Example_Value* ElementDefinition_Example::mutable_value() {
  
  if (value_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::ElementDefinition_Example_Value>(GetArenaNoVirtual());
    value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Example.value)
  return value_;
}
inline void ElementDefinition_Example::set_allocated_value(::google::fhir::stu3::proto::ElementDefinition_Example_Value* value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete value_;
  }
  if (value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Example.value)
}

// -------------------------------------------------------------------

// ElementDefinition_MinValue

// .google.fhir.stu3.proto.Date date = 1;
inline bool ElementDefinition_MinValue::has_date() const {
  return min_value_case() == kDate;
}
inline void ElementDefinition_MinValue::set_has_date() {
  _oneof_case_[0] = kDate;
}
inline const ::google::fhir::stu3::proto::Date& ElementDefinition_MinValue::_internal_date() const {
  return *min_value_.date_;
}
inline ::google::fhir::stu3::proto::Date* ElementDefinition_MinValue::release_date() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.MinValue.date)
  if (has_date()) {
    clear_has_min_value();
      ::google::fhir::stu3::proto::Date* temp = min_value_.date_;
    min_value_.date_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Date& ElementDefinition_MinValue::date() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.MinValue.date)
  return has_date()
      ? *min_value_.date_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Date*>(&::google::fhir::stu3::proto::_Date_default_instance_);
}
inline ::google::fhir::stu3::proto::Date* ElementDefinition_MinValue::mutable_date() {
  if (!has_date()) {
    clear_min_value();
    set_has_date();
    min_value_.date_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Date >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.MinValue.date)
  return min_value_.date_;
}

// .google.fhir.stu3.proto.DateTime date_time = 2;
inline bool ElementDefinition_MinValue::has_date_time() const {
  return min_value_case() == kDateTime;
}
inline void ElementDefinition_MinValue::set_has_date_time() {
  _oneof_case_[0] = kDateTime;
}
inline const ::google::fhir::stu3::proto::DateTime& ElementDefinition_MinValue::_internal_date_time() const {
  return *min_value_.date_time_;
}
inline ::google::fhir::stu3::proto::DateTime* ElementDefinition_MinValue::release_date_time() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.MinValue.date_time)
  if (has_date_time()) {
    clear_has_min_value();
      ::google::fhir::stu3::proto::DateTime* temp = min_value_.date_time_;
    min_value_.date_time_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::DateTime& ElementDefinition_MinValue::date_time() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.MinValue.date_time)
  return has_date_time()
      ? *min_value_.date_time_
      : *reinterpret_cast< ::google::fhir::stu3::proto::DateTime*>(&::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* ElementDefinition_MinValue::mutable_date_time() {
  if (!has_date_time()) {
    clear_min_value();
    set_has_date_time();
    min_value_.date_time_ = CreateMaybeMessage< ::google::fhir::stu3::proto::DateTime >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.MinValue.date_time)
  return min_value_.date_time_;
}

// .google.fhir.stu3.proto.Instant instant = 3;
inline bool ElementDefinition_MinValue::has_instant() const {
  return min_value_case() == kInstant;
}
inline void ElementDefinition_MinValue::set_has_instant() {
  _oneof_case_[0] = kInstant;
}
inline const ::google::fhir::stu3::proto::Instant& ElementDefinition_MinValue::_internal_instant() const {
  return *min_value_.instant_;
}
inline ::google::fhir::stu3::proto::Instant* ElementDefinition_MinValue::release_instant() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.MinValue.instant)
  if (has_instant()) {
    clear_has_min_value();
      ::google::fhir::stu3::proto::Instant* temp = min_value_.instant_;
    min_value_.instant_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Instant& ElementDefinition_MinValue::instant() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.MinValue.instant)
  return has_instant()
      ? *min_value_.instant_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Instant*>(&::google::fhir::stu3::proto::_Instant_default_instance_);
}
inline ::google::fhir::stu3::proto::Instant* ElementDefinition_MinValue::mutable_instant() {
  if (!has_instant()) {
    clear_min_value();
    set_has_instant();
    min_value_.instant_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Instant >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.MinValue.instant)
  return min_value_.instant_;
}

// .google.fhir.stu3.proto.Time time = 4;
inline bool ElementDefinition_MinValue::has_time() const {
  return min_value_case() == kTime;
}
inline void ElementDefinition_MinValue::set_has_time() {
  _oneof_case_[0] = kTime;
}
inline const ::google::fhir::stu3::proto::Time& ElementDefinition_MinValue::_internal_time() const {
  return *min_value_.time_;
}
inline ::google::fhir::stu3::proto::Time* ElementDefinition_MinValue::release_time() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.MinValue.time)
  if (has_time()) {
    clear_has_min_value();
      ::google::fhir::stu3::proto::Time* temp = min_value_.time_;
    min_value_.time_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Time& ElementDefinition_MinValue::time() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.MinValue.time)
  return has_time()
      ? *min_value_.time_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Time*>(&::google::fhir::stu3::proto::_Time_default_instance_);
}
inline ::google::fhir::stu3::proto::Time* ElementDefinition_MinValue::mutable_time() {
  if (!has_time()) {
    clear_min_value();
    set_has_time();
    min_value_.time_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Time >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.MinValue.time)
  return min_value_.time_;
}

// .google.fhir.stu3.proto.Decimal decimal = 5;
inline bool ElementDefinition_MinValue::has_decimal() const {
  return min_value_case() == kDecimal;
}
inline void ElementDefinition_MinValue::set_has_decimal() {
  _oneof_case_[0] = kDecimal;
}
inline const ::google::fhir::stu3::proto::Decimal& ElementDefinition_MinValue::_internal_decimal() const {
  return *min_value_.decimal_;
}
inline ::google::fhir::stu3::proto::Decimal* ElementDefinition_MinValue::release_decimal() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.MinValue.decimal)
  if (has_decimal()) {
    clear_has_min_value();
      ::google::fhir::stu3::proto::Decimal* temp = min_value_.decimal_;
    min_value_.decimal_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Decimal& ElementDefinition_MinValue::decimal() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.MinValue.decimal)
  return has_decimal()
      ? *min_value_.decimal_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Decimal*>(&::google::fhir::stu3::proto::_Decimal_default_instance_);
}
inline ::google::fhir::stu3::proto::Decimal* ElementDefinition_MinValue::mutable_decimal() {
  if (!has_decimal()) {
    clear_min_value();
    set_has_decimal();
    min_value_.decimal_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Decimal >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.MinValue.decimal)
  return min_value_.decimal_;
}

// .google.fhir.stu3.proto.Integer integer = 6;
inline bool ElementDefinition_MinValue::has_integer() const {
  return min_value_case() == kInteger;
}
inline void ElementDefinition_MinValue::set_has_integer() {
  _oneof_case_[0] = kInteger;
}
inline const ::google::fhir::stu3::proto::Integer& ElementDefinition_MinValue::_internal_integer() const {
  return *min_value_.integer_;
}
inline ::google::fhir::stu3::proto::Integer* ElementDefinition_MinValue::release_integer() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.MinValue.integer)
  if (has_integer()) {
    clear_has_min_value();
      ::google::fhir::stu3::proto::Integer* temp = min_value_.integer_;
    min_value_.integer_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Integer& ElementDefinition_MinValue::integer() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.MinValue.integer)
  return has_integer()
      ? *min_value_.integer_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Integer*>(&::google::fhir::stu3::proto::_Integer_default_instance_);
}
inline ::google::fhir::stu3::proto::Integer* ElementDefinition_MinValue::mutable_integer() {
  if (!has_integer()) {
    clear_min_value();
    set_has_integer();
    min_value_.integer_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Integer >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.MinValue.integer)
  return min_value_.integer_;
}

// .google.fhir.stu3.proto.PositiveInt positive_int = 7;
inline bool ElementDefinition_MinValue::has_positive_int() const {
  return min_value_case() == kPositiveInt;
}
inline void ElementDefinition_MinValue::set_has_positive_int() {
  _oneof_case_[0] = kPositiveInt;
}
inline const ::google::fhir::stu3::proto::PositiveInt& ElementDefinition_MinValue::_internal_positive_int() const {
  return *min_value_.positive_int_;
}
inline ::google::fhir::stu3::proto::PositiveInt* ElementDefinition_MinValue::release_positive_int() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.MinValue.positive_int)
  if (has_positive_int()) {
    clear_has_min_value();
      ::google::fhir::stu3::proto::PositiveInt* temp = min_value_.positive_int_;
    min_value_.positive_int_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::PositiveInt& ElementDefinition_MinValue::positive_int() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.MinValue.positive_int)
  return has_positive_int()
      ? *min_value_.positive_int_
      : *reinterpret_cast< ::google::fhir::stu3::proto::PositiveInt*>(&::google::fhir::stu3::proto::_PositiveInt_default_instance_);
}
inline ::google::fhir::stu3::proto::PositiveInt* ElementDefinition_MinValue::mutable_positive_int() {
  if (!has_positive_int()) {
    clear_min_value();
    set_has_positive_int();
    min_value_.positive_int_ = CreateMaybeMessage< ::google::fhir::stu3::proto::PositiveInt >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.MinValue.positive_int)
  return min_value_.positive_int_;
}

// .google.fhir.stu3.proto.UnsignedInt unsigned_int = 8;
inline bool ElementDefinition_MinValue::has_unsigned_int() const {
  return min_value_case() == kUnsignedInt;
}
inline void ElementDefinition_MinValue::set_has_unsigned_int() {
  _oneof_case_[0] = kUnsignedInt;
}
inline const ::google::fhir::stu3::proto::UnsignedInt& ElementDefinition_MinValue::_internal_unsigned_int() const {
  return *min_value_.unsigned_int_;
}
inline ::google::fhir::stu3::proto::UnsignedInt* ElementDefinition_MinValue::release_unsigned_int() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.MinValue.unsigned_int)
  if (has_unsigned_int()) {
    clear_has_min_value();
      ::google::fhir::stu3::proto::UnsignedInt* temp = min_value_.unsigned_int_;
    min_value_.unsigned_int_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::UnsignedInt& ElementDefinition_MinValue::unsigned_int() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.MinValue.unsigned_int)
  return has_unsigned_int()
      ? *min_value_.unsigned_int_
      : *reinterpret_cast< ::google::fhir::stu3::proto::UnsignedInt*>(&::google::fhir::stu3::proto::_UnsignedInt_default_instance_);
}
inline ::google::fhir::stu3::proto::UnsignedInt* ElementDefinition_MinValue::mutable_unsigned_int() {
  if (!has_unsigned_int()) {
    clear_min_value();
    set_has_unsigned_int();
    min_value_.unsigned_int_ = CreateMaybeMessage< ::google::fhir::stu3::proto::UnsignedInt >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.MinValue.unsigned_int)
  return min_value_.unsigned_int_;
}

// .google.fhir.stu3.proto.Quantity quantity = 9;
inline bool ElementDefinition_MinValue::has_quantity() const {
  return min_value_case() == kQuantity;
}
inline void ElementDefinition_MinValue::set_has_quantity() {
  _oneof_case_[0] = kQuantity;
}
inline const ::google::fhir::stu3::proto::Quantity& ElementDefinition_MinValue::_internal_quantity() const {
  return *min_value_.quantity_;
}
inline ::google::fhir::stu3::proto::Quantity* ElementDefinition_MinValue::release_quantity() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.MinValue.quantity)
  if (has_quantity()) {
    clear_has_min_value();
      ::google::fhir::stu3::proto::Quantity* temp = min_value_.quantity_;
    min_value_.quantity_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Quantity& ElementDefinition_MinValue::quantity() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.MinValue.quantity)
  return has_quantity()
      ? *min_value_.quantity_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Quantity*>(&::google::fhir::stu3::proto::_Quantity_default_instance_);
}
inline ::google::fhir::stu3::proto::Quantity* ElementDefinition_MinValue::mutable_quantity() {
  if (!has_quantity()) {
    clear_min_value();
    set_has_quantity();
    min_value_.quantity_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Quantity >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.MinValue.quantity)
  return min_value_.quantity_;
}

inline bool ElementDefinition_MinValue::has_min_value() const {
  return min_value_case() != MIN_VALUE_NOT_SET;
}
inline void ElementDefinition_MinValue::clear_has_min_value() {
  _oneof_case_[0] = MIN_VALUE_NOT_SET;
}
inline ElementDefinition_MinValue::MinValueCase ElementDefinition_MinValue::min_value_case() const {
  return ElementDefinition_MinValue::MinValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ElementDefinition_MaxValue

// .google.fhir.stu3.proto.Date date = 1;
inline bool ElementDefinition_MaxValue::has_date() const {
  return max_value_case() == kDate;
}
inline void ElementDefinition_MaxValue::set_has_date() {
  _oneof_case_[0] = kDate;
}
inline const ::google::fhir::stu3::proto::Date& ElementDefinition_MaxValue::_internal_date() const {
  return *max_value_.date_;
}
inline ::google::fhir::stu3::proto::Date* ElementDefinition_MaxValue::release_date() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.MaxValue.date)
  if (has_date()) {
    clear_has_max_value();
      ::google::fhir::stu3::proto::Date* temp = max_value_.date_;
    max_value_.date_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Date& ElementDefinition_MaxValue::date() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.MaxValue.date)
  return has_date()
      ? *max_value_.date_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Date*>(&::google::fhir::stu3::proto::_Date_default_instance_);
}
inline ::google::fhir::stu3::proto::Date* ElementDefinition_MaxValue::mutable_date() {
  if (!has_date()) {
    clear_max_value();
    set_has_date();
    max_value_.date_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Date >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.MaxValue.date)
  return max_value_.date_;
}

// .google.fhir.stu3.proto.DateTime date_time = 2;
inline bool ElementDefinition_MaxValue::has_date_time() const {
  return max_value_case() == kDateTime;
}
inline void ElementDefinition_MaxValue::set_has_date_time() {
  _oneof_case_[0] = kDateTime;
}
inline const ::google::fhir::stu3::proto::DateTime& ElementDefinition_MaxValue::_internal_date_time() const {
  return *max_value_.date_time_;
}
inline ::google::fhir::stu3::proto::DateTime* ElementDefinition_MaxValue::release_date_time() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.MaxValue.date_time)
  if (has_date_time()) {
    clear_has_max_value();
      ::google::fhir::stu3::proto::DateTime* temp = max_value_.date_time_;
    max_value_.date_time_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::DateTime& ElementDefinition_MaxValue::date_time() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.MaxValue.date_time)
  return has_date_time()
      ? *max_value_.date_time_
      : *reinterpret_cast< ::google::fhir::stu3::proto::DateTime*>(&::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* ElementDefinition_MaxValue::mutable_date_time() {
  if (!has_date_time()) {
    clear_max_value();
    set_has_date_time();
    max_value_.date_time_ = CreateMaybeMessage< ::google::fhir::stu3::proto::DateTime >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.MaxValue.date_time)
  return max_value_.date_time_;
}

// .google.fhir.stu3.proto.Instant instant = 3;
inline bool ElementDefinition_MaxValue::has_instant() const {
  return max_value_case() == kInstant;
}
inline void ElementDefinition_MaxValue::set_has_instant() {
  _oneof_case_[0] = kInstant;
}
inline const ::google::fhir::stu3::proto::Instant& ElementDefinition_MaxValue::_internal_instant() const {
  return *max_value_.instant_;
}
inline ::google::fhir::stu3::proto::Instant* ElementDefinition_MaxValue::release_instant() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.MaxValue.instant)
  if (has_instant()) {
    clear_has_max_value();
      ::google::fhir::stu3::proto::Instant* temp = max_value_.instant_;
    max_value_.instant_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Instant& ElementDefinition_MaxValue::instant() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.MaxValue.instant)
  return has_instant()
      ? *max_value_.instant_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Instant*>(&::google::fhir::stu3::proto::_Instant_default_instance_);
}
inline ::google::fhir::stu3::proto::Instant* ElementDefinition_MaxValue::mutable_instant() {
  if (!has_instant()) {
    clear_max_value();
    set_has_instant();
    max_value_.instant_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Instant >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.MaxValue.instant)
  return max_value_.instant_;
}

// .google.fhir.stu3.proto.Time time = 4;
inline bool ElementDefinition_MaxValue::has_time() const {
  return max_value_case() == kTime;
}
inline void ElementDefinition_MaxValue::set_has_time() {
  _oneof_case_[0] = kTime;
}
inline const ::google::fhir::stu3::proto::Time& ElementDefinition_MaxValue::_internal_time() const {
  return *max_value_.time_;
}
inline ::google::fhir::stu3::proto::Time* ElementDefinition_MaxValue::release_time() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.MaxValue.time)
  if (has_time()) {
    clear_has_max_value();
      ::google::fhir::stu3::proto::Time* temp = max_value_.time_;
    max_value_.time_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Time& ElementDefinition_MaxValue::time() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.MaxValue.time)
  return has_time()
      ? *max_value_.time_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Time*>(&::google::fhir::stu3::proto::_Time_default_instance_);
}
inline ::google::fhir::stu3::proto::Time* ElementDefinition_MaxValue::mutable_time() {
  if (!has_time()) {
    clear_max_value();
    set_has_time();
    max_value_.time_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Time >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.MaxValue.time)
  return max_value_.time_;
}

// .google.fhir.stu3.proto.Decimal decimal = 5;
inline bool ElementDefinition_MaxValue::has_decimal() const {
  return max_value_case() == kDecimal;
}
inline void ElementDefinition_MaxValue::set_has_decimal() {
  _oneof_case_[0] = kDecimal;
}
inline const ::google::fhir::stu3::proto::Decimal& ElementDefinition_MaxValue::_internal_decimal() const {
  return *max_value_.decimal_;
}
inline ::google::fhir::stu3::proto::Decimal* ElementDefinition_MaxValue::release_decimal() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.MaxValue.decimal)
  if (has_decimal()) {
    clear_has_max_value();
      ::google::fhir::stu3::proto::Decimal* temp = max_value_.decimal_;
    max_value_.decimal_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Decimal& ElementDefinition_MaxValue::decimal() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.MaxValue.decimal)
  return has_decimal()
      ? *max_value_.decimal_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Decimal*>(&::google::fhir::stu3::proto::_Decimal_default_instance_);
}
inline ::google::fhir::stu3::proto::Decimal* ElementDefinition_MaxValue::mutable_decimal() {
  if (!has_decimal()) {
    clear_max_value();
    set_has_decimal();
    max_value_.decimal_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Decimal >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.MaxValue.decimal)
  return max_value_.decimal_;
}

// .google.fhir.stu3.proto.Integer integer = 6;
inline bool ElementDefinition_MaxValue::has_integer() const {
  return max_value_case() == kInteger;
}
inline void ElementDefinition_MaxValue::set_has_integer() {
  _oneof_case_[0] = kInteger;
}
inline const ::google::fhir::stu3::proto::Integer& ElementDefinition_MaxValue::_internal_integer() const {
  return *max_value_.integer_;
}
inline ::google::fhir::stu3::proto::Integer* ElementDefinition_MaxValue::release_integer() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.MaxValue.integer)
  if (has_integer()) {
    clear_has_max_value();
      ::google::fhir::stu3::proto::Integer* temp = max_value_.integer_;
    max_value_.integer_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Integer& ElementDefinition_MaxValue::integer() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.MaxValue.integer)
  return has_integer()
      ? *max_value_.integer_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Integer*>(&::google::fhir::stu3::proto::_Integer_default_instance_);
}
inline ::google::fhir::stu3::proto::Integer* ElementDefinition_MaxValue::mutable_integer() {
  if (!has_integer()) {
    clear_max_value();
    set_has_integer();
    max_value_.integer_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Integer >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.MaxValue.integer)
  return max_value_.integer_;
}

// .google.fhir.stu3.proto.PositiveInt positive_int = 7;
inline bool ElementDefinition_MaxValue::has_positive_int() const {
  return max_value_case() == kPositiveInt;
}
inline void ElementDefinition_MaxValue::set_has_positive_int() {
  _oneof_case_[0] = kPositiveInt;
}
inline const ::google::fhir::stu3::proto::PositiveInt& ElementDefinition_MaxValue::_internal_positive_int() const {
  return *max_value_.positive_int_;
}
inline ::google::fhir::stu3::proto::PositiveInt* ElementDefinition_MaxValue::release_positive_int() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.MaxValue.positive_int)
  if (has_positive_int()) {
    clear_has_max_value();
      ::google::fhir::stu3::proto::PositiveInt* temp = max_value_.positive_int_;
    max_value_.positive_int_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::PositiveInt& ElementDefinition_MaxValue::positive_int() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.MaxValue.positive_int)
  return has_positive_int()
      ? *max_value_.positive_int_
      : *reinterpret_cast< ::google::fhir::stu3::proto::PositiveInt*>(&::google::fhir::stu3::proto::_PositiveInt_default_instance_);
}
inline ::google::fhir::stu3::proto::PositiveInt* ElementDefinition_MaxValue::mutable_positive_int() {
  if (!has_positive_int()) {
    clear_max_value();
    set_has_positive_int();
    max_value_.positive_int_ = CreateMaybeMessage< ::google::fhir::stu3::proto::PositiveInt >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.MaxValue.positive_int)
  return max_value_.positive_int_;
}

// .google.fhir.stu3.proto.UnsignedInt unsigned_int = 8;
inline bool ElementDefinition_MaxValue::has_unsigned_int() const {
  return max_value_case() == kUnsignedInt;
}
inline void ElementDefinition_MaxValue::set_has_unsigned_int() {
  _oneof_case_[0] = kUnsignedInt;
}
inline const ::google::fhir::stu3::proto::UnsignedInt& ElementDefinition_MaxValue::_internal_unsigned_int() const {
  return *max_value_.unsigned_int_;
}
inline ::google::fhir::stu3::proto::UnsignedInt* ElementDefinition_MaxValue::release_unsigned_int() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.MaxValue.unsigned_int)
  if (has_unsigned_int()) {
    clear_has_max_value();
      ::google::fhir::stu3::proto::UnsignedInt* temp = max_value_.unsigned_int_;
    max_value_.unsigned_int_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::UnsignedInt& ElementDefinition_MaxValue::unsigned_int() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.MaxValue.unsigned_int)
  return has_unsigned_int()
      ? *max_value_.unsigned_int_
      : *reinterpret_cast< ::google::fhir::stu3::proto::UnsignedInt*>(&::google::fhir::stu3::proto::_UnsignedInt_default_instance_);
}
inline ::google::fhir::stu3::proto::UnsignedInt* ElementDefinition_MaxValue::mutable_unsigned_int() {
  if (!has_unsigned_int()) {
    clear_max_value();
    set_has_unsigned_int();
    max_value_.unsigned_int_ = CreateMaybeMessage< ::google::fhir::stu3::proto::UnsignedInt >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.MaxValue.unsigned_int)
  return max_value_.unsigned_int_;
}

// .google.fhir.stu3.proto.Quantity quantity = 9;
inline bool ElementDefinition_MaxValue::has_quantity() const {
  return max_value_case() == kQuantity;
}
inline void ElementDefinition_MaxValue::set_has_quantity() {
  _oneof_case_[0] = kQuantity;
}
inline const ::google::fhir::stu3::proto::Quantity& ElementDefinition_MaxValue::_internal_quantity() const {
  return *max_value_.quantity_;
}
inline ::google::fhir::stu3::proto::Quantity* ElementDefinition_MaxValue::release_quantity() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.MaxValue.quantity)
  if (has_quantity()) {
    clear_has_max_value();
      ::google::fhir::stu3::proto::Quantity* temp = max_value_.quantity_;
    max_value_.quantity_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Quantity& ElementDefinition_MaxValue::quantity() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.MaxValue.quantity)
  return has_quantity()
      ? *max_value_.quantity_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Quantity*>(&::google::fhir::stu3::proto::_Quantity_default_instance_);
}
inline ::google::fhir::stu3::proto::Quantity* ElementDefinition_MaxValue::mutable_quantity() {
  if (!has_quantity()) {
    clear_max_value();
    set_has_quantity();
    max_value_.quantity_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Quantity >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.MaxValue.quantity)
  return max_value_.quantity_;
}

inline bool ElementDefinition_MaxValue::has_max_value() const {
  return max_value_case() != MAX_VALUE_NOT_SET;
}
inline void ElementDefinition_MaxValue::clear_has_max_value() {
  _oneof_case_[0] = MAX_VALUE_NOT_SET;
}
inline ElementDefinition_MaxValue::MaxValueCase ElementDefinition_MaxValue::max_value_case() const {
  return ElementDefinition_MaxValue::MaxValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ElementDefinition_Constraint

// .google.fhir.stu3.proto.String id = 1;
inline bool ElementDefinition_Constraint::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Constraint::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Constraint::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Constraint.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Constraint::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Constraint.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Constraint::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Constraint.id)
  return id_;
}
inline void ElementDefinition_Constraint::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Constraint.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int ElementDefinition_Constraint::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ElementDefinition_Constraint::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Constraint.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ElementDefinition_Constraint::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ElementDefinition.Constraint.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ElementDefinition_Constraint::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Constraint.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ElementDefinition_Constraint::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ElementDefinition.Constraint.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ElementDefinition_Constraint::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ElementDefinition.Constraint.extension)
  return extension_;
}

// .google.fhir.stu3.proto.Id key = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool ElementDefinition_Constraint::has_key() const {
  return this != internal_default_instance() && key_ != NULL;
}
inline const ::google::fhir::stu3::proto::Id& ElementDefinition_Constraint::_internal_key() const {
  return *key_;
}
inline const ::google::fhir::stu3::proto::Id& ElementDefinition_Constraint::key() const {
  const ::google::fhir::stu3::proto::Id* p = key_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Constraint.key)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Id*>(
      &::google::fhir::stu3::proto::_Id_default_instance_);
}
inline ::google::fhir::stu3::proto::Id* ElementDefinition_Constraint::release_key() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Constraint.key)
  
  ::google::fhir::stu3::proto::Id* temp = key_;
  key_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Id* ElementDefinition_Constraint::mutable_key() {
  
  if (key_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Id>(GetArenaNoVirtual());
    key_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Constraint.key)
  return key_;
}
inline void ElementDefinition_Constraint::set_allocated_key(::google::fhir::stu3::proto::Id* key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(key_);
  }
  if (key) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, key, submessage_arena);
    }
    
  } else {
    
  }
  key_ = key;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Constraint.key)
}

// .google.fhir.stu3.proto.String requirements = 4;
inline bool ElementDefinition_Constraint::has_requirements() const {
  return this != internal_default_instance() && requirements_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Constraint::_internal_requirements() const {
  return *requirements_;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Constraint::requirements() const {
  const ::google::fhir::stu3::proto::String* p = requirements_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Constraint.requirements)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Constraint::release_requirements() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Constraint.requirements)
  
  ::google::fhir::stu3::proto::String* temp = requirements_;
  requirements_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Constraint::mutable_requirements() {
  
  if (requirements_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    requirements_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Constraint.requirements)
  return requirements_;
}
inline void ElementDefinition_Constraint::set_allocated_requirements(::google::fhir::stu3::proto::String* requirements) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(requirements_);
  }
  if (requirements) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      requirements = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, requirements, submessage_arena);
    }
    
  } else {
    
  }
  requirements_ = requirements;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Constraint.requirements)
}

// .google.fhir.stu3.proto.ConstraintSeverityCode severity = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool ElementDefinition_Constraint::has_severity() const {
  return this != internal_default_instance() && severity_ != NULL;
}
inline const ::google::fhir::stu3::proto::ConstraintSeverityCode& ElementDefinition_Constraint::_internal_severity() const {
  return *severity_;
}
inline const ::google::fhir::stu3::proto::ConstraintSeverityCode& ElementDefinition_Constraint::severity() const {
  const ::google::fhir::stu3::proto::ConstraintSeverityCode* p = severity_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Constraint.severity)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::ConstraintSeverityCode*>(
      &::google::fhir::stu3::proto::_ConstraintSeverityCode_default_instance_);
}
inline ::google::fhir::stu3::proto::ConstraintSeverityCode* ElementDefinition_Constraint::release_severity() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Constraint.severity)
  
  ::google::fhir::stu3::proto::ConstraintSeverityCode* temp = severity_;
  severity_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::ConstraintSeverityCode* ElementDefinition_Constraint::mutable_severity() {
  
  if (severity_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::ConstraintSeverityCode>(GetArenaNoVirtual());
    severity_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Constraint.severity)
  return severity_;
}
inline void ElementDefinition_Constraint::set_allocated_severity(::google::fhir::stu3::proto::ConstraintSeverityCode* severity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(severity_);
  }
  if (severity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      severity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, severity, submessage_arena);
    }
    
  } else {
    
  }
  severity_ = severity;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Constraint.severity)
}

// .google.fhir.stu3.proto.String human = 6 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool ElementDefinition_Constraint::has_human() const {
  return this != internal_default_instance() && human_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Constraint::_internal_human() const {
  return *human_;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Constraint::human() const {
  const ::google::fhir::stu3::proto::String* p = human_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Constraint.human)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Constraint::release_human() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Constraint.human)
  
  ::google::fhir::stu3::proto::String* temp = human_;
  human_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Constraint::mutable_human() {
  
  if (human_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    human_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Constraint.human)
  return human_;
}
inline void ElementDefinition_Constraint::set_allocated_human(::google::fhir::stu3::proto::String* human) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(human_);
  }
  if (human) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      human = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, human, submessage_arena);
    }
    
  } else {
    
  }
  human_ = human;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Constraint.human)
}

// .google.fhir.stu3.proto.String expression = 7 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool ElementDefinition_Constraint::has_expression() const {
  return this != internal_default_instance() && expression_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Constraint::_internal_expression() const {
  return *expression_;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Constraint::expression() const {
  const ::google::fhir::stu3::proto::String* p = expression_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Constraint.expression)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Constraint::release_expression() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Constraint.expression)
  
  ::google::fhir::stu3::proto::String* temp = expression_;
  expression_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Constraint::mutable_expression() {
  
  if (expression_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    expression_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Constraint.expression)
  return expression_;
}
inline void ElementDefinition_Constraint::set_allocated_expression(::google::fhir::stu3::proto::String* expression) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(expression_);
  }
  if (expression) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      expression = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, expression, submessage_arena);
    }
    
  } else {
    
  }
  expression_ = expression;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Constraint.expression)
}

// .google.fhir.stu3.proto.String xpath = 8;
inline bool ElementDefinition_Constraint::has_xpath() const {
  return this != internal_default_instance() && xpath_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Constraint::_internal_xpath() const {
  return *xpath_;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Constraint::xpath() const {
  const ::google::fhir::stu3::proto::String* p = xpath_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Constraint.xpath)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Constraint::release_xpath() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Constraint.xpath)
  
  ::google::fhir::stu3::proto::String* temp = xpath_;
  xpath_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Constraint::mutable_xpath() {
  
  if (xpath_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    xpath_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Constraint.xpath)
  return xpath_;
}
inline void ElementDefinition_Constraint::set_allocated_xpath(::google::fhir::stu3::proto::String* xpath) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(xpath_);
  }
  if (xpath) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      xpath = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, xpath, submessage_arena);
    }
    
  } else {
    
  }
  xpath_ = xpath;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Constraint.xpath)
}

// .google.fhir.stu3.proto.Uri source = 9;
inline bool ElementDefinition_Constraint::has_source() const {
  return this != internal_default_instance() && source_ != NULL;
}
inline const ::google::fhir::stu3::proto::Uri& ElementDefinition_Constraint::_internal_source() const {
  return *source_;
}
inline const ::google::fhir::stu3::proto::Uri& ElementDefinition_Constraint::source() const {
  const ::google::fhir::stu3::proto::Uri* p = source_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Constraint.source)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Uri*>(
      &::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* ElementDefinition_Constraint::release_source() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Constraint.source)
  
  ::google::fhir::stu3::proto::Uri* temp = source_;
  source_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Uri* ElementDefinition_Constraint::mutable_source() {
  
  if (source_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Uri>(GetArenaNoVirtual());
    source_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Constraint.source)
  return source_;
}
inline void ElementDefinition_Constraint::set_allocated_source(::google::fhir::stu3::proto::Uri* source) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(source_);
  }
  if (source) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      source = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source, submessage_arena);
    }
    
  } else {
    
  }
  source_ = source;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Constraint.source)
}

// -------------------------------------------------------------------

// ElementDefinition_ElementDefinitionBinding_ValueSet

// .google.fhir.stu3.proto.Uri uri = 1;
inline bool ElementDefinition_ElementDefinitionBinding_ValueSet::has_uri() const {
  return value_set_case() == kUri;
}
inline void ElementDefinition_ElementDefinitionBinding_ValueSet::set_has_uri() {
  _oneof_case_[0] = kUri;
}
inline const ::google::fhir::stu3::proto::Uri& ElementDefinition_ElementDefinitionBinding_ValueSet::_internal_uri() const {
  return *value_set_.uri_;
}
inline ::google::fhir::stu3::proto::Uri* ElementDefinition_ElementDefinitionBinding_ValueSet::release_uri() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet.uri)
  if (has_uri()) {
    clear_has_value_set();
      ::google::fhir::stu3::proto::Uri* temp = value_set_.uri_;
    value_set_.uri_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Uri& ElementDefinition_ElementDefinitionBinding_ValueSet::uri() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet.uri)
  return has_uri()
      ? *value_set_.uri_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Uri*>(&::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* ElementDefinition_ElementDefinitionBinding_ValueSet::mutable_uri() {
  if (!has_uri()) {
    clear_value_set();
    set_has_uri();
    value_set_.uri_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Uri >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet.uri)
  return value_set_.uri_;
}

// .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ValueSet"];
inline bool ElementDefinition_ElementDefinitionBinding_ValueSet::has_reference() const {
  return value_set_case() == kReference;
}
inline void ElementDefinition_ElementDefinitionBinding_ValueSet::set_has_reference() {
  _oneof_case_[0] = kReference;
}
inline const ::google::fhir::stu3::proto::Reference& ElementDefinition_ElementDefinitionBinding_ValueSet::_internal_reference() const {
  return *value_set_.reference_;
}
inline ::google::fhir::stu3::proto::Reference* ElementDefinition_ElementDefinitionBinding_ValueSet::release_reference() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet.reference)
  if (has_reference()) {
    clear_has_value_set();
      ::google::fhir::stu3::proto::Reference* temp = value_set_.reference_;
    value_set_.reference_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Reference& ElementDefinition_ElementDefinitionBinding_ValueSet::reference() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet.reference)
  return has_reference()
      ? *value_set_.reference_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Reference*>(&::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* ElementDefinition_ElementDefinitionBinding_ValueSet::mutable_reference() {
  if (!has_reference()) {
    clear_value_set();
    set_has_reference();
    value_set_.reference_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Reference >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet.reference)
  return value_set_.reference_;
}

inline bool ElementDefinition_ElementDefinitionBinding_ValueSet::has_value_set() const {
  return value_set_case() != VALUE_SET_NOT_SET;
}
inline void ElementDefinition_ElementDefinitionBinding_ValueSet::clear_has_value_set() {
  _oneof_case_[0] = VALUE_SET_NOT_SET;
}
inline ElementDefinition_ElementDefinitionBinding_ValueSet::ValueSetCase ElementDefinition_ElementDefinitionBinding_ValueSet::value_set_case() const {
  return ElementDefinition_ElementDefinitionBinding_ValueSet::ValueSetCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ElementDefinition_ElementDefinitionBinding

// .google.fhir.stu3.proto.String id = 1;
inline bool ElementDefinition_ElementDefinitionBinding::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_ElementDefinitionBinding::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_ElementDefinitionBinding::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_ElementDefinitionBinding::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_ElementDefinitionBinding::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.id)
  return id_;
}
inline void ElementDefinition_ElementDefinitionBinding::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int ElementDefinition_ElementDefinitionBinding::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ElementDefinition_ElementDefinitionBinding::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ElementDefinition_ElementDefinitionBinding::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ElementDefinition_ElementDefinitionBinding::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ElementDefinition_ElementDefinitionBinding::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ElementDefinition_ElementDefinitionBinding::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.extension)
  return extension_;
}

// .google.fhir.stu3.proto.BindingStrengthCode strength = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool ElementDefinition_ElementDefinitionBinding::has_strength() const {
  return this != internal_default_instance() && strength_ != NULL;
}
inline const ::google::fhir::stu3::proto::BindingStrengthCode& ElementDefinition_ElementDefinitionBinding::_internal_strength() const {
  return *strength_;
}
inline const ::google::fhir::stu3::proto::BindingStrengthCode& ElementDefinition_ElementDefinitionBinding::strength() const {
  const ::google::fhir::stu3::proto::BindingStrengthCode* p = strength_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.strength)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::BindingStrengthCode*>(
      &::google::fhir::stu3::proto::_BindingStrengthCode_default_instance_);
}
inline ::google::fhir::stu3::proto::BindingStrengthCode* ElementDefinition_ElementDefinitionBinding::release_strength() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.strength)
  
  ::google::fhir::stu3::proto::BindingStrengthCode* temp = strength_;
  strength_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::BindingStrengthCode* ElementDefinition_ElementDefinitionBinding::mutable_strength() {
  
  if (strength_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::BindingStrengthCode>(GetArenaNoVirtual());
    strength_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.strength)
  return strength_;
}
inline void ElementDefinition_ElementDefinitionBinding::set_allocated_strength(::google::fhir::stu3::proto::BindingStrengthCode* strength) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(strength_);
  }
  if (strength) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      strength = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, strength, submessage_arena);
    }
    
  } else {
    
  }
  strength_ = strength;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.strength)
}

// .google.fhir.stu3.proto.String description = 4;
inline bool ElementDefinition_ElementDefinitionBinding::has_description() const {
  return this != internal_default_instance() && description_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_ElementDefinitionBinding::_internal_description() const {
  return *description_;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_ElementDefinitionBinding::description() const {
  const ::google::fhir::stu3::proto::String* p = description_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.description)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_ElementDefinitionBinding::release_description() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.description)
  
  ::google::fhir::stu3::proto::String* temp = description_;
  description_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_ElementDefinitionBinding::mutable_description() {
  
  if (description_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    description_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.description)
  return description_;
}
inline void ElementDefinition_ElementDefinitionBinding::set_allocated_description(::google::fhir::stu3::proto::String* description) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(description_);
  }
  if (description) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      description = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, description, submessage_arena);
    }
    
  } else {
    
  }
  description_ = description;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.description)
}

// .google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet value_set = 5 [(.google.fhir.stu3.proto.is_choice_type) = true];
inline bool ElementDefinition_ElementDefinitionBinding::has_value_set() const {
  return this != internal_default_instance() && value_set_ != NULL;
}
inline void ElementDefinition_ElementDefinitionBinding::clear_value_set() {
  if (GetArenaNoVirtual() == NULL && value_set_ != NULL) {
    delete value_set_;
  }
  value_set_ = NULL;
}
inline const ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSet& ElementDefinition_ElementDefinitionBinding::_internal_value_set() const {
  return *value_set_;
}
inline const ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSet& ElementDefinition_ElementDefinitionBinding::value_set() const {
  const ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSet* p = value_set_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.value_set)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSet*>(
      &::google::fhir::stu3::proto::_ElementDefinition_ElementDefinitionBinding_ValueSet_default_instance_);
}
inline ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSet* ElementDefinition_ElementDefinitionBinding::release_value_set() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.value_set)
  
  ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSet* temp = value_set_;
  value_set_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSet* ElementDefinition_ElementDefinitionBinding::mutable_value_set() {
  
  if (value_set_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSet>(GetArenaNoVirtual());
    value_set_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.value_set)
  return value_set_;
}
inline void ElementDefinition_ElementDefinitionBinding::set_allocated_value_set(::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding_ValueSet* value_set) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete value_set_;
  }
  if (value_set) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      value_set = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value_set, submessage_arena);
    }
    
  } else {
    
  }
  value_set_ = value_set;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.value_set)
}

// -------------------------------------------------------------------

// ElementDefinition_Mapping

// .google.fhir.stu3.proto.String id = 1;
inline bool ElementDefinition_Mapping::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Mapping::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Mapping::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Mapping.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Mapping::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Mapping.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Mapping::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Mapping.id)
  return id_;
}
inline void ElementDefinition_Mapping::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Mapping.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int ElementDefinition_Mapping::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ElementDefinition_Mapping::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Mapping.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ElementDefinition_Mapping::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ElementDefinition.Mapping.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ElementDefinition_Mapping::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Mapping.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ElementDefinition_Mapping::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ElementDefinition.Mapping.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ElementDefinition_Mapping::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ElementDefinition.Mapping.extension)
  return extension_;
}

// .google.fhir.stu3.proto.Id identity = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool ElementDefinition_Mapping::has_identity() const {
  return this != internal_default_instance() && identity_ != NULL;
}
inline const ::google::fhir::stu3::proto::Id& ElementDefinition_Mapping::_internal_identity() const {
  return *identity_;
}
inline const ::google::fhir::stu3::proto::Id& ElementDefinition_Mapping::identity() const {
  const ::google::fhir::stu3::proto::Id* p = identity_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Mapping.identity)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Id*>(
      &::google::fhir::stu3::proto::_Id_default_instance_);
}
inline ::google::fhir::stu3::proto::Id* ElementDefinition_Mapping::release_identity() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Mapping.identity)
  
  ::google::fhir::stu3::proto::Id* temp = identity_;
  identity_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Id* ElementDefinition_Mapping::mutable_identity() {
  
  if (identity_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Id>(GetArenaNoVirtual());
    identity_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Mapping.identity)
  return identity_;
}
inline void ElementDefinition_Mapping::set_allocated_identity(::google::fhir::stu3::proto::Id* identity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(identity_);
  }
  if (identity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      identity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, identity, submessage_arena);
    }
    
  } else {
    
  }
  identity_ = identity;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Mapping.identity)
}

// .google.fhir.stu3.proto.MimeTypeCode language = 4;
inline bool ElementDefinition_Mapping::has_language() const {
  return this != internal_default_instance() && language_ != NULL;
}
inline const ::google::fhir::stu3::proto::MimeTypeCode& ElementDefinition_Mapping::_internal_language() const {
  return *language_;
}
inline const ::google::fhir::stu3::proto::MimeTypeCode& ElementDefinition_Mapping::language() const {
  const ::google::fhir::stu3::proto::MimeTypeCode* p = language_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Mapping.language)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::MimeTypeCode*>(
      &::google::fhir::stu3::proto::_MimeTypeCode_default_instance_);
}
inline ::google::fhir::stu3::proto::MimeTypeCode* ElementDefinition_Mapping::release_language() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Mapping.language)
  
  ::google::fhir::stu3::proto::MimeTypeCode* temp = language_;
  language_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::MimeTypeCode* ElementDefinition_Mapping::mutable_language() {
  
  if (language_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::MimeTypeCode>(GetArenaNoVirtual());
    language_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Mapping.language)
  return language_;
}
inline void ElementDefinition_Mapping::set_allocated_language(::google::fhir::stu3::proto::MimeTypeCode* language) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(language_);
  }
  if (language) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      language = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, language, submessage_arena);
    }
    
  } else {
    
  }
  language_ = language;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Mapping.language)
}

// .google.fhir.stu3.proto.String map = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool ElementDefinition_Mapping::has_map() const {
  return this != internal_default_instance() && map_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Mapping::_internal_map() const {
  return *map_;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Mapping::map() const {
  const ::google::fhir::stu3::proto::String* p = map_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Mapping.map)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Mapping::release_map() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Mapping.map)
  
  ::google::fhir::stu3::proto::String* temp = map_;
  map_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Mapping::mutable_map() {
  
  if (map_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    map_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Mapping.map)
  return map_;
}
inline void ElementDefinition_Mapping::set_allocated_map(::google::fhir::stu3::proto::String* map) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(map_);
  }
  if (map) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      map = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, map, submessage_arena);
    }
    
  } else {
    
  }
  map_ = map;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Mapping.map)
}

// .google.fhir.stu3.proto.String comment = 6;
inline bool ElementDefinition_Mapping::has_comment() const {
  return this != internal_default_instance() && comment_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Mapping::_internal_comment() const {
  return *comment_;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition_Mapping::comment() const {
  const ::google::fhir::stu3::proto::String* p = comment_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.Mapping.comment)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Mapping::release_comment() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.Mapping.comment)
  
  ::google::fhir::stu3::proto::String* temp = comment_;
  comment_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition_Mapping::mutable_comment() {
  
  if (comment_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    comment_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.Mapping.comment)
  return comment_;
}
inline void ElementDefinition_Mapping::set_allocated_comment(::google::fhir::stu3::proto::String* comment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(comment_);
  }
  if (comment) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comment, submessage_arena);
    }
    
  } else {
    
  }
  comment_ = comment;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.Mapping.comment)
}

// -------------------------------------------------------------------

// ElementDefinition

// .google.fhir.stu3.proto.String id = 1;
inline bool ElementDefinition::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.id)
  return id_;
}
inline void ElementDefinition::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int ElementDefinition::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ElementDefinition::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ElementDefinition::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ElementDefinition.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ElementDefinition::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ElementDefinition::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ElementDefinition.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ElementDefinition::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ElementDefinition.extension)
  return extension_;
}

// .google.fhir.stu3.proto.String path = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool ElementDefinition::has_path() const {
  return this != internal_default_instance() && path_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition::_internal_path() const {
  return *path_;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition::path() const {
  const ::google::fhir::stu3::proto::String* p = path_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.path)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition::release_path() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.path)
  
  ::google::fhir::stu3::proto::String* temp = path_;
  path_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition::mutable_path() {
  
  if (path_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    path_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.path)
  return path_;
}
inline void ElementDefinition::set_allocated_path(::google::fhir::stu3::proto::String* path) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(path_);
  }
  if (path) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      path = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, path, submessage_arena);
    }
    
  } else {
    
  }
  path_ = path;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.path)
}

// repeated .google.fhir.stu3.proto.PropertyRepresentationCode representation = 4;
inline int ElementDefinition::representation_size() const {
  return representation_.size();
}
inline ::google::fhir::stu3::proto::PropertyRepresentationCode* ElementDefinition::mutable_representation(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.representation)
  return representation_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::PropertyRepresentationCode >*
ElementDefinition::mutable_representation() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ElementDefinition.representation)
  return &representation_;
}
inline const ::google::fhir::stu3::proto::PropertyRepresentationCode& ElementDefinition::representation(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.representation)
  return representation_.Get(index);
}
inline ::google::fhir::stu3::proto::PropertyRepresentationCode* ElementDefinition::add_representation() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ElementDefinition.representation)
  return representation_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::PropertyRepresentationCode >&
ElementDefinition::representation() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ElementDefinition.representation)
  return representation_;
}

// .google.fhir.stu3.proto.String slice_name = 5;
inline bool ElementDefinition::has_slice_name() const {
  return this != internal_default_instance() && slice_name_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition::_internal_slice_name() const {
  return *slice_name_;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition::slice_name() const {
  const ::google::fhir::stu3::proto::String* p = slice_name_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.slice_name)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition::release_slice_name() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.slice_name)
  
  ::google::fhir::stu3::proto::String* temp = slice_name_;
  slice_name_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition::mutable_slice_name() {
  
  if (slice_name_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    slice_name_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.slice_name)
  return slice_name_;
}
inline void ElementDefinition::set_allocated_slice_name(::google::fhir::stu3::proto::String* slice_name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(slice_name_);
  }
  if (slice_name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      slice_name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, slice_name, submessage_arena);
    }
    
  } else {
    
  }
  slice_name_ = slice_name;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.slice_name)
}

// .google.fhir.stu3.proto.String label = 6;
inline bool ElementDefinition::has_label() const {
  return this != internal_default_instance() && label_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition::_internal_label() const {
  return *label_;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition::label() const {
  const ::google::fhir::stu3::proto::String* p = label_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.label)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition::release_label() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.label)
  
  ::google::fhir::stu3::proto::String* temp = label_;
  label_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition::mutable_label() {
  
  if (label_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    label_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.label)
  return label_;
}
inline void ElementDefinition::set_allocated_label(::google::fhir::stu3::proto::String* label) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(label_);
  }
  if (label) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      label = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, label, submessage_arena);
    }
    
  } else {
    
  }
  label_ = label;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.label)
}

// repeated .google.fhir.stu3.proto.Coding code = 7;
inline int ElementDefinition::code_size() const {
  return code_.size();
}
inline ::google::fhir::stu3::proto::Coding* ElementDefinition::mutable_code(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.code)
  return code_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Coding >*
ElementDefinition::mutable_code() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ElementDefinition.code)
  return &code_;
}
inline const ::google::fhir::stu3::proto::Coding& ElementDefinition::code(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.code)
  return code_.Get(index);
}
inline ::google::fhir::stu3::proto::Coding* ElementDefinition::add_code() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ElementDefinition.code)
  return code_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Coding >&
ElementDefinition::code() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ElementDefinition.code)
  return code_;
}

// .google.fhir.stu3.proto.ElementDefinition.Slicing slicing = 8;
inline bool ElementDefinition::has_slicing() const {
  return this != internal_default_instance() && slicing_ != NULL;
}
inline void ElementDefinition::clear_slicing() {
  if (GetArenaNoVirtual() == NULL && slicing_ != NULL) {
    delete slicing_;
  }
  slicing_ = NULL;
}
inline const ::google::fhir::stu3::proto::ElementDefinition_Slicing& ElementDefinition::_internal_slicing() const {
  return *slicing_;
}
inline const ::google::fhir::stu3::proto::ElementDefinition_Slicing& ElementDefinition::slicing() const {
  const ::google::fhir::stu3::proto::ElementDefinition_Slicing* p = slicing_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.slicing)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::ElementDefinition_Slicing*>(
      &::google::fhir::stu3::proto::_ElementDefinition_Slicing_default_instance_);
}
inline ::google::fhir::stu3::proto::ElementDefinition_Slicing* ElementDefinition::release_slicing() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.slicing)
  
  ::google::fhir::stu3::proto::ElementDefinition_Slicing* temp = slicing_;
  slicing_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::ElementDefinition_Slicing* ElementDefinition::mutable_slicing() {
  
  if (slicing_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::ElementDefinition_Slicing>(GetArenaNoVirtual());
    slicing_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.slicing)
  return slicing_;
}
inline void ElementDefinition::set_allocated_slicing(::google::fhir::stu3::proto::ElementDefinition_Slicing* slicing) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete slicing_;
  }
  if (slicing) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      slicing = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, slicing, submessage_arena);
    }
    
  } else {
    
  }
  slicing_ = slicing;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.slicing)
}

// .google.fhir.stu3.proto.String short = 9;
inline bool ElementDefinition::has_short_() const {
  return this != internal_default_instance() && short__ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition::_internal_short_() const {
  return *short__;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition::short_() const {
  const ::google::fhir::stu3::proto::String* p = short__;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.short)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition::release_short_() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.short)
  
  ::google::fhir::stu3::proto::String* temp = short__;
  short__ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition::mutable_short_() {
  
  if (short__ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    short__ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.short)
  return short__;
}
inline void ElementDefinition::set_allocated_short_(::google::fhir::stu3::proto::String* short_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(short__);
  }
  if (short_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      short_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, short_, submessage_arena);
    }
    
  } else {
    
  }
  short__ = short_;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.short)
}

// .google.fhir.stu3.proto.Markdown definition = 10;
inline bool ElementDefinition::has_definition() const {
  return this != internal_default_instance() && definition_ != NULL;
}
inline const ::google::fhir::stu3::proto::Markdown& ElementDefinition::_internal_definition() const {
  return *definition_;
}
inline const ::google::fhir::stu3::proto::Markdown& ElementDefinition::definition() const {
  const ::google::fhir::stu3::proto::Markdown* p = definition_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.definition)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Markdown*>(
      &::google::fhir::stu3::proto::_Markdown_default_instance_);
}
inline ::google::fhir::stu3::proto::Markdown* ElementDefinition::release_definition() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.definition)
  
  ::google::fhir::stu3::proto::Markdown* temp = definition_;
  definition_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Markdown* ElementDefinition::mutable_definition() {
  
  if (definition_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Markdown>(GetArenaNoVirtual());
    definition_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.definition)
  return definition_;
}
inline void ElementDefinition::set_allocated_definition(::google::fhir::stu3::proto::Markdown* definition) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(definition_);
  }
  if (definition) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      definition = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, definition, submessage_arena);
    }
    
  } else {
    
  }
  definition_ = definition;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.definition)
}

// .google.fhir.stu3.proto.Markdown comment = 11;
inline bool ElementDefinition::has_comment() const {
  return this != internal_default_instance() && comment_ != NULL;
}
inline const ::google::fhir::stu3::proto::Markdown& ElementDefinition::_internal_comment() const {
  return *comment_;
}
inline const ::google::fhir::stu3::proto::Markdown& ElementDefinition::comment() const {
  const ::google::fhir::stu3::proto::Markdown* p = comment_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.comment)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Markdown*>(
      &::google::fhir::stu3::proto::_Markdown_default_instance_);
}
inline ::google::fhir::stu3::proto::Markdown* ElementDefinition::release_comment() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.comment)
  
  ::google::fhir::stu3::proto::Markdown* temp = comment_;
  comment_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Markdown* ElementDefinition::mutable_comment() {
  
  if (comment_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Markdown>(GetArenaNoVirtual());
    comment_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.comment)
  return comment_;
}
inline void ElementDefinition::set_allocated_comment(::google::fhir::stu3::proto::Markdown* comment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(comment_);
  }
  if (comment) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comment, submessage_arena);
    }
    
  } else {
    
  }
  comment_ = comment;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.comment)
}

// .google.fhir.stu3.proto.Markdown requirements = 12;
inline bool ElementDefinition::has_requirements() const {
  return this != internal_default_instance() && requirements_ != NULL;
}
inline const ::google::fhir::stu3::proto::Markdown& ElementDefinition::_internal_requirements() const {
  return *requirements_;
}
inline const ::google::fhir::stu3::proto::Markdown& ElementDefinition::requirements() const {
  const ::google::fhir::stu3::proto::Markdown* p = requirements_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.requirements)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Markdown*>(
      &::google::fhir::stu3::proto::_Markdown_default_instance_);
}
inline ::google::fhir::stu3::proto::Markdown* ElementDefinition::release_requirements() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.requirements)
  
  ::google::fhir::stu3::proto::Markdown* temp = requirements_;
  requirements_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Markdown* ElementDefinition::mutable_requirements() {
  
  if (requirements_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Markdown>(GetArenaNoVirtual());
    requirements_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.requirements)
  return requirements_;
}
inline void ElementDefinition::set_allocated_requirements(::google::fhir::stu3::proto::Markdown* requirements) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(requirements_);
  }
  if (requirements) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      requirements = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, requirements, submessage_arena);
    }
    
  } else {
    
  }
  requirements_ = requirements;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.requirements)
}

// repeated .google.fhir.stu3.proto.String alias = 13;
inline int ElementDefinition::alias_size() const {
  return alias_.size();
}
inline ::google::fhir::stu3::proto::String* ElementDefinition::mutable_alias(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.alias)
  return alias_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::String >*
ElementDefinition::mutable_alias() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ElementDefinition.alias)
  return &alias_;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition::alias(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.alias)
  return alias_.Get(index);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition::add_alias() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ElementDefinition.alias)
  return alias_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::String >&
ElementDefinition::alias() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ElementDefinition.alias)
  return alias_;
}

// .google.fhir.stu3.proto.UnsignedInt min = 14;
inline bool ElementDefinition::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::google::fhir::stu3::proto::UnsignedInt& ElementDefinition::_internal_min() const {
  return *min_;
}
inline const ::google::fhir::stu3::proto::UnsignedInt& ElementDefinition::min() const {
  const ::google::fhir::stu3::proto::UnsignedInt* p = min_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.min)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::UnsignedInt*>(
      &::google::fhir::stu3::proto::_UnsignedInt_default_instance_);
}
inline ::google::fhir::stu3::proto::UnsignedInt* ElementDefinition::release_min() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.min)
  
  ::google::fhir::stu3::proto::UnsignedInt* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::UnsignedInt* ElementDefinition::mutable_min() {
  
  if (min_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::UnsignedInt>(GetArenaNoVirtual());
    min_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.min)
  return min_;
}
inline void ElementDefinition::set_allocated_min(::google::fhir::stu3::proto::UnsignedInt* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.min)
}

// .google.fhir.stu3.proto.String max = 15;
inline bool ElementDefinition::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition::_internal_max() const {
  return *max_;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition::max() const {
  const ::google::fhir::stu3::proto::String* p = max_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.max)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition::release_max() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.max)
  
  ::google::fhir::stu3::proto::String* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition::mutable_max() {
  
  if (max_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    max_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.max)
  return max_;
}
inline void ElementDefinition::set_allocated_max(::google::fhir::stu3::proto::String* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.max)
}

// .google.fhir.stu3.proto.ElementDefinition.Base base = 16;
inline bool ElementDefinition::has_base() const {
  return this != internal_default_instance() && base_ != NULL;
}
inline void ElementDefinition::clear_base() {
  if (GetArenaNoVirtual() == NULL && base_ != NULL) {
    delete base_;
  }
  base_ = NULL;
}
inline const ::google::fhir::stu3::proto::ElementDefinition_Base& ElementDefinition::_internal_base() const {
  return *base_;
}
inline const ::google::fhir::stu3::proto::ElementDefinition_Base& ElementDefinition::base() const {
  const ::google::fhir::stu3::proto::ElementDefinition_Base* p = base_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.base)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::ElementDefinition_Base*>(
      &::google::fhir::stu3::proto::_ElementDefinition_Base_default_instance_);
}
inline ::google::fhir::stu3::proto::ElementDefinition_Base* ElementDefinition::release_base() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.base)
  
  ::google::fhir::stu3::proto::ElementDefinition_Base* temp = base_;
  base_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::ElementDefinition_Base* ElementDefinition::mutable_base() {
  
  if (base_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::ElementDefinition_Base>(GetArenaNoVirtual());
    base_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.base)
  return base_;
}
inline void ElementDefinition::set_allocated_base(::google::fhir::stu3::proto::ElementDefinition_Base* base) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete base_;
  }
  if (base) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      base = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, base, submessage_arena);
    }
    
  } else {
    
  }
  base_ = base;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.base)
}

// .google.fhir.stu3.proto.Uri content_reference = 17;
inline bool ElementDefinition::has_content_reference() const {
  return this != internal_default_instance() && content_reference_ != NULL;
}
inline const ::google::fhir::stu3::proto::Uri& ElementDefinition::_internal_content_reference() const {
  return *content_reference_;
}
inline const ::google::fhir::stu3::proto::Uri& ElementDefinition::content_reference() const {
  const ::google::fhir::stu3::proto::Uri* p = content_reference_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.content_reference)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Uri*>(
      &::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* ElementDefinition::release_content_reference() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.content_reference)
  
  ::google::fhir::stu3::proto::Uri* temp = content_reference_;
  content_reference_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Uri* ElementDefinition::mutable_content_reference() {
  
  if (content_reference_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Uri>(GetArenaNoVirtual());
    content_reference_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.content_reference)
  return content_reference_;
}
inline void ElementDefinition::set_allocated_content_reference(::google::fhir::stu3::proto::Uri* content_reference) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(content_reference_);
  }
  if (content_reference) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      content_reference = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, content_reference, submessage_arena);
    }
    
  } else {
    
  }
  content_reference_ = content_reference;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.content_reference)
}

// repeated .google.fhir.stu3.proto.ElementDefinition.TypeRef type = 18;
inline int ElementDefinition::type_size() const {
  return type_.size();
}
inline void ElementDefinition::clear_type() {
  type_.Clear();
}
inline ::google::fhir::stu3::proto::ElementDefinition_TypeRef* ElementDefinition::mutable_type(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.type)
  return type_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ElementDefinition_TypeRef >*
ElementDefinition::mutable_type() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ElementDefinition.type)
  return &type_;
}
inline const ::google::fhir::stu3::proto::ElementDefinition_TypeRef& ElementDefinition::type(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.type)
  return type_.Get(index);
}
inline ::google::fhir::stu3::proto::ElementDefinition_TypeRef* ElementDefinition::add_type() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ElementDefinition.type)
  return type_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ElementDefinition_TypeRef >&
ElementDefinition::type() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ElementDefinition.type)
  return type_;
}

// .google.fhir.stu3.proto.ElementDefinition.DefaultValue default_value = 19 [(.google.fhir.stu3.proto.is_choice_type) = true];
inline bool ElementDefinition::has_default_value() const {
  return this != internal_default_instance() && default_value_ != NULL;
}
inline void ElementDefinition::clear_default_value() {
  if (GetArenaNoVirtual() == NULL && default_value_ != NULL) {
    delete default_value_;
  }
  default_value_ = NULL;
}
inline const ::google::fhir::stu3::proto::ElementDefinition_DefaultValue& ElementDefinition::_internal_default_value() const {
  return *default_value_;
}
inline const ::google::fhir::stu3::proto::ElementDefinition_DefaultValue& ElementDefinition::default_value() const {
  const ::google::fhir::stu3::proto::ElementDefinition_DefaultValue* p = default_value_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.default_value)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::ElementDefinition_DefaultValue*>(
      &::google::fhir::stu3::proto::_ElementDefinition_DefaultValue_default_instance_);
}
inline ::google::fhir::stu3::proto::ElementDefinition_DefaultValue* ElementDefinition::release_default_value() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.default_value)
  
  ::google::fhir::stu3::proto::ElementDefinition_DefaultValue* temp = default_value_;
  default_value_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::ElementDefinition_DefaultValue* ElementDefinition::mutable_default_value() {
  
  if (default_value_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::ElementDefinition_DefaultValue>(GetArenaNoVirtual());
    default_value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.default_value)
  return default_value_;
}
inline void ElementDefinition::set_allocated_default_value(::google::fhir::stu3::proto::ElementDefinition_DefaultValue* default_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete default_value_;
  }
  if (default_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      default_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, default_value, submessage_arena);
    }
    
  } else {
    
  }
  default_value_ = default_value;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.default_value)
}

// .google.fhir.stu3.proto.Markdown meaning_when_missing = 20;
inline bool ElementDefinition::has_meaning_when_missing() const {
  return this != internal_default_instance() && meaning_when_missing_ != NULL;
}
inline const ::google::fhir::stu3::proto::Markdown& ElementDefinition::_internal_meaning_when_missing() const {
  return *meaning_when_missing_;
}
inline const ::google::fhir::stu3::proto::Markdown& ElementDefinition::meaning_when_missing() const {
  const ::google::fhir::stu3::proto::Markdown* p = meaning_when_missing_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.meaning_when_missing)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Markdown*>(
      &::google::fhir::stu3::proto::_Markdown_default_instance_);
}
inline ::google::fhir::stu3::proto::Markdown* ElementDefinition::release_meaning_when_missing() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.meaning_when_missing)
  
  ::google::fhir::stu3::proto::Markdown* temp = meaning_when_missing_;
  meaning_when_missing_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Markdown* ElementDefinition::mutable_meaning_when_missing() {
  
  if (meaning_when_missing_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Markdown>(GetArenaNoVirtual());
    meaning_when_missing_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.meaning_when_missing)
  return meaning_when_missing_;
}
inline void ElementDefinition::set_allocated_meaning_when_missing(::google::fhir::stu3::proto::Markdown* meaning_when_missing) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(meaning_when_missing_);
  }
  if (meaning_when_missing) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meaning_when_missing = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meaning_when_missing, submessage_arena);
    }
    
  } else {
    
  }
  meaning_when_missing_ = meaning_when_missing;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.meaning_when_missing)
}

// .google.fhir.stu3.proto.String order_meaning = 21;
inline bool ElementDefinition::has_order_meaning() const {
  return this != internal_default_instance() && order_meaning_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition::_internal_order_meaning() const {
  return *order_meaning_;
}
inline const ::google::fhir::stu3::proto::String& ElementDefinition::order_meaning() const {
  const ::google::fhir::stu3::proto::String* p = order_meaning_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.order_meaning)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ElementDefinition::release_order_meaning() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.order_meaning)
  
  ::google::fhir::stu3::proto::String* temp = order_meaning_;
  order_meaning_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ElementDefinition::mutable_order_meaning() {
  
  if (order_meaning_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    order_meaning_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.order_meaning)
  return order_meaning_;
}
inline void ElementDefinition::set_allocated_order_meaning(::google::fhir::stu3::proto::String* order_meaning) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(order_meaning_);
  }
  if (order_meaning) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      order_meaning = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, order_meaning, submessage_arena);
    }
    
  } else {
    
  }
  order_meaning_ = order_meaning;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.order_meaning)
}

// .google.fhir.stu3.proto.ElementDefinition.Fixed fixed = 22 [(.google.fhir.stu3.proto.is_choice_type) = true];
inline bool ElementDefinition::has_fixed() const {
  return this != internal_default_instance() && fixed_ != NULL;
}
inline void ElementDefinition::clear_fixed() {
  if (GetArenaNoVirtual() == NULL && fixed_ != NULL) {
    delete fixed_;
  }
  fixed_ = NULL;
}
inline const ::google::fhir::stu3::proto::ElementDefinition_Fixed& ElementDefinition::_internal_fixed() const {
  return *fixed_;
}
inline const ::google::fhir::stu3::proto::ElementDefinition_Fixed& ElementDefinition::fixed() const {
  const ::google::fhir::stu3::proto::ElementDefinition_Fixed* p = fixed_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.fixed)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::ElementDefinition_Fixed*>(
      &::google::fhir::stu3::proto::_ElementDefinition_Fixed_default_instance_);
}
inline ::google::fhir::stu3::proto::ElementDefinition_Fixed* ElementDefinition::release_fixed() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.fixed)
  
  ::google::fhir::stu3::proto::ElementDefinition_Fixed* temp = fixed_;
  fixed_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::ElementDefinition_Fixed* ElementDefinition::mutable_fixed() {
  
  if (fixed_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::ElementDefinition_Fixed>(GetArenaNoVirtual());
    fixed_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.fixed)
  return fixed_;
}
inline void ElementDefinition::set_allocated_fixed(::google::fhir::stu3::proto::ElementDefinition_Fixed* fixed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete fixed_;
  }
  if (fixed) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fixed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fixed, submessage_arena);
    }
    
  } else {
    
  }
  fixed_ = fixed;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.fixed)
}

// .google.fhir.stu3.proto.ElementDefinition.Pattern pattern = 23 [(.google.fhir.stu3.proto.is_choice_type) = true];
inline bool ElementDefinition::has_pattern() const {
  return this != internal_default_instance() && pattern_ != NULL;
}
inline void ElementDefinition::clear_pattern() {
  if (GetArenaNoVirtual() == NULL && pattern_ != NULL) {
    delete pattern_;
  }
  pattern_ = NULL;
}
inline const ::google::fhir::stu3::proto::ElementDefinition_Pattern& ElementDefinition::_internal_pattern() const {
  return *pattern_;
}
inline const ::google::fhir::stu3::proto::ElementDefinition_Pattern& ElementDefinition::pattern() const {
  const ::google::fhir::stu3::proto::ElementDefinition_Pattern* p = pattern_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.pattern)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::ElementDefinition_Pattern*>(
      &::google::fhir::stu3::proto::_ElementDefinition_Pattern_default_instance_);
}
inline ::google::fhir::stu3::proto::ElementDefinition_Pattern* ElementDefinition::release_pattern() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.pattern)
  
  ::google::fhir::stu3::proto::ElementDefinition_Pattern* temp = pattern_;
  pattern_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::ElementDefinition_Pattern* ElementDefinition::mutable_pattern() {
  
  if (pattern_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::ElementDefinition_Pattern>(GetArenaNoVirtual());
    pattern_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.pattern)
  return pattern_;
}
inline void ElementDefinition::set_allocated_pattern(::google::fhir::stu3::proto::ElementDefinition_Pattern* pattern) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pattern_;
  }
  if (pattern) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pattern = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pattern, submessage_arena);
    }
    
  } else {
    
  }
  pattern_ = pattern;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.pattern)
}

// repeated .google.fhir.stu3.proto.ElementDefinition.Example example = 24;
inline int ElementDefinition::example_size() const {
  return example_.size();
}
inline void ElementDefinition::clear_example() {
  example_.Clear();
}
inline ::google::fhir::stu3::proto::ElementDefinition_Example* ElementDefinition::mutable_example(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.example)
  return example_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ElementDefinition_Example >*
ElementDefinition::mutable_example() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ElementDefinition.example)
  return &example_;
}
inline const ::google::fhir::stu3::proto::ElementDefinition_Example& ElementDefinition::example(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.example)
  return example_.Get(index);
}
inline ::google::fhir::stu3::proto::ElementDefinition_Example* ElementDefinition::add_example() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ElementDefinition.example)
  return example_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ElementDefinition_Example >&
ElementDefinition::example() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ElementDefinition.example)
  return example_;
}

// .google.fhir.stu3.proto.ElementDefinition.MinValue min_value = 25 [(.google.fhir.stu3.proto.is_choice_type) = true];
inline bool ElementDefinition::has_min_value() const {
  return this != internal_default_instance() && min_value_ != NULL;
}
inline void ElementDefinition::clear_min_value() {
  if (GetArenaNoVirtual() == NULL && min_value_ != NULL) {
    delete min_value_;
  }
  min_value_ = NULL;
}
inline const ::google::fhir::stu3::proto::ElementDefinition_MinValue& ElementDefinition::_internal_min_value() const {
  return *min_value_;
}
inline const ::google::fhir::stu3::proto::ElementDefinition_MinValue& ElementDefinition::min_value() const {
  const ::google::fhir::stu3::proto::ElementDefinition_MinValue* p = min_value_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.min_value)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::ElementDefinition_MinValue*>(
      &::google::fhir::stu3::proto::_ElementDefinition_MinValue_default_instance_);
}
inline ::google::fhir::stu3::proto::ElementDefinition_MinValue* ElementDefinition::release_min_value() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.min_value)
  
  ::google::fhir::stu3::proto::ElementDefinition_MinValue* temp = min_value_;
  min_value_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::ElementDefinition_MinValue* ElementDefinition::mutable_min_value() {
  
  if (min_value_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::ElementDefinition_MinValue>(GetArenaNoVirtual());
    min_value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.min_value)
  return min_value_;
}
inline void ElementDefinition::set_allocated_min_value(::google::fhir::stu3::proto::ElementDefinition_MinValue* min_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete min_value_;
  }
  if (min_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min_value, submessage_arena);
    }
    
  } else {
    
  }
  min_value_ = min_value;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.min_value)
}

// .google.fhir.stu3.proto.ElementDefinition.MaxValue max_value = 26 [(.google.fhir.stu3.proto.is_choice_type) = true];
inline bool ElementDefinition::has_max_value() const {
  return this != internal_default_instance() && max_value_ != NULL;
}
inline void ElementDefinition::clear_max_value() {
  if (GetArenaNoVirtual() == NULL && max_value_ != NULL) {
    delete max_value_;
  }
  max_value_ = NULL;
}
inline const ::google::fhir::stu3::proto::ElementDefinition_MaxValue& ElementDefinition::_internal_max_value() const {
  return *max_value_;
}
inline const ::google::fhir::stu3::proto::ElementDefinition_MaxValue& ElementDefinition::max_value() const {
  const ::google::fhir::stu3::proto::ElementDefinition_MaxValue* p = max_value_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.max_value)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::ElementDefinition_MaxValue*>(
      &::google::fhir::stu3::proto::_ElementDefinition_MaxValue_default_instance_);
}
inline ::google::fhir::stu3::proto::ElementDefinition_MaxValue* ElementDefinition::release_max_value() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.max_value)
  
  ::google::fhir::stu3::proto::ElementDefinition_MaxValue* temp = max_value_;
  max_value_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::ElementDefinition_MaxValue* ElementDefinition::mutable_max_value() {
  
  if (max_value_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::ElementDefinition_MaxValue>(GetArenaNoVirtual());
    max_value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.max_value)
  return max_value_;
}
inline void ElementDefinition::set_allocated_max_value(::google::fhir::stu3::proto::ElementDefinition_MaxValue* max_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete max_value_;
  }
  if (max_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max_value, submessage_arena);
    }
    
  } else {
    
  }
  max_value_ = max_value;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.max_value)
}

// .google.fhir.stu3.proto.Integer max_length = 27;
inline bool ElementDefinition::has_max_length() const {
  return this != internal_default_instance() && max_length_ != NULL;
}
inline const ::google::fhir::stu3::proto::Integer& ElementDefinition::_internal_max_length() const {
  return *max_length_;
}
inline const ::google::fhir::stu3::proto::Integer& ElementDefinition::max_length() const {
  const ::google::fhir::stu3::proto::Integer* p = max_length_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.max_length)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Integer*>(
      &::google::fhir::stu3::proto::_Integer_default_instance_);
}
inline ::google::fhir::stu3::proto::Integer* ElementDefinition::release_max_length() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.max_length)
  
  ::google::fhir::stu3::proto::Integer* temp = max_length_;
  max_length_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Integer* ElementDefinition::mutable_max_length() {
  
  if (max_length_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Integer>(GetArenaNoVirtual());
    max_length_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.max_length)
  return max_length_;
}
inline void ElementDefinition::set_allocated_max_length(::google::fhir::stu3::proto::Integer* max_length) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_length_);
  }
  if (max_length) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max_length = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max_length, submessage_arena);
    }
    
  } else {
    
  }
  max_length_ = max_length;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.max_length)
}

// repeated .google.fhir.stu3.proto.Id condition = 28;
inline int ElementDefinition::condition_size() const {
  return condition_.size();
}
inline ::google::fhir::stu3::proto::Id* ElementDefinition::mutable_condition(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.condition)
  return condition_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Id >*
ElementDefinition::mutable_condition() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ElementDefinition.condition)
  return &condition_;
}
inline const ::google::fhir::stu3::proto::Id& ElementDefinition::condition(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.condition)
  return condition_.Get(index);
}
inline ::google::fhir::stu3::proto::Id* ElementDefinition::add_condition() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ElementDefinition.condition)
  return condition_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Id >&
ElementDefinition::condition() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ElementDefinition.condition)
  return condition_;
}

// repeated .google.fhir.stu3.proto.ElementDefinition.Constraint constraint = 29;
inline int ElementDefinition::constraint_size() const {
  return constraint_.size();
}
inline void ElementDefinition::clear_constraint() {
  constraint_.Clear();
}
inline ::google::fhir::stu3::proto::ElementDefinition_Constraint* ElementDefinition::mutable_constraint(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.constraint)
  return constraint_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ElementDefinition_Constraint >*
ElementDefinition::mutable_constraint() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ElementDefinition.constraint)
  return &constraint_;
}
inline const ::google::fhir::stu3::proto::ElementDefinition_Constraint& ElementDefinition::constraint(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.constraint)
  return constraint_.Get(index);
}
inline ::google::fhir::stu3::proto::ElementDefinition_Constraint* ElementDefinition::add_constraint() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ElementDefinition.constraint)
  return constraint_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ElementDefinition_Constraint >&
ElementDefinition::constraint() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ElementDefinition.constraint)
  return constraint_;
}

// .google.fhir.stu3.proto.Boolean must_support = 30;
inline bool ElementDefinition::has_must_support() const {
  return this != internal_default_instance() && must_support_ != NULL;
}
inline const ::google::fhir::stu3::proto::Boolean& ElementDefinition::_internal_must_support() const {
  return *must_support_;
}
inline const ::google::fhir::stu3::proto::Boolean& ElementDefinition::must_support() const {
  const ::google::fhir::stu3::proto::Boolean* p = must_support_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.must_support)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Boolean*>(
      &::google::fhir::stu3::proto::_Boolean_default_instance_);
}
inline ::google::fhir::stu3::proto::Boolean* ElementDefinition::release_must_support() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.must_support)
  
  ::google::fhir::stu3::proto::Boolean* temp = must_support_;
  must_support_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Boolean* ElementDefinition::mutable_must_support() {
  
  if (must_support_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Boolean>(GetArenaNoVirtual());
    must_support_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.must_support)
  return must_support_;
}
inline void ElementDefinition::set_allocated_must_support(::google::fhir::stu3::proto::Boolean* must_support) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(must_support_);
  }
  if (must_support) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      must_support = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, must_support, submessage_arena);
    }
    
  } else {
    
  }
  must_support_ = must_support;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.must_support)
}

// .google.fhir.stu3.proto.Boolean is_modifier = 31;
inline bool ElementDefinition::has_is_modifier() const {
  return this != internal_default_instance() && is_modifier_ != NULL;
}
inline const ::google::fhir::stu3::proto::Boolean& ElementDefinition::_internal_is_modifier() const {
  return *is_modifier_;
}
inline const ::google::fhir::stu3::proto::Boolean& ElementDefinition::is_modifier() const {
  const ::google::fhir::stu3::proto::Boolean* p = is_modifier_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.is_modifier)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Boolean*>(
      &::google::fhir::stu3::proto::_Boolean_default_instance_);
}
inline ::google::fhir::stu3::proto::Boolean* ElementDefinition::release_is_modifier() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.is_modifier)
  
  ::google::fhir::stu3::proto::Boolean* temp = is_modifier_;
  is_modifier_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Boolean* ElementDefinition::mutable_is_modifier() {
  
  if (is_modifier_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Boolean>(GetArenaNoVirtual());
    is_modifier_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.is_modifier)
  return is_modifier_;
}
inline void ElementDefinition::set_allocated_is_modifier(::google::fhir::stu3::proto::Boolean* is_modifier) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(is_modifier_);
  }
  if (is_modifier) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      is_modifier = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, is_modifier, submessage_arena);
    }
    
  } else {
    
  }
  is_modifier_ = is_modifier;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.is_modifier)
}

// .google.fhir.stu3.proto.Boolean is_summary = 32;
inline bool ElementDefinition::has_is_summary() const {
  return this != internal_default_instance() && is_summary_ != NULL;
}
inline const ::google::fhir::stu3::proto::Boolean& ElementDefinition::_internal_is_summary() const {
  return *is_summary_;
}
inline const ::google::fhir::stu3::proto::Boolean& ElementDefinition::is_summary() const {
  const ::google::fhir::stu3::proto::Boolean* p = is_summary_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.is_summary)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Boolean*>(
      &::google::fhir::stu3::proto::_Boolean_default_instance_);
}
inline ::google::fhir::stu3::proto::Boolean* ElementDefinition::release_is_summary() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.is_summary)
  
  ::google::fhir::stu3::proto::Boolean* temp = is_summary_;
  is_summary_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Boolean* ElementDefinition::mutable_is_summary() {
  
  if (is_summary_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Boolean>(GetArenaNoVirtual());
    is_summary_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.is_summary)
  return is_summary_;
}
inline void ElementDefinition::set_allocated_is_summary(::google::fhir::stu3::proto::Boolean* is_summary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(is_summary_);
  }
  if (is_summary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      is_summary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, is_summary, submessage_arena);
    }
    
  } else {
    
  }
  is_summary_ = is_summary;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.is_summary)
}

// .google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding binding = 33;
inline bool ElementDefinition::has_binding() const {
  return this != internal_default_instance() && binding_ != NULL;
}
inline void ElementDefinition::clear_binding() {
  if (GetArenaNoVirtual() == NULL && binding_ != NULL) {
    delete binding_;
  }
  binding_ = NULL;
}
inline const ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding& ElementDefinition::_internal_binding() const {
  return *binding_;
}
inline const ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding& ElementDefinition::binding() const {
  const ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding* p = binding_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.binding)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding*>(
      &::google::fhir::stu3::proto::_ElementDefinition_ElementDefinitionBinding_default_instance_);
}
inline ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding* ElementDefinition::release_binding() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ElementDefinition.binding)
  
  ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding* temp = binding_;
  binding_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding* ElementDefinition::mutable_binding() {
  
  if (binding_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding>(GetArenaNoVirtual());
    binding_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.binding)
  return binding_;
}
inline void ElementDefinition::set_allocated_binding(::google::fhir::stu3::proto::ElementDefinition_ElementDefinitionBinding* binding) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete binding_;
  }
  if (binding) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      binding = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, binding, submessage_arena);
    }
    
  } else {
    
  }
  binding_ = binding;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ElementDefinition.binding)
}

// repeated .google.fhir.stu3.proto.ElementDefinition.Mapping mapping = 34;
inline int ElementDefinition::mapping_size() const {
  return mapping_.size();
}
inline void ElementDefinition::clear_mapping() {
  mapping_.Clear();
}
inline ::google::fhir::stu3::proto::ElementDefinition_Mapping* ElementDefinition::mutable_mapping(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ElementDefinition.mapping)
  return mapping_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ElementDefinition_Mapping >*
ElementDefinition::mutable_mapping() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ElementDefinition.mapping)
  return &mapping_;
}
inline const ::google::fhir::stu3::proto::ElementDefinition_Mapping& ElementDefinition::mapping(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ElementDefinition.mapping)
  return mapping_.Get(index);
}
inline ::google::fhir::stu3::proto::ElementDefinition_Mapping* ElementDefinition::add_mapping() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ElementDefinition.mapping)
  return mapping_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ElementDefinition_Mapping >&
ElementDefinition::mapping() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ElementDefinition.mapping)
  return mapping_;
}

// -------------------------------------------------------------------

// Narrative

// .google.fhir.stu3.proto.String id = 1;
inline bool Narrative::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& Narrative::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& Narrative::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.Narrative.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* Narrative::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.Narrative.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* Narrative::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.Narrative.id)
  return id_;
}
inline void Narrative::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Narrative.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int Narrative::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* Narrative::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.Narrative.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
Narrative::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.Narrative.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& Narrative::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.Narrative.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* Narrative::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.Narrative.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
Narrative::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.Narrative.extension)
  return extension_;
}

// .google.fhir.stu3.proto.NarrativeStatusCode status = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool Narrative::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline const ::google::fhir::stu3::proto::NarrativeStatusCode& Narrative::_internal_status() const {
  return *status_;
}
inline const ::google::fhir::stu3::proto::NarrativeStatusCode& Narrative::status() const {
  const ::google::fhir::stu3::proto::NarrativeStatusCode* p = status_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.Narrative.status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::NarrativeStatusCode*>(
      &::google::fhir::stu3::proto::_NarrativeStatusCode_default_instance_);
}
inline ::google::fhir::stu3::proto::NarrativeStatusCode* Narrative::release_status() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.Narrative.status)
  
  ::google::fhir::stu3::proto::NarrativeStatusCode* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::NarrativeStatusCode* Narrative::mutable_status() {
  
  if (status_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::NarrativeStatusCode>(GetArenaNoVirtual());
    status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.Narrative.status)
  return status_;
}
inline void Narrative::set_allocated_status(::google::fhir::stu3::proto::NarrativeStatusCode* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_);
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Narrative.status)
}

// .google.fhir.stu3.proto.Xhtml div = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool Narrative::has_div() const {
  return this != internal_default_instance() && div_ != NULL;
}
inline const ::google::fhir::stu3::proto::Xhtml& Narrative::_internal_div() const {
  return *div_;
}
inline const ::google::fhir::stu3::proto::Xhtml& Narrative::div() const {
  const ::google::fhir::stu3::proto::Xhtml* p = div_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.Narrative.div)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Xhtml*>(
      &::google::fhir::stu3::proto::_Xhtml_default_instance_);
}
inline ::google::fhir::stu3::proto::Xhtml* Narrative::release_div() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.Narrative.div)
  
  ::google::fhir::stu3::proto::Xhtml* temp = div_;
  div_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Xhtml* Narrative::mutable_div() {
  
  if (div_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Xhtml>(GetArenaNoVirtual());
    div_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.Narrative.div)
  return div_;
}
inline void Narrative::set_allocated_div(::google::fhir::stu3::proto::Xhtml* div) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(div_);
  }
  if (div) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      div = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, div, submessage_arena);
    }
    
  } else {
    
  }
  div_ = div;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Narrative.div)
}

// -------------------------------------------------------------------

// ParameterDefinition

// .google.fhir.stu3.proto.String id = 1;
inline bool ParameterDefinition::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ParameterDefinition::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ParameterDefinition::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ParameterDefinition.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ParameterDefinition::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ParameterDefinition.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ParameterDefinition::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ParameterDefinition.id)
  return id_;
}
inline void ParameterDefinition::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ParameterDefinition.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int ParameterDefinition::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ParameterDefinition::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ParameterDefinition.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ParameterDefinition::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ParameterDefinition.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ParameterDefinition::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ParameterDefinition.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ParameterDefinition::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ParameterDefinition.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ParameterDefinition::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ParameterDefinition.extension)
  return extension_;
}

// .google.fhir.stu3.proto.Code name = 3;
inline bool ParameterDefinition::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::google::fhir::stu3::proto::Code& ParameterDefinition::_internal_name() const {
  return *name_;
}
inline const ::google::fhir::stu3::proto::Code& ParameterDefinition::name() const {
  const ::google::fhir::stu3::proto::Code* p = name_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ParameterDefinition.name)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Code*>(
      &::google::fhir::stu3::proto::_Code_default_instance_);
}
inline ::google::fhir::stu3::proto::Code* ParameterDefinition::release_name() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ParameterDefinition.name)
  
  ::google::fhir::stu3::proto::Code* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Code* ParameterDefinition::mutable_name() {
  
  if (name_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Code>(GetArenaNoVirtual());
    name_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ParameterDefinition.name)
  return name_;
}
inline void ParameterDefinition::set_allocated_name(::google::fhir::stu3::proto::Code* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ParameterDefinition.name)
}

// .google.fhir.stu3.proto.OperationParameterUseCode use = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool ParameterDefinition::has_use() const {
  return this != internal_default_instance() && use_ != NULL;
}
inline const ::google::fhir::stu3::proto::OperationParameterUseCode& ParameterDefinition::_internal_use() const {
  return *use_;
}
inline const ::google::fhir::stu3::proto::OperationParameterUseCode& ParameterDefinition::use() const {
  const ::google::fhir::stu3::proto::OperationParameterUseCode* p = use_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ParameterDefinition.use)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::OperationParameterUseCode*>(
      &::google::fhir::stu3::proto::_OperationParameterUseCode_default_instance_);
}
inline ::google::fhir::stu3::proto::OperationParameterUseCode* ParameterDefinition::release_use() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ParameterDefinition.use)
  
  ::google::fhir::stu3::proto::OperationParameterUseCode* temp = use_;
  use_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::OperationParameterUseCode* ParameterDefinition::mutable_use() {
  
  if (use_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::OperationParameterUseCode>(GetArenaNoVirtual());
    use_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ParameterDefinition.use)
  return use_;
}
inline void ParameterDefinition::set_allocated_use(::google::fhir::stu3::proto::OperationParameterUseCode* use) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(use_);
  }
  if (use) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      use = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, use, submessage_arena);
    }
    
  } else {
    
  }
  use_ = use;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ParameterDefinition.use)
}

// .google.fhir.stu3.proto.Integer min = 5;
inline bool ParameterDefinition::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::google::fhir::stu3::proto::Integer& ParameterDefinition::_internal_min() const {
  return *min_;
}
inline const ::google::fhir::stu3::proto::Integer& ParameterDefinition::min() const {
  const ::google::fhir::stu3::proto::Integer* p = min_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ParameterDefinition.min)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Integer*>(
      &::google::fhir::stu3::proto::_Integer_default_instance_);
}
inline ::google::fhir::stu3::proto::Integer* ParameterDefinition::release_min() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ParameterDefinition.min)
  
  ::google::fhir::stu3::proto::Integer* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Integer* ParameterDefinition::mutable_min() {
  
  if (min_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Integer>(GetArenaNoVirtual());
    min_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ParameterDefinition.min)
  return min_;
}
inline void ParameterDefinition::set_allocated_min(::google::fhir::stu3::proto::Integer* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ParameterDefinition.min)
}

// .google.fhir.stu3.proto.String max = 6;
inline bool ParameterDefinition::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ParameterDefinition::_internal_max() const {
  return *max_;
}
inline const ::google::fhir::stu3::proto::String& ParameterDefinition::max() const {
  const ::google::fhir::stu3::proto::String* p = max_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ParameterDefinition.max)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ParameterDefinition::release_max() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ParameterDefinition.max)
  
  ::google::fhir::stu3::proto::String* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ParameterDefinition::mutable_max() {
  
  if (max_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    max_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ParameterDefinition.max)
  return max_;
}
inline void ParameterDefinition::set_allocated_max(::google::fhir::stu3::proto::String* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ParameterDefinition.max)
}

// .google.fhir.stu3.proto.String documentation = 7;
inline bool ParameterDefinition::has_documentation() const {
  return this != internal_default_instance() && documentation_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ParameterDefinition::_internal_documentation() const {
  return *documentation_;
}
inline const ::google::fhir::stu3::proto::String& ParameterDefinition::documentation() const {
  const ::google::fhir::stu3::proto::String* p = documentation_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ParameterDefinition.documentation)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ParameterDefinition::release_documentation() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ParameterDefinition.documentation)
  
  ::google::fhir::stu3::proto::String* temp = documentation_;
  documentation_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ParameterDefinition::mutable_documentation() {
  
  if (documentation_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    documentation_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ParameterDefinition.documentation)
  return documentation_;
}
inline void ParameterDefinition::set_allocated_documentation(::google::fhir::stu3::proto::String* documentation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(documentation_);
  }
  if (documentation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      documentation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, documentation, submessage_arena);
    }
    
  } else {
    
  }
  documentation_ = documentation;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ParameterDefinition.documentation)
}

// .google.fhir.stu3.proto.FHIRAllTypesCode type = 8 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool ParameterDefinition::has_type() const {
  return this != internal_default_instance() && type_ != NULL;
}
inline const ::google::fhir::stu3::proto::FHIRAllTypesCode& ParameterDefinition::_internal_type() const {
  return *type_;
}
inline const ::google::fhir::stu3::proto::FHIRAllTypesCode& ParameterDefinition::type() const {
  const ::google::fhir::stu3::proto::FHIRAllTypesCode* p = type_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ParameterDefinition.type)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::FHIRAllTypesCode*>(
      &::google::fhir::stu3::proto::_FHIRAllTypesCode_default_instance_);
}
inline ::google::fhir::stu3::proto::FHIRAllTypesCode* ParameterDefinition::release_type() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ParameterDefinition.type)
  
  ::google::fhir::stu3::proto::FHIRAllTypesCode* temp = type_;
  type_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::FHIRAllTypesCode* ParameterDefinition::mutable_type() {
  
  if (type_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::FHIRAllTypesCode>(GetArenaNoVirtual());
    type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ParameterDefinition.type)
  return type_;
}
inline void ParameterDefinition::set_allocated_type(::google::fhir::stu3::proto::FHIRAllTypesCode* type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(type_);
  }
  if (type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, type, submessage_arena);
    }
    
  } else {
    
  }
  type_ = type;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ParameterDefinition.type)
}

// .google.fhir.stu3.proto.Reference profile = 9 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/StructureDefinition"];
inline bool ParameterDefinition::has_profile() const {
  return this != internal_default_instance() && profile_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& ParameterDefinition::_internal_profile() const {
  return *profile_;
}
inline const ::google::fhir::stu3::proto::Reference& ParameterDefinition::profile() const {
  const ::google::fhir::stu3::proto::Reference* p = profile_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ParameterDefinition.profile)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* ParameterDefinition::release_profile() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ParameterDefinition.profile)
  
  ::google::fhir::stu3::proto::Reference* temp = profile_;
  profile_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* ParameterDefinition::mutable_profile() {
  
  if (profile_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    profile_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ParameterDefinition.profile)
  return profile_;
}
inline void ParameterDefinition::set_allocated_profile(::google::fhir::stu3::proto::Reference* profile) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(profile_);
  }
  if (profile) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      profile = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, profile, submessage_arena);
    }
    
  } else {
    
  }
  profile_ = profile;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ParameterDefinition.profile)
}

// -------------------------------------------------------------------

// RelatedArtifact

// .google.fhir.stu3.proto.String id = 1;
inline bool RelatedArtifact::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& RelatedArtifact::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& RelatedArtifact::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RelatedArtifact.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* RelatedArtifact::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.RelatedArtifact.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* RelatedArtifact::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.RelatedArtifact.id)
  return id_;
}
inline void RelatedArtifact::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.RelatedArtifact.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int RelatedArtifact::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* RelatedArtifact::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.RelatedArtifact.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
RelatedArtifact::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.RelatedArtifact.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& RelatedArtifact::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RelatedArtifact.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* RelatedArtifact::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.RelatedArtifact.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
RelatedArtifact::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.RelatedArtifact.extension)
  return extension_;
}

// .google.fhir.stu3.proto.RelatedArtifactTypeCode type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool RelatedArtifact::has_type() const {
  return this != internal_default_instance() && type_ != NULL;
}
inline const ::google::fhir::stu3::proto::RelatedArtifactTypeCode& RelatedArtifact::_internal_type() const {
  return *type_;
}
inline const ::google::fhir::stu3::proto::RelatedArtifactTypeCode& RelatedArtifact::type() const {
  const ::google::fhir::stu3::proto::RelatedArtifactTypeCode* p = type_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RelatedArtifact.type)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::RelatedArtifactTypeCode*>(
      &::google::fhir::stu3::proto::_RelatedArtifactTypeCode_default_instance_);
}
inline ::google::fhir::stu3::proto::RelatedArtifactTypeCode* RelatedArtifact::release_type() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.RelatedArtifact.type)
  
  ::google::fhir::stu3::proto::RelatedArtifactTypeCode* temp = type_;
  type_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::RelatedArtifactTypeCode* RelatedArtifact::mutable_type() {
  
  if (type_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::RelatedArtifactTypeCode>(GetArenaNoVirtual());
    type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.RelatedArtifact.type)
  return type_;
}
inline void RelatedArtifact::set_allocated_type(::google::fhir::stu3::proto::RelatedArtifactTypeCode* type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(type_);
  }
  if (type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, type, submessage_arena);
    }
    
  } else {
    
  }
  type_ = type;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.RelatedArtifact.type)
}

// .google.fhir.stu3.proto.String display = 4;
inline bool RelatedArtifact::has_display() const {
  return this != internal_default_instance() && display_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& RelatedArtifact::_internal_display() const {
  return *display_;
}
inline const ::google::fhir::stu3::proto::String& RelatedArtifact::display() const {
  const ::google::fhir::stu3::proto::String* p = display_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RelatedArtifact.display)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* RelatedArtifact::release_display() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.RelatedArtifact.display)
  
  ::google::fhir::stu3::proto::String* temp = display_;
  display_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* RelatedArtifact::mutable_display() {
  
  if (display_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    display_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.RelatedArtifact.display)
  return display_;
}
inline void RelatedArtifact::set_allocated_display(::google::fhir::stu3::proto::String* display) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(display_);
  }
  if (display) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      display = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, display, submessage_arena);
    }
    
  } else {
    
  }
  display_ = display;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.RelatedArtifact.display)
}

// .google.fhir.stu3.proto.String citation = 5;
inline bool RelatedArtifact::has_citation() const {
  return this != internal_default_instance() && citation_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& RelatedArtifact::_internal_citation() const {
  return *citation_;
}
inline const ::google::fhir::stu3::proto::String& RelatedArtifact::citation() const {
  const ::google::fhir::stu3::proto::String* p = citation_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RelatedArtifact.citation)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* RelatedArtifact::release_citation() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.RelatedArtifact.citation)
  
  ::google::fhir::stu3::proto::String* temp = citation_;
  citation_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* RelatedArtifact::mutable_citation() {
  
  if (citation_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    citation_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.RelatedArtifact.citation)
  return citation_;
}
inline void RelatedArtifact::set_allocated_citation(::google::fhir::stu3::proto::String* citation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(citation_);
  }
  if (citation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      citation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, citation, submessage_arena);
    }
    
  } else {
    
  }
  citation_ = citation;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.RelatedArtifact.citation)
}

// .google.fhir.stu3.proto.Uri url = 6;
inline bool RelatedArtifact::has_url() const {
  return this != internal_default_instance() && url_ != NULL;
}
inline const ::google::fhir::stu3::proto::Uri& RelatedArtifact::_internal_url() const {
  return *url_;
}
inline const ::google::fhir::stu3::proto::Uri& RelatedArtifact::url() const {
  const ::google::fhir::stu3::proto::Uri* p = url_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RelatedArtifact.url)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Uri*>(
      &::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* RelatedArtifact::release_url() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.RelatedArtifact.url)
  
  ::google::fhir::stu3::proto::Uri* temp = url_;
  url_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Uri* RelatedArtifact::mutable_url() {
  
  if (url_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Uri>(GetArenaNoVirtual());
    url_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.RelatedArtifact.url)
  return url_;
}
inline void RelatedArtifact::set_allocated_url(::google::fhir::stu3::proto::Uri* url) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(url_);
  }
  if (url) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      url = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, url, submessage_arena);
    }
    
  } else {
    
  }
  url_ = url;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.RelatedArtifact.url)
}

// .google.fhir.stu3.proto.Attachment document = 7;
inline bool RelatedArtifact::has_document() const {
  return this != internal_default_instance() && document_ != NULL;
}
inline const ::google::fhir::stu3::proto::Attachment& RelatedArtifact::_internal_document() const {
  return *document_;
}
inline const ::google::fhir::stu3::proto::Attachment& RelatedArtifact::document() const {
  const ::google::fhir::stu3::proto::Attachment* p = document_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RelatedArtifact.document)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Attachment*>(
      &::google::fhir::stu3::proto::_Attachment_default_instance_);
}
inline ::google::fhir::stu3::proto::Attachment* RelatedArtifact::release_document() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.RelatedArtifact.document)
  
  ::google::fhir::stu3::proto::Attachment* temp = document_;
  document_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Attachment* RelatedArtifact::mutable_document() {
  
  if (document_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Attachment>(GetArenaNoVirtual());
    document_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.RelatedArtifact.document)
  return document_;
}
inline void RelatedArtifact::set_allocated_document(::google::fhir::stu3::proto::Attachment* document) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(document_);
  }
  if (document) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      document = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, document, submessage_arena);
    }
    
  } else {
    
  }
  document_ = document;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.RelatedArtifact.document)
}

// .google.fhir.stu3.proto.Reference resource = 8 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
inline bool RelatedArtifact::has_resource() const {
  return this != internal_default_instance() && resource_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& RelatedArtifact::_internal_resource() const {
  return *resource_;
}
inline const ::google::fhir::stu3::proto::Reference& RelatedArtifact::resource() const {
  const ::google::fhir::stu3::proto::Reference* p = resource_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.RelatedArtifact.resource)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* RelatedArtifact::release_resource() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.RelatedArtifact.resource)
  
  ::google::fhir::stu3::proto::Reference* temp = resource_;
  resource_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* RelatedArtifact::mutable_resource() {
  
  if (resource_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    resource_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.RelatedArtifact.resource)
  return resource_;
}
inline void RelatedArtifact::set_allocated_resource(::google::fhir::stu3::proto::Reference* resource) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(resource_);
  }
  if (resource) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      resource = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, resource, submessage_arena);
    }
    
  } else {
    
  }
  resource_ = resource;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.RelatedArtifact.resource)
}

// -------------------------------------------------------------------

// Resource

// .google.fhir.stu3.proto.Id id = 1;
inline bool Resource::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::Id& Resource::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::Id& Resource::id() const {
  const ::google::fhir::stu3::proto::Id* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.Resource.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Id*>(
      &::google::fhir::stu3::proto::_Id_default_instance_);
}
inline ::google::fhir::stu3::proto::Id* Resource::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.Resource.id)
  
  ::google::fhir::stu3::proto::Id* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Id* Resource::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Id>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.Resource.id)
  return id_;
}
inline void Resource::set_allocated_id(::google::fhir::stu3::proto::Id* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Resource.id)
}

// .google.fhir.stu3.proto.Meta meta = 2;
inline bool Resource::has_meta() const {
  return this != internal_default_instance() && meta_ != NULL;
}
inline const ::google::fhir::stu3::proto::Meta& Resource::_internal_meta() const {
  return *meta_;
}
inline const ::google::fhir::stu3::proto::Meta& Resource::meta() const {
  const ::google::fhir::stu3::proto::Meta* p = meta_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.Resource.meta)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Meta*>(
      &::google::fhir::stu3::proto::_Meta_default_instance_);
}
inline ::google::fhir::stu3::proto::Meta* Resource::release_meta() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.Resource.meta)
  
  ::google::fhir::stu3::proto::Meta* temp = meta_;
  meta_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Meta* Resource::mutable_meta() {
  
  if (meta_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Meta>(GetArenaNoVirtual());
    meta_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.Resource.meta)
  return meta_;
}
inline void Resource::set_allocated_meta(::google::fhir::stu3::proto::Meta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(meta_);
  }
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    
  } else {
    
  }
  meta_ = meta;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Resource.meta)
}

// .google.fhir.stu3.proto.Uri implicit_rules = 3;
inline bool Resource::has_implicit_rules() const {
  return this != internal_default_instance() && implicit_rules_ != NULL;
}
inline const ::google::fhir::stu3::proto::Uri& Resource::_internal_implicit_rules() const {
  return *implicit_rules_;
}
inline const ::google::fhir::stu3::proto::Uri& Resource::implicit_rules() const {
  const ::google::fhir::stu3::proto::Uri* p = implicit_rules_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.Resource.implicit_rules)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Uri*>(
      &::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* Resource::release_implicit_rules() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.Resource.implicit_rules)
  
  ::google::fhir::stu3::proto::Uri* temp = implicit_rules_;
  implicit_rules_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Uri* Resource::mutable_implicit_rules() {
  
  if (implicit_rules_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Uri>(GetArenaNoVirtual());
    implicit_rules_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.Resource.implicit_rules)
  return implicit_rules_;
}
inline void Resource::set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(implicit_rules_);
  }
  if (implicit_rules) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      implicit_rules = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, implicit_rules, submessage_arena);
    }
    
  } else {
    
  }
  implicit_rules_ = implicit_rules;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Resource.implicit_rules)
}

// .google.fhir.stu3.proto.LanguageCode language = 4;
inline bool Resource::has_language() const {
  return this != internal_default_instance() && language_ != NULL;
}
inline const ::google::fhir::stu3::proto::LanguageCode& Resource::_internal_language() const {
  return *language_;
}
inline const ::google::fhir::stu3::proto::LanguageCode& Resource::language() const {
  const ::google::fhir::stu3::proto::LanguageCode* p = language_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.Resource.language)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::LanguageCode*>(
      &::google::fhir::stu3::proto::_LanguageCode_default_instance_);
}
inline ::google::fhir::stu3::proto::LanguageCode* Resource::release_language() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.Resource.language)
  
  ::google::fhir::stu3::proto::LanguageCode* temp = language_;
  language_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::LanguageCode* Resource::mutable_language() {
  
  if (language_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::LanguageCode>(GetArenaNoVirtual());
    language_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.Resource.language)
  return language_;
}
inline void Resource::set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(language_);
  }
  if (language) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      language = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, language, submessage_arena);
    }
    
  } else {
    
  }
  language_ = language;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Resource.language)
}

// -------------------------------------------------------------------

// TriggerDefinition_EventTiming

// .google.fhir.stu3.proto.Timing timing = 1;
inline bool TriggerDefinition_EventTiming::has_timing() const {
  return event_timing_case() == kTiming;
}
inline void TriggerDefinition_EventTiming::set_has_timing() {
  _oneof_case_[0] = kTiming;
}
inline const ::google::fhir::stu3::proto::Timing& TriggerDefinition_EventTiming::_internal_timing() const {
  return *event_timing_.timing_;
}
inline ::google::fhir::stu3::proto::Timing* TriggerDefinition_EventTiming::release_timing() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.TriggerDefinition.EventTiming.timing)
  if (has_timing()) {
    clear_has_event_timing();
      ::google::fhir::stu3::proto::Timing* temp = event_timing_.timing_;
    event_timing_.timing_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Timing& TriggerDefinition_EventTiming::timing() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TriggerDefinition.EventTiming.timing)
  return has_timing()
      ? *event_timing_.timing_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Timing*>(&::google::fhir::stu3::proto::_Timing_default_instance_);
}
inline ::google::fhir::stu3::proto::Timing* TriggerDefinition_EventTiming::mutable_timing() {
  if (!has_timing()) {
    clear_event_timing();
    set_has_timing();
    event_timing_.timing_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Timing >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TriggerDefinition.EventTiming.timing)
  return event_timing_.timing_;
}

// .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Schedule"];
inline bool TriggerDefinition_EventTiming::has_reference() const {
  return event_timing_case() == kReference;
}
inline void TriggerDefinition_EventTiming::set_has_reference() {
  _oneof_case_[0] = kReference;
}
inline const ::google::fhir::stu3::proto::Reference& TriggerDefinition_EventTiming::_internal_reference() const {
  return *event_timing_.reference_;
}
inline ::google::fhir::stu3::proto::Reference* TriggerDefinition_EventTiming::release_reference() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.TriggerDefinition.EventTiming.reference)
  if (has_reference()) {
    clear_has_event_timing();
      ::google::fhir::stu3::proto::Reference* temp = event_timing_.reference_;
    event_timing_.reference_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Reference& TriggerDefinition_EventTiming::reference() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TriggerDefinition.EventTiming.reference)
  return has_reference()
      ? *event_timing_.reference_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Reference*>(&::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* TriggerDefinition_EventTiming::mutable_reference() {
  if (!has_reference()) {
    clear_event_timing();
    set_has_reference();
    event_timing_.reference_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Reference >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TriggerDefinition.EventTiming.reference)
  return event_timing_.reference_;
}

// .google.fhir.stu3.proto.Date date = 3;
inline bool TriggerDefinition_EventTiming::has_date() const {
  return event_timing_case() == kDate;
}
inline void TriggerDefinition_EventTiming::set_has_date() {
  _oneof_case_[0] = kDate;
}
inline const ::google::fhir::stu3::proto::Date& TriggerDefinition_EventTiming::_internal_date() const {
  return *event_timing_.date_;
}
inline ::google::fhir::stu3::proto::Date* TriggerDefinition_EventTiming::release_date() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.TriggerDefinition.EventTiming.date)
  if (has_date()) {
    clear_has_event_timing();
      ::google::fhir::stu3::proto::Date* temp = event_timing_.date_;
    event_timing_.date_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Date& TriggerDefinition_EventTiming::date() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TriggerDefinition.EventTiming.date)
  return has_date()
      ? *event_timing_.date_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Date*>(&::google::fhir::stu3::proto::_Date_default_instance_);
}
inline ::google::fhir::stu3::proto::Date* TriggerDefinition_EventTiming::mutable_date() {
  if (!has_date()) {
    clear_event_timing();
    set_has_date();
    event_timing_.date_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Date >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TriggerDefinition.EventTiming.date)
  return event_timing_.date_;
}

// .google.fhir.stu3.proto.DateTime date_time = 4;
inline bool TriggerDefinition_EventTiming::has_date_time() const {
  return event_timing_case() == kDateTime;
}
inline void TriggerDefinition_EventTiming::set_has_date_time() {
  _oneof_case_[0] = kDateTime;
}
inline const ::google::fhir::stu3::proto::DateTime& TriggerDefinition_EventTiming::_internal_date_time() const {
  return *event_timing_.date_time_;
}
inline ::google::fhir::stu3::proto::DateTime* TriggerDefinition_EventTiming::release_date_time() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.TriggerDefinition.EventTiming.date_time)
  if (has_date_time()) {
    clear_has_event_timing();
      ::google::fhir::stu3::proto::DateTime* temp = event_timing_.date_time_;
    event_timing_.date_time_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::DateTime& TriggerDefinition_EventTiming::date_time() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TriggerDefinition.EventTiming.date_time)
  return has_date_time()
      ? *event_timing_.date_time_
      : *reinterpret_cast< ::google::fhir::stu3::proto::DateTime*>(&::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* TriggerDefinition_EventTiming::mutable_date_time() {
  if (!has_date_time()) {
    clear_event_timing();
    set_has_date_time();
    event_timing_.date_time_ = CreateMaybeMessage< ::google::fhir::stu3::proto::DateTime >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TriggerDefinition.EventTiming.date_time)
  return event_timing_.date_time_;
}

inline bool TriggerDefinition_EventTiming::has_event_timing() const {
  return event_timing_case() != EVENT_TIMING_NOT_SET;
}
inline void TriggerDefinition_EventTiming::clear_has_event_timing() {
  _oneof_case_[0] = EVENT_TIMING_NOT_SET;
}
inline TriggerDefinition_EventTiming::EventTimingCase TriggerDefinition_EventTiming::event_timing_case() const {
  return TriggerDefinition_EventTiming::EventTimingCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// TriggerDefinition

// .google.fhir.stu3.proto.String id = 1;
inline bool TriggerDefinition::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& TriggerDefinition::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& TriggerDefinition::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TriggerDefinition.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* TriggerDefinition::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.TriggerDefinition.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* TriggerDefinition::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TriggerDefinition.id)
  return id_;
}
inline void TriggerDefinition::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.TriggerDefinition.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int TriggerDefinition::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* TriggerDefinition::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TriggerDefinition.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
TriggerDefinition::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.TriggerDefinition.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& TriggerDefinition::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TriggerDefinition.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* TriggerDefinition::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.TriggerDefinition.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
TriggerDefinition::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.TriggerDefinition.extension)
  return extension_;
}

// .google.fhir.stu3.proto.TriggerTypeCode type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool TriggerDefinition::has_type() const {
  return this != internal_default_instance() && type_ != NULL;
}
inline const ::google::fhir::stu3::proto::TriggerTypeCode& TriggerDefinition::_internal_type() const {
  return *type_;
}
inline const ::google::fhir::stu3::proto::TriggerTypeCode& TriggerDefinition::type() const {
  const ::google::fhir::stu3::proto::TriggerTypeCode* p = type_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TriggerDefinition.type)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::TriggerTypeCode*>(
      &::google::fhir::stu3::proto::_TriggerTypeCode_default_instance_);
}
inline ::google::fhir::stu3::proto::TriggerTypeCode* TriggerDefinition::release_type() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.TriggerDefinition.type)
  
  ::google::fhir::stu3::proto::TriggerTypeCode* temp = type_;
  type_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::TriggerTypeCode* TriggerDefinition::mutable_type() {
  
  if (type_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::TriggerTypeCode>(GetArenaNoVirtual());
    type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TriggerDefinition.type)
  return type_;
}
inline void TriggerDefinition::set_allocated_type(::google::fhir::stu3::proto::TriggerTypeCode* type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(type_);
  }
  if (type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, type, submessage_arena);
    }
    
  } else {
    
  }
  type_ = type;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.TriggerDefinition.type)
}

// .google.fhir.stu3.proto.String event_name = 4;
inline bool TriggerDefinition::has_event_name() const {
  return this != internal_default_instance() && event_name_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& TriggerDefinition::_internal_event_name() const {
  return *event_name_;
}
inline const ::google::fhir::stu3::proto::String& TriggerDefinition::event_name() const {
  const ::google::fhir::stu3::proto::String* p = event_name_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TriggerDefinition.event_name)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* TriggerDefinition::release_event_name() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.TriggerDefinition.event_name)
  
  ::google::fhir::stu3::proto::String* temp = event_name_;
  event_name_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* TriggerDefinition::mutable_event_name() {
  
  if (event_name_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    event_name_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TriggerDefinition.event_name)
  return event_name_;
}
inline void TriggerDefinition::set_allocated_event_name(::google::fhir::stu3::proto::String* event_name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_name_);
  }
  if (event_name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_name, submessage_arena);
    }
    
  } else {
    
  }
  event_name_ = event_name;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.TriggerDefinition.event_name)
}

// .google.fhir.stu3.proto.TriggerDefinition.EventTiming event_timing = 5 [(.google.fhir.stu3.proto.is_choice_type) = true];
inline bool TriggerDefinition::has_event_timing() const {
  return this != internal_default_instance() && event_timing_ != NULL;
}
inline void TriggerDefinition::clear_event_timing() {
  if (GetArenaNoVirtual() == NULL && event_timing_ != NULL) {
    delete event_timing_;
  }
  event_timing_ = NULL;
}
inline const ::google::fhir::stu3::proto::TriggerDefinition_EventTiming& TriggerDefinition::_internal_event_timing() const {
  return *event_timing_;
}
inline const ::google::fhir::stu3::proto::TriggerDefinition_EventTiming& TriggerDefinition::event_timing() const {
  const ::google::fhir::stu3::proto::TriggerDefinition_EventTiming* p = event_timing_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TriggerDefinition.event_timing)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::TriggerDefinition_EventTiming*>(
      &::google::fhir::stu3::proto::_TriggerDefinition_EventTiming_default_instance_);
}
inline ::google::fhir::stu3::proto::TriggerDefinition_EventTiming* TriggerDefinition::release_event_timing() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.TriggerDefinition.event_timing)
  
  ::google::fhir::stu3::proto::TriggerDefinition_EventTiming* temp = event_timing_;
  event_timing_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::TriggerDefinition_EventTiming* TriggerDefinition::mutable_event_timing() {
  
  if (event_timing_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::TriggerDefinition_EventTiming>(GetArenaNoVirtual());
    event_timing_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TriggerDefinition.event_timing)
  return event_timing_;
}
inline void TriggerDefinition::set_allocated_event_timing(::google::fhir::stu3::proto::TriggerDefinition_EventTiming* event_timing) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete event_timing_;
  }
  if (event_timing) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_timing = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_timing, submessage_arena);
    }
    
  } else {
    
  }
  event_timing_ = event_timing;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.TriggerDefinition.event_timing)
}

// .google.fhir.stu3.proto.DataRequirement event_data = 6;
inline bool TriggerDefinition::has_event_data() const {
  return this != internal_default_instance() && event_data_ != NULL;
}
inline void TriggerDefinition::clear_event_data() {
  if (GetArenaNoVirtual() == NULL && event_data_ != NULL) {
    delete event_data_;
  }
  event_data_ = NULL;
}
inline const ::google::fhir::stu3::proto::DataRequirement& TriggerDefinition::_internal_event_data() const {
  return *event_data_;
}
inline const ::google::fhir::stu3::proto::DataRequirement& TriggerDefinition::event_data() const {
  const ::google::fhir::stu3::proto::DataRequirement* p = event_data_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.TriggerDefinition.event_data)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::DataRequirement*>(
      &::google::fhir::stu3::proto::_DataRequirement_default_instance_);
}
inline ::google::fhir::stu3::proto::DataRequirement* TriggerDefinition::release_event_data() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.TriggerDefinition.event_data)
  
  ::google::fhir::stu3::proto::DataRequirement* temp = event_data_;
  event_data_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::DataRequirement* TriggerDefinition::mutable_event_data() {
  
  if (event_data_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::DataRequirement>(GetArenaNoVirtual());
    event_data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.TriggerDefinition.event_data)
  return event_data_;
}
inline void TriggerDefinition::set_allocated_event_data(::google::fhir::stu3::proto::DataRequirement* event_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete event_data_;
  }
  if (event_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_data, submessage_arena);
    }
    
  } else {
    
  }
  event_data_ = event_data;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.TriggerDefinition.event_data)
}

// -------------------------------------------------------------------

// UsageContext_Value

// .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
inline bool UsageContext_Value::has_codeable_concept() const {
  return value_case() == kCodeableConcept;
}
inline void UsageContext_Value::set_has_codeable_concept() {
  _oneof_case_[0] = kCodeableConcept;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsageContext_Value::_internal_codeable_concept() const {
  return *value_.codeable_concept_;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsageContext_Value::release_codeable_concept() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.UsageContext.Value.codeable_concept)
  if (has_codeable_concept()) {
    clear_has_value();
      ::google::fhir::stu3::proto::CodeableConcept* temp = value_.codeable_concept_;
    value_.codeable_concept_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsageContext_Value::codeable_concept() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.UsageContext.Value.codeable_concept)
  return has_codeable_concept()
      ? *value_.codeable_concept_
      : *reinterpret_cast< ::google::fhir::stu3::proto::CodeableConcept*>(&::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsageContext_Value::mutable_codeable_concept() {
  if (!has_codeable_concept()) {
    clear_value();
    set_has_codeable_concept();
    value_.codeable_concept_ = CreateMaybeMessage< ::google::fhir::stu3::proto::CodeableConcept >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.UsageContext.Value.codeable_concept)
  return value_.codeable_concept_;
}

// .google.fhir.stu3.proto.Quantity quantity = 2;
inline bool UsageContext_Value::has_quantity() const {
  return value_case() == kQuantity;
}
inline void UsageContext_Value::set_has_quantity() {
  _oneof_case_[0] = kQuantity;
}
inline const ::google::fhir::stu3::proto::Quantity& UsageContext_Value::_internal_quantity() const {
  return *value_.quantity_;
}
inline ::google::fhir::stu3::proto::Quantity* UsageContext_Value::release_quantity() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.UsageContext.Value.quantity)
  if (has_quantity()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Quantity* temp = value_.quantity_;
    value_.quantity_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Quantity& UsageContext_Value::quantity() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.UsageContext.Value.quantity)
  return has_quantity()
      ? *value_.quantity_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Quantity*>(&::google::fhir::stu3::proto::_Quantity_default_instance_);
}
inline ::google::fhir::stu3::proto::Quantity* UsageContext_Value::mutable_quantity() {
  if (!has_quantity()) {
    clear_value();
    set_has_quantity();
    value_.quantity_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Quantity >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.UsageContext.Value.quantity)
  return value_.quantity_;
}

// .google.fhir.stu3.proto.Range range = 3;
inline bool UsageContext_Value::has_range() const {
  return value_case() == kRange;
}
inline void UsageContext_Value::set_has_range() {
  _oneof_case_[0] = kRange;
}
inline const ::google::fhir::stu3::proto::Range& UsageContext_Value::_internal_range() const {
  return *value_.range_;
}
inline ::google::fhir::stu3::proto::Range* UsageContext_Value::release_range() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.UsageContext.Value.range)
  if (has_range()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Range* temp = value_.range_;
    value_.range_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Range& UsageContext_Value::range() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.UsageContext.Value.range)
  return has_range()
      ? *value_.range_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Range*>(&::google::fhir::stu3::proto::_Range_default_instance_);
}
inline ::google::fhir::stu3::proto::Range* UsageContext_Value::mutable_range() {
  if (!has_range()) {
    clear_value();
    set_has_range();
    value_.range_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Range >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.UsageContext.Value.range)
  return value_.range_;
}

inline bool UsageContext_Value::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void UsageContext_Value::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline UsageContext_Value::ValueCase UsageContext_Value::value_case() const {
  return UsageContext_Value::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// UsageContext

// .google.fhir.stu3.proto.String id = 1;
inline bool UsageContext::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsageContext::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsageContext::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.UsageContext.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsageContext::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.UsageContext.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsageContext::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.UsageContext.id)
  return id_;
}
inline void UsageContext::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.UsageContext.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsageContext::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsageContext::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.UsageContext.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsageContext::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.UsageContext.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsageContext::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.UsageContext.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsageContext::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.UsageContext.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsageContext::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.UsageContext.extension)
  return extension_;
}

// .google.fhir.stu3.proto.Coding code = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsageContext::has_code() const {
  return this != internal_default_instance() && code_ != NULL;
}
inline const ::google::fhir::stu3::proto::Coding& UsageContext::_internal_code() const {
  return *code_;
}
inline const ::google::fhir::stu3::proto::Coding& UsageContext::code() const {
  const ::google::fhir::stu3::proto::Coding* p = code_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.UsageContext.code)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Coding*>(
      &::google::fhir::stu3::proto::_Coding_default_instance_);
}
inline ::google::fhir::stu3::proto::Coding* UsageContext::release_code() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.UsageContext.code)
  
  ::google::fhir::stu3::proto::Coding* temp = code_;
  code_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Coding* UsageContext::mutable_code() {
  
  if (code_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Coding>(GetArenaNoVirtual());
    code_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.UsageContext.code)
  return code_;
}
inline void UsageContext::set_allocated_code(::google::fhir::stu3::proto::Coding* code) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(code_);
  }
  if (code) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      code = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, code, submessage_arena);
    }
    
  } else {
    
  }
  code_ = code;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.UsageContext.code)
}

// .google.fhir.stu3.proto.UsageContext.Value value = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
inline bool UsageContext::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
inline void UsageContext::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
}
inline const ::google::fhir::stu3::proto::UsageContext_Value& UsageContext::_internal_value() const {
  return *value_;
}
inline const ::google::fhir::stu3::proto::UsageContext_Value& UsageContext::value() const {
  const ::google::fhir::stu3::proto::UsageContext_Value* p = value_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.UsageContext.value)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::UsageContext_Value*>(
      &::google::fhir::stu3::proto::_UsageContext_Value_default_instance_);
}
inline ::google::fhir::stu3::proto::UsageContext_Value* UsageContext::release_value() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.UsageContext.value)
  
  ::google::fhir::stu3::proto::UsageContext_Value* temp = value_;
  value_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::UsageContext_Value* UsageContext::mutable_value() {
  
  if (value_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::UsageContext_Value>(GetArenaNoVirtual());
    value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.UsageContext.value)
  return value_;
}
inline void UsageContext::set_allocated_value(::google::fhir::stu3::proto::UsageContext_Value* value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete value_;
  }
  if (value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.UsageContext.value)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace stu3
}  // namespace fhir
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_proto_2fstu3_2fmetadatatypes_2eproto
