// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/stu3/google_extensions.proto

#include "proto/stu3/google_extensions.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_proto_2fstu3_2fdatatypes_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fdatatypes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Address;
}  // namespace protobuf_proto_2fstu3_2fdatatypes_2eproto
namespace protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_EventLabel_Label_ClassValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_EventLabel_Label;
}  // namespace protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto
namespace google {
namespace fhir {
namespace stu3 {
namespace google {
class Base64BinarySeparatorStrideDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Base64BinarySeparatorStride>
      _instance;
} _Base64BinarySeparatorStride_default_instance_;
class EventLabel_Label_ClassValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventLabel_Label_ClassValue>
      _instance;
  const ::google::fhir::stu3::proto::Boolean* boolean_;
  const ::google::fhir::stu3::proto::Decimal* decimal_;
  const ::google::fhir::stu3::proto::Integer* integer_;
  const ::google::fhir::stu3::proto::String* string_value_;
} _EventLabel_Label_ClassValue_default_instance_;
class EventLabel_LabelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventLabel_Label>
      _instance;
} _EventLabel_Label_default_instance_;
class EventLabelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventLabel>
      _instance;
} _EventLabel_default_instance_;
class EventTriggerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventTrigger>
      _instance;
} _EventTrigger_default_instance_;
class PrimitiveHasNoValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PrimitiveHasNoValue>
      _instance;
} _PrimitiveHasNoValue_default_instance_;
}  // namespace google
}  // namespace stu3
}  // namespace fhir
}  // namespace google
namespace protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto {
static void InitDefaultsBase64BinarySeparatorStride() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::google::_Base64BinarySeparatorStride_default_instance_;
    new (ptr) ::google::fhir::stu3::google::Base64BinarySeparatorStride();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::google::Base64BinarySeparatorStride::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Base64BinarySeparatorStride =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBase64BinarySeparatorStride}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsEventLabel_Label_ClassValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::google::_EventLabel_Label_ClassValue_default_instance_;
    new (ptr) ::google::fhir::stu3::google::EventLabel_Label_ClassValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::google::EventLabel_Label_ClassValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EventLabel_Label_ClassValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEventLabel_Label_ClassValue}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsEventLabel_Label() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::google::_EventLabel_Label_default_instance_;
    new (ptr) ::google::fhir::stu3::google::EventLabel_Label();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::google::EventLabel_Label::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_EventLabel_Label =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsEventLabel_Label}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::scc_info_EventLabel_Label_ClassValue.base,}};

static void InitDefaultsEventLabel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::google::_EventLabel_default_instance_;
    new (ptr) ::google::fhir::stu3::google::EventLabel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::google::EventLabel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_EventLabel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsEventLabel}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::scc_info_EventLabel_Label.base,}};

static void InitDefaultsEventTrigger() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::google::_EventTrigger_default_instance_;
    new (ptr) ::google::fhir::stu3::google::EventTrigger();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::google::EventTrigger::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EventTrigger =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEventTrigger}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsPrimitiveHasNoValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::google::_PrimitiveHasNoValue_default_instance_;
    new (ptr) ::google::fhir::stu3::google::PrimitiveHasNoValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::google::PrimitiveHasNoValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PrimitiveHasNoValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPrimitiveHasNoValue}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Base64BinarySeparatorStride.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EventLabel_Label_ClassValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EventLabel_Label.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EventLabel.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EventTrigger.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PrimitiveHasNoValue.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::google::Base64BinarySeparatorStride, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::google::Base64BinarySeparatorStride, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::google::Base64BinarySeparatorStride, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::google::Base64BinarySeparatorStride, separator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::google::Base64BinarySeparatorStride, stride_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::google::EventLabel_Label_ClassValue, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::google::EventLabel_Label_ClassValue, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::google::EventLabel_Label_ClassValueDefaultTypeInternal, boolean_),
  offsetof(::google::fhir::stu3::google::EventLabel_Label_ClassValueDefaultTypeInternal, decimal_),
  offsetof(::google::fhir::stu3::google::EventLabel_Label_ClassValueDefaultTypeInternal, integer_),
  offsetof(::google::fhir::stu3::google::EventLabel_Label_ClassValueDefaultTypeInternal, string_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::google::EventLabel_Label_ClassValue, class_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::google::EventLabel_Label, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::google::EventLabel_Label, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::google::EventLabel_Label, class_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::google::EventLabel_Label, class_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::google::EventLabel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::google::EventLabel, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::google::EventLabel, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::google::EventLabel, patient_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::google::EventLabel, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::google::EventLabel, event_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::google::EventLabel, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::google::EventLabel, label_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::google::EventTrigger, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::google::EventTrigger, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::google::EventTrigger, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::google::EventTrigger, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::google::EventTrigger, event_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::google::EventTrigger, source_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::google::PrimitiveHasNoValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::google::PrimitiveHasNoValue, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::google::PrimitiveHasNoValue, value_boolean_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::fhir::stu3::google::Base64BinarySeparatorStride)},
  { 9, -1, sizeof(::google::fhir::stu3::google::EventLabel_Label_ClassValue)},
  { 19, -1, sizeof(::google::fhir::stu3::google::EventLabel_Label)},
  { 27, -1, sizeof(::google::fhir::stu3::google::EventLabel)},
  { 39, -1, sizeof(::google::fhir::stu3::google::EventTrigger)},
  { 49, -1, sizeof(::google::fhir::stu3::google::PrimitiveHasNoValue)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::google::_Base64BinarySeparatorStride_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::google::_EventLabel_Label_ClassValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::google::_EventLabel_Label_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::google::_EventLabel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::google::_EventTrigger_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::google::_PrimitiveHasNoValue_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "proto/stu3/google_extensions.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\"proto/stu3/google_extensions.proto\022\027go"
      "ogle.fhir.stu3.google\032\034proto/stu3/annota"
      "tions.proto\032\032proto/stu3/datatypes.proto\""
      "\377\002\n\033Base64BinarySeparatorStride\022*\n\002id\030\001 "
      "\001(\0132\036.google.fhir.stu3.proto.String\0224\n\te"
      "xtension\030\002 \003(\0132!.google.fhir.stu3.proto."
      "Extension\0229\n\tseparator\030\004 \001(\0132\036.google.fh"
      "ir.stu3.proto.StringB\006\360\320\207\353\004\001\022;\n\006stride\030\005"
      " \001(\0132#.google.fhir.stu3.proto.PositiveIn"
      "tB\006\360\320\207\353\004\001:\205\001\300\237\343\266\005\002\232\265\216\223\0061http://hl7.org/f"
      "hir/StructureDefinition/Extension\262\376\344\227\006Bh"
      "ttps://g.co/fhir/StructureDefinition/bas"
      "e64Binary-separatorStride\"\275\007\n\nEventLabel"
      "\022*\n\002id\030\001 \001(\0132\036.google.fhir.stu3.proto.St"
      "ring\0224\n\textension\030\002 \003(\0132!.google.fhir.st"
      "u3.proto.Extension\022:\n\007patient\030\004 \001(\0132!.go"
      "ogle.fhir.stu3.proto.ReferenceB\006\360\320\207\353\004\001\0224"
      "\n\004type\030\005 \001(\0132\036.google.fhir.stu3.proto.Co"
      "dingB\006\360\320\207\353\004\001\0224\n\nevent_time\030\006 \001(\0132 .googl"
      "e.fhir.stu3.proto.DateTime\0221\n\006source\030\007 \001"
      "(\0132!.google.fhir.stu3.proto.Reference\0228\n"
      "\005label\030\010 \003(\0132).google.fhir.stu3.google.E"
      "ventLabel.Label\032\302\003\n\005Label\022*\n\002id\030\001 \001(\0132\036."
      "google.fhir.stu3.proto.String\022:\n\nclass_n"
      "ame\030\004 \001(\0132\036.google.fhir.stu3.proto.Codin"
      "gB\006\360\320\207\353\004\001\022W\n\013class_value\030\005 \001(\01324.google."
      "fhir.stu3.google.EventLabel.Label.ClassV"
      "alueB\014\370\341\343\311\005\001\360\320\207\353\004\001\032\367\001\n\nClassValue\0222\n\007boo"
      "lean\030\001 \001(\0132\037.google.fhir.stu3.proto.Bool"
      "eanH\000\0222\n\007decimal\030\002 \001(\0132\037.google.fhir.stu"
      "3.proto.DecimalH\000\0222\n\007integer\030\003 \001(\0132\037.goo"
      "gle.fhir.stu3.proto.IntegerH\000\022>\n\014string_"
      "value\030\004 \001(\0132\036.google.fhir.stu3.proto.Str"
      "ingH\000R\006stringB\r\n\013class_value:s\300\237\343\266\005\002\232\265\216\223"
      "\0061http://hl7.org/fhir/StructureDefinitio"
      "n/Extension\262\376\344\227\0060https://g.co/fhir/Struc"
      "tureDefinition/eventLabel\"\216\003\n\014EventTrigg"
      "er\022*\n\002id\030\001 \001(\0132\036.google.fhir.stu3.proto."
      "String\0224\n\textension\030\002 \003(\0132!.google.fhir."
      "stu3.proto.Extension\0224\n\004type\030\004 \001(\0132\036.goo"
      "gle.fhir.stu3.proto.CodingB\006\360\320\207\353\004\001\022<\n\nev"
      "ent_time\030\005 \001(\0132 .google.fhir.stu3.proto."
      "DateTimeB\006\360\320\207\353\004\001\0221\n\006source\030\006 \001(\0132!.googl"
      "e.fhir.stu3.proto.Reference:u\300\237\343\266\005\002\232\265\216\223\006"
      "1http://hl7.org/fhir/StructureDefinition"
      "/Extension\262\376\344\227\0062https://g.co/fhir/Struct"
      "ureDefinition/eventTrigger\"\367\001\n\023Primitive"
      "HasNoValue\022*\n\002id\030\001 \001(\0132\036.google.fhir.stu"
      "3.proto.String\0226\n\rvalue_boolean\030\003 \001(\0132\037."
      "google.fhir.stu3.proto.Boolean:|\300\237\343\266\005\002\232\265"
      "\216\223\0061http://hl7.org/fhir/StructureDefinit"
      "ion/Extension\262\376\344\227\0069https://g.co/fhir/Str"
      "uctureDefinition/primitiveHasNoValueB\037\n\033"
      "com.google.fhir.stu3.googleP\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2157);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/stu3/google_extensions.proto", &protobuf_RegisterTypes);
  ::protobuf_proto_2fstu3_2fannotations_2eproto::AddDescriptors();
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto
namespace google {
namespace fhir {
namespace stu3 {
namespace google {

// ===================================================================

void Base64BinarySeparatorStride::InitAsDefaultInstance() {
  ::google::fhir::stu3::google::_Base64BinarySeparatorStride_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::google::_Base64BinarySeparatorStride_default_instance_._instance.get_mutable()->separator_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::google::_Base64BinarySeparatorStride_default_instance_._instance.get_mutable()->stride_ = const_cast< ::google::fhir::stu3::proto::PositiveInt*>(
      ::google::fhir::stu3::proto::PositiveInt::internal_default_instance());
}
void Base64BinarySeparatorStride::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void Base64BinarySeparatorStride::clear_extension() {
  extension_.Clear();
}
void Base64BinarySeparatorStride::clear_separator() {
  if (GetArenaNoVirtual() == NULL && separator_ != NULL) {
    delete separator_;
  }
  separator_ = NULL;
}
void Base64BinarySeparatorStride::clear_stride() {
  if (GetArenaNoVirtual() == NULL && stride_ != NULL) {
    delete stride_;
  }
  stride_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Base64BinarySeparatorStride::kIdFieldNumber;
const int Base64BinarySeparatorStride::kExtensionFieldNumber;
const int Base64BinarySeparatorStride::kSeparatorFieldNumber;
const int Base64BinarySeparatorStride::kStrideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Base64BinarySeparatorStride::Base64BinarySeparatorStride()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::scc_info_Base64BinarySeparatorStride.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.google.Base64BinarySeparatorStride)
}
Base64BinarySeparatorStride::Base64BinarySeparatorStride(const Base64BinarySeparatorStride& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_separator()) {
    separator_ = new ::google::fhir::stu3::proto::String(*from.separator_);
  } else {
    separator_ = NULL;
  }
  if (from.has_stride()) {
    stride_ = new ::google::fhir::stu3::proto::PositiveInt(*from.stride_);
  } else {
    stride_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.google.Base64BinarySeparatorStride)
}

void Base64BinarySeparatorStride::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stride_) -
      reinterpret_cast<char*>(&id_)) + sizeof(stride_));
}

Base64BinarySeparatorStride::~Base64BinarySeparatorStride() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.google.Base64BinarySeparatorStride)
  SharedDtor();
}

void Base64BinarySeparatorStride::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete separator_;
  if (this != internal_default_instance()) delete stride_;
}

void Base64BinarySeparatorStride::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Base64BinarySeparatorStride::descriptor() {
  ::protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Base64BinarySeparatorStride& Base64BinarySeparatorStride::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::scc_info_Base64BinarySeparatorStride.base);
  return *internal_default_instance();
}


void Base64BinarySeparatorStride::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.google.Base64BinarySeparatorStride)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && separator_ != NULL) {
    delete separator_;
  }
  separator_ = NULL;
  if (GetArenaNoVirtual() == NULL && stride_ != NULL) {
    delete stride_;
  }
  stride_ = NULL;
  _internal_metadata_.Clear();
}

bool Base64BinarySeparatorStride::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.google.Base64BinarySeparatorStride)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String separator = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_separator()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.PositiveInt stride = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stride()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.google.Base64BinarySeparatorStride)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.google.Base64BinarySeparatorStride)
  return false;
#undef DO_
}

void Base64BinarySeparatorStride::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.google.Base64BinarySeparatorStride)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.String separator = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_separator()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_separator(), output);
  }

  // .google.fhir.stu3.proto.PositiveInt stride = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_stride()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_stride(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.google.Base64BinarySeparatorStride)
}

::google::protobuf::uint8* Base64BinarySeparatorStride::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.google.Base64BinarySeparatorStride)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.String separator = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_separator()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_separator(), deterministic, target);
  }

  // .google.fhir.stu3.proto.PositiveInt stride = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_stride()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_stride(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.google.Base64BinarySeparatorStride)
  return target;
}

size_t Base64BinarySeparatorStride::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.google.Base64BinarySeparatorStride)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.String separator = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_separator()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *separator_);
  }

  // .google.fhir.stu3.proto.PositiveInt stride = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_stride()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *stride_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Base64BinarySeparatorStride::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.google.Base64BinarySeparatorStride)
  GOOGLE_DCHECK_NE(&from, this);
  const Base64BinarySeparatorStride* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Base64BinarySeparatorStride>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.google.Base64BinarySeparatorStride)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.google.Base64BinarySeparatorStride)
    MergeFrom(*source);
  }
}

void Base64BinarySeparatorStride::MergeFrom(const Base64BinarySeparatorStride& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.google.Base64BinarySeparatorStride)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_separator()) {
    mutable_separator()->::google::fhir::stu3::proto::String::MergeFrom(from.separator());
  }
  if (from.has_stride()) {
    mutable_stride()->::google::fhir::stu3::proto::PositiveInt::MergeFrom(from.stride());
  }
}

void Base64BinarySeparatorStride::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.google.Base64BinarySeparatorStride)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Base64BinarySeparatorStride::CopyFrom(const Base64BinarySeparatorStride& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.google.Base64BinarySeparatorStride)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Base64BinarySeparatorStride::IsInitialized() const {
  return true;
}

void Base64BinarySeparatorStride::Swap(Base64BinarySeparatorStride* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Base64BinarySeparatorStride::InternalSwap(Base64BinarySeparatorStride* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(separator_, other->separator_);
  swap(stride_, other->stride_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Base64BinarySeparatorStride::GetMetadata() const {
  protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EventLabel_Label_ClassValue::InitAsDefaultInstance() {
  ::google::fhir::stu3::google::_EventLabel_Label_ClassValue_default_instance_.boolean_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
  ::google::fhir::stu3::google::_EventLabel_Label_ClassValue_default_instance_.decimal_ = const_cast< ::google::fhir::stu3::proto::Decimal*>(
      ::google::fhir::stu3::proto::Decimal::internal_default_instance());
  ::google::fhir::stu3::google::_EventLabel_Label_ClassValue_default_instance_.integer_ = const_cast< ::google::fhir::stu3::proto::Integer*>(
      ::google::fhir::stu3::proto::Integer::internal_default_instance());
  ::google::fhir::stu3::google::_EventLabel_Label_ClassValue_default_instance_.string_value_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
void EventLabel_Label_ClassValue::set_allocated_boolean(::google::fhir::stu3::proto::Boolean* boolean) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_class_value();
  if (boolean) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      boolean = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, boolean, submessage_arena);
    }
    set_has_boolean();
    class_value_.boolean_ = boolean;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.google.EventLabel.Label.ClassValue.boolean)
}
void EventLabel_Label_ClassValue::clear_boolean() {
  if (has_boolean()) {
    delete class_value_.boolean_;
    clear_has_class_value();
  }
}
void EventLabel_Label_ClassValue::set_allocated_decimal(::google::fhir::stu3::proto::Decimal* decimal) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_class_value();
  if (decimal) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      decimal = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, decimal, submessage_arena);
    }
    set_has_decimal();
    class_value_.decimal_ = decimal;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.google.EventLabel.Label.ClassValue.decimal)
}
void EventLabel_Label_ClassValue::clear_decimal() {
  if (has_decimal()) {
    delete class_value_.decimal_;
    clear_has_class_value();
  }
}
void EventLabel_Label_ClassValue::set_allocated_integer(::google::fhir::stu3::proto::Integer* integer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_class_value();
  if (integer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      integer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, integer, submessage_arena);
    }
    set_has_integer();
    class_value_.integer_ = integer;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.google.EventLabel.Label.ClassValue.integer)
}
void EventLabel_Label_ClassValue::clear_integer() {
  if (has_integer()) {
    delete class_value_.integer_;
    clear_has_class_value();
  }
}
void EventLabel_Label_ClassValue::set_allocated_string_value(::google::fhir::stu3::proto::String* string_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_class_value();
  if (string_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      string_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, string_value, submessage_arena);
    }
    set_has_string_value();
    class_value_.string_value_ = string_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.google.EventLabel.Label.ClassValue.string_value)
}
void EventLabel_Label_ClassValue::clear_string_value() {
  if (has_string_value()) {
    delete class_value_.string_value_;
    clear_has_class_value();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventLabel_Label_ClassValue::kBooleanFieldNumber;
const int EventLabel_Label_ClassValue::kDecimalFieldNumber;
const int EventLabel_Label_ClassValue::kIntegerFieldNumber;
const int EventLabel_Label_ClassValue::kStringValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventLabel_Label_ClassValue::EventLabel_Label_ClassValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::scc_info_EventLabel_Label_ClassValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.google.EventLabel.Label.ClassValue)
}
EventLabel_Label_ClassValue::EventLabel_Label_ClassValue(const EventLabel_Label_ClassValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_class_value();
  switch (from.class_value_case()) {
    case kBoolean: {
      mutable_boolean()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.boolean());
      break;
    }
    case kDecimal: {
      mutable_decimal()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.decimal());
      break;
    }
    case kInteger: {
      mutable_integer()->::google::fhir::stu3::proto::Integer::MergeFrom(from.integer());
      break;
    }
    case kStringValue: {
      mutable_string_value()->::google::fhir::stu3::proto::String::MergeFrom(from.string_value());
      break;
    }
    case CLASS_VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.google.EventLabel.Label.ClassValue)
}

void EventLabel_Label_ClassValue::SharedCtor() {
  clear_has_class_value();
}

EventLabel_Label_ClassValue::~EventLabel_Label_ClassValue() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.google.EventLabel.Label.ClassValue)
  SharedDtor();
}

void EventLabel_Label_ClassValue::SharedDtor() {
  if (has_class_value()) {
    clear_class_value();
  }
}

void EventLabel_Label_ClassValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EventLabel_Label_ClassValue::descriptor() {
  ::protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventLabel_Label_ClassValue& EventLabel_Label_ClassValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::scc_info_EventLabel_Label_ClassValue.base);
  return *internal_default_instance();
}


void EventLabel_Label_ClassValue::clear_class_value() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.google.EventLabel.Label.ClassValue)
  switch (class_value_case()) {
    case kBoolean: {
      delete class_value_.boolean_;
      break;
    }
    case kDecimal: {
      delete class_value_.decimal_;
      break;
    }
    case kInteger: {
      delete class_value_.integer_;
      break;
    }
    case kStringValue: {
      delete class_value_.string_value_;
      break;
    }
    case CLASS_VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CLASS_VALUE_NOT_SET;
}


void EventLabel_Label_ClassValue::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.google.EventLabel.Label.ClassValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_class_value();
  _internal_metadata_.Clear();
}

bool EventLabel_Label_ClassValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.google.EventLabel.Label.ClassValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Boolean boolean = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_boolean()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Decimal decimal = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_decimal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Integer integer = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_integer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String string_value = 4[json_name = "string"];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_string_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.google.EventLabel.Label.ClassValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.google.EventLabel.Label.ClassValue)
  return false;
#undef DO_
}

void EventLabel_Label_ClassValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.google.EventLabel.Label.ClassValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Boolean boolean = 1;
  if (has_boolean()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_boolean(), output);
  }

  // .google.fhir.stu3.proto.Decimal decimal = 2;
  if (has_decimal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_decimal(), output);
  }

  // .google.fhir.stu3.proto.Integer integer = 3;
  if (has_integer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_integer(), output);
  }

  // .google.fhir.stu3.proto.String string_value = 4[json_name = "string"];
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_string_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.google.EventLabel.Label.ClassValue)
}

::google::protobuf::uint8* EventLabel_Label_ClassValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.google.EventLabel.Label.ClassValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Boolean boolean = 1;
  if (has_boolean()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_boolean(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Decimal decimal = 2;
  if (has_decimal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_decimal(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Integer integer = 3;
  if (has_integer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_integer(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String string_value = 4[json_name = "string"];
  if (has_string_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_string_value(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.google.EventLabel.Label.ClassValue)
  return target;
}

size_t EventLabel_Label_ClassValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.google.EventLabel.Label.ClassValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (class_value_case()) {
    // .google.fhir.stu3.proto.Boolean boolean = 1;
    case kBoolean: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *class_value_.boolean_);
      break;
    }
    // .google.fhir.stu3.proto.Decimal decimal = 2;
    case kDecimal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *class_value_.decimal_);
      break;
    }
    // .google.fhir.stu3.proto.Integer integer = 3;
    case kInteger: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *class_value_.integer_);
      break;
    }
    // .google.fhir.stu3.proto.String string_value = 4[json_name = "string"];
    case kStringValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *class_value_.string_value_);
      break;
    }
    case CLASS_VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventLabel_Label_ClassValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.google.EventLabel.Label.ClassValue)
  GOOGLE_DCHECK_NE(&from, this);
  const EventLabel_Label_ClassValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventLabel_Label_ClassValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.google.EventLabel.Label.ClassValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.google.EventLabel.Label.ClassValue)
    MergeFrom(*source);
  }
}

void EventLabel_Label_ClassValue::MergeFrom(const EventLabel_Label_ClassValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.google.EventLabel.Label.ClassValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.class_value_case()) {
    case kBoolean: {
      mutable_boolean()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.boolean());
      break;
    }
    case kDecimal: {
      mutable_decimal()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.decimal());
      break;
    }
    case kInteger: {
      mutable_integer()->::google::fhir::stu3::proto::Integer::MergeFrom(from.integer());
      break;
    }
    case kStringValue: {
      mutable_string_value()->::google::fhir::stu3::proto::String::MergeFrom(from.string_value());
      break;
    }
    case CLASS_VALUE_NOT_SET: {
      break;
    }
  }
}

void EventLabel_Label_ClassValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.google.EventLabel.Label.ClassValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventLabel_Label_ClassValue::CopyFrom(const EventLabel_Label_ClassValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.google.EventLabel.Label.ClassValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventLabel_Label_ClassValue::IsInitialized() const {
  return true;
}

void EventLabel_Label_ClassValue::Swap(EventLabel_Label_ClassValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventLabel_Label_ClassValue::InternalSwap(EventLabel_Label_ClassValue* other) {
  using std::swap;
  swap(class_value_, other->class_value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EventLabel_Label_ClassValue::GetMetadata() const {
  protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EventLabel_Label::InitAsDefaultInstance() {
  ::google::fhir::stu3::google::_EventLabel_Label_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::google::_EventLabel_Label_default_instance_._instance.get_mutable()->class_name_ = const_cast< ::google::fhir::stu3::proto::Coding*>(
      ::google::fhir::stu3::proto::Coding::internal_default_instance());
  ::google::fhir::stu3::google::_EventLabel_Label_default_instance_._instance.get_mutable()->class_value_ = const_cast< ::google::fhir::stu3::google::EventLabel_Label_ClassValue*>(
      ::google::fhir::stu3::google::EventLabel_Label_ClassValue::internal_default_instance());
}
void EventLabel_Label::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void EventLabel_Label::clear_class_name() {
  if (GetArenaNoVirtual() == NULL && class_name_ != NULL) {
    delete class_name_;
  }
  class_name_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventLabel_Label::kIdFieldNumber;
const int EventLabel_Label::kClassNameFieldNumber;
const int EventLabel_Label::kClassValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventLabel_Label::EventLabel_Label()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::scc_info_EventLabel_Label.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.google.EventLabel.Label)
}
EventLabel_Label::EventLabel_Label(const EventLabel_Label& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_class_name()) {
    class_name_ = new ::google::fhir::stu3::proto::Coding(*from.class_name_);
  } else {
    class_name_ = NULL;
  }
  if (from.has_class_value()) {
    class_value_ = new ::google::fhir::stu3::google::EventLabel_Label_ClassValue(*from.class_value_);
  } else {
    class_value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.google.EventLabel.Label)
}

void EventLabel_Label::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&class_value_) -
      reinterpret_cast<char*>(&id_)) + sizeof(class_value_));
}

EventLabel_Label::~EventLabel_Label() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.google.EventLabel.Label)
  SharedDtor();
}

void EventLabel_Label::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete class_name_;
  if (this != internal_default_instance()) delete class_value_;
}

void EventLabel_Label::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EventLabel_Label::descriptor() {
  ::protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventLabel_Label& EventLabel_Label::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::scc_info_EventLabel_Label.base);
  return *internal_default_instance();
}


void EventLabel_Label::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.google.EventLabel.Label)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && class_name_ != NULL) {
    delete class_name_;
  }
  class_name_ = NULL;
  if (GetArenaNoVirtual() == NULL && class_value_ != NULL) {
    delete class_value_;
  }
  class_value_ = NULL;
  _internal_metadata_.Clear();
}

bool EventLabel_Label::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.google.EventLabel.Label)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Coding class_name = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_class_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.google.EventLabel.Label.ClassValue class_value = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_class_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.google.EventLabel.Label)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.google.EventLabel.Label)
  return false;
#undef DO_
}

void EventLabel_Label::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.google.EventLabel.Label)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .google.fhir.stu3.proto.Coding class_name = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_class_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_class_name(), output);
  }

  // .google.fhir.stu3.google.EventLabel.Label.ClassValue class_value = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_class_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_class_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.google.EventLabel.Label)
}

::google::protobuf::uint8* EventLabel_Label::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.google.EventLabel.Label)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Coding class_name = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_class_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_class_name(), deterministic, target);
  }

  // .google.fhir.stu3.google.EventLabel.Label.ClassValue class_value = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_class_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_class_value(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.google.EventLabel.Label)
  return target;
}

size_t EventLabel_Label::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.google.EventLabel.Label)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Coding class_name = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_class_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *class_name_);
  }

  // .google.fhir.stu3.google.EventLabel.Label.ClassValue class_value = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_class_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *class_value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventLabel_Label::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.google.EventLabel.Label)
  GOOGLE_DCHECK_NE(&from, this);
  const EventLabel_Label* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventLabel_Label>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.google.EventLabel.Label)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.google.EventLabel.Label)
    MergeFrom(*source);
  }
}

void EventLabel_Label::MergeFrom(const EventLabel_Label& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.google.EventLabel.Label)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_class_name()) {
    mutable_class_name()->::google::fhir::stu3::proto::Coding::MergeFrom(from.class_name());
  }
  if (from.has_class_value()) {
    mutable_class_value()->::google::fhir::stu3::google::EventLabel_Label_ClassValue::MergeFrom(from.class_value());
  }
}

void EventLabel_Label::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.google.EventLabel.Label)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventLabel_Label::CopyFrom(const EventLabel_Label& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.google.EventLabel.Label)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventLabel_Label::IsInitialized() const {
  return true;
}

void EventLabel_Label::Swap(EventLabel_Label* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventLabel_Label::InternalSwap(EventLabel_Label* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(class_name_, other->class_name_);
  swap(class_value_, other->class_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EventLabel_Label::GetMetadata() const {
  protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EventLabel::InitAsDefaultInstance() {
  ::google::fhir::stu3::google::_EventLabel_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::google::_EventLabel_default_instance_._instance.get_mutable()->patient_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::google::_EventLabel_default_instance_._instance.get_mutable()->type_ = const_cast< ::google::fhir::stu3::proto::Coding*>(
      ::google::fhir::stu3::proto::Coding::internal_default_instance());
  ::google::fhir::stu3::google::_EventLabel_default_instance_._instance.get_mutable()->event_time_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::google::_EventLabel_default_instance_._instance.get_mutable()->source_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
}
void EventLabel::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void EventLabel::clear_extension() {
  extension_.Clear();
}
void EventLabel::clear_patient() {
  if (GetArenaNoVirtual() == NULL && patient_ != NULL) {
    delete patient_;
  }
  patient_ = NULL;
}
void EventLabel::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
}
void EventLabel::clear_event_time() {
  if (GetArenaNoVirtual() == NULL && event_time_ != NULL) {
    delete event_time_;
  }
  event_time_ = NULL;
}
void EventLabel::clear_source() {
  if (GetArenaNoVirtual() == NULL && source_ != NULL) {
    delete source_;
  }
  source_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventLabel::kIdFieldNumber;
const int EventLabel::kExtensionFieldNumber;
const int EventLabel::kPatientFieldNumber;
const int EventLabel::kTypeFieldNumber;
const int EventLabel::kEventTimeFieldNumber;
const int EventLabel::kSourceFieldNumber;
const int EventLabel::kLabelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventLabel::EventLabel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::scc_info_EventLabel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.google.EventLabel)
}
EventLabel::EventLabel(const EventLabel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      label_(from.label_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_patient()) {
    patient_ = new ::google::fhir::stu3::proto::Reference(*from.patient_);
  } else {
    patient_ = NULL;
  }
  if (from.has_type()) {
    type_ = new ::google::fhir::stu3::proto::Coding(*from.type_);
  } else {
    type_ = NULL;
  }
  if (from.has_event_time()) {
    event_time_ = new ::google::fhir::stu3::proto::DateTime(*from.event_time_);
  } else {
    event_time_ = NULL;
  }
  if (from.has_source()) {
    source_ = new ::google::fhir::stu3::proto::Reference(*from.source_);
  } else {
    source_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.google.EventLabel)
}

void EventLabel::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&source_) -
      reinterpret_cast<char*>(&id_)) + sizeof(source_));
}

EventLabel::~EventLabel() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.google.EventLabel)
  SharedDtor();
}

void EventLabel::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete patient_;
  if (this != internal_default_instance()) delete type_;
  if (this != internal_default_instance()) delete event_time_;
  if (this != internal_default_instance()) delete source_;
}

void EventLabel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EventLabel::descriptor() {
  ::protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventLabel& EventLabel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::scc_info_EventLabel.base);
  return *internal_default_instance();
}


void EventLabel::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.google.EventLabel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  label_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && patient_ != NULL) {
    delete patient_;
  }
  patient_ = NULL;
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  if (GetArenaNoVirtual() == NULL && event_time_ != NULL) {
    delete event_time_;
  }
  event_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && source_ != NULL) {
    delete source_;
  }
  source_ = NULL;
  _internal_metadata_.Clear();
}

bool EventLabel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.google.EventLabel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference patient = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_patient()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Coding type = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DateTime event_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference source = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.google.EventLabel.Label label = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_label()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.google.EventLabel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.google.EventLabel)
  return false;
#undef DO_
}

void EventLabel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.google.EventLabel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Reference patient = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_patient()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_patient(), output);
  }

  // .google.fhir.stu3.proto.Coding type = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_type(), output);
  }

  // .google.fhir.stu3.proto.DateTime event_time = 6;
  if (this->has_event_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_event_time(), output);
  }

  // .google.fhir.stu3.proto.Reference source = 7;
  if (this->has_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_source(), output);
  }

  // repeated .google.fhir.stu3.google.EventLabel.Label label = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->label_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->label(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.google.EventLabel)
}

::google::protobuf::uint8* EventLabel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.google.EventLabel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference patient = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_patient()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_patient(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Coding type = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_type(), deterministic, target);
  }

  // .google.fhir.stu3.proto.DateTime event_time = 6;
  if (this->has_event_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_event_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference source = 7;
  if (this->has_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_source(), deterministic, target);
  }

  // repeated .google.fhir.stu3.google.EventLabel.Label label = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->label_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->label(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.google.EventLabel)
  return target;
}

size_t EventLabel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.google.EventLabel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.google.EventLabel.Label label = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->label_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->label(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Reference patient = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_patient()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *patient_);
  }

  // .google.fhir.stu3.proto.Coding type = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  // .google.fhir.stu3.proto.DateTime event_time = 6;
  if (this->has_event_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *event_time_);
  }

  // .google.fhir.stu3.proto.Reference source = 7;
  if (this->has_source()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *source_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventLabel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.google.EventLabel)
  GOOGLE_DCHECK_NE(&from, this);
  const EventLabel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventLabel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.google.EventLabel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.google.EventLabel)
    MergeFrom(*source);
  }
}

void EventLabel::MergeFrom(const EventLabel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.google.EventLabel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  label_.MergeFrom(from.label_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_patient()) {
    mutable_patient()->::google::fhir::stu3::proto::Reference::MergeFrom(from.patient());
  }
  if (from.has_type()) {
    mutable_type()->::google::fhir::stu3::proto::Coding::MergeFrom(from.type());
  }
  if (from.has_event_time()) {
    mutable_event_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.event_time());
  }
  if (from.has_source()) {
    mutable_source()->::google::fhir::stu3::proto::Reference::MergeFrom(from.source());
  }
}

void EventLabel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.google.EventLabel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventLabel::CopyFrom(const EventLabel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.google.EventLabel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventLabel::IsInitialized() const {
  return true;
}

void EventLabel::Swap(EventLabel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventLabel::InternalSwap(EventLabel* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&label_)->InternalSwap(CastToBase(&other->label_));
  swap(id_, other->id_);
  swap(patient_, other->patient_);
  swap(type_, other->type_);
  swap(event_time_, other->event_time_);
  swap(source_, other->source_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EventLabel::GetMetadata() const {
  protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EventTrigger::InitAsDefaultInstance() {
  ::google::fhir::stu3::google::_EventTrigger_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::google::_EventTrigger_default_instance_._instance.get_mutable()->type_ = const_cast< ::google::fhir::stu3::proto::Coding*>(
      ::google::fhir::stu3::proto::Coding::internal_default_instance());
  ::google::fhir::stu3::google::_EventTrigger_default_instance_._instance.get_mutable()->event_time_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::google::_EventTrigger_default_instance_._instance.get_mutable()->source_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
}
void EventTrigger::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void EventTrigger::clear_extension() {
  extension_.Clear();
}
void EventTrigger::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
}
void EventTrigger::clear_event_time() {
  if (GetArenaNoVirtual() == NULL && event_time_ != NULL) {
    delete event_time_;
  }
  event_time_ = NULL;
}
void EventTrigger::clear_source() {
  if (GetArenaNoVirtual() == NULL && source_ != NULL) {
    delete source_;
  }
  source_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventTrigger::kIdFieldNumber;
const int EventTrigger::kExtensionFieldNumber;
const int EventTrigger::kTypeFieldNumber;
const int EventTrigger::kEventTimeFieldNumber;
const int EventTrigger::kSourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventTrigger::EventTrigger()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::scc_info_EventTrigger.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.google.EventTrigger)
}
EventTrigger::EventTrigger(const EventTrigger& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_type()) {
    type_ = new ::google::fhir::stu3::proto::Coding(*from.type_);
  } else {
    type_ = NULL;
  }
  if (from.has_event_time()) {
    event_time_ = new ::google::fhir::stu3::proto::DateTime(*from.event_time_);
  } else {
    event_time_ = NULL;
  }
  if (from.has_source()) {
    source_ = new ::google::fhir::stu3::proto::Reference(*from.source_);
  } else {
    source_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.google.EventTrigger)
}

void EventTrigger::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&source_) -
      reinterpret_cast<char*>(&id_)) + sizeof(source_));
}

EventTrigger::~EventTrigger() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.google.EventTrigger)
  SharedDtor();
}

void EventTrigger::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete type_;
  if (this != internal_default_instance()) delete event_time_;
  if (this != internal_default_instance()) delete source_;
}

void EventTrigger::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EventTrigger::descriptor() {
  ::protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventTrigger& EventTrigger::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::scc_info_EventTrigger.base);
  return *internal_default_instance();
}


void EventTrigger::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.google.EventTrigger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  if (GetArenaNoVirtual() == NULL && event_time_ != NULL) {
    delete event_time_;
  }
  event_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && source_ != NULL) {
    delete source_;
  }
  source_ = NULL;
  _internal_metadata_.Clear();
}

bool EventTrigger::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.google.EventTrigger)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Coding type = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DateTime event_time = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference source = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.google.EventTrigger)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.google.EventTrigger)
  return false;
#undef DO_
}

void EventTrigger::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.google.EventTrigger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Coding type = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_type(), output);
  }

  // .google.fhir.stu3.proto.DateTime event_time = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_event_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_event_time(), output);
  }

  // .google.fhir.stu3.proto.Reference source = 6;
  if (this->has_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_source(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.google.EventTrigger)
}

::google::protobuf::uint8* EventTrigger::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.google.EventTrigger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Coding type = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_type(), deterministic, target);
  }

  // .google.fhir.stu3.proto.DateTime event_time = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_event_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_event_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference source = 6;
  if (this->has_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_source(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.google.EventTrigger)
  return target;
}

size_t EventTrigger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.google.EventTrigger)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Coding type = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  // .google.fhir.stu3.proto.DateTime event_time = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_event_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *event_time_);
  }

  // .google.fhir.stu3.proto.Reference source = 6;
  if (this->has_source()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *source_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventTrigger::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.google.EventTrigger)
  GOOGLE_DCHECK_NE(&from, this);
  const EventTrigger* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventTrigger>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.google.EventTrigger)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.google.EventTrigger)
    MergeFrom(*source);
  }
}

void EventTrigger::MergeFrom(const EventTrigger& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.google.EventTrigger)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_type()) {
    mutable_type()->::google::fhir::stu3::proto::Coding::MergeFrom(from.type());
  }
  if (from.has_event_time()) {
    mutable_event_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.event_time());
  }
  if (from.has_source()) {
    mutable_source()->::google::fhir::stu3::proto::Reference::MergeFrom(from.source());
  }
}

void EventTrigger::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.google.EventTrigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventTrigger::CopyFrom(const EventTrigger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.google.EventTrigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventTrigger::IsInitialized() const {
  return true;
}

void EventTrigger::Swap(EventTrigger* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventTrigger::InternalSwap(EventTrigger* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(type_, other->type_);
  swap(event_time_, other->event_time_);
  swap(source_, other->source_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EventTrigger::GetMetadata() const {
  protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PrimitiveHasNoValue::InitAsDefaultInstance() {
  ::google::fhir::stu3::google::_PrimitiveHasNoValue_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::google::_PrimitiveHasNoValue_default_instance_._instance.get_mutable()->value_boolean_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
}
void PrimitiveHasNoValue::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void PrimitiveHasNoValue::clear_value_boolean() {
  if (GetArenaNoVirtual() == NULL && value_boolean_ != NULL) {
    delete value_boolean_;
  }
  value_boolean_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrimitiveHasNoValue::kIdFieldNumber;
const int PrimitiveHasNoValue::kValueBooleanFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrimitiveHasNoValue::PrimitiveHasNoValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::scc_info_PrimitiveHasNoValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.google.PrimitiveHasNoValue)
}
PrimitiveHasNoValue::PrimitiveHasNoValue(const PrimitiveHasNoValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_value_boolean()) {
    value_boolean_ = new ::google::fhir::stu3::proto::Boolean(*from.value_boolean_);
  } else {
    value_boolean_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.google.PrimitiveHasNoValue)
}

void PrimitiveHasNoValue::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_boolean_) -
      reinterpret_cast<char*>(&id_)) + sizeof(value_boolean_));
}

PrimitiveHasNoValue::~PrimitiveHasNoValue() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.google.PrimitiveHasNoValue)
  SharedDtor();
}

void PrimitiveHasNoValue::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete value_boolean_;
}

void PrimitiveHasNoValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PrimitiveHasNoValue::descriptor() {
  ::protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PrimitiveHasNoValue& PrimitiveHasNoValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::scc_info_PrimitiveHasNoValue.base);
  return *internal_default_instance();
}


void PrimitiveHasNoValue::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.google.PrimitiveHasNoValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_boolean_ != NULL) {
    delete value_boolean_;
  }
  value_boolean_ = NULL;
  _internal_metadata_.Clear();
}

bool PrimitiveHasNoValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.google.PrimitiveHasNoValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Boolean value_boolean = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_boolean()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.google.PrimitiveHasNoValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.google.PrimitiveHasNoValue)
  return false;
#undef DO_
}

void PrimitiveHasNoValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.google.PrimitiveHasNoValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .google.fhir.stu3.proto.Boolean value_boolean = 3;
  if (this->has_value_boolean()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_value_boolean(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.google.PrimitiveHasNoValue)
}

::google::protobuf::uint8* PrimitiveHasNoValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.google.PrimitiveHasNoValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Boolean value_boolean = 3;
  if (this->has_value_boolean()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_value_boolean(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.google.PrimitiveHasNoValue)
  return target;
}

size_t PrimitiveHasNoValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.google.PrimitiveHasNoValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Boolean value_boolean = 3;
  if (this->has_value_boolean()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_boolean_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrimitiveHasNoValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.google.PrimitiveHasNoValue)
  GOOGLE_DCHECK_NE(&from, this);
  const PrimitiveHasNoValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PrimitiveHasNoValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.google.PrimitiveHasNoValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.google.PrimitiveHasNoValue)
    MergeFrom(*source);
  }
}

void PrimitiveHasNoValue::MergeFrom(const PrimitiveHasNoValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.google.PrimitiveHasNoValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_value_boolean()) {
    mutable_value_boolean()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.value_boolean());
  }
}

void PrimitiveHasNoValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.google.PrimitiveHasNoValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrimitiveHasNoValue::CopyFrom(const PrimitiveHasNoValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.google.PrimitiveHasNoValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrimitiveHasNoValue::IsInitialized() const {
  return true;
}

void PrimitiveHasNoValue::Swap(PrimitiveHasNoValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrimitiveHasNoValue::InternalSwap(PrimitiveHasNoValue* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(value_boolean_, other->value_boolean_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PrimitiveHasNoValue::GetMetadata() const {
  protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fgoogle_5fextensions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace google
}  // namespace stu3
}  // namespace fhir
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::google::Base64BinarySeparatorStride* Arena::CreateMaybeMessage< ::google::fhir::stu3::google::Base64BinarySeparatorStride >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::google::Base64BinarySeparatorStride >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::google::EventLabel_Label_ClassValue* Arena::CreateMaybeMessage< ::google::fhir::stu3::google::EventLabel_Label_ClassValue >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::google::EventLabel_Label_ClassValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::google::EventLabel_Label* Arena::CreateMaybeMessage< ::google::fhir::stu3::google::EventLabel_Label >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::google::EventLabel_Label >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::google::EventLabel* Arena::CreateMaybeMessage< ::google::fhir::stu3::google::EventLabel >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::google::EventLabel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::google::EventTrigger* Arena::CreateMaybeMessage< ::google::fhir::stu3::google::EventTrigger >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::google::EventTrigger >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::google::PrimitiveHasNoValue* Arena::CreateMaybeMessage< ::google::fhir::stu3::google::PrimitiveHasNoValue >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::google::PrimitiveHasNoValue >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
