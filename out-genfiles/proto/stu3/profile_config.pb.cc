// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/stu3/profile_config.proto

#include "proto/stu3/profile_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CodeData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ElementData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FieldRestriction;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CodeableConceptSlice;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ExtensionSlice;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_CodeableConceptSlice_CodingSlice;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ComplexExtension;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_SimpleExtension;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_Profile;
}  // namespace protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto
namespace google {
namespace fhir {
namespace proto {
class PackageInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PackageInfo>
      _instance;
} _PackageInfo_default_instance_;
class ProfilesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Profiles>
      _instance;
} _Profiles_default_instance_;
class ExtensionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Extensions>
      _instance;
} _Extensions_default_instance_;
class ProfileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Profile>
      _instance;
} _Profile_default_instance_;
class FieldRestrictionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FieldRestriction>
      _instance;
} _FieldRestriction_default_instance_;
class ExtensionSliceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExtensionSlice>
      _instance;
} _ExtensionSlice_default_instance_;
class CodeableConceptSlice_CodingSliceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CodeableConceptSlice_CodingSlice>
      _instance;
} _CodeableConceptSlice_CodingSlice_default_instance_;
class CodeableConceptSliceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CodeableConceptSlice>
      _instance;
} _CodeableConceptSlice_default_instance_;
class ComplexExtensionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ComplexExtension>
      _instance;
} _ComplexExtension_default_instance_;
class SimpleExtensionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SimpleExtension>
      _instance;
} _SimpleExtension_default_instance_;
class ElementDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ElementData>
      _instance;
} _ElementData_default_instance_;
class CodeDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CodeData>
      _instance;
} _CodeData_default_instance_;
}  // namespace proto
}  // namespace fhir
}  // namespace google
namespace protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto {
static void InitDefaultsPackageInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::proto::_PackageInfo_default_instance_;
    new (ptr) ::google::fhir::proto::PackageInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::proto::PackageInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PackageInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPackageInfo}, {}};

static void InitDefaultsProfiles() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::proto::_Profiles_default_instance_;
    new (ptr) ::google::fhir::proto::Profiles();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::proto::Profiles::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Profiles =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsProfiles}, {
      &protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_Profile.base,}};

static void InitDefaultsExtensions() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::proto::_Extensions_default_instance_;
    new (ptr) ::google::fhir::proto::Extensions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::proto::Extensions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Extensions =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsExtensions}, {
      &protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_SimpleExtension.base,
      &protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_ComplexExtension.base,}};

static void InitDefaultsProfile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::proto::_Profile_default_instance_;
    new (ptr) ::google::fhir::proto::Profile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::proto::Profile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Profile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsProfile}, {
      &protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_ElementData.base,
      &protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_FieldRestriction.base,
      &protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_ExtensionSlice.base,
      &protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_CodeableConceptSlice.base,}};

static void InitDefaultsFieldRestriction() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::proto::_FieldRestriction_default_instance_;
    new (ptr) ::google::fhir::proto::FieldRestriction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::proto::FieldRestriction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FieldRestriction =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFieldRestriction}, {}};

static void InitDefaultsExtensionSlice() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::proto::_ExtensionSlice_default_instance_;
    new (ptr) ::google::fhir::proto::ExtensionSlice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::proto::ExtensionSlice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ExtensionSlice =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsExtensionSlice}, {
      &protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_ElementData.base,}};

static void InitDefaultsCodeableConceptSlice_CodingSlice() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::proto::_CodeableConceptSlice_CodingSlice_default_instance_;
    new (ptr) ::google::fhir::proto::CodeableConceptSlice_CodingSlice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::proto::CodeableConceptSlice_CodingSlice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CodeableConceptSlice_CodingSlice =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCodeableConceptSlice_CodingSlice}, {
      &protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_ElementData.base,
      &protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_CodeData.base,}};

static void InitDefaultsCodeableConceptSlice() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::proto::_CodeableConceptSlice_default_instance_;
    new (ptr) ::google::fhir::proto::CodeableConceptSlice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::proto::CodeableConceptSlice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CodeableConceptSlice =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCodeableConceptSlice}, {
      &protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_CodeableConceptSlice_CodingSlice.base,}};

static void InitDefaultsComplexExtension() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::proto::_ComplexExtension_default_instance_;
    new (ptr) ::google::fhir::proto::ComplexExtension();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::proto::ComplexExtension::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ComplexExtension =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsComplexExtension}, {
      &protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_ElementData.base,
      &protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_SimpleExtension.base,}};

static void InitDefaultsSimpleExtension() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::proto::_SimpleExtension_default_instance_;
    new (ptr) ::google::fhir::proto::SimpleExtension();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::proto::SimpleExtension::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SimpleExtension =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSimpleExtension}, {
      &protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_ElementData.base,
      &protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_CodeData.base,}};

static void InitDefaultsElementData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::proto::_ElementData_default_instance_;
    new (ptr) ::google::fhir::proto::ElementData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::proto::ElementData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ElementData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsElementData}, {}};

static void InitDefaultsCodeData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::proto::_CodeData_default_instance_;
    new (ptr) ::google::fhir::proto::CodeData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::proto::CodeData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CodeData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCodeData}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PackageInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Profiles.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Extensions.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Profile.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FieldRestriction.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExtensionSlice.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CodeableConceptSlice_CodingSlice.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CodeableConceptSlice.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ComplexExtension.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SimpleExtension.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ElementData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CodeData.base);
}

::google::protobuf::Metadata file_level_metadata[12];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::PackageInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::PackageInfo, base_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::PackageInfo, proto_package_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::PackageInfo, java_proto_package_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::PackageInfo, go_proto_package_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::PackageInfo, publisher_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::PackageInfo, fhir_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::PackageInfo, telcom_url_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::Profiles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::Profiles, profile_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::Extensions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::Extensions, simple_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::Extensions, complex_extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::Profile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::Profile, element_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::Profile, base_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::Profile, restriction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::Profile, extension_slice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::Profile, codeable_concept_slice_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::FieldRestriction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::FieldRestriction, field_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::FieldRestriction, size_restriction_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::ExtensionSlice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::ExtensionSlice, field_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::ExtensionSlice, element_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::ExtensionSlice, url_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::CodeableConceptSlice_CodingSlice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::CodeableConceptSlice_CodingSlice, element_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::CodeableConceptSlice_CodingSlice, code_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::CodeableConceptSlice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::CodeableConceptSlice, field_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::CodeableConceptSlice, coding_slice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::CodeableConceptSlice, rules_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::ComplexExtension, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::ComplexExtension, element_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::ComplexExtension, can_have_additional_extensions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::ComplexExtension, simple_field_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::ComplexExtension, complex_field_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::SimpleExtension, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::SimpleExtension, element_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::SimpleExtension, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::SimpleExtension, code_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::SimpleExtension, can_have_extensions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::ElementData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::ElementData, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::ElementData, size_restriction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::ElementData, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::ElementData, short__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::ElementData, comment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::ElementData, url_override_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::CodeData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::CodeData, system_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::CodeData, binding_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::CodeData, binding_strength_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::proto::CodeData, fixed_value_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::fhir::proto::PackageInfo)},
  { 12, -1, sizeof(::google::fhir::proto::Profiles)},
  { 18, -1, sizeof(::google::fhir::proto::Extensions)},
  { 25, -1, sizeof(::google::fhir::proto::Profile)},
  { 35, -1, sizeof(::google::fhir::proto::FieldRestriction)},
  { 42, -1, sizeof(::google::fhir::proto::ExtensionSlice)},
  { 50, -1, sizeof(::google::fhir::proto::CodeableConceptSlice_CodingSlice)},
  { 57, -1, sizeof(::google::fhir::proto::CodeableConceptSlice)},
  { 65, -1, sizeof(::google::fhir::proto::ComplexExtension)},
  { 74, -1, sizeof(::google::fhir::proto::SimpleExtension)},
  { 83, -1, sizeof(::google::fhir::proto::ElementData)},
  { 94, -1, sizeof(::google::fhir::proto::CodeData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::proto::_PackageInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::proto::_Profiles_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::proto::_Extensions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::proto::_Profile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::proto::_FieldRestriction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::proto::_ExtensionSlice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::proto::_CodeableConceptSlice_CodingSlice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::proto::_CodeableConceptSlice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::proto::_ComplexExtension_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::proto::_SimpleExtension_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::proto::_ElementData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::proto::_CodeData_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "proto/stu3/profile_config.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\037proto/stu3/profile_config.proto\022\021googl"
      "e.fhir.proto\032\026proto/stu3/codes.proto\"\251\001\n"
      "\013PackageInfo\022\020\n\010base_url\030\001 \001(\t\022\025\n\rproto_"
      "package\030\002 \001(\t\022\032\n\022java_proto_package\030\003 \001("
      "\t\022\030\n\020go_proto_package\030\004 \001(\t\022\021\n\tpublisher"
      "\030\005 \001(\t\022\024\n\014fhir_version\030\006 \001(\t\022\022\n\ntelcom_u"
      "rl\030\007 \001(\t\"7\n\010Profiles\022+\n\007profile\030\002 \003(\0132\032."
      "google.fhir.proto.Profile\"\212\001\n\nExtensions"
      "\022<\n\020simple_extension\030\002 \003(\0132\".google.fhir"
      ".proto.SimpleExtension\022>\n\021complex_extens"
      "ion\030\003 \003(\0132#.google.fhir.proto.ComplexExt"
      "ension\"\220\002\n\007Profile\0224\n\014element_data\030\001 \001(\013"
      "2\036.google.fhir.proto.ElementData\022\020\n\010base"
      "_url\030\002 \001(\t\0228\n\013restriction\030\003 \003(\0132#.google"
      ".fhir.proto.FieldRestriction\022:\n\017extensio"
      "n_slice\030\004 \003(\0132!.google.fhir.proto.Extens"
      "ionSlice\022G\n\026codeable_concept_slice\030\005 \003(\013"
      "2\'.google.fhir.proto.CodeableConceptSlic"
      "e\"b\n\020FieldRestriction\022\020\n\010field_id\030\001 \001(\t\022"
      "<\n\020size_restriction\030\002 \001(\0162\".google.fhir."
      "proto.SizeRestriction\"e\n\016ExtensionSlice\022"
      "\020\n\010field_id\030\001 \001(\t\0224\n\014element_data\030\002 \001(\0132"
      "\036.google.fhir.proto.ElementData\022\013\n\003url\030\003"
      " \001(\t\"\247\002\n\024CodeableConceptSlice\022\020\n\010field_i"
      "d\030\001 \001(\t\022I\n\014coding_slice\030\002 \003(\01323.google.f"
      "hir.proto.CodeableConceptSlice.CodingSli"
      "ce\022=\n\005rules\030\004 \001(\0162..google.fhir.stu3.pro"
      "to.SlicingRulesCode.Value\032s\n\013CodingSlice"
      "\0224\n\014element_data\030\001 \001(\0132\036.google.fhir.pro"
      "to.ElementData\022.\n\tcode_data\030\002 \001(\0132\033.goog"
      "le.fhir.proto.CodeData\"\346\001\n\020ComplexExtens"
      "ion\0224\n\014element_data\030\001 \001(\0132\036.google.fhir."
      "proto.ElementData\022&\n\036can_have_additional"
      "_extensions\030\002 \001(\010\0228\n\014simple_field\030\003 \003(\0132"
      "\".google.fhir.proto.SimpleExtension\022:\n\rc"
      "omplex_field\030\004 \003(\0132#.google.fhir.proto.C"
      "omplexExtension\"\242\001\n\017SimpleExtension\0224\n\014e"
      "lement_data\030\001 \001(\0132\036.google.fhir.proto.El"
      "ementData\022\014\n\004type\030\002 \003(\t\022.\n\tcode_type\030\003 \001"
      "(\0132\033.google.fhir.proto.CodeData\022\033\n\023can_h"
      "ave_extensions\030\004 \001(\010\"\244\001\n\013ElementData\022\014\n\004"
      "name\030\001 \001(\t\022<\n\020size_restriction\030\002 \001(\0162\".g"
      "oogle.fhir.proto.SizeRestriction\022\023\n\013desc"
      "ription\030\003 \001(\t\022\r\n\005short\030\004 \001(\t\022\017\n\007comment\030"
      "\005 \001(\t\022\024\n\014url_override\030\006 \001(\t\"\222\001\n\010CodeData"
      "\022\016\n\006system\030\001 \001(\t\022\024\n\014binding_name\030\002 \001(\t\022K"
      "\n\020binding_strength\030\003 \001(\01621.google.fhir.s"
      "tu3.proto.BindingStrengthCode.Value\022\023\n\013f"
      "ixed_value\030\004 \001(\t*f\n\017SizeRestriction\022\013\n\007U"
      "NKNOWN\020\000\022\n\n\006ABSENT\020\001\022\014\n\010REQUIRED\020\002\022\014\n\010OP"
      "TIONAL\020\003\022\020\n\014AT_LEAST_ONE\020\004\022\014\n\010REPEATED\020\005"
      "B\031\n\025com.google.fhir.protoP\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2075);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/stu3/profile_config.proto", &protobuf_RegisterTypes);
  ::protobuf_proto_2fstu3_2fcodes_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto
namespace google {
namespace fhir {
namespace proto {
const ::google::protobuf::EnumDescriptor* SizeRestriction_descriptor() {
  protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::file_level_enum_descriptors[0];
}
bool SizeRestriction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void PackageInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackageInfo::kBaseUrlFieldNumber;
const int PackageInfo::kProtoPackageFieldNumber;
const int PackageInfo::kJavaProtoPackageFieldNumber;
const int PackageInfo::kGoProtoPackageFieldNumber;
const int PackageInfo::kPublisherFieldNumber;
const int PackageInfo::kFhirVersionFieldNumber;
const int PackageInfo::kTelcomUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackageInfo::PackageInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_PackageInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.proto.PackageInfo)
}
PackageInfo::PackageInfo(const PackageInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  base_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.base_url().size() > 0) {
    base_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_url_);
  }
  proto_package_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.proto_package().size() > 0) {
    proto_package_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proto_package_);
  }
  java_proto_package_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.java_proto_package().size() > 0) {
    java_proto_package_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.java_proto_package_);
  }
  go_proto_package_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.go_proto_package().size() > 0) {
    go_proto_package_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.go_proto_package_);
  }
  publisher_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.publisher().size() > 0) {
    publisher_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publisher_);
  }
  fhir_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fhir_version().size() > 0) {
    fhir_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fhir_version_);
  }
  telcom_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.telcom_url().size() > 0) {
    telcom_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.telcom_url_);
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.proto.PackageInfo)
}

void PackageInfo::SharedCtor() {
  base_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proto_package_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  java_proto_package_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  go_proto_package_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publisher_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fhir_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  telcom_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PackageInfo::~PackageInfo() {
  // @@protoc_insertion_point(destructor:google.fhir.proto.PackageInfo)
  SharedDtor();
}

void PackageInfo::SharedDtor() {
  base_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proto_package_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  java_proto_package_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  go_proto_package_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publisher_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fhir_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  telcom_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PackageInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PackageInfo::descriptor() {
  ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PackageInfo& PackageInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_PackageInfo.base);
  return *internal_default_instance();
}


void PackageInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.proto.PackageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  base_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proto_package_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  java_proto_package_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  go_proto_package_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publisher_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fhir_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  telcom_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PackageInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.proto.PackageInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string base_url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_base_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->base_url().data(), static_cast<int>(this->base_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.proto.PackageInfo.base_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string proto_package = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_proto_package()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->proto_package().data(), static_cast<int>(this->proto_package().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.proto.PackageInfo.proto_package"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string java_proto_package = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_java_proto_package()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->java_proto_package().data(), static_cast<int>(this->java_proto_package().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.proto.PackageInfo.java_proto_package"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string go_proto_package = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_go_proto_package()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->go_proto_package().data(), static_cast<int>(this->go_proto_package().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.proto.PackageInfo.go_proto_package"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string publisher = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_publisher()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->publisher().data(), static_cast<int>(this->publisher().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.proto.PackageInfo.publisher"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fhir_version = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fhir_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fhir_version().data(), static_cast<int>(this->fhir_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.proto.PackageInfo.fhir_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string telcom_url = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_telcom_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->telcom_url().data(), static_cast<int>(this->telcom_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.proto.PackageInfo.telcom_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.proto.PackageInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.proto.PackageInfo)
  return false;
#undef DO_
}

void PackageInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.proto.PackageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string base_url = 1;
  if (this->base_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->base_url().data(), static_cast<int>(this->base_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.PackageInfo.base_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->base_url(), output);
  }

  // string proto_package = 2;
  if (this->proto_package().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->proto_package().data(), static_cast<int>(this->proto_package().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.PackageInfo.proto_package");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->proto_package(), output);
  }

  // string java_proto_package = 3;
  if (this->java_proto_package().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->java_proto_package().data(), static_cast<int>(this->java_proto_package().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.PackageInfo.java_proto_package");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->java_proto_package(), output);
  }

  // string go_proto_package = 4;
  if (this->go_proto_package().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->go_proto_package().data(), static_cast<int>(this->go_proto_package().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.PackageInfo.go_proto_package");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->go_proto_package(), output);
  }

  // string publisher = 5;
  if (this->publisher().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->publisher().data(), static_cast<int>(this->publisher().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.PackageInfo.publisher");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->publisher(), output);
  }

  // string fhir_version = 6;
  if (this->fhir_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fhir_version().data(), static_cast<int>(this->fhir_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.PackageInfo.fhir_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->fhir_version(), output);
  }

  // string telcom_url = 7;
  if (this->telcom_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->telcom_url().data(), static_cast<int>(this->telcom_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.PackageInfo.telcom_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->telcom_url(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.proto.PackageInfo)
}

::google::protobuf::uint8* PackageInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.proto.PackageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string base_url = 1;
  if (this->base_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->base_url().data(), static_cast<int>(this->base_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.PackageInfo.base_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->base_url(), target);
  }

  // string proto_package = 2;
  if (this->proto_package().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->proto_package().data(), static_cast<int>(this->proto_package().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.PackageInfo.proto_package");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->proto_package(), target);
  }

  // string java_proto_package = 3;
  if (this->java_proto_package().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->java_proto_package().data(), static_cast<int>(this->java_proto_package().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.PackageInfo.java_proto_package");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->java_proto_package(), target);
  }

  // string go_proto_package = 4;
  if (this->go_proto_package().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->go_proto_package().data(), static_cast<int>(this->go_proto_package().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.PackageInfo.go_proto_package");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->go_proto_package(), target);
  }

  // string publisher = 5;
  if (this->publisher().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->publisher().data(), static_cast<int>(this->publisher().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.PackageInfo.publisher");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->publisher(), target);
  }

  // string fhir_version = 6;
  if (this->fhir_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fhir_version().data(), static_cast<int>(this->fhir_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.PackageInfo.fhir_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->fhir_version(), target);
  }

  // string telcom_url = 7;
  if (this->telcom_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->telcom_url().data(), static_cast<int>(this->telcom_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.PackageInfo.telcom_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->telcom_url(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.proto.PackageInfo)
  return target;
}

size_t PackageInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.proto.PackageInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string base_url = 1;
  if (this->base_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->base_url());
  }

  // string proto_package = 2;
  if (this->proto_package().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->proto_package());
  }

  // string java_proto_package = 3;
  if (this->java_proto_package().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->java_proto_package());
  }

  // string go_proto_package = 4;
  if (this->go_proto_package().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->go_proto_package());
  }

  // string publisher = 5;
  if (this->publisher().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->publisher());
  }

  // string fhir_version = 6;
  if (this->fhir_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fhir_version());
  }

  // string telcom_url = 7;
  if (this->telcom_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->telcom_url());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PackageInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.proto.PackageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PackageInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PackageInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.proto.PackageInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.proto.PackageInfo)
    MergeFrom(*source);
  }
}

void PackageInfo::MergeFrom(const PackageInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.proto.PackageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.base_url().size() > 0) {

    base_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_url_);
  }
  if (from.proto_package().size() > 0) {

    proto_package_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proto_package_);
  }
  if (from.java_proto_package().size() > 0) {

    java_proto_package_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.java_proto_package_);
  }
  if (from.go_proto_package().size() > 0) {

    go_proto_package_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.go_proto_package_);
  }
  if (from.publisher().size() > 0) {

    publisher_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publisher_);
  }
  if (from.fhir_version().size() > 0) {

    fhir_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fhir_version_);
  }
  if (from.telcom_url().size() > 0) {

    telcom_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.telcom_url_);
  }
}

void PackageInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.proto.PackageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackageInfo::CopyFrom(const PackageInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.proto.PackageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageInfo::IsInitialized() const {
  return true;
}

void PackageInfo::Swap(PackageInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackageInfo::InternalSwap(PackageInfo* other) {
  using std::swap;
  base_url_.Swap(&other->base_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  proto_package_.Swap(&other->proto_package_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  java_proto_package_.Swap(&other->java_proto_package_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  go_proto_package_.Swap(&other->go_proto_package_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  publisher_.Swap(&other->publisher_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  fhir_version_.Swap(&other->fhir_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  telcom_url_.Swap(&other->telcom_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PackageInfo::GetMetadata() const {
  protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Profiles::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Profiles::kProfileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Profiles::Profiles()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_Profiles.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.proto.Profiles)
}
Profiles::Profiles(const Profiles& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      profile_(from.profile_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.fhir.proto.Profiles)
}

void Profiles::SharedCtor() {
}

Profiles::~Profiles() {
  // @@protoc_insertion_point(destructor:google.fhir.proto.Profiles)
  SharedDtor();
}

void Profiles::SharedDtor() {
}

void Profiles::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Profiles::descriptor() {
  ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Profiles& Profiles::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_Profiles.base);
  return *internal_default_instance();
}


void Profiles::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.proto.Profiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  profile_.Clear();
  _internal_metadata_.Clear();
}

bool Profiles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.proto.Profiles)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.fhir.proto.Profile profile = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_profile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.proto.Profiles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.proto.Profiles)
  return false;
#undef DO_
}

void Profiles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.proto.Profiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.fhir.proto.Profile profile = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->profile_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->profile(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.proto.Profiles)
}

::google::protobuf::uint8* Profiles::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.proto.Profiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.fhir.proto.Profile profile = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->profile_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->profile(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.proto.Profiles)
  return target;
}

size_t Profiles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.proto.Profiles)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.proto.Profile profile = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->profile_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->profile(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Profiles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.proto.Profiles)
  GOOGLE_DCHECK_NE(&from, this);
  const Profiles* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Profiles>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.proto.Profiles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.proto.Profiles)
    MergeFrom(*source);
  }
}

void Profiles::MergeFrom(const Profiles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.proto.Profiles)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  profile_.MergeFrom(from.profile_);
}

void Profiles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.proto.Profiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Profiles::CopyFrom(const Profiles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.proto.Profiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Profiles::IsInitialized() const {
  return true;
}

void Profiles::Swap(Profiles* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Profiles::InternalSwap(Profiles* other) {
  using std::swap;
  CastToBase(&profile_)->InternalSwap(CastToBase(&other->profile_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Profiles::GetMetadata() const {
  protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Extensions::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Extensions::kSimpleExtensionFieldNumber;
const int Extensions::kComplexExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Extensions::Extensions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_Extensions.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.proto.Extensions)
}
Extensions::Extensions(const Extensions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      simple_extension_(from.simple_extension_),
      complex_extension_(from.complex_extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.fhir.proto.Extensions)
}

void Extensions::SharedCtor() {
}

Extensions::~Extensions() {
  // @@protoc_insertion_point(destructor:google.fhir.proto.Extensions)
  SharedDtor();
}

void Extensions::SharedDtor() {
}

void Extensions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Extensions::descriptor() {
  ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Extensions& Extensions::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_Extensions.base);
  return *internal_default_instance();
}


void Extensions::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.proto.Extensions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  simple_extension_.Clear();
  complex_extension_.Clear();
  _internal_metadata_.Clear();
}

bool Extensions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.proto.Extensions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.fhir.proto.SimpleExtension simple_extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_simple_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.proto.ComplexExtension complex_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_complex_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.proto.Extensions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.proto.Extensions)
  return false;
#undef DO_
}

void Extensions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.proto.Extensions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.fhir.proto.SimpleExtension simple_extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->simple_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->simple_extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.proto.ComplexExtension complex_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->complex_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->complex_extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.proto.Extensions)
}

::google::protobuf::uint8* Extensions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.proto.Extensions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.fhir.proto.SimpleExtension simple_extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->simple_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->simple_extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.proto.ComplexExtension complex_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->complex_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->complex_extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.proto.Extensions)
  return target;
}

size_t Extensions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.proto.Extensions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.proto.SimpleExtension simple_extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->simple_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->simple_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.proto.ComplexExtension complex_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->complex_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->complex_extension(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Extensions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.proto.Extensions)
  GOOGLE_DCHECK_NE(&from, this);
  const Extensions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Extensions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.proto.Extensions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.proto.Extensions)
    MergeFrom(*source);
  }
}

void Extensions::MergeFrom(const Extensions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.proto.Extensions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  simple_extension_.MergeFrom(from.simple_extension_);
  complex_extension_.MergeFrom(from.complex_extension_);
}

void Extensions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.proto.Extensions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Extensions::CopyFrom(const Extensions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.proto.Extensions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Extensions::IsInitialized() const {
  return true;
}

void Extensions::Swap(Extensions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Extensions::InternalSwap(Extensions* other) {
  using std::swap;
  CastToBase(&simple_extension_)->InternalSwap(CastToBase(&other->simple_extension_));
  CastToBase(&complex_extension_)->InternalSwap(CastToBase(&other->complex_extension_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Extensions::GetMetadata() const {
  protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Profile::InitAsDefaultInstance() {
  ::google::fhir::proto::_Profile_default_instance_._instance.get_mutable()->element_data_ = const_cast< ::google::fhir::proto::ElementData*>(
      ::google::fhir::proto::ElementData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Profile::kElementDataFieldNumber;
const int Profile::kBaseUrlFieldNumber;
const int Profile::kRestrictionFieldNumber;
const int Profile::kExtensionSliceFieldNumber;
const int Profile::kCodeableConceptSliceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Profile::Profile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_Profile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.proto.Profile)
}
Profile::Profile(const Profile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      restriction_(from.restriction_),
      extension_slice_(from.extension_slice_),
      codeable_concept_slice_(from.codeable_concept_slice_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  base_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.base_url().size() > 0) {
    base_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_url_);
  }
  if (from.has_element_data()) {
    element_data_ = new ::google::fhir::proto::ElementData(*from.element_data_);
  } else {
    element_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.proto.Profile)
}

void Profile::SharedCtor() {
  base_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  element_data_ = NULL;
}

Profile::~Profile() {
  // @@protoc_insertion_point(destructor:google.fhir.proto.Profile)
  SharedDtor();
}

void Profile::SharedDtor() {
  base_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete element_data_;
}

void Profile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Profile::descriptor() {
  ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Profile& Profile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_Profile.base);
  return *internal_default_instance();
}


void Profile::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.proto.Profile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  restriction_.Clear();
  extension_slice_.Clear();
  codeable_concept_slice_.Clear();
  base_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && element_data_ != NULL) {
    delete element_data_;
  }
  element_data_ = NULL;
  _internal_metadata_.Clear();
}

bool Profile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.proto.Profile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.proto.ElementData element_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_element_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string base_url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_base_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->base_url().data(), static_cast<int>(this->base_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.proto.Profile.base_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.proto.FieldRestriction restriction = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_restriction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.proto.ExtensionSlice extension_slice = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension_slice()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.proto.CodeableConceptSlice codeable_concept_slice = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_codeable_concept_slice()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.proto.Profile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.proto.Profile)
  return false;
#undef DO_
}

void Profile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.proto.Profile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.proto.ElementData element_data = 1;
  if (this->has_element_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_element_data(), output);
  }

  // string base_url = 2;
  if (this->base_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->base_url().data(), static_cast<int>(this->base_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.Profile.base_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->base_url(), output);
  }

  // repeated .google.fhir.proto.FieldRestriction restriction = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->restriction_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->restriction(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.proto.ExtensionSlice extension_slice = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_slice_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->extension_slice(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.proto.CodeableConceptSlice codeable_concept_slice = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->codeable_concept_slice_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->codeable_concept_slice(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.proto.Profile)
}

::google::protobuf::uint8* Profile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.proto.Profile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.proto.ElementData element_data = 1;
  if (this->has_element_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_element_data(), deterministic, target);
  }

  // string base_url = 2;
  if (this->base_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->base_url().data(), static_cast<int>(this->base_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.Profile.base_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->base_url(), target);
  }

  // repeated .google.fhir.proto.FieldRestriction restriction = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->restriction_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->restriction(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.proto.ExtensionSlice extension_slice = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_slice_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->extension_slice(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.proto.CodeableConceptSlice codeable_concept_slice = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->codeable_concept_slice_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->codeable_concept_slice(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.proto.Profile)
  return target;
}

size_t Profile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.proto.Profile)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.proto.FieldRestriction restriction = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->restriction_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->restriction(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.proto.ExtensionSlice extension_slice = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_slice_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension_slice(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.proto.CodeableConceptSlice codeable_concept_slice = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->codeable_concept_slice_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->codeable_concept_slice(static_cast<int>(i)));
    }
  }

  // string base_url = 2;
  if (this->base_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->base_url());
  }

  // .google.fhir.proto.ElementData element_data = 1;
  if (this->has_element_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *element_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Profile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.proto.Profile)
  GOOGLE_DCHECK_NE(&from, this);
  const Profile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Profile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.proto.Profile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.proto.Profile)
    MergeFrom(*source);
  }
}

void Profile::MergeFrom(const Profile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.proto.Profile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  restriction_.MergeFrom(from.restriction_);
  extension_slice_.MergeFrom(from.extension_slice_);
  codeable_concept_slice_.MergeFrom(from.codeable_concept_slice_);
  if (from.base_url().size() > 0) {

    base_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_url_);
  }
  if (from.has_element_data()) {
    mutable_element_data()->::google::fhir::proto::ElementData::MergeFrom(from.element_data());
  }
}

void Profile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.proto.Profile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Profile::CopyFrom(const Profile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.proto.Profile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Profile::IsInitialized() const {
  return true;
}

void Profile::Swap(Profile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Profile::InternalSwap(Profile* other) {
  using std::swap;
  CastToBase(&restriction_)->InternalSwap(CastToBase(&other->restriction_));
  CastToBase(&extension_slice_)->InternalSwap(CastToBase(&other->extension_slice_));
  CastToBase(&codeable_concept_slice_)->InternalSwap(CastToBase(&other->codeable_concept_slice_));
  base_url_.Swap(&other->base_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(element_data_, other->element_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Profile::GetMetadata() const {
  protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FieldRestriction::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FieldRestriction::kFieldIdFieldNumber;
const int FieldRestriction::kSizeRestrictionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FieldRestriction::FieldRestriction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_FieldRestriction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.proto.FieldRestriction)
}
FieldRestriction::FieldRestriction(const FieldRestriction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  field_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.field_id().size() > 0) {
    field_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_id_);
  }
  size_restriction_ = from.size_restriction_;
  // @@protoc_insertion_point(copy_constructor:google.fhir.proto.FieldRestriction)
}

void FieldRestriction::SharedCtor() {
  field_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_restriction_ = 0;
}

FieldRestriction::~FieldRestriction() {
  // @@protoc_insertion_point(destructor:google.fhir.proto.FieldRestriction)
  SharedDtor();
}

void FieldRestriction::SharedDtor() {
  field_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FieldRestriction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FieldRestriction::descriptor() {
  ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FieldRestriction& FieldRestriction::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_FieldRestriction.base);
  return *internal_default_instance();
}


void FieldRestriction::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.proto.FieldRestriction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_restriction_ = 0;
  _internal_metadata_.Clear();
}

bool FieldRestriction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.proto.FieldRestriction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string field_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->field_id().data(), static_cast<int>(this->field_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.proto.FieldRestriction.field_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.proto.SizeRestriction size_restriction = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_size_restriction(static_cast< ::google::fhir::proto::SizeRestriction >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.proto.FieldRestriction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.proto.FieldRestriction)
  return false;
#undef DO_
}

void FieldRestriction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.proto.FieldRestriction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string field_id = 1;
  if (this->field_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field_id().data(), static_cast<int>(this->field_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.FieldRestriction.field_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->field_id(), output);
  }

  // .google.fhir.proto.SizeRestriction size_restriction = 2;
  if (this->size_restriction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->size_restriction(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.proto.FieldRestriction)
}

::google::protobuf::uint8* FieldRestriction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.proto.FieldRestriction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string field_id = 1;
  if (this->field_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field_id().data(), static_cast<int>(this->field_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.FieldRestriction.field_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->field_id(), target);
  }

  // .google.fhir.proto.SizeRestriction size_restriction = 2;
  if (this->size_restriction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->size_restriction(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.proto.FieldRestriction)
  return target;
}

size_t FieldRestriction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.proto.FieldRestriction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string field_id = 1;
  if (this->field_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->field_id());
  }

  // .google.fhir.proto.SizeRestriction size_restriction = 2;
  if (this->size_restriction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->size_restriction());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FieldRestriction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.proto.FieldRestriction)
  GOOGLE_DCHECK_NE(&from, this);
  const FieldRestriction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FieldRestriction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.proto.FieldRestriction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.proto.FieldRestriction)
    MergeFrom(*source);
  }
}

void FieldRestriction::MergeFrom(const FieldRestriction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.proto.FieldRestriction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.field_id().size() > 0) {

    field_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_id_);
  }
  if (from.size_restriction() != 0) {
    set_size_restriction(from.size_restriction());
  }
}

void FieldRestriction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.proto.FieldRestriction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FieldRestriction::CopyFrom(const FieldRestriction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.proto.FieldRestriction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FieldRestriction::IsInitialized() const {
  return true;
}

void FieldRestriction::Swap(FieldRestriction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FieldRestriction::InternalSwap(FieldRestriction* other) {
  using std::swap;
  field_id_.Swap(&other->field_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(size_restriction_, other->size_restriction_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FieldRestriction::GetMetadata() const {
  protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExtensionSlice::InitAsDefaultInstance() {
  ::google::fhir::proto::_ExtensionSlice_default_instance_._instance.get_mutable()->element_data_ = const_cast< ::google::fhir::proto::ElementData*>(
      ::google::fhir::proto::ElementData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExtensionSlice::kFieldIdFieldNumber;
const int ExtensionSlice::kElementDataFieldNumber;
const int ExtensionSlice::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExtensionSlice::ExtensionSlice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_ExtensionSlice.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.proto.ExtensionSlice)
}
ExtensionSlice::ExtensionSlice(const ExtensionSlice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  field_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.field_id().size() > 0) {
    field_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_id_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.has_element_data()) {
    element_data_ = new ::google::fhir::proto::ElementData(*from.element_data_);
  } else {
    element_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.proto.ExtensionSlice)
}

void ExtensionSlice::SharedCtor() {
  field_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  element_data_ = NULL;
}

ExtensionSlice::~ExtensionSlice() {
  // @@protoc_insertion_point(destructor:google.fhir.proto.ExtensionSlice)
  SharedDtor();
}

void ExtensionSlice::SharedDtor() {
  field_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete element_data_;
}

void ExtensionSlice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExtensionSlice::descriptor() {
  ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExtensionSlice& ExtensionSlice::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_ExtensionSlice.base);
  return *internal_default_instance();
}


void ExtensionSlice::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.proto.ExtensionSlice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && element_data_ != NULL) {
    delete element_data_;
  }
  element_data_ = NULL;
  _internal_metadata_.Clear();
}

bool ExtensionSlice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.proto.ExtensionSlice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string field_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->field_id().data(), static_cast<int>(this->field_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.proto.ExtensionSlice.field_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.proto.ElementData element_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_element_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.proto.ExtensionSlice.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.proto.ExtensionSlice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.proto.ExtensionSlice)
  return false;
#undef DO_
}

void ExtensionSlice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.proto.ExtensionSlice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string field_id = 1;
  if (this->field_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field_id().data(), static_cast<int>(this->field_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.ExtensionSlice.field_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->field_id(), output);
  }

  // .google.fhir.proto.ElementData element_data = 2;
  if (this->has_element_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_element_data(), output);
  }

  // string url = 3;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.ExtensionSlice.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->url(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.proto.ExtensionSlice)
}

::google::protobuf::uint8* ExtensionSlice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.proto.ExtensionSlice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string field_id = 1;
  if (this->field_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field_id().data(), static_cast<int>(this->field_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.ExtensionSlice.field_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->field_id(), target);
  }

  // .google.fhir.proto.ElementData element_data = 2;
  if (this->has_element_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_element_data(), deterministic, target);
  }

  // string url = 3;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.ExtensionSlice.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->url(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.proto.ExtensionSlice)
  return target;
}

size_t ExtensionSlice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.proto.ExtensionSlice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string field_id = 1;
  if (this->field_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->field_id());
  }

  // string url = 3;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // .google.fhir.proto.ElementData element_data = 2;
  if (this->has_element_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *element_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExtensionSlice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.proto.ExtensionSlice)
  GOOGLE_DCHECK_NE(&from, this);
  const ExtensionSlice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExtensionSlice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.proto.ExtensionSlice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.proto.ExtensionSlice)
    MergeFrom(*source);
  }
}

void ExtensionSlice::MergeFrom(const ExtensionSlice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.proto.ExtensionSlice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.field_id().size() > 0) {

    field_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_id_);
  }
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.has_element_data()) {
    mutable_element_data()->::google::fhir::proto::ElementData::MergeFrom(from.element_data());
  }
}

void ExtensionSlice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.proto.ExtensionSlice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExtensionSlice::CopyFrom(const ExtensionSlice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.proto.ExtensionSlice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtensionSlice::IsInitialized() const {
  return true;
}

void ExtensionSlice::Swap(ExtensionSlice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExtensionSlice::InternalSwap(ExtensionSlice* other) {
  using std::swap;
  field_id_.Swap(&other->field_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(element_data_, other->element_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExtensionSlice::GetMetadata() const {
  protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CodeableConceptSlice_CodingSlice::InitAsDefaultInstance() {
  ::google::fhir::proto::_CodeableConceptSlice_CodingSlice_default_instance_._instance.get_mutable()->element_data_ = const_cast< ::google::fhir::proto::ElementData*>(
      ::google::fhir::proto::ElementData::internal_default_instance());
  ::google::fhir::proto::_CodeableConceptSlice_CodingSlice_default_instance_._instance.get_mutable()->code_data_ = const_cast< ::google::fhir::proto::CodeData*>(
      ::google::fhir::proto::CodeData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CodeableConceptSlice_CodingSlice::kElementDataFieldNumber;
const int CodeableConceptSlice_CodingSlice::kCodeDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CodeableConceptSlice_CodingSlice::CodeableConceptSlice_CodingSlice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_CodeableConceptSlice_CodingSlice.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.proto.CodeableConceptSlice.CodingSlice)
}
CodeableConceptSlice_CodingSlice::CodeableConceptSlice_CodingSlice(const CodeableConceptSlice_CodingSlice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_element_data()) {
    element_data_ = new ::google::fhir::proto::ElementData(*from.element_data_);
  } else {
    element_data_ = NULL;
  }
  if (from.has_code_data()) {
    code_data_ = new ::google::fhir::proto::CodeData(*from.code_data_);
  } else {
    code_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.proto.CodeableConceptSlice.CodingSlice)
}

void CodeableConceptSlice_CodingSlice::SharedCtor() {
  ::memset(&element_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_data_) -
      reinterpret_cast<char*>(&element_data_)) + sizeof(code_data_));
}

CodeableConceptSlice_CodingSlice::~CodeableConceptSlice_CodingSlice() {
  // @@protoc_insertion_point(destructor:google.fhir.proto.CodeableConceptSlice.CodingSlice)
  SharedDtor();
}

void CodeableConceptSlice_CodingSlice::SharedDtor() {
  if (this != internal_default_instance()) delete element_data_;
  if (this != internal_default_instance()) delete code_data_;
}

void CodeableConceptSlice_CodingSlice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CodeableConceptSlice_CodingSlice::descriptor() {
  ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CodeableConceptSlice_CodingSlice& CodeableConceptSlice_CodingSlice::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_CodeableConceptSlice_CodingSlice.base);
  return *internal_default_instance();
}


void CodeableConceptSlice_CodingSlice::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.proto.CodeableConceptSlice.CodingSlice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && element_data_ != NULL) {
    delete element_data_;
  }
  element_data_ = NULL;
  if (GetArenaNoVirtual() == NULL && code_data_ != NULL) {
    delete code_data_;
  }
  code_data_ = NULL;
  _internal_metadata_.Clear();
}

bool CodeableConceptSlice_CodingSlice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.proto.CodeableConceptSlice.CodingSlice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.proto.ElementData element_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_element_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.proto.CodeData code_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.proto.CodeableConceptSlice.CodingSlice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.proto.CodeableConceptSlice.CodingSlice)
  return false;
#undef DO_
}

void CodeableConceptSlice_CodingSlice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.proto.CodeableConceptSlice.CodingSlice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.proto.ElementData element_data = 1;
  if (this->has_element_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_element_data(), output);
  }

  // .google.fhir.proto.CodeData code_data = 2;
  if (this->has_code_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_code_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.proto.CodeableConceptSlice.CodingSlice)
}

::google::protobuf::uint8* CodeableConceptSlice_CodingSlice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.proto.CodeableConceptSlice.CodingSlice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.proto.ElementData element_data = 1;
  if (this->has_element_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_element_data(), deterministic, target);
  }

  // .google.fhir.proto.CodeData code_data = 2;
  if (this->has_code_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_code_data(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.proto.CodeableConceptSlice.CodingSlice)
  return target;
}

size_t CodeableConceptSlice_CodingSlice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.proto.CodeableConceptSlice.CodingSlice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.fhir.proto.ElementData element_data = 1;
  if (this->has_element_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *element_data_);
  }

  // .google.fhir.proto.CodeData code_data = 2;
  if (this->has_code_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *code_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CodeableConceptSlice_CodingSlice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.proto.CodeableConceptSlice.CodingSlice)
  GOOGLE_DCHECK_NE(&from, this);
  const CodeableConceptSlice_CodingSlice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CodeableConceptSlice_CodingSlice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.proto.CodeableConceptSlice.CodingSlice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.proto.CodeableConceptSlice.CodingSlice)
    MergeFrom(*source);
  }
}

void CodeableConceptSlice_CodingSlice::MergeFrom(const CodeableConceptSlice_CodingSlice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.proto.CodeableConceptSlice.CodingSlice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_element_data()) {
    mutable_element_data()->::google::fhir::proto::ElementData::MergeFrom(from.element_data());
  }
  if (from.has_code_data()) {
    mutable_code_data()->::google::fhir::proto::CodeData::MergeFrom(from.code_data());
  }
}

void CodeableConceptSlice_CodingSlice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.proto.CodeableConceptSlice.CodingSlice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CodeableConceptSlice_CodingSlice::CopyFrom(const CodeableConceptSlice_CodingSlice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.proto.CodeableConceptSlice.CodingSlice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CodeableConceptSlice_CodingSlice::IsInitialized() const {
  return true;
}

void CodeableConceptSlice_CodingSlice::Swap(CodeableConceptSlice_CodingSlice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CodeableConceptSlice_CodingSlice::InternalSwap(CodeableConceptSlice_CodingSlice* other) {
  using std::swap;
  swap(element_data_, other->element_data_);
  swap(code_data_, other->code_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CodeableConceptSlice_CodingSlice::GetMetadata() const {
  protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CodeableConceptSlice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CodeableConceptSlice::kFieldIdFieldNumber;
const int CodeableConceptSlice::kCodingSliceFieldNumber;
const int CodeableConceptSlice::kRulesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CodeableConceptSlice::CodeableConceptSlice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_CodeableConceptSlice.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.proto.CodeableConceptSlice)
}
CodeableConceptSlice::CodeableConceptSlice(const CodeableConceptSlice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      coding_slice_(from.coding_slice_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  field_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.field_id().size() > 0) {
    field_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_id_);
  }
  rules_ = from.rules_;
  // @@protoc_insertion_point(copy_constructor:google.fhir.proto.CodeableConceptSlice)
}

void CodeableConceptSlice::SharedCtor() {
  field_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rules_ = 0;
}

CodeableConceptSlice::~CodeableConceptSlice() {
  // @@protoc_insertion_point(destructor:google.fhir.proto.CodeableConceptSlice)
  SharedDtor();
}

void CodeableConceptSlice::SharedDtor() {
  field_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CodeableConceptSlice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CodeableConceptSlice::descriptor() {
  ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CodeableConceptSlice& CodeableConceptSlice::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_CodeableConceptSlice.base);
  return *internal_default_instance();
}


void CodeableConceptSlice::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.proto.CodeableConceptSlice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  coding_slice_.Clear();
  field_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rules_ = 0;
  _internal_metadata_.Clear();
}

bool CodeableConceptSlice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.proto.CodeableConceptSlice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string field_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->field_id().data(), static_cast<int>(this->field_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.proto.CodeableConceptSlice.field_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_coding_slice()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.SlicingRulesCode.Value rules = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_rules(static_cast< ::google::fhir::stu3::proto::SlicingRulesCode_Value >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.proto.CodeableConceptSlice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.proto.CodeableConceptSlice)
  return false;
#undef DO_
}

void CodeableConceptSlice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.proto.CodeableConceptSlice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string field_id = 1;
  if (this->field_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field_id().data(), static_cast<int>(this->field_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.CodeableConceptSlice.field_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->field_id(), output);
  }

  // repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->coding_slice_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->coding_slice(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.SlicingRulesCode.Value rules = 4;
  if (this->rules() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->rules(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.proto.CodeableConceptSlice)
}

::google::protobuf::uint8* CodeableConceptSlice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.proto.CodeableConceptSlice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string field_id = 1;
  if (this->field_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field_id().data(), static_cast<int>(this->field_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.CodeableConceptSlice.field_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->field_id(), target);
  }

  // repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->coding_slice_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->coding_slice(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.SlicingRulesCode.Value rules = 4;
  if (this->rules() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->rules(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.proto.CodeableConceptSlice)
  return target;
}

size_t CodeableConceptSlice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.proto.CodeableConceptSlice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->coding_slice_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->coding_slice(static_cast<int>(i)));
    }
  }

  // string field_id = 1;
  if (this->field_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->field_id());
  }

  // .google.fhir.stu3.proto.SlicingRulesCode.Value rules = 4;
  if (this->rules() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rules());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CodeableConceptSlice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.proto.CodeableConceptSlice)
  GOOGLE_DCHECK_NE(&from, this);
  const CodeableConceptSlice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CodeableConceptSlice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.proto.CodeableConceptSlice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.proto.CodeableConceptSlice)
    MergeFrom(*source);
  }
}

void CodeableConceptSlice::MergeFrom(const CodeableConceptSlice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.proto.CodeableConceptSlice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  coding_slice_.MergeFrom(from.coding_slice_);
  if (from.field_id().size() > 0) {

    field_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_id_);
  }
  if (from.rules() != 0) {
    set_rules(from.rules());
  }
}

void CodeableConceptSlice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.proto.CodeableConceptSlice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CodeableConceptSlice::CopyFrom(const CodeableConceptSlice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.proto.CodeableConceptSlice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CodeableConceptSlice::IsInitialized() const {
  return true;
}

void CodeableConceptSlice::Swap(CodeableConceptSlice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CodeableConceptSlice::InternalSwap(CodeableConceptSlice* other) {
  using std::swap;
  CastToBase(&coding_slice_)->InternalSwap(CastToBase(&other->coding_slice_));
  field_id_.Swap(&other->field_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(rules_, other->rules_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CodeableConceptSlice::GetMetadata() const {
  protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ComplexExtension::InitAsDefaultInstance() {
  ::google::fhir::proto::_ComplexExtension_default_instance_._instance.get_mutable()->element_data_ = const_cast< ::google::fhir::proto::ElementData*>(
      ::google::fhir::proto::ElementData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ComplexExtension::kElementDataFieldNumber;
const int ComplexExtension::kCanHaveAdditionalExtensionsFieldNumber;
const int ComplexExtension::kSimpleFieldFieldNumber;
const int ComplexExtension::kComplexFieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ComplexExtension::ComplexExtension()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_ComplexExtension.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.proto.ComplexExtension)
}
ComplexExtension::ComplexExtension(const ComplexExtension& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      simple_field_(from.simple_field_),
      complex_field_(from.complex_field_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_element_data()) {
    element_data_ = new ::google::fhir::proto::ElementData(*from.element_data_);
  } else {
    element_data_ = NULL;
  }
  can_have_additional_extensions_ = from.can_have_additional_extensions_;
  // @@protoc_insertion_point(copy_constructor:google.fhir.proto.ComplexExtension)
}

void ComplexExtension::SharedCtor() {
  ::memset(&element_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&can_have_additional_extensions_) -
      reinterpret_cast<char*>(&element_data_)) + sizeof(can_have_additional_extensions_));
}

ComplexExtension::~ComplexExtension() {
  // @@protoc_insertion_point(destructor:google.fhir.proto.ComplexExtension)
  SharedDtor();
}

void ComplexExtension::SharedDtor() {
  if (this != internal_default_instance()) delete element_data_;
}

void ComplexExtension::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ComplexExtension::descriptor() {
  ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ComplexExtension& ComplexExtension::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_ComplexExtension.base);
  return *internal_default_instance();
}


void ComplexExtension::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.proto.ComplexExtension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  simple_field_.Clear();
  complex_field_.Clear();
  if (GetArenaNoVirtual() == NULL && element_data_ != NULL) {
    delete element_data_;
  }
  element_data_ = NULL;
  can_have_additional_extensions_ = false;
  _internal_metadata_.Clear();
}

bool ComplexExtension::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.proto.ComplexExtension)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.proto.ElementData element_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_element_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool can_have_additional_extensions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &can_have_additional_extensions_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.proto.SimpleExtension simple_field = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_simple_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.proto.ComplexExtension complex_field = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_complex_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.proto.ComplexExtension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.proto.ComplexExtension)
  return false;
#undef DO_
}

void ComplexExtension::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.proto.ComplexExtension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.proto.ElementData element_data = 1;
  if (this->has_element_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_element_data(), output);
  }

  // bool can_have_additional_extensions = 2;
  if (this->can_have_additional_extensions() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->can_have_additional_extensions(), output);
  }

  // repeated .google.fhir.proto.SimpleExtension simple_field = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->simple_field_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->simple_field(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.proto.ComplexExtension complex_field = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->complex_field_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->complex_field(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.proto.ComplexExtension)
}

::google::protobuf::uint8* ComplexExtension::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.proto.ComplexExtension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.proto.ElementData element_data = 1;
  if (this->has_element_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_element_data(), deterministic, target);
  }

  // bool can_have_additional_extensions = 2;
  if (this->can_have_additional_extensions() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->can_have_additional_extensions(), target);
  }

  // repeated .google.fhir.proto.SimpleExtension simple_field = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->simple_field_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->simple_field(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.proto.ComplexExtension complex_field = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->complex_field_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->complex_field(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.proto.ComplexExtension)
  return target;
}

size_t ComplexExtension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.proto.ComplexExtension)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.proto.SimpleExtension simple_field = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->simple_field_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->simple_field(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.proto.ComplexExtension complex_field = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->complex_field_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->complex_field(static_cast<int>(i)));
    }
  }

  // .google.fhir.proto.ElementData element_data = 1;
  if (this->has_element_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *element_data_);
  }

  // bool can_have_additional_extensions = 2;
  if (this->can_have_additional_extensions() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ComplexExtension::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.proto.ComplexExtension)
  GOOGLE_DCHECK_NE(&from, this);
  const ComplexExtension* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ComplexExtension>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.proto.ComplexExtension)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.proto.ComplexExtension)
    MergeFrom(*source);
  }
}

void ComplexExtension::MergeFrom(const ComplexExtension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.proto.ComplexExtension)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  simple_field_.MergeFrom(from.simple_field_);
  complex_field_.MergeFrom(from.complex_field_);
  if (from.has_element_data()) {
    mutable_element_data()->::google::fhir::proto::ElementData::MergeFrom(from.element_data());
  }
  if (from.can_have_additional_extensions() != 0) {
    set_can_have_additional_extensions(from.can_have_additional_extensions());
  }
}

void ComplexExtension::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.proto.ComplexExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComplexExtension::CopyFrom(const ComplexExtension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.proto.ComplexExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComplexExtension::IsInitialized() const {
  return true;
}

void ComplexExtension::Swap(ComplexExtension* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ComplexExtension::InternalSwap(ComplexExtension* other) {
  using std::swap;
  CastToBase(&simple_field_)->InternalSwap(CastToBase(&other->simple_field_));
  CastToBase(&complex_field_)->InternalSwap(CastToBase(&other->complex_field_));
  swap(element_data_, other->element_data_);
  swap(can_have_additional_extensions_, other->can_have_additional_extensions_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ComplexExtension::GetMetadata() const {
  protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SimpleExtension::InitAsDefaultInstance() {
  ::google::fhir::proto::_SimpleExtension_default_instance_._instance.get_mutable()->element_data_ = const_cast< ::google::fhir::proto::ElementData*>(
      ::google::fhir::proto::ElementData::internal_default_instance());
  ::google::fhir::proto::_SimpleExtension_default_instance_._instance.get_mutable()->code_type_ = const_cast< ::google::fhir::proto::CodeData*>(
      ::google::fhir::proto::CodeData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SimpleExtension::kElementDataFieldNumber;
const int SimpleExtension::kTypeFieldNumber;
const int SimpleExtension::kCodeTypeFieldNumber;
const int SimpleExtension::kCanHaveExtensionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SimpleExtension::SimpleExtension()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_SimpleExtension.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.proto.SimpleExtension)
}
SimpleExtension::SimpleExtension(const SimpleExtension& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      type_(from.type_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_element_data()) {
    element_data_ = new ::google::fhir::proto::ElementData(*from.element_data_);
  } else {
    element_data_ = NULL;
  }
  if (from.has_code_type()) {
    code_type_ = new ::google::fhir::proto::CodeData(*from.code_type_);
  } else {
    code_type_ = NULL;
  }
  can_have_extensions_ = from.can_have_extensions_;
  // @@protoc_insertion_point(copy_constructor:google.fhir.proto.SimpleExtension)
}

void SimpleExtension::SharedCtor() {
  ::memset(&element_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&can_have_extensions_) -
      reinterpret_cast<char*>(&element_data_)) + sizeof(can_have_extensions_));
}

SimpleExtension::~SimpleExtension() {
  // @@protoc_insertion_point(destructor:google.fhir.proto.SimpleExtension)
  SharedDtor();
}

void SimpleExtension::SharedDtor() {
  if (this != internal_default_instance()) delete element_data_;
  if (this != internal_default_instance()) delete code_type_;
}

void SimpleExtension::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SimpleExtension::descriptor() {
  ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SimpleExtension& SimpleExtension::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_SimpleExtension.base);
  return *internal_default_instance();
}


void SimpleExtension::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.proto.SimpleExtension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.Clear();
  if (GetArenaNoVirtual() == NULL && element_data_ != NULL) {
    delete element_data_;
  }
  element_data_ = NULL;
  if (GetArenaNoVirtual() == NULL && code_type_ != NULL) {
    delete code_type_;
  }
  code_type_ = NULL;
  can_have_extensions_ = false;
  _internal_metadata_.Clear();
}

bool SimpleExtension::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.proto.SimpleExtension)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.proto.ElementData element_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_element_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type(this->type_size() - 1).data(),
            static_cast<int>(this->type(this->type_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.proto.SimpleExtension.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.proto.CodeData code_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool can_have_extensions = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &can_have_extensions_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.proto.SimpleExtension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.proto.SimpleExtension)
  return false;
#undef DO_
}

void SimpleExtension::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.proto.SimpleExtension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.proto.ElementData element_data = 1;
  if (this->has_element_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_element_data(), output);
  }

  // repeated string type = 2;
  for (int i = 0, n = this->type_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type(i).data(), static_cast<int>(this->type(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.SimpleExtension.type");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->type(i), output);
  }

  // .google.fhir.proto.CodeData code_type = 3;
  if (this->has_code_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_code_type(), output);
  }

  // bool can_have_extensions = 4;
  if (this->can_have_extensions() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->can_have_extensions(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.proto.SimpleExtension)
}

::google::protobuf::uint8* SimpleExtension::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.proto.SimpleExtension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.proto.ElementData element_data = 1;
  if (this->has_element_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_element_data(), deterministic, target);
  }

  // repeated string type = 2;
  for (int i = 0, n = this->type_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type(i).data(), static_cast<int>(this->type(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.SimpleExtension.type");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->type(i), target);
  }

  // .google.fhir.proto.CodeData code_type = 3;
  if (this->has_code_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_code_type(), deterministic, target);
  }

  // bool can_have_extensions = 4;
  if (this->can_have_extensions() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->can_have_extensions(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.proto.SimpleExtension)
  return target;
}

size_t SimpleExtension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.proto.SimpleExtension)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string type = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->type_size());
  for (int i = 0, n = this->type_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->type(i));
  }

  // .google.fhir.proto.ElementData element_data = 1;
  if (this->has_element_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *element_data_);
  }

  // .google.fhir.proto.CodeData code_type = 3;
  if (this->has_code_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *code_type_);
  }

  // bool can_have_extensions = 4;
  if (this->can_have_extensions() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SimpleExtension::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.proto.SimpleExtension)
  GOOGLE_DCHECK_NE(&from, this);
  const SimpleExtension* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SimpleExtension>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.proto.SimpleExtension)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.proto.SimpleExtension)
    MergeFrom(*source);
  }
}

void SimpleExtension::MergeFrom(const SimpleExtension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.proto.SimpleExtension)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  type_.MergeFrom(from.type_);
  if (from.has_element_data()) {
    mutable_element_data()->::google::fhir::proto::ElementData::MergeFrom(from.element_data());
  }
  if (from.has_code_type()) {
    mutable_code_type()->::google::fhir::proto::CodeData::MergeFrom(from.code_type());
  }
  if (from.can_have_extensions() != 0) {
    set_can_have_extensions(from.can_have_extensions());
  }
}

void SimpleExtension::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.proto.SimpleExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SimpleExtension::CopyFrom(const SimpleExtension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.proto.SimpleExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SimpleExtension::IsInitialized() const {
  return true;
}

void SimpleExtension::Swap(SimpleExtension* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SimpleExtension::InternalSwap(SimpleExtension* other) {
  using std::swap;
  type_.InternalSwap(CastToBase(&other->type_));
  swap(element_data_, other->element_data_);
  swap(code_type_, other->code_type_);
  swap(can_have_extensions_, other->can_have_extensions_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SimpleExtension::GetMetadata() const {
  protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ElementData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ElementData::kNameFieldNumber;
const int ElementData::kSizeRestrictionFieldNumber;
const int ElementData::kDescriptionFieldNumber;
const int ElementData::kShortFieldNumber;
const int ElementData::kCommentFieldNumber;
const int ElementData::kUrlOverrideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ElementData::ElementData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_ElementData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.proto.ElementData)
}
ElementData::ElementData(const ElementData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  short__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.short_().size() > 0) {
    short__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.short__);
  }
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.comment().size() > 0) {
    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  url_override_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url_override().size() > 0) {
    url_override_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_override_);
  }
  size_restriction_ = from.size_restriction_;
  // @@protoc_insertion_point(copy_constructor:google.fhir.proto.ElementData)
}

void ElementData::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  short__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_override_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_restriction_ = 0;
}

ElementData::~ElementData() {
  // @@protoc_insertion_point(destructor:google.fhir.proto.ElementData)
  SharedDtor();
}

void ElementData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  short__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_override_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ElementData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ElementData::descriptor() {
  ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ElementData& ElementData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_ElementData.base);
  return *internal_default_instance();
}


void ElementData::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.proto.ElementData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  short__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_override_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_restriction_ = 0;
  _internal_metadata_.Clear();
}

bool ElementData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.proto.ElementData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.proto.ElementData.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.proto.SizeRestriction size_restriction = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_size_restriction(static_cast< ::google::fhir::proto::SizeRestriction >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.proto.ElementData.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string short = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_short_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->short_().data(), static_cast<int>(this->short_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.proto.ElementData.short"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string comment = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->comment().data(), static_cast<int>(this->comment().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.proto.ElementData.comment"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string url_override = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url_override()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url_override().data(), static_cast<int>(this->url_override().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.proto.ElementData.url_override"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.proto.ElementData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.proto.ElementData)
  return false;
#undef DO_
}

void ElementData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.proto.ElementData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.ElementData.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.fhir.proto.SizeRestriction size_restriction = 2;
  if (this->size_restriction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->size_restriction(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.ElementData.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // string short = 4;
  if (this->short_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->short_().data(), static_cast<int>(this->short_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.ElementData.short");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->short_(), output);
  }

  // string comment = 5;
  if (this->comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comment().data(), static_cast<int>(this->comment().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.ElementData.comment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->comment(), output);
  }

  // string url_override = 6;
  if (this->url_override().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url_override().data(), static_cast<int>(this->url_override().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.ElementData.url_override");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->url_override(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.proto.ElementData)
}

::google::protobuf::uint8* ElementData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.proto.ElementData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.ElementData.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.fhir.proto.SizeRestriction size_restriction = 2;
  if (this->size_restriction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->size_restriction(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.ElementData.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // string short = 4;
  if (this->short_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->short_().data(), static_cast<int>(this->short_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.ElementData.short");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->short_(), target);
  }

  // string comment = 5;
  if (this->comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comment().data(), static_cast<int>(this->comment().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.ElementData.comment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->comment(), target);
  }

  // string url_override = 6;
  if (this->url_override().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url_override().data(), static_cast<int>(this->url_override().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.ElementData.url_override");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->url_override(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.proto.ElementData)
  return target;
}

size_t ElementData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.proto.ElementData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string short = 4;
  if (this->short_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->short_());
  }

  // string comment = 5;
  if (this->comment().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());
  }

  // string url_override = 6;
  if (this->url_override().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url_override());
  }

  // .google.fhir.proto.SizeRestriction size_restriction = 2;
  if (this->size_restriction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->size_restriction());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ElementData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.proto.ElementData)
  GOOGLE_DCHECK_NE(&from, this);
  const ElementData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ElementData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.proto.ElementData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.proto.ElementData)
    MergeFrom(*source);
  }
}

void ElementData::MergeFrom(const ElementData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.proto.ElementData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.short_().size() > 0) {

    short__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.short__);
  }
  if (from.comment().size() > 0) {

    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  if (from.url_override().size() > 0) {

    url_override_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_override_);
  }
  if (from.size_restriction() != 0) {
    set_size_restriction(from.size_restriction());
  }
}

void ElementData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.proto.ElementData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ElementData::CopyFrom(const ElementData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.proto.ElementData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ElementData::IsInitialized() const {
  return true;
}

void ElementData::Swap(ElementData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ElementData::InternalSwap(ElementData* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  short__.Swap(&other->short__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  comment_.Swap(&other->comment_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  url_override_.Swap(&other->url_override_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(size_restriction_, other->size_restriction_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ElementData::GetMetadata() const {
  protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CodeData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CodeData::kSystemFieldNumber;
const int CodeData::kBindingNameFieldNumber;
const int CodeData::kBindingStrengthFieldNumber;
const int CodeData::kFixedValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CodeData::CodeData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_CodeData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.proto.CodeData)
}
CodeData::CodeData(const CodeData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  system_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.system().size() > 0) {
    system_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_);
  }
  binding_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.binding_name().size() > 0) {
    binding_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.binding_name_);
  }
  fixed_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fixed_value().size() > 0) {
    fixed_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fixed_value_);
  }
  binding_strength_ = from.binding_strength_;
  // @@protoc_insertion_point(copy_constructor:google.fhir.proto.CodeData)
}

void CodeData::SharedCtor() {
  system_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  binding_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fixed_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  binding_strength_ = 0;
}

CodeData::~CodeData() {
  // @@protoc_insertion_point(destructor:google.fhir.proto.CodeData)
  SharedDtor();
}

void CodeData::SharedDtor() {
  system_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  binding_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fixed_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CodeData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CodeData::descriptor() {
  ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CodeData& CodeData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::scc_info_CodeData.base);
  return *internal_default_instance();
}


void CodeData::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.proto.CodeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  system_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  binding_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fixed_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  binding_strength_ = 0;
  _internal_metadata_.Clear();
}

bool CodeData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.proto.CodeData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string system = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_system()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->system().data(), static_cast<int>(this->system().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.proto.CodeData.system"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string binding_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_binding_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->binding_name().data(), static_cast<int>(this->binding_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.proto.CodeData.binding_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.BindingStrengthCode.Value binding_strength = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_binding_strength(static_cast< ::google::fhir::stu3::proto::BindingStrengthCode_Value >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fixed_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fixed_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fixed_value().data(), static_cast<int>(this->fixed_value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.proto.CodeData.fixed_value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.proto.CodeData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.proto.CodeData)
  return false;
#undef DO_
}

void CodeData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.proto.CodeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string system = 1;
  if (this->system().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->system().data(), static_cast<int>(this->system().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.CodeData.system");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->system(), output);
  }

  // string binding_name = 2;
  if (this->binding_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->binding_name().data(), static_cast<int>(this->binding_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.CodeData.binding_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->binding_name(), output);
  }

  // .google.fhir.stu3.proto.BindingStrengthCode.Value binding_strength = 3;
  if (this->binding_strength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->binding_strength(), output);
  }

  // string fixed_value = 4;
  if (this->fixed_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fixed_value().data(), static_cast<int>(this->fixed_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.CodeData.fixed_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->fixed_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.proto.CodeData)
}

::google::protobuf::uint8* CodeData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.proto.CodeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string system = 1;
  if (this->system().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->system().data(), static_cast<int>(this->system().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.CodeData.system");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->system(), target);
  }

  // string binding_name = 2;
  if (this->binding_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->binding_name().data(), static_cast<int>(this->binding_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.CodeData.binding_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->binding_name(), target);
  }

  // .google.fhir.stu3.proto.BindingStrengthCode.Value binding_strength = 3;
  if (this->binding_strength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->binding_strength(), target);
  }

  // string fixed_value = 4;
  if (this->fixed_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fixed_value().data(), static_cast<int>(this->fixed_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.proto.CodeData.fixed_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->fixed_value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.proto.CodeData)
  return target;
}

size_t CodeData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.proto.CodeData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string system = 1;
  if (this->system().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->system());
  }

  // string binding_name = 2;
  if (this->binding_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->binding_name());
  }

  // string fixed_value = 4;
  if (this->fixed_value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fixed_value());
  }

  // .google.fhir.stu3.proto.BindingStrengthCode.Value binding_strength = 3;
  if (this->binding_strength() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->binding_strength());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CodeData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.proto.CodeData)
  GOOGLE_DCHECK_NE(&from, this);
  const CodeData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CodeData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.proto.CodeData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.proto.CodeData)
    MergeFrom(*source);
  }
}

void CodeData::MergeFrom(const CodeData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.proto.CodeData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.system().size() > 0) {

    system_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_);
  }
  if (from.binding_name().size() > 0) {

    binding_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.binding_name_);
  }
  if (from.fixed_value().size() > 0) {

    fixed_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fixed_value_);
  }
  if (from.binding_strength() != 0) {
    set_binding_strength(from.binding_strength());
  }
}

void CodeData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.proto.CodeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CodeData::CopyFrom(const CodeData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.proto.CodeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CodeData::IsInitialized() const {
  return true;
}

void CodeData::Swap(CodeData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CodeData::InternalSwap(CodeData* other) {
  using std::swap;
  system_.Swap(&other->system_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  binding_name_.Swap(&other->binding_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  fixed_value_.Swap(&other->fixed_value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(binding_strength_, other->binding_strength_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CodeData::GetMetadata() const {
  protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fprofile_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace fhir
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::proto::PackageInfo* Arena::CreateMaybeMessage< ::google::fhir::proto::PackageInfo >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::proto::PackageInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::proto::Profiles* Arena::CreateMaybeMessage< ::google::fhir::proto::Profiles >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::proto::Profiles >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::proto::Extensions* Arena::CreateMaybeMessage< ::google::fhir::proto::Extensions >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::proto::Extensions >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::proto::Profile* Arena::CreateMaybeMessage< ::google::fhir::proto::Profile >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::proto::Profile >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::proto::FieldRestriction* Arena::CreateMaybeMessage< ::google::fhir::proto::FieldRestriction >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::proto::FieldRestriction >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::proto::ExtensionSlice* Arena::CreateMaybeMessage< ::google::fhir::proto::ExtensionSlice >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::proto::ExtensionSlice >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::proto::CodeableConceptSlice_CodingSlice* Arena::CreateMaybeMessage< ::google::fhir::proto::CodeableConceptSlice_CodingSlice >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::proto::CodeableConceptSlice_CodingSlice >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::proto::CodeableConceptSlice* Arena::CreateMaybeMessage< ::google::fhir::proto::CodeableConceptSlice >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::proto::CodeableConceptSlice >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::proto::ComplexExtension* Arena::CreateMaybeMessage< ::google::fhir::proto::ComplexExtension >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::proto::ComplexExtension >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::proto::SimpleExtension* Arena::CreateMaybeMessage< ::google::fhir::proto::SimpleExtension >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::proto::SimpleExtension >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::proto::ElementData* Arena::CreateMaybeMessage< ::google::fhir::proto::ElementData >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::proto::ElementData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::proto::CodeData* Arena::CreateMaybeMessage< ::google::fhir::proto::CodeData >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::proto::CodeData >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
