// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/stu3/uscore.proto

#include "proto/stu3/uscore.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_proto_2fstu3_2fcodes_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AdministrativeGenderCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AllergyIntoleranceCategoryCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AllergyIntoleranceClinicalStatusCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AllergyIntoleranceCriticalityCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AllergyIntoleranceSeverityCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AllergyIntoleranceTypeCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AllergyIntoleranceVerificationStatusCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CarePlanActivityStatusCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CarePlanIntentCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CarePlanStatusCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CareTeamStatusCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ConditionClinicalStatusCodesCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ConditionVerificationStatusCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DiagnosticReportStatusCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_EventStatusCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_FHIRDeviceStatusCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_GoalStatusCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ImmunizationStatusCodesCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LinkTypeCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LocationModeCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LocationStatusCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MedicationRequestIntentCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MedicationRequestPriorityCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MedicationRequestStatusCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MedicationStatementStatusCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MedicationStatementTakenCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MedicationStatusCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ObservationRelationshipTypeCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ObservationStatusCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ResourceTypeCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UDIEntryTypeCode;
}  // namespace protobuf_proto_2fstu3_2fcodes_2eproto
namespace protobuf_proto_2fstu3_2fdatatypes_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fdatatypes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Address;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fdatatypes_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_Dosage;
}  // namespace protobuf_proto_2fstu3_2fdatatypes_2eproto
namespace protobuf_proto_2fstu3_2fmetadatatypes_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fmetadatatypes_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Narrative;
}  // namespace protobuf_proto_2fstu3_2fmetadatatypes_2eproto
namespace protobuf_proto_2fstu3_2fresources_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fresources_2eproto ::google::protobuf::internal::SCCInfo<376> scc_info_Account;
}  // namespace protobuf_proto_2fstu3_2fresources_2eproto
namespace protobuf_proto_2fstu3_2fuscore_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PatientUSCoreEthnicityExtension;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PatientUSCoreRaceExtension;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreAllergyintolerance_Onset;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreCareplan_Activity_Detail_Product;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreCareplan_Activity_Detail_Scheduled;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreCareteam_Participant;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreCondition_Abatement;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreCondition_Evidence;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreCondition_Onset;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreCondition_Stage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreDiagnosticreport_Effective;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreDiagnosticreport_Image;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreDiagnosticreport_Performer;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreGoal_Start;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreGoal_Target_Detail;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreGoal_Target_Due;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreImmunization_Explanation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreImmunization_Practitioner;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreImmunization_Reaction;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreImmunization_VaccinationProtocol;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreLocation_Position;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreMedication_Ingredient_Item;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreMedication_Package_Batch;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreMedication_Package_Content_Item;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreMedicationrequest_DispenseRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreMedicationrequest_Medication;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreMedicationrequest_Requester;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreMedicationrequest_Substitution;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreMedicationstatement_Effective;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreMedicationstatement_Medication;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreObservationresults_Component_Value;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreObservationresults_Effective;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreObservationresults_ReferenceRange;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreObservationresults_Value;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreOrganization_Contact;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCorePatient_Communication;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCorePatient_Deceased;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCorePatient_MultipleBirth;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCorePractitioner_Qualification;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreProcedure_FocalDevice;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreProcedure_Performed;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreProcedure_Performer;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreSmokingstatus_Component_Value;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreSmokingstatus_Effective;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreSmokingstatus_ReferenceRange;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreSmokingstatus_Value;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_UsCoreAllergyintolerance_Reaction;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_UsCoreCareplan_Activity;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_UsCoreDevice_Udi;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_UsCoreMedication_Ingredient;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_UsCoreMedication_Package_Content;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_UsCoreObservationresults_Related;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_UsCorePatient_Contact;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_UsCorePatient_Link;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_UsCoreSmokingstatus_Related;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_UsCoreGoal_Target;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_UsCoreMedication_Package;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_UsCoreObservationresults_Component;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_UsCoreSmokingstatus_Component;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_UsCoreCareplan_Activity_Detail;
}  // namespace protobuf_proto_2fstu3_2fuscore_2eproto
namespace protobuf_proto_2fstu3_2fuscore_5fcodes_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_5fcodes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreBirthSexCode;
}  // namespace protobuf_proto_2fstu3_2fuscore_5fcodes_2eproto
namespace google {
namespace fhir {
namespace stu3 {
namespace uscore {
class UsCoreAllergyintolerance_OnsetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreAllergyintolerance_Onset>
      _instance;
  const ::google::fhir::stu3::proto::DateTime* date_time_;
  const ::google::fhir::stu3::proto::Age* age_;
  const ::google::fhir::stu3::proto::Period* period_;
  const ::google::fhir::stu3::proto::Range* range_;
  const ::google::fhir::stu3::proto::String* string_value_;
} _UsCoreAllergyintolerance_Onset_default_instance_;
class UsCoreAllergyintolerance_ReactionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreAllergyintolerance_Reaction>
      _instance;
} _UsCoreAllergyintolerance_Reaction_default_instance_;
class UsCoreAllergyintoleranceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreAllergyintolerance>
      _instance;
} _UsCoreAllergyintolerance_default_instance_;
class PatientUSCoreBirthSexExtensionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PatientUSCoreBirthSexExtension>
      _instance;
} _PatientUSCoreBirthSexExtension_default_instance_;
class UsCoreCareplan_Activity_Detail_ScheduledDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreCareplan_Activity_Detail_Scheduled>
      _instance;
  const ::google::fhir::stu3::proto::Timing* timing_;
  const ::google::fhir::stu3::proto::Period* period_;
  const ::google::fhir::stu3::proto::String* string_value_;
} _UsCoreCareplan_Activity_Detail_Scheduled_default_instance_;
class UsCoreCareplan_Activity_Detail_ProductDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreCareplan_Activity_Detail_Product>
      _instance;
  const ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
  const ::google::fhir::stu3::proto::Reference* reference_;
} _UsCoreCareplan_Activity_Detail_Product_default_instance_;
class UsCoreCareplan_Activity_DetailDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreCareplan_Activity_Detail>
      _instance;
} _UsCoreCareplan_Activity_Detail_default_instance_;
class UsCoreCareplan_ActivityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreCareplan_Activity>
      _instance;
} _UsCoreCareplan_Activity_default_instance_;
class UsCoreCareplanDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreCareplan>
      _instance;
} _UsCoreCareplan_default_instance_;
class UsCoreCareteam_ParticipantDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreCareteam_Participant>
      _instance;
} _UsCoreCareteam_Participant_default_instance_;
class UsCoreCareteamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreCareteam>
      _instance;
} _UsCoreCareteam_default_instance_;
class UsCoreCondition_OnsetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreCondition_Onset>
      _instance;
  const ::google::fhir::stu3::proto::DateTime* date_time_;
  const ::google::fhir::stu3::proto::Age* age_;
  const ::google::fhir::stu3::proto::Period* period_;
  const ::google::fhir::stu3::proto::Range* range_;
  const ::google::fhir::stu3::proto::String* string_value_;
} _UsCoreCondition_Onset_default_instance_;
class UsCoreCondition_AbatementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreCondition_Abatement>
      _instance;
  const ::google::fhir::stu3::proto::DateTime* date_time_;
  const ::google::fhir::stu3::proto::Age* age_;
  const ::google::fhir::stu3::proto::Boolean* boolean_;
  const ::google::fhir::stu3::proto::Period* period_;
  const ::google::fhir::stu3::proto::Range* range_;
  const ::google::fhir::stu3::proto::String* string_value_;
} _UsCoreCondition_Abatement_default_instance_;
class UsCoreCondition_StageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreCondition_Stage>
      _instance;
} _UsCoreCondition_Stage_default_instance_;
class UsCoreCondition_EvidenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreCondition_Evidence>
      _instance;
} _UsCoreCondition_Evidence_default_instance_;
class UsCoreConditionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreCondition>
      _instance;
} _UsCoreCondition_default_instance_;
class UsCoreDevice_UdiDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreDevice_Udi>
      _instance;
} _UsCoreDevice_Udi_default_instance_;
class UsCoreDeviceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreDevice>
      _instance;
} _UsCoreDevice_default_instance_;
class UsCoreDiagnosticreport_EffectiveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreDiagnosticreport_Effective>
      _instance;
  const ::google::fhir::stu3::proto::DateTime* date_time_;
  const ::google::fhir::stu3::proto::Period* period_;
} _UsCoreDiagnosticreport_Effective_default_instance_;
class UsCoreDiagnosticreport_PerformerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreDiagnosticreport_Performer>
      _instance;
} _UsCoreDiagnosticreport_Performer_default_instance_;
class UsCoreDiagnosticreport_ImageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreDiagnosticreport_Image>
      _instance;
} _UsCoreDiagnosticreport_Image_default_instance_;
class UsCoreDiagnosticreportDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreDiagnosticreport>
      _instance;
} _UsCoreDiagnosticreport_default_instance_;
class ContactPointUsCoreDirectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContactPointUsCoreDirect>
      _instance;
} _ContactPointUsCoreDirect_default_instance_;
class PatientUSCoreEthnicityExtensionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PatientUSCoreEthnicityExtension>
      _instance;
} _PatientUSCoreEthnicityExtension_default_instance_;
class UsCoreGoal_StartDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreGoal_Start>
      _instance;
  const ::google::fhir::stu3::proto::Date* date_;
  const ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
} _UsCoreGoal_Start_default_instance_;
class UsCoreGoal_Target_DetailDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreGoal_Target_Detail>
      _instance;
  const ::google::fhir::stu3::proto::Quantity* quantity_;
  const ::google::fhir::stu3::proto::Range* range_;
  const ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
} _UsCoreGoal_Target_Detail_default_instance_;
class UsCoreGoal_Target_DueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreGoal_Target_Due>
      _instance;
  const ::google::fhir::stu3::proto::Date* date_;
  const ::google::fhir::stu3::proto::Duration* duration_;
} _UsCoreGoal_Target_Due_default_instance_;
class UsCoreGoal_TargetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreGoal_Target>
      _instance;
} _UsCoreGoal_Target_default_instance_;
class UsCoreGoalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreGoal>
      _instance;
} _UsCoreGoal_default_instance_;
class UsCoreImmunization_PractitionerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreImmunization_Practitioner>
      _instance;
} _UsCoreImmunization_Practitioner_default_instance_;
class UsCoreImmunization_ExplanationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreImmunization_Explanation>
      _instance;
} _UsCoreImmunization_Explanation_default_instance_;
class UsCoreImmunization_ReactionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreImmunization_Reaction>
      _instance;
} _UsCoreImmunization_Reaction_default_instance_;
class UsCoreImmunization_VaccinationProtocolDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreImmunization_VaccinationProtocol>
      _instance;
} _UsCoreImmunization_VaccinationProtocol_default_instance_;
class UsCoreImmunizationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreImmunization>
      _instance;
} _UsCoreImmunization_default_instance_;
class UsCoreLocation_PositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreLocation_Position>
      _instance;
} _UsCoreLocation_Position_default_instance_;
class UsCoreLocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreLocation>
      _instance;
} _UsCoreLocation_default_instance_;
class UsCoreMedication_Ingredient_ItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreMedication_Ingredient_Item>
      _instance;
  const ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
  const ::google::fhir::stu3::proto::Reference* reference_;
} _UsCoreMedication_Ingredient_Item_default_instance_;
class UsCoreMedication_IngredientDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreMedication_Ingredient>
      _instance;
} _UsCoreMedication_Ingredient_default_instance_;
class UsCoreMedication_Package_Content_ItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreMedication_Package_Content_Item>
      _instance;
  const ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
  const ::google::fhir::stu3::proto::Reference* reference_;
} _UsCoreMedication_Package_Content_Item_default_instance_;
class UsCoreMedication_Package_ContentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreMedication_Package_Content>
      _instance;
} _UsCoreMedication_Package_Content_default_instance_;
class UsCoreMedication_Package_BatchDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreMedication_Package_Batch>
      _instance;
} _UsCoreMedication_Package_Batch_default_instance_;
class UsCoreMedication_PackageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreMedication_Package>
      _instance;
} _UsCoreMedication_Package_default_instance_;
class UsCoreMedicationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreMedication>
      _instance;
} _UsCoreMedication_default_instance_;
class UsCoreMedicationrequest_MedicationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreMedicationrequest_Medication>
      _instance;
  const ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
  const ::google::fhir::stu3::proto::Reference* reference_;
} _UsCoreMedicationrequest_Medication_default_instance_;
class UsCoreMedicationrequest_RequesterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreMedicationrequest_Requester>
      _instance;
} _UsCoreMedicationrequest_Requester_default_instance_;
class UsCoreMedicationrequest_DispenseRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreMedicationrequest_DispenseRequest>
      _instance;
} _UsCoreMedicationrequest_DispenseRequest_default_instance_;
class UsCoreMedicationrequest_SubstitutionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreMedicationrequest_Substitution>
      _instance;
} _UsCoreMedicationrequest_Substitution_default_instance_;
class UsCoreMedicationrequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreMedicationrequest>
      _instance;
} _UsCoreMedicationrequest_default_instance_;
class UsCoreMedicationstatement_MedicationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreMedicationstatement_Medication>
      _instance;
  const ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
  const ::google::fhir::stu3::proto::Reference* reference_;
} _UsCoreMedicationstatement_Medication_default_instance_;
class UsCoreMedicationstatement_EffectiveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreMedicationstatement_Effective>
      _instance;
  const ::google::fhir::stu3::proto::DateTime* date_time_;
  const ::google::fhir::stu3::proto::Period* period_;
} _UsCoreMedicationstatement_Effective_default_instance_;
class UsCoreMedicationstatementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreMedicationstatement>
      _instance;
} _UsCoreMedicationstatement_default_instance_;
class UsCoreObservationresults_EffectiveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreObservationresults_Effective>
      _instance;
  const ::google::fhir::stu3::proto::DateTime* date_time_;
  const ::google::fhir::stu3::proto::Period* period_;
} _UsCoreObservationresults_Effective_default_instance_;
class UsCoreObservationresults_ValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreObservationresults_Value>
      _instance;
  const ::google::fhir::stu3::proto::Quantity* quantity_;
  const ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
  const ::google::fhir::stu3::proto::String* string_value_;
  const ::google::fhir::stu3::proto::Boolean* boolean_;
  const ::google::fhir::stu3::proto::Range* range_;
  const ::google::fhir::stu3::proto::Ratio* ratio_;
  const ::google::fhir::stu3::proto::SampledData* sampled_data_;
  const ::google::fhir::stu3::proto::Attachment* attachment_;
  const ::google::fhir::stu3::proto::Time* time_;
  const ::google::fhir::stu3::proto::DateTime* date_time_;
  const ::google::fhir::stu3::proto::Period* period_;
} _UsCoreObservationresults_Value_default_instance_;
class UsCoreObservationresults_ReferenceRangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreObservationresults_ReferenceRange>
      _instance;
} _UsCoreObservationresults_ReferenceRange_default_instance_;
class UsCoreObservationresults_RelatedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreObservationresults_Related>
      _instance;
} _UsCoreObservationresults_Related_default_instance_;
class UsCoreObservationresults_Component_ValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreObservationresults_Component_Value>
      _instance;
  const ::google::fhir::stu3::proto::Quantity* quantity_;
  const ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
  const ::google::fhir::stu3::proto::String* string_value_;
  const ::google::fhir::stu3::proto::Range* range_;
  const ::google::fhir::stu3::proto::Ratio* ratio_;
  const ::google::fhir::stu3::proto::SampledData* sampled_data_;
  const ::google::fhir::stu3::proto::Attachment* attachment_;
  const ::google::fhir::stu3::proto::Time* time_;
  const ::google::fhir::stu3::proto::DateTime* date_time_;
  const ::google::fhir::stu3::proto::Period* period_;
} _UsCoreObservationresults_Component_Value_default_instance_;
class UsCoreObservationresults_ComponentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreObservationresults_Component>
      _instance;
} _UsCoreObservationresults_Component_default_instance_;
class UsCoreObservationresultsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreObservationresults>
      _instance;
} _UsCoreObservationresults_default_instance_;
class UsCoreOrganization_ContactDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreOrganization_Contact>
      _instance;
} _UsCoreOrganization_Contact_default_instance_;
class UsCoreOrganizationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreOrganization>
      _instance;
} _UsCoreOrganization_default_instance_;
class UsCorePatient_DeceasedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCorePatient_Deceased>
      _instance;
  const ::google::fhir::stu3::proto::Boolean* boolean_;
  const ::google::fhir::stu3::proto::DateTime* date_time_;
} _UsCorePatient_Deceased_default_instance_;
class UsCorePatient_MultipleBirthDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCorePatient_MultipleBirth>
      _instance;
  const ::google::fhir::stu3::proto::Boolean* boolean_;
  const ::google::fhir::stu3::proto::Integer* integer_;
} _UsCorePatient_MultipleBirth_default_instance_;
class UsCorePatient_ContactDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCorePatient_Contact>
      _instance;
} _UsCorePatient_Contact_default_instance_;
class UsCorePatient_CommunicationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCorePatient_Communication>
      _instance;
} _UsCorePatient_Communication_default_instance_;
class UsCorePatient_LinkDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCorePatient_Link>
      _instance;
} _UsCorePatient_Link_default_instance_;
class UsCorePatientDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCorePatient>
      _instance;
} _UsCorePatient_default_instance_;
class UsCorePractitioner_QualificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCorePractitioner_Qualification>
      _instance;
} _UsCorePractitioner_Qualification_default_instance_;
class UsCorePractitionerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCorePractitioner>
      _instance;
} _UsCorePractitioner_default_instance_;
class UsCoreProcedure_PerformedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreProcedure_Performed>
      _instance;
  const ::google::fhir::stu3::proto::DateTime* date_time_;
  const ::google::fhir::stu3::proto::Period* period_;
} _UsCoreProcedure_Performed_default_instance_;
class UsCoreProcedure_PerformerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreProcedure_Performer>
      _instance;
} _UsCoreProcedure_Performer_default_instance_;
class UsCoreProcedure_FocalDeviceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreProcedure_FocalDevice>
      _instance;
} _UsCoreProcedure_FocalDevice_default_instance_;
class UsCoreProcedureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreProcedure>
      _instance;
} _UsCoreProcedure_default_instance_;
class CapabilityStatementProfileResourceAssociationExtensionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CapabilityStatementProfileResourceAssociationExtension>
      _instance;
} _CapabilityStatementProfileResourceAssociationExtension_default_instance_;
class PatientUSCoreRaceExtensionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PatientUSCoreRaceExtension>
      _instance;
} _PatientUSCoreRaceExtension_default_instance_;
class UsCoreSmokingstatus_EffectiveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreSmokingstatus_Effective>
      _instance;
  const ::google::fhir::stu3::proto::DateTime* date_time_;
  const ::google::fhir::stu3::proto::Period* period_;
} _UsCoreSmokingstatus_Effective_default_instance_;
class UsCoreSmokingstatus_ValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreSmokingstatus_Value>
      _instance;
  const ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
} _UsCoreSmokingstatus_Value_default_instance_;
class UsCoreSmokingstatus_ReferenceRangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreSmokingstatus_ReferenceRange>
      _instance;
} _UsCoreSmokingstatus_ReferenceRange_default_instance_;
class UsCoreSmokingstatus_RelatedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreSmokingstatus_Related>
      _instance;
} _UsCoreSmokingstatus_Related_default_instance_;
class UsCoreSmokingstatus_Component_ValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreSmokingstatus_Component_Value>
      _instance;
  const ::google::fhir::stu3::proto::Quantity* quantity_;
  const ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
  const ::google::fhir::stu3::proto::String* string_value_;
  const ::google::fhir::stu3::proto::Range* range_;
  const ::google::fhir::stu3::proto::Ratio* ratio_;
  const ::google::fhir::stu3::proto::SampledData* sampled_data_;
  const ::google::fhir::stu3::proto::Attachment* attachment_;
  const ::google::fhir::stu3::proto::Time* time_;
  const ::google::fhir::stu3::proto::DateTime* date_time_;
  const ::google::fhir::stu3::proto::Period* period_;
} _UsCoreSmokingstatus_Component_Value_default_instance_;
class UsCoreSmokingstatus_ComponentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreSmokingstatus_Component>
      _instance;
} _UsCoreSmokingstatus_Component_default_instance_;
class UsCoreSmokingstatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsCoreSmokingstatus>
      _instance;
} _UsCoreSmokingstatus_default_instance_;
}  // namespace uscore
}  // namespace stu3
}  // namespace fhir
}  // namespace google
namespace protobuf_proto_2fstu3_2fuscore_2eproto {
static void InitDefaultsUsCoreAllergyintolerance_Onset() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_Onset_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Onset();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Onset::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreAllergyintolerance_Onset =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreAllergyintolerance_Onset}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreAllergyintolerance_Reaction() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_Reaction_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Reaction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Reaction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UsCoreAllergyintolerance_Reaction =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUsCoreAllergyintolerance_Reaction}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_AllergyIntoleranceSeverityCode.base,}};

static void InitDefaultsUsCoreAllergyintolerance() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreAllergyintolerance();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreAllergyintolerance::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<10> scc_info_UsCoreAllergyintolerance =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 10, InitDefaultsUsCoreAllergyintolerance}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_Narrative.base,
      &protobuf_proto_2fstu3_2fresources_2eproto::scc_info_Account.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_AllergyIntoleranceClinicalStatusCode.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_AllergyIntoleranceVerificationStatusCode.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_AllergyIntoleranceTypeCode.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_AllergyIntoleranceCategoryCode.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_AllergyIntoleranceCriticalityCode.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreAllergyintolerance_Onset.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreAllergyintolerance_Reaction.base,}};

static void InitDefaultsPatientUSCoreBirthSexExtension() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_PatientUSCoreBirthSexExtension_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::PatientUSCoreBirthSexExtension();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::PatientUSCoreBirthSexExtension::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PatientUSCoreBirthSexExtension =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPatientUSCoreBirthSexExtension}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fuscore_5fcodes_2eproto::scc_info_UsCoreBirthSexCode.base,}};

static void InitDefaultsUsCoreCareplan_Activity_Detail_Scheduled() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_Detail_Scheduled_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Scheduled();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Scheduled::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreCareplan_Activity_Detail_Scheduled =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreCareplan_Activity_Detail_Scheduled}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreCareplan_Activity_Detail_Product() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_Detail_Product_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Product();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Product::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreCareplan_Activity_Detail_Product =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreCareplan_Activity_Detail_Product}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreCareplan_Activity_Detail() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_Detail_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_UsCoreCareplan_Activity_Detail =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsUsCoreCareplan_Activity_Detail}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_CarePlanActivityStatusCode.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCareplan_Activity_Detail_Scheduled.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCareplan_Activity_Detail_Product.base,}};

static void InitDefaultsUsCoreCareplan_Activity() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreCareplan_Activity();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreCareplan_Activity::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UsCoreCareplan_Activity =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUsCoreCareplan_Activity}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCareplan_Activity_Detail.base,}};

static void InitDefaultsUsCoreCareplan() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreCareplan_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreCareplan();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreCareplan::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_UsCoreCareplan =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsUsCoreCareplan}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_Narrative.base,
      &protobuf_proto_2fstu3_2fresources_2eproto::scc_info_Account.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_CarePlanStatusCode.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_CarePlanIntentCode.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCareplan_Activity.base,}};

static void InitDefaultsUsCoreCareteam_Participant() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreCareteam_Participant_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreCareteam_Participant();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreCareteam_Participant::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreCareteam_Participant =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreCareteam_Participant}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreCareteam() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreCareteam_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreCareteam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreCareteam::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_UsCoreCareteam =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsUsCoreCareteam}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_Narrative.base,
      &protobuf_proto_2fstu3_2fresources_2eproto::scc_info_Account.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_CareTeamStatusCode.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCareteam_Participant.base,}};

static void InitDefaultsUsCoreCondition_Onset() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreCondition_Onset_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreCondition_Onset();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreCondition_Onset::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreCondition_Onset =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreCondition_Onset}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreCondition_Abatement() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreCondition_Abatement_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreCondition_Abatement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreCondition_Abatement::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreCondition_Abatement =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreCondition_Abatement}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreCondition_Stage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreCondition_Stage_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreCondition_Stage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreCondition_Stage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreCondition_Stage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreCondition_Stage}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreCondition_Evidence() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreCondition_Evidence_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreCondition_Evidence();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreCondition_Evidence::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreCondition_Evidence =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreCondition_Evidence}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreCondition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreCondition_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreCondition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreCondition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<9> scc_info_UsCoreCondition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 9, InitDefaultsUsCoreCondition}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_Narrative.base,
      &protobuf_proto_2fstu3_2fresources_2eproto::scc_info_Account.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_ConditionClinicalStatusCodesCode.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_ConditionVerificationStatusCode.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCondition_Onset.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCondition_Abatement.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCondition_Stage.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCondition_Evidence.base,}};

static void InitDefaultsUsCoreDevice_Udi() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreDevice_Udi_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreDevice_Udi();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreDevice_Udi::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UsCoreDevice_Udi =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUsCoreDevice_Udi}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_UDIEntryTypeCode.base,}};

static void InitDefaultsUsCoreDevice() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreDevice_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreDevice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreDevice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_UsCoreDevice =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsUsCoreDevice}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_Narrative.base,
      &protobuf_proto_2fstu3_2fresources_2eproto::scc_info_Account.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreDevice_Udi.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_FHIRDeviceStatusCode.base,}};

static void InitDefaultsUsCoreDiagnosticreport_Effective() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreDiagnosticreport_Effective_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Effective();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Effective::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreDiagnosticreport_Effective =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreDiagnosticreport_Effective}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreDiagnosticreport_Performer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreDiagnosticreport_Performer_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Performer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Performer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreDiagnosticreport_Performer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreDiagnosticreport_Performer}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreDiagnosticreport_Image() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreDiagnosticreport_Image_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Image();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Image::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreDiagnosticreport_Image =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreDiagnosticreport_Image}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreDiagnosticreport() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreDiagnosticreport_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreDiagnosticreport();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreDiagnosticreport::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<7> scc_info_UsCoreDiagnosticreport =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 7, InitDefaultsUsCoreDiagnosticreport}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_Narrative.base,
      &protobuf_proto_2fstu3_2fresources_2eproto::scc_info_Account.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_DiagnosticReportStatusCode.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreDiagnosticreport_Effective.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreDiagnosticreport_Performer.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreDiagnosticreport_Image.base,}};

static void InitDefaultsContactPointUsCoreDirect() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_ContactPointUsCoreDirect_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::ContactPointUsCoreDirect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::ContactPointUsCoreDirect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ContactPointUsCoreDirect =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsContactPointUsCoreDirect}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsPatientUSCoreEthnicityExtension() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_PatientUSCoreEthnicityExtension_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PatientUSCoreEthnicityExtension =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPatientUSCoreEthnicityExtension}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreGoal_Start() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreGoal_Start_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreGoal_Start();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreGoal_Start::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreGoal_Start =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreGoal_Start}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreGoal_Target_Detail() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreGoal_Target_Detail_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreGoal_Target_Detail();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreGoal_Target_Detail::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreGoal_Target_Detail =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreGoal_Target_Detail}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreGoal_Target_Due() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreGoal_Target_Due_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreGoal_Target_Due();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreGoal_Target_Due::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreGoal_Target_Due =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreGoal_Target_Due}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreGoal_Target() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreGoal_Target_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreGoal_Target();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreGoal_Target::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_UsCoreGoal_Target =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsUsCoreGoal_Target}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreGoal_Target_Detail.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreGoal_Target_Due.base,}};

static void InitDefaultsUsCoreGoal() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreGoal_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreGoal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreGoal::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_UsCoreGoal =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsUsCoreGoal}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_Narrative.base,
      &protobuf_proto_2fstu3_2fresources_2eproto::scc_info_Account.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_GoalStatusCode.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreGoal_Start.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreGoal_Target.base,}};

static void InitDefaultsUsCoreImmunization_Practitioner() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreImmunization_Practitioner_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreImmunization_Practitioner();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreImmunization_Practitioner::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreImmunization_Practitioner =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreImmunization_Practitioner}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreImmunization_Explanation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreImmunization_Explanation_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreImmunization_Explanation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreImmunization_Explanation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreImmunization_Explanation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreImmunization_Explanation}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreImmunization_Reaction() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreImmunization_Reaction_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreImmunization_Reaction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreImmunization_Reaction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreImmunization_Reaction =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreImmunization_Reaction}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreImmunization_VaccinationProtocol() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreImmunization_VaccinationProtocol_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreImmunization_VaccinationProtocol =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreImmunization_VaccinationProtocol}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreImmunization() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreImmunization_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreImmunization();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreImmunization::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<8> scc_info_UsCoreImmunization =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 8, InitDefaultsUsCoreImmunization}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_Narrative.base,
      &protobuf_proto_2fstu3_2fresources_2eproto::scc_info_Account.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_ImmunizationStatusCodesCode.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreImmunization_Practitioner.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreImmunization_Explanation.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreImmunization_Reaction.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreImmunization_VaccinationProtocol.base,}};

static void InitDefaultsUsCoreLocation_Position() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreLocation_Position_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreLocation_Position();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreLocation_Position::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreLocation_Position =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreLocation_Position}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreLocation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreLocation_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreLocation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreLocation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_UsCoreLocation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsUsCoreLocation}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_Narrative.base,
      &protobuf_proto_2fstu3_2fresources_2eproto::scc_info_Account.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_LocationStatusCode.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_LocationModeCode.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreLocation_Position.base,}};

static void InitDefaultsUsCoreMedication_Ingredient_Item() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreMedication_Ingredient_Item_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_Item();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_Item::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreMedication_Ingredient_Item =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreMedication_Ingredient_Item}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreMedication_Ingredient() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreMedication_Ingredient_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UsCoreMedication_Ingredient =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUsCoreMedication_Ingredient}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedication_Ingredient_Item.base,}};

static void InitDefaultsUsCoreMedication_Package_Content_Item() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreMedication_Package_Content_Item_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_Item();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_Item::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreMedication_Package_Content_Item =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreMedication_Package_Content_Item}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreMedication_Package_Content() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreMedication_Package_Content_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UsCoreMedication_Package_Content =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUsCoreMedication_Package_Content}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedication_Package_Content_Item.base,}};

static void InitDefaultsUsCoreMedication_Package_Batch() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreMedication_Package_Batch_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreMedication_Package_Batch();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreMedication_Package_Batch::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreMedication_Package_Batch =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreMedication_Package_Batch}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreMedication_Package() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreMedication_Package_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreMedication_Package();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreMedication_Package::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_UsCoreMedication_Package =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsUsCoreMedication_Package}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedication_Package_Content.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedication_Package_Batch.base,}};

static void InitDefaultsUsCoreMedication() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreMedication_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreMedication();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreMedication::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_UsCoreMedication =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsUsCoreMedication}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_Narrative.base,
      &protobuf_proto_2fstu3_2fresources_2eproto::scc_info_Account.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_MedicationStatusCode.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedication_Ingredient.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedication_Package.base,}};

static void InitDefaultsUsCoreMedicationrequest_Medication() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreMedicationrequest_Medication_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Medication();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Medication::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreMedicationrequest_Medication =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreMedicationrequest_Medication}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreMedicationrequest_Requester() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreMedicationrequest_Requester_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreMedicationrequest_Requester =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreMedicationrequest_Requester}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreMedicationrequest_DispenseRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreMedicationrequest_DispenseRequest_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreMedicationrequest_DispenseRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreMedicationrequest_DispenseRequest}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreMedicationrequest_Substitution() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreMedicationrequest_Substitution_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreMedicationrequest_Substitution =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreMedicationrequest_Substitution}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreMedicationrequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreMedicationrequest_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreMedicationrequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreMedicationrequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<11> scc_info_UsCoreMedicationrequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 11, InitDefaultsUsCoreMedicationrequest}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_Narrative.base,
      &protobuf_proto_2fstu3_2fresources_2eproto::scc_info_Account.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_MedicationRequestStatusCode.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_MedicationRequestIntentCode.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_MedicationRequestPriorityCode.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedicationrequest_Medication.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedicationrequest_Requester.base,
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Dosage.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedicationrequest_DispenseRequest.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedicationrequest_Substitution.base,}};

static void InitDefaultsUsCoreMedicationstatement_Medication() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreMedicationstatement_Medication_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Medication();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Medication::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreMedicationstatement_Medication =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreMedicationstatement_Medication}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreMedicationstatement_Effective() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreMedicationstatement_Effective_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Effective();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Effective::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreMedicationstatement_Effective =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreMedicationstatement_Effective}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreMedicationstatement() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreMedicationstatement_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreMedicationstatement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreMedicationstatement::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<8> scc_info_UsCoreMedicationstatement =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 8, InitDefaultsUsCoreMedicationstatement}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_Narrative.base,
      &protobuf_proto_2fstu3_2fresources_2eproto::scc_info_Account.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_MedicationStatementStatusCode.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedicationstatement_Medication.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedicationstatement_Effective.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_MedicationStatementTakenCode.base,
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Dosage.base,}};

static void InitDefaultsUsCoreObservationresults_Effective() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreObservationresults_Effective_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreObservationresults_Effective();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreObservationresults_Effective::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreObservationresults_Effective =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreObservationresults_Effective}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreObservationresults_Value() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreObservationresults_Value_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreObservationresults_Value();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreObservationresults_Value::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreObservationresults_Value =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreObservationresults_Value}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreObservationresults_ReferenceRange() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreObservationresults_ReferenceRange_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreObservationresults_ReferenceRange =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreObservationresults_ReferenceRange}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreObservationresults_Related() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreObservationresults_Related_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreObservationresults_Related();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreObservationresults_Related::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UsCoreObservationresults_Related =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUsCoreObservationresults_Related}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_ObservationRelationshipTypeCode.base,}};

static void InitDefaultsUsCoreObservationresults_Component_Value() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreObservationresults_Component_Value_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreObservationresults_Component_Value();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreObservationresults_Component_Value::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreObservationresults_Component_Value =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreObservationresults_Component_Value}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreObservationresults_Component() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreObservationresults_Component_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreObservationresults_Component();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreObservationresults_Component::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_UsCoreObservationresults_Component =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsUsCoreObservationresults_Component}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreObservationresults_Component_Value.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreObservationresults_ReferenceRange.base,}};

static void InitDefaultsUsCoreObservationresults() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreObservationresults_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreObservationresults();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreObservationresults::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<9> scc_info_UsCoreObservationresults =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 9, InitDefaultsUsCoreObservationresults}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_Narrative.base,
      &protobuf_proto_2fstu3_2fresources_2eproto::scc_info_Account.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_ObservationStatusCode.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreObservationresults_Effective.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreObservationresults_Value.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreObservationresults_ReferenceRange.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreObservationresults_Related.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreObservationresults_Component.base,}};

static void InitDefaultsUsCoreOrganization_Contact() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreOrganization_Contact_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreOrganization_Contact();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreOrganization_Contact::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreOrganization_Contact =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreOrganization_Contact}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreOrganization() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreOrganization_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreOrganization();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreOrganization::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_UsCoreOrganization =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsUsCoreOrganization}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_Narrative.base,
      &protobuf_proto_2fstu3_2fresources_2eproto::scc_info_Account.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreOrganization_Contact.base,}};

static void InitDefaultsUsCorePatient_Deceased() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCorePatient_Deceased_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCorePatient_Deceased();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCorePatient_Deceased::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCorePatient_Deceased =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCorePatient_Deceased}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCorePatient_MultipleBirth() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCorePatient_MultipleBirth_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCorePatient_MultipleBirth();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCorePatient_MultipleBirth::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCorePatient_MultipleBirth =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCorePatient_MultipleBirth}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCorePatient_Contact() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCorePatient_Contact_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCorePatient_Contact();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCorePatient_Contact::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UsCorePatient_Contact =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUsCorePatient_Contact}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_AdministrativeGenderCode.base,}};

static void InitDefaultsUsCorePatient_Communication() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCorePatient_Communication_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCorePatient_Communication();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCorePatient_Communication::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCorePatient_Communication =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCorePatient_Communication}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCorePatient_Link() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCorePatient_Link_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCorePatient_Link();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCorePatient_Link::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UsCorePatient_Link =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUsCorePatient_Link}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_LinkTypeCode.base,}};

static void InitDefaultsUsCorePatient() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCorePatient_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCorePatient();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCorePatient::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<12> scc_info_UsCorePatient =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 12, InitDefaultsUsCorePatient}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_Narrative.base,
      &protobuf_proto_2fstu3_2fresources_2eproto::scc_info_Account.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_AdministrativeGenderCode.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCorePatient_Deceased.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCorePatient_MultipleBirth.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCorePatient_Contact.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCorePatient_Communication.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCorePatient_Link.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_PatientUSCoreRaceExtension.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_PatientUSCoreEthnicityExtension.base,
      &protobuf_proto_2fstu3_2fuscore_5fcodes_2eproto::scc_info_UsCoreBirthSexCode.base,}};

static void InitDefaultsUsCorePractitioner_Qualification() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCorePractitioner_Qualification_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCorePractitioner_Qualification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCorePractitioner_Qualification::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCorePractitioner_Qualification =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCorePractitioner_Qualification}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCorePractitioner() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCorePractitioner_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCorePractitioner();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCorePractitioner::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_UsCorePractitioner =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsUsCorePractitioner}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_Narrative.base,
      &protobuf_proto_2fstu3_2fresources_2eproto::scc_info_Account.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_AdministrativeGenderCode.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCorePractitioner_Qualification.base,}};

static void InitDefaultsUsCoreProcedure_Performed() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreProcedure_Performed_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreProcedure_Performed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreProcedure_Performed::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreProcedure_Performed =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreProcedure_Performed}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreProcedure_Performer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreProcedure_Performer_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreProcedure_Performer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreProcedure_Performer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreProcedure_Performer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreProcedure_Performer}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreProcedure_FocalDevice() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreProcedure_FocalDevice_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreProcedure_FocalDevice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreProcedure_FocalDevice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreProcedure_FocalDevice =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreProcedure_FocalDevice}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreProcedure() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreProcedure_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreProcedure();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreProcedure::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<7> scc_info_UsCoreProcedure =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 7, InitDefaultsUsCoreProcedure}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_Narrative.base,
      &protobuf_proto_2fstu3_2fresources_2eproto::scc_info_Account.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_EventStatusCode.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreProcedure_Performed.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreProcedure_Performer.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreProcedure_FocalDevice.base,}};

static void InitDefaultsCapabilityStatementProfileResourceAssociationExtension() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_CapabilityStatementProfileResourceAssociationExtension_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::CapabilityStatementProfileResourceAssociationExtension();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::CapabilityStatementProfileResourceAssociationExtension::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CapabilityStatementProfileResourceAssociationExtension =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCapabilityStatementProfileResourceAssociationExtension}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_ResourceTypeCode.base,}};

static void InitDefaultsPatientUSCoreRaceExtension() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_PatientUSCoreRaceExtension_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::PatientUSCoreRaceExtension();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::PatientUSCoreRaceExtension::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PatientUSCoreRaceExtension =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPatientUSCoreRaceExtension}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreSmokingstatus_Effective() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Effective_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Effective();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Effective::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreSmokingstatus_Effective =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreSmokingstatus_Effective}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreSmokingstatus_Value() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Value_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Value();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Value::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreSmokingstatus_Value =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreSmokingstatus_Value}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreSmokingstatus_ReferenceRange() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreSmokingstatus_ReferenceRange_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreSmokingstatus_ReferenceRange =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreSmokingstatus_ReferenceRange}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreSmokingstatus_Related() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Related_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Related();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Related::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UsCoreSmokingstatus_Related =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUsCoreSmokingstatus_Related}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_ObservationRelationshipTypeCode.base,}};

static void InitDefaultsUsCoreSmokingstatus_Component_Value() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Component_Value_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_Value();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_Value::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsCoreSmokingstatus_Component_Value =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsCoreSmokingstatus_Component_Value}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsUsCoreSmokingstatus_Component() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Component_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_UsCoreSmokingstatus_Component =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsUsCoreSmokingstatus_Component}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreSmokingstatus_Component_Value.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreSmokingstatus_ReferenceRange.base,}};

static void InitDefaultsUsCoreSmokingstatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::uscore::_UsCoreSmokingstatus_default_instance_;
    new (ptr) ::google::fhir::stu3::uscore::UsCoreSmokingstatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::uscore::UsCoreSmokingstatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<9> scc_info_UsCoreSmokingstatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 9, InitDefaultsUsCoreSmokingstatus}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fmetadatatypes_2eproto::scc_info_Narrative.base,
      &protobuf_proto_2fstu3_2fresources_2eproto::scc_info_Account.base,
      &protobuf_proto_2fstu3_2fcodes_2eproto::scc_info_ObservationStatusCode.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreSmokingstatus_Effective.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreSmokingstatus_Value.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreSmokingstatus_ReferenceRange.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreSmokingstatus_Related.base,
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreSmokingstatus_Component.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreAllergyintolerance_Onset.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreAllergyintolerance_Reaction.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreAllergyintolerance.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PatientUSCoreBirthSexExtension.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreCareplan_Activity_Detail_Scheduled.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreCareplan_Activity_Detail_Product.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreCareplan_Activity_Detail.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreCareplan_Activity.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreCareplan.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreCareteam_Participant.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreCareteam.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreCondition_Onset.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreCondition_Abatement.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreCondition_Stage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreCondition_Evidence.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreCondition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreDevice_Udi.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreDevice.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreDiagnosticreport_Effective.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreDiagnosticreport_Performer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreDiagnosticreport_Image.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreDiagnosticreport.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ContactPointUsCoreDirect.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PatientUSCoreEthnicityExtension.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreGoal_Start.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreGoal_Target_Detail.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreGoal_Target_Due.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreGoal_Target.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreGoal.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreImmunization_Practitioner.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreImmunization_Explanation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreImmunization_Reaction.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreImmunization_VaccinationProtocol.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreImmunization.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreLocation_Position.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreLocation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreMedication_Ingredient_Item.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreMedication_Ingredient.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreMedication_Package_Content_Item.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreMedication_Package_Content.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreMedication_Package_Batch.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreMedication_Package.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreMedication.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreMedicationrequest_Medication.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreMedicationrequest_Requester.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreMedicationrequest_DispenseRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreMedicationrequest_Substitution.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreMedicationrequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreMedicationstatement_Medication.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreMedicationstatement_Effective.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreMedicationstatement.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreObservationresults_Effective.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreObservationresults_Value.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreObservationresults_ReferenceRange.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreObservationresults_Related.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreObservationresults_Component_Value.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreObservationresults_Component.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreObservationresults.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreOrganization_Contact.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreOrganization.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCorePatient_Deceased.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCorePatient_MultipleBirth.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCorePatient_Contact.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCorePatient_Communication.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCorePatient_Link.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCorePatient.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCorePractitioner_Qualification.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCorePractitioner.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreProcedure_Performed.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreProcedure_Performer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreProcedure_FocalDevice.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreProcedure.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CapabilityStatementProfileResourceAssociationExtension.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PatientUSCoreRaceExtension.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreSmokingstatus_Effective.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreSmokingstatus_Value.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreSmokingstatus_ReferenceRange.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreSmokingstatus_Related.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreSmokingstatus_Component_Value.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreSmokingstatus_Component.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsCoreSmokingstatus.base);
}

::google::protobuf::Metadata file_level_metadata[81];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Onset, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Onset, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::uscore::UsCoreAllergyintolerance_OnsetDefaultTypeInternal, date_time_),
  offsetof(::google::fhir::stu3::uscore::UsCoreAllergyintolerance_OnsetDefaultTypeInternal, age_),
  offsetof(::google::fhir::stu3::uscore::UsCoreAllergyintolerance_OnsetDefaultTypeInternal, period_),
  offsetof(::google::fhir::stu3::uscore::UsCoreAllergyintolerance_OnsetDefaultTypeInternal, range_),
  offsetof(::google::fhir::stu3::uscore::UsCoreAllergyintolerance_OnsetDefaultTypeInternal, string_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Onset, onset_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Reaction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Reaction, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Reaction, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Reaction, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Reaction, substance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Reaction, manifestation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Reaction, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Reaction, onset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Reaction, severity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Reaction, exposure_route_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Reaction, note_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance, implicit_rules_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance, contained_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance, identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance, clinical_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance, verification_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance, category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance, criticality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance, patient_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance, onset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance, asserted_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance, recorder_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance, asserter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance, last_occurrence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance, note_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreAllergyintolerance, reaction_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::PatientUSCoreBirthSexExtension, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::PatientUSCoreBirthSexExtension, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::PatientUSCoreBirthSexExtension, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::PatientUSCoreBirthSexExtension, value_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Scheduled, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Scheduled, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_ScheduledDefaultTypeInternal, timing_),
  offsetof(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_ScheduledDefaultTypeInternal, period_),
  offsetof(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_ScheduledDefaultTypeInternal, string_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Scheduled, scheduled_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Product, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Product, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_ProductDefaultTypeInternal, codeable_concept_),
  offsetof(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_ProductDefaultTypeInternal, reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Product, product_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail, category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail, definition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail, reason_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail, reason_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail, goal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail, status_reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail, prohibited_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail, scheduled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail, performer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail, product_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail, daily_amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail, quantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail, description_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity, outcome_codeable_concept_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity, outcome_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity, progress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity, reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan_Activity, detail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan, implicit_rules_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan, contained_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan, identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan, definition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan, based_on_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan, replaces_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan, part_of_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan, intent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan, category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan, period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan, author_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan, care_team_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan, addresses_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan, supporting_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan, goal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan, activity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareplan, note_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareteam_Participant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareteam_Participant, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareteam_Participant, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareteam_Participant, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareteam_Participant, role_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareteam_Participant, member_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareteam_Participant, on_behalf_of_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareteam_Participant, period_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareteam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareteam, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareteam, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareteam, implicit_rules_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareteam, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareteam, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareteam, contained_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareteam, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareteam, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareteam, identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareteam, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareteam, category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareteam, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareteam, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareteam, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareteam, period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareteam, participant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareteam, reason_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareteam, reason_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareteam, managing_organization_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCareteam, note_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition_Onset, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition_Onset, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::uscore::UsCoreCondition_OnsetDefaultTypeInternal, date_time_),
  offsetof(::google::fhir::stu3::uscore::UsCoreCondition_OnsetDefaultTypeInternal, age_),
  offsetof(::google::fhir::stu3::uscore::UsCoreCondition_OnsetDefaultTypeInternal, period_),
  offsetof(::google::fhir::stu3::uscore::UsCoreCondition_OnsetDefaultTypeInternal, range_),
  offsetof(::google::fhir::stu3::uscore::UsCoreCondition_OnsetDefaultTypeInternal, string_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition_Onset, onset_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition_Abatement, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition_Abatement, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::uscore::UsCoreCondition_AbatementDefaultTypeInternal, date_time_),
  offsetof(::google::fhir::stu3::uscore::UsCoreCondition_AbatementDefaultTypeInternal, age_),
  offsetof(::google::fhir::stu3::uscore::UsCoreCondition_AbatementDefaultTypeInternal, boolean_),
  offsetof(::google::fhir::stu3::uscore::UsCoreCondition_AbatementDefaultTypeInternal, period_),
  offsetof(::google::fhir::stu3::uscore::UsCoreCondition_AbatementDefaultTypeInternal, range_),
  offsetof(::google::fhir::stu3::uscore::UsCoreCondition_AbatementDefaultTypeInternal, string_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition_Abatement, abatement_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition_Stage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition_Stage, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition_Stage, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition_Stage, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition_Stage, summary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition_Stage, assessment_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition_Evidence, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition_Evidence, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition_Evidence, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition_Evidence, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition_Evidence, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition_Evidence, detail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition, implicit_rules_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition, contained_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition, identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition, clinical_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition, verification_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition, category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition, severity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition, body_site_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition, onset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition, abatement_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition, asserted_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition, asserter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition, stage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition, evidence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreCondition, note_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice_Udi, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice_Udi, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice_Udi, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice_Udi, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice_Udi, device_identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice_Udi, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice_Udi, jurisdiction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice_Udi, carrier_h_r_f_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice_Udi, carrier_a_i_d_c_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice_Udi, issuer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice_Udi, entry_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice, implicit_rules_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice, contained_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice, identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice, udi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice, lot_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice, manufacturer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice, manufacture_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice, expiration_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice, model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice, patient_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice, owner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice, contact_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice, note_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDevice, safety_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Effective, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Effective, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::uscore::UsCoreDiagnosticreport_EffectiveDefaultTypeInternal, date_time_),
  offsetof(::google::fhir::stu3::uscore::UsCoreDiagnosticreport_EffectiveDefaultTypeInternal, period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Effective, effective_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Performer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Performer, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Performer, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Performer, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Performer, role_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Performer, actor_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Image, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Image, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Image, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Image, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Image, comment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Image, link_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport, implicit_rules_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport, contained_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport, identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport, based_on_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport, category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport, effective_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport, issued_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport, performer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport, specimen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport, imaging_study_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport, image_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport, conclusion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport, coded_diagnosis_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreDiagnosticreport, presented_form_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::ContactPointUsCoreDirect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::ContactPointUsCoreDirect, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::ContactPointUsCoreDirect, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::ContactPointUsCoreDirect, value_boolean_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension, omb_category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension, detailed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension, text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal_Start, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal_Start, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::uscore::UsCoreGoal_StartDefaultTypeInternal, date_),
  offsetof(::google::fhir::stu3::uscore::UsCoreGoal_StartDefaultTypeInternal, codeable_concept_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal_Start, start_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal_Target_Detail, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal_Target_Detail, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::uscore::UsCoreGoal_Target_DetailDefaultTypeInternal, quantity_),
  offsetof(::google::fhir::stu3::uscore::UsCoreGoal_Target_DetailDefaultTypeInternal, range_),
  offsetof(::google::fhir::stu3::uscore::UsCoreGoal_Target_DetailDefaultTypeInternal, codeable_concept_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal_Target_Detail, detail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal_Target_Due, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal_Target_Due, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::uscore::UsCoreGoal_Target_DueDefaultTypeInternal, date_),
  offsetof(::google::fhir::stu3::uscore::UsCoreGoal_Target_DueDefaultTypeInternal, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal_Target_Due, due_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal_Target, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal_Target, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal_Target, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal_Target, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal_Target, measure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal_Target, detail_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal_Target, due_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal, implicit_rules_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal, contained_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal, identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal, category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal, priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal, status_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal, status_reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal, expressed_by_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal, addresses_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal, note_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal, outcome_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreGoal, outcome_reference_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_Practitioner, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_Practitioner, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_Practitioner, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_Practitioner, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_Practitioner, role_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_Practitioner, actor_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_Explanation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_Explanation, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_Explanation, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_Explanation, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_Explanation, reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_Explanation, reason_not_given_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_Reaction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_Reaction, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_Reaction, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_Reaction, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_Reaction, date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_Reaction, detail_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_Reaction, reported_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol, dose_sequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol, authority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol, series_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol, series_doses_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol, target_disease_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol, dose_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol, dose_status_reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization, implicit_rules_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization, contained_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization, identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization, not_given_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization, vaccine_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization, patient_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization, encounter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization, date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization, primary_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization, report_origin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization, manufacturer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization, lot_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization, expiration_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization, site_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization, route_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization, dose_quantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization, practitioner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization, note_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization, explanation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization, reaction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreImmunization, vaccination_protocol_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation_Position, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation_Position, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation_Position, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation_Position, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation_Position, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation_Position, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation_Position, altitude_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation, implicit_rules_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation, contained_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation, identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation, operational_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation, alias_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation, mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation, telecom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation, physical_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation, managing_organization_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation, part_of_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreLocation, endpoint_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_Item, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_Item, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_ItemDefaultTypeInternal, codeable_concept_),
  offsetof(::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_ItemDefaultTypeInternal, reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_Item, item_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Ingredient, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Ingredient, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Ingredient, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Ingredient, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Ingredient, item_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Ingredient, is_active_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Ingredient, amount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_Item, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_Item, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_ItemDefaultTypeInternal, codeable_concept_),
  offsetof(::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_ItemDefaultTypeInternal, reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_Item, item_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Package_Content, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Package_Content, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Package_Content, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Package_Content, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Package_Content, item_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Package_Content, amount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Package_Batch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Package_Batch, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Package_Batch, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Package_Batch, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Package_Batch, lot_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Package_Batch, expiration_date_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Package, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Package, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Package, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Package, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Package, container_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Package, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication_Package, batch_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication, implicit_rules_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication, contained_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication, is_brand_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication, is_over_the_counter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication, manufacturer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication, form_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication, ingredient_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication, package_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedication, image_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest_Medication, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest_Medication, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::uscore::UsCoreMedicationrequest_MedicationDefaultTypeInternal, codeable_concept_),
  offsetof(::google::fhir::stu3::uscore::UsCoreMedicationrequest_MedicationDefaultTypeInternal, reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest_Medication, medication_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester, agent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester, on_behalf_of_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest, validity_period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest, number_of_repeats_allowed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest, quantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest, expected_supply_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest, performer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution, allowed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, implicit_rules_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, contained_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, definition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, based_on_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, group_identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, intent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, medication_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, supporting_information_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, authored_on_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, requester_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, recorder_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, reason_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, reason_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, note_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, dosage_instruction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, dispense_request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, substitution_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, prior_prescription_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, detected_issue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationrequest, event_history_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement_Medication, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement_Medication, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::uscore::UsCoreMedicationstatement_MedicationDefaultTypeInternal, codeable_concept_),
  offsetof(::google::fhir::stu3::uscore::UsCoreMedicationstatement_MedicationDefaultTypeInternal, reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement_Medication, medication_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement_Effective, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement_Effective, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::uscore::UsCoreMedicationstatement_EffectiveDefaultTypeInternal, date_time_),
  offsetof(::google::fhir::stu3::uscore::UsCoreMedicationstatement_EffectiveDefaultTypeInternal, period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement_Effective, effective_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement, implicit_rules_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement, contained_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement, identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement, based_on_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement, part_of_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement, category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement, medication_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement, effective_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement, date_asserted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement, information_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement, derived_from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement, taken_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement, reason_not_taken_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement, reason_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement, reason_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement, note_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreMedicationstatement, dosage_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_Effective, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_Effective, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::uscore::UsCoreObservationresults_EffectiveDefaultTypeInternal, date_time_),
  offsetof(::google::fhir::stu3::uscore::UsCoreObservationresults_EffectiveDefaultTypeInternal, period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_Effective, effective_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_Value, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_Value, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::uscore::UsCoreObservationresults_ValueDefaultTypeInternal, quantity_),
  offsetof(::google::fhir::stu3::uscore::UsCoreObservationresults_ValueDefaultTypeInternal, codeable_concept_),
  offsetof(::google::fhir::stu3::uscore::UsCoreObservationresults_ValueDefaultTypeInternal, string_value_),
  offsetof(::google::fhir::stu3::uscore::UsCoreObservationresults_ValueDefaultTypeInternal, boolean_),
  offsetof(::google::fhir::stu3::uscore::UsCoreObservationresults_ValueDefaultTypeInternal, range_),
  offsetof(::google::fhir::stu3::uscore::UsCoreObservationresults_ValueDefaultTypeInternal, ratio_),
  offsetof(::google::fhir::stu3::uscore::UsCoreObservationresults_ValueDefaultTypeInternal, sampled_data_),
  offsetof(::google::fhir::stu3::uscore::UsCoreObservationresults_ValueDefaultTypeInternal, attachment_),
  offsetof(::google::fhir::stu3::uscore::UsCoreObservationresults_ValueDefaultTypeInternal, time_),
  offsetof(::google::fhir::stu3::uscore::UsCoreObservationresults_ValueDefaultTypeInternal, date_time_),
  offsetof(::google::fhir::stu3::uscore::UsCoreObservationresults_ValueDefaultTypeInternal, period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_Value, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange, low_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange, high_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange, applies_to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange, age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange, text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_Related, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_Related, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_Related, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_Related, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_Related, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_Related, target_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_Component_Value, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_Component_Value, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::uscore::UsCoreObservationresults_Component_ValueDefaultTypeInternal, quantity_),
  offsetof(::google::fhir::stu3::uscore::UsCoreObservationresults_Component_ValueDefaultTypeInternal, codeable_concept_),
  offsetof(::google::fhir::stu3::uscore::UsCoreObservationresults_Component_ValueDefaultTypeInternal, string_value_),
  offsetof(::google::fhir::stu3::uscore::UsCoreObservationresults_Component_ValueDefaultTypeInternal, range_),
  offsetof(::google::fhir::stu3::uscore::UsCoreObservationresults_Component_ValueDefaultTypeInternal, ratio_),
  offsetof(::google::fhir::stu3::uscore::UsCoreObservationresults_Component_ValueDefaultTypeInternal, sampled_data_),
  offsetof(::google::fhir::stu3::uscore::UsCoreObservationresults_Component_ValueDefaultTypeInternal, attachment_),
  offsetof(::google::fhir::stu3::uscore::UsCoreObservationresults_Component_ValueDefaultTypeInternal, time_),
  offsetof(::google::fhir::stu3::uscore::UsCoreObservationresults_Component_ValueDefaultTypeInternal, date_time_),
  offsetof(::google::fhir::stu3::uscore::UsCoreObservationresults_Component_ValueDefaultTypeInternal, period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_Component_Value, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_Component, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_Component, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_Component, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_Component, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_Component, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_Component, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_Component, data_absent_reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_Component, interpretation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults_Component, reference_range_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults, implicit_rules_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults, contained_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults, identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults, based_on_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults, category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults, effective_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults, issued_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults, performer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults, data_absent_reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults, interpretation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults, comment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults, body_site_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults, method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults, specimen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults, device_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults, reference_range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults, related_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreObservationresults, component_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreOrganization_Contact, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreOrganization_Contact, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreOrganization_Contact, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreOrganization_Contact, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreOrganization_Contact, purpose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreOrganization_Contact, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreOrganization_Contact, telecom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreOrganization_Contact, address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreOrganization, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreOrganization, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreOrganization, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreOrganization, implicit_rules_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreOrganization, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreOrganization, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreOrganization, contained_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreOrganization, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreOrganization, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreOrganization, identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreOrganization, active_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreOrganization, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreOrganization, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreOrganization, alias_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreOrganization, telecom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreOrganization, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreOrganization, part_of_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreOrganization, contact_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreOrganization, endpoint_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient_Deceased, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient_Deceased, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::uscore::UsCorePatient_DeceasedDefaultTypeInternal, boolean_),
  offsetof(::google::fhir::stu3::uscore::UsCorePatient_DeceasedDefaultTypeInternal, date_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient_Deceased, deceased_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient_MultipleBirth, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient_MultipleBirth, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::uscore::UsCorePatient_MultipleBirthDefaultTypeInternal, boolean_),
  offsetof(::google::fhir::stu3::uscore::UsCorePatient_MultipleBirthDefaultTypeInternal, integer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient_MultipleBirth, multiple_birth_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient_Contact, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient_Contact, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient_Contact, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient_Contact, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient_Contact, relationship_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient_Contact, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient_Contact, telecom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient_Contact, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient_Contact, gender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient_Contact, organization_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient_Contact, period_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient_Communication, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient_Communication, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient_Communication, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient_Communication, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient_Communication, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient_Communication, preferred_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient_Link, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient_Link, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient_Link, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient_Link, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient_Link, other_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient_Link, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient, implicit_rules_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient, contained_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient, identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient, active_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient, telecom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient, gender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient, birth_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient, deceased_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient, marital_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient, multiple_birth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient, photo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient, contact_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient, communication_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient, general_practitioner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient, managing_organization_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient, link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient, race_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient, ethnicity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePatient, birthsex_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePractitioner_Qualification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePractitioner_Qualification, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePractitioner_Qualification, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePractitioner_Qualification, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePractitioner_Qualification, identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePractitioner_Qualification, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePractitioner_Qualification, period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePractitioner_Qualification, issuer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePractitioner, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePractitioner, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePractitioner, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePractitioner, implicit_rules_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePractitioner, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePractitioner, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePractitioner, contained_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePractitioner, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePractitioner, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePractitioner, identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePractitioner, active_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePractitioner, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePractitioner, telecom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePractitioner, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePractitioner, gender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePractitioner, birth_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePractitioner, photo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePractitioner, qualification_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCorePractitioner, communication_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure_Performed, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure_Performed, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::uscore::UsCoreProcedure_PerformedDefaultTypeInternal, date_time_),
  offsetof(::google::fhir::stu3::uscore::UsCoreProcedure_PerformedDefaultTypeInternal, period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure_Performed, performed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure_Performer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure_Performer, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure_Performer, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure_Performer, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure_Performer, role_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure_Performer, actor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure_Performer, on_behalf_of_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure_FocalDevice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure_FocalDevice, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure_FocalDevice, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure_FocalDevice, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure_FocalDevice, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure_FocalDevice, manipulated_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, implicit_rules_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, contained_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, definition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, based_on_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, part_of_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, not_done_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, not_done_reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, performed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, performer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, reason_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, reason_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, body_site_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, outcome_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, report_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, complication_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, complication_detail_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, follow_up_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, note_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, focal_device_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, used_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreProcedure, used_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::CapabilityStatementProfileResourceAssociationExtension, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::CapabilityStatementProfileResourceAssociationExtension, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::CapabilityStatementProfileResourceAssociationExtension, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::CapabilityStatementProfileResourceAssociationExtension, value_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::PatientUSCoreRaceExtension, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::PatientUSCoreRaceExtension, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::PatientUSCoreRaceExtension, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::PatientUSCoreRaceExtension, omb_category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::PatientUSCoreRaceExtension, detailed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::PatientUSCoreRaceExtension, text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Effective, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Effective, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::uscore::UsCoreSmokingstatus_EffectiveDefaultTypeInternal, date_time_),
  offsetof(::google::fhir::stu3::uscore::UsCoreSmokingstatus_EffectiveDefaultTypeInternal, period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Effective, effective_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Value, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Value, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::uscore::UsCoreSmokingstatus_ValueDefaultTypeInternal, codeable_concept_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Value, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange, low_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange, high_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange, applies_to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange, age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange, text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Related, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Related, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Related, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Related, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Related, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Related, target_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_Value, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_Value, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_ValueDefaultTypeInternal, quantity_),
  offsetof(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_ValueDefaultTypeInternal, codeable_concept_),
  offsetof(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_ValueDefaultTypeInternal, string_value_),
  offsetof(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_ValueDefaultTypeInternal, range_),
  offsetof(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_ValueDefaultTypeInternal, ratio_),
  offsetof(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_ValueDefaultTypeInternal, sampled_data_),
  offsetof(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_ValueDefaultTypeInternal, attachment_),
  offsetof(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_ValueDefaultTypeInternal, time_),
  offsetof(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_ValueDefaultTypeInternal, date_time_),
  offsetof(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_ValueDefaultTypeInternal, period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_Value, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component, data_absent_reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component, interpretation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component, reference_range_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus, implicit_rules_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus, contained_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus, modifier_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus, identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus, based_on_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus, category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus, effective_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus, issued_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus, performer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus, data_absent_reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus, interpretation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus, comment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus, body_site_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus, method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus, specimen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus, device_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus, reference_range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus, related_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::uscore::UsCoreSmokingstatus, component_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Onset)},
  { 11, -1, sizeof(::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Reaction)},
  { 26, -1, sizeof(::google::fhir::stu3::uscore::UsCoreAllergyintolerance)},
  { 54, -1, sizeof(::google::fhir::stu3::uscore::PatientUSCoreBirthSexExtension)},
  { 62, -1, sizeof(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Scheduled)},
  { 71, -1, sizeof(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Product)},
  { 79, -1, sizeof(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail)},
  { 103, -1, sizeof(::google::fhir::stu3::uscore::UsCoreCareplan_Activity)},
  { 116, -1, sizeof(::google::fhir::stu3::uscore::UsCoreCareplan)},
  { 149, -1, sizeof(::google::fhir::stu3::uscore::UsCoreCareteam_Participant)},
  { 161, -1, sizeof(::google::fhir::stu3::uscore::UsCoreCareteam)},
  { 186, -1, sizeof(::google::fhir::stu3::uscore::UsCoreCondition_Onset)},
  { 197, -1, sizeof(::google::fhir::stu3::uscore::UsCoreCondition_Abatement)},
  { 209, -1, sizeof(::google::fhir::stu3::uscore::UsCoreCondition_Stage)},
  { 219, -1, sizeof(::google::fhir::stu3::uscore::UsCoreCondition_Evidence)},
  { 229, -1, sizeof(::google::fhir::stu3::uscore::UsCoreCondition)},
  { 258, -1, sizeof(::google::fhir::stu3::uscore::UsCoreDevice_Udi)},
  { 273, -1, sizeof(::google::fhir::stu3::uscore::UsCoreDevice)},
  { 303, -1, sizeof(::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Effective)},
  { 311, -1, sizeof(::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Performer)},
  { 321, -1, sizeof(::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Image)},
  { 331, -1, sizeof(::google::fhir::stu3::uscore::UsCoreDiagnosticreport)},
  { 361, -1, sizeof(::google::fhir::stu3::uscore::ContactPointUsCoreDirect)},
  { 369, -1, sizeof(::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension)},
  { 379, -1, sizeof(::google::fhir::stu3::uscore::UsCoreGoal_Start)},
  { 387, -1, sizeof(::google::fhir::stu3::uscore::UsCoreGoal_Target_Detail)},
  { 396, -1, sizeof(::google::fhir::stu3::uscore::UsCoreGoal_Target_Due)},
  { 404, -1, sizeof(::google::fhir::stu3::uscore::UsCoreGoal_Target)},
  { 415, -1, sizeof(::google::fhir::stu3::uscore::UsCoreGoal)},
  { 443, -1, sizeof(::google::fhir::stu3::uscore::UsCoreImmunization_Practitioner)},
  { 453, -1, sizeof(::google::fhir::stu3::uscore::UsCoreImmunization_Explanation)},
  { 463, -1, sizeof(::google::fhir::stu3::uscore::UsCoreImmunization_Reaction)},
  { 474, -1, sizeof(::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol)},
  { 490, -1, sizeof(::google::fhir::stu3::uscore::UsCoreImmunization)},
  { 524, -1, sizeof(::google::fhir::stu3::uscore::UsCoreLocation_Position)},
  { 535, -1, sizeof(::google::fhir::stu3::uscore::UsCoreLocation)},
  { 563, -1, sizeof(::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_Item)},
  { 571, -1, sizeof(::google::fhir::stu3::uscore::UsCoreMedication_Ingredient)},
  { 582, -1, sizeof(::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_Item)},
  { 590, -1, sizeof(::google::fhir::stu3::uscore::UsCoreMedication_Package_Content)},
  { 600, -1, sizeof(::google::fhir::stu3::uscore::UsCoreMedication_Package_Batch)},
  { 610, -1, sizeof(::google::fhir::stu3::uscore::UsCoreMedication_Package)},
  { 621, -1, sizeof(::google::fhir::stu3::uscore::UsCoreMedication)},
  { 643, -1, sizeof(::google::fhir::stu3::uscore::UsCoreMedicationrequest_Medication)},
  { 651, -1, sizeof(::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester)},
  { 661, -1, sizeof(::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest)},
  { 674, -1, sizeof(::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution)},
  { 684, -1, sizeof(::google::fhir::stu3::uscore::UsCoreMedicationrequest)},
  { 721, -1, sizeof(::google::fhir::stu3::uscore::UsCoreMedicationstatement_Medication)},
  { 729, -1, sizeof(::google::fhir::stu3::uscore::UsCoreMedicationstatement_Effective)},
  { 737, -1, sizeof(::google::fhir::stu3::uscore::UsCoreMedicationstatement)},
  { 768, -1, sizeof(::google::fhir::stu3::uscore::UsCoreObservationresults_Effective)},
  { 776, -1, sizeof(::google::fhir::stu3::uscore::UsCoreObservationresults_Value)},
  { 793, -1, sizeof(::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange)},
  { 807, -1, sizeof(::google::fhir::stu3::uscore::UsCoreObservationresults_Related)},
  { 817, -1, sizeof(::google::fhir::stu3::uscore::UsCoreObservationresults_Component_Value)},
  { 833, -1, sizeof(::google::fhir::stu3::uscore::UsCoreObservationresults_Component)},
  { 846, -1, sizeof(::google::fhir::stu3::uscore::UsCoreObservationresults)},
  { 880, -1, sizeof(::google::fhir::stu3::uscore::UsCoreOrganization_Contact)},
  { 892, -1, sizeof(::google::fhir::stu3::uscore::UsCoreOrganization)},
  { 915, -1, sizeof(::google::fhir::stu3::uscore::UsCorePatient_Deceased)},
  { 923, -1, sizeof(::google::fhir::stu3::uscore::UsCorePatient_MultipleBirth)},
  { 931, -1, sizeof(::google::fhir::stu3::uscore::UsCorePatient_Contact)},
  { 946, -1, sizeof(::google::fhir::stu3::uscore::UsCorePatient_Communication)},
  { 956, -1, sizeof(::google::fhir::stu3::uscore::UsCorePatient_Link)},
  { 966, -1, sizeof(::google::fhir::stu3::uscore::UsCorePatient)},
  { 998, -1, sizeof(::google::fhir::stu3::uscore::UsCorePractitioner_Qualification)},
  { 1010, -1, sizeof(::google::fhir::stu3::uscore::UsCorePractitioner)},
  { 1033, -1, sizeof(::google::fhir::stu3::uscore::UsCoreProcedure_Performed)},
  { 1041, -1, sizeof(::google::fhir::stu3::uscore::UsCoreProcedure_Performer)},
  { 1052, -1, sizeof(::google::fhir::stu3::uscore::UsCoreProcedure_FocalDevice)},
  { 1062, -1, sizeof(::google::fhir::stu3::uscore::UsCoreProcedure)},
  { 1101, -1, sizeof(::google::fhir::stu3::uscore::CapabilityStatementProfileResourceAssociationExtension)},
  { 1109, -1, sizeof(::google::fhir::stu3::uscore::PatientUSCoreRaceExtension)},
  { 1119, -1, sizeof(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Effective)},
  { 1127, -1, sizeof(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Value)},
  { 1134, -1, sizeof(::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange)},
  { 1148, -1, sizeof(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Related)},
  { 1158, -1, sizeof(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_Value)},
  { 1174, -1, sizeof(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component)},
  { 1187, -1, sizeof(::google::fhir::stu3::uscore::UsCoreSmokingstatus)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_Onset_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_Reaction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_PatientUSCoreBirthSexExtension_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_Detail_Scheduled_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_Detail_Product_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_Detail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreCareplan_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreCareteam_Participant_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreCareteam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreCondition_Onset_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreCondition_Abatement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreCondition_Stage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreCondition_Evidence_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreCondition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreDevice_Udi_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreDevice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreDiagnosticreport_Effective_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreDiagnosticreport_Performer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreDiagnosticreport_Image_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreDiagnosticreport_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_ContactPointUsCoreDirect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_PatientUSCoreEthnicityExtension_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreGoal_Start_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreGoal_Target_Detail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreGoal_Target_Due_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreGoal_Target_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreGoal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreImmunization_Practitioner_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreImmunization_Explanation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreImmunization_Reaction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreImmunization_VaccinationProtocol_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreImmunization_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreLocation_Position_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreLocation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreMedication_Ingredient_Item_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreMedication_Ingredient_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreMedication_Package_Content_Item_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreMedication_Package_Content_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreMedication_Package_Batch_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreMedication_Package_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreMedication_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreMedicationrequest_Medication_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreMedicationrequest_Requester_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreMedicationrequest_DispenseRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreMedicationrequest_Substitution_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreMedicationrequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreMedicationstatement_Medication_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreMedicationstatement_Effective_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreMedicationstatement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreObservationresults_Effective_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreObservationresults_Value_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreObservationresults_ReferenceRange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreObservationresults_Related_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreObservationresults_Component_Value_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreObservationresults_Component_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreObservationresults_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreOrganization_Contact_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreOrganization_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCorePatient_Deceased_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCorePatient_MultipleBirth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCorePatient_Contact_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCorePatient_Communication_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCorePatient_Link_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCorePatient_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCorePractitioner_Qualification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCorePractitioner_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreProcedure_Performed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreProcedure_Performer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreProcedure_FocalDevice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreProcedure_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_CapabilityStatementProfileResourceAssociationExtension_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_PatientUSCoreRaceExtension_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Effective_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Value_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreSmokingstatus_ReferenceRange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Related_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Component_Value_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Component_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::uscore::_UsCoreSmokingstatus_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "proto/stu3/uscore.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 81);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027proto/stu3/uscore.proto\022\027google.fhir.s"
      "tu3.uscore\032\034proto/stu3/annotations.proto"
      "\032\026proto/stu3/codes.proto\032\032proto/stu3/dat"
      "atypes.proto\032\036proto/stu3/metadatatypes.p"
      "roto\032\032proto/stu3/resources.proto\032\035proto/"
      "stu3/uscore_codes.proto\"\245\026\n\030UsCoreAllerg"
      "yintolerance\022&\n\002id\030\001 \001(\0132\032.google.fhir.s"
      "tu3.proto.Id\022*\n\004meta\030\002 \001(\0132\034.google.fhir"
      ".stu3.proto.Meta\0223\n\016implicit_rules\030\003 \001(\013"
      "2\033.google.fhir.stu3.proto.Uri\0226\n\010languag"
      "e\030\004 \001(\0132$.google.fhir.stu3.proto.Languag"
      "eCode\022/\n\004text\030\005 \001(\0132!.google.fhir.stu3.p"
      "roto.Narrative\022<\n\tcontained\030\006 \003(\0132).goog"
      "le.fhir.stu3.proto.ContainedResource\0224\n\t"
      "extension\030\007 \003(\0132!.google.fhir.stu3.proto"
      ".Extension\022=\n\022modifier_extension\030\010 \003(\0132!"
      ".google.fhir.stu3.proto.Extension\0226\n\nide"
      "ntifier\030\t \003(\0132\".google.fhir.stu3.proto.I"
      "dentifier\022U\n\017clinical_status\030\n \001(\0132<.goo"
      "gle.fhir.stu3.proto.AllergyIntoleranceCl"
      "inicalStatusCode\022e\n\023verification_status\030"
      "\013 \001(\0132@.google.fhir.stu3.proto.AllergyIn"
      "toleranceVerificationStatusCodeB\006\360\320\207\353\004\001\022"
      "@\n\004type\030\014 \001(\01322.google.fhir.stu3.proto.A"
      "llergyIntoleranceTypeCode\022H\n\010category\030\r "
      "\003(\01326.google.fhir.stu3.proto.AllergyInto"
      "leranceCategoryCode\022N\n\013criticality\030\016 \001(\013"
      "29.google.fhir.stu3.proto.AllergyIntoler"
      "anceCriticalityCode\022=\n\004code\030\017 \001(\0132\'.goog"
      "le.fhir.stu3.proto.CodeableConceptB\006\360\320\207\353"
      "\004\001\022\177\n\007patient\030\020 \001(\0132!.google.fhir.stu3.p"
      "roto.ReferenceBK\360\320\207\353\004\001\362\377\374\302\006\?http://hl7.o"
      "rg/fhir/us/core/StructureDefinition/us-c"
      "ore-patient\022N\n\005onset\030\021 \001(\01327.google.fhir"
      ".stu3.uscore.UsCoreAllergyintolerance.On"
      "setB\006\370\341\343\311\005\001\0227\n\rasserted_date\030\022 \001(\0132 .goo"
      "gle.fhir.stu3.proto.DateTime\022\244\001\n\010recorde"
      "r\030\023 \001(\0132!.google.fhir.stu3.proto.Referen"
      "ceBo\362\377\374\302\0064http://hl7.org/fhir/StructureD"
      "efinition/Practitioner\362\377\374\302\006/http://hl7.o"
      "rg/fhir/StructureDefinition/Patient\022\340\001\n\010"
      "asserter\030\024 \001(\0132!.google.fhir.stu3.proto."
      "ReferenceB\252\001\362\377\374\302\006/http://hl7.org/fhir/St"
      "ructureDefinition/Patient\362\377\374\302\0065http://hl"
      "7.org/fhir/StructureDefinition/RelatedPe"
      "rson\362\377\374\302\0064http://hl7.org/fhir/StructureD"
      "efinition/Practitioner\0229\n\017last_occurrenc"
      "e\030\025 \001(\0132 .google.fhir.stu3.proto.DateTim"
      "e\0220\n\004note\030\026 \003(\0132\".google.fhir.stu3.proto"
      ".Annotation\022L\n\010reaction\030\027 \003(\0132:.google.f"
      "hir.stu3.uscore.UsCoreAllergyintolerance"
      ".Reaction\032\225\002\n\005Onset\0225\n\tdate_time\030\001 \001(\0132 "
      ".google.fhir.stu3.proto.DateTimeH\000\022*\n\003ag"
      "e\030\002 \001(\0132\033.google.fhir.stu3.proto.AgeH\000\0220"
      "\n\006period\030\003 \001(\0132\036.google.fhir.stu3.proto."
      "PeriodH\000\022.\n\005range\030\004 \001(\0132\035.google.fhir.st"
      "u3.proto.RangeH\000\022>\n\014string_value\030\005 \001(\0132\036"
      ".google.fhir.stu3.proto.StringH\000R\006string"
      "B\007\n\005onset\032\322\004\n\010Reaction\022*\n\002id\030\001 \001(\0132\036.goo"
      "gle.fhir.stu3.proto.String\0224\n\textension\030"
      "\002 \003(\0132!.google.fhir.stu3.proto.Extension"
      "\022=\n\022modifier_extension\030\003 \003(\0132!.google.fh"
      "ir.stu3.proto.Extension\022:\n\tsubstance\030\004 \001"
      "(\0132\'.google.fhir.stu3.proto.CodeableConc"
      "ept\022F\n\rmanifestation\030\005 \003(\0132\'.google.fhir"
      ".stu3.proto.CodeableConceptB\006\360\320\207\353\004\001\0223\n\013d"
      "escription\030\006 \001(\0132\036.google.fhir.stu3.prot"
      "o.String\022/\n\005onset\030\007 \001(\0132 .google.fhir.st"
      "u3.proto.DateTime\022H\n\010severity\030\010 \001(\01326.go"
      "ogle.fhir.stu3.proto.AllergyIntoleranceS"
      "everityCode\022\?\n\016exposure_route\030\t \001(\0132\'.go"
      "ogle.fhir.stu3.proto.CodeableConcept\0220\n\004"
      "note\030\n \003(\0132\".google.fhir.stu3.proto.Anno"
      "tation:\226\001\300\237\343\266\005\003\232\265\216\223\006:http://hl7.org/fhir"
      "/StructureDefinition/AllergyIntolerance\262"
      "\376\344\227\006Jhttp://hl7.org/fhir/us/core/Structu"
      "reDefinition/us-core-allergyintolerance\""
      "\311\002\n\036PatientUSCoreBirthSexExtension\022*\n\002id"
      "\030\001 \001(\0132\036.google.fhir.stu3.proto.String\0224"
      "\n\textension\030\002 \003(\0132!.google.fhir.stu3.pro"
      "to.Extension\022\?\n\nvalue_code\030\003 \001(\0132+.googl"
      "e.fhir.stu3.uscore.UsCoreBirthSexCode:\203\001"
      "\300\237\343\266\005\002\232\265\216\223\0061http://hl7.org/fhir/Structur"
      "eDefinition/Extension\262\376\344\227\006@http://hl7.or"
      "g/fhir/us/core/StructureDefinition/us-co"
      "re-birthsex\"\303/\n\016UsCoreCareplan\022&\n\002id\030\001 \001"
      "(\0132\032.google.fhir.stu3.proto.Id\022*\n\004meta\030\002"
      " \001(\0132\034.google.fhir.stu3.proto.Meta\0223\n\016im"
      "plicit_rules\030\003 \001(\0132\033.google.fhir.stu3.pr"
      "oto.Uri\0226\n\010language\030\004 \001(\0132$.google.fhir."
      "stu3.proto.LanguageCode\0227\n\004text\030\005 \001(\0132!."
      "google.fhir.stu3.proto.NarrativeB\006\360\320\207\353\004\001"
      "\022<\n\tcontained\030\006 \003(\0132).google.fhir.stu3.p"
      "roto.ContainedResource\0224\n\textension\030\007 \003("
      "\0132!.google.fhir.stu3.proto.Extension\022=\n\022"
      "modifier_extension\030\010 \003(\0132!.google.fhir.s"
      "tu3.proto.Extension\0226\n\nidentifier\030\t \003(\0132"
      "\".google.fhir.stu3.proto.Identifier\022\256\001\n\n"
      "definition\030\n \003(\0132!.google.fhir.stu3.prot"
      "o.ReferenceBw\362\377\374\302\0066http://hl7.org/fhir/S"
      "tructureDefinition/PlanDefinition\362\377\374\302\0065h"
      "ttp://hl7.org/fhir/StructureDefinition/Q"
      "uestionnaire\022k\n\010based_on\030\013 \003(\0132!.google."
      "fhir.stu3.proto.ReferenceB6\362\377\374\302\0060http://"
      "hl7.org/fhir/StructureDefinition/CarePla"
      "n\022k\n\010replaces\030\014 \003(\0132!.google.fhir.stu3.p"
      "roto.ReferenceB6\362\377\374\302\0060http://hl7.org/fhi"
      "r/StructureDefinition/CarePlan\022j\n\007part_o"
      "f\030\r \003(\0132!.google.fhir.stu3.proto.Referen"
      "ceB6\362\377\374\302\0060http://hl7.org/fhir/StructureD"
      "efinition/CarePlan\022B\n\006status\030\016 \001(\0132*.goo"
      "gle.fhir.stu3.proto.CarePlanStatusCodeB\006"
      "\360\320\207\353\004\001\022B\n\006intent\030\017 \001(\0132*.google.fhir.stu"
      "3.proto.CarePlanIntentCodeB\006\360\320\207\353\004\001\022A\n\010ca"
      "tegory\030\020 \003(\0132\'.google.fhir.stu3.proto.Co"
      "deableConceptB\006\360\320\207\353\004\001\022-\n\005title\030\021 \001(\0132\036.g"
      "oogle.fhir.stu3.proto.String\0223\n\013descript"
      "ion\030\022 \001(\0132\036.google.fhir.stu3.proto.Strin"
      "g\022\177\n\007subject\030\023 \001(\0132!.google.fhir.stu3.pr"
      "oto.ReferenceBK\360\320\207\353\004\001\362\377\374\302\006\?http://hl7.or"
      "g/fhir/us/core/StructureDefinition/us-co"
      "re-patient\022\246\001\n\007context\030\024 \001(\0132!.google.fh"
      "ir.stu3.proto.ReferenceBr\362\377\374\302\0061http://hl"
      "7.org/fhir/StructureDefinition/Encounter"
      "\362\377\374\302\0065http://hl7.org/fhir/StructureDefin"
      "ition/EpisodeOfCare\022.\n\006period\030\025 \001(\0132\036.go"
      "ogle.fhir.stu3.proto.Period\022\316\002\n\006author\030\026"
      " \003(\0132!.google.fhir.stu3.proto.ReferenceB"
      "\232\002\362\377\374\302\006/http://hl7.org/fhir/StructureDef"
      "inition/Patient\362\377\374\302\0064http://hl7.org/fhir"
      "/StructureDefinition/Practitioner\362\377\374\302\0065h"
      "ttp://hl7.org/fhir/StructureDefinition/R"
      "elatedPerson\362\377\374\302\0064http://hl7.org/fhir/St"
      "ructureDefinition/Organization\362\377\374\302\0060http"
      "://hl7.org/fhir/StructureDefinition/Care"
      "Team\022l\n\tcare_team\030\027 \003(\0132!.google.fhir.st"
      "u3.proto.ReferenceB6\362\377\374\302\0060http://hl7.org"
      "/fhir/StructureDefinition/CareTeam\022m\n\tad"
      "dresses\030\030 \003(\0132!.google.fhir.stu3.proto.R"
      "eferenceB7\362\377\374\302\0061http://hl7.org/fhir/Stru"
      "ctureDefinition/Condition\022r\n\017supporting_"
      "info\030\031 \003(\0132!.google.fhir.stu3.proto.Refe"
      "renceB6\362\377\374\302\0060http://hl7.org/fhir/Structu"
      "reDefinition/Resource\022c\n\004goal\030\032 \003(\0132!.go"
      "ogle.fhir.stu3.proto.ReferenceB2\362\377\374\302\006,ht"
      "tp://hl7.org/fhir/StructureDefinition/Go"
      "al\022B\n\010activity\030\033 \003(\01320.google.fhir.stu3."
      "uscore.UsCoreCareplan.Activity\0220\n\004note\030\034"
      " \003(\0132\".google.fhir.stu3.proto.Annotation"
      "\032\311\032\n\010Activity\022*\n\002id\030\001 \001(\0132\036.google.fhir."
      "stu3.proto.String\0224\n\textension\030\002 \003(\0132!.g"
      "oogle.fhir.stu3.proto.Extension\022=\n\022modif"
      "ier_extension\030\003 \003(\0132!.google.fhir.stu3.p"
      "roto.Extension\022I\n\030outcome_codeable_conce"
      "pt\030\004 \003(\0132\'.google.fhir.stu3.proto.Codeab"
      "leConcept\022t\n\021outcome_reference\030\005 \003(\0132!.g"
      "oogle.fhir.stu3.proto.ReferenceB6\362\377\374\302\0060h"
      "ttp://hl7.org/fhir/StructureDefinition/R"
      "esource\0224\n\010progress\030\006 \003(\0132\".google.fhir."
      "stu3.proto.Annotation\022\217\005\n\treference\030\007 \001("
      "\0132!.google.fhir.stu3.proto.ReferenceB\330\004\362"
      "\377\374\302\0063http://hl7.org/fhir/StructureDefini"
      "tion/Appointment\362\377\374\302\006<http://hl7.org/fhi"
      "r/StructureDefinition/CommunicationReque"
      "st\362\377\374\302\0065http://hl7.org/fhir/StructureDef"
      "inition/DeviceRequest\362\377\374\302\0069http://hl7.or"
      "g/fhir/StructureDefinition/MedicationReq"
      "uest\362\377\374\302\0066http://hl7.org/fhir/StructureD"
      "efinition/NutritionOrder\362\377\374\302\006,http://hl7"
      ".org/fhir/StructureDefinition/Task\362\377\374\302\0068"
      "http://hl7.org/fhir/StructureDefinition/"
      "ProcedureRequest\362\377\374\302\0067http://hl7.org/fhi"
      "r/StructureDefinition/ReferralRequest\362\377\374"
      "\302\006:http://hl7.org/fhir/StructureDefiniti"
      "on/VisionPrescription\362\377\374\302\0064http://hl7.or"
      "g/fhir/StructureDefinition/RequestGroup\022"
      "G\n\006detail\030\010 \001(\01327.google.fhir.stu3.uscor"
      "e.UsCoreCareplan.Activity.Detail\032\311\021\n\006Det"
      "ail\022*\n\002id\030\001 \001(\0132\036.google.fhir.stu3.proto"
      ".String\0224\n\textension\030\002 \003(\0132!.google.fhir"
      ".stu3.proto.Extension\022=\n\022modifier_extens"
      "ion\030\003 \003(\0132!.google.fhir.stu3.proto.Exten"
      "sion\0229\n\010category\030\004 \001(\0132\'.google.fhir.stu"
      "3.proto.CodeableConcept\022\357\001\n\ndefinition\030\005"
      " \001(\0132!.google.fhir.stu3.proto.ReferenceB"
      "\267\001\362\377\374\302\0066http://hl7.org/fhir/StructureDef"
      "inition/PlanDefinition\362\377\374\302\006:http://hl7.o"
      "rg/fhir/StructureDefinition/ActivityDefi"
      "nition\362\377\374\302\0065http://hl7.org/fhir/Structur"
      "eDefinition/Questionnaire\0225\n\004code\030\006 \001(\0132"
      "\'.google.fhir.stu3.proto.CodeableConcept"
      "\022<\n\013reason_code\030\007 \003(\0132\'.google.fhir.stu3"
      ".proto.CodeableConcept\022t\n\020reason_referen"
      "ce\030\010 \003(\0132!.google.fhir.stu3.proto.Refere"
      "nceB7\362\377\374\302\0061http://hl7.org/fhir/Structure"
      "Definition/Condition\022c\n\004goal\030\t \003(\0132!.goo"
      "gle.fhir.stu3.proto.ReferenceB2\362\377\374\302\006,htt"
      "p://hl7.org/fhir/StructureDefinition/Goa"
      "l\022J\n\006status\030\n \001(\01322.google.fhir.stu3.pro"
      "to.CarePlanActivityStatusCodeB\006\360\320\207\353\004\001\0225\n"
      "\rstatus_reason\030\013 \001(\0132\036.google.fhir.stu3."
      "proto.String\0223\n\nprohibited\030\014 \001(\0132\037.googl"
      "e.fhir.stu3.proto.Boolean\022\\\n\tscheduled\030\r"
      " \001(\0132A.google.fhir.stu3.uscore.UsCoreCar"
      "eplan.Activity.Detail.ScheduledB\006\370\341\343\311\005\001\022"
      "k\n\010location\030\016 \001(\0132!.google.fhir.stu3.pro"
      "to.ReferenceB6\362\377\374\302\0060http://hl7.org/fhir/"
      "StructureDefinition/Location\022\321\002\n\tperform"
      "er\030\017 \003(\0132!.google.fhir.stu3.proto.Refere"
      "nceB\232\002\362\377\374\302\0064http://hl7.org/fhir/Structur"
      "eDefinition/Practitioner\362\377\374\302\0064http://hl7"
      ".org/fhir/StructureDefinition/Organizati"
      "on\362\377\374\302\0065http://hl7.org/fhir/StructureDef"
      "inition/RelatedPerson\362\377\374\302\006/http://hl7.or"
      "g/fhir/StructureDefinition/Patient\362\377\374\302\0060"
      "http://hl7.org/fhir/StructureDefinition/"
      "CareTeam\022X\n\007product\030\020 \001(\0132\?.google.fhir."
      "stu3.uscore.UsCoreCareplan.Activity.Deta"
      "il.ProductB\006\370\341\343\311\005\001\022<\n\014daily_amount\030\021 \001(\013"
      "2&.google.fhir.stu3.proto.SimpleQuantity"
      "\0228\n\010quantity\030\022 \001(\0132&.google.fhir.stu3.pr"
      "oto.SimpleQuantity\0223\n\013description\030\023 \001(\0132"
      "\036.google.fhir.stu3.proto.String\032\274\001\n\tSche"
      "duled\0220\n\006timing\030\001 \001(\0132\036.google.fhir.stu3"
      ".proto.TimingH\000\0220\n\006period\030\002 \001(\0132\036.google"
      ".fhir.stu3.proto.PeriodH\000\022>\n\014string_valu"
      "e\030\003 \001(\0132\036.google.fhir.stu3.proto.StringH"
      "\000R\006stringB\013\n\tscheduled\032\203\002\n\007Product\022C\n\020co"
      "deable_concept\030\001 \001(\0132\'.google.fhir.stu3."
      "proto.CodeableConceptH\000\022\247\001\n\treference\030\002 "
      "\001(\0132!.google.fhir.stu3.proto.ReferenceBo"
      "\362\377\374\302\0062http://hl7.org/fhir/StructureDefin"
      "ition/Medication\362\377\374\302\0061http://hl7.org/fhi"
      "r/StructureDefinition/SubstanceH\000B\t\n\007pro"
      "duct:\202\001\300\237\343\266\005\003\232\265\216\223\0060http://hl7.org/fhir/S"
      "tructureDefinition/CarePlan\262\376\344\227\006@http://"
      "hl7.org/fhir/us/core/StructureDefinition"
      "/us-core-careplan\"\225\022\n\016UsCoreCareteam\022&\n\002"
      "id\030\001 \001(\0132\032.google.fhir.stu3.proto.Id\022*\n\004"
      "meta\030\002 \001(\0132\034.google.fhir.stu3.proto.Meta"
      "\0223\n\016implicit_rules\030\003 \001(\0132\033.google.fhir.s"
      "tu3.proto.Uri\0226\n\010language\030\004 \001(\0132$.google"
      ".fhir.stu3.proto.LanguageCode\022/\n\004text\030\005 "
      "\001(\0132!.google.fhir.stu3.proto.Narrative\022<"
      "\n\tcontained\030\006 \003(\0132).google.fhir.stu3.pro"
      "to.ContainedResource\0224\n\textension\030\007 \003(\0132"
      "!.google.fhir.stu3.proto.Extension\022=\n\022mo"
      "difier_extension\030\010 \003(\0132!.google.fhir.stu"
      "3.proto.Extension\0226\n\nidentifier\030\t \003(\0132\"."
      "google.fhir.stu3.proto.Identifier\022B\n\006sta"
      "tus\030\n \001(\0132*.google.fhir.stu3.proto.CareT"
      "eamStatusCodeB\006\360\320\207\353\004\001\0229\n\010category\030\013 \003(\0132"
      "\'.google.fhir.stu3.proto.CodeableConcept"
      "\022,\n\004name\030\014 \001(\0132\036.google.fhir.stu3.proto."
      "String\022\177\n\007subject\030\r \001(\0132!.google.fhir.st"
      "u3.proto.ReferenceBK\360\320\207\353\004\001\362\377\374\302\006\?http://h"
      "l7.org/fhir/us/core/StructureDefinition/"
      "us-core-patient\022\246\001\n\007context\030\016 \001(\0132!.goog"
      "le.fhir.stu3.proto.ReferenceBr\362\377\374\302\0061http"
      "://hl7.org/fhir/StructureDefinition/Enco"
      "unter\362\377\374\302\0065http://hl7.org/fhir/Structure"
      "Definition/EpisodeOfCare\022.\n\006period\030\017 \001(\013"
      "2\036.google.fhir.stu3.proto.Period\022P\n\013part"
      "icipant\030\020 \003(\01323.google.fhir.stu3.uscore."
      "UsCoreCareteam.ParticipantB\006\360\320\207\353\004\001\022<\n\013re"
      "ason_code\030\021 \003(\0132\'.google.fhir.stu3.proto"
      ".CodeableConcept\022t\n\020reason_reference\030\022 \003"
      "(\0132!.google.fhir.stu3.proto.ReferenceB7\362"
      "\377\374\302\0061http://hl7.org/fhir/StructureDefini"
      "tion/Condition\022|\n\025managing_organization\030"
      "\023 \003(\0132!.google.fhir.stu3.proto.Reference"
      "B:\362\377\374\302\0064http://hl7.org/fhir/StructureDef"
      "inition/Organization\0220\n\004note\030\024 \003(\0132\".goo"
      "gle.fhir.stu3.proto.Annotation\032\343\005\n\013Parti"
      "cipant\022*\n\002id\030\001 \001(\0132\036.google.fhir.stu3.pr"
      "oto.String\0224\n\textension\030\002 \003(\0132!.google.f"
      "hir.stu3.proto.Extension\022=\n\022modifier_ext"
      "ension\030\003 \003(\0132!.google.fhir.stu3.proto.Ex"
      "tension\022=\n\004role\030\004 \001(\0132\'.google.fhir.stu3"
      ".proto.CodeableConceptB\006\360\320\207\353\004\001\022\316\002\n\006membe"
      "r\030\005 \001(\0132!.google.fhir.stu3.proto.Referen"
      "ceB\232\002\360\320\207\353\004\001\362\377\374\302\006\?http://hl7.org/fhir/us/"
      "core/StructureDefinition/us-core-patient"
      "\362\377\374\302\006Dhttp://hl7.org/fhir/us/core/Struct"
      "ureDefinition/us-core-practitioner\362\377\374\302\006D"
      "http://hl7.org/fhir/us/core/StructureDef"
      "inition/us-core-organization\362\377\374\302\0065http:/"
      "/hl7.org/fhir/StructureDefinition/Relate"
      "dPerson\022s\n\014on_behalf_of\030\006 \001(\0132!.google.f"
      "hir.stu3.proto.ReferenceB:\362\377\374\302\0064http://h"
      "l7.org/fhir/StructureDefinition/Organiza"
      "tion\022.\n\006period\030\007 \001(\0132\036.google.fhir.stu3."
      "proto.Period:\202\001\300\237\343\266\005\003\232\265\216\223\0060http://hl7.or"
      "g/fhir/StructureDefinition/CareTeam\262\376\344\227\006"
      "@http://hl7.org/fhir/us/core/StructureDe"
      "finition/us-core-careteam\"\304\032\n\017UsCoreCond"
      "ition\022&\n\002id\030\001 \001(\0132\032.google.fhir.stu3.pro"
      "to.Id\022*\n\004meta\030\002 \001(\0132\034.google.fhir.stu3.p"
      "roto.Meta\0223\n\016implicit_rules\030\003 \001(\0132\033.goog"
      "le.fhir.stu3.proto.Uri\0226\n\010language\030\004 \001(\013"
      "2$.google.fhir.stu3.proto.LanguageCode\022/"
      "\n\004text\030\005 \001(\0132!.google.fhir.stu3.proto.Na"
      "rrative\022<\n\tcontained\030\006 \003(\0132).google.fhir"
      ".stu3.proto.ContainedResource\0224\n\textensi"
      "on\030\007 \003(\0132!.google.fhir.stu3.proto.Extens"
      "ion\022=\n\022modifier_extension\030\010 \003(\0132!.google"
      ".fhir.stu3.proto.Extension\0226\n\nidentifier"
      "\030\t \003(\0132\".google.fhir.stu3.proto.Identifi"
      "er\022Q\n\017clinical_status\030\n \001(\01328.google.fhi"
      "r.stu3.proto.ConditionClinicalStatusCode"
      "sCode\022\\\n\023verification_status\030\013 \001(\01327.goo"
      "gle.fhir.stu3.proto.ConditionVerificatio"
      "nStatusCodeB\006\360\320\207\353\004\001\022A\n\010category\030\014 \003(\0132\'."
      "google.fhir.stu3.proto.CodeableConceptB\006"
      "\360\320\207\353\004\001\0229\n\010severity\030\r \001(\0132\'.google.fhir.s"
      "tu3.proto.CodeableConcept\022=\n\004code\030\016 \001(\0132"
      "\'.google.fhir.stu3.proto.CodeableConcept"
      "B\006\360\320\207\353\004\001\022:\n\tbody_site\030\017 \003(\0132\'.google.fhi"
      "r.stu3.proto.CodeableConcept\022\177\n\007subject\030"
      "\020 \001(\0132!.google.fhir.stu3.proto.Reference"
      "BK\360\320\207\353\004\001\362\377\374\302\006\?http://hl7.org/fhir/us/cor"
      "e/StructureDefinition/us-core-patient\022\246\001"
      "\n\007context\030\021 \001(\0132!.google.fhir.stu3.proto"
      ".ReferenceBr\362\377\374\302\0061http://hl7.org/fhir/St"
      "ructureDefinition/Encounter\362\377\374\302\0065http://"
      "hl7.org/fhir/StructureDefinition/Episode"
      "OfCare\022E\n\005onset\030\022 \001(\0132..google.fhir.stu3"
      ".uscore.UsCoreCondition.OnsetB\006\370\341\343\311\005\001\022M\n"
      "\tabatement\030\023 \001(\01322.google.fhir.stu3.usco"
      "re.UsCoreCondition.AbatementB\006\370\341\343\311\005\001\0227\n\r"
      "asserted_date\030\024 \001(\0132 .google.fhir.stu3.p"
      "roto.DateTime\022\340\001\n\010asserter\030\025 \001(\0132!.googl"
      "e.fhir.stu3.proto.ReferenceB\252\001\362\377\374\302\0064http"
      "://hl7.org/fhir/StructureDefinition/Prac"
      "titioner\362\377\374\302\006/http://hl7.org/fhir/Struct"
      "ureDefinition/Patient\362\377\374\302\0065http://hl7.or"
      "g/fhir/StructureDefinition/RelatedPerson"
      "\022=\n\005stage\030\026 \001(\0132..google.fhir.stu3.uscor"
      "e.UsCoreCondition.Stage\022C\n\010evidence\030\027 \003("
      "\01321.google.fhir.stu3.uscore.UsCoreCondit"
      "ion.Evidence\0220\n\004note\030\030 \003(\0132\".google.fhir"
      ".stu3.proto.Annotation\032\225\002\n\005Onset\0225\n\tdate"
      "_time\030\001 \001(\0132 .google.fhir.stu3.proto.Dat"
      "eTimeH\000\022*\n\003age\030\002 \001(\0132\033.google.fhir.stu3."
      "proto.AgeH\000\0220\n\006period\030\003 \001(\0132\036.google.fhi"
      "r.stu3.proto.PeriodH\000\022.\n\005range\030\004 \001(\0132\035.g"
      "oogle.fhir.stu3.proto.RangeH\000\022>\n\014string_"
      "value\030\005 \001(\0132\036.google.fhir.stu3.proto.Str"
      "ingH\000R\006stringB\007\n\005onset\032\321\002\n\tAbatement\0225\n\t"
      "date_time\030\001 \001(\0132 .google.fhir.stu3.proto"
      ".DateTimeH\000\022*\n\003age\030\002 \001(\0132\033.google.fhir.s"
      "tu3.proto.AgeH\000\0222\n\007boolean\030\003 \001(\0132\037.googl"
      "e.fhir.stu3.proto.BooleanH\000\0220\n\006period\030\004 "
      "\001(\0132\036.google.fhir.stu3.proto.PeriodH\000\022.\n"
      "\005range\030\005 \001(\0132\035.google.fhir.stu3.proto.Ra"
      "ngeH\000\022>\n\014string_value\030\006 \001(\0132\036.google.fhi"
      "r.stu3.proto.StringH\000R\006stringB\013\n\tabateme"
      "nt\032\324\003\n\005Stage\022*\n\002id\030\001 \001(\0132\036.google.fhir.s"
      "tu3.proto.String\0224\n\textension\030\002 \003(\0132!.go"
      "ogle.fhir.stu3.proto.Extension\022=\n\022modifi"
      "er_extension\030\003 \003(\0132!.google.fhir.stu3.pr"
      "oto.Extension\0228\n\007summary\030\004 \001(\0132\'.google."
      "fhir.stu3.proto.CodeableConcept\022\357\001\n\nasse"
      "ssment\030\005 \003(\0132!.google.fhir.stu3.proto.Re"
      "ferenceB\267\001\362\377\374\302\006:http://hl7.org/fhir/Stru"
      "ctureDefinition/ClinicalImpression\362\377\374\302\0068"
      "http://hl7.org/fhir/StructureDefinition/"
      "DiagnosticReport\362\377\374\302\0063http://hl7.org/fhi"
      "r/StructureDefinition/Observation\032\315\002\n\010Ev"
      "idence\022*\n\002id\030\001 \001(\0132\036.google.fhir.stu3.pr"
      "oto.String\0224\n\textension\030\002 \003(\0132!.google.f"
      "hir.stu3.proto.Extension\022=\n\022modifier_ext"
      "ension\030\003 \003(\0132!.google.fhir.stu3.proto.Ex"
      "tension\0225\n\004code\030\004 \003(\0132\'.google.fhir.stu3"
      ".proto.CodeableConcept\022i\n\006detail\030\005 \003(\0132!"
      ".google.fhir.stu3.proto.ReferenceB6\362\377\374\302\006"
      "0http://hl7.org/fhir/StructureDefinition"
      "/Resource:\204\001\300\237\343\266\005\003\232\265\216\223\0061http://hl7.org/f"
      "hir/StructureDefinition/Condition\262\376\344\227\006Ah"
      "ttp://hl7.org/fhir/us/core/StructureDefi"
      "nition/us-core-condition\"\267\021\n\014UsCoreDevic"
      "e\022&\n\002id\030\001 \001(\0132\032.google.fhir.stu3.proto.I"
      "d\022*\n\004meta\030\002 \001(\0132\034.google.fhir.stu3.proto"
      ".Meta\0223\n\016implicit_rules\030\003 \001(\0132\033.google.f"
      "hir.stu3.proto.Uri\0226\n\010language\030\004 \001(\0132$.g"
      "oogle.fhir.stu3.proto.LanguageCode\022/\n\004te"
      "xt\030\005 \001(\0132!.google.fhir.stu3.proto.Narrat"
      "ive\022<\n\tcontained\030\006 \003(\0132).google.fhir.stu"
      "3.proto.ContainedResource\0224\n\textension\030\007"
      " \003(\0132!.google.fhir.stu3.proto.Extension\022"
      "=\n\022modifier_extension\030\010 \003(\0132!.google.fhi"
      "r.stu3.proto.Extension\0226\n\nidentifier\030\t \003"
      "(\0132\".google.fhir.stu3.proto.Identifier\022>"
      "\n\003udi\030\n \001(\0132).google.fhir.stu3.uscore.Us"
      "CoreDevice.UdiB\006\360\320\207\353\004\001\022<\n\006status\030\013 \001(\0132,"
      ".google.fhir.stu3.proto.FHIRDeviceStatus"
      "Code\022=\n\004type\030\014 \001(\0132\'.google.fhir.stu3.pr"
      "oto.CodeableConceptB\006\360\320\207\353\004\001\0222\n\nlot_numbe"
      "r\030\r \001(\0132\036.google.fhir.stu3.proto.String\022"
      "4\n\014manufacturer\030\016 \001(\0132\036.google.fhir.stu3"
      ".proto.String\022:\n\020manufacture_date\030\017 \001(\0132"
      " .google.fhir.stu3.proto.DateTime\0229\n\017exp"
      "iration_date\030\020 \001(\0132 .google.fhir.stu3.pr"
      "oto.DateTime\022-\n\005model\030\021 \001(\0132\036.google.fhi"
      "r.stu3.proto.String\022/\n\007version\030\022 \001(\0132\036.g"
      "oogle.fhir.stu3.proto.String\022\177\n\007patient\030"
      "\023 \001(\0132!.google.fhir.stu3.proto.Reference"
      "BK\360\320\207\353\004\001\362\377\374\302\006\?http://hl7.org/fhir/us/cor"
      "e/StructureDefinition/us-core-patient\022l\n"
      "\005owner\030\024 \001(\0132!.google.fhir.stu3.proto.Re"
      "ferenceB:\362\377\374\302\0064http://hl7.org/fhir/Struc"
      "tureDefinition/Organization\0225\n\007contact\030\025"
      " \003(\0132$.google.fhir.stu3.proto.ContactPoi"
      "nt\022k\n\010location\030\026 \001(\0132!.google.fhir.stu3."
      "proto.ReferenceB6\362\377\374\302\0060http://hl7.org/fh"
      "ir/StructureDefinition/Location\022(\n\003url\030\027"
      " \001(\0132\033.google.fhir.stu3.proto.Uri\0220\n\004not"
      "e\030\030 \003(\0132\".google.fhir.stu3.proto.Annotat"
      "ion\0227\n\006safety\030\031 \003(\0132\'.google.fhir.stu3.p"
      "roto.CodeableConcept\032\243\004\n\003Udi\022*\n\002id\030\001 \001(\013"
      "2\036.google.fhir.stu3.proto.String\0224\n\texte"
      "nsion\030\002 \003(\0132!.google.fhir.stu3.proto.Ext"
      "ension\022=\n\022modifier_extension\030\003 \003(\0132!.goo"
      "gle.fhir.stu3.proto.Extension\0229\n\021device_"
      "identifier\030\004 \001(\0132\036.google.fhir.stu3.prot"
      "o.String\022,\n\004name\030\005 \001(\0132\036.google.fhir.stu"
      "3.proto.String\0221\n\014jurisdiction\030\006 \001(\0132\033.g"
      "oogle.fhir.stu3.proto.Uri\0225\n\rcarrier_h_r"
      "_f\030\007 \001(\0132\036.google.fhir.stu3.proto.String"
      "\022=\n\017carrier_a_i_d_c\030\010 \001(\0132$.google.fhir."
      "stu3.proto.Base64Binary\022+\n\006issuer\030\t \001(\0132"
      "\033.google.fhir.stu3.proto.Uri\022<\n\nentry_ty"
      "pe\030\n \001(\0132(.google.fhir.stu3.proto.UDIEnt"
      "ryTypeCode:~\300\237\343\266\005\003\232\265\216\223\006.http://hl7.org/f"
      "hir/StructureDefinition/Device\262\376\344\227\006>http"
      "://hl7.org/fhir/us/core/StructureDefinit"
      "ion/us-core-device\"\263\032\n\026UsCoreDiagnosticr"
      "eport\022&\n\002id\030\001 \001(\0132\032.google.fhir.stu3.pro"
      "to.Id\022*\n\004meta\030\002 \001(\0132\034.google.fhir.stu3.p"
      "roto.Meta\0223\n\016implicit_rules\030\003 \001(\0132\033.goog"
      "le.fhir.stu3.proto.Uri\0226\n\010language\030\004 \001(\013"
      "2$.google.fhir.stu3.proto.LanguageCode\022/"
      "\n\004text\030\005 \001(\0132!.google.fhir.stu3.proto.Na"
      "rrative\022<\n\tcontained\030\006 \003(\0132).google.fhir"
      ".stu3.proto.ContainedResource\0224\n\textensi"
      "on\030\007 \003(\0132!.google.fhir.stu3.proto.Extens"
      "ion\022=\n\022modifier_extension\030\010 \003(\0132!.google"
      ".fhir.stu3.proto.Extension\0226\n\nidentifier"
      "\030\t \003(\0132\".google.fhir.stu3.proto.Identifi"
      "er\022\252\003\n\010based_on\030\n \003(\0132!.google.fhir.stu3"
      ".proto.ReferenceB\364\002\362\377\374\302\0060http://hl7.org/"
      "fhir/StructureDefinition/CarePlan\362\377\374\302\006Bh"
      "ttp://hl7.org/fhir/StructureDefinition/I"
      "mmunizationRecommendation\362\377\374\302\0069http://hl"
      "7.org/fhir/StructureDefinition/Medicatio"
      "nRequest\362\377\374\302\0066http://hl7.org/fhir/Struct"
      "ureDefinition/NutritionOrder\362\377\374\302\0068http:/"
      "/hl7.org/fhir/StructureDefinition/Proced"
      "ureRequest\362\377\374\302\0067http://hl7.org/fhir/Stru"
      "ctureDefinition/ReferralRequest\022J\n\006statu"
      "s\030\013 \001(\01322.google.fhir.stu3.proto.Diagnos"
      "ticReportStatusCodeB\006\360\320\207\353\004\001\022A\n\010category\030"
      "\014 \001(\0132\'.google.fhir.stu3.proto.CodeableC"
      "onceptB\006\360\320\207\353\004\001\022=\n\004code\030\r \001(\0132\'.google.fh"
      "ir.stu3.proto.CodeableConceptB\006\360\320\207\353\004\001\022\177\n"
      "\007subject\030\016 \001(\0132!.google.fhir.stu3.proto."
      "ReferenceBK\360\320\207\353\004\001\362\377\374\302\006\?http://hl7.org/fh"
      "ir/us/core/StructureDefinition/us-core-p"
      "atient\022\246\001\n\007context\030\017 \001(\0132!.google.fhir.s"
      "tu3.proto.ReferenceBr\362\377\374\302\0061http://hl7.or"
      "g/fhir/StructureDefinition/Encounter\362\377\374\302"
      "\0065http://hl7.org/fhir/StructureDefinitio"
      "n/EpisodeOfCare\022Z\n\teffective\030\020 \001(\01329.goo"
      "gle.fhir.stu3.uscore.UsCoreDiagnosticrep"
      "ort.EffectiveB\014\370\341\343\311\005\001\360\320\207\353\004\001\0227\n\006issued\030\021 "
      "\001(\0132\037.google.fhir.stu3.proto.InstantB\006\360\320"
      "\207\353\004\001\022L\n\tperformer\030\022 \003(\01329.google.fhir.st"
      "u3.uscore.UsCoreDiagnosticreport.Perform"
      "er\022k\n\010specimen\030\023 \003(\0132!.google.fhir.stu3."
      "proto.ReferenceB6\362\377\374\302\0060http://hl7.org/fh"
      "ir/StructureDefinition/Specimen\022\203\001\n\006resu"
      "lt\030\024 \003(\0132!.google.fhir.stu3.proto.Refere"
      "nceBP\362\377\374\302\006Jhttp://hl7.org/fhir/us/core/S"
      "tructureDefinition/us-core-observationre"
      "sults\022\261\001\n\rimaging_study\030\025 \003(\0132!.google.f"
      "hir.stu3.proto.ReferenceBw\362\377\374\302\0064http://h"
      "l7.org/fhir/StructureDefinition/ImagingS"
      "tudy\362\377\374\302\0067http://hl7.org/fhir/StructureD"
      "efinition/ImagingManifest\022D\n\005image\030\026 \003(\013"
      "25.google.fhir.stu3.uscore.UsCoreDiagnos"
      "ticreport.Image\0222\n\nconclusion\030\027 \001(\0132\036.go"
      "ogle.fhir.stu3.proto.String\022@\n\017coded_dia"
      "gnosis\030\030 \003(\0132\'.google.fhir.stu3.proto.Co"
      "deableConcept\022:\n\016presented_form\030\031 \003(\0132\"."
      "google.fhir.stu3.proto.Attachment\032\201\001\n\tEf"
      "fective\0225\n\tdate_time\030\001 \001(\0132 .google.fhir"
      ".stu3.proto.DateTimeH\000\0220\n\006period\030\002 \001(\0132\036"
      ".google.fhir.stu3.proto.PeriodH\000B\013\n\teffe"
      "ctive\032\263\003\n\tPerformer\022*\n\002id\030\001 \001(\0132\036.google"
      ".fhir.stu3.proto.String\0224\n\textension\030\002 \003"
      "(\0132!.google.fhir.stu3.proto.Extension\022=\n"
      "\022modifier_extension\030\003 \003(\0132!.google.fhir."
      "stu3.proto.Extension\0225\n\004role\030\004 \001(\0132\'.goo"
      "gle.fhir.stu3.proto.CodeableConcept\022\315\001\n\005"
      "actor\030\005 \001(\0132!.google.fhir.stu3.proto.Ref"
      "erenceB\232\001\360\320\207\353\004\001\362\377\374\302\006Dhttp://hl7.org/fhir"
      "/us/core/StructureDefinition/us-core-pra"
      "ctitioner\362\377\374\302\006Dhttp://hl7.org/fhir/us/co"
      "re/StructureDefinition/us-core-organizat"
      "ion\032\305\002\n\005Image\022*\n\002id\030\001 \001(\0132\036.google.fhir."
      "stu3.proto.String\0224\n\textension\030\002 \003(\0132!.g"
      "oogle.fhir.stu3.proto.Extension\022=\n\022modif"
      "ier_extension\030\003 \003(\0132!.google.fhir.stu3.p"
      "roto.Extension\022/\n\007comment\030\004 \001(\0132\036.google"
      ".fhir.stu3.proto.String\022j\n\004link\030\005 \001(\0132!."
      "google.fhir.stu3.proto.ReferenceB9\360\320\207\353\004\001"
      "\362\377\374\302\006-http://hl7.org/fhir/StructureDefin"
      "ition/Media:\222\001\300\237\343\266\005\003\232\265\216\223\0068http://hl7.org"
      "/fhir/StructureDefinition/DiagnosticRepo"
      "rt\262\376\344\227\006Hhttp://hl7.org/fhir/us/core/Stru"
      "ctureDefinition/us-core-diagnosticreport"
      "\"\270\002\n\030ContactPointUsCoreDirect\022*\n\002id\030\001 \001("
      "\0132\036.google.fhir.stu3.proto.String\0224\n\text"
      "ension\030\002 \003(\0132!.google.fhir.stu3.proto.Ex"
      "tension\0226\n\rvalue_boolean\030\003 \001(\0132\037.google."
      "fhir.stu3.proto.Boolean:\201\001\300\237\343\266\005\002\232\265\216\223\0061ht"
      "tp://hl7.org/fhir/StructureDefinition/Ex"
      "tension\262\376\344\227\006>http://hl7.org/fhir/us/core"
      "/StructureDefinition/us-core-direct\"\250\003\n\037"
      "PatientUSCoreEthnicityExtension\022*\n\002id\030\001 "
      "\001(\0132\036.google.fhir.stu3.proto.String\0224\n\te"
      "xtension\030\002 \003(\0132!.google.fhir.stu3.proto."
      "Extension\0224\n\014omb_category\030\004 \001(\0132\036.google"
      ".fhir.stu3.proto.Coding\0220\n\010detailed\030\005 \003("
      "\0132\036.google.fhir.stu3.proto.Coding\0224\n\004tex"
      "t\030\006 \001(\0132\036.google.fhir.stu3.proto.StringB"
      "\006\360\320\207\353\004\001:\204\001\300\237\343\266\005\002\232\265\216\223\0061http://hl7.org/fhi"
      "r/StructureDefinition/Extension\262\376\344\227\006Ahtt"
      "p://hl7.org/fhir/us/core/StructureDefini"
      "tion/us-core-ethnicity\"\352\026\n\nUsCoreGoal\022&\n"
      "\002id\030\001 \001(\0132\032.google.fhir.stu3.proto.Id\022*\n"
      "\004meta\030\002 \001(\0132\034.google.fhir.stu3.proto.Met"
      "a\0223\n\016implicit_rules\030\003 \001(\0132\033.google.fhir."
      "stu3.proto.Uri\0226\n\010language\030\004 \001(\0132$.googl"
      "e.fhir.stu3.proto.LanguageCode\022/\n\004text\030\005"
      " \001(\0132!.google.fhir.stu3.proto.Narrative\022"
      "<\n\tcontained\030\006 \003(\0132).google.fhir.stu3.pr"
      "oto.ContainedResource\0224\n\textension\030\007 \003(\013"
      "2!.google.fhir.stu3.proto.Extension\022=\n\022m"
      "odifier_extension\030\010 \003(\0132!.google.fhir.st"
      "u3.proto.Extension\0226\n\nidentifier\030\t \003(\0132\""
      ".google.fhir.stu3.proto.Identifier\022>\n\006st"
      "atus\030\n \001(\0132&.google.fhir.stu3.proto.Goal"
      "StatusCodeB\006\360\320\207\353\004\001\0229\n\010category\030\013 \003(\0132\'.g"
      "oogle.fhir.stu3.proto.CodeableConcept\0229\n"
      "\010priority\030\014 \001(\0132\'.google.fhir.stu3.proto"
      ".CodeableConcept\022D\n\013description\030\r \001(\0132\'."
      "google.fhir.stu3.proto.CodeableConceptB\006"
      "\360\320\207\353\004\001\022\177\n\007subject\030\016 \001(\0132!.google.fhir.st"
      "u3.proto.ReferenceBK\360\320\207\353\004\001\362\377\374\302\006\?http://h"
      "l7.org/fhir/us/core/StructureDefinition/"
      "us-core-patient\022@\n\005start\030\017 \001(\0132).google."
      "fhir.stu3.uscore.UsCoreGoal.StartB\006\370\341\343\311\005"
      "\001\022:\n\006target\030\020 \001(\0132*.google.fhir.stu3.usc"
      "ore.UsCoreGoal.Target\0221\n\013status_date\030\021 \001"
      "(\0132\034.google.fhir.stu3.proto.Date\0225\n\rstat"
      "us_reason\030\022 \001(\0132\036.google.fhir.stu3.proto"
      ".String\022\344\001\n\014expressed_by\030\023 \001(\0132!.google."
      "fhir.stu3.proto.ReferenceB\252\001\362\377\374\302\006/http:/"
      "/hl7.org/fhir/StructureDefinition/Patien"
      "t\362\377\374\302\0064http://hl7.org/fhir/StructureDefi"
      "nition/Practitioner\362\377\374\302\0065http://hl7.org/"
      "fhir/StructureDefinition/RelatedPerson\022\236"
      "\003\n\taddresses\030\024 \003(\0132!.google.fhir.stu3.pr"
      "oto.ReferenceB\347\002\362\377\374\302\0061http://hl7.org/fhi"
      "r/StructureDefinition/Condition\362\377\374\302\0063htt"
      "p://hl7.org/fhir/StructureDefinition/Obs"
      "ervation\362\377\374\302\006;http://hl7.org/fhir/Struct"
      "ureDefinition/MedicationStatement\362\377\374\302\0066h"
      "ttp://hl7.org/fhir/StructureDefinition/N"
      "utritionOrder\362\377\374\302\0068http://hl7.org/fhir/S"
      "tructureDefinition/ProcedureRequest\362\377\374\302\006"
      "6http://hl7.org/fhir/StructureDefinition"
      "/RiskAssessment\0220\n\004note\030\025 \003(\0132\".google.f"
      "hir.stu3.proto.Annotation\022=\n\014outcome_cod"
      "e\030\026 \003(\0132\'.google.fhir.stu3.proto.Codeabl"
      "eConcept\022w\n\021outcome_reference\030\027 \003(\0132!.go"
      "ogle.fhir.stu3.proto.ReferenceB9\362\377\374\302\0063ht"
      "tp://hl7.org/fhir/StructureDefinition/Ob"
      "servation\032\203\001\n\005Start\022,\n\004date\030\001 \001(\0132\034.goog"
      "le.fhir.stu3.proto.DateH\000\022C\n\020codeable_co"
      "ncept\030\002 \001(\0132\'.google.fhir.stu3.proto.Cod"
      "eableConceptH\000B\007\n\005start\032\245\005\n\006Target\022*\n\002id"
      "\030\001 \001(\0132\036.google.fhir.stu3.proto.String\0224"
      "\n\textension\030\002 \003(\0132!.google.fhir.stu3.pro"
      "to.Extension\022=\n\022modifier_extension\030\003 \003(\013"
      "2!.google.fhir.stu3.proto.Extension\0228\n\007m"
      "easure\030\004 \001(\0132\'.google.fhir.stu3.proto.Co"
      "deableConcept\022I\n\006detail\030\005 \001(\01321.google.f"
      "hir.stu3.uscore.UsCoreGoal.Target.Detail"
      "B\006\370\341\343\311\005\001\022C\n\003due\030\006 \001(\0132..google.fhir.stu3"
      ".uscore.UsCoreGoal.Target.DueB\006\370\341\343\311\005\001\032\275\001"
      "\n\006Detail\0224\n\010quantity\030\001 \001(\0132 .google.fhir"
      ".stu3.proto.QuantityH\000\022.\n\005range\030\002 \001(\0132\035."
      "google.fhir.stu3.proto.RangeH\000\022C\n\020codeab"
      "le_concept\030\003 \001(\0132\'.google.fhir.stu3.prot"
      "o.CodeableConceptH\000B\010\n\006detail\032p\n\003Due\022,\n\004"
      "date\030\001 \001(\0132\034.google.fhir.stu3.proto.Date"
      "H\000\0224\n\010duration\030\002 \001(\0132 .google.fhir.stu3."
      "proto.DurationH\000B\005\n\003due:z\300\237\343\266\005\003\232\265\216\223\006,htt"
      "p://hl7.org/fhir/StructureDefinition/Goa"
      "l\262\376\344\227\006<http://hl7.org/fhir/us/core/Struc"
      "tureDefinition/us-core-goal\"\315\036\n\022UsCoreIm"
      "munization\022&\n\002id\030\001 \001(\0132\032.google.fhir.stu"
      "3.proto.Id\022*\n\004meta\030\002 \001(\0132\034.google.fhir.s"
      "tu3.proto.Meta\0223\n\016implicit_rules\030\003 \001(\0132\033"
      ".google.fhir.stu3.proto.Uri\0226\n\010language\030"
      "\004 \001(\0132$.google.fhir.stu3.proto.LanguageC"
      "ode\022/\n\004text\030\005 \001(\0132!.google.fhir.stu3.pro"
      "to.Narrative\022<\n\tcontained\030\006 \003(\0132).google"
      ".fhir.stu3.proto.ContainedResource\0224\n\tex"
      "tension\030\007 \003(\0132!.google.fhir.stu3.proto.E"
      "xtension\022=\n\022modifier_extension\030\010 \003(\0132!.g"
      "oogle.fhir.stu3.proto.Extension\0226\n\nident"
      "ifier\030\t \003(\0132\".google.fhir.stu3.proto.Ide"
      "ntifier\022K\n\006status\030\n \001(\01323.google.fhir.st"
      "u3.proto.ImmunizationStatusCodesCodeB\006\360\320"
      "\207\353\004\001\022:\n\tnot_given\030\013 \001(\0132\037.google.fhir.st"
      "u3.proto.BooleanB\006\360\320\207\353\004\001\022E\n\014vaccine_code"
      "\030\014 \001(\0132\'.google.fhir.stu3.proto.Codeable"
      "ConceptB\006\360\320\207\353\004\001\022\177\n\007patient\030\r \001(\0132!.googl"
      "e.fhir.stu3.proto.ReferenceBK\360\320\207\353\004\001\362\377\374\302\006"
      "\?http://hl7.org/fhir/us/core/StructureDe"
      "finition/us-core-patient\022m\n\tencounter\030\016 "
      "\001(\0132!.google.fhir.stu3.proto.ReferenceB7"
      "\362\377\374\302\0061http://hl7.org/fhir/StructureDefin"
      "ition/Encounter\0226\n\004date\030\017 \001(\0132 .google.f"
      "hir.stu3.proto.DateTimeB\006\360\320\207\353\004\001\022\?\n\016prima"
      "ry_source\030\020 \001(\0132\037.google.fhir.stu3.proto"
      ".BooleanB\006\360\320\207\353\004\001\022>\n\rreport_origin\030\021 \001(\0132"
      "\'.google.fhir.stu3.proto.CodeableConcept"
      "\022k\n\010location\030\022 \001(\0132!.google.fhir.stu3.pr"
      "oto.ReferenceB6\362\377\374\302\0060http://hl7.org/fhir"
      "/StructureDefinition/Location\022s\n\014manufac"
      "turer\030\023 \001(\0132!.google.fhir.stu3.proto.Ref"
      "erenceB:\362\377\374\302\0064http://hl7.org/fhir/Struct"
      "ureDefinition/Organization\0222\n\nlot_number"
      "\030\024 \001(\0132\036.google.fhir.stu3.proto.String\0225"
      "\n\017expiration_date\030\025 \001(\0132\034.google.fhir.st"
      "u3.proto.Date\0225\n\004site\030\026 \001(\0132\'.google.fhi"
      "r.stu3.proto.CodeableConcept\0226\n\005route\030\027 "
      "\001(\0132\'.google.fhir.stu3.proto.CodeableCon"
      "cept\022=\n\rdose_quantity\030\030 \001(\0132&.google.fhi"
      "r.stu3.proto.SimpleQuantity\022N\n\014practitio"
      "ner\030\031 \003(\01328.google.fhir.stu3.uscore.UsCo"
      "reImmunization.Practitioner\0220\n\004note\030\032 \003("
      "\0132\".google.fhir.stu3.proto.Annotation\022L\n"
      "\013explanation\030\033 \001(\01327.google.fhir.stu3.us"
      "core.UsCoreImmunization.Explanation\022F\n\010r"
      "eaction\030\034 \003(\01324.google.fhir.stu3.uscore."
      "UsCoreImmunization.Reaction\022]\n\024vaccinati"
      "on_protocol\030\035 \003(\0132\?.google.fhir.stu3.usc"
      "ore.UsCoreImmunization.VaccinationProtoc"
      "ol\032\332\002\n\014Practitioner\022*\n\002id\030\001 \001(\0132\036.google"
      ".fhir.stu3.proto.String\0224\n\textension\030\002 \003"
      "(\0132!.google.fhir.stu3.proto.Extension\022=\n"
      "\022modifier_extension\030\003 \003(\0132!.google.fhir."
      "stu3.proto.Extension\0225\n\004role\030\004 \001(\0132\'.goo"
      "gle.fhir.stu3.proto.CodeableConcept\022r\n\005a"
      "ctor\030\005 \001(\0132!.google.fhir.stu3.proto.Refe"
      "renceB@\360\320\207\353\004\001\362\377\374\302\0064http://hl7.org/fhir/S"
      "tructureDefinition/Practitioner\032\252\002\n\013Expl"
      "anation\022*\n\002id\030\001 \001(\0132\036.google.fhir.stu3.p"
      "roto.String\0224\n\textension\030\002 \003(\0132!.google."
      "fhir.stu3.proto.Extension\022=\n\022modifier_ex"
      "tension\030\003 \003(\0132!.google.fhir.stu3.proto.E"
      "xtension\0227\n\006reason\030\004 \003(\0132\'.google.fhir.s"
      "tu3.proto.CodeableConcept\022A\n\020reason_not_"
      "given\030\005 \003(\0132\'.google.fhir.stu3.proto.Cod"
      "eableConcept\032\374\002\n\010Reaction\022*\n\002id\030\001 \001(\0132\036."
      "google.fhir.stu3.proto.String\0224\n\textensi"
      "on\030\002 \003(\0132!.google.fhir.stu3.proto.Extens"
      "ion\022=\n\022modifier_extension\030\003 \003(\0132!.google"
      ".fhir.stu3.proto.Extension\022.\n\004date\030\004 \001(\013"
      "2 .google.fhir.stu3.proto.DateTime\022l\n\006de"
      "tail\030\005 \001(\0132!.google.fhir.stu3.proto.Refe"
      "renceB9\362\377\374\302\0063http://hl7.org/fhir/Structu"
      "reDefinition/Observation\0221\n\010reported\030\006 \001"
      "(\0132\037.google.fhir.stu3.proto.Boolean\032\330\005\n\023"
      "VaccinationProtocol\022*\n\002id\030\001 \001(\0132\036.google"
      ".fhir.stu3.proto.String\0224\n\textension\030\002 \003"
      "(\0132!.google.fhir.stu3.proto.Extension\022=\n"
      "\022modifier_extension\030\003 \003(\0132!.google.fhir."
      "stu3.proto.Extension\022:\n\rdose_sequence\030\004 "
      "\001(\0132#.google.fhir.stu3.proto.PositiveInt"
      "\0223\n\013description\030\005 \001(\0132\036.google.fhir.stu3"
      ".proto.String\022p\n\tauthority\030\006 \001(\0132!.googl"
      "e.fhir.stu3.proto.ReferenceB:\362\377\374\302\0064http:"
      "//hl7.org/fhir/StructureDefinition/Organ"
      "ization\022.\n\006series\030\007 \001(\0132\036.google.fhir.st"
      "u3.proto.String\0229\n\014series_doses\030\010 \001(\0132#."
      "google.fhir.stu3.proto.PositiveInt\022G\n\016ta"
      "rget_disease\030\t \003(\0132\'.google.fhir.stu3.pr"
      "oto.CodeableConceptB\006\360\320\207\353\004\001\022D\n\013dose_stat"
      "us\030\n \001(\0132\'.google.fhir.stu3.proto.Codeab"
      "leConceptB\006\360\320\207\353\004\001\022C\n\022dose_status_reason\030"
      "\013 \001(\0132\'.google.fhir.stu3.proto.CodeableC"
      "oncept:\212\001\300\237\343\266\005\003\232\265\216\223\0064http://hl7.org/fhir"
      "/StructureDefinition/Immunization\262\376\344\227\006Dh"
      "ttp://hl7.org/fhir/us/core/StructureDefi"
      "nition/us-core-immunization\"\240\017\n\016UsCoreLo"
      "cation\022&\n\002id\030\001 \001(\0132\032.google.fhir.stu3.pr"
      "oto.Id\022*\n\004meta\030\002 \001(\0132\034.google.fhir.stu3."
      "proto.Meta\0223\n\016implicit_rules\030\003 \001(\0132\033.goo"
      "gle.fhir.stu3.proto.Uri\0226\n\010language\030\004 \001("
      "\0132$.google.fhir.stu3.proto.LanguageCode\022"
      "/\n\004text\030\005 \001(\0132!.google.fhir.stu3.proto.N"
      "arrative\022<\n\tcontained\030\006 \003(\0132).google.fhi"
      "r.stu3.proto.ContainedResource\0224\n\textens"
      "ion\030\007 \003(\0132!.google.fhir.stu3.proto.Exten"
      "sion\022=\n\022modifier_extension\030\010 \003(\0132!.googl"
      "e.fhir.stu3.proto.Extension\0226\n\nidentifie"
      "r\030\t \003(\0132\".google.fhir.stu3.proto.Identif"
      "ier\022:\n\006status\030\n \001(\0132*.google.fhir.stu3.p"
      "roto.LocationStatusCode\022:\n\022operational_s"
      "tatus\030\013 \001(\0132\036.google.fhir.stu3.proto.Cod"
      "ing\0224\n\004name\030\014 \001(\0132\036.google.fhir.stu3.pro"
      "to.StringB\006\360\320\207\353\004\001\022-\n\005alias\030\r \003(\0132\036.googl"
      "e.fhir.stu3.proto.String\0223\n\013description\030"
      "\016 \001(\0132\036.google.fhir.stu3.proto.String\0226\n"
      "\004mode\030\017 \001(\0132(.google.fhir.stu3.proto.Loc"
      "ationModeCode\0225\n\004type\030\020 \001(\0132\'.google.fhi"
      "r.stu3.proto.CodeableConcept\0225\n\007telecom\030"
      "\021 \003(\0132$.google.fhir.stu3.proto.ContactPo"
      "int\0220\n\007address\030\022 \001(\0132\037.google.fhir.stu3."
      "proto.Address\022>\n\rphysical_type\030\023 \001(\0132\'.g"
      "oogle.fhir.stu3.proto.CodeableConcept\022B\n"
      "\010position\030\024 \001(\01320.google.fhir.stu3.uscor"
      "e.UsCoreLocation.Position\022\214\001\n\025managing_o"
      "rganization\030\025 \001(\0132!.google.fhir.stu3.pro"
      "to.ReferenceBJ\362\377\374\302\006Dhttp://hl7.org/fhir/"
      "us/core/StructureDefinition/us-core-orga"
      "nization\022j\n\007part_of\030\026 \001(\0132!.google.fhir."
      "stu3.proto.ReferenceB6\362\377\374\302\0060http://hl7.o"
      "rg/fhir/StructureDefinition/Location\022k\n\010"
      "endpoint\030\027 \003(\0132!.google.fhir.stu3.proto."
      "ReferenceB6\362\377\374\302\0060http://hl7.org/fhir/Str"
      "uctureDefinition/Endpoint\032\325\002\n\010Position\022*"
      "\n\002id\030\001 \001(\0132\036.google.fhir.stu3.proto.Stri"
      "ng\0224\n\textension\030\002 \003(\0132!.google.fhir.stu3"
      ".proto.Extension\022=\n\022modifier_extension\030\003"
      " \003(\0132!.google.fhir.stu3.proto.Extension\022"
      ":\n\tlongitude\030\004 \001(\0132\037.google.fhir.stu3.pr"
      "oto.DecimalB\006\360\320\207\353\004\001\0229\n\010latitude\030\005 \001(\0132\037."
      "google.fhir.stu3.proto.DecimalB\006\360\320\207\353\004\001\0221"
      "\n\010altitude\030\006 \001(\0132\037.google.fhir.stu3.prot"
      "o.Decimal:\202\001\300\237\343\266\005\003\232\265\216\223\0060http://hl7.org/f"
      "hir/StructureDefinition/Location\262\376\344\227\006@ht"
      "tp://hl7.org/fhir/us/core/StructureDefin"
      "ition/us-core-location\"\264\027\n\020UsCoreMedicat"
      "ion\022&\n\002id\030\001 \001(\0132\032.google.fhir.stu3.proto"
      ".Id\022*\n\004meta\030\002 \001(\0132\034.google.fhir.stu3.pro"
      "to.Meta\0223\n\016implicit_rules\030\003 \001(\0132\033.google"
      ".fhir.stu3.proto.Uri\0226\n\010language\030\004 \001(\0132$"
      ".google.fhir.stu3.proto.LanguageCode\022/\n\004"
      "text\030\005 \001(\0132!.google.fhir.stu3.proto.Narr"
      "ative\022<\n\tcontained\030\006 \003(\0132).google.fhir.s"
      "tu3.proto.ContainedResource\0224\n\textension"
      "\030\007 \003(\0132!.google.fhir.stu3.proto.Extensio"
      "n\022=\n\022modifier_extension\030\010 \003(\0132!.google.f"
      "hir.stu3.proto.Extension\022=\n\004code\030\t \001(\0132\'"
      ".google.fhir.stu3.proto.CodeableConceptB"
      "\006\360\320\207\353\004\001\022<\n\006status\030\n \001(\0132,.google.fhir.st"
      "u3.proto.MedicationStatusCode\0221\n\010is_bran"
      "d\030\013 \001(\0132\037.google.fhir.stu3.proto.Boolean"
      "\022<\n\023is_over_the_counter\030\014 \001(\0132\037.google.f"
      "hir.stu3.proto.Boolean\022s\n\014manufacturer\030\r"
      " \001(\0132!.google.fhir.stu3.proto.ReferenceB"
      ":\362\377\374\302\0064http://hl7.org/fhir/StructureDefi"
      "nition/Organization\0225\n\004form\030\016 \001(\0132\'.goog"
      "le.fhir.stu3.proto.CodeableConcept\022H\n\nin"
      "gredient\030\017 \003(\01324.google.fhir.stu3.uscore"
      ".UsCoreMedication.Ingredient\022Q\n\rpackage_"
      "value\030\020 \001(\01321.google.fhir.stu3.uscore.Us"
      "CoreMedication.PackageR\007package\0221\n\005image"
      "\030\021 \003(\0132\".google.fhir.stu3.proto.Attachme"
      "nt\032\347\004\n\nIngredient\022*\n\002id\030\001 \001(\0132\036.google.f"
      "hir.stu3.proto.String\0224\n\textension\030\002 \003(\013"
      "2!.google.fhir.stu3.proto.Extension\022=\n\022m"
      "odifier_extension\030\003 \003(\0132!.google.fhir.st"
      "u3.proto.Extension\022U\n\004item\030\004 \001(\01329.googl"
      "e.fhir.stu3.uscore.UsCoreMedication.Ingr"
      "edient.ItemB\014\370\341\343\311\005\001\360\320\207\353\004\001\0222\n\tis_active\030\005"
      " \001(\0132\037.google.fhir.stu3.proto.Boolean\022-\n"
      "\006amount\030\006 \001(\0132\035.google.fhir.stu3.proto.R"
      "atio\032\375\001\n\004Item\022C\n\020codeable_concept\030\001 \001(\0132"
      "\'.google.fhir.stu3.proto.CodeableConcept"
      "H\000\022\247\001\n\treference\030\002 \001(\0132!.google.fhir.stu"
      "3.proto.ReferenceBo\362\377\374\302\0061http://hl7.org/"
      "fhir/StructureDefinition/Substance\362\377\374\302\0062"
      "http://hl7.org/fhir/StructureDefinition/"
      "MedicationH\000B\006\n\004item\032\235\t\n\007Package\022*\n\002id\030\001"
      " \001(\0132\036.google.fhir.stu3.proto.String\0224\n\t"
      "extension\030\002 \003(\0132!.google.fhir.stu3.proto"
      ".Extension\022=\n\022modifier_extension\030\003 \003(\0132!"
      ".google.fhir.stu3.proto.Extension\022:\n\tcon"
      "tainer\030\004 \001(\0132\'.google.fhir.stu3.proto.Co"
      "deableConcept\022J\n\007content\030\005 \003(\01329.google."
      "fhir.stu3.uscore.UsCoreMedication.Packag"
      "e.Content\022F\n\005batch\030\006 \003(\01327.google.fhir.s"
      "tu3.uscore.UsCoreMedication.Package.Batc"
      "h\032\206\004\n\007Content\022*\n\002id\030\001 \001(\0132\036.google.fhir."
      "stu3.proto.String\0224\n\textension\030\002 \003(\0132!.g"
      "oogle.fhir.stu3.proto.Extension\022=\n\022modif"
      "ier_extension\030\003 \003(\0132!.google.fhir.stu3.p"
      "roto.Extension\022Z\n\004item\030\004 \001(\0132>.google.fh"
      "ir.stu3.uscore.UsCoreMedication.Package."
      "Content.ItemB\014\370\341\343\311\005\001\360\320\207\353\004\001\0226\n\006amount\030\005 \001"
      "(\0132&.google.fhir.stu3.proto.SimpleQuanti"
      "ty\032\305\001\n\004Item\022C\n\020codeable_concept\030\001 \001(\0132\'."
      "google.fhir.stu3.proto.CodeableConceptH\000"
      "\022p\n\treference\030\002 \001(\0132!.google.fhir.stu3.p"
      "roto.ReferenceB8\362\377\374\302\0062http://hl7.org/fhi"
      "r/StructureDefinition/MedicationH\000B\006\n\004it"
      "em\032\227\002\n\005Batch\022*\n\002id\030\001 \001(\0132\036.google.fhir.s"
      "tu3.proto.String\0224\n\textension\030\002 \003(\0132!.go"
      "ogle.fhir.stu3.proto.Extension\022=\n\022modifi"
      "er_extension\030\003 \003(\0132!.google.fhir.stu3.pr"
      "oto.Extension\0222\n\nlot_number\030\004 \001(\0132\036.goog"
      "le.fhir.stu3.proto.String\0229\n\017expiration_"
      "date\030\005 \001(\0132 .google.fhir.stu3.proto.Date"
      "Time:\206\001\300\237\343\266\005\003\232\265\216\223\0062http://hl7.org/fhir/S"
      "tructureDefinition/Medication\262\376\344\227\006Bhttp:"
      "//hl7.org/fhir/us/core/StructureDefiniti"
      "on/us-core-medication\"\224$\n\027UsCoreMedicati"
      "onrequest\022&\n\002id\030\001 \001(\0132\032.google.fhir.stu3"
      ".proto.Id\022*\n\004meta\030\002 \001(\0132\034.google.fhir.st"
      "u3.proto.Meta\0223\n\016implicit_rules\030\003 \001(\0132\033."
      "google.fhir.stu3.proto.Uri\0226\n\010language\030\004"
      " \001(\0132$.google.fhir.stu3.proto.LanguageCo"
      "de\022/\n\004text\030\005 \001(\0132!.google.fhir.stu3.prot"
      "o.Narrative\022<\n\tcontained\030\006 \003(\0132).google."
      "fhir.stu3.proto.ContainedResource\0224\n\text"
      "ension\030\007 \003(\0132!.google.fhir.stu3.proto.Ex"
      "tension\022=\n\022modifier_extension\030\010 \003(\0132!.go"
      "ogle.fhir.stu3.proto.Extension\0226\n\nidenti"
      "fier\030\t \003(\0132\".google.fhir.stu3.proto.Iden"
      "tifier\022\263\001\n\ndefinition\030\n \003(\0132!.google.fhi"
      "r.stu3.proto.ReferenceB|\362\377\374\302\006:http://hl7"
      ".org/fhir/StructureDefinition/ActivityDe"
      "finition\362\377\374\302\0066http://hl7.org/fhir/Struct"
      "ureDefinition/PlanDefinition\022\246\002\n\010based_o"
      "n\030\013 \003(\0132!.google.fhir.stu3.proto.Referen"
      "ceB\360\001\362\377\374\302\0060http://hl7.org/fhir/Structure"
      "Definition/CarePlan\362\377\374\302\0069http://hl7.org/"
      "fhir/StructureDefinition/MedicationReque"
      "st\362\377\374\302\0068http://hl7.org/fhir/StructureDef"
      "inition/ProcedureRequest\362\377\374\302\0067http://hl7"
      ".org/fhir/StructureDefinition/ReferralRe"
      "quest\022<\n\020group_identifier\030\014 \001(\0132\".google"
      ".fhir.stu3.proto.Identifier\022K\n\006status\030\r "
      "\001(\01323.google.fhir.stu3.proto.MedicationR"
      "equestStatusCodeB\006\360\320\207\353\004\001\022K\n\006intent\030\016 \001(\013"
      "23.google.fhir.stu3.proto.MedicationRequ"
      "estIntentCodeB\006\360\320\207\353\004\001\0229\n\010category\030\017 \001(\0132"
      "\'.google.fhir.stu3.proto.CodeableConcept"
      "\022G\n\010priority\030\020 \001(\01325.google.fhir.stu3.pr"
      "oto.MedicationRequestPriorityCode\022]\n\nmed"
      "ication\030\021 \001(\0132;.google.fhir.stu3.uscore."
      "UsCoreMedicationrequest.MedicationB\014\370\341\343\311"
      "\005\001\360\320\207\353\004\001\022\177\n\007subject\030\022 \001(\0132!.google.fhir."
      "stu3.proto.ReferenceBK\360\320\207\353\004\001\362\377\374\302\006\?http:/"
      "/hl7.org/fhir/us/core/StructureDefinitio"
      "n/us-core-patient\022\246\001\n\007context\030\023 \001(\0132!.go"
      "ogle.fhir.stu3.proto.ReferenceBr\362\377\374\302\0061ht"
      "tp://hl7.org/fhir/StructureDefinition/En"
      "counter\362\377\374\302\0065http://hl7.org/fhir/Structu"
      "reDefinition/EpisodeOfCare\022y\n\026supporting"
      "_information\030\024 \003(\0132!.google.fhir.stu3.pr"
      "oto.ReferenceB6\362\377\374\302\0060http://hl7.org/fhir"
      "/StructureDefinition/Resource\022=\n\013authore"
      "d_on\030\025 \001(\0132 .google.fhir.stu3.proto.Date"
      "TimeB\006\360\320\207\353\004\001\022U\n\trequester\030\026 \001(\0132:.google"
      ".fhir.stu3.uscore.UsCoreMedicationreques"
      "t.RequesterB\006\360\320\207\353\004\001\022o\n\010recorder\030\027 \001(\0132!."
      "google.fhir.stu3.proto.ReferenceB:\362\377\374\302\0064"
      "http://hl7.org/fhir/StructureDefinition/"
      "Practitioner\022<\n\013reason_code\030\030 \003(\0132\'.goog"
      "le.fhir.stu3.proto.CodeableConcept\022\255\001\n\020r"
      "eason_reference\030\031 \003(\0132!.google.fhir.stu3"
      ".proto.ReferenceBp\362\377\374\302\0061http://hl7.org/f"
      "hir/StructureDefinition/Condition\362\377\374\302\0063h"
      "ttp://hl7.org/fhir/StructureDefinition/O"
      "bservation\0220\n\004note\030\032 \003(\0132\".google.fhir.s"
      "tu3.proto.Annotation\022:\n\022dosage_instructi"
      "on\030\033 \003(\0132\036.google.fhir.stu3.proto.Dosage"
      "\022Z\n\020dispense_request\030\034 \001(\0132@.google.fhir"
      ".stu3.uscore.UsCoreMedicationrequest.Dis"
      "penseRequest\022S\n\014substitution\030\035 \001(\0132=.goo"
      "gle.fhir.stu3.uscore.UsCoreMedicationreq"
      "uest.Substitution\022~\n\022prior_prescription\030"
      "\036 \001(\0132!.google.fhir.stu3.proto.Reference"
      "B\?\362\377\374\302\0069http://hl7.org/fhir/StructureDef"
      "inition/MedicationRequest\022v\n\016detected_is"
      "sue\030\037 \003(\0132!.google.fhir.stu3.proto.Refer"
      "enceB;\362\377\374\302\0065http://hl7.org/fhir/Structur"
      "eDefinition/DetectedIssue\022r\n\revent_histo"
      "ry\030  \003(\0132!.google.fhir.stu3.proto.Refere"
      "nceB8\362\377\374\302\0062http://hl7.org/fhir/Structure"
      "Definition/Provenance\032\321\001\n\nMedication\022C\n\020"
      "codeable_concept\030\001 \001(\0132\'.google.fhir.stu"
      "3.proto.CodeableConceptH\000\022p\n\treference\030\002"
      " \001(\0132!.google.fhir.stu3.proto.ReferenceB"
      "8\362\377\374\302\0062http://hl7.org/fhir/StructureDefi"
      "nition/MedicationH\000B\014\n\nmedication\032\246\003\n\tRe"
      "quester\022*\n\002id\030\001 \001(\0132\036.google.fhir.stu3.p"
      "roto.String\0224\n\textension\030\002 \003(\0132!.google."
      "fhir.stu3.proto.Extension\022=\n\022modifier_ex"
      "tension\030\003 \003(\0132!.google.fhir.stu3.proto.E"
      "xtension\022\202\001\n\005agent\030\004 \001(\0132!.google.fhir.s"
      "tu3.proto.ReferenceBP\360\320\207\353\004\001\362\377\374\302\006Dhttp://"
      "hl7.org/fhir/us/core/StructureDefinition"
      "/us-core-practitioner\022s\n\014on_behalf_of\030\005 "
      "\001(\0132!.google.fhir.stu3.proto.ReferenceB:"
      "\362\377\374\302\0064http://hl7.org/fhir/StructureDefin"
      "ition/Organization\032\243\004\n\017DispenseRequest\022*"
      "\n\002id\030\001 \001(\0132\036.google.fhir.stu3.proto.Stri"
      "ng\0224\n\textension\030\002 \003(\0132!.google.fhir.stu3"
      ".proto.Extension\022=\n\022modifier_extension\030\003"
      " \003(\0132!.google.fhir.stu3.proto.Extension\022"
      "7\n\017validity_period\030\004 \001(\0132\036.google.fhir.s"
      "tu3.proto.Period\022F\n\031number_of_repeats_al"
      "lowed\030\005 \001(\0132#.google.fhir.stu3.proto.Pos"
      "itiveInt\0228\n\010quantity\030\006 \001(\0132&.google.fhir"
      ".stu3.proto.SimpleQuantity\022B\n\030expected_s"
      "upply_duration\030\007 \001(\0132 .google.fhir.stu3."
      "proto.Duration\022p\n\tperformer\030\010 \001(\0132!.goog"
      "le.fhir.stu3.proto.ReferenceB:\362\377\374\302\0064http"
      "://hl7.org/fhir/StructureDefinition/Orga"
      "nization\032\242\002\n\014Substitution\022*\n\002id\030\001 \001(\0132\036."
      "google.fhir.stu3.proto.String\0224\n\textensi"
      "on\030\002 \003(\0132!.google.fhir.stu3.proto.Extens"
      "ion\022=\n\022modifier_extension\030\003 \003(\0132!.google"
      ".fhir.stu3.proto.Extension\0228\n\007allowed\030\004 "
      "\001(\0132\037.google.fhir.stu3.proto.BooleanB\006\360\320"
      "\207\353\004\001\0227\n\006reason\030\005 \001(\0132\'.google.fhir.stu3."
      "proto.CodeableConcept:\224\001\300\237\343\266\005\003\232\265\216\223\0069http"
      "://hl7.org/fhir/StructureDefinition/Medi"
      "cationRequest\262\376\344\227\006Ihttp://hl7.org/fhir/u"
      "s/core/StructureDefinition/us-core-medic"
      "ationrequest\"\252\031\n\031UsCoreMedicationstateme"
      "nt\022&\n\002id\030\001 \001(\0132\032.google.fhir.stu3.proto."
      "Id\022*\n\004meta\030\002 \001(\0132\034.google.fhir.stu3.prot"
      "o.Meta\0223\n\016implicit_rules\030\003 \001(\0132\033.google."
      "fhir.stu3.proto.Uri\0226\n\010language\030\004 \001(\0132$."
      "google.fhir.stu3.proto.LanguageCode\022/\n\004t"
      "ext\030\005 \001(\0132!.google.fhir.stu3.proto.Narra"
      "tive\022<\n\tcontained\030\006 \003(\0132).google.fhir.st"
      "u3.proto.ContainedResource\0224\n\textension\030"
      "\007 \003(\0132!.google.fhir.stu3.proto.Extension"
      "\022=\n\022modifier_extension\030\010 \003(\0132!.google.fh"
      "ir.stu3.proto.Extension\0226\n\nidentifier\030\t "
      "\003(\0132\".google.fhir.stu3.proto.Identifier\022"
      "\246\002\n\010based_on\030\n \003(\0132!.google.fhir.stu3.pr"
      "oto.ReferenceB\360\001\362\377\374\302\0069http://hl7.org/fhi"
      "r/StructureDefinition/MedicationRequest\362"
      "\377\374\302\0060http://hl7.org/fhir/StructureDefini"
      "tion/CarePlan\362\377\374\302\0068http://hl7.org/fhir/S"
      "tructureDefinition/ProcedureRequest\362\377\374\302\006"
      "7http://hl7.org/fhir/StructureDefinition"
      "/ReferralRequest\022\354\002\n\007part_of\030\013 \003(\0132!.goo"
      "gle.fhir.stu3.proto.ReferenceB\267\002\362\377\374\302\006@ht"
      "tp://hl7.org/fhir/StructureDefinition/Me"
      "dicationAdministration\362\377\374\302\006:http://hl7.o"
      "rg/fhir/StructureDefinition/MedicationDi"
      "spense\362\377\374\302\006;http://hl7.org/fhir/Structur"
      "eDefinition/MedicationStatement\362\377\374\302\0061htt"
      "p://hl7.org/fhir/StructureDefinition/Pro"
      "cedure\362\377\374\302\0063http://hl7.org/fhir/Structur"
      "eDefinition/Observation\022\246\001\n\007context\030\014 \001("
      "\0132!.google.fhir.stu3.proto.ReferenceBr\362\377"
      "\374\302\0061http://hl7.org/fhir/StructureDefinit"
      "ion/Encounter\362\377\374\302\0065http://hl7.org/fhir/S"
      "tructureDefinition/EpisodeOfCare\022M\n\006stat"
      "us\030\r \001(\01325.google.fhir.stu3.proto.Medica"
      "tionStatementStatusCodeB\006\360\320\207\353\004\001\0229\n\010categ"
      "ory\030\016 \001(\0132\'.google.fhir.stu3.proto.Codea"
      "bleConcept\022_\n\nmedication\030\017 \001(\0132=.google."
      "fhir.stu3.uscore.UsCoreMedicationstateme"
      "nt.MedicationB\014\370\341\343\311\005\001\360\320\207\353\004\001\022W\n\teffective"
      "\030\020 \001(\0132<.google.fhir.stu3.uscore.UsCoreM"
      "edicationstatement.EffectiveB\006\370\341\343\311\005\001\022\?\n\r"
      "date_asserted\030\021 \001(\0132 .google.fhir.stu3.p"
      "roto.DateTimeB\006\360\320\207\353\004\001\022\244\002\n\022information_so"
      "urce\030\022 \001(\0132!.google.fhir.stu3.proto.Refe"
      "renceB\344\001\362\377\374\302\006/http://hl7.org/fhir/Struct"
      "ureDefinition/Patient\362\377\374\302\0064http://hl7.or"
      "g/fhir/StructureDefinition/Practitioner\362"
      "\377\374\302\0065http://hl7.org/fhir/StructureDefini"
      "tion/RelatedPerson\362\377\374\302\0064http://hl7.org/f"
      "hir/StructureDefinition/Organization\022\177\n\007"
      "subject\030\023 \001(\0132!.google.fhir.stu3.proto.R"
      "eferenceBK\360\320\207\353\004\001\362\377\374\302\006\?http://hl7.org/fhi"
      "r/us/core/StructureDefinition/us-core-pa"
      "tient\022o\n\014derived_from\030\024 \003(\0132!.google.fhi"
      "r.stu3.proto.ReferenceB6\362\377\374\302\0060http://hl7"
      ".org/fhir/StructureDefinition/Resource\022K"
      "\n\005taken\030\025 \001(\01324.google.fhir.stu3.proto.M"
      "edicationStatementTakenCodeB\006\360\320\207\353\004\001\022A\n\020r"
      "eason_not_taken\030\026 \003(\0132\'.google.fhir.stu3"
      ".proto.CodeableConcept\022<\n\013reason_code\030\027 "
      "\003(\0132\'.google.fhir.stu3.proto.CodeableCon"
      "cept\022\255\001\n\020reason_reference\030\030 \003(\0132!.google"
      ".fhir.stu3.proto.ReferenceBp\362\377\374\302\0061http:/"
      "/hl7.org/fhir/StructureDefinition/Condit"
      "ion\362\377\374\302\0063http://hl7.org/fhir/StructureDe"
      "finition/Observation\0220\n\004note\030\031 \003(\0132\".goo"
      "gle.fhir.stu3.proto.Annotation\022.\n\006dosage"
      "\030\032 \003(\0132\036.google.fhir.stu3.proto.Dosage\032\321"
      "\001\n\nMedication\022C\n\020codeable_concept\030\001 \001(\0132"
      "\'.google.fhir.stu3.proto.CodeableConcept"
      "H\000\022p\n\treference\030\002 \001(\0132!.google.fhir.stu3"
      ".proto.ReferenceB8\362\377\374\302\0062http://hl7.org/f"
      "hir/StructureDefinition/MedicationH\000B\014\n\n"
      "medication\032\201\001\n\tEffective\0225\n\tdate_time\030\001 "
      "\001(\0132 .google.fhir.stu3.proto.DateTimeH\000\022"
      "0\n\006period\030\002 \001(\0132\036.google.fhir.stu3.proto"
      ".PeriodH\000B\013\n\teffective:\230\001\300\237\343\266\005\003\232\265\216\223\006;htt"
      "p://hl7.org/fhir/StructureDefinition/Med"
      "icationStatement\262\376\344\227\006Khttp://hl7.org/fhi"
      "r/us/core/StructureDefinition/us-core-me"
      "dicationstatement\"\270-\n\030UsCoreObservationr"
      "esults\022&\n\002id\030\001 \001(\0132\032.google.fhir.stu3.pr"
      "oto.Id\022*\n\004meta\030\002 \001(\0132\034.google.fhir.stu3."
      "proto.Meta\0223\n\016implicit_rules\030\003 \001(\0132\033.goo"
      "gle.fhir.stu3.proto.Uri\0226\n\010language\030\004 \001("
      "\0132$.google.fhir.stu3.proto.LanguageCode\022"
      "/\n\004text\030\005 \001(\0132!.google.fhir.stu3.proto.N"
      "arrative\022<\n\tcontained\030\006 \003(\0132).google.fhi"
      "r.stu3.proto.ContainedResource\0224\n\textens"
      "ion\030\007 \003(\0132!.google.fhir.stu3.proto.Exten"
      "sion\022=\n\022modifier_extension\030\010 \003(\0132!.googl"
      "e.fhir.stu3.proto.Extension\0226\n\nidentifie"
      "r\030\t \003(\0132\".google.fhir.stu3.proto.Identif"
      "ier\022\345\003\n\010based_on\030\n \003(\0132!.google.fhir.stu"
      "3.proto.ReferenceB\257\003\362\377\374\302\0060http://hl7.org"
      "/fhir/StructureDefinition/CarePlan\362\377\374\302\0065"
      "http://hl7.org/fhir/StructureDefinition/"
      "DeviceRequest\362\377\374\302\006Bhttp://hl7.org/fhir/S"
      "tructureDefinition/ImmunizationRecommend"
      "ation\362\377\374\302\0069http://hl7.org/fhir/Structure"
      "Definition/MedicationRequest\362\377\374\302\0066http:/"
      "/hl7.org/fhir/StructureDefinition/Nutrit"
      "ionOrder\362\377\374\302\0068http://hl7.org/fhir/Struct"
      "ureDefinition/ProcedureRequest\362\377\374\302\0067http"
      "://hl7.org/fhir/StructureDefinition/Refe"
      "rralRequest\022E\n\006status\030\013 \001(\0132-.google.fhi"
      "r.stu3.proto.ObservationStatusCodeB\006\360\320\207\353"
      "\004\001\022A\n\010category\030\014 \003(\0132\'.google.fhir.stu3."
      "proto.CodeableConceptB\006\360\320\207\353\004\001\022=\n\004code\030\r "
      "\001(\0132\'.google.fhir.stu3.proto.CodeableCon"
      "ceptB\006\360\320\207\353\004\001\022\177\n\007subject\030\016 \001(\0132!.google.f"
      "hir.stu3.proto.ReferenceBK\360\320\207\353\004\001\362\377\374\302\006\?ht"
      "tp://hl7.org/fhir/us/core/StructureDefin"
      "ition/us-core-patient\022\246\001\n\007context\030\017 \001(\0132"
      "!.google.fhir.stu3.proto.ReferenceBr\362\377\374\302"
      "\0061http://hl7.org/fhir/StructureDefinitio"
      "n/Encounter\362\377\374\302\0065http://hl7.org/fhir/Str"
      "uctureDefinition/EpisodeOfCare\022V\n\teffect"
      "ive\030\020 \001(\0132;.google.fhir.stu3.uscore.UsCo"
      "reObservationresults.EffectiveB\006\370\341\343\311\005\001\022/"
      "\n\006issued\030\021 \001(\0132\037.google.fhir.stu3.proto."
      "Instant\022\233\002\n\tperformer\030\022 \003(\0132!.google.fhi"
      "r.stu3.proto.ReferenceB\344\001\362\377\374\302\0064http://hl"
      "7.org/fhir/StructureDefinition/Practitio"
      "ner\362\377\374\302\0064http://hl7.org/fhir/StructureDe"
      "finition/Organization\362\377\374\302\006/http://hl7.or"
      "g/fhir/StructureDefinition/Patient\362\377\374\302\0065"
      "http://hl7.org/fhir/StructureDefinition/"
      "RelatedPerson\022N\n\005value\030\023 \001(\01327.google.fh"
      "ir.stu3.uscore.UsCoreObservationresults."
      "ValueB\006\370\341\343\311\005\001\022C\n\022data_absent_reason\030\024 \001("
      "\0132\'.google.fhir.stu3.proto.CodeableConce"
      "pt\022\?\n\016interpretation\030\025 \001(\0132\'.google.fhir"
      ".stu3.proto.CodeableConcept\022/\n\007comment\030\026"
      " \001(\0132\036.google.fhir.stu3.proto.String\022:\n\t"
      "body_site\030\027 \001(\0132\'.google.fhir.stu3.proto"
      ".CodeableConcept\0227\n\006method\030\030 \001(\0132\'.googl"
      "e.fhir.stu3.proto.CodeableConcept\022k\n\010spe"
      "cimen\030\031 \001(\0132!.google.fhir.stu3.proto.Ref"
      "erenceB6\362\377\374\302\0060http://hl7.org/fhir/Struct"
      "ureDefinition/Specimen\022\241\001\n\006device\030\032 \001(\0132"
      "!.google.fhir.stu3.proto.ReferenceBn\362\377\374\302"
      "\006.http://hl7.org/fhir/StructureDefinitio"
      "n/Device\362\377\374\302\0064http://hl7.org/fhir/Struct"
      "ureDefinition/DeviceMetric\022Y\n\017reference_"
      "range\030\033 \003(\0132@.google.fhir.stu3.uscore.Us"
      "CoreObservationresults.ReferenceRange\022J\n"
      "\007related\030\034 \003(\01329.google.fhir.stu3.uscore"
      ".UsCoreObservationresults.Related\022N\n\tcom"
      "ponent\030\035 \003(\0132;.google.fhir.stu3.uscore.U"
      "sCoreObservationresults.Component\032\201\001\n\tEf"
      "fective\0225\n\tdate_time\030\001 \001(\0132 .google.fhir"
      ".stu3.proto.DateTimeH\000\0220\n\006period\030\002 \001(\0132\036"
      ".google.fhir.stu3.proto.PeriodH\000B\013\n\teffe"
      "ctive\032\355\004\n\005Value\0224\n\010quantity\030\001 \001(\0132 .goog"
      "le.fhir.stu3.proto.QuantityH\000\022C\n\020codeabl"
      "e_concept\030\002 \001(\0132\'.google.fhir.stu3.proto"
      ".CodeableConceptH\000\022>\n\014string_value\030\003 \001(\013"
      "2\036.google.fhir.stu3.proto.StringH\000R\006stri"
      "ng\0222\n\007boolean\030\004 \001(\0132\037.google.fhir.stu3.p"
      "roto.BooleanH\000\022.\n\005range\030\005 \001(\0132\035.google.f"
      "hir.stu3.proto.RangeH\000\022.\n\005ratio\030\006 \001(\0132\035."
      "google.fhir.stu3.proto.RatioH\000\022;\n\014sample"
      "d_data\030\007 \001(\0132#.google.fhir.stu3.proto.Sa"
      "mpledDataH\000\0228\n\nattachment\030\010 \001(\0132\".google"
      ".fhir.stu3.proto.AttachmentH\000\022,\n\004time\030\t "
      "\001(\0132\034.google.fhir.stu3.proto.TimeH\000\0225\n\td"
      "ate_time\030\n \001(\0132 .google.fhir.stu3.proto."
      "DateTimeH\000\0220\n\006period\030\013 \001(\0132\036.google.fhir"
      ".stu3.proto.PeriodH\000B\007\n\005value\032\352\003\n\016Refere"
      "nceRange\022*\n\002id\030\001 \001(\0132\036.google.fhir.stu3."
      "proto.String\0224\n\textension\030\002 \003(\0132!.google"
      ".fhir.stu3.proto.Extension\022=\n\022modifier_e"
      "xtension\030\003 \003(\0132!.google.fhir.stu3.proto."
      "Extension\0223\n\003low\030\004 \001(\0132&.google.fhir.stu"
      "3.proto.SimpleQuantity\0224\n\004high\030\005 \001(\0132&.g"
      "oogle.fhir.stu3.proto.SimpleQuantity\0225\n\004"
      "type\030\006 \001(\0132\'.google.fhir.stu3.proto.Code"
      "ableConcept\022;\n\napplies_to\030\007 \003(\0132\'.google"
      ".fhir.stu3.proto.CodeableConcept\022*\n\003age\030"
      "\010 \001(\0132\035.google.fhir.stu3.proto.Range\022,\n\004"
      "text\030\t \001(\0132\036.google.fhir.stu3.proto.Stri"
      "ng\032\340\003\n\007Related\022*\n\002id\030\001 \001(\0132\036.google.fhir"
      ".stu3.proto.String\0224\n\textension\030\002 \003(\0132!."
      "google.fhir.stu3.proto.Extension\022=\n\022modi"
      "fier_extension\030\003 \003(\0132!.google.fhir.stu3."
      "proto.Extension\022E\n\004type\030\004 \001(\01327.google.f"
      "hir.stu3.proto.ObservationRelationshipTy"
      "peCode\022\354\001\n\006target\030\005 \001(\0132!.google.fhir.st"
      "u3.proto.ReferenceB\270\001\360\320\207\353\004\001\362\377\374\302\0063http://"
      "hl7.org/fhir/StructureDefinition/Observa"
      "tion\362\377\374\302\006=http://hl7.org/fhir/StructureD"
      "efinition/QuestionnaireResponse\362\377\374\302\0060htt"
      "p://hl7.org/fhir/StructureDefinition/Seq"
      "uence\032\342\010\n\tComponent\022*\n\002id\030\001 \001(\0132\036.google"
      ".fhir.stu3.proto.String\0224\n\textension\030\002 \003"
      "(\0132!.google.fhir.stu3.proto.Extension\022=\n"
      "\022modifier_extension\030\003 \003(\0132!.google.fhir."
      "stu3.proto.Extension\022=\n\004code\030\004 \001(\0132\'.goo"
      "gle.fhir.stu3.proto.CodeableConceptB\006\360\320\207"
      "\353\004\001\022X\n\005value\030\005 \001(\0132A.google.fhir.stu3.us"
      "core.UsCoreObservationresults.Component."
      "ValueB\006\370\341\343\311\005\001\022C\n\022data_absent_reason\030\006 \001("
      "\0132\'.google.fhir.stu3.proto.CodeableConce"
      "pt\022\?\n\016interpretation\030\007 \001(\0132\'.google.fhir"
      ".stu3.proto.CodeableConcept\022Y\n\017reference"
      "_range\030\010 \003(\0132@.google.fhir.stu3.uscore.U"
      "sCoreObservationresults.ReferenceRange\032\271"
      "\004\n\005Value\0224\n\010quantity\030\001 \001(\0132 .google.fhir"
      ".stu3.proto.QuantityH\000\022C\n\020codeable_conce"
      "pt\030\002 \001(\0132\'.google.fhir.stu3.proto.Codeab"
      "leConceptH\000\022>\n\014string_value\030\003 \001(\0132\036.goog"
      "le.fhir.stu3.proto.StringH\000R\006string\022.\n\005r"
      "ange\030\004 \001(\0132\035.google.fhir.stu3.proto.Rang"
      "eH\000\022.\n\005ratio\030\005 \001(\0132\035.google.fhir.stu3.pr"
      "oto.RatioH\000\022;\n\014sampled_data\030\006 \001(\0132#.goog"
      "le.fhir.stu3.proto.SampledDataH\000\0228\n\natta"
      "chment\030\007 \001(\0132\".google.fhir.stu3.proto.At"
      "tachmentH\000\022,\n\004time\030\010 \001(\0132\034.google.fhir.s"
      "tu3.proto.TimeH\000\0225\n\tdate_time\030\t \001(\0132 .go"
      "ogle.fhir.stu3.proto.DateTimeH\000\0220\n\006perio"
      "d\030\n \001(\0132\036.google.fhir.stu3.proto.PeriodH"
      "\000B\007\n\005value:\217\001\300\237\343\266\005\003\232\265\216\223\0063http://hl7.org/"
      "fhir/StructureDefinition/Observation\262\376\344\227"
      "\006Jhttp://hl7.org/fhir/us/core/StructureD"
      "efinition/us-core-observationresults\"\370\014\n"
      "\022UsCoreOrganization\022&\n\002id\030\001 \001(\0132\032.google"
      ".fhir.stu3.proto.Id\022*\n\004meta\030\002 \001(\0132\034.goog"
      "le.fhir.stu3.proto.Meta\0223\n\016implicit_rule"
      "s\030\003 \001(\0132\033.google.fhir.stu3.proto.Uri\0226\n\010"
      "language\030\004 \001(\0132$.google.fhir.stu3.proto."
      "LanguageCode\022/\n\004text\030\005 \001(\0132!.google.fhir"
      ".stu3.proto.Narrative\022<\n\tcontained\030\006 \003(\013"
      "2).google.fhir.stu3.proto.ContainedResou"
      "rce\0224\n\textension\030\007 \003(\0132!.google.fhir.stu"
      "3.proto.Extension\022=\n\022modifier_extension\030"
      "\010 \003(\0132!.google.fhir.stu3.proto.Extension"
      "\022>\n\nidentifier\030\t \003(\0132\".google.fhir.stu3."
      "proto.IdentifierB\006\360\320\207\353\004\001\0227\n\006active\030\n \001(\013"
      "2\037.google.fhir.stu3.proto.BooleanB\006\360\320\207\353\004"
      "\001\0225\n\004type\030\013 \003(\0132\'.google.fhir.stu3.proto"
      ".CodeableConcept\0224\n\004name\030\014 \001(\0132\036.google."
      "fhir.stu3.proto.StringB\006\360\320\207\353\004\001\022-\n\005alias\030"
      "\r \003(\0132\036.google.fhir.stu3.proto.String\022=\n"
      "\007telecom\030\016 \003(\0132$.google.fhir.stu3.proto."
      "ContactPointB\006\360\320\207\353\004\001\0228\n\007address\030\017 \003(\0132\037."
      "google.fhir.stu3.proto.AddressB\006\360\320\207\353\004\001\022n"
      "\n\007part_of\030\020 \001(\0132!.google.fhir.stu3.proto"
      ".ReferenceB:\362\377\374\302\0064http://hl7.org/fhir/St"
      "ructureDefinition/Organization\022D\n\007contac"
      "t\030\021 \003(\01323.google.fhir.stu3.uscore.UsCore"
      "Organization.Contact\022k\n\010endpoint\030\022 \003(\0132!"
      ".google.fhir.stu3.proto.ReferenceB6\362\377\374\302\006"
      "0http://hl7.org/fhir/StructureDefinition"
      "/Endpoint\032\376\002\n\007Contact\022*\n\002id\030\001 \001(\0132\036.goog"
      "le.fhir.stu3.proto.String\0224\n\textension\030\002"
      " \003(\0132!.google.fhir.stu3.proto.Extension\022"
      "=\n\022modifier_extension\030\003 \003(\0132!.google.fhi"
      "r.stu3.proto.Extension\0228\n\007purpose\030\004 \001(\0132"
      "\'.google.fhir.stu3.proto.CodeableConcept"
      "\022/\n\004name\030\005 \001(\0132!.google.fhir.stu3.proto."
      "HumanName\0225\n\007telecom\030\006 \003(\0132$.google.fhir"
      ".stu3.proto.ContactPoint\0220\n\007address\030\007 \001("
      "\0132\037.google.fhir.stu3.proto.Address:\212\001\300\237\343"
      "\266\005\003\232\265\216\223\0064http://hl7.org/fhir/StructureDe"
      "finition/Organization\262\376\344\227\006Dhttp://hl7.or"
      "g/fhir/us/core/StructureDefinition/us-co"
      "re-organization\"\271\035\n\rUsCorePatient\022&\n\002id\030"
      "\001 \001(\0132\032.google.fhir.stu3.proto.Id\022*\n\004met"
      "a\030\002 \001(\0132\034.google.fhir.stu3.proto.Meta\0223\n"
      "\016implicit_rules\030\003 \001(\0132\033.google.fhir.stu3"
      ".proto.Uri\0226\n\010language\030\004 \001(\0132$.google.fh"
      "ir.stu3.proto.LanguageCode\022/\n\004text\030\005 \001(\013"
      "2!.google.fhir.stu3.proto.Narrative\022<\n\tc"
      "ontained\030\006 \003(\0132).google.fhir.stu3.proto."
      "ContainedResource\0224\n\textension\030\007 \003(\0132!.g"
      "oogle.fhir.stu3.proto.Extension\022=\n\022modif"
      "ier_extension\030\010 \003(\0132!.google.fhir.stu3.p"
      "roto.Extension\022>\n\nidentifier\030\t \003(\0132\".goo"
      "gle.fhir.stu3.proto.IdentifierB\006\360\320\207\353\004\001\022/"
      "\n\006active\030\n \001(\0132\037.google.fhir.stu3.proto."
      "Boolean\0227\n\004name\030\013 \003(\0132!.google.fhir.stu3"
      ".proto.HumanNameB\006\360\320\207\353\004\001\0225\n\007telecom\030\014 \003("
      "\0132$.google.fhir.stu3.proto.ContactPoint\022"
      "H\n\006gender\030\r \001(\01320.google.fhir.stu3.proto"
      ".AdministrativeGenderCodeB\006\360\320\207\353\004\001\0220\n\nbir"
      "th_date\030\016 \001(\0132\034.google.fhir.stu3.proto.D"
      "ate\022I\n\010deceased\030\017 \001(\0132/.google.fhir.stu3"
      ".uscore.UsCorePatient.DeceasedB\006\370\341\343\311\005\001\0220"
      "\n\007address\030\020 \003(\0132\037.google.fhir.stu3.proto"
      ".Address\022\?\n\016marital_status\030\021 \001(\0132\'.googl"
      "e.fhir.stu3.proto.CodeableConcept\022T\n\016mul"
      "tiple_birth\030\022 \001(\01324.google.fhir.stu3.usc"
      "ore.UsCorePatient.MultipleBirthB\006\370\341\343\311\005\001\022"
      "1\n\005photo\030\023 \003(\0132\".google.fhir.stu3.proto."
      "Attachment\022\?\n\007contact\030\024 \003(\0132..google.fhi"
      "r.stu3.uscore.UsCorePatient.Contact\022K\n\rc"
      "ommunication\030\026 \003(\01324.google.fhir.stu3.us"
      "core.UsCorePatient.Communication\022\265\001\n\024gen"
      "eral_practitioner\030\027 \003(\0132!.google.fhir.st"
      "u3.proto.ReferenceBt\362\377\374\302\0064http://hl7.org"
      "/fhir/StructureDefinition/Organization\362\377"
      "\374\302\0064http://hl7.org/fhir/StructureDefinit"
      "ion/Practitioner\022|\n\025managing_organizatio"
      "n\030\030 \001(\0132!.google.fhir.stu3.proto.Referen"
      "ceB:\362\377\374\302\0064http://hl7.org/fhir/StructureD"
      "efinition/Organization\0229\n\004link\030\031 \003(\0132+.g"
      "oogle.fhir.stu3.uscore.UsCorePatient.Lin"
      "k\022\205\001\n\004race\030\032 \001(\01323.google.fhir.stu3.usco"
      "re.PatientUSCoreRaceExtensionBB\252\374\217\223\006<htt"
      "p://hl7.org/fhir/us/core/StructureDefini"
      "tion/us-core-race\022\224\001\n\tethnicity\030\033 \001(\01328."
      "google.fhir.stu3.uscore.PatientUSCoreEth"
      "nicityExtensionBG\252\374\217\223\006Ahttp://hl7.org/fh"
      "ir/us/core/StructureDefinition/us-core-e"
      "thnicity\022\205\001\n\010birthsex\030\034 \001(\0132+.google.fhi"
      "r.stu3.uscore.UsCoreBirthSexCodeBF\252\374\217\223\006@"
      "http://hl7.org/fhir/us/core/StructureDef"
      "inition/us-core-birthsex\032\201\001\n\010Deceased\0222\n"
      "\007boolean\030\001 \001(\0132\037.google.fhir.stu3.proto."
      "BooleanH\000\0225\n\tdate_time\030\002 \001(\0132 .google.fh"
      "ir.stu3.proto.DateTimeH\000B\n\n\010deceased\032\211\001\n"
      "\rMultipleBirth\0222\n\007boolean\030\001 \001(\0132\037.google"
      ".fhir.stu3.proto.BooleanH\000\0222\n\007integer\030\002 "
      "\001(\0132\037.google.fhir.stu3.proto.IntegerH\000B\020"
      "\n\016multiple_birth\032\352\004\n\007Contact\022*\n\002id\030\001 \001(\013"
      "2\036.google.fhir.stu3.proto.String\0224\n\texte"
      "nsion\030\002 \003(\0132!.google.fhir.stu3.proto.Ext"
      "ension\022=\n\022modifier_extension\030\003 \003(\0132!.goo"
      "gle.fhir.stu3.proto.Extension\022=\n\014relatio"
      "nship\030\004 \003(\0132\'.google.fhir.stu3.proto.Cod"
      "eableConcept\022/\n\004name\030\005 \001(\0132!.google.fhir"
      ".stu3.proto.HumanName\0225\n\007telecom\030\006 \003(\0132$"
      ".google.fhir.stu3.proto.ContactPoint\0220\n\007"
      "address\030\007 \001(\0132\037.google.fhir.stu3.proto.A"
      "ddress\022@\n\006gender\030\010 \001(\01320.google.fhir.stu"
      "3.proto.AdministrativeGenderCode\022s\n\014orga"
      "nization\030\t \001(\0132!.google.fhir.stu3.proto."
      "ReferenceB:\362\377\374\302\0064http://hl7.org/fhir/Str"
      "uctureDefinition/Organization\022.\n\006period\030"
      "\n \001(\0132\036.google.fhir.stu3.proto.Period\032\247\002"
      "\n\rCommunication\022*\n\002id\030\001 \001(\0132\036.google.fhi"
      "r.stu3.proto.String\0224\n\textension\030\002 \003(\0132!"
      ".google.fhir.stu3.proto.Extension\022=\n\022mod"
      "ifier_extension\030\003 \003(\0132!.google.fhir.stu3"
      ".proto.Extension\022A\n\010language\030\004 \001(\0132\'.goo"
      "gle.fhir.stu3.proto.CodeableConceptB\006\360\320\207"
      "\353\004\001\0222\n\tpreferred\030\005 \001(\0132\037.google.fhir.stu"
      "3.proto.Boolean\032\216\003\n\004Link\022*\n\002id\030\001 \001(\0132\036.g"
      "oogle.fhir.stu3.proto.String\0224\n\textensio"
      "n\030\002 \003(\0132!.google.fhir.stu3.proto.Extensi"
      "on\022=\n\022modifier_extension\030\003 \003(\0132!.google."
      "fhir.stu3.proto.Extension\022\250\001\n\005other\030\004 \001("
      "\0132!.google.fhir.stu3.proto.ReferenceBv\360\320"
      "\207\353\004\001\362\377\374\302\006/http://hl7.org/fhir/StructureD"
      "efinition/Patient\362\377\374\302\0065http://hl7.org/fh"
      "ir/StructureDefinition/RelatedPerson\022:\n\004"
      "type\030\005 \001(\0132$.google.fhir.stu3.proto.Link"
      "TypeCodeB\006\360\320\207\353\004\001:\200\001\300\237\343\266\005\003\232\265\216\223\006/http://hl"
      "7.org/fhir/StructureDefinition/Patient\262\376"
      "\344\227\006\?http://hl7.org/fhir/us/core/Structur"
      "eDefinition/us-core-patient\"\333\014\n\022UsCorePr"
      "actitioner\022&\n\002id\030\001 \001(\0132\032.google.fhir.stu"
      "3.proto.Id\022*\n\004meta\030\002 \001(\0132\034.google.fhir.s"
      "tu3.proto.Meta\0223\n\016implicit_rules\030\003 \001(\0132\033"
      ".google.fhir.stu3.proto.Uri\0226\n\010language\030"
      "\004 \001(\0132$.google.fhir.stu3.proto.LanguageC"
      "ode\022/\n\004text\030\005 \001(\0132!.google.fhir.stu3.pro"
      "to.Narrative\022<\n\tcontained\030\006 \003(\0132).google"
      ".fhir.stu3.proto.ContainedResource\0224\n\tex"
      "tension\030\007 \003(\0132!.google.fhir.stu3.proto.E"
      "xtension\022=\n\022modifier_extension\030\010 \003(\0132!.g"
      "oogle.fhir.stu3.proto.Extension\022>\n\nident"
      "ifier\030\t \003(\0132\".google.fhir.stu3.proto.Ide"
      "ntifierB\006\360\320\207\353\004\001\022/\n\006active\030\n \001(\0132\037.google"
      ".fhir.stu3.proto.Boolean\0227\n\004name\030\013 \001(\0132!"
      ".google.fhir.stu3.proto.HumanNameB\006\360\320\207\353\004"
      "\001\0225\n\007telecom\030\014 \003(\0132$.google.fhir.stu3.pr"
      "oto.ContactPoint\0220\n\007address\030\r \003(\0132\037.goog"
      "le.fhir.stu3.proto.Address\022@\n\006gender\030\016 \001"
      "(\01320.google.fhir.stu3.proto.Administrati"
      "veGenderCode\0220\n\nbirth_date\030\017 \001(\0132\034.googl"
      "e.fhir.stu3.proto.Date\0221\n\005photo\030\020 \003(\0132\"."
      "google.fhir.stu3.proto.Attachment\022P\n\rqua"
      "lification\030\021 \003(\01329.google.fhir.stu3.usco"
      "re.UsCorePractitioner.Qualification\022>\n\rc"
      "ommunication\030\022 \003(\0132\'.google.fhir.stu3.pr"
      "oto.CodeableConcept\032\306\003\n\rQualification\022*\n"
      "\002id\030\001 \001(\0132\036.google.fhir.stu3.proto.Strin"
      "g\0224\n\textension\030\002 \003(\0132!.google.fhir.stu3."
      "proto.Extension\022=\n\022modifier_extension\030\003 "
      "\003(\0132!.google.fhir.stu3.proto.Extension\0226"
      "\n\nidentifier\030\004 \003(\0132\".google.fhir.stu3.pr"
      "oto.Identifier\022=\n\004code\030\005 \001(\0132\'.google.fh"
      "ir.stu3.proto.CodeableConceptB\006\360\320\207\353\004\001\022.\n"
      "\006period\030\006 \001(\0132\036.google.fhir.stu3.proto.P"
      "eriod\022m\n\006issuer\030\007 \001(\0132!.google.fhir.stu3"
      ".proto.ReferenceB:\362\377\374\302\0064http://hl7.org/f"
      "hir/StructureDefinition/Organization:\212\001\300"
      "\237\343\266\005\003\232\265\216\223\0064http://hl7.org/fhir/Structure"
      "Definition/Practitioner\262\376\344\227\006Dhttp://hl7."
      "org/fhir/us/core/StructureDefinition/us-"
      "core-practitioner\"\236#\n\017UsCoreProcedure\022&\n"
      "\002id\030\001 \001(\0132\032.google.fhir.stu3.proto.Id\022*\n"
      "\004meta\030\002 \001(\0132\034.google.fhir.stu3.proto.Met"
      "a\0223\n\016implicit_rules\030\003 \001(\0132\033.google.fhir."
      "stu3.proto.Uri\0226\n\010language\030\004 \001(\0132$.googl"
      "e.fhir.stu3.proto.LanguageCode\022/\n\004text\030\005"
      " \001(\0132!.google.fhir.stu3.proto.Narrative\022"
      "<\n\tcontained\030\006 \003(\0132).google.fhir.stu3.pr"
      "oto.ContainedResource\0224\n\textension\030\007 \003(\013"
      "2!.google.fhir.stu3.proto.Extension\022=\n\022m"
      "odifier_extension\030\010 \003(\0132!.google.fhir.st"
      "u3.proto.Extension\0226\n\nidentifier\030\t \003(\0132\""
      ".google.fhir.stu3.proto.Identifier\022\363\001\n\nd"
      "efinition\030\n \003(\0132!.google.fhir.stu3.proto"
      ".ReferenceB\273\001\362\377\374\302\0066http://hl7.org/fhir/S"
      "tructureDefinition/PlanDefinition\362\377\374\302\006:h"
      "ttp://hl7.org/fhir/StructureDefinition/A"
      "ctivityDefinition\362\377\374\302\0069http://hl7.org/fh"
      "ir/StructureDefinition/HealthcareService"
      "\022\347\001\n\010based_on\030\013 \003(\0132!.google.fhir.stu3.p"
      "roto.ReferenceB\261\001\362\377\374\302\0060http://hl7.org/fh"
      "ir/StructureDefinition/CarePlan\362\377\374\302\0068htt"
      "p://hl7.org/fhir/StructureDefinition/Pro"
      "cedureRequest\362\377\374\302\0067http://hl7.org/fhir/S"
      "tructureDefinition/ReferralRequest\022\353\001\n\007p"
      "art_of\030\014 \003(\0132!.google.fhir.stu3.proto.Re"
      "ferenceB\266\001\362\377\374\302\0061http://hl7.org/fhir/Stru"
      "ctureDefinition/Procedure\362\377\374\302\0063http://hl"
      "7.org/fhir/StructureDefinition/Observati"
      "on\362\377\374\302\006@http://hl7.org/fhir/StructureDef"
      "inition/MedicationAdministration\022\?\n\006stat"
      "us\030\r \001(\0132\'.google.fhir.stu3.proto.EventS"
      "tatusCodeB\006\360\320\207\353\004\001\0221\n\010not_done\030\016 \001(\0132\037.go"
      "ogle.fhir.stu3.proto.Boolean\022@\n\017not_done"
      "_reason\030\017 \001(\0132\'.google.fhir.stu3.proto.C"
      "odeableConcept\0229\n\010category\030\020 \001(\0132\'.googl"
      "e.fhir.stu3.proto.CodeableConcept\022=\n\004cod"
      "e\030\021 \001(\0132\'.google.fhir.stu3.proto.Codeabl"
      "eConceptB\006\360\320\207\353\004\001\022\177\n\007subject\030\022 \001(\0132!.goog"
      "le.fhir.stu3.proto.ReferenceBK\360\320\207\353\004\001\362\377\374\302"
      "\006\?http://hl7.org/fhir/us/core/StructureD"
      "efinition/us-core-patient\022\246\001\n\007context\030\023 "
      "\001(\0132!.google.fhir.stu3.proto.ReferenceBr"
      "\362\377\374\302\0061http://hl7.org/fhir/StructureDefin"
      "ition/Encounter\362\377\374\302\0065http://hl7.org/fhir"
      "/StructureDefinition/EpisodeOfCare\022S\n\tpe"
      "rformed\030\024 \001(\01322.google.fhir.stu3.uscore."
      "UsCoreProcedure.PerformedB\014\370\341\343\311\005\001\360\320\207\353\004\001\022"
      "E\n\tperformer\030\025 \003(\01322.google.fhir.stu3.us"
      "core.UsCoreProcedure.Performer\022k\n\010locati"
      "on\030\026 \001(\0132!.google.fhir.stu3.proto.Refere"
      "nceB6\362\377\374\302\0060http://hl7.org/fhir/Structure"
      "Definition/Location\022<\n\013reason_code\030\027 \003(\013"
      "2\'.google.fhir.stu3.proto.CodeableConcep"
      "t\022\255\001\n\020reason_reference\030\030 \003(\0132!.google.fh"
      "ir.stu3.proto.ReferenceBp\362\377\374\302\0061http://hl"
      "7.org/fhir/StructureDefinition/Condition"
      "\362\377\374\302\0063http://hl7.org/fhir/StructureDefin"
      "ition/Observation\022:\n\tbody_site\030\031 \003(\0132\'.g"
      "oogle.fhir.stu3.proto.CodeableConcept\0228\n"
      "\007outcome\030\032 \001(\0132\'.google.fhir.stu3.proto."
      "CodeableConcept\022q\n\006report\030\033 \003(\0132!.google"
      ".fhir.stu3.proto.ReferenceB>\362\377\374\302\0068http:/"
      "/hl7.org/fhir/StructureDefinition/Diagno"
      "sticReport\022=\n\014complication\030\034 \003(\0132\'.googl"
      "e.fhir.stu3.proto.CodeableConcept\022w\n\023com"
      "plication_detail\030\035 \003(\0132!.google.fhir.stu"
      "3.proto.ReferenceB7\362\377\374\302\0061http://hl7.org/"
      "fhir/StructureDefinition/Condition\022:\n\tfo"
      "llow_up\030\036 \003(\0132\'.google.fhir.stu3.proto.C"
      "odeableConcept\0220\n\004note\030\037 \003(\0132\".google.fh"
      "ir.stu3.proto.Annotation\022J\n\014focal_device"
      "\030  \003(\01324.google.fhir.stu3.uscore.UsCoreP"
      "rocedure.FocalDevice\022\337\001\n\016used_reference\030"
      "! \003(\0132!.google.fhir.stu3.proto.Reference"
      "B\243\001\362\377\374\302\006.http://hl7.org/fhir/StructureDe"
      "finition/Device\362\377\374\302\0062http://hl7.org/fhir"
      "/StructureDefinition/Medication\362\377\374\302\0061htt"
      "p://hl7.org/fhir/StructureDefinition/Sub"
      "stance\022:\n\tused_code\030\" \003(\0132\'.google.fhir."
      "stu3.proto.CodeableConcept\032\201\001\n\tPerformed"
      "\0225\n\tdate_time\030\001 \001(\0132 .google.fhir.stu3.p"
      "roto.DateTimeH\000\0220\n\006period\030\002 \001(\0132\036.google"
      ".fhir.stu3.proto.PeriodH\000B\013\n\tperformed\032\254"
      "\005\n\tPerformer\022*\n\002id\030\001 \001(\0132\036.google.fhir.s"
      "tu3.proto.String\0224\n\textension\030\002 \003(\0132!.go"
      "ogle.fhir.stu3.proto.Extension\022=\n\022modifi"
      "er_extension\030\003 \003(\0132!.google.fhir.stu3.pr"
      "oto.Extension\0225\n\004role\030\004 \001(\0132\'.google.fhi"
      "r.stu3.proto.CodeableConcept\022\321\002\n\005actor\030\005"
      " \001(\0132!.google.fhir.stu3.proto.ReferenceB"
      "\236\002\360\320\207\353\004\001\362\377\374\302\0064http://hl7.org/fhir/Struct"
      "ureDefinition/Practitioner\362\377\374\302\0064http://h"
      "l7.org/fhir/StructureDefinition/Organiza"
      "tion\362\377\374\302\006/http://hl7.org/fhir/StructureD"
      "efinition/Patient\362\377\374\302\0065http://hl7.org/fh"
      "ir/StructureDefinition/RelatedPerson\362\377\374\302"
      "\006.http://hl7.org/fhir/StructureDefinitio"
      "n/Device\022s\n\014on_behalf_of\030\006 \001(\0132!.google."
      "fhir.stu3.proto.ReferenceB:\362\377\374\302\0064http://"
      "hl7.org/fhir/StructureDefinition/Organiz"
      "ation\032\333\002\n\013FocalDevice\022*\n\002id\030\001 \001(\0132\036.goog"
      "le.fhir.stu3.proto.String\0224\n\textension\030\002"
      " \003(\0132!.google.fhir.stu3.proto.Extension\022"
      "=\n\022modifier_extension\030\003 \003(\0132!.google.fhi"
      "r.stu3.proto.Extension\0227\n\006action\030\004 \001(\0132\'"
      ".google.fhir.stu3.proto.CodeableConcept\022"
      "r\n\013manipulated\030\005 \001(\0132!.google.fhir.stu3."
      "proto.ReferenceB:\360\320\207\353\004\001\362\377\374\302\006.http://hl7."
      "org/fhir/StructureDefinition/Device:\204\001\300\237"
      "\343\266\005\003\232\265\216\223\0061http://hl7.org/fhir/StructureD"
      "efinition/Procedure\262\376\344\227\006Ahttp://hl7.org/"
      "fhir/us/core/StructureDefinition/us-core"
      "-procedure\"\342\002\n6CapabilityStatementProfil"
      "eResourceAssociationExtension\022*\n\002id\030\001 \001("
      "\0132\036.google.fhir.stu3.proto.String\0224\n\text"
      "ension\030\002 \003(\0132!.google.fhir.stu3.proto.Ex"
      "tension\022<\n\nvalue_code\030\003 \001(\0132(.google.fhi"
      "r.stu3.proto.ResourceTypeCode:\207\001\300\237\343\266\005\002\232\265"
      "\216\223\0061http://hl7.org/fhir/StructureDefinit"
      "ion/Extension\262\376\344\227\006Dhttp://hl7.org/fhir/u"
      "s/core/StructureDefinition/us-core-profi"
      "le-link\"\235\003\n\032PatientUSCoreRaceExtension\022*"
      "\n\002id\030\001 \001(\0132\036.google.fhir.stu3.proto.Stri"
      "ng\0224\n\textension\030\002 \003(\0132!.google.fhir.stu3"
      ".proto.Extension\0224\n\014omb_category\030\004 \003(\0132\036"
      ".google.fhir.stu3.proto.Coding\0220\n\010detail"
      "ed\030\005 \003(\0132\036.google.fhir.stu3.proto.Coding"
      "\0224\n\004text\030\006 \001(\0132\036.google.fhir.stu3.proto."
      "StringB\006\360\320\207\353\004\001:\177\300\237\343\266\005\002\232\265\216\223\0061http://hl7.o"
      "rg/fhir/StructureDefinition/Extension\262\376\344"
      "\227\006<http://hl7.org/fhir/us/core/Structure"
      "Definition/us-core-race\"\370(\n\023UsCoreSmokin"
      "gstatus\022&\n\002id\030\001 \001(\0132\032.google.fhir.stu3.p"
      "roto.Id\022*\n\004meta\030\002 \001(\0132\034.google.fhir.stu3"
      ".proto.Meta\0223\n\016implicit_rules\030\003 \001(\0132\033.go"
      "ogle.fhir.stu3.proto.Uri\0226\n\010language\030\004 \001"
      "(\0132$.google.fhir.stu3.proto.LanguageCode"
      "\022/\n\004text\030\005 \001(\0132!.google.fhir.stu3.proto."
      "Narrative\022<\n\tcontained\030\006 \003(\0132).google.fh"
      "ir.stu3.proto.ContainedResource\0224\n\texten"
      "sion\030\007 \003(\0132!.google.fhir.stu3.proto.Exte"
      "nsion\022=\n\022modifier_extension\030\010 \003(\0132!.goog"
      "le.fhir.stu3.proto.Extension\0226\n\nidentifi"
      "er\030\t \003(\0132\".google.fhir.stu3.proto.Identi"
      "fier\022\345\003\n\010based_on\030\n \003(\0132!.google.fhir.st"
      "u3.proto.ReferenceB\257\003\362\377\374\302\0060http://hl7.or"
      "g/fhir/StructureDefinition/CarePlan\362\377\374\302\006"
      "5http://hl7.org/fhir/StructureDefinition"
      "/DeviceRequest\362\377\374\302\006Bhttp://hl7.org/fhir/"
      "StructureDefinition/ImmunizationRecommen"
      "dation\362\377\374\302\0069http://hl7.org/fhir/Structur"
      "eDefinition/MedicationRequest\362\377\374\302\0066http:"
      "//hl7.org/fhir/StructureDefinition/Nutri"
      "tionOrder\362\377\374\302\0068http://hl7.org/fhir/Struc"
      "tureDefinition/ProcedureRequest\362\377\374\302\0067htt"
      "p://hl7.org/fhir/StructureDefinition/Ref"
      "erralRequest\022E\n\006status\030\013 \001(\0132-.google.fh"
      "ir.stu3.proto.ObservationStatusCodeB\006\360\320\207"
      "\353\004\001\0229\n\010category\030\014 \003(\0132\'.google.fhir.stu3"
      ".proto.CodeableConcept\022=\n\004code\030\r \001(\0132\'.g"
      "oogle.fhir.stu3.proto.CodeableConceptB\006\360"
      "\320\207\353\004\001\022\177\n\007subject\030\016 \001(\0132!.google.fhir.stu"
      "3.proto.ReferenceBK\360\320\207\353\004\001\362\377\374\302\006\?http://hl"
      "7.org/fhir/us/core/StructureDefinition/u"
      "s-core-patient\022\246\001\n\007context\030\017 \001(\0132!.googl"
      "e.fhir.stu3.proto.ReferenceBr\362\377\374\302\0061http:"
      "//hl7.org/fhir/StructureDefinition/Encou"
      "nter\362\377\374\302\0065http://hl7.org/fhir/StructureD"
      "efinition/EpisodeOfCare\022Q\n\teffective\030\020 \001"
      "(\01326.google.fhir.stu3.uscore.UsCoreSmoki"
      "ngstatus.EffectiveB\006\370\341\343\311\005\001\0227\n\006issued\030\021 \001"
      "(\0132\037.google.fhir.stu3.proto.InstantB\006\360\320\207"
      "\353\004\001\022\233\002\n\tperformer\030\022 \003(\0132!.google.fhir.st"
      "u3.proto.ReferenceB\344\001\362\377\374\302\0064http://hl7.or"
      "g/fhir/StructureDefinition/Practitioner\362"
      "\377\374\302\0064http://hl7.org/fhir/StructureDefini"
      "tion/Organization\362\377\374\302\006/http://hl7.org/fh"
      "ir/StructureDefinition/Patient\362\377\374\302\0065http"
      "://hl7.org/fhir/StructureDefinition/Rela"
      "tedPerson\022O\n\005value\030\023 \001(\01322.google.fhir.s"
      "tu3.uscore.UsCoreSmokingstatus.ValueB\014\370\341"
      "\343\311\005\001\360\320\207\353\004\001\022C\n\022data_absent_reason\030\024 \001(\0132\'"
      ".google.fhir.stu3.proto.CodeableConcept\022"
      "\?\n\016interpretation\030\025 \001(\0132\'.google.fhir.st"
      "u3.proto.CodeableConcept\022/\n\007comment\030\026 \001("
      "\0132\036.google.fhir.stu3.proto.String\022:\n\tbod"
      "y_site\030\027 \001(\0132\'.google.fhir.stu3.proto.Co"
      "deableConcept\0227\n\006method\030\030 \001(\0132\'.google.f"
      "hir.stu3.proto.CodeableConcept\022k\n\010specim"
      "en\030\031 \001(\0132!.google.fhir.stu3.proto.Refere"
      "nceB6\362\377\374\302\0060http://hl7.org/fhir/Structure"
      "Definition/Specimen\022\241\001\n\006device\030\032 \001(\0132!.g"
      "oogle.fhir.stu3.proto.ReferenceBn\362\377\374\302\006.h"
      "ttp://hl7.org/fhir/StructureDefinition/D"
      "evice\362\377\374\302\0064http://hl7.org/fhir/Structure"
      "Definition/DeviceMetric\022T\n\017reference_ran"
      "ge\030\033 \003(\0132;.google.fhir.stu3.uscore.UsCor"
      "eSmokingstatus.ReferenceRange\022E\n\007related"
      "\030\034 \003(\01324.google.fhir.stu3.uscore.UsCoreS"
      "mokingstatus.Related\022I\n\tcomponent\030\035 \003(\0132"
      "6.google.fhir.stu3.uscore.UsCoreSmokings"
      "tatus.Component\032\201\001\n\tEffective\0225\n\tdate_ti"
      "me\030\001 \001(\0132 .google.fhir.stu3.proto.DateTi"
      "meH\000\0220\n\006period\030\002 \001(\0132\036.google.fhir.stu3."
      "proto.PeriodH\000B\013\n\teffective\032U\n\005Value\022C\n\020"
      "codeable_concept\030\002 \001(\0132\'.google.fhir.stu"
      "3.proto.CodeableConceptH\000B\007\n\005value\032\352\003\n\016R"
      "eferenceRange\022*\n\002id\030\001 \001(\0132\036.google.fhir."
      "stu3.proto.String\0224\n\textension\030\002 \003(\0132!.g"
      "oogle.fhir.stu3.proto.Extension\022=\n\022modif"
      "ier_extension\030\003 \003(\0132!.google.fhir.stu3.p"
      "roto.Extension\0223\n\003low\030\004 \001(\0132&.google.fhi"
      "r.stu3.proto.SimpleQuantity\0224\n\004high\030\005 \001("
      "\0132&.google.fhir.stu3.proto.SimpleQuantit"
      "y\0225\n\004type\030\006 \001(\0132\'.google.fhir.stu3.proto"
      ".CodeableConcept\022;\n\napplies_to\030\007 \003(\0132\'.g"
      "oogle.fhir.stu3.proto.CodeableConcept\022*\n"
      "\003age\030\010 \001(\0132\035.google.fhir.stu3.proto.Rang"
      "e\022,\n\004text\030\t \001(\0132\036.google.fhir.stu3.proto"
      ".String\032\340\003\n\007Related\022*\n\002id\030\001 \001(\0132\036.google"
      ".fhir.stu3.proto.String\0224\n\textension\030\002 \003"
      "(\0132!.google.fhir.stu3.proto.Extension\022=\n"
      "\022modifier_extension\030\003 \003(\0132!.google.fhir."
      "stu3.proto.Extension\022E\n\004type\030\004 \001(\01327.goo"
      "gle.fhir.stu3.proto.ObservationRelations"
      "hipTypeCode\022\354\001\n\006target\030\005 \001(\0132!.google.fh"
      "ir.stu3.proto.ReferenceB\270\001\360\320\207\353\004\001\362\377\374\302\0063ht"
      "tp://hl7.org/fhir/StructureDefinition/Ob"
      "servation\362\377\374\302\006=http://hl7.org/fhir/Struc"
      "tureDefinition/QuestionnaireResponse\362\377\374\302"
      "\0060http://hl7.org/fhir/StructureDefinitio"
      "n/Sequence\032\330\010\n\tComponent\022*\n\002id\030\001 \001(\0132\036.g"
      "oogle.fhir.stu3.proto.String\0224\n\textensio"
      "n\030\002 \003(\0132!.google.fhir.stu3.proto.Extensi"
      "on\022=\n\022modifier_extension\030\003 \003(\0132!.google."
      "fhir.stu3.proto.Extension\022=\n\004code\030\004 \001(\0132"
      "\'.google.fhir.stu3.proto.CodeableConcept"
      "B\006\360\320\207\353\004\001\022S\n\005value\030\005 \001(\0132<.google.fhir.st"
      "u3.uscore.UsCoreSmokingstatus.Component."
      "ValueB\006\370\341\343\311\005\001\022C\n\022data_absent_reason\030\006 \001("
      "\0132\'.google.fhir.stu3.proto.CodeableConce"
      "pt\022\?\n\016interpretation\030\007 \001(\0132\'.google.fhir"
      ".stu3.proto.CodeableConcept\022T\n\017reference"
      "_range\030\010 \003(\0132;.google.fhir.stu3.uscore.U"
      "sCoreSmokingstatus.ReferenceRange\032\271\004\n\005Va"
      "lue\0224\n\010quantity\030\001 \001(\0132 .google.fhir.stu3"
      ".proto.QuantityH\000\022C\n\020codeable_concept\030\002 "
      "\001(\0132\'.google.fhir.stu3.proto.CodeableCon"
      "ceptH\000\022>\n\014string_value\030\003 \001(\0132\036.google.fh"
      "ir.stu3.proto.StringH\000R\006string\022.\n\005range\030"
      "\004 \001(\0132\035.google.fhir.stu3.proto.RangeH\000\022."
      "\n\005ratio\030\005 \001(\0132\035.google.fhir.stu3.proto.R"
      "atioH\000\022;\n\014sampled_data\030\006 \001(\0132#.google.fh"
      "ir.stu3.proto.SampledDataH\000\0228\n\nattachmen"
      "t\030\007 \001(\0132\".google.fhir.stu3.proto.Attachm"
      "entH\000\022,\n\004time\030\010 \001(\0132\034.google.fhir.stu3.p"
      "roto.TimeH\000\0225\n\tdate_time\030\t \001(\0132 .google."
      "fhir.stu3.proto.DateTimeH\000\0220\n\006period\030\n \001"
      "(\0132\036.google.fhir.stu3.proto.PeriodH\000B\007\n\005"
      "value:\212\001\300\237\343\266\005\003\232\265\216\223\0063http://hl7.org/fhir/"
      "StructureDefinition/Observation\262\376\344\227\006Ehtt"
      "p://hl7.org/fhir/us/core/StructureDefini"
      "tion/us-core-smokingstatusB\037\n\033com.google"
      ".fhir.stu3.uscoreP\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 64707);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/stu3/uscore.proto", &protobuf_RegisterTypes);
  ::protobuf_proto_2fstu3_2fannotations_2eproto::AddDescriptors();
  ::protobuf_proto_2fstu3_2fcodes_2eproto::AddDescriptors();
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::AddDescriptors();
  ::protobuf_proto_2fstu3_2fmetadatatypes_2eproto::AddDescriptors();
  ::protobuf_proto_2fstu3_2fresources_2eproto::AddDescriptors();
  ::protobuf_proto_2fstu3_2fuscore_5fcodes_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_proto_2fstu3_2fuscore_2eproto
namespace google {
namespace fhir {
namespace stu3 {
namespace uscore {

// ===================================================================

void UsCoreAllergyintolerance_Onset::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_Onset_default_instance_.date_time_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_Onset_default_instance_.age_ = const_cast< ::google::fhir::stu3::proto::Age*>(
      ::google::fhir::stu3::proto::Age::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_Onset_default_instance_.period_ = const_cast< ::google::fhir::stu3::proto::Period*>(
      ::google::fhir::stu3::proto::Period::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_Onset_default_instance_.range_ = const_cast< ::google::fhir::stu3::proto::Range*>(
      ::google::fhir::stu3::proto::Range::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_Onset_default_instance_.string_value_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
void UsCoreAllergyintolerance_Onset::set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_onset();
  if (date_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date_time, submessage_arena);
    }
    set_has_date_time();
    onset_.date_time_ = date_time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset.date_time)
}
void UsCoreAllergyintolerance_Onset::clear_date_time() {
  if (has_date_time()) {
    delete onset_.date_time_;
    clear_has_onset();
  }
}
void UsCoreAllergyintolerance_Onset::set_allocated_age(::google::fhir::stu3::proto::Age* age) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_onset();
  if (age) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      age = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, age, submessage_arena);
    }
    set_has_age();
    onset_.age_ = age;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset.age)
}
void UsCoreAllergyintolerance_Onset::clear_age() {
  if (has_age()) {
    delete onset_.age_;
    clear_has_onset();
  }
}
void UsCoreAllergyintolerance_Onset::set_allocated_period(::google::fhir::stu3::proto::Period* period) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_onset();
  if (period) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      period = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, period, submessage_arena);
    }
    set_has_period();
    onset_.period_ = period;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset.period)
}
void UsCoreAllergyintolerance_Onset::clear_period() {
  if (has_period()) {
    delete onset_.period_;
    clear_has_onset();
  }
}
void UsCoreAllergyintolerance_Onset::set_allocated_range(::google::fhir::stu3::proto::Range* range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_onset();
  if (range) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, range, submessage_arena);
    }
    set_has_range();
    onset_.range_ = range;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset.range)
}
void UsCoreAllergyintolerance_Onset::clear_range() {
  if (has_range()) {
    delete onset_.range_;
    clear_has_onset();
  }
}
void UsCoreAllergyintolerance_Onset::set_allocated_string_value(::google::fhir::stu3::proto::String* string_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_onset();
  if (string_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      string_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, string_value, submessage_arena);
    }
    set_has_string_value();
    onset_.string_value_ = string_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset.string_value)
}
void UsCoreAllergyintolerance_Onset::clear_string_value() {
  if (has_string_value()) {
    delete onset_.string_value_;
    clear_has_onset();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreAllergyintolerance_Onset::kDateTimeFieldNumber;
const int UsCoreAllergyintolerance_Onset::kAgeFieldNumber;
const int UsCoreAllergyintolerance_Onset::kPeriodFieldNumber;
const int UsCoreAllergyintolerance_Onset::kRangeFieldNumber;
const int UsCoreAllergyintolerance_Onset::kStringValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreAllergyintolerance_Onset::UsCoreAllergyintolerance_Onset()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreAllergyintolerance_Onset.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset)
}
UsCoreAllergyintolerance_Onset::UsCoreAllergyintolerance_Onset(const UsCoreAllergyintolerance_Onset& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_onset();
  switch (from.onset_case()) {
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kAge: {
      mutable_age()->::google::fhir::stu3::proto::Age::MergeFrom(from.age());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case kStringValue: {
      mutable_string_value()->::google::fhir::stu3::proto::String::MergeFrom(from.string_value());
      break;
    }
    case ONSET_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset)
}

void UsCoreAllergyintolerance_Onset::SharedCtor() {
  clear_has_onset();
}

UsCoreAllergyintolerance_Onset::~UsCoreAllergyintolerance_Onset() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset)
  SharedDtor();
}

void UsCoreAllergyintolerance_Onset::SharedDtor() {
  if (has_onset()) {
    clear_onset();
  }
}

void UsCoreAllergyintolerance_Onset::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreAllergyintolerance_Onset::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreAllergyintolerance_Onset& UsCoreAllergyintolerance_Onset::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreAllergyintolerance_Onset.base);
  return *internal_default_instance();
}


void UsCoreAllergyintolerance_Onset::clear_onset() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset)
  switch (onset_case()) {
    case kDateTime: {
      delete onset_.date_time_;
      break;
    }
    case kAge: {
      delete onset_.age_;
      break;
    }
    case kPeriod: {
      delete onset_.period_;
      break;
    }
    case kRange: {
      delete onset_.range_;
      break;
    }
    case kStringValue: {
      delete onset_.string_value_;
      break;
    }
    case ONSET_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ONSET_NOT_SET;
}


void UsCoreAllergyintolerance_Onset::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_onset();
  _internal_metadata_.Clear();
}

bool UsCoreAllergyintolerance_Onset::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.DateTime date_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Age age = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_age()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Period period = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Range range = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String string_value = 5[json_name = "string"];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_string_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset)
  return false;
#undef DO_
}

void UsCoreAllergyintolerance_Onset::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.DateTime date_time = 1;
  if (has_date_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_date_time(), output);
  }

  // .google.fhir.stu3.proto.Age age = 2;
  if (has_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_age(), output);
  }

  // .google.fhir.stu3.proto.Period period = 3;
  if (has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_period(), output);
  }

  // .google.fhir.stu3.proto.Range range = 4;
  if (has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_range(), output);
  }

  // .google.fhir.stu3.proto.String string_value = 5[json_name = "string"];
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_string_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset)
}

::google::protobuf::uint8* UsCoreAllergyintolerance_Onset::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.DateTime date_time = 1;
  if (has_date_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_date_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Age age = 2;
  if (has_age()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_age(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Period period = 3;
  if (has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_period(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Range range = 4;
  if (has_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_range(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String string_value = 5[json_name = "string"];
  if (has_string_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_string_value(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset)
  return target;
}

size_t UsCoreAllergyintolerance_Onset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (onset_case()) {
    // .google.fhir.stu3.proto.DateTime date_time = 1;
    case kDateTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *onset_.date_time_);
      break;
    }
    // .google.fhir.stu3.proto.Age age = 2;
    case kAge: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *onset_.age_);
      break;
    }
    // .google.fhir.stu3.proto.Period period = 3;
    case kPeriod: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *onset_.period_);
      break;
    }
    // .google.fhir.stu3.proto.Range range = 4;
    case kRange: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *onset_.range_);
      break;
    }
    // .google.fhir.stu3.proto.String string_value = 5[json_name = "string"];
    case kStringValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *onset_.string_value_);
      break;
    }
    case ONSET_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreAllergyintolerance_Onset::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreAllergyintolerance_Onset* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreAllergyintolerance_Onset>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset)
    MergeFrom(*source);
  }
}

void UsCoreAllergyintolerance_Onset::MergeFrom(const UsCoreAllergyintolerance_Onset& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.onset_case()) {
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kAge: {
      mutable_age()->::google::fhir::stu3::proto::Age::MergeFrom(from.age());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case kStringValue: {
      mutable_string_value()->::google::fhir::stu3::proto::String::MergeFrom(from.string_value());
      break;
    }
    case ONSET_NOT_SET: {
      break;
    }
  }
}

void UsCoreAllergyintolerance_Onset::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreAllergyintolerance_Onset::CopyFrom(const UsCoreAllergyintolerance_Onset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreAllergyintolerance_Onset::IsInitialized() const {
  return true;
}

void UsCoreAllergyintolerance_Onset::Swap(UsCoreAllergyintolerance_Onset* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreAllergyintolerance_Onset::InternalSwap(UsCoreAllergyintolerance_Onset* other) {
  using std::swap;
  swap(onset_, other->onset_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreAllergyintolerance_Onset::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreAllergyintolerance_Reaction::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_Reaction_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_Reaction_default_instance_._instance.get_mutable()->substance_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_Reaction_default_instance_._instance.get_mutable()->description_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_Reaction_default_instance_._instance.get_mutable()->onset_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_Reaction_default_instance_._instance.get_mutable()->severity_ = const_cast< ::google::fhir::stu3::proto::AllergyIntoleranceSeverityCode*>(
      ::google::fhir::stu3::proto::AllergyIntoleranceSeverityCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_Reaction_default_instance_._instance.get_mutable()->exposure_route_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
}
void UsCoreAllergyintolerance_Reaction::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreAllergyintolerance_Reaction::clear_extension() {
  extension_.Clear();
}
void UsCoreAllergyintolerance_Reaction::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreAllergyintolerance_Reaction::clear_substance() {
  if (GetArenaNoVirtual() == NULL && substance_ != NULL) {
    delete substance_;
  }
  substance_ = NULL;
}
void UsCoreAllergyintolerance_Reaction::clear_manifestation() {
  manifestation_.Clear();
}
void UsCoreAllergyintolerance_Reaction::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
}
void UsCoreAllergyintolerance_Reaction::clear_onset() {
  if (GetArenaNoVirtual() == NULL && onset_ != NULL) {
    delete onset_;
  }
  onset_ = NULL;
}
void UsCoreAllergyintolerance_Reaction::clear_severity() {
  if (GetArenaNoVirtual() == NULL && severity_ != NULL) {
    delete severity_;
  }
  severity_ = NULL;
}
void UsCoreAllergyintolerance_Reaction::clear_exposure_route() {
  if (GetArenaNoVirtual() == NULL && exposure_route_ != NULL) {
    delete exposure_route_;
  }
  exposure_route_ = NULL;
}
void UsCoreAllergyintolerance_Reaction::clear_note() {
  note_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreAllergyintolerance_Reaction::kIdFieldNumber;
const int UsCoreAllergyintolerance_Reaction::kExtensionFieldNumber;
const int UsCoreAllergyintolerance_Reaction::kModifierExtensionFieldNumber;
const int UsCoreAllergyintolerance_Reaction::kSubstanceFieldNumber;
const int UsCoreAllergyintolerance_Reaction::kManifestationFieldNumber;
const int UsCoreAllergyintolerance_Reaction::kDescriptionFieldNumber;
const int UsCoreAllergyintolerance_Reaction::kOnsetFieldNumber;
const int UsCoreAllergyintolerance_Reaction::kSeverityFieldNumber;
const int UsCoreAllergyintolerance_Reaction::kExposureRouteFieldNumber;
const int UsCoreAllergyintolerance_Reaction::kNoteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreAllergyintolerance_Reaction::UsCoreAllergyintolerance_Reaction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreAllergyintolerance_Reaction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction)
}
UsCoreAllergyintolerance_Reaction::UsCoreAllergyintolerance_Reaction(const UsCoreAllergyintolerance_Reaction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      manifestation_(from.manifestation_),
      note_(from.note_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_substance()) {
    substance_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.substance_);
  } else {
    substance_ = NULL;
  }
  if (from.has_description()) {
    description_ = new ::google::fhir::stu3::proto::String(*from.description_);
  } else {
    description_ = NULL;
  }
  if (from.has_onset()) {
    onset_ = new ::google::fhir::stu3::proto::DateTime(*from.onset_);
  } else {
    onset_ = NULL;
  }
  if (from.has_severity()) {
    severity_ = new ::google::fhir::stu3::proto::AllergyIntoleranceSeverityCode(*from.severity_);
  } else {
    severity_ = NULL;
  }
  if (from.has_exposure_route()) {
    exposure_route_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.exposure_route_);
  } else {
    exposure_route_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction)
}

void UsCoreAllergyintolerance_Reaction::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exposure_route_) -
      reinterpret_cast<char*>(&id_)) + sizeof(exposure_route_));
}

UsCoreAllergyintolerance_Reaction::~UsCoreAllergyintolerance_Reaction() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction)
  SharedDtor();
}

void UsCoreAllergyintolerance_Reaction::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete substance_;
  if (this != internal_default_instance()) delete description_;
  if (this != internal_default_instance()) delete onset_;
  if (this != internal_default_instance()) delete severity_;
  if (this != internal_default_instance()) delete exposure_route_;
}

void UsCoreAllergyintolerance_Reaction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreAllergyintolerance_Reaction::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreAllergyintolerance_Reaction& UsCoreAllergyintolerance_Reaction::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreAllergyintolerance_Reaction.base);
  return *internal_default_instance();
}


void UsCoreAllergyintolerance_Reaction::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  manifestation_.Clear();
  note_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && substance_ != NULL) {
    delete substance_;
  }
  substance_ = NULL;
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
  if (GetArenaNoVirtual() == NULL && onset_ != NULL) {
    delete onset_;
  }
  onset_ = NULL;
  if (GetArenaNoVirtual() == NULL && severity_ != NULL) {
    delete severity_;
  }
  severity_ = NULL;
  if (GetArenaNoVirtual() == NULL && exposure_route_ != NULL) {
    delete exposure_route_;
  }
  exposure_route_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreAllergyintolerance_Reaction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept substance = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_substance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept manifestation = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_manifestation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String description = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DateTime onset = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_onset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.AllergyIntoleranceSeverityCode severity = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_severity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept exposure_route = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_exposure_route()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Annotation note = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_note()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction)
  return false;
#undef DO_
}

void UsCoreAllergyintolerance_Reaction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.CodeableConcept substance = 4;
  if (this->has_substance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_substance(), output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept manifestation = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->manifestation_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->manifestation(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.String description = 6;
  if (this->has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_description(), output);
  }

  // .google.fhir.stu3.proto.DateTime onset = 7;
  if (this->has_onset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_onset(), output);
  }

  // .google.fhir.stu3.proto.AllergyIntoleranceSeverityCode severity = 8;
  if (this->has_severity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_severity(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept exposure_route = 9;
  if (this->has_exposure_route()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_exposure_route(), output);
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->note_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->note(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction)
}

::google::protobuf::uint8* UsCoreAllergyintolerance_Reaction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept substance = 4;
  if (this->has_substance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_substance(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept manifestation = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->manifestation_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->manifestation(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.String description = 6;
  if (this->has_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_description(), deterministic, target);
  }

  // .google.fhir.stu3.proto.DateTime onset = 7;
  if (this->has_onset()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_onset(), deterministic, target);
  }

  // .google.fhir.stu3.proto.AllergyIntoleranceSeverityCode severity = 8;
  if (this->has_severity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_severity(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept exposure_route = 9;
  if (this->has_exposure_route()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_exposure_route(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->note_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->note(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction)
  return target;
}

size_t UsCoreAllergyintolerance_Reaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept manifestation = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  {
    unsigned int count = static_cast<unsigned int>(this->manifestation_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->manifestation(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->note_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->note(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.CodeableConcept substance = 4;
  if (this->has_substance()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *substance_);
  }

  // .google.fhir.stu3.proto.String description = 6;
  if (this->has_description()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *description_);
  }

  // .google.fhir.stu3.proto.DateTime onset = 7;
  if (this->has_onset()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *onset_);
  }

  // .google.fhir.stu3.proto.AllergyIntoleranceSeverityCode severity = 8;
  if (this->has_severity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *severity_);
  }

  // .google.fhir.stu3.proto.CodeableConcept exposure_route = 9;
  if (this->has_exposure_route()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *exposure_route_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreAllergyintolerance_Reaction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreAllergyintolerance_Reaction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreAllergyintolerance_Reaction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction)
    MergeFrom(*source);
  }
}

void UsCoreAllergyintolerance_Reaction::MergeFrom(const UsCoreAllergyintolerance_Reaction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  manifestation_.MergeFrom(from.manifestation_);
  note_.MergeFrom(from.note_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_substance()) {
    mutable_substance()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.substance());
  }
  if (from.has_description()) {
    mutable_description()->::google::fhir::stu3::proto::String::MergeFrom(from.description());
  }
  if (from.has_onset()) {
    mutable_onset()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.onset());
  }
  if (from.has_severity()) {
    mutable_severity()->::google::fhir::stu3::proto::AllergyIntoleranceSeverityCode::MergeFrom(from.severity());
  }
  if (from.has_exposure_route()) {
    mutable_exposure_route()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.exposure_route());
  }
}

void UsCoreAllergyintolerance_Reaction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreAllergyintolerance_Reaction::CopyFrom(const UsCoreAllergyintolerance_Reaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreAllergyintolerance_Reaction::IsInitialized() const {
  return true;
}

void UsCoreAllergyintolerance_Reaction::Swap(UsCoreAllergyintolerance_Reaction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreAllergyintolerance_Reaction::InternalSwap(UsCoreAllergyintolerance_Reaction* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&manifestation_)->InternalSwap(CastToBase(&other->manifestation_));
  CastToBase(&note_)->InternalSwap(CastToBase(&other->note_));
  swap(id_, other->id_);
  swap(substance_, other->substance_);
  swap(description_, other->description_);
  swap(onset_, other->onset_);
  swap(severity_, other->severity_);
  swap(exposure_route_, other->exposure_route_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreAllergyintolerance_Reaction::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreAllergyintolerance::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::Id*>(
      ::google::fhir::stu3::proto::Id::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_default_instance_._instance.get_mutable()->meta_ = const_cast< ::google::fhir::stu3::proto::Meta*>(
      ::google::fhir::stu3::proto::Meta::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_default_instance_._instance.get_mutable()->implicit_rules_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_default_instance_._instance.get_mutable()->language_ = const_cast< ::google::fhir::stu3::proto::LanguageCode*>(
      ::google::fhir::stu3::proto::LanguageCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_default_instance_._instance.get_mutable()->text_ = const_cast< ::google::fhir::stu3::proto::Narrative*>(
      ::google::fhir::stu3::proto::Narrative::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_default_instance_._instance.get_mutable()->clinical_status_ = const_cast< ::google::fhir::stu3::proto::AllergyIntoleranceClinicalStatusCode*>(
      ::google::fhir::stu3::proto::AllergyIntoleranceClinicalStatusCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_default_instance_._instance.get_mutable()->verification_status_ = const_cast< ::google::fhir::stu3::proto::AllergyIntoleranceVerificationStatusCode*>(
      ::google::fhir::stu3::proto::AllergyIntoleranceVerificationStatusCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_default_instance_._instance.get_mutable()->type_ = const_cast< ::google::fhir::stu3::proto::AllergyIntoleranceTypeCode*>(
      ::google::fhir::stu3::proto::AllergyIntoleranceTypeCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_default_instance_._instance.get_mutable()->criticality_ = const_cast< ::google::fhir::stu3::proto::AllergyIntoleranceCriticalityCode*>(
      ::google::fhir::stu3::proto::AllergyIntoleranceCriticalityCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_default_instance_._instance.get_mutable()->code_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_default_instance_._instance.get_mutable()->patient_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_default_instance_._instance.get_mutable()->onset_ = const_cast< ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Onset*>(
      ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Onset::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_default_instance_._instance.get_mutable()->asserted_date_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_default_instance_._instance.get_mutable()->recorder_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_default_instance_._instance.get_mutable()->asserter_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_default_instance_._instance.get_mutable()->last_occurrence_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
}
void UsCoreAllergyintolerance::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreAllergyintolerance::clear_meta() {
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
}
void UsCoreAllergyintolerance::clear_implicit_rules() {
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
}
void UsCoreAllergyintolerance::clear_language() {
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
}
void UsCoreAllergyintolerance::clear_text() {
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
}
void UsCoreAllergyintolerance::clear_contained() {
  contained_.Clear();
}
void UsCoreAllergyintolerance::clear_extension() {
  extension_.Clear();
}
void UsCoreAllergyintolerance::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreAllergyintolerance::clear_identifier() {
  identifier_.Clear();
}
void UsCoreAllergyintolerance::clear_clinical_status() {
  if (GetArenaNoVirtual() == NULL && clinical_status_ != NULL) {
    delete clinical_status_;
  }
  clinical_status_ = NULL;
}
void UsCoreAllergyintolerance::clear_verification_status() {
  if (GetArenaNoVirtual() == NULL && verification_status_ != NULL) {
    delete verification_status_;
  }
  verification_status_ = NULL;
}
void UsCoreAllergyintolerance::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
}
void UsCoreAllergyintolerance::clear_category() {
  category_.Clear();
}
void UsCoreAllergyintolerance::clear_criticality() {
  if (GetArenaNoVirtual() == NULL && criticality_ != NULL) {
    delete criticality_;
  }
  criticality_ = NULL;
}
void UsCoreAllergyintolerance::clear_code() {
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
}
void UsCoreAllergyintolerance::clear_patient() {
  if (GetArenaNoVirtual() == NULL && patient_ != NULL) {
    delete patient_;
  }
  patient_ = NULL;
}
void UsCoreAllergyintolerance::clear_asserted_date() {
  if (GetArenaNoVirtual() == NULL && asserted_date_ != NULL) {
    delete asserted_date_;
  }
  asserted_date_ = NULL;
}
void UsCoreAllergyintolerance::clear_recorder() {
  if (GetArenaNoVirtual() == NULL && recorder_ != NULL) {
    delete recorder_;
  }
  recorder_ = NULL;
}
void UsCoreAllergyintolerance::clear_asserter() {
  if (GetArenaNoVirtual() == NULL && asserter_ != NULL) {
    delete asserter_;
  }
  asserter_ = NULL;
}
void UsCoreAllergyintolerance::clear_last_occurrence() {
  if (GetArenaNoVirtual() == NULL && last_occurrence_ != NULL) {
    delete last_occurrence_;
  }
  last_occurrence_ = NULL;
}
void UsCoreAllergyintolerance::clear_note() {
  note_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreAllergyintolerance::kIdFieldNumber;
const int UsCoreAllergyintolerance::kMetaFieldNumber;
const int UsCoreAllergyintolerance::kImplicitRulesFieldNumber;
const int UsCoreAllergyintolerance::kLanguageFieldNumber;
const int UsCoreAllergyintolerance::kTextFieldNumber;
const int UsCoreAllergyintolerance::kContainedFieldNumber;
const int UsCoreAllergyintolerance::kExtensionFieldNumber;
const int UsCoreAllergyintolerance::kModifierExtensionFieldNumber;
const int UsCoreAllergyintolerance::kIdentifierFieldNumber;
const int UsCoreAllergyintolerance::kClinicalStatusFieldNumber;
const int UsCoreAllergyintolerance::kVerificationStatusFieldNumber;
const int UsCoreAllergyintolerance::kTypeFieldNumber;
const int UsCoreAllergyintolerance::kCategoryFieldNumber;
const int UsCoreAllergyintolerance::kCriticalityFieldNumber;
const int UsCoreAllergyintolerance::kCodeFieldNumber;
const int UsCoreAllergyintolerance::kPatientFieldNumber;
const int UsCoreAllergyintolerance::kOnsetFieldNumber;
const int UsCoreAllergyintolerance::kAssertedDateFieldNumber;
const int UsCoreAllergyintolerance::kRecorderFieldNumber;
const int UsCoreAllergyintolerance::kAsserterFieldNumber;
const int UsCoreAllergyintolerance::kLastOccurrenceFieldNumber;
const int UsCoreAllergyintolerance::kNoteFieldNumber;
const int UsCoreAllergyintolerance::kReactionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreAllergyintolerance::UsCoreAllergyintolerance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreAllergyintolerance.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreAllergyintolerance)
}
UsCoreAllergyintolerance::UsCoreAllergyintolerance(const UsCoreAllergyintolerance& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      contained_(from.contained_),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      identifier_(from.identifier_),
      category_(from.category_),
      note_(from.note_),
      reaction_(from.reaction_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::Id(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_meta()) {
    meta_ = new ::google::fhir::stu3::proto::Meta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  if (from.has_implicit_rules()) {
    implicit_rules_ = new ::google::fhir::stu3::proto::Uri(*from.implicit_rules_);
  } else {
    implicit_rules_ = NULL;
  }
  if (from.has_language()) {
    language_ = new ::google::fhir::stu3::proto::LanguageCode(*from.language_);
  } else {
    language_ = NULL;
  }
  if (from.has_text()) {
    text_ = new ::google::fhir::stu3::proto::Narrative(*from.text_);
  } else {
    text_ = NULL;
  }
  if (from.has_clinical_status()) {
    clinical_status_ = new ::google::fhir::stu3::proto::AllergyIntoleranceClinicalStatusCode(*from.clinical_status_);
  } else {
    clinical_status_ = NULL;
  }
  if (from.has_verification_status()) {
    verification_status_ = new ::google::fhir::stu3::proto::AllergyIntoleranceVerificationStatusCode(*from.verification_status_);
  } else {
    verification_status_ = NULL;
  }
  if (from.has_type()) {
    type_ = new ::google::fhir::stu3::proto::AllergyIntoleranceTypeCode(*from.type_);
  } else {
    type_ = NULL;
  }
  if (from.has_criticality()) {
    criticality_ = new ::google::fhir::stu3::proto::AllergyIntoleranceCriticalityCode(*from.criticality_);
  } else {
    criticality_ = NULL;
  }
  if (from.has_code()) {
    code_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.code_);
  } else {
    code_ = NULL;
  }
  if (from.has_patient()) {
    patient_ = new ::google::fhir::stu3::proto::Reference(*from.patient_);
  } else {
    patient_ = NULL;
  }
  if (from.has_onset()) {
    onset_ = new ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Onset(*from.onset_);
  } else {
    onset_ = NULL;
  }
  if (from.has_asserted_date()) {
    asserted_date_ = new ::google::fhir::stu3::proto::DateTime(*from.asserted_date_);
  } else {
    asserted_date_ = NULL;
  }
  if (from.has_recorder()) {
    recorder_ = new ::google::fhir::stu3::proto::Reference(*from.recorder_);
  } else {
    recorder_ = NULL;
  }
  if (from.has_asserter()) {
    asserter_ = new ::google::fhir::stu3::proto::Reference(*from.asserter_);
  } else {
    asserter_ = NULL;
  }
  if (from.has_last_occurrence()) {
    last_occurrence_ = new ::google::fhir::stu3::proto::DateTime(*from.last_occurrence_);
  } else {
    last_occurrence_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreAllergyintolerance)
}

void UsCoreAllergyintolerance::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_occurrence_) -
      reinterpret_cast<char*>(&id_)) + sizeof(last_occurrence_));
}

UsCoreAllergyintolerance::~UsCoreAllergyintolerance() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreAllergyintolerance)
  SharedDtor();
}

void UsCoreAllergyintolerance::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete implicit_rules_;
  if (this != internal_default_instance()) delete language_;
  if (this != internal_default_instance()) delete text_;
  if (this != internal_default_instance()) delete clinical_status_;
  if (this != internal_default_instance()) delete verification_status_;
  if (this != internal_default_instance()) delete type_;
  if (this != internal_default_instance()) delete criticality_;
  if (this != internal_default_instance()) delete code_;
  if (this != internal_default_instance()) delete patient_;
  if (this != internal_default_instance()) delete onset_;
  if (this != internal_default_instance()) delete asserted_date_;
  if (this != internal_default_instance()) delete recorder_;
  if (this != internal_default_instance()) delete asserter_;
  if (this != internal_default_instance()) delete last_occurrence_;
}

void UsCoreAllergyintolerance::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreAllergyintolerance::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreAllergyintolerance& UsCoreAllergyintolerance::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreAllergyintolerance.base);
  return *internal_default_instance();
}


void UsCoreAllergyintolerance::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreAllergyintolerance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contained_.Clear();
  extension_.Clear();
  modifier_extension_.Clear();
  identifier_.Clear();
  category_.Clear();
  note_.Clear();
  reaction_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  if (GetArenaNoVirtual() == NULL && clinical_status_ != NULL) {
    delete clinical_status_;
  }
  clinical_status_ = NULL;
  if (GetArenaNoVirtual() == NULL && verification_status_ != NULL) {
    delete verification_status_;
  }
  verification_status_ = NULL;
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  if (GetArenaNoVirtual() == NULL && criticality_ != NULL) {
    delete criticality_;
  }
  criticality_ = NULL;
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
  if (GetArenaNoVirtual() == NULL && patient_ != NULL) {
    delete patient_;
  }
  patient_ = NULL;
  if (GetArenaNoVirtual() == NULL && onset_ != NULL) {
    delete onset_;
  }
  onset_ = NULL;
  if (GetArenaNoVirtual() == NULL && asserted_date_ != NULL) {
    delete asserted_date_;
  }
  asserted_date_ = NULL;
  if (GetArenaNoVirtual() == NULL && recorder_ != NULL) {
    delete recorder_;
  }
  recorder_ = NULL;
  if (GetArenaNoVirtual() == NULL && asserter_ != NULL) {
    delete asserter_;
  }
  asserter_ = NULL;
  if (GetArenaNoVirtual() == NULL && last_occurrence_ != NULL) {
    delete last_occurrence_;
  }
  last_occurrence_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreAllergyintolerance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreAllergyintolerance)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Id id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Meta meta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri implicit_rules = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_implicit_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.LanguageCode language = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_language()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Narrative text = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_contained()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.AllergyIntoleranceClinicalStatusCode clinical_status = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_clinical_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.AllergyIntoleranceVerificationStatusCode verification_status = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_verification_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.AllergyIntoleranceTypeCode type = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.AllergyIntoleranceCategoryCode category = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_category()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.AllergyIntoleranceCriticalityCode criticality = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_criticality()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept code = 15 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference patient = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_patient()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset onset = 17 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_onset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DateTime asserted_date = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_asserted_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference recorder = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient"];
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_recorder()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference asserter = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner"];
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_asserter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DateTime last_occurrence = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_last_occurrence()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Annotation note = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_note()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction reaction = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_reaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreAllergyintolerance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreAllergyintolerance)
  return false;
#undef DO_
}

void UsCoreAllergyintolerance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreAllergyintolerance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_meta(), output);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_implicit_rules(), output);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_language(), output);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_text(), output);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->contained(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->identifier(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.AllergyIntoleranceClinicalStatusCode clinical_status = 10;
  if (this->has_clinical_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_clinical_status(), output);
  }

  // .google.fhir.stu3.proto.AllergyIntoleranceVerificationStatusCode verification_status = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_verification_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_verification_status(), output);
  }

  // .google.fhir.stu3.proto.AllergyIntoleranceTypeCode type = 12;
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_type(), output);
  }

  // repeated .google.fhir.stu3.proto.AllergyIntoleranceCategoryCode category = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->category_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13,
      this->category(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.AllergyIntoleranceCriticalityCode criticality = 14;
  if (this->has_criticality()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_criticality(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 15 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_code(), output);
  }

  // .google.fhir.stu3.proto.Reference patient = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_patient()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_patient(), output);
  }

  // .google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset onset = 17 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_onset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_onset(), output);
  }

  // .google.fhir.stu3.proto.DateTime asserted_date = 18;
  if (this->has_asserted_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_asserted_date(), output);
  }

  // .google.fhir.stu3.proto.Reference recorder = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient"];
  if (this->has_recorder()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_recorder(), output);
  }

  // .google.fhir.stu3.proto.Reference asserter = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner"];
  if (this->has_asserter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_asserter(), output);
  }

  // .google.fhir.stu3.proto.DateTime last_occurrence = 21;
  if (this->has_last_occurrence()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_last_occurrence(), output);
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->note_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22,
      this->note(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction reaction = 23;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reaction_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23,
      this->reaction(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreAllergyintolerance)
}

::google::protobuf::uint8* UsCoreAllergyintolerance::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreAllergyintolerance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_meta(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_implicit_rules(), deterministic, target);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_language(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_text(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->contained(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->identifier(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.AllergyIntoleranceClinicalStatusCode clinical_status = 10;
  if (this->has_clinical_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_clinical_status(), deterministic, target);
  }

  // .google.fhir.stu3.proto.AllergyIntoleranceVerificationStatusCode verification_status = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_verification_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_verification_status(), deterministic, target);
  }

  // .google.fhir.stu3.proto.AllergyIntoleranceTypeCode type = 12;
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_type(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.AllergyIntoleranceCategoryCode category = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->category_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->category(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.AllergyIntoleranceCriticalityCode criticality = 14;
  if (this->has_criticality()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_criticality(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 15 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_code(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference patient = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_patient()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_patient(), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset onset = 17 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_onset()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_onset(), deterministic, target);
  }

  // .google.fhir.stu3.proto.DateTime asserted_date = 18;
  if (this->has_asserted_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_asserted_date(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference recorder = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient"];
  if (this->has_recorder()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_recorder(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference asserter = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner"];
  if (this->has_asserter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_asserter(), deterministic, target);
  }

  // .google.fhir.stu3.proto.DateTime last_occurrence = 21;
  if (this->has_last_occurrence()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_last_occurrence(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->note_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->note(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction reaction = 23;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reaction_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->reaction(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreAllergyintolerance)
  return target;
}

size_t UsCoreAllergyintolerance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreAllergyintolerance)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->contained_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->contained(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->identifier_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->identifier(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.AllergyIntoleranceCategoryCode category = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->category_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->category(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 22;
  {
    unsigned int count = static_cast<unsigned int>(this->note_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->note(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction reaction = 23;
  {
    unsigned int count = static_cast<unsigned int>(this->reaction_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reaction(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *implicit_rules_);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *language_);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *text_);
  }

  // .google.fhir.stu3.proto.AllergyIntoleranceClinicalStatusCode clinical_status = 10;
  if (this->has_clinical_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *clinical_status_);
  }

  // .google.fhir.stu3.proto.AllergyIntoleranceVerificationStatusCode verification_status = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_verification_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *verification_status_);
  }

  // .google.fhir.stu3.proto.AllergyIntoleranceTypeCode type = 12;
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  // .google.fhir.stu3.proto.AllergyIntoleranceCriticalityCode criticality = 14;
  if (this->has_criticality()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *criticality_);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 15 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *code_);
  }

  // .google.fhir.stu3.proto.Reference patient = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_patient()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *patient_);
  }

  // .google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset onset = 17 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_onset()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *onset_);
  }

  // .google.fhir.stu3.proto.DateTime asserted_date = 18;
  if (this->has_asserted_date()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *asserted_date_);
  }

  // .google.fhir.stu3.proto.Reference recorder = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient"];
  if (this->has_recorder()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *recorder_);
  }

  // .google.fhir.stu3.proto.Reference asserter = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner"];
  if (this->has_asserter()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *asserter_);
  }

  // .google.fhir.stu3.proto.DateTime last_occurrence = 21;
  if (this->has_last_occurrence()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *last_occurrence_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreAllergyintolerance::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreAllergyintolerance)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreAllergyintolerance* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreAllergyintolerance>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreAllergyintolerance)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreAllergyintolerance)
    MergeFrom(*source);
  }
}

void UsCoreAllergyintolerance::MergeFrom(const UsCoreAllergyintolerance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreAllergyintolerance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contained_.MergeFrom(from.contained_);
  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  identifier_.MergeFrom(from.identifier_);
  category_.MergeFrom(from.category_);
  note_.MergeFrom(from.note_);
  reaction_.MergeFrom(from.reaction_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::Id::MergeFrom(from.id());
  }
  if (from.has_meta()) {
    mutable_meta()->::google::fhir::stu3::proto::Meta::MergeFrom(from.meta());
  }
  if (from.has_implicit_rules()) {
    mutable_implicit_rules()->::google::fhir::stu3::proto::Uri::MergeFrom(from.implicit_rules());
  }
  if (from.has_language()) {
    mutable_language()->::google::fhir::stu3::proto::LanguageCode::MergeFrom(from.language());
  }
  if (from.has_text()) {
    mutable_text()->::google::fhir::stu3::proto::Narrative::MergeFrom(from.text());
  }
  if (from.has_clinical_status()) {
    mutable_clinical_status()->::google::fhir::stu3::proto::AllergyIntoleranceClinicalStatusCode::MergeFrom(from.clinical_status());
  }
  if (from.has_verification_status()) {
    mutable_verification_status()->::google::fhir::stu3::proto::AllergyIntoleranceVerificationStatusCode::MergeFrom(from.verification_status());
  }
  if (from.has_type()) {
    mutable_type()->::google::fhir::stu3::proto::AllergyIntoleranceTypeCode::MergeFrom(from.type());
  }
  if (from.has_criticality()) {
    mutable_criticality()->::google::fhir::stu3::proto::AllergyIntoleranceCriticalityCode::MergeFrom(from.criticality());
  }
  if (from.has_code()) {
    mutable_code()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.code());
  }
  if (from.has_patient()) {
    mutable_patient()->::google::fhir::stu3::proto::Reference::MergeFrom(from.patient());
  }
  if (from.has_onset()) {
    mutable_onset()->::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Onset::MergeFrom(from.onset());
  }
  if (from.has_asserted_date()) {
    mutable_asserted_date()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.asserted_date());
  }
  if (from.has_recorder()) {
    mutable_recorder()->::google::fhir::stu3::proto::Reference::MergeFrom(from.recorder());
  }
  if (from.has_asserter()) {
    mutable_asserter()->::google::fhir::stu3::proto::Reference::MergeFrom(from.asserter());
  }
  if (from.has_last_occurrence()) {
    mutable_last_occurrence()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.last_occurrence());
  }
}

void UsCoreAllergyintolerance::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreAllergyintolerance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreAllergyintolerance::CopyFrom(const UsCoreAllergyintolerance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreAllergyintolerance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreAllergyintolerance::IsInitialized() const {
  return true;
}

void UsCoreAllergyintolerance::Swap(UsCoreAllergyintolerance* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreAllergyintolerance::InternalSwap(UsCoreAllergyintolerance* other) {
  using std::swap;
  CastToBase(&contained_)->InternalSwap(CastToBase(&other->contained_));
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&identifier_)->InternalSwap(CastToBase(&other->identifier_));
  CastToBase(&category_)->InternalSwap(CastToBase(&other->category_));
  CastToBase(&note_)->InternalSwap(CastToBase(&other->note_));
  CastToBase(&reaction_)->InternalSwap(CastToBase(&other->reaction_));
  swap(id_, other->id_);
  swap(meta_, other->meta_);
  swap(implicit_rules_, other->implicit_rules_);
  swap(language_, other->language_);
  swap(text_, other->text_);
  swap(clinical_status_, other->clinical_status_);
  swap(verification_status_, other->verification_status_);
  swap(type_, other->type_);
  swap(criticality_, other->criticality_);
  swap(code_, other->code_);
  swap(patient_, other->patient_);
  swap(onset_, other->onset_);
  swap(asserted_date_, other->asserted_date_);
  swap(recorder_, other->recorder_);
  swap(asserter_, other->asserter_);
  swap(last_occurrence_, other->last_occurrence_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreAllergyintolerance::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PatientUSCoreBirthSexExtension::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_PatientUSCoreBirthSexExtension_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_PatientUSCoreBirthSexExtension_default_instance_._instance.get_mutable()->value_code_ = const_cast< ::google::fhir::stu3::uscore::UsCoreBirthSexCode*>(
      ::google::fhir::stu3::uscore::UsCoreBirthSexCode::internal_default_instance());
}
void PatientUSCoreBirthSexExtension::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void PatientUSCoreBirthSexExtension::clear_extension() {
  extension_.Clear();
}
void PatientUSCoreBirthSexExtension::clear_value_code() {
  if (GetArenaNoVirtual() == NULL && value_code_ != NULL) {
    delete value_code_;
  }
  value_code_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PatientUSCoreBirthSexExtension::kIdFieldNumber;
const int PatientUSCoreBirthSexExtension::kExtensionFieldNumber;
const int PatientUSCoreBirthSexExtension::kValueCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PatientUSCoreBirthSexExtension::PatientUSCoreBirthSexExtension()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_PatientUSCoreBirthSexExtension.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension)
}
PatientUSCoreBirthSexExtension::PatientUSCoreBirthSexExtension(const PatientUSCoreBirthSexExtension& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_value_code()) {
    value_code_ = new ::google::fhir::stu3::uscore::UsCoreBirthSexCode(*from.value_code_);
  } else {
    value_code_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension)
}

void PatientUSCoreBirthSexExtension::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_code_) -
      reinterpret_cast<char*>(&id_)) + sizeof(value_code_));
}

PatientUSCoreBirthSexExtension::~PatientUSCoreBirthSexExtension() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension)
  SharedDtor();
}

void PatientUSCoreBirthSexExtension::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete value_code_;
}

void PatientUSCoreBirthSexExtension::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PatientUSCoreBirthSexExtension::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PatientUSCoreBirthSexExtension& PatientUSCoreBirthSexExtension::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_PatientUSCoreBirthSexExtension.base);
  return *internal_default_instance();
}


void PatientUSCoreBirthSexExtension::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_code_ != NULL) {
    delete value_code_;
  }
  value_code_ = NULL;
  _internal_metadata_.Clear();
}

bool PatientUSCoreBirthSexExtension::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreBirthSexCode value_code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension)
  return false;
#undef DO_
}

void PatientUSCoreBirthSexExtension::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.uscore.UsCoreBirthSexCode value_code = 3;
  if (this->has_value_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_value_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension)
}

::google::protobuf::uint8* PatientUSCoreBirthSexExtension::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreBirthSexCode value_code = 3;
  if (this->has_value_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_value_code(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension)
  return target;
}

size_t PatientUSCoreBirthSexExtension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.uscore.UsCoreBirthSexCode value_code = 3;
  if (this->has_value_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_code_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PatientUSCoreBirthSexExtension::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension)
  GOOGLE_DCHECK_NE(&from, this);
  const PatientUSCoreBirthSexExtension* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PatientUSCoreBirthSexExtension>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension)
    MergeFrom(*source);
  }
}

void PatientUSCoreBirthSexExtension::MergeFrom(const PatientUSCoreBirthSexExtension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_value_code()) {
    mutable_value_code()->::google::fhir::stu3::uscore::UsCoreBirthSexCode::MergeFrom(from.value_code());
  }
}

void PatientUSCoreBirthSexExtension::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PatientUSCoreBirthSexExtension::CopyFrom(const PatientUSCoreBirthSexExtension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PatientUSCoreBirthSexExtension::IsInitialized() const {
  return true;
}

void PatientUSCoreBirthSexExtension::Swap(PatientUSCoreBirthSexExtension* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PatientUSCoreBirthSexExtension::InternalSwap(PatientUSCoreBirthSexExtension* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(value_code_, other->value_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PatientUSCoreBirthSexExtension::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreCareplan_Activity_Detail_Scheduled::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_Detail_Scheduled_default_instance_.timing_ = const_cast< ::google::fhir::stu3::proto::Timing*>(
      ::google::fhir::stu3::proto::Timing::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_Detail_Scheduled_default_instance_.period_ = const_cast< ::google::fhir::stu3::proto::Period*>(
      ::google::fhir::stu3::proto::Period::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_Detail_Scheduled_default_instance_.string_value_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
void UsCoreCareplan_Activity_Detail_Scheduled::set_allocated_timing(::google::fhir::stu3::proto::Timing* timing) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_scheduled();
  if (timing) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timing = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timing, submessage_arena);
    }
    set_has_timing();
    scheduled_.timing_ = timing;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled.timing)
}
void UsCoreCareplan_Activity_Detail_Scheduled::clear_timing() {
  if (has_timing()) {
    delete scheduled_.timing_;
    clear_has_scheduled();
  }
}
void UsCoreCareplan_Activity_Detail_Scheduled::set_allocated_period(::google::fhir::stu3::proto::Period* period) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_scheduled();
  if (period) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      period = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, period, submessage_arena);
    }
    set_has_period();
    scheduled_.period_ = period;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled.period)
}
void UsCoreCareplan_Activity_Detail_Scheduled::clear_period() {
  if (has_period()) {
    delete scheduled_.period_;
    clear_has_scheduled();
  }
}
void UsCoreCareplan_Activity_Detail_Scheduled::set_allocated_string_value(::google::fhir::stu3::proto::String* string_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_scheduled();
  if (string_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      string_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, string_value, submessage_arena);
    }
    set_has_string_value();
    scheduled_.string_value_ = string_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled.string_value)
}
void UsCoreCareplan_Activity_Detail_Scheduled::clear_string_value() {
  if (has_string_value()) {
    delete scheduled_.string_value_;
    clear_has_scheduled();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreCareplan_Activity_Detail_Scheduled::kTimingFieldNumber;
const int UsCoreCareplan_Activity_Detail_Scheduled::kPeriodFieldNumber;
const int UsCoreCareplan_Activity_Detail_Scheduled::kStringValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreCareplan_Activity_Detail_Scheduled::UsCoreCareplan_Activity_Detail_Scheduled()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCareplan_Activity_Detail_Scheduled.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled)
}
UsCoreCareplan_Activity_Detail_Scheduled::UsCoreCareplan_Activity_Detail_Scheduled(const UsCoreCareplan_Activity_Detail_Scheduled& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_scheduled();
  switch (from.scheduled_case()) {
    case kTiming: {
      mutable_timing()->::google::fhir::stu3::proto::Timing::MergeFrom(from.timing());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case kStringValue: {
      mutable_string_value()->::google::fhir::stu3::proto::String::MergeFrom(from.string_value());
      break;
    }
    case SCHEDULED_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled)
}

void UsCoreCareplan_Activity_Detail_Scheduled::SharedCtor() {
  clear_has_scheduled();
}

UsCoreCareplan_Activity_Detail_Scheduled::~UsCoreCareplan_Activity_Detail_Scheduled() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled)
  SharedDtor();
}

void UsCoreCareplan_Activity_Detail_Scheduled::SharedDtor() {
  if (has_scheduled()) {
    clear_scheduled();
  }
}

void UsCoreCareplan_Activity_Detail_Scheduled::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreCareplan_Activity_Detail_Scheduled::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreCareplan_Activity_Detail_Scheduled& UsCoreCareplan_Activity_Detail_Scheduled::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCareplan_Activity_Detail_Scheduled.base);
  return *internal_default_instance();
}


void UsCoreCareplan_Activity_Detail_Scheduled::clear_scheduled() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled)
  switch (scheduled_case()) {
    case kTiming: {
      delete scheduled_.timing_;
      break;
    }
    case kPeriod: {
      delete scheduled_.period_;
      break;
    }
    case kStringValue: {
      delete scheduled_.string_value_;
      break;
    }
    case SCHEDULED_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SCHEDULED_NOT_SET;
}


void UsCoreCareplan_Activity_Detail_Scheduled::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_scheduled();
  _internal_metadata_.Clear();
}

bool UsCoreCareplan_Activity_Detail_Scheduled::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Timing timing = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Period period = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String string_value = 3[json_name = "string"];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_string_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled)
  return false;
#undef DO_
}

void UsCoreCareplan_Activity_Detail_Scheduled::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Timing timing = 1;
  if (has_timing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_timing(), output);
  }

  // .google.fhir.stu3.proto.Period period = 2;
  if (has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_period(), output);
  }

  // .google.fhir.stu3.proto.String string_value = 3[json_name = "string"];
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_string_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled)
}

::google::protobuf::uint8* UsCoreCareplan_Activity_Detail_Scheduled::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Timing timing = 1;
  if (has_timing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_timing(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Period period = 2;
  if (has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_period(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String string_value = 3[json_name = "string"];
  if (has_string_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_string_value(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled)
  return target;
}

size_t UsCoreCareplan_Activity_Detail_Scheduled::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (scheduled_case()) {
    // .google.fhir.stu3.proto.Timing timing = 1;
    case kTiming: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *scheduled_.timing_);
      break;
    }
    // .google.fhir.stu3.proto.Period period = 2;
    case kPeriod: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *scheduled_.period_);
      break;
    }
    // .google.fhir.stu3.proto.String string_value = 3[json_name = "string"];
    case kStringValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *scheduled_.string_value_);
      break;
    }
    case SCHEDULED_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreCareplan_Activity_Detail_Scheduled::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreCareplan_Activity_Detail_Scheduled* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreCareplan_Activity_Detail_Scheduled>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled)
    MergeFrom(*source);
  }
}

void UsCoreCareplan_Activity_Detail_Scheduled::MergeFrom(const UsCoreCareplan_Activity_Detail_Scheduled& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.scheduled_case()) {
    case kTiming: {
      mutable_timing()->::google::fhir::stu3::proto::Timing::MergeFrom(from.timing());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case kStringValue: {
      mutable_string_value()->::google::fhir::stu3::proto::String::MergeFrom(from.string_value());
      break;
    }
    case SCHEDULED_NOT_SET: {
      break;
    }
  }
}

void UsCoreCareplan_Activity_Detail_Scheduled::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreCareplan_Activity_Detail_Scheduled::CopyFrom(const UsCoreCareplan_Activity_Detail_Scheduled& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreCareplan_Activity_Detail_Scheduled::IsInitialized() const {
  return true;
}

void UsCoreCareplan_Activity_Detail_Scheduled::Swap(UsCoreCareplan_Activity_Detail_Scheduled* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreCareplan_Activity_Detail_Scheduled::InternalSwap(UsCoreCareplan_Activity_Detail_Scheduled* other) {
  using std::swap;
  swap(scheduled_, other->scheduled_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreCareplan_Activity_Detail_Scheduled::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreCareplan_Activity_Detail_Product::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_Detail_Product_default_instance_.codeable_concept_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_Detail_Product_default_instance_.reference_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
}
void UsCoreCareplan_Activity_Detail_Product::set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_product();
  if (codeable_concept) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      codeable_concept = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, codeable_concept, submessage_arena);
    }
    set_has_codeable_concept();
    product_.codeable_concept_ = codeable_concept;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product.codeable_concept)
}
void UsCoreCareplan_Activity_Detail_Product::clear_codeable_concept() {
  if (has_codeable_concept()) {
    delete product_.codeable_concept_;
    clear_has_product();
  }
}
void UsCoreCareplan_Activity_Detail_Product::set_allocated_reference(::google::fhir::stu3::proto::Reference* reference) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_product();
  if (reference) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reference = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reference, submessage_arena);
    }
    set_has_reference();
    product_.reference_ = reference;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product.reference)
}
void UsCoreCareplan_Activity_Detail_Product::clear_reference() {
  if (has_reference()) {
    delete product_.reference_;
    clear_has_product();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreCareplan_Activity_Detail_Product::kCodeableConceptFieldNumber;
const int UsCoreCareplan_Activity_Detail_Product::kReferenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreCareplan_Activity_Detail_Product::UsCoreCareplan_Activity_Detail_Product()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCareplan_Activity_Detail_Product.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product)
}
UsCoreCareplan_Activity_Detail_Product::UsCoreCareplan_Activity_Detail_Product(const UsCoreCareplan_Activity_Detail_Product& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_product();
  switch (from.product_case()) {
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case PRODUCT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product)
}

void UsCoreCareplan_Activity_Detail_Product::SharedCtor() {
  clear_has_product();
}

UsCoreCareplan_Activity_Detail_Product::~UsCoreCareplan_Activity_Detail_Product() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product)
  SharedDtor();
}

void UsCoreCareplan_Activity_Detail_Product::SharedDtor() {
  if (has_product()) {
    clear_product();
  }
}

void UsCoreCareplan_Activity_Detail_Product::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreCareplan_Activity_Detail_Product::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreCareplan_Activity_Detail_Product& UsCoreCareplan_Activity_Detail_Product::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCareplan_Activity_Detail_Product.base);
  return *internal_default_instance();
}


void UsCoreCareplan_Activity_Detail_Product::clear_product() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product)
  switch (product_case()) {
    case kCodeableConcept: {
      delete product_.codeable_concept_;
      break;
    }
    case kReference: {
      delete product_.reference_;
      break;
    }
    case PRODUCT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PRODUCT_NOT_SET;
}


void UsCoreCareplan_Activity_Detail_Product::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_product();
  _internal_metadata_.Clear();
}

bool UsCoreCareplan_Activity_Detail_Product::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_codeable_concept()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Substance"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product)
  return false;
#undef DO_
}

void UsCoreCareplan_Activity_Detail_Product::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
  if (has_codeable_concept()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_codeable_concept(), output);
  }

  // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Substance"];
  if (has_reference()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_reference(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product)
}

::google::protobuf::uint8* UsCoreCareplan_Activity_Detail_Product::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
  if (has_codeable_concept()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_codeable_concept(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Substance"];
  if (has_reference()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_reference(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product)
  return target;
}

size_t UsCoreCareplan_Activity_Detail_Product::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (product_case()) {
    // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
    case kCodeableConcept: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *product_.codeable_concept_);
      break;
    }
    // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Substance"];
    case kReference: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *product_.reference_);
      break;
    }
    case PRODUCT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreCareplan_Activity_Detail_Product::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreCareplan_Activity_Detail_Product* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreCareplan_Activity_Detail_Product>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product)
    MergeFrom(*source);
  }
}

void UsCoreCareplan_Activity_Detail_Product::MergeFrom(const UsCoreCareplan_Activity_Detail_Product& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.product_case()) {
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case PRODUCT_NOT_SET: {
      break;
    }
  }
}

void UsCoreCareplan_Activity_Detail_Product::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreCareplan_Activity_Detail_Product::CopyFrom(const UsCoreCareplan_Activity_Detail_Product& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreCareplan_Activity_Detail_Product::IsInitialized() const {
  return true;
}

void UsCoreCareplan_Activity_Detail_Product::Swap(UsCoreCareplan_Activity_Detail_Product* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreCareplan_Activity_Detail_Product::InternalSwap(UsCoreCareplan_Activity_Detail_Product* other) {
  using std::swap;
  swap(product_, other->product_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreCareplan_Activity_Detail_Product::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreCareplan_Activity_Detail::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_Detail_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_Detail_default_instance_._instance.get_mutable()->category_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_Detail_default_instance_._instance.get_mutable()->definition_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_Detail_default_instance_._instance.get_mutable()->code_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_Detail_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::fhir::stu3::proto::CarePlanActivityStatusCode*>(
      ::google::fhir::stu3::proto::CarePlanActivityStatusCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_Detail_default_instance_._instance.get_mutable()->status_reason_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_Detail_default_instance_._instance.get_mutable()->prohibited_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_Detail_default_instance_._instance.get_mutable()->scheduled_ = const_cast< ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Scheduled*>(
      ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Scheduled::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_Detail_default_instance_._instance.get_mutable()->location_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_Detail_default_instance_._instance.get_mutable()->product_ = const_cast< ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Product*>(
      ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Product::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_Detail_default_instance_._instance.get_mutable()->daily_amount_ = const_cast< ::google::fhir::stu3::proto::SimpleQuantity*>(
      ::google::fhir::stu3::proto::SimpleQuantity::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_Detail_default_instance_._instance.get_mutable()->quantity_ = const_cast< ::google::fhir::stu3::proto::SimpleQuantity*>(
      ::google::fhir::stu3::proto::SimpleQuantity::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_Detail_default_instance_._instance.get_mutable()->description_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
void UsCoreCareplan_Activity_Detail::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreCareplan_Activity_Detail::clear_extension() {
  extension_.Clear();
}
void UsCoreCareplan_Activity_Detail::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreCareplan_Activity_Detail::clear_category() {
  if (GetArenaNoVirtual() == NULL && category_ != NULL) {
    delete category_;
  }
  category_ = NULL;
}
void UsCoreCareplan_Activity_Detail::clear_definition() {
  if (GetArenaNoVirtual() == NULL && definition_ != NULL) {
    delete definition_;
  }
  definition_ = NULL;
}
void UsCoreCareplan_Activity_Detail::clear_code() {
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
}
void UsCoreCareplan_Activity_Detail::clear_reason_code() {
  reason_code_.Clear();
}
void UsCoreCareplan_Activity_Detail::clear_reason_reference() {
  reason_reference_.Clear();
}
void UsCoreCareplan_Activity_Detail::clear_goal() {
  goal_.Clear();
}
void UsCoreCareplan_Activity_Detail::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
void UsCoreCareplan_Activity_Detail::clear_status_reason() {
  if (GetArenaNoVirtual() == NULL && status_reason_ != NULL) {
    delete status_reason_;
  }
  status_reason_ = NULL;
}
void UsCoreCareplan_Activity_Detail::clear_prohibited() {
  if (GetArenaNoVirtual() == NULL && prohibited_ != NULL) {
    delete prohibited_;
  }
  prohibited_ = NULL;
}
void UsCoreCareplan_Activity_Detail::clear_location() {
  if (GetArenaNoVirtual() == NULL && location_ != NULL) {
    delete location_;
  }
  location_ = NULL;
}
void UsCoreCareplan_Activity_Detail::clear_performer() {
  performer_.Clear();
}
void UsCoreCareplan_Activity_Detail::clear_daily_amount() {
  if (GetArenaNoVirtual() == NULL && daily_amount_ != NULL) {
    delete daily_amount_;
  }
  daily_amount_ = NULL;
}
void UsCoreCareplan_Activity_Detail::clear_quantity() {
  if (GetArenaNoVirtual() == NULL && quantity_ != NULL) {
    delete quantity_;
  }
  quantity_ = NULL;
}
void UsCoreCareplan_Activity_Detail::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreCareplan_Activity_Detail::kIdFieldNumber;
const int UsCoreCareplan_Activity_Detail::kExtensionFieldNumber;
const int UsCoreCareplan_Activity_Detail::kModifierExtensionFieldNumber;
const int UsCoreCareplan_Activity_Detail::kCategoryFieldNumber;
const int UsCoreCareplan_Activity_Detail::kDefinitionFieldNumber;
const int UsCoreCareplan_Activity_Detail::kCodeFieldNumber;
const int UsCoreCareplan_Activity_Detail::kReasonCodeFieldNumber;
const int UsCoreCareplan_Activity_Detail::kReasonReferenceFieldNumber;
const int UsCoreCareplan_Activity_Detail::kGoalFieldNumber;
const int UsCoreCareplan_Activity_Detail::kStatusFieldNumber;
const int UsCoreCareplan_Activity_Detail::kStatusReasonFieldNumber;
const int UsCoreCareplan_Activity_Detail::kProhibitedFieldNumber;
const int UsCoreCareplan_Activity_Detail::kScheduledFieldNumber;
const int UsCoreCareplan_Activity_Detail::kLocationFieldNumber;
const int UsCoreCareplan_Activity_Detail::kPerformerFieldNumber;
const int UsCoreCareplan_Activity_Detail::kProductFieldNumber;
const int UsCoreCareplan_Activity_Detail::kDailyAmountFieldNumber;
const int UsCoreCareplan_Activity_Detail::kQuantityFieldNumber;
const int UsCoreCareplan_Activity_Detail::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreCareplan_Activity_Detail::UsCoreCareplan_Activity_Detail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCareplan_Activity_Detail.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail)
}
UsCoreCareplan_Activity_Detail::UsCoreCareplan_Activity_Detail(const UsCoreCareplan_Activity_Detail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      reason_code_(from.reason_code_),
      reason_reference_(from.reason_reference_),
      goal_(from.goal_),
      performer_(from.performer_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_category()) {
    category_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.category_);
  } else {
    category_ = NULL;
  }
  if (from.has_definition()) {
    definition_ = new ::google::fhir::stu3::proto::Reference(*from.definition_);
  } else {
    definition_ = NULL;
  }
  if (from.has_code()) {
    code_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.code_);
  } else {
    code_ = NULL;
  }
  if (from.has_status()) {
    status_ = new ::google::fhir::stu3::proto::CarePlanActivityStatusCode(*from.status_);
  } else {
    status_ = NULL;
  }
  if (from.has_status_reason()) {
    status_reason_ = new ::google::fhir::stu3::proto::String(*from.status_reason_);
  } else {
    status_reason_ = NULL;
  }
  if (from.has_prohibited()) {
    prohibited_ = new ::google::fhir::stu3::proto::Boolean(*from.prohibited_);
  } else {
    prohibited_ = NULL;
  }
  if (from.has_scheduled()) {
    scheduled_ = new ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Scheduled(*from.scheduled_);
  } else {
    scheduled_ = NULL;
  }
  if (from.has_location()) {
    location_ = new ::google::fhir::stu3::proto::Reference(*from.location_);
  } else {
    location_ = NULL;
  }
  if (from.has_product()) {
    product_ = new ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Product(*from.product_);
  } else {
    product_ = NULL;
  }
  if (from.has_daily_amount()) {
    daily_amount_ = new ::google::fhir::stu3::proto::SimpleQuantity(*from.daily_amount_);
  } else {
    daily_amount_ = NULL;
  }
  if (from.has_quantity()) {
    quantity_ = new ::google::fhir::stu3::proto::SimpleQuantity(*from.quantity_);
  } else {
    quantity_ = NULL;
  }
  if (from.has_description()) {
    description_ = new ::google::fhir::stu3::proto::String(*from.description_);
  } else {
    description_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail)
}

void UsCoreCareplan_Activity_Detail::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&description_) -
      reinterpret_cast<char*>(&id_)) + sizeof(description_));
}

UsCoreCareplan_Activity_Detail::~UsCoreCareplan_Activity_Detail() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail)
  SharedDtor();
}

void UsCoreCareplan_Activity_Detail::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete category_;
  if (this != internal_default_instance()) delete definition_;
  if (this != internal_default_instance()) delete code_;
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete status_reason_;
  if (this != internal_default_instance()) delete prohibited_;
  if (this != internal_default_instance()) delete scheduled_;
  if (this != internal_default_instance()) delete location_;
  if (this != internal_default_instance()) delete product_;
  if (this != internal_default_instance()) delete daily_amount_;
  if (this != internal_default_instance()) delete quantity_;
  if (this != internal_default_instance()) delete description_;
}

void UsCoreCareplan_Activity_Detail::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreCareplan_Activity_Detail::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreCareplan_Activity_Detail& UsCoreCareplan_Activity_Detail::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCareplan_Activity_Detail.base);
  return *internal_default_instance();
}


void UsCoreCareplan_Activity_Detail::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  reason_code_.Clear();
  reason_reference_.Clear();
  goal_.Clear();
  performer_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && category_ != NULL) {
    delete category_;
  }
  category_ = NULL;
  if (GetArenaNoVirtual() == NULL && definition_ != NULL) {
    delete definition_;
  }
  definition_ = NULL;
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  if (GetArenaNoVirtual() == NULL && status_reason_ != NULL) {
    delete status_reason_;
  }
  status_reason_ = NULL;
  if (GetArenaNoVirtual() == NULL && prohibited_ != NULL) {
    delete prohibited_;
  }
  prohibited_ = NULL;
  if (GetArenaNoVirtual() == NULL && scheduled_ != NULL) {
    delete scheduled_;
  }
  scheduled_ = NULL;
  if (GetArenaNoVirtual() == NULL && location_ != NULL) {
    delete location_;
  }
  location_ = NULL;
  if (GetArenaNoVirtual() == NULL && product_ != NULL) {
    delete product_;
  }
  product_ = NULL;
  if (GetArenaNoVirtual() == NULL && daily_amount_ != NULL) {
    delete daily_amount_;
  }
  daily_amount_ = NULL;
  if (GetArenaNoVirtual() == NULL && quantity_ != NULL) {
    delete quantity_;
  }
  quantity_ = NULL;
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreCareplan_Activity_Detail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept category = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_category()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference definition = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/PlanDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ActivityDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Questionnaire"];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_definition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept code = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept reason_code = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_reason_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference reason_reference = 8 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition"];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_reason_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference goal = 9 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Goal"];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_goal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CarePlanActivityStatusCode status = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String status_reason = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status_reason()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Boolean prohibited = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_prohibited()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled scheduled = 13 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scheduled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference location = 14 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Location"];
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference performer = 15 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CareTeam"];
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_performer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product product = 16 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_product()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.SimpleQuantity daily_amount = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_daily_amount()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.SimpleQuantity quantity = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_quantity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String description = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail)
  return false;
#undef DO_
}

void UsCoreCareplan_Activity_Detail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.CodeableConcept category = 4;
  if (this->has_category()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_category(), output);
  }

  // .google.fhir.stu3.proto.Reference definition = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/PlanDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ActivityDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Questionnaire"];
  if (this->has_definition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_definition(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 6;
  if (this->has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_code(), output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept reason_code = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reason_code_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->reason_code(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference reason_reference = 8 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reason_reference_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->reason_reference(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference goal = 9 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Goal"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->goal_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->goal(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.CarePlanActivityStatusCode status = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_status(), output);
  }

  // .google.fhir.stu3.proto.String status_reason = 11;
  if (this->has_status_reason()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_status_reason(), output);
  }

  // .google.fhir.stu3.proto.Boolean prohibited = 12;
  if (this->has_prohibited()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_prohibited(), output);
  }

  // .google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled scheduled = 13 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_scheduled()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_scheduled(), output);
  }

  // .google.fhir.stu3.proto.Reference location = 14 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Location"];
  if (this->has_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_location(), output);
  }

  // repeated .google.fhir.stu3.proto.Reference performer = 15 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CareTeam"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->performer_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->performer(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product product = 16 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_product()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_product(), output);
  }

  // .google.fhir.stu3.proto.SimpleQuantity daily_amount = 17;
  if (this->has_daily_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_daily_amount(), output);
  }

  // .google.fhir.stu3.proto.SimpleQuantity quantity = 18;
  if (this->has_quantity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_quantity(), output);
  }

  // .google.fhir.stu3.proto.String description = 19;
  if (this->has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_description(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail)
}

::google::protobuf::uint8* UsCoreCareplan_Activity_Detail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept category = 4;
  if (this->has_category()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_category(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference definition = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/PlanDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ActivityDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Questionnaire"];
  if (this->has_definition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_definition(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 6;
  if (this->has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_code(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept reason_code = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reason_code_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->reason_code(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference reason_reference = 8 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reason_reference_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->reason_reference(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference goal = 9 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Goal"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->goal_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->goal(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.CarePlanActivityStatusCode status = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_status(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String status_reason = 11;
  if (this->has_status_reason()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_status_reason(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Boolean prohibited = 12;
  if (this->has_prohibited()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_prohibited(), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled scheduled = 13 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_scheduled()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_scheduled(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference location = 14 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Location"];
  if (this->has_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_location(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference performer = 15 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CareTeam"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->performer_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->performer(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product product = 16 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_product()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_product(), deterministic, target);
  }

  // .google.fhir.stu3.proto.SimpleQuantity daily_amount = 17;
  if (this->has_daily_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_daily_amount(), deterministic, target);
  }

  // .google.fhir.stu3.proto.SimpleQuantity quantity = 18;
  if (this->has_quantity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_quantity(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String description = 19;
  if (this->has_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_description(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail)
  return target;
}

size_t UsCoreCareplan_Activity_Detail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept reason_code = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->reason_code_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reason_code(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference reason_reference = 8 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition"];
  {
    unsigned int count = static_cast<unsigned int>(this->reason_reference_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reason_reference(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference goal = 9 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Goal"];
  {
    unsigned int count = static_cast<unsigned int>(this->goal_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->goal(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference performer = 15 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CareTeam"];
  {
    unsigned int count = static_cast<unsigned int>(this->performer_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->performer(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.CodeableConcept category = 4;
  if (this->has_category()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *category_);
  }

  // .google.fhir.stu3.proto.Reference definition = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/PlanDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ActivityDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Questionnaire"];
  if (this->has_definition()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *definition_);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 6;
  if (this->has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *code_);
  }

  // .google.fhir.stu3.proto.CarePlanActivityStatusCode status = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .google.fhir.stu3.proto.String status_reason = 11;
  if (this->has_status_reason()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_reason_);
  }

  // .google.fhir.stu3.proto.Boolean prohibited = 12;
  if (this->has_prohibited()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *prohibited_);
  }

  // .google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled scheduled = 13 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_scheduled()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *scheduled_);
  }

  // .google.fhir.stu3.proto.Reference location = 14 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Location"];
  if (this->has_location()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *location_);
  }

  // .google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product product = 16 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_product()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *product_);
  }

  // .google.fhir.stu3.proto.SimpleQuantity daily_amount = 17;
  if (this->has_daily_amount()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *daily_amount_);
  }

  // .google.fhir.stu3.proto.SimpleQuantity quantity = 18;
  if (this->has_quantity()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *quantity_);
  }

  // .google.fhir.stu3.proto.String description = 19;
  if (this->has_description()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *description_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreCareplan_Activity_Detail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreCareplan_Activity_Detail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreCareplan_Activity_Detail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail)
    MergeFrom(*source);
  }
}

void UsCoreCareplan_Activity_Detail::MergeFrom(const UsCoreCareplan_Activity_Detail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  reason_code_.MergeFrom(from.reason_code_);
  reason_reference_.MergeFrom(from.reason_reference_);
  goal_.MergeFrom(from.goal_);
  performer_.MergeFrom(from.performer_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_category()) {
    mutable_category()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.category());
  }
  if (from.has_definition()) {
    mutable_definition()->::google::fhir::stu3::proto::Reference::MergeFrom(from.definition());
  }
  if (from.has_code()) {
    mutable_code()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.code());
  }
  if (from.has_status()) {
    mutable_status()->::google::fhir::stu3::proto::CarePlanActivityStatusCode::MergeFrom(from.status());
  }
  if (from.has_status_reason()) {
    mutable_status_reason()->::google::fhir::stu3::proto::String::MergeFrom(from.status_reason());
  }
  if (from.has_prohibited()) {
    mutable_prohibited()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.prohibited());
  }
  if (from.has_scheduled()) {
    mutable_scheduled()->::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Scheduled::MergeFrom(from.scheduled());
  }
  if (from.has_location()) {
    mutable_location()->::google::fhir::stu3::proto::Reference::MergeFrom(from.location());
  }
  if (from.has_product()) {
    mutable_product()->::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Product::MergeFrom(from.product());
  }
  if (from.has_daily_amount()) {
    mutable_daily_amount()->::google::fhir::stu3::proto::SimpleQuantity::MergeFrom(from.daily_amount());
  }
  if (from.has_quantity()) {
    mutable_quantity()->::google::fhir::stu3::proto::SimpleQuantity::MergeFrom(from.quantity());
  }
  if (from.has_description()) {
    mutable_description()->::google::fhir::stu3::proto::String::MergeFrom(from.description());
  }
}

void UsCoreCareplan_Activity_Detail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreCareplan_Activity_Detail::CopyFrom(const UsCoreCareplan_Activity_Detail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreCareplan_Activity_Detail::IsInitialized() const {
  return true;
}

void UsCoreCareplan_Activity_Detail::Swap(UsCoreCareplan_Activity_Detail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreCareplan_Activity_Detail::InternalSwap(UsCoreCareplan_Activity_Detail* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&reason_code_)->InternalSwap(CastToBase(&other->reason_code_));
  CastToBase(&reason_reference_)->InternalSwap(CastToBase(&other->reason_reference_));
  CastToBase(&goal_)->InternalSwap(CastToBase(&other->goal_));
  CastToBase(&performer_)->InternalSwap(CastToBase(&other->performer_));
  swap(id_, other->id_);
  swap(category_, other->category_);
  swap(definition_, other->definition_);
  swap(code_, other->code_);
  swap(status_, other->status_);
  swap(status_reason_, other->status_reason_);
  swap(prohibited_, other->prohibited_);
  swap(scheduled_, other->scheduled_);
  swap(location_, other->location_);
  swap(product_, other->product_);
  swap(daily_amount_, other->daily_amount_);
  swap(quantity_, other->quantity_);
  swap(description_, other->description_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreCareplan_Activity_Detail::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreCareplan_Activity::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_default_instance_._instance.get_mutable()->reference_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_default_instance_._instance.get_mutable()->detail_ = const_cast< ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail*>(
      ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail::internal_default_instance());
}
void UsCoreCareplan_Activity::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreCareplan_Activity::clear_extension() {
  extension_.Clear();
}
void UsCoreCareplan_Activity::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreCareplan_Activity::clear_outcome_codeable_concept() {
  outcome_codeable_concept_.Clear();
}
void UsCoreCareplan_Activity::clear_outcome_reference() {
  outcome_reference_.Clear();
}
void UsCoreCareplan_Activity::clear_progress() {
  progress_.Clear();
}
void UsCoreCareplan_Activity::clear_reference() {
  if (GetArenaNoVirtual() == NULL && reference_ != NULL) {
    delete reference_;
  }
  reference_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreCareplan_Activity::kIdFieldNumber;
const int UsCoreCareplan_Activity::kExtensionFieldNumber;
const int UsCoreCareplan_Activity::kModifierExtensionFieldNumber;
const int UsCoreCareplan_Activity::kOutcomeCodeableConceptFieldNumber;
const int UsCoreCareplan_Activity::kOutcomeReferenceFieldNumber;
const int UsCoreCareplan_Activity::kProgressFieldNumber;
const int UsCoreCareplan_Activity::kReferenceFieldNumber;
const int UsCoreCareplan_Activity::kDetailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreCareplan_Activity::UsCoreCareplan_Activity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCareplan_Activity.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreCareplan.Activity)
}
UsCoreCareplan_Activity::UsCoreCareplan_Activity(const UsCoreCareplan_Activity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      outcome_codeable_concept_(from.outcome_codeable_concept_),
      outcome_reference_(from.outcome_reference_),
      progress_(from.progress_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_reference()) {
    reference_ = new ::google::fhir::stu3::proto::Reference(*from.reference_);
  } else {
    reference_ = NULL;
  }
  if (from.has_detail()) {
    detail_ = new ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail(*from.detail_);
  } else {
    detail_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreCareplan.Activity)
}

void UsCoreCareplan_Activity::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&detail_) -
      reinterpret_cast<char*>(&id_)) + sizeof(detail_));
}

UsCoreCareplan_Activity::~UsCoreCareplan_Activity() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreCareplan.Activity)
  SharedDtor();
}

void UsCoreCareplan_Activity::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete reference_;
  if (this != internal_default_instance()) delete detail_;
}

void UsCoreCareplan_Activity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreCareplan_Activity::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreCareplan_Activity& UsCoreCareplan_Activity::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCareplan_Activity.base);
  return *internal_default_instance();
}


void UsCoreCareplan_Activity::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  outcome_codeable_concept_.Clear();
  outcome_reference_.Clear();
  progress_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && reference_ != NULL) {
    delete reference_;
  }
  reference_ = NULL;
  if (GetArenaNoVirtual() == NULL && detail_ != NULL) {
    delete detail_;
  }
  detail_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreCareplan_Activity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept outcome_codeable_concept = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_outcome_codeable_concept()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference outcome_reference = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_outcome_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Annotation progress = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_progress()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference reference = 7 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Appointment", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CommunicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DeviceRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/NutritionOrder", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Task", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/VisionPrescription", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RequestGroup"];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail detail = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_detail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreCareplan.Activity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreCareplan.Activity)
  return false;
#undef DO_
}

void UsCoreCareplan_Activity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept outcome_codeable_concept = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->outcome_codeable_concept_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->outcome_codeable_concept(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference outcome_reference = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->outcome_reference_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->outcome_reference(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Annotation progress = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->progress_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->progress(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Reference reference = 7 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Appointment", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CommunicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DeviceRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/NutritionOrder", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Task", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/VisionPrescription", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RequestGroup"];
  if (this->has_reference()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_reference(), output);
  }

  // .google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail detail = 8;
  if (this->has_detail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_detail(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreCareplan.Activity)
}

::google::protobuf::uint8* UsCoreCareplan_Activity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept outcome_codeable_concept = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->outcome_codeable_concept_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->outcome_codeable_concept(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference outcome_reference = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->outcome_reference_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->outcome_reference(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Annotation progress = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->progress_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->progress(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference reference = 7 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Appointment", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CommunicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DeviceRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/NutritionOrder", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Task", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/VisionPrescription", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RequestGroup"];
  if (this->has_reference()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_reference(), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail detail = 8;
  if (this->has_detail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_detail(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreCareplan.Activity)
  return target;
}

size_t UsCoreCareplan_Activity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept outcome_codeable_concept = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->outcome_codeable_concept_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->outcome_codeable_concept(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference outcome_reference = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
  {
    unsigned int count = static_cast<unsigned int>(this->outcome_reference_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->outcome_reference(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Annotation progress = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->progress_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->progress(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Reference reference = 7 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Appointment", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CommunicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DeviceRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/NutritionOrder", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Task", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/VisionPrescription", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RequestGroup"];
  if (this->has_reference()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *reference_);
  }

  // .google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail detail = 8;
  if (this->has_detail()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *detail_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreCareplan_Activity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreCareplan_Activity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreCareplan_Activity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreCareplan.Activity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreCareplan.Activity)
    MergeFrom(*source);
  }
}

void UsCoreCareplan_Activity::MergeFrom(const UsCoreCareplan_Activity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  outcome_codeable_concept_.MergeFrom(from.outcome_codeable_concept_);
  outcome_reference_.MergeFrom(from.outcome_reference_);
  progress_.MergeFrom(from.progress_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_reference()) {
    mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
  }
  if (from.has_detail()) {
    mutable_detail()->::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail::MergeFrom(from.detail());
  }
}

void UsCoreCareplan_Activity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreCareplan_Activity::CopyFrom(const UsCoreCareplan_Activity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreCareplan.Activity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreCareplan_Activity::IsInitialized() const {
  return true;
}

void UsCoreCareplan_Activity::Swap(UsCoreCareplan_Activity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreCareplan_Activity::InternalSwap(UsCoreCareplan_Activity* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&outcome_codeable_concept_)->InternalSwap(CastToBase(&other->outcome_codeable_concept_));
  CastToBase(&outcome_reference_)->InternalSwap(CastToBase(&other->outcome_reference_));
  CastToBase(&progress_)->InternalSwap(CastToBase(&other->progress_));
  swap(id_, other->id_);
  swap(reference_, other->reference_);
  swap(detail_, other->detail_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreCareplan_Activity::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreCareplan::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreCareplan_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::Id*>(
      ::google::fhir::stu3::proto::Id::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareplan_default_instance_._instance.get_mutable()->meta_ = const_cast< ::google::fhir::stu3::proto::Meta*>(
      ::google::fhir::stu3::proto::Meta::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareplan_default_instance_._instance.get_mutable()->implicit_rules_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareplan_default_instance_._instance.get_mutable()->language_ = const_cast< ::google::fhir::stu3::proto::LanguageCode*>(
      ::google::fhir::stu3::proto::LanguageCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareplan_default_instance_._instance.get_mutable()->text_ = const_cast< ::google::fhir::stu3::proto::Narrative*>(
      ::google::fhir::stu3::proto::Narrative::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareplan_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::fhir::stu3::proto::CarePlanStatusCode*>(
      ::google::fhir::stu3::proto::CarePlanStatusCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareplan_default_instance_._instance.get_mutable()->intent_ = const_cast< ::google::fhir::stu3::proto::CarePlanIntentCode*>(
      ::google::fhir::stu3::proto::CarePlanIntentCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareplan_default_instance_._instance.get_mutable()->title_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareplan_default_instance_._instance.get_mutable()->description_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareplan_default_instance_._instance.get_mutable()->subject_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareplan_default_instance_._instance.get_mutable()->context_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareplan_default_instance_._instance.get_mutable()->period_ = const_cast< ::google::fhir::stu3::proto::Period*>(
      ::google::fhir::stu3::proto::Period::internal_default_instance());
}
void UsCoreCareplan::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreCareplan::clear_meta() {
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
}
void UsCoreCareplan::clear_implicit_rules() {
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
}
void UsCoreCareplan::clear_language() {
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
}
void UsCoreCareplan::clear_text() {
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
}
void UsCoreCareplan::clear_contained() {
  contained_.Clear();
}
void UsCoreCareplan::clear_extension() {
  extension_.Clear();
}
void UsCoreCareplan::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreCareplan::clear_identifier() {
  identifier_.Clear();
}
void UsCoreCareplan::clear_definition() {
  definition_.Clear();
}
void UsCoreCareplan::clear_based_on() {
  based_on_.Clear();
}
void UsCoreCareplan::clear_replaces() {
  replaces_.Clear();
}
void UsCoreCareplan::clear_part_of() {
  part_of_.Clear();
}
void UsCoreCareplan::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
void UsCoreCareplan::clear_intent() {
  if (GetArenaNoVirtual() == NULL && intent_ != NULL) {
    delete intent_;
  }
  intent_ = NULL;
}
void UsCoreCareplan::clear_category() {
  category_.Clear();
}
void UsCoreCareplan::clear_title() {
  if (GetArenaNoVirtual() == NULL && title_ != NULL) {
    delete title_;
  }
  title_ = NULL;
}
void UsCoreCareplan::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
}
void UsCoreCareplan::clear_subject() {
  if (GetArenaNoVirtual() == NULL && subject_ != NULL) {
    delete subject_;
  }
  subject_ = NULL;
}
void UsCoreCareplan::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
}
void UsCoreCareplan::clear_period() {
  if (GetArenaNoVirtual() == NULL && period_ != NULL) {
    delete period_;
  }
  period_ = NULL;
}
void UsCoreCareplan::clear_author() {
  author_.Clear();
}
void UsCoreCareplan::clear_care_team() {
  care_team_.Clear();
}
void UsCoreCareplan::clear_addresses() {
  addresses_.Clear();
}
void UsCoreCareplan::clear_supporting_info() {
  supporting_info_.Clear();
}
void UsCoreCareplan::clear_goal() {
  goal_.Clear();
}
void UsCoreCareplan::clear_note() {
  note_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreCareplan::kIdFieldNumber;
const int UsCoreCareplan::kMetaFieldNumber;
const int UsCoreCareplan::kImplicitRulesFieldNumber;
const int UsCoreCareplan::kLanguageFieldNumber;
const int UsCoreCareplan::kTextFieldNumber;
const int UsCoreCareplan::kContainedFieldNumber;
const int UsCoreCareplan::kExtensionFieldNumber;
const int UsCoreCareplan::kModifierExtensionFieldNumber;
const int UsCoreCareplan::kIdentifierFieldNumber;
const int UsCoreCareplan::kDefinitionFieldNumber;
const int UsCoreCareplan::kBasedOnFieldNumber;
const int UsCoreCareplan::kReplacesFieldNumber;
const int UsCoreCareplan::kPartOfFieldNumber;
const int UsCoreCareplan::kStatusFieldNumber;
const int UsCoreCareplan::kIntentFieldNumber;
const int UsCoreCareplan::kCategoryFieldNumber;
const int UsCoreCareplan::kTitleFieldNumber;
const int UsCoreCareplan::kDescriptionFieldNumber;
const int UsCoreCareplan::kSubjectFieldNumber;
const int UsCoreCareplan::kContextFieldNumber;
const int UsCoreCareplan::kPeriodFieldNumber;
const int UsCoreCareplan::kAuthorFieldNumber;
const int UsCoreCareplan::kCareTeamFieldNumber;
const int UsCoreCareplan::kAddressesFieldNumber;
const int UsCoreCareplan::kSupportingInfoFieldNumber;
const int UsCoreCareplan::kGoalFieldNumber;
const int UsCoreCareplan::kActivityFieldNumber;
const int UsCoreCareplan::kNoteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreCareplan::UsCoreCareplan()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCareplan.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreCareplan)
}
UsCoreCareplan::UsCoreCareplan(const UsCoreCareplan& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      contained_(from.contained_),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      identifier_(from.identifier_),
      definition_(from.definition_),
      based_on_(from.based_on_),
      replaces_(from.replaces_),
      part_of_(from.part_of_),
      category_(from.category_),
      author_(from.author_),
      care_team_(from.care_team_),
      addresses_(from.addresses_),
      supporting_info_(from.supporting_info_),
      goal_(from.goal_),
      activity_(from.activity_),
      note_(from.note_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::Id(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_meta()) {
    meta_ = new ::google::fhir::stu3::proto::Meta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  if (from.has_implicit_rules()) {
    implicit_rules_ = new ::google::fhir::stu3::proto::Uri(*from.implicit_rules_);
  } else {
    implicit_rules_ = NULL;
  }
  if (from.has_language()) {
    language_ = new ::google::fhir::stu3::proto::LanguageCode(*from.language_);
  } else {
    language_ = NULL;
  }
  if (from.has_text()) {
    text_ = new ::google::fhir::stu3::proto::Narrative(*from.text_);
  } else {
    text_ = NULL;
  }
  if (from.has_status()) {
    status_ = new ::google::fhir::stu3::proto::CarePlanStatusCode(*from.status_);
  } else {
    status_ = NULL;
  }
  if (from.has_intent()) {
    intent_ = new ::google::fhir::stu3::proto::CarePlanIntentCode(*from.intent_);
  } else {
    intent_ = NULL;
  }
  if (from.has_title()) {
    title_ = new ::google::fhir::stu3::proto::String(*from.title_);
  } else {
    title_ = NULL;
  }
  if (from.has_description()) {
    description_ = new ::google::fhir::stu3::proto::String(*from.description_);
  } else {
    description_ = NULL;
  }
  if (from.has_subject()) {
    subject_ = new ::google::fhir::stu3::proto::Reference(*from.subject_);
  } else {
    subject_ = NULL;
  }
  if (from.has_context()) {
    context_ = new ::google::fhir::stu3::proto::Reference(*from.context_);
  } else {
    context_ = NULL;
  }
  if (from.has_period()) {
    period_ = new ::google::fhir::stu3::proto::Period(*from.period_);
  } else {
    period_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreCareplan)
}

void UsCoreCareplan::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&period_) -
      reinterpret_cast<char*>(&id_)) + sizeof(period_));
}

UsCoreCareplan::~UsCoreCareplan() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreCareplan)
  SharedDtor();
}

void UsCoreCareplan::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete implicit_rules_;
  if (this != internal_default_instance()) delete language_;
  if (this != internal_default_instance()) delete text_;
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete intent_;
  if (this != internal_default_instance()) delete title_;
  if (this != internal_default_instance()) delete description_;
  if (this != internal_default_instance()) delete subject_;
  if (this != internal_default_instance()) delete context_;
  if (this != internal_default_instance()) delete period_;
}

void UsCoreCareplan::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreCareplan::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreCareplan& UsCoreCareplan::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCareplan.base);
  return *internal_default_instance();
}


void UsCoreCareplan::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreCareplan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contained_.Clear();
  extension_.Clear();
  modifier_extension_.Clear();
  identifier_.Clear();
  definition_.Clear();
  based_on_.Clear();
  replaces_.Clear();
  part_of_.Clear();
  category_.Clear();
  author_.Clear();
  care_team_.Clear();
  addresses_.Clear();
  supporting_info_.Clear();
  goal_.Clear();
  activity_.Clear();
  note_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  if (GetArenaNoVirtual() == NULL && intent_ != NULL) {
    delete intent_;
  }
  intent_ = NULL;
  if (GetArenaNoVirtual() == NULL && title_ != NULL) {
    delete title_;
  }
  title_ = NULL;
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
  if (GetArenaNoVirtual() == NULL && subject_ != NULL) {
    delete subject_;
  }
  subject_ = NULL;
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  if (GetArenaNoVirtual() == NULL && period_ != NULL) {
    delete period_;
  }
  period_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreCareplan::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreCareplan)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Id id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Meta meta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri implicit_rules = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_implicit_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.LanguageCode language = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_language()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Narrative text = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_contained()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference definition = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/PlanDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Questionnaire"];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_definition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference based_on = 11 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan"];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_based_on()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference replaces = 12 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan"];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_replaces()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference part_of = 13 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan"];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_part_of()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CarePlanStatusCode status = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CarePlanIntentCode intent = 15 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_intent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept category = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_category()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String title = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_title()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String description = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference subject = 19 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_subject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference context = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Period period = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference author = 22 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CareTeam"];
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_author()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference care_team = 23 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CareTeam"];
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_care_team()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference addresses = 24 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition"];
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_addresses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference supporting_info = 25 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_supporting_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference goal = 26 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Goal"];
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_goal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.uscore.UsCoreCareplan.Activity activity = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_activity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Annotation note = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_note()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreCareplan)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreCareplan)
  return false;
#undef DO_
}

void UsCoreCareplan::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreCareplan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_meta(), output);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_implicit_rules(), output);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_language(), output);
  }

  // .google.fhir.stu3.proto.Narrative text = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_text(), output);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->contained(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->identifier(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference definition = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/PlanDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Questionnaire"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->definition_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->definition(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference based_on = 11 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->based_on_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->based_on(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference replaces = 12 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->replaces_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->replaces(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference part_of = 13 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->part_of_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13,
      this->part_of(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.CarePlanStatusCode status = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_status(), output);
  }

  // .google.fhir.stu3.proto.CarePlanIntentCode intent = 15 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_intent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_intent(), output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept category = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->category_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16,
      this->category(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.String title = 17;
  if (this->has_title()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_title(), output);
  }

  // .google.fhir.stu3.proto.String description = 18;
  if (this->has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_description(), output);
  }

  // .google.fhir.stu3.proto.Reference subject = 19 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_subject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_subject(), output);
  }

  // .google.fhir.stu3.proto.Reference context = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_context(), output);
  }

  // .google.fhir.stu3.proto.Period period = 21;
  if (this->has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_period(), output);
  }

  // repeated .google.fhir.stu3.proto.Reference author = 22 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CareTeam"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->author_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22,
      this->author(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference care_team = 23 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CareTeam"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->care_team_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23,
      this->care_team(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference addresses = 24 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->addresses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24,
      this->addresses(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference supporting_info = 25 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->supporting_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25,
      this->supporting_info(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference goal = 26 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Goal"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->goal_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26,
      this->goal(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreCareplan.Activity activity = 27;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->activity_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27,
      this->activity(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 28;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->note_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28,
      this->note(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreCareplan)
}

::google::protobuf::uint8* UsCoreCareplan::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreCareplan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_meta(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_implicit_rules(), deterministic, target);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_language(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Narrative text = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_text(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->contained(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->identifier(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference definition = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/PlanDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Questionnaire"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->definition_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->definition(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference based_on = 11 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->based_on_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->based_on(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference replaces = 12 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->replaces_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->replaces(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference part_of = 13 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->part_of_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->part_of(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.CarePlanStatusCode status = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_status(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CarePlanIntentCode intent = 15 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_intent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_intent(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept category = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->category_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->category(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.String title = 17;
  if (this->has_title()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_title(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String description = 18;
  if (this->has_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_description(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference subject = 19 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_subject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_subject(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference context = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_context(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Period period = 21;
  if (this->has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_period(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference author = 22 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CareTeam"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->author_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->author(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference care_team = 23 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CareTeam"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->care_team_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->care_team(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference addresses = 24 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->addresses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->addresses(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference supporting_info = 25 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->supporting_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->supporting_info(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference goal = 26 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Goal"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->goal_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, this->goal(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreCareplan.Activity activity = 27;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->activity_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, this->activity(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 28;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->note_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, this->note(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreCareplan)
  return target;
}

size_t UsCoreCareplan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreCareplan)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->contained_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->contained(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->identifier_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->identifier(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference definition = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/PlanDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Questionnaire"];
  {
    unsigned int count = static_cast<unsigned int>(this->definition_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->definition(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference based_on = 11 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan"];
  {
    unsigned int count = static_cast<unsigned int>(this->based_on_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->based_on(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference replaces = 12 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan"];
  {
    unsigned int count = static_cast<unsigned int>(this->replaces_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->replaces(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference part_of = 13 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan"];
  {
    unsigned int count = static_cast<unsigned int>(this->part_of_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->part_of(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept category = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  {
    unsigned int count = static_cast<unsigned int>(this->category_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->category(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference author = 22 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CareTeam"];
  {
    unsigned int count = static_cast<unsigned int>(this->author_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->author(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference care_team = 23 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CareTeam"];
  {
    unsigned int count = static_cast<unsigned int>(this->care_team_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->care_team(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference addresses = 24 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition"];
  {
    unsigned int count = static_cast<unsigned int>(this->addresses_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->addresses(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference supporting_info = 25 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
  {
    unsigned int count = static_cast<unsigned int>(this->supporting_info_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->supporting_info(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference goal = 26 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Goal"];
  {
    unsigned int count = static_cast<unsigned int>(this->goal_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->goal(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.uscore.UsCoreCareplan.Activity activity = 27;
  {
    unsigned int count = static_cast<unsigned int>(this->activity_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->activity(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 28;
  {
    unsigned int count = static_cast<unsigned int>(this->note_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->note(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *implicit_rules_);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *language_);
  }

  // .google.fhir.stu3.proto.Narrative text = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *text_);
  }

  // .google.fhir.stu3.proto.CarePlanStatusCode status = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .google.fhir.stu3.proto.CarePlanIntentCode intent = 15 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_intent()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *intent_);
  }

  // .google.fhir.stu3.proto.String title = 17;
  if (this->has_title()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *title_);
  }

  // .google.fhir.stu3.proto.String description = 18;
  if (this->has_description()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *description_);
  }

  // .google.fhir.stu3.proto.Reference subject = 19 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_subject()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *subject_);
  }

  // .google.fhir.stu3.proto.Reference context = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  if (this->has_context()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  // .google.fhir.stu3.proto.Period period = 21;
  if (this->has_period()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *period_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreCareplan::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreCareplan)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreCareplan* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreCareplan>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreCareplan)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreCareplan)
    MergeFrom(*source);
  }
}

void UsCoreCareplan::MergeFrom(const UsCoreCareplan& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreCareplan)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contained_.MergeFrom(from.contained_);
  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  identifier_.MergeFrom(from.identifier_);
  definition_.MergeFrom(from.definition_);
  based_on_.MergeFrom(from.based_on_);
  replaces_.MergeFrom(from.replaces_);
  part_of_.MergeFrom(from.part_of_);
  category_.MergeFrom(from.category_);
  author_.MergeFrom(from.author_);
  care_team_.MergeFrom(from.care_team_);
  addresses_.MergeFrom(from.addresses_);
  supporting_info_.MergeFrom(from.supporting_info_);
  goal_.MergeFrom(from.goal_);
  activity_.MergeFrom(from.activity_);
  note_.MergeFrom(from.note_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::Id::MergeFrom(from.id());
  }
  if (from.has_meta()) {
    mutable_meta()->::google::fhir::stu3::proto::Meta::MergeFrom(from.meta());
  }
  if (from.has_implicit_rules()) {
    mutable_implicit_rules()->::google::fhir::stu3::proto::Uri::MergeFrom(from.implicit_rules());
  }
  if (from.has_language()) {
    mutable_language()->::google::fhir::stu3::proto::LanguageCode::MergeFrom(from.language());
  }
  if (from.has_text()) {
    mutable_text()->::google::fhir::stu3::proto::Narrative::MergeFrom(from.text());
  }
  if (from.has_status()) {
    mutable_status()->::google::fhir::stu3::proto::CarePlanStatusCode::MergeFrom(from.status());
  }
  if (from.has_intent()) {
    mutable_intent()->::google::fhir::stu3::proto::CarePlanIntentCode::MergeFrom(from.intent());
  }
  if (from.has_title()) {
    mutable_title()->::google::fhir::stu3::proto::String::MergeFrom(from.title());
  }
  if (from.has_description()) {
    mutable_description()->::google::fhir::stu3::proto::String::MergeFrom(from.description());
  }
  if (from.has_subject()) {
    mutable_subject()->::google::fhir::stu3::proto::Reference::MergeFrom(from.subject());
  }
  if (from.has_context()) {
    mutable_context()->::google::fhir::stu3::proto::Reference::MergeFrom(from.context());
  }
  if (from.has_period()) {
    mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
  }
}

void UsCoreCareplan::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreCareplan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreCareplan::CopyFrom(const UsCoreCareplan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreCareplan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreCareplan::IsInitialized() const {
  return true;
}

void UsCoreCareplan::Swap(UsCoreCareplan* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreCareplan::InternalSwap(UsCoreCareplan* other) {
  using std::swap;
  CastToBase(&contained_)->InternalSwap(CastToBase(&other->contained_));
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&identifier_)->InternalSwap(CastToBase(&other->identifier_));
  CastToBase(&definition_)->InternalSwap(CastToBase(&other->definition_));
  CastToBase(&based_on_)->InternalSwap(CastToBase(&other->based_on_));
  CastToBase(&replaces_)->InternalSwap(CastToBase(&other->replaces_));
  CastToBase(&part_of_)->InternalSwap(CastToBase(&other->part_of_));
  CastToBase(&category_)->InternalSwap(CastToBase(&other->category_));
  CastToBase(&author_)->InternalSwap(CastToBase(&other->author_));
  CastToBase(&care_team_)->InternalSwap(CastToBase(&other->care_team_));
  CastToBase(&addresses_)->InternalSwap(CastToBase(&other->addresses_));
  CastToBase(&supporting_info_)->InternalSwap(CastToBase(&other->supporting_info_));
  CastToBase(&goal_)->InternalSwap(CastToBase(&other->goal_));
  CastToBase(&activity_)->InternalSwap(CastToBase(&other->activity_));
  CastToBase(&note_)->InternalSwap(CastToBase(&other->note_));
  swap(id_, other->id_);
  swap(meta_, other->meta_);
  swap(implicit_rules_, other->implicit_rules_);
  swap(language_, other->language_);
  swap(text_, other->text_);
  swap(status_, other->status_);
  swap(intent_, other->intent_);
  swap(title_, other->title_);
  swap(description_, other->description_);
  swap(subject_, other->subject_);
  swap(context_, other->context_);
  swap(period_, other->period_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreCareplan::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreCareteam_Participant::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreCareteam_Participant_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareteam_Participant_default_instance_._instance.get_mutable()->role_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareteam_Participant_default_instance_._instance.get_mutable()->member_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareteam_Participant_default_instance_._instance.get_mutable()->on_behalf_of_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareteam_Participant_default_instance_._instance.get_mutable()->period_ = const_cast< ::google::fhir::stu3::proto::Period*>(
      ::google::fhir::stu3::proto::Period::internal_default_instance());
}
void UsCoreCareteam_Participant::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreCareteam_Participant::clear_extension() {
  extension_.Clear();
}
void UsCoreCareteam_Participant::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreCareteam_Participant::clear_role() {
  if (GetArenaNoVirtual() == NULL && role_ != NULL) {
    delete role_;
  }
  role_ = NULL;
}
void UsCoreCareteam_Participant::clear_member() {
  if (GetArenaNoVirtual() == NULL && member_ != NULL) {
    delete member_;
  }
  member_ = NULL;
}
void UsCoreCareteam_Participant::clear_on_behalf_of() {
  if (GetArenaNoVirtual() == NULL && on_behalf_of_ != NULL) {
    delete on_behalf_of_;
  }
  on_behalf_of_ = NULL;
}
void UsCoreCareteam_Participant::clear_period() {
  if (GetArenaNoVirtual() == NULL && period_ != NULL) {
    delete period_;
  }
  period_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreCareteam_Participant::kIdFieldNumber;
const int UsCoreCareteam_Participant::kExtensionFieldNumber;
const int UsCoreCareteam_Participant::kModifierExtensionFieldNumber;
const int UsCoreCareteam_Participant::kRoleFieldNumber;
const int UsCoreCareteam_Participant::kMemberFieldNumber;
const int UsCoreCareteam_Participant::kOnBehalfOfFieldNumber;
const int UsCoreCareteam_Participant::kPeriodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreCareteam_Participant::UsCoreCareteam_Participant()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCareteam_Participant.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreCareteam.Participant)
}
UsCoreCareteam_Participant::UsCoreCareteam_Participant(const UsCoreCareteam_Participant& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_role()) {
    role_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.role_);
  } else {
    role_ = NULL;
  }
  if (from.has_member()) {
    member_ = new ::google::fhir::stu3::proto::Reference(*from.member_);
  } else {
    member_ = NULL;
  }
  if (from.has_on_behalf_of()) {
    on_behalf_of_ = new ::google::fhir::stu3::proto::Reference(*from.on_behalf_of_);
  } else {
    on_behalf_of_ = NULL;
  }
  if (from.has_period()) {
    period_ = new ::google::fhir::stu3::proto::Period(*from.period_);
  } else {
    period_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreCareteam.Participant)
}

void UsCoreCareteam_Participant::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&period_) -
      reinterpret_cast<char*>(&id_)) + sizeof(period_));
}

UsCoreCareteam_Participant::~UsCoreCareteam_Participant() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreCareteam.Participant)
  SharedDtor();
}

void UsCoreCareteam_Participant::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete role_;
  if (this != internal_default_instance()) delete member_;
  if (this != internal_default_instance()) delete on_behalf_of_;
  if (this != internal_default_instance()) delete period_;
}

void UsCoreCareteam_Participant::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreCareteam_Participant::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreCareteam_Participant& UsCoreCareteam_Participant::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCareteam_Participant.base);
  return *internal_default_instance();
}


void UsCoreCareteam_Participant::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreCareteam.Participant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && role_ != NULL) {
    delete role_;
  }
  role_ = NULL;
  if (GetArenaNoVirtual() == NULL && member_ != NULL) {
    delete member_;
  }
  member_ = NULL;
  if (GetArenaNoVirtual() == NULL && on_behalf_of_ != NULL) {
    delete on_behalf_of_;
  }
  on_behalf_of_ = NULL;
  if (GetArenaNoVirtual() == NULL && period_ != NULL) {
    delete period_;
  }
  period_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreCareteam_Participant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreCareteam.Participant)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept role = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_role()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference member = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_member()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference on_behalf_of = 6 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_on_behalf_of()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Period period = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreCareteam.Participant)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreCareteam.Participant)
  return false;
#undef DO_
}

void UsCoreCareteam_Participant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreCareteam.Participant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.CodeableConcept role = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_role()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_role(), output);
  }

  // .google.fhir.stu3.proto.Reference member = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
  if (this->has_member()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_member(), output);
  }

  // .google.fhir.stu3.proto.Reference on_behalf_of = 6 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_on_behalf_of()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_on_behalf_of(), output);
  }

  // .google.fhir.stu3.proto.Period period = 7;
  if (this->has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_period(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreCareteam.Participant)
}

::google::protobuf::uint8* UsCoreCareteam_Participant::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreCareteam.Participant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept role = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_role()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_role(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference member = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
  if (this->has_member()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_member(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference on_behalf_of = 6 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_on_behalf_of()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_on_behalf_of(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Period period = 7;
  if (this->has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_period(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreCareteam.Participant)
  return target;
}

size_t UsCoreCareteam_Participant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreCareteam.Participant)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.CodeableConcept role = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_role()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *role_);
  }

  // .google.fhir.stu3.proto.Reference member = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
  if (this->has_member()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *member_);
  }

  // .google.fhir.stu3.proto.Reference on_behalf_of = 6 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_on_behalf_of()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *on_behalf_of_);
  }

  // .google.fhir.stu3.proto.Period period = 7;
  if (this->has_period()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *period_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreCareteam_Participant::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreCareteam.Participant)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreCareteam_Participant* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreCareteam_Participant>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreCareteam.Participant)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreCareteam.Participant)
    MergeFrom(*source);
  }
}

void UsCoreCareteam_Participant::MergeFrom(const UsCoreCareteam_Participant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreCareteam.Participant)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_role()) {
    mutable_role()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.role());
  }
  if (from.has_member()) {
    mutable_member()->::google::fhir::stu3::proto::Reference::MergeFrom(from.member());
  }
  if (from.has_on_behalf_of()) {
    mutable_on_behalf_of()->::google::fhir::stu3::proto::Reference::MergeFrom(from.on_behalf_of());
  }
  if (from.has_period()) {
    mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
  }
}

void UsCoreCareteam_Participant::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreCareteam.Participant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreCareteam_Participant::CopyFrom(const UsCoreCareteam_Participant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreCareteam.Participant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreCareteam_Participant::IsInitialized() const {
  return true;
}

void UsCoreCareteam_Participant::Swap(UsCoreCareteam_Participant* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreCareteam_Participant::InternalSwap(UsCoreCareteam_Participant* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  swap(id_, other->id_);
  swap(role_, other->role_);
  swap(member_, other->member_);
  swap(on_behalf_of_, other->on_behalf_of_);
  swap(period_, other->period_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreCareteam_Participant::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreCareteam::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreCareteam_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::Id*>(
      ::google::fhir::stu3::proto::Id::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareteam_default_instance_._instance.get_mutable()->meta_ = const_cast< ::google::fhir::stu3::proto::Meta*>(
      ::google::fhir::stu3::proto::Meta::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareteam_default_instance_._instance.get_mutable()->implicit_rules_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareteam_default_instance_._instance.get_mutable()->language_ = const_cast< ::google::fhir::stu3::proto::LanguageCode*>(
      ::google::fhir::stu3::proto::LanguageCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareteam_default_instance_._instance.get_mutable()->text_ = const_cast< ::google::fhir::stu3::proto::Narrative*>(
      ::google::fhir::stu3::proto::Narrative::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareteam_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::fhir::stu3::proto::CareTeamStatusCode*>(
      ::google::fhir::stu3::proto::CareTeamStatusCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareteam_default_instance_._instance.get_mutable()->name_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareteam_default_instance_._instance.get_mutable()->subject_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareteam_default_instance_._instance.get_mutable()->context_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCareteam_default_instance_._instance.get_mutable()->period_ = const_cast< ::google::fhir::stu3::proto::Period*>(
      ::google::fhir::stu3::proto::Period::internal_default_instance());
}
void UsCoreCareteam::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreCareteam::clear_meta() {
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
}
void UsCoreCareteam::clear_implicit_rules() {
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
}
void UsCoreCareteam::clear_language() {
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
}
void UsCoreCareteam::clear_text() {
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
}
void UsCoreCareteam::clear_contained() {
  contained_.Clear();
}
void UsCoreCareteam::clear_extension() {
  extension_.Clear();
}
void UsCoreCareteam::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreCareteam::clear_identifier() {
  identifier_.Clear();
}
void UsCoreCareteam::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
void UsCoreCareteam::clear_category() {
  category_.Clear();
}
void UsCoreCareteam::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void UsCoreCareteam::clear_subject() {
  if (GetArenaNoVirtual() == NULL && subject_ != NULL) {
    delete subject_;
  }
  subject_ = NULL;
}
void UsCoreCareteam::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
}
void UsCoreCareteam::clear_period() {
  if (GetArenaNoVirtual() == NULL && period_ != NULL) {
    delete period_;
  }
  period_ = NULL;
}
void UsCoreCareteam::clear_reason_code() {
  reason_code_.Clear();
}
void UsCoreCareteam::clear_reason_reference() {
  reason_reference_.Clear();
}
void UsCoreCareteam::clear_managing_organization() {
  managing_organization_.Clear();
}
void UsCoreCareteam::clear_note() {
  note_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreCareteam::kIdFieldNumber;
const int UsCoreCareteam::kMetaFieldNumber;
const int UsCoreCareteam::kImplicitRulesFieldNumber;
const int UsCoreCareteam::kLanguageFieldNumber;
const int UsCoreCareteam::kTextFieldNumber;
const int UsCoreCareteam::kContainedFieldNumber;
const int UsCoreCareteam::kExtensionFieldNumber;
const int UsCoreCareteam::kModifierExtensionFieldNumber;
const int UsCoreCareteam::kIdentifierFieldNumber;
const int UsCoreCareteam::kStatusFieldNumber;
const int UsCoreCareteam::kCategoryFieldNumber;
const int UsCoreCareteam::kNameFieldNumber;
const int UsCoreCareteam::kSubjectFieldNumber;
const int UsCoreCareteam::kContextFieldNumber;
const int UsCoreCareteam::kPeriodFieldNumber;
const int UsCoreCareteam::kParticipantFieldNumber;
const int UsCoreCareteam::kReasonCodeFieldNumber;
const int UsCoreCareteam::kReasonReferenceFieldNumber;
const int UsCoreCareteam::kManagingOrganizationFieldNumber;
const int UsCoreCareteam::kNoteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreCareteam::UsCoreCareteam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCareteam.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreCareteam)
}
UsCoreCareteam::UsCoreCareteam(const UsCoreCareteam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      contained_(from.contained_),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      identifier_(from.identifier_),
      category_(from.category_),
      participant_(from.participant_),
      reason_code_(from.reason_code_),
      reason_reference_(from.reason_reference_),
      managing_organization_(from.managing_organization_),
      note_(from.note_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::Id(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_meta()) {
    meta_ = new ::google::fhir::stu3::proto::Meta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  if (from.has_implicit_rules()) {
    implicit_rules_ = new ::google::fhir::stu3::proto::Uri(*from.implicit_rules_);
  } else {
    implicit_rules_ = NULL;
  }
  if (from.has_language()) {
    language_ = new ::google::fhir::stu3::proto::LanguageCode(*from.language_);
  } else {
    language_ = NULL;
  }
  if (from.has_text()) {
    text_ = new ::google::fhir::stu3::proto::Narrative(*from.text_);
  } else {
    text_ = NULL;
  }
  if (from.has_status()) {
    status_ = new ::google::fhir::stu3::proto::CareTeamStatusCode(*from.status_);
  } else {
    status_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::google::fhir::stu3::proto::String(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_subject()) {
    subject_ = new ::google::fhir::stu3::proto::Reference(*from.subject_);
  } else {
    subject_ = NULL;
  }
  if (from.has_context()) {
    context_ = new ::google::fhir::stu3::proto::Reference(*from.context_);
  } else {
    context_ = NULL;
  }
  if (from.has_period()) {
    period_ = new ::google::fhir::stu3::proto::Period(*from.period_);
  } else {
    period_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreCareteam)
}

void UsCoreCareteam::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&period_) -
      reinterpret_cast<char*>(&id_)) + sizeof(period_));
}

UsCoreCareteam::~UsCoreCareteam() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreCareteam)
  SharedDtor();
}

void UsCoreCareteam::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete implicit_rules_;
  if (this != internal_default_instance()) delete language_;
  if (this != internal_default_instance()) delete text_;
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete subject_;
  if (this != internal_default_instance()) delete context_;
  if (this != internal_default_instance()) delete period_;
}

void UsCoreCareteam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreCareteam::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreCareteam& UsCoreCareteam::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCareteam.base);
  return *internal_default_instance();
}


void UsCoreCareteam::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreCareteam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contained_.Clear();
  extension_.Clear();
  modifier_extension_.Clear();
  identifier_.Clear();
  category_.Clear();
  participant_.Clear();
  reason_code_.Clear();
  reason_reference_.Clear();
  managing_organization_.Clear();
  note_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && subject_ != NULL) {
    delete subject_;
  }
  subject_ = NULL;
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  if (GetArenaNoVirtual() == NULL && period_ != NULL) {
    delete period_;
  }
  period_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreCareteam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreCareteam)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Id id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Meta meta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri implicit_rules = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_implicit_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.LanguageCode language = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_language()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Narrative text = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_contained()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CareTeamStatusCode status = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept category = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_category()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String name = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference subject = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_subject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference context = 14 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Period period = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.uscore.UsCoreCareteam.Participant participant = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_participant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept reason_code = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_reason_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference reason_reference = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition"];
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_reason_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference managing_organization = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_managing_organization()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Annotation note = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_note()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreCareteam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreCareteam)
  return false;
#undef DO_
}

void UsCoreCareteam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreCareteam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_meta(), output);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_implicit_rules(), output);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_language(), output);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_text(), output);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->contained(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->identifier(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.CareTeamStatusCode status = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_status(), output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept category = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->category_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->category(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.String name = 12;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_name(), output);
  }

  // .google.fhir.stu3.proto.Reference subject = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_subject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_subject(), output);
  }

  // .google.fhir.stu3.proto.Reference context = 14 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_context(), output);
  }

  // .google.fhir.stu3.proto.Period period = 15;
  if (this->has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_period(), output);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreCareteam.Participant participant = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->participant_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16,
      this->participant(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept reason_code = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reason_code_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17,
      this->reason_code(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference reason_reference = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reason_reference_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18,
      this->reason_reference(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference managing_organization = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->managing_organization_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19,
      this->managing_organization(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->note_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20,
      this->note(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreCareteam)
}

::google::protobuf::uint8* UsCoreCareteam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreCareteam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_meta(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_implicit_rules(), deterministic, target);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_language(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_text(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->contained(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->identifier(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.CareTeamStatusCode status = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_status(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept category = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->category_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->category(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.String name = 12;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_name(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference subject = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_subject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_subject(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference context = 14 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_context(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Period period = 15;
  if (this->has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_period(), deterministic, target);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreCareteam.Participant participant = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->participant_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->participant(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept reason_code = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reason_code_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->reason_code(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference reason_reference = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reason_reference_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->reason_reference(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference managing_organization = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->managing_organization_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->managing_organization(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->note_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->note(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreCareteam)
  return target;
}

size_t UsCoreCareteam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreCareteam)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->contained_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->contained(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->identifier_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->identifier(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept category = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->category_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->category(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.uscore.UsCoreCareteam.Participant participant = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  {
    unsigned int count = static_cast<unsigned int>(this->participant_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->participant(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept reason_code = 17;
  {
    unsigned int count = static_cast<unsigned int>(this->reason_code_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reason_code(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference reason_reference = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition"];
  {
    unsigned int count = static_cast<unsigned int>(this->reason_reference_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reason_reference(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference managing_organization = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  {
    unsigned int count = static_cast<unsigned int>(this->managing_organization_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->managing_organization(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 20;
  {
    unsigned int count = static_cast<unsigned int>(this->note_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->note(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *implicit_rules_);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *language_);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *text_);
  }

  // .google.fhir.stu3.proto.CareTeamStatusCode status = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .google.fhir.stu3.proto.String name = 12;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *name_);
  }

  // .google.fhir.stu3.proto.Reference subject = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_subject()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *subject_);
  }

  // .google.fhir.stu3.proto.Reference context = 14 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  // .google.fhir.stu3.proto.Period period = 15;
  if (this->has_period()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *period_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreCareteam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreCareteam)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreCareteam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreCareteam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreCareteam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreCareteam)
    MergeFrom(*source);
  }
}

void UsCoreCareteam::MergeFrom(const UsCoreCareteam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreCareteam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contained_.MergeFrom(from.contained_);
  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  identifier_.MergeFrom(from.identifier_);
  category_.MergeFrom(from.category_);
  participant_.MergeFrom(from.participant_);
  reason_code_.MergeFrom(from.reason_code_);
  reason_reference_.MergeFrom(from.reason_reference_);
  managing_organization_.MergeFrom(from.managing_organization_);
  note_.MergeFrom(from.note_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::Id::MergeFrom(from.id());
  }
  if (from.has_meta()) {
    mutable_meta()->::google::fhir::stu3::proto::Meta::MergeFrom(from.meta());
  }
  if (from.has_implicit_rules()) {
    mutable_implicit_rules()->::google::fhir::stu3::proto::Uri::MergeFrom(from.implicit_rules());
  }
  if (from.has_language()) {
    mutable_language()->::google::fhir::stu3::proto::LanguageCode::MergeFrom(from.language());
  }
  if (from.has_text()) {
    mutable_text()->::google::fhir::stu3::proto::Narrative::MergeFrom(from.text());
  }
  if (from.has_status()) {
    mutable_status()->::google::fhir::stu3::proto::CareTeamStatusCode::MergeFrom(from.status());
  }
  if (from.has_name()) {
    mutable_name()->::google::fhir::stu3::proto::String::MergeFrom(from.name());
  }
  if (from.has_subject()) {
    mutable_subject()->::google::fhir::stu3::proto::Reference::MergeFrom(from.subject());
  }
  if (from.has_context()) {
    mutable_context()->::google::fhir::stu3::proto::Reference::MergeFrom(from.context());
  }
  if (from.has_period()) {
    mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
  }
}

void UsCoreCareteam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreCareteam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreCareteam::CopyFrom(const UsCoreCareteam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreCareteam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreCareteam::IsInitialized() const {
  return true;
}

void UsCoreCareteam::Swap(UsCoreCareteam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreCareteam::InternalSwap(UsCoreCareteam* other) {
  using std::swap;
  CastToBase(&contained_)->InternalSwap(CastToBase(&other->contained_));
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&identifier_)->InternalSwap(CastToBase(&other->identifier_));
  CastToBase(&category_)->InternalSwap(CastToBase(&other->category_));
  CastToBase(&participant_)->InternalSwap(CastToBase(&other->participant_));
  CastToBase(&reason_code_)->InternalSwap(CastToBase(&other->reason_code_));
  CastToBase(&reason_reference_)->InternalSwap(CastToBase(&other->reason_reference_));
  CastToBase(&managing_organization_)->InternalSwap(CastToBase(&other->managing_organization_));
  CastToBase(&note_)->InternalSwap(CastToBase(&other->note_));
  swap(id_, other->id_);
  swap(meta_, other->meta_);
  swap(implicit_rules_, other->implicit_rules_);
  swap(language_, other->language_);
  swap(text_, other->text_);
  swap(status_, other->status_);
  swap(name_, other->name_);
  swap(subject_, other->subject_);
  swap(context_, other->context_);
  swap(period_, other->period_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreCareteam::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreCondition_Onset::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreCondition_Onset_default_instance_.date_time_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCondition_Onset_default_instance_.age_ = const_cast< ::google::fhir::stu3::proto::Age*>(
      ::google::fhir::stu3::proto::Age::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCondition_Onset_default_instance_.period_ = const_cast< ::google::fhir::stu3::proto::Period*>(
      ::google::fhir::stu3::proto::Period::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCondition_Onset_default_instance_.range_ = const_cast< ::google::fhir::stu3::proto::Range*>(
      ::google::fhir::stu3::proto::Range::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCondition_Onset_default_instance_.string_value_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
void UsCoreCondition_Onset::set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_onset();
  if (date_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date_time, submessage_arena);
    }
    set_has_date_time();
    onset_.date_time_ = date_time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCondition.Onset.date_time)
}
void UsCoreCondition_Onset::clear_date_time() {
  if (has_date_time()) {
    delete onset_.date_time_;
    clear_has_onset();
  }
}
void UsCoreCondition_Onset::set_allocated_age(::google::fhir::stu3::proto::Age* age) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_onset();
  if (age) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      age = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, age, submessage_arena);
    }
    set_has_age();
    onset_.age_ = age;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCondition.Onset.age)
}
void UsCoreCondition_Onset::clear_age() {
  if (has_age()) {
    delete onset_.age_;
    clear_has_onset();
  }
}
void UsCoreCondition_Onset::set_allocated_period(::google::fhir::stu3::proto::Period* period) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_onset();
  if (period) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      period = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, period, submessage_arena);
    }
    set_has_period();
    onset_.period_ = period;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCondition.Onset.period)
}
void UsCoreCondition_Onset::clear_period() {
  if (has_period()) {
    delete onset_.period_;
    clear_has_onset();
  }
}
void UsCoreCondition_Onset::set_allocated_range(::google::fhir::stu3::proto::Range* range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_onset();
  if (range) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, range, submessage_arena);
    }
    set_has_range();
    onset_.range_ = range;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCondition.Onset.range)
}
void UsCoreCondition_Onset::clear_range() {
  if (has_range()) {
    delete onset_.range_;
    clear_has_onset();
  }
}
void UsCoreCondition_Onset::set_allocated_string_value(::google::fhir::stu3::proto::String* string_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_onset();
  if (string_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      string_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, string_value, submessage_arena);
    }
    set_has_string_value();
    onset_.string_value_ = string_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCondition.Onset.string_value)
}
void UsCoreCondition_Onset::clear_string_value() {
  if (has_string_value()) {
    delete onset_.string_value_;
    clear_has_onset();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreCondition_Onset::kDateTimeFieldNumber;
const int UsCoreCondition_Onset::kAgeFieldNumber;
const int UsCoreCondition_Onset::kPeriodFieldNumber;
const int UsCoreCondition_Onset::kRangeFieldNumber;
const int UsCoreCondition_Onset::kStringValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreCondition_Onset::UsCoreCondition_Onset()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCondition_Onset.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreCondition.Onset)
}
UsCoreCondition_Onset::UsCoreCondition_Onset(const UsCoreCondition_Onset& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_onset();
  switch (from.onset_case()) {
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kAge: {
      mutable_age()->::google::fhir::stu3::proto::Age::MergeFrom(from.age());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case kStringValue: {
      mutable_string_value()->::google::fhir::stu3::proto::String::MergeFrom(from.string_value());
      break;
    }
    case ONSET_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreCondition.Onset)
}

void UsCoreCondition_Onset::SharedCtor() {
  clear_has_onset();
}

UsCoreCondition_Onset::~UsCoreCondition_Onset() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreCondition.Onset)
  SharedDtor();
}

void UsCoreCondition_Onset::SharedDtor() {
  if (has_onset()) {
    clear_onset();
  }
}

void UsCoreCondition_Onset::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreCondition_Onset::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreCondition_Onset& UsCoreCondition_Onset::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCondition_Onset.base);
  return *internal_default_instance();
}


void UsCoreCondition_Onset::clear_onset() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.uscore.UsCoreCondition.Onset)
  switch (onset_case()) {
    case kDateTime: {
      delete onset_.date_time_;
      break;
    }
    case kAge: {
      delete onset_.age_;
      break;
    }
    case kPeriod: {
      delete onset_.period_;
      break;
    }
    case kRange: {
      delete onset_.range_;
      break;
    }
    case kStringValue: {
      delete onset_.string_value_;
      break;
    }
    case ONSET_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ONSET_NOT_SET;
}


void UsCoreCondition_Onset::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreCondition.Onset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_onset();
  _internal_metadata_.Clear();
}

bool UsCoreCondition_Onset::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreCondition.Onset)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.DateTime date_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Age age = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_age()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Period period = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Range range = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String string_value = 5[json_name = "string"];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_string_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreCondition.Onset)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreCondition.Onset)
  return false;
#undef DO_
}

void UsCoreCondition_Onset::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreCondition.Onset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.DateTime date_time = 1;
  if (has_date_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_date_time(), output);
  }

  // .google.fhir.stu3.proto.Age age = 2;
  if (has_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_age(), output);
  }

  // .google.fhir.stu3.proto.Period period = 3;
  if (has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_period(), output);
  }

  // .google.fhir.stu3.proto.Range range = 4;
  if (has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_range(), output);
  }

  // .google.fhir.stu3.proto.String string_value = 5[json_name = "string"];
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_string_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreCondition.Onset)
}

::google::protobuf::uint8* UsCoreCondition_Onset::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreCondition.Onset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.DateTime date_time = 1;
  if (has_date_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_date_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Age age = 2;
  if (has_age()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_age(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Period period = 3;
  if (has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_period(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Range range = 4;
  if (has_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_range(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String string_value = 5[json_name = "string"];
  if (has_string_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_string_value(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreCondition.Onset)
  return target;
}

size_t UsCoreCondition_Onset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreCondition.Onset)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (onset_case()) {
    // .google.fhir.stu3.proto.DateTime date_time = 1;
    case kDateTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *onset_.date_time_);
      break;
    }
    // .google.fhir.stu3.proto.Age age = 2;
    case kAge: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *onset_.age_);
      break;
    }
    // .google.fhir.stu3.proto.Period period = 3;
    case kPeriod: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *onset_.period_);
      break;
    }
    // .google.fhir.stu3.proto.Range range = 4;
    case kRange: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *onset_.range_);
      break;
    }
    // .google.fhir.stu3.proto.String string_value = 5[json_name = "string"];
    case kStringValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *onset_.string_value_);
      break;
    }
    case ONSET_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreCondition_Onset::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreCondition.Onset)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreCondition_Onset* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreCondition_Onset>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreCondition.Onset)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreCondition.Onset)
    MergeFrom(*source);
  }
}

void UsCoreCondition_Onset::MergeFrom(const UsCoreCondition_Onset& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreCondition.Onset)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.onset_case()) {
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kAge: {
      mutable_age()->::google::fhir::stu3::proto::Age::MergeFrom(from.age());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case kStringValue: {
      mutable_string_value()->::google::fhir::stu3::proto::String::MergeFrom(from.string_value());
      break;
    }
    case ONSET_NOT_SET: {
      break;
    }
  }
}

void UsCoreCondition_Onset::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreCondition.Onset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreCondition_Onset::CopyFrom(const UsCoreCondition_Onset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreCondition.Onset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreCondition_Onset::IsInitialized() const {
  return true;
}

void UsCoreCondition_Onset::Swap(UsCoreCondition_Onset* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreCondition_Onset::InternalSwap(UsCoreCondition_Onset* other) {
  using std::swap;
  swap(onset_, other->onset_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreCondition_Onset::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreCondition_Abatement::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreCondition_Abatement_default_instance_.date_time_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCondition_Abatement_default_instance_.age_ = const_cast< ::google::fhir::stu3::proto::Age*>(
      ::google::fhir::stu3::proto::Age::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCondition_Abatement_default_instance_.boolean_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCondition_Abatement_default_instance_.period_ = const_cast< ::google::fhir::stu3::proto::Period*>(
      ::google::fhir::stu3::proto::Period::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCondition_Abatement_default_instance_.range_ = const_cast< ::google::fhir::stu3::proto::Range*>(
      ::google::fhir::stu3::proto::Range::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCondition_Abatement_default_instance_.string_value_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
void UsCoreCondition_Abatement::set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_abatement();
  if (date_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date_time, submessage_arena);
    }
    set_has_date_time();
    abatement_.date_time_ = date_time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCondition.Abatement.date_time)
}
void UsCoreCondition_Abatement::clear_date_time() {
  if (has_date_time()) {
    delete abatement_.date_time_;
    clear_has_abatement();
  }
}
void UsCoreCondition_Abatement::set_allocated_age(::google::fhir::stu3::proto::Age* age) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_abatement();
  if (age) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      age = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, age, submessage_arena);
    }
    set_has_age();
    abatement_.age_ = age;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCondition.Abatement.age)
}
void UsCoreCondition_Abatement::clear_age() {
  if (has_age()) {
    delete abatement_.age_;
    clear_has_abatement();
  }
}
void UsCoreCondition_Abatement::set_allocated_boolean(::google::fhir::stu3::proto::Boolean* boolean) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_abatement();
  if (boolean) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      boolean = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, boolean, submessage_arena);
    }
    set_has_boolean();
    abatement_.boolean_ = boolean;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCondition.Abatement.boolean)
}
void UsCoreCondition_Abatement::clear_boolean() {
  if (has_boolean()) {
    delete abatement_.boolean_;
    clear_has_abatement();
  }
}
void UsCoreCondition_Abatement::set_allocated_period(::google::fhir::stu3::proto::Period* period) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_abatement();
  if (period) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      period = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, period, submessage_arena);
    }
    set_has_period();
    abatement_.period_ = period;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCondition.Abatement.period)
}
void UsCoreCondition_Abatement::clear_period() {
  if (has_period()) {
    delete abatement_.period_;
    clear_has_abatement();
  }
}
void UsCoreCondition_Abatement::set_allocated_range(::google::fhir::stu3::proto::Range* range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_abatement();
  if (range) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, range, submessage_arena);
    }
    set_has_range();
    abatement_.range_ = range;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCondition.Abatement.range)
}
void UsCoreCondition_Abatement::clear_range() {
  if (has_range()) {
    delete abatement_.range_;
    clear_has_abatement();
  }
}
void UsCoreCondition_Abatement::set_allocated_string_value(::google::fhir::stu3::proto::String* string_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_abatement();
  if (string_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      string_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, string_value, submessage_arena);
    }
    set_has_string_value();
    abatement_.string_value_ = string_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCondition.Abatement.string_value)
}
void UsCoreCondition_Abatement::clear_string_value() {
  if (has_string_value()) {
    delete abatement_.string_value_;
    clear_has_abatement();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreCondition_Abatement::kDateTimeFieldNumber;
const int UsCoreCondition_Abatement::kAgeFieldNumber;
const int UsCoreCondition_Abatement::kBooleanFieldNumber;
const int UsCoreCondition_Abatement::kPeriodFieldNumber;
const int UsCoreCondition_Abatement::kRangeFieldNumber;
const int UsCoreCondition_Abatement::kStringValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreCondition_Abatement::UsCoreCondition_Abatement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCondition_Abatement.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreCondition.Abatement)
}
UsCoreCondition_Abatement::UsCoreCondition_Abatement(const UsCoreCondition_Abatement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_abatement();
  switch (from.abatement_case()) {
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kAge: {
      mutable_age()->::google::fhir::stu3::proto::Age::MergeFrom(from.age());
      break;
    }
    case kBoolean: {
      mutable_boolean()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.boolean());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case kStringValue: {
      mutable_string_value()->::google::fhir::stu3::proto::String::MergeFrom(from.string_value());
      break;
    }
    case ABATEMENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreCondition.Abatement)
}

void UsCoreCondition_Abatement::SharedCtor() {
  clear_has_abatement();
}

UsCoreCondition_Abatement::~UsCoreCondition_Abatement() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreCondition.Abatement)
  SharedDtor();
}

void UsCoreCondition_Abatement::SharedDtor() {
  if (has_abatement()) {
    clear_abatement();
  }
}

void UsCoreCondition_Abatement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreCondition_Abatement::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreCondition_Abatement& UsCoreCondition_Abatement::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCondition_Abatement.base);
  return *internal_default_instance();
}


void UsCoreCondition_Abatement::clear_abatement() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.uscore.UsCoreCondition.Abatement)
  switch (abatement_case()) {
    case kDateTime: {
      delete abatement_.date_time_;
      break;
    }
    case kAge: {
      delete abatement_.age_;
      break;
    }
    case kBoolean: {
      delete abatement_.boolean_;
      break;
    }
    case kPeriod: {
      delete abatement_.period_;
      break;
    }
    case kRange: {
      delete abatement_.range_;
      break;
    }
    case kStringValue: {
      delete abatement_.string_value_;
      break;
    }
    case ABATEMENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ABATEMENT_NOT_SET;
}


void UsCoreCondition_Abatement::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreCondition.Abatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_abatement();
  _internal_metadata_.Clear();
}

bool UsCoreCondition_Abatement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreCondition.Abatement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.DateTime date_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Age age = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_age()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Boolean boolean = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_boolean()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Period period = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Range range = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String string_value = 6[json_name = "string"];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_string_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreCondition.Abatement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreCondition.Abatement)
  return false;
#undef DO_
}

void UsCoreCondition_Abatement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreCondition.Abatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.DateTime date_time = 1;
  if (has_date_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_date_time(), output);
  }

  // .google.fhir.stu3.proto.Age age = 2;
  if (has_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_age(), output);
  }

  // .google.fhir.stu3.proto.Boolean boolean = 3;
  if (has_boolean()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_boolean(), output);
  }

  // .google.fhir.stu3.proto.Period period = 4;
  if (has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_period(), output);
  }

  // .google.fhir.stu3.proto.Range range = 5;
  if (has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_range(), output);
  }

  // .google.fhir.stu3.proto.String string_value = 6[json_name = "string"];
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_string_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreCondition.Abatement)
}

::google::protobuf::uint8* UsCoreCondition_Abatement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreCondition.Abatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.DateTime date_time = 1;
  if (has_date_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_date_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Age age = 2;
  if (has_age()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_age(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Boolean boolean = 3;
  if (has_boolean()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_boolean(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Period period = 4;
  if (has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_period(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Range range = 5;
  if (has_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_range(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String string_value = 6[json_name = "string"];
  if (has_string_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_string_value(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreCondition.Abatement)
  return target;
}

size_t UsCoreCondition_Abatement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreCondition.Abatement)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (abatement_case()) {
    // .google.fhir.stu3.proto.DateTime date_time = 1;
    case kDateTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *abatement_.date_time_);
      break;
    }
    // .google.fhir.stu3.proto.Age age = 2;
    case kAge: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *abatement_.age_);
      break;
    }
    // .google.fhir.stu3.proto.Boolean boolean = 3;
    case kBoolean: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *abatement_.boolean_);
      break;
    }
    // .google.fhir.stu3.proto.Period period = 4;
    case kPeriod: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *abatement_.period_);
      break;
    }
    // .google.fhir.stu3.proto.Range range = 5;
    case kRange: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *abatement_.range_);
      break;
    }
    // .google.fhir.stu3.proto.String string_value = 6[json_name = "string"];
    case kStringValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *abatement_.string_value_);
      break;
    }
    case ABATEMENT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreCondition_Abatement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreCondition.Abatement)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreCondition_Abatement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreCondition_Abatement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreCondition.Abatement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreCondition.Abatement)
    MergeFrom(*source);
  }
}

void UsCoreCondition_Abatement::MergeFrom(const UsCoreCondition_Abatement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreCondition.Abatement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.abatement_case()) {
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kAge: {
      mutable_age()->::google::fhir::stu3::proto::Age::MergeFrom(from.age());
      break;
    }
    case kBoolean: {
      mutable_boolean()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.boolean());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case kStringValue: {
      mutable_string_value()->::google::fhir::stu3::proto::String::MergeFrom(from.string_value());
      break;
    }
    case ABATEMENT_NOT_SET: {
      break;
    }
  }
}

void UsCoreCondition_Abatement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreCondition.Abatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreCondition_Abatement::CopyFrom(const UsCoreCondition_Abatement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreCondition.Abatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreCondition_Abatement::IsInitialized() const {
  return true;
}

void UsCoreCondition_Abatement::Swap(UsCoreCondition_Abatement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreCondition_Abatement::InternalSwap(UsCoreCondition_Abatement* other) {
  using std::swap;
  swap(abatement_, other->abatement_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreCondition_Abatement::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreCondition_Stage::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreCondition_Stage_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCondition_Stage_default_instance_._instance.get_mutable()->summary_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
}
void UsCoreCondition_Stage::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreCondition_Stage::clear_extension() {
  extension_.Clear();
}
void UsCoreCondition_Stage::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreCondition_Stage::clear_summary() {
  if (GetArenaNoVirtual() == NULL && summary_ != NULL) {
    delete summary_;
  }
  summary_ = NULL;
}
void UsCoreCondition_Stage::clear_assessment() {
  assessment_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreCondition_Stage::kIdFieldNumber;
const int UsCoreCondition_Stage::kExtensionFieldNumber;
const int UsCoreCondition_Stage::kModifierExtensionFieldNumber;
const int UsCoreCondition_Stage::kSummaryFieldNumber;
const int UsCoreCondition_Stage::kAssessmentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreCondition_Stage::UsCoreCondition_Stage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCondition_Stage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreCondition.Stage)
}
UsCoreCondition_Stage::UsCoreCondition_Stage(const UsCoreCondition_Stage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      assessment_(from.assessment_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_summary()) {
    summary_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.summary_);
  } else {
    summary_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreCondition.Stage)
}

void UsCoreCondition_Stage::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&summary_) -
      reinterpret_cast<char*>(&id_)) + sizeof(summary_));
}

UsCoreCondition_Stage::~UsCoreCondition_Stage() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreCondition.Stage)
  SharedDtor();
}

void UsCoreCondition_Stage::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete summary_;
}

void UsCoreCondition_Stage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreCondition_Stage::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreCondition_Stage& UsCoreCondition_Stage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCondition_Stage.base);
  return *internal_default_instance();
}


void UsCoreCondition_Stage::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreCondition.Stage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  assessment_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && summary_ != NULL) {
    delete summary_;
  }
  summary_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreCondition_Stage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreCondition.Stage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept summary = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_summary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference assessment = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ClinicalImpression", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DiagnosticReport", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_assessment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreCondition.Stage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreCondition.Stage)
  return false;
#undef DO_
}

void UsCoreCondition_Stage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreCondition.Stage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.CodeableConcept summary = 4;
  if (this->has_summary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_summary(), output);
  }

  // repeated .google.fhir.stu3.proto.Reference assessment = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ClinicalImpression", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DiagnosticReport", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->assessment_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->assessment(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreCondition.Stage)
}

::google::protobuf::uint8* UsCoreCondition_Stage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreCondition.Stage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept summary = 4;
  if (this->has_summary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_summary(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference assessment = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ClinicalImpression", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DiagnosticReport", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->assessment_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->assessment(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreCondition.Stage)
  return target;
}

size_t UsCoreCondition_Stage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreCondition.Stage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference assessment = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ClinicalImpression", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DiagnosticReport", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
  {
    unsigned int count = static_cast<unsigned int>(this->assessment_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->assessment(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.CodeableConcept summary = 4;
  if (this->has_summary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *summary_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreCondition_Stage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreCondition.Stage)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreCondition_Stage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreCondition_Stage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreCondition.Stage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreCondition.Stage)
    MergeFrom(*source);
  }
}

void UsCoreCondition_Stage::MergeFrom(const UsCoreCondition_Stage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreCondition.Stage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  assessment_.MergeFrom(from.assessment_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_summary()) {
    mutable_summary()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.summary());
  }
}

void UsCoreCondition_Stage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreCondition.Stage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreCondition_Stage::CopyFrom(const UsCoreCondition_Stage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreCondition.Stage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreCondition_Stage::IsInitialized() const {
  return true;
}

void UsCoreCondition_Stage::Swap(UsCoreCondition_Stage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreCondition_Stage::InternalSwap(UsCoreCondition_Stage* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&assessment_)->InternalSwap(CastToBase(&other->assessment_));
  swap(id_, other->id_);
  swap(summary_, other->summary_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreCondition_Stage::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreCondition_Evidence::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreCondition_Evidence_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
void UsCoreCondition_Evidence::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreCondition_Evidence::clear_extension() {
  extension_.Clear();
}
void UsCoreCondition_Evidence::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreCondition_Evidence::clear_code() {
  code_.Clear();
}
void UsCoreCondition_Evidence::clear_detail() {
  detail_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreCondition_Evidence::kIdFieldNumber;
const int UsCoreCondition_Evidence::kExtensionFieldNumber;
const int UsCoreCondition_Evidence::kModifierExtensionFieldNumber;
const int UsCoreCondition_Evidence::kCodeFieldNumber;
const int UsCoreCondition_Evidence::kDetailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreCondition_Evidence::UsCoreCondition_Evidence()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCondition_Evidence.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreCondition.Evidence)
}
UsCoreCondition_Evidence::UsCoreCondition_Evidence(const UsCoreCondition_Evidence& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      code_(from.code_),
      detail_(from.detail_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreCondition.Evidence)
}

void UsCoreCondition_Evidence::SharedCtor() {
  id_ = NULL;
}

UsCoreCondition_Evidence::~UsCoreCondition_Evidence() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreCondition.Evidence)
  SharedDtor();
}

void UsCoreCondition_Evidence::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void UsCoreCondition_Evidence::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreCondition_Evidence::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreCondition_Evidence& UsCoreCondition_Evidence::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCondition_Evidence.base);
  return *internal_default_instance();
}


void UsCoreCondition_Evidence::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreCondition.Evidence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  code_.Clear();
  detail_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreCondition_Evidence::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreCondition.Evidence)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference detail = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_detail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreCondition.Evidence)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreCondition.Evidence)
  return false;
#undef DO_
}

void UsCoreCondition_Evidence::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreCondition.Evidence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept code = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->code_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->code(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference detail = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->detail_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->detail(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreCondition.Evidence)
}

::google::protobuf::uint8* UsCoreCondition_Evidence::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreCondition.Evidence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept code = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->code_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->code(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference detail = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->detail_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->detail(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreCondition.Evidence)
  return target;
}

size_t UsCoreCondition_Evidence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreCondition.Evidence)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept code = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->code_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->code(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference detail = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
  {
    unsigned int count = static_cast<unsigned int>(this->detail_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->detail(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreCondition_Evidence::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreCondition.Evidence)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreCondition_Evidence* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreCondition_Evidence>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreCondition.Evidence)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreCondition.Evidence)
    MergeFrom(*source);
  }
}

void UsCoreCondition_Evidence::MergeFrom(const UsCoreCondition_Evidence& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreCondition.Evidence)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  code_.MergeFrom(from.code_);
  detail_.MergeFrom(from.detail_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
}

void UsCoreCondition_Evidence::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreCondition.Evidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreCondition_Evidence::CopyFrom(const UsCoreCondition_Evidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreCondition.Evidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreCondition_Evidence::IsInitialized() const {
  return true;
}

void UsCoreCondition_Evidence::Swap(UsCoreCondition_Evidence* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreCondition_Evidence::InternalSwap(UsCoreCondition_Evidence* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&code_)->InternalSwap(CastToBase(&other->code_));
  CastToBase(&detail_)->InternalSwap(CastToBase(&other->detail_));
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreCondition_Evidence::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreCondition::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreCondition_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::Id*>(
      ::google::fhir::stu3::proto::Id::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCondition_default_instance_._instance.get_mutable()->meta_ = const_cast< ::google::fhir::stu3::proto::Meta*>(
      ::google::fhir::stu3::proto::Meta::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCondition_default_instance_._instance.get_mutable()->implicit_rules_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCondition_default_instance_._instance.get_mutable()->language_ = const_cast< ::google::fhir::stu3::proto::LanguageCode*>(
      ::google::fhir::stu3::proto::LanguageCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCondition_default_instance_._instance.get_mutable()->text_ = const_cast< ::google::fhir::stu3::proto::Narrative*>(
      ::google::fhir::stu3::proto::Narrative::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCondition_default_instance_._instance.get_mutable()->clinical_status_ = const_cast< ::google::fhir::stu3::proto::ConditionClinicalStatusCodesCode*>(
      ::google::fhir::stu3::proto::ConditionClinicalStatusCodesCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCondition_default_instance_._instance.get_mutable()->verification_status_ = const_cast< ::google::fhir::stu3::proto::ConditionVerificationStatusCode*>(
      ::google::fhir::stu3::proto::ConditionVerificationStatusCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCondition_default_instance_._instance.get_mutable()->severity_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCondition_default_instance_._instance.get_mutable()->code_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCondition_default_instance_._instance.get_mutable()->subject_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCondition_default_instance_._instance.get_mutable()->context_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCondition_default_instance_._instance.get_mutable()->onset_ = const_cast< ::google::fhir::stu3::uscore::UsCoreCondition_Onset*>(
      ::google::fhir::stu3::uscore::UsCoreCondition_Onset::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCondition_default_instance_._instance.get_mutable()->abatement_ = const_cast< ::google::fhir::stu3::uscore::UsCoreCondition_Abatement*>(
      ::google::fhir::stu3::uscore::UsCoreCondition_Abatement::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCondition_default_instance_._instance.get_mutable()->asserted_date_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCondition_default_instance_._instance.get_mutable()->asserter_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreCondition_default_instance_._instance.get_mutable()->stage_ = const_cast< ::google::fhir::stu3::uscore::UsCoreCondition_Stage*>(
      ::google::fhir::stu3::uscore::UsCoreCondition_Stage::internal_default_instance());
}
void UsCoreCondition::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreCondition::clear_meta() {
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
}
void UsCoreCondition::clear_implicit_rules() {
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
}
void UsCoreCondition::clear_language() {
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
}
void UsCoreCondition::clear_text() {
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
}
void UsCoreCondition::clear_contained() {
  contained_.Clear();
}
void UsCoreCondition::clear_extension() {
  extension_.Clear();
}
void UsCoreCondition::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreCondition::clear_identifier() {
  identifier_.Clear();
}
void UsCoreCondition::clear_clinical_status() {
  if (GetArenaNoVirtual() == NULL && clinical_status_ != NULL) {
    delete clinical_status_;
  }
  clinical_status_ = NULL;
}
void UsCoreCondition::clear_verification_status() {
  if (GetArenaNoVirtual() == NULL && verification_status_ != NULL) {
    delete verification_status_;
  }
  verification_status_ = NULL;
}
void UsCoreCondition::clear_category() {
  category_.Clear();
}
void UsCoreCondition::clear_severity() {
  if (GetArenaNoVirtual() == NULL && severity_ != NULL) {
    delete severity_;
  }
  severity_ = NULL;
}
void UsCoreCondition::clear_code() {
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
}
void UsCoreCondition::clear_body_site() {
  body_site_.Clear();
}
void UsCoreCondition::clear_subject() {
  if (GetArenaNoVirtual() == NULL && subject_ != NULL) {
    delete subject_;
  }
  subject_ = NULL;
}
void UsCoreCondition::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
}
void UsCoreCondition::clear_asserted_date() {
  if (GetArenaNoVirtual() == NULL && asserted_date_ != NULL) {
    delete asserted_date_;
  }
  asserted_date_ = NULL;
}
void UsCoreCondition::clear_asserter() {
  if (GetArenaNoVirtual() == NULL && asserter_ != NULL) {
    delete asserter_;
  }
  asserter_ = NULL;
}
void UsCoreCondition::clear_note() {
  note_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreCondition::kIdFieldNumber;
const int UsCoreCondition::kMetaFieldNumber;
const int UsCoreCondition::kImplicitRulesFieldNumber;
const int UsCoreCondition::kLanguageFieldNumber;
const int UsCoreCondition::kTextFieldNumber;
const int UsCoreCondition::kContainedFieldNumber;
const int UsCoreCondition::kExtensionFieldNumber;
const int UsCoreCondition::kModifierExtensionFieldNumber;
const int UsCoreCondition::kIdentifierFieldNumber;
const int UsCoreCondition::kClinicalStatusFieldNumber;
const int UsCoreCondition::kVerificationStatusFieldNumber;
const int UsCoreCondition::kCategoryFieldNumber;
const int UsCoreCondition::kSeverityFieldNumber;
const int UsCoreCondition::kCodeFieldNumber;
const int UsCoreCondition::kBodySiteFieldNumber;
const int UsCoreCondition::kSubjectFieldNumber;
const int UsCoreCondition::kContextFieldNumber;
const int UsCoreCondition::kOnsetFieldNumber;
const int UsCoreCondition::kAbatementFieldNumber;
const int UsCoreCondition::kAssertedDateFieldNumber;
const int UsCoreCondition::kAsserterFieldNumber;
const int UsCoreCondition::kStageFieldNumber;
const int UsCoreCondition::kEvidenceFieldNumber;
const int UsCoreCondition::kNoteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreCondition::UsCoreCondition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCondition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreCondition)
}
UsCoreCondition::UsCoreCondition(const UsCoreCondition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      contained_(from.contained_),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      identifier_(from.identifier_),
      category_(from.category_),
      body_site_(from.body_site_),
      evidence_(from.evidence_),
      note_(from.note_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::Id(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_meta()) {
    meta_ = new ::google::fhir::stu3::proto::Meta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  if (from.has_implicit_rules()) {
    implicit_rules_ = new ::google::fhir::stu3::proto::Uri(*from.implicit_rules_);
  } else {
    implicit_rules_ = NULL;
  }
  if (from.has_language()) {
    language_ = new ::google::fhir::stu3::proto::LanguageCode(*from.language_);
  } else {
    language_ = NULL;
  }
  if (from.has_text()) {
    text_ = new ::google::fhir::stu3::proto::Narrative(*from.text_);
  } else {
    text_ = NULL;
  }
  if (from.has_clinical_status()) {
    clinical_status_ = new ::google::fhir::stu3::proto::ConditionClinicalStatusCodesCode(*from.clinical_status_);
  } else {
    clinical_status_ = NULL;
  }
  if (from.has_verification_status()) {
    verification_status_ = new ::google::fhir::stu3::proto::ConditionVerificationStatusCode(*from.verification_status_);
  } else {
    verification_status_ = NULL;
  }
  if (from.has_severity()) {
    severity_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.severity_);
  } else {
    severity_ = NULL;
  }
  if (from.has_code()) {
    code_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.code_);
  } else {
    code_ = NULL;
  }
  if (from.has_subject()) {
    subject_ = new ::google::fhir::stu3::proto::Reference(*from.subject_);
  } else {
    subject_ = NULL;
  }
  if (from.has_context()) {
    context_ = new ::google::fhir::stu3::proto::Reference(*from.context_);
  } else {
    context_ = NULL;
  }
  if (from.has_onset()) {
    onset_ = new ::google::fhir::stu3::uscore::UsCoreCondition_Onset(*from.onset_);
  } else {
    onset_ = NULL;
  }
  if (from.has_abatement()) {
    abatement_ = new ::google::fhir::stu3::uscore::UsCoreCondition_Abatement(*from.abatement_);
  } else {
    abatement_ = NULL;
  }
  if (from.has_asserted_date()) {
    asserted_date_ = new ::google::fhir::stu3::proto::DateTime(*from.asserted_date_);
  } else {
    asserted_date_ = NULL;
  }
  if (from.has_asserter()) {
    asserter_ = new ::google::fhir::stu3::proto::Reference(*from.asserter_);
  } else {
    asserter_ = NULL;
  }
  if (from.has_stage()) {
    stage_ = new ::google::fhir::stu3::uscore::UsCoreCondition_Stage(*from.stage_);
  } else {
    stage_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreCondition)
}

void UsCoreCondition::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stage_) -
      reinterpret_cast<char*>(&id_)) + sizeof(stage_));
}

UsCoreCondition::~UsCoreCondition() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreCondition)
  SharedDtor();
}

void UsCoreCondition::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete implicit_rules_;
  if (this != internal_default_instance()) delete language_;
  if (this != internal_default_instance()) delete text_;
  if (this != internal_default_instance()) delete clinical_status_;
  if (this != internal_default_instance()) delete verification_status_;
  if (this != internal_default_instance()) delete severity_;
  if (this != internal_default_instance()) delete code_;
  if (this != internal_default_instance()) delete subject_;
  if (this != internal_default_instance()) delete context_;
  if (this != internal_default_instance()) delete onset_;
  if (this != internal_default_instance()) delete abatement_;
  if (this != internal_default_instance()) delete asserted_date_;
  if (this != internal_default_instance()) delete asserter_;
  if (this != internal_default_instance()) delete stage_;
}

void UsCoreCondition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreCondition::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreCondition& UsCoreCondition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreCondition.base);
  return *internal_default_instance();
}


void UsCoreCondition::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreCondition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contained_.Clear();
  extension_.Clear();
  modifier_extension_.Clear();
  identifier_.Clear();
  category_.Clear();
  body_site_.Clear();
  evidence_.Clear();
  note_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  if (GetArenaNoVirtual() == NULL && clinical_status_ != NULL) {
    delete clinical_status_;
  }
  clinical_status_ = NULL;
  if (GetArenaNoVirtual() == NULL && verification_status_ != NULL) {
    delete verification_status_;
  }
  verification_status_ = NULL;
  if (GetArenaNoVirtual() == NULL && severity_ != NULL) {
    delete severity_;
  }
  severity_ = NULL;
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
  if (GetArenaNoVirtual() == NULL && subject_ != NULL) {
    delete subject_;
  }
  subject_ = NULL;
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  if (GetArenaNoVirtual() == NULL && onset_ != NULL) {
    delete onset_;
  }
  onset_ = NULL;
  if (GetArenaNoVirtual() == NULL && abatement_ != NULL) {
    delete abatement_;
  }
  abatement_ = NULL;
  if (GetArenaNoVirtual() == NULL && asserted_date_ != NULL) {
    delete asserted_date_;
  }
  asserted_date_ = NULL;
  if (GetArenaNoVirtual() == NULL && asserter_ != NULL) {
    delete asserter_;
  }
  asserter_ = NULL;
  if (GetArenaNoVirtual() == NULL && stage_ != NULL) {
    delete stage_;
  }
  stage_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreCondition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreCondition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Id id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Meta meta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri implicit_rules = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_implicit_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.LanguageCode language = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_language()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Narrative text = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_contained()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ConditionClinicalStatusCodesCode clinical_status = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_clinical_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ConditionVerificationStatusCode verification_status = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_verification_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept category = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_category()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept severity = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_severity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept code = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept body_site = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_body_site()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference subject = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_subject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference context = 17 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreCondition.Onset onset = 18 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_onset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreCondition.Abatement abatement = 19 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_abatement()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DateTime asserted_date = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_asserted_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference asserter = 21 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_asserter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreCondition.Stage stage = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.uscore.UsCoreCondition.Evidence evidence = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_evidence()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Annotation note = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_note()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreCondition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreCondition)
  return false;
#undef DO_
}

void UsCoreCondition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreCondition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_meta(), output);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_implicit_rules(), output);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_language(), output);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_text(), output);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->contained(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->identifier(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.ConditionClinicalStatusCodesCode clinical_status = 10;
  if (this->has_clinical_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_clinical_status(), output);
  }

  // .google.fhir.stu3.proto.ConditionVerificationStatusCode verification_status = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_verification_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_verification_status(), output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept category = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->category_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->category(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.CodeableConcept severity = 13;
  if (this->has_severity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_severity(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_code(), output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept body_site = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->body_site_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->body_site(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Reference subject = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_subject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_subject(), output);
  }

  // .google.fhir.stu3.proto.Reference context = 17 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_context(), output);
  }

  // .google.fhir.stu3.uscore.UsCoreCondition.Onset onset = 18 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_onset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_onset(), output);
  }

  // .google.fhir.stu3.uscore.UsCoreCondition.Abatement abatement = 19 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_abatement()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_abatement(), output);
  }

  // .google.fhir.stu3.proto.DateTime asserted_date = 20;
  if (this->has_asserted_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_asserted_date(), output);
  }

  // .google.fhir.stu3.proto.Reference asserter = 21 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
  if (this->has_asserter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_asserter(), output);
  }

  // .google.fhir.stu3.uscore.UsCoreCondition.Stage stage = 22;
  if (this->has_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->_internal_stage(), output);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreCondition.Evidence evidence = 23;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->evidence_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23,
      this->evidence(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 24;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->note_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24,
      this->note(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreCondition)
}

::google::protobuf::uint8* UsCoreCondition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreCondition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_meta(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_implicit_rules(), deterministic, target);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_language(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_text(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->contained(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->identifier(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.ConditionClinicalStatusCodesCode clinical_status = 10;
  if (this->has_clinical_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_clinical_status(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ConditionVerificationStatusCode verification_status = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_verification_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_verification_status(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept category = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->category_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->category(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept severity = 13;
  if (this->has_severity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_severity(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_code(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept body_site = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->body_site_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->body_site(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference subject = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_subject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_subject(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference context = 17 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_context(), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreCondition.Onset onset = 18 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_onset()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_onset(), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreCondition.Abatement abatement = 19 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_abatement()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_abatement(), deterministic, target);
  }

  // .google.fhir.stu3.proto.DateTime asserted_date = 20;
  if (this->has_asserted_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_asserted_date(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference asserter = 21 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
  if (this->has_asserter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_asserter(), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreCondition.Stage stage = 22;
  if (this->has_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->_internal_stage(), deterministic, target);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreCondition.Evidence evidence = 23;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->evidence_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->evidence(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 24;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->note_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->note(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreCondition)
  return target;
}

size_t UsCoreCondition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreCondition)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->contained_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->contained(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->identifier_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->identifier(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept category = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  {
    unsigned int count = static_cast<unsigned int>(this->category_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->category(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept body_site = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->body_site_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->body_site(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.uscore.UsCoreCondition.Evidence evidence = 23;
  {
    unsigned int count = static_cast<unsigned int>(this->evidence_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->evidence(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 24;
  {
    unsigned int count = static_cast<unsigned int>(this->note_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->note(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *implicit_rules_);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *language_);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *text_);
  }

  // .google.fhir.stu3.proto.ConditionClinicalStatusCodesCode clinical_status = 10;
  if (this->has_clinical_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *clinical_status_);
  }

  // .google.fhir.stu3.proto.ConditionVerificationStatusCode verification_status = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_verification_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *verification_status_);
  }

  // .google.fhir.stu3.proto.CodeableConcept severity = 13;
  if (this->has_severity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *severity_);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *code_);
  }

  // .google.fhir.stu3.proto.Reference subject = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_subject()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *subject_);
  }

  // .google.fhir.stu3.proto.Reference context = 17 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  if (this->has_context()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  // .google.fhir.stu3.uscore.UsCoreCondition.Onset onset = 18 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_onset()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *onset_);
  }

  // .google.fhir.stu3.uscore.UsCoreCondition.Abatement abatement = 19 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_abatement()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *abatement_);
  }

  // .google.fhir.stu3.proto.DateTime asserted_date = 20;
  if (this->has_asserted_date()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *asserted_date_);
  }

  // .google.fhir.stu3.proto.Reference asserter = 21 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
  if (this->has_asserter()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *asserter_);
  }

  // .google.fhir.stu3.uscore.UsCoreCondition.Stage stage = 22;
  if (this->has_stage()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *stage_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreCondition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreCondition)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreCondition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreCondition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreCondition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreCondition)
    MergeFrom(*source);
  }
}

void UsCoreCondition::MergeFrom(const UsCoreCondition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreCondition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contained_.MergeFrom(from.contained_);
  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  identifier_.MergeFrom(from.identifier_);
  category_.MergeFrom(from.category_);
  body_site_.MergeFrom(from.body_site_);
  evidence_.MergeFrom(from.evidence_);
  note_.MergeFrom(from.note_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::Id::MergeFrom(from.id());
  }
  if (from.has_meta()) {
    mutable_meta()->::google::fhir::stu3::proto::Meta::MergeFrom(from.meta());
  }
  if (from.has_implicit_rules()) {
    mutable_implicit_rules()->::google::fhir::stu3::proto::Uri::MergeFrom(from.implicit_rules());
  }
  if (from.has_language()) {
    mutable_language()->::google::fhir::stu3::proto::LanguageCode::MergeFrom(from.language());
  }
  if (from.has_text()) {
    mutable_text()->::google::fhir::stu3::proto::Narrative::MergeFrom(from.text());
  }
  if (from.has_clinical_status()) {
    mutable_clinical_status()->::google::fhir::stu3::proto::ConditionClinicalStatusCodesCode::MergeFrom(from.clinical_status());
  }
  if (from.has_verification_status()) {
    mutable_verification_status()->::google::fhir::stu3::proto::ConditionVerificationStatusCode::MergeFrom(from.verification_status());
  }
  if (from.has_severity()) {
    mutable_severity()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.severity());
  }
  if (from.has_code()) {
    mutable_code()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.code());
  }
  if (from.has_subject()) {
    mutable_subject()->::google::fhir::stu3::proto::Reference::MergeFrom(from.subject());
  }
  if (from.has_context()) {
    mutable_context()->::google::fhir::stu3::proto::Reference::MergeFrom(from.context());
  }
  if (from.has_onset()) {
    mutable_onset()->::google::fhir::stu3::uscore::UsCoreCondition_Onset::MergeFrom(from.onset());
  }
  if (from.has_abatement()) {
    mutable_abatement()->::google::fhir::stu3::uscore::UsCoreCondition_Abatement::MergeFrom(from.abatement());
  }
  if (from.has_asserted_date()) {
    mutable_asserted_date()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.asserted_date());
  }
  if (from.has_asserter()) {
    mutable_asserter()->::google::fhir::stu3::proto::Reference::MergeFrom(from.asserter());
  }
  if (from.has_stage()) {
    mutable_stage()->::google::fhir::stu3::uscore::UsCoreCondition_Stage::MergeFrom(from.stage());
  }
}

void UsCoreCondition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreCondition::CopyFrom(const UsCoreCondition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreCondition::IsInitialized() const {
  return true;
}

void UsCoreCondition::Swap(UsCoreCondition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreCondition::InternalSwap(UsCoreCondition* other) {
  using std::swap;
  CastToBase(&contained_)->InternalSwap(CastToBase(&other->contained_));
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&identifier_)->InternalSwap(CastToBase(&other->identifier_));
  CastToBase(&category_)->InternalSwap(CastToBase(&other->category_));
  CastToBase(&body_site_)->InternalSwap(CastToBase(&other->body_site_));
  CastToBase(&evidence_)->InternalSwap(CastToBase(&other->evidence_));
  CastToBase(&note_)->InternalSwap(CastToBase(&other->note_));
  swap(id_, other->id_);
  swap(meta_, other->meta_);
  swap(implicit_rules_, other->implicit_rules_);
  swap(language_, other->language_);
  swap(text_, other->text_);
  swap(clinical_status_, other->clinical_status_);
  swap(verification_status_, other->verification_status_);
  swap(severity_, other->severity_);
  swap(code_, other->code_);
  swap(subject_, other->subject_);
  swap(context_, other->context_);
  swap(onset_, other->onset_);
  swap(abatement_, other->abatement_);
  swap(asserted_date_, other->asserted_date_);
  swap(asserter_, other->asserter_);
  swap(stage_, other->stage_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreCondition::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreDevice_Udi::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreDevice_Udi_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDevice_Udi_default_instance_._instance.get_mutable()->device_identifier_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDevice_Udi_default_instance_._instance.get_mutable()->name_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDevice_Udi_default_instance_._instance.get_mutable()->jurisdiction_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDevice_Udi_default_instance_._instance.get_mutable()->carrier_h_r_f_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDevice_Udi_default_instance_._instance.get_mutable()->carrier_a_i_d_c_ = const_cast< ::google::fhir::stu3::proto::Base64Binary*>(
      ::google::fhir::stu3::proto::Base64Binary::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDevice_Udi_default_instance_._instance.get_mutable()->issuer_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDevice_Udi_default_instance_._instance.get_mutable()->entry_type_ = const_cast< ::google::fhir::stu3::proto::UDIEntryTypeCode*>(
      ::google::fhir::stu3::proto::UDIEntryTypeCode::internal_default_instance());
}
void UsCoreDevice_Udi::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreDevice_Udi::clear_extension() {
  extension_.Clear();
}
void UsCoreDevice_Udi::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreDevice_Udi::clear_device_identifier() {
  if (GetArenaNoVirtual() == NULL && device_identifier_ != NULL) {
    delete device_identifier_;
  }
  device_identifier_ = NULL;
}
void UsCoreDevice_Udi::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void UsCoreDevice_Udi::clear_jurisdiction() {
  if (GetArenaNoVirtual() == NULL && jurisdiction_ != NULL) {
    delete jurisdiction_;
  }
  jurisdiction_ = NULL;
}
void UsCoreDevice_Udi::clear_carrier_h_r_f() {
  if (GetArenaNoVirtual() == NULL && carrier_h_r_f_ != NULL) {
    delete carrier_h_r_f_;
  }
  carrier_h_r_f_ = NULL;
}
void UsCoreDevice_Udi::clear_carrier_a_i_d_c() {
  if (GetArenaNoVirtual() == NULL && carrier_a_i_d_c_ != NULL) {
    delete carrier_a_i_d_c_;
  }
  carrier_a_i_d_c_ = NULL;
}
void UsCoreDevice_Udi::clear_issuer() {
  if (GetArenaNoVirtual() == NULL && issuer_ != NULL) {
    delete issuer_;
  }
  issuer_ = NULL;
}
void UsCoreDevice_Udi::clear_entry_type() {
  if (GetArenaNoVirtual() == NULL && entry_type_ != NULL) {
    delete entry_type_;
  }
  entry_type_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreDevice_Udi::kIdFieldNumber;
const int UsCoreDevice_Udi::kExtensionFieldNumber;
const int UsCoreDevice_Udi::kModifierExtensionFieldNumber;
const int UsCoreDevice_Udi::kDeviceIdentifierFieldNumber;
const int UsCoreDevice_Udi::kNameFieldNumber;
const int UsCoreDevice_Udi::kJurisdictionFieldNumber;
const int UsCoreDevice_Udi::kCarrierHRFFieldNumber;
const int UsCoreDevice_Udi::kCarrierAIDCFieldNumber;
const int UsCoreDevice_Udi::kIssuerFieldNumber;
const int UsCoreDevice_Udi::kEntryTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreDevice_Udi::UsCoreDevice_Udi()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreDevice_Udi.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreDevice.Udi)
}
UsCoreDevice_Udi::UsCoreDevice_Udi(const UsCoreDevice_Udi& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_device_identifier()) {
    device_identifier_ = new ::google::fhir::stu3::proto::String(*from.device_identifier_);
  } else {
    device_identifier_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::google::fhir::stu3::proto::String(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_jurisdiction()) {
    jurisdiction_ = new ::google::fhir::stu3::proto::Uri(*from.jurisdiction_);
  } else {
    jurisdiction_ = NULL;
  }
  if (from.has_carrier_h_r_f()) {
    carrier_h_r_f_ = new ::google::fhir::stu3::proto::String(*from.carrier_h_r_f_);
  } else {
    carrier_h_r_f_ = NULL;
  }
  if (from.has_carrier_a_i_d_c()) {
    carrier_a_i_d_c_ = new ::google::fhir::stu3::proto::Base64Binary(*from.carrier_a_i_d_c_);
  } else {
    carrier_a_i_d_c_ = NULL;
  }
  if (from.has_issuer()) {
    issuer_ = new ::google::fhir::stu3::proto::Uri(*from.issuer_);
  } else {
    issuer_ = NULL;
  }
  if (from.has_entry_type()) {
    entry_type_ = new ::google::fhir::stu3::proto::UDIEntryTypeCode(*from.entry_type_);
  } else {
    entry_type_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreDevice.Udi)
}

void UsCoreDevice_Udi::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entry_type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(entry_type_));
}

UsCoreDevice_Udi::~UsCoreDevice_Udi() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreDevice.Udi)
  SharedDtor();
}

void UsCoreDevice_Udi::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete device_identifier_;
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete jurisdiction_;
  if (this != internal_default_instance()) delete carrier_h_r_f_;
  if (this != internal_default_instance()) delete carrier_a_i_d_c_;
  if (this != internal_default_instance()) delete issuer_;
  if (this != internal_default_instance()) delete entry_type_;
}

void UsCoreDevice_Udi::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreDevice_Udi::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreDevice_Udi& UsCoreDevice_Udi::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreDevice_Udi.base);
  return *internal_default_instance();
}


void UsCoreDevice_Udi::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreDevice.Udi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && device_identifier_ != NULL) {
    delete device_identifier_;
  }
  device_identifier_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && jurisdiction_ != NULL) {
    delete jurisdiction_;
  }
  jurisdiction_ = NULL;
  if (GetArenaNoVirtual() == NULL && carrier_h_r_f_ != NULL) {
    delete carrier_h_r_f_;
  }
  carrier_h_r_f_ = NULL;
  if (GetArenaNoVirtual() == NULL && carrier_a_i_d_c_ != NULL) {
    delete carrier_a_i_d_c_;
  }
  carrier_a_i_d_c_ = NULL;
  if (GetArenaNoVirtual() == NULL && issuer_ != NULL) {
    delete issuer_;
  }
  issuer_ = NULL;
  if (GetArenaNoVirtual() == NULL && entry_type_ != NULL) {
    delete entry_type_;
  }
  entry_type_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreDevice_Udi::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreDevice.Udi)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String device_identifier = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri jurisdiction = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_jurisdiction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String carrier_h_r_f = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_carrier_h_r_f()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Base64Binary carrier_a_i_d_c = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_carrier_a_i_d_c()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri issuer = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_issuer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.UDIEntryTypeCode entry_type = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_entry_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreDevice.Udi)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreDevice.Udi)
  return false;
#undef DO_
}

void UsCoreDevice_Udi::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreDevice.Udi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.String device_identifier = 4;
  if (this->has_device_identifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_device_identifier(), output);
  }

  // .google.fhir.stu3.proto.String name = 5;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_name(), output);
  }

  // .google.fhir.stu3.proto.Uri jurisdiction = 6;
  if (this->has_jurisdiction()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_jurisdiction(), output);
  }

  // .google.fhir.stu3.proto.String carrier_h_r_f = 7;
  if (this->has_carrier_h_r_f()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_carrier_h_r_f(), output);
  }

  // .google.fhir.stu3.proto.Base64Binary carrier_a_i_d_c = 8;
  if (this->has_carrier_a_i_d_c()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_carrier_a_i_d_c(), output);
  }

  // .google.fhir.stu3.proto.Uri issuer = 9;
  if (this->has_issuer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_issuer(), output);
  }

  // .google.fhir.stu3.proto.UDIEntryTypeCode entry_type = 10;
  if (this->has_entry_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_entry_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreDevice.Udi)
}

::google::protobuf::uint8* UsCoreDevice_Udi::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreDevice.Udi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.String device_identifier = 4;
  if (this->has_device_identifier()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_device_identifier(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String name = 5;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_name(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri jurisdiction = 6;
  if (this->has_jurisdiction()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_jurisdiction(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String carrier_h_r_f = 7;
  if (this->has_carrier_h_r_f()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_carrier_h_r_f(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Base64Binary carrier_a_i_d_c = 8;
  if (this->has_carrier_a_i_d_c()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_carrier_a_i_d_c(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri issuer = 9;
  if (this->has_issuer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_issuer(), deterministic, target);
  }

  // .google.fhir.stu3.proto.UDIEntryTypeCode entry_type = 10;
  if (this->has_entry_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_entry_type(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreDevice.Udi)
  return target;
}

size_t UsCoreDevice_Udi::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreDevice.Udi)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.String device_identifier = 4;
  if (this->has_device_identifier()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *device_identifier_);
  }

  // .google.fhir.stu3.proto.String name = 5;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *name_);
  }

  // .google.fhir.stu3.proto.Uri jurisdiction = 6;
  if (this->has_jurisdiction()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *jurisdiction_);
  }

  // .google.fhir.stu3.proto.String carrier_h_r_f = 7;
  if (this->has_carrier_h_r_f()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *carrier_h_r_f_);
  }

  // .google.fhir.stu3.proto.Base64Binary carrier_a_i_d_c = 8;
  if (this->has_carrier_a_i_d_c()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *carrier_a_i_d_c_);
  }

  // .google.fhir.stu3.proto.Uri issuer = 9;
  if (this->has_issuer()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *issuer_);
  }

  // .google.fhir.stu3.proto.UDIEntryTypeCode entry_type = 10;
  if (this->has_entry_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *entry_type_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreDevice_Udi::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreDevice.Udi)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreDevice_Udi* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreDevice_Udi>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreDevice.Udi)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreDevice.Udi)
    MergeFrom(*source);
  }
}

void UsCoreDevice_Udi::MergeFrom(const UsCoreDevice_Udi& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreDevice.Udi)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_device_identifier()) {
    mutable_device_identifier()->::google::fhir::stu3::proto::String::MergeFrom(from.device_identifier());
  }
  if (from.has_name()) {
    mutable_name()->::google::fhir::stu3::proto::String::MergeFrom(from.name());
  }
  if (from.has_jurisdiction()) {
    mutable_jurisdiction()->::google::fhir::stu3::proto::Uri::MergeFrom(from.jurisdiction());
  }
  if (from.has_carrier_h_r_f()) {
    mutable_carrier_h_r_f()->::google::fhir::stu3::proto::String::MergeFrom(from.carrier_h_r_f());
  }
  if (from.has_carrier_a_i_d_c()) {
    mutable_carrier_a_i_d_c()->::google::fhir::stu3::proto::Base64Binary::MergeFrom(from.carrier_a_i_d_c());
  }
  if (from.has_issuer()) {
    mutable_issuer()->::google::fhir::stu3::proto::Uri::MergeFrom(from.issuer());
  }
  if (from.has_entry_type()) {
    mutable_entry_type()->::google::fhir::stu3::proto::UDIEntryTypeCode::MergeFrom(from.entry_type());
  }
}

void UsCoreDevice_Udi::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreDevice.Udi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreDevice_Udi::CopyFrom(const UsCoreDevice_Udi& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreDevice.Udi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreDevice_Udi::IsInitialized() const {
  return true;
}

void UsCoreDevice_Udi::Swap(UsCoreDevice_Udi* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreDevice_Udi::InternalSwap(UsCoreDevice_Udi* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  swap(id_, other->id_);
  swap(device_identifier_, other->device_identifier_);
  swap(name_, other->name_);
  swap(jurisdiction_, other->jurisdiction_);
  swap(carrier_h_r_f_, other->carrier_h_r_f_);
  swap(carrier_a_i_d_c_, other->carrier_a_i_d_c_);
  swap(issuer_, other->issuer_);
  swap(entry_type_, other->entry_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreDevice_Udi::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreDevice::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreDevice_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::Id*>(
      ::google::fhir::stu3::proto::Id::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDevice_default_instance_._instance.get_mutable()->meta_ = const_cast< ::google::fhir::stu3::proto::Meta*>(
      ::google::fhir::stu3::proto::Meta::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDevice_default_instance_._instance.get_mutable()->implicit_rules_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDevice_default_instance_._instance.get_mutable()->language_ = const_cast< ::google::fhir::stu3::proto::LanguageCode*>(
      ::google::fhir::stu3::proto::LanguageCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDevice_default_instance_._instance.get_mutable()->text_ = const_cast< ::google::fhir::stu3::proto::Narrative*>(
      ::google::fhir::stu3::proto::Narrative::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDevice_default_instance_._instance.get_mutable()->udi_ = const_cast< ::google::fhir::stu3::uscore::UsCoreDevice_Udi*>(
      ::google::fhir::stu3::uscore::UsCoreDevice_Udi::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDevice_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::fhir::stu3::proto::FHIRDeviceStatusCode*>(
      ::google::fhir::stu3::proto::FHIRDeviceStatusCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDevice_default_instance_._instance.get_mutable()->type_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDevice_default_instance_._instance.get_mutable()->lot_number_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDevice_default_instance_._instance.get_mutable()->manufacturer_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDevice_default_instance_._instance.get_mutable()->manufacture_date_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDevice_default_instance_._instance.get_mutable()->expiration_date_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDevice_default_instance_._instance.get_mutable()->model_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDevice_default_instance_._instance.get_mutable()->version_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDevice_default_instance_._instance.get_mutable()->patient_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDevice_default_instance_._instance.get_mutable()->owner_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDevice_default_instance_._instance.get_mutable()->location_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDevice_default_instance_._instance.get_mutable()->url_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
}
void UsCoreDevice::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreDevice::clear_meta() {
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
}
void UsCoreDevice::clear_implicit_rules() {
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
}
void UsCoreDevice::clear_language() {
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
}
void UsCoreDevice::clear_text() {
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
}
void UsCoreDevice::clear_contained() {
  contained_.Clear();
}
void UsCoreDevice::clear_extension() {
  extension_.Clear();
}
void UsCoreDevice::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreDevice::clear_identifier() {
  identifier_.Clear();
}
void UsCoreDevice::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
void UsCoreDevice::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
}
void UsCoreDevice::clear_lot_number() {
  if (GetArenaNoVirtual() == NULL && lot_number_ != NULL) {
    delete lot_number_;
  }
  lot_number_ = NULL;
}
void UsCoreDevice::clear_manufacturer() {
  if (GetArenaNoVirtual() == NULL && manufacturer_ != NULL) {
    delete manufacturer_;
  }
  manufacturer_ = NULL;
}
void UsCoreDevice::clear_manufacture_date() {
  if (GetArenaNoVirtual() == NULL && manufacture_date_ != NULL) {
    delete manufacture_date_;
  }
  manufacture_date_ = NULL;
}
void UsCoreDevice::clear_expiration_date() {
  if (GetArenaNoVirtual() == NULL && expiration_date_ != NULL) {
    delete expiration_date_;
  }
  expiration_date_ = NULL;
}
void UsCoreDevice::clear_model() {
  if (GetArenaNoVirtual() == NULL && model_ != NULL) {
    delete model_;
  }
  model_ = NULL;
}
void UsCoreDevice::clear_version() {
  if (GetArenaNoVirtual() == NULL && version_ != NULL) {
    delete version_;
  }
  version_ = NULL;
}
void UsCoreDevice::clear_patient() {
  if (GetArenaNoVirtual() == NULL && patient_ != NULL) {
    delete patient_;
  }
  patient_ = NULL;
}
void UsCoreDevice::clear_owner() {
  if (GetArenaNoVirtual() == NULL && owner_ != NULL) {
    delete owner_;
  }
  owner_ = NULL;
}
void UsCoreDevice::clear_contact() {
  contact_.Clear();
}
void UsCoreDevice::clear_location() {
  if (GetArenaNoVirtual() == NULL && location_ != NULL) {
    delete location_;
  }
  location_ = NULL;
}
void UsCoreDevice::clear_url() {
  if (GetArenaNoVirtual() == NULL && url_ != NULL) {
    delete url_;
  }
  url_ = NULL;
}
void UsCoreDevice::clear_note() {
  note_.Clear();
}
void UsCoreDevice::clear_safety() {
  safety_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreDevice::kIdFieldNumber;
const int UsCoreDevice::kMetaFieldNumber;
const int UsCoreDevice::kImplicitRulesFieldNumber;
const int UsCoreDevice::kLanguageFieldNumber;
const int UsCoreDevice::kTextFieldNumber;
const int UsCoreDevice::kContainedFieldNumber;
const int UsCoreDevice::kExtensionFieldNumber;
const int UsCoreDevice::kModifierExtensionFieldNumber;
const int UsCoreDevice::kIdentifierFieldNumber;
const int UsCoreDevice::kUdiFieldNumber;
const int UsCoreDevice::kStatusFieldNumber;
const int UsCoreDevice::kTypeFieldNumber;
const int UsCoreDevice::kLotNumberFieldNumber;
const int UsCoreDevice::kManufacturerFieldNumber;
const int UsCoreDevice::kManufactureDateFieldNumber;
const int UsCoreDevice::kExpirationDateFieldNumber;
const int UsCoreDevice::kModelFieldNumber;
const int UsCoreDevice::kVersionFieldNumber;
const int UsCoreDevice::kPatientFieldNumber;
const int UsCoreDevice::kOwnerFieldNumber;
const int UsCoreDevice::kContactFieldNumber;
const int UsCoreDevice::kLocationFieldNumber;
const int UsCoreDevice::kUrlFieldNumber;
const int UsCoreDevice::kNoteFieldNumber;
const int UsCoreDevice::kSafetyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreDevice::UsCoreDevice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreDevice.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreDevice)
}
UsCoreDevice::UsCoreDevice(const UsCoreDevice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      contained_(from.contained_),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      identifier_(from.identifier_),
      contact_(from.contact_),
      note_(from.note_),
      safety_(from.safety_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::Id(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_meta()) {
    meta_ = new ::google::fhir::stu3::proto::Meta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  if (from.has_implicit_rules()) {
    implicit_rules_ = new ::google::fhir::stu3::proto::Uri(*from.implicit_rules_);
  } else {
    implicit_rules_ = NULL;
  }
  if (from.has_language()) {
    language_ = new ::google::fhir::stu3::proto::LanguageCode(*from.language_);
  } else {
    language_ = NULL;
  }
  if (from.has_text()) {
    text_ = new ::google::fhir::stu3::proto::Narrative(*from.text_);
  } else {
    text_ = NULL;
  }
  if (from.has_udi()) {
    udi_ = new ::google::fhir::stu3::uscore::UsCoreDevice_Udi(*from.udi_);
  } else {
    udi_ = NULL;
  }
  if (from.has_status()) {
    status_ = new ::google::fhir::stu3::proto::FHIRDeviceStatusCode(*from.status_);
  } else {
    status_ = NULL;
  }
  if (from.has_type()) {
    type_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.type_);
  } else {
    type_ = NULL;
  }
  if (from.has_lot_number()) {
    lot_number_ = new ::google::fhir::stu3::proto::String(*from.lot_number_);
  } else {
    lot_number_ = NULL;
  }
  if (from.has_manufacturer()) {
    manufacturer_ = new ::google::fhir::stu3::proto::String(*from.manufacturer_);
  } else {
    manufacturer_ = NULL;
  }
  if (from.has_manufacture_date()) {
    manufacture_date_ = new ::google::fhir::stu3::proto::DateTime(*from.manufacture_date_);
  } else {
    manufacture_date_ = NULL;
  }
  if (from.has_expiration_date()) {
    expiration_date_ = new ::google::fhir::stu3::proto::DateTime(*from.expiration_date_);
  } else {
    expiration_date_ = NULL;
  }
  if (from.has_model()) {
    model_ = new ::google::fhir::stu3::proto::String(*from.model_);
  } else {
    model_ = NULL;
  }
  if (from.has_version()) {
    version_ = new ::google::fhir::stu3::proto::String(*from.version_);
  } else {
    version_ = NULL;
  }
  if (from.has_patient()) {
    patient_ = new ::google::fhir::stu3::proto::Reference(*from.patient_);
  } else {
    patient_ = NULL;
  }
  if (from.has_owner()) {
    owner_ = new ::google::fhir::stu3::proto::Reference(*from.owner_);
  } else {
    owner_ = NULL;
  }
  if (from.has_location()) {
    location_ = new ::google::fhir::stu3::proto::Reference(*from.location_);
  } else {
    location_ = NULL;
  }
  if (from.has_url()) {
    url_ = new ::google::fhir::stu3::proto::Uri(*from.url_);
  } else {
    url_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreDevice)
}

void UsCoreDevice::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&url_) -
      reinterpret_cast<char*>(&id_)) + sizeof(url_));
}

UsCoreDevice::~UsCoreDevice() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreDevice)
  SharedDtor();
}

void UsCoreDevice::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete implicit_rules_;
  if (this != internal_default_instance()) delete language_;
  if (this != internal_default_instance()) delete text_;
  if (this != internal_default_instance()) delete udi_;
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete type_;
  if (this != internal_default_instance()) delete lot_number_;
  if (this != internal_default_instance()) delete manufacturer_;
  if (this != internal_default_instance()) delete manufacture_date_;
  if (this != internal_default_instance()) delete expiration_date_;
  if (this != internal_default_instance()) delete model_;
  if (this != internal_default_instance()) delete version_;
  if (this != internal_default_instance()) delete patient_;
  if (this != internal_default_instance()) delete owner_;
  if (this != internal_default_instance()) delete location_;
  if (this != internal_default_instance()) delete url_;
}

void UsCoreDevice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreDevice::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreDevice& UsCoreDevice::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreDevice.base);
  return *internal_default_instance();
}


void UsCoreDevice::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contained_.Clear();
  extension_.Clear();
  modifier_extension_.Clear();
  identifier_.Clear();
  contact_.Clear();
  note_.Clear();
  safety_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  if (GetArenaNoVirtual() == NULL && udi_ != NULL) {
    delete udi_;
  }
  udi_ = NULL;
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  if (GetArenaNoVirtual() == NULL && lot_number_ != NULL) {
    delete lot_number_;
  }
  lot_number_ = NULL;
  if (GetArenaNoVirtual() == NULL && manufacturer_ != NULL) {
    delete manufacturer_;
  }
  manufacturer_ = NULL;
  if (GetArenaNoVirtual() == NULL && manufacture_date_ != NULL) {
    delete manufacture_date_;
  }
  manufacture_date_ = NULL;
  if (GetArenaNoVirtual() == NULL && expiration_date_ != NULL) {
    delete expiration_date_;
  }
  expiration_date_ = NULL;
  if (GetArenaNoVirtual() == NULL && model_ != NULL) {
    delete model_;
  }
  model_ = NULL;
  if (GetArenaNoVirtual() == NULL && version_ != NULL) {
    delete version_;
  }
  version_ = NULL;
  if (GetArenaNoVirtual() == NULL && patient_ != NULL) {
    delete patient_;
  }
  patient_ = NULL;
  if (GetArenaNoVirtual() == NULL && owner_ != NULL) {
    delete owner_;
  }
  owner_ = NULL;
  if (GetArenaNoVirtual() == NULL && location_ != NULL) {
    delete location_;
  }
  location_ = NULL;
  if (GetArenaNoVirtual() == NULL && url_ != NULL) {
    delete url_;
  }
  url_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreDevice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreDevice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Id id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Meta meta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri implicit_rules = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_implicit_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.LanguageCode language = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_language()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Narrative text = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_contained()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreDevice.Udi udi = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_udi()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.FHIRDeviceStatusCode status = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept type = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String lot_number = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lot_number()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String manufacturer = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_manufacturer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DateTime manufacture_date = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_manufacture_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DateTime expiration_date = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expiration_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String model = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_model()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String version = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference patient = 19 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_patient()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference owner = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_owner()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ContactPoint contact = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_contact()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference location = 22 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Location"];
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri url = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Annotation note = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_note()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept safety = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_safety()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreDevice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreDevice)
  return false;
#undef DO_
}

void UsCoreDevice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_meta(), output);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_implicit_rules(), output);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_language(), output);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_text(), output);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->contained(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->identifier(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.uscore.UsCoreDevice.Udi udi = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_udi()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_udi(), output);
  }

  // .google.fhir.stu3.proto.FHIRDeviceStatusCode status = 11;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_status(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept type = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_type(), output);
  }

  // .google.fhir.stu3.proto.String lot_number = 13;
  if (this->has_lot_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_lot_number(), output);
  }

  // .google.fhir.stu3.proto.String manufacturer = 14;
  if (this->has_manufacturer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_manufacturer(), output);
  }

  // .google.fhir.stu3.proto.DateTime manufacture_date = 15;
  if (this->has_manufacture_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_manufacture_date(), output);
  }

  // .google.fhir.stu3.proto.DateTime expiration_date = 16;
  if (this->has_expiration_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_expiration_date(), output);
  }

  // .google.fhir.stu3.proto.String model = 17;
  if (this->has_model()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_model(), output);
  }

  // .google.fhir.stu3.proto.String version = 18;
  if (this->has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_version(), output);
  }

  // .google.fhir.stu3.proto.Reference patient = 19 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_patient()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_patient(), output);
  }

  // .google.fhir.stu3.proto.Reference owner = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_owner()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_owner(), output);
  }

  // repeated .google.fhir.stu3.proto.ContactPoint contact = 21;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contact_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21,
      this->contact(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Reference location = 22 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Location"];
  if (this->has_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->_internal_location(), output);
  }

  // .google.fhir.stu3.proto.Uri url = 23;
  if (this->has_url()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->_internal_url(), output);
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 24;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->note_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24,
      this->note(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept safety = 25;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->safety_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25,
      this->safety(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreDevice)
}

::google::protobuf::uint8* UsCoreDevice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_meta(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_implicit_rules(), deterministic, target);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_language(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_text(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->contained(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->identifier(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreDevice.Udi udi = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_udi()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_udi(), deterministic, target);
  }

  // .google.fhir.stu3.proto.FHIRDeviceStatusCode status = 11;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_status(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept type = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_type(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String lot_number = 13;
  if (this->has_lot_number()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_lot_number(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String manufacturer = 14;
  if (this->has_manufacturer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_manufacturer(), deterministic, target);
  }

  // .google.fhir.stu3.proto.DateTime manufacture_date = 15;
  if (this->has_manufacture_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_manufacture_date(), deterministic, target);
  }

  // .google.fhir.stu3.proto.DateTime expiration_date = 16;
  if (this->has_expiration_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_expiration_date(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String model = 17;
  if (this->has_model()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_model(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String version = 18;
  if (this->has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_version(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference patient = 19 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_patient()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_patient(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference owner = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_owner()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_owner(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ContactPoint contact = 21;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contact_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->contact(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference location = 22 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Location"];
  if (this->has_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->_internal_location(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri url = 23;
  if (this->has_url()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->_internal_url(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 24;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->note_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->note(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept safety = 25;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->safety_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->safety(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreDevice)
  return target;
}

size_t UsCoreDevice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreDevice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->contained_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->contained(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->identifier_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->identifier(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.ContactPoint contact = 21;
  {
    unsigned int count = static_cast<unsigned int>(this->contact_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->contact(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 24;
  {
    unsigned int count = static_cast<unsigned int>(this->note_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->note(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept safety = 25;
  {
    unsigned int count = static_cast<unsigned int>(this->safety_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->safety(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *implicit_rules_);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *language_);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *text_);
  }

  // .google.fhir.stu3.uscore.UsCoreDevice.Udi udi = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_udi()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *udi_);
  }

  // .google.fhir.stu3.proto.FHIRDeviceStatusCode status = 11;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .google.fhir.stu3.proto.CodeableConcept type = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  // .google.fhir.stu3.proto.String lot_number = 13;
  if (this->has_lot_number()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *lot_number_);
  }

  // .google.fhir.stu3.proto.String manufacturer = 14;
  if (this->has_manufacturer()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *manufacturer_);
  }

  // .google.fhir.stu3.proto.DateTime manufacture_date = 15;
  if (this->has_manufacture_date()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *manufacture_date_);
  }

  // .google.fhir.stu3.proto.DateTime expiration_date = 16;
  if (this->has_expiration_date()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expiration_date_);
  }

  // .google.fhir.stu3.proto.String model = 17;
  if (this->has_model()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *model_);
  }

  // .google.fhir.stu3.proto.String version = 18;
  if (this->has_version()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *version_);
  }

  // .google.fhir.stu3.proto.Reference patient = 19 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_patient()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *patient_);
  }

  // .google.fhir.stu3.proto.Reference owner = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_owner()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *owner_);
  }

  // .google.fhir.stu3.proto.Reference location = 22 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Location"];
  if (this->has_location()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *location_);
  }

  // .google.fhir.stu3.proto.Uri url = 23;
  if (this->has_url()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *url_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreDevice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreDevice)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreDevice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreDevice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreDevice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreDevice)
    MergeFrom(*source);
  }
}

void UsCoreDevice::MergeFrom(const UsCoreDevice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreDevice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contained_.MergeFrom(from.contained_);
  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  identifier_.MergeFrom(from.identifier_);
  contact_.MergeFrom(from.contact_);
  note_.MergeFrom(from.note_);
  safety_.MergeFrom(from.safety_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::Id::MergeFrom(from.id());
  }
  if (from.has_meta()) {
    mutable_meta()->::google::fhir::stu3::proto::Meta::MergeFrom(from.meta());
  }
  if (from.has_implicit_rules()) {
    mutable_implicit_rules()->::google::fhir::stu3::proto::Uri::MergeFrom(from.implicit_rules());
  }
  if (from.has_language()) {
    mutable_language()->::google::fhir::stu3::proto::LanguageCode::MergeFrom(from.language());
  }
  if (from.has_text()) {
    mutable_text()->::google::fhir::stu3::proto::Narrative::MergeFrom(from.text());
  }
  if (from.has_udi()) {
    mutable_udi()->::google::fhir::stu3::uscore::UsCoreDevice_Udi::MergeFrom(from.udi());
  }
  if (from.has_status()) {
    mutable_status()->::google::fhir::stu3::proto::FHIRDeviceStatusCode::MergeFrom(from.status());
  }
  if (from.has_type()) {
    mutable_type()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.type());
  }
  if (from.has_lot_number()) {
    mutable_lot_number()->::google::fhir::stu3::proto::String::MergeFrom(from.lot_number());
  }
  if (from.has_manufacturer()) {
    mutable_manufacturer()->::google::fhir::stu3::proto::String::MergeFrom(from.manufacturer());
  }
  if (from.has_manufacture_date()) {
    mutable_manufacture_date()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.manufacture_date());
  }
  if (from.has_expiration_date()) {
    mutable_expiration_date()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.expiration_date());
  }
  if (from.has_model()) {
    mutable_model()->::google::fhir::stu3::proto::String::MergeFrom(from.model());
  }
  if (from.has_version()) {
    mutable_version()->::google::fhir::stu3::proto::String::MergeFrom(from.version());
  }
  if (from.has_patient()) {
    mutable_patient()->::google::fhir::stu3::proto::Reference::MergeFrom(from.patient());
  }
  if (from.has_owner()) {
    mutable_owner()->::google::fhir::stu3::proto::Reference::MergeFrom(from.owner());
  }
  if (from.has_location()) {
    mutable_location()->::google::fhir::stu3::proto::Reference::MergeFrom(from.location());
  }
  if (from.has_url()) {
    mutable_url()->::google::fhir::stu3::proto::Uri::MergeFrom(from.url());
  }
}

void UsCoreDevice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreDevice::CopyFrom(const UsCoreDevice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreDevice::IsInitialized() const {
  return true;
}

void UsCoreDevice::Swap(UsCoreDevice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreDevice::InternalSwap(UsCoreDevice* other) {
  using std::swap;
  CastToBase(&contained_)->InternalSwap(CastToBase(&other->contained_));
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&identifier_)->InternalSwap(CastToBase(&other->identifier_));
  CastToBase(&contact_)->InternalSwap(CastToBase(&other->contact_));
  CastToBase(&note_)->InternalSwap(CastToBase(&other->note_));
  CastToBase(&safety_)->InternalSwap(CastToBase(&other->safety_));
  swap(id_, other->id_);
  swap(meta_, other->meta_);
  swap(implicit_rules_, other->implicit_rules_);
  swap(language_, other->language_);
  swap(text_, other->text_);
  swap(udi_, other->udi_);
  swap(status_, other->status_);
  swap(type_, other->type_);
  swap(lot_number_, other->lot_number_);
  swap(manufacturer_, other->manufacturer_);
  swap(manufacture_date_, other->manufacture_date_);
  swap(expiration_date_, other->expiration_date_);
  swap(model_, other->model_);
  swap(version_, other->version_);
  swap(patient_, other->patient_);
  swap(owner_, other->owner_);
  swap(location_, other->location_);
  swap(url_, other->url_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreDevice::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreDiagnosticreport_Effective::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreDiagnosticreport_Effective_default_instance_.date_time_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDiagnosticreport_Effective_default_instance_.period_ = const_cast< ::google::fhir::stu3::proto::Period*>(
      ::google::fhir::stu3::proto::Period::internal_default_instance());
}
void UsCoreDiagnosticreport_Effective::set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_effective();
  if (date_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date_time, submessage_arena);
    }
    set_has_date_time();
    effective_.date_time_ = date_time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective.date_time)
}
void UsCoreDiagnosticreport_Effective::clear_date_time() {
  if (has_date_time()) {
    delete effective_.date_time_;
    clear_has_effective();
  }
}
void UsCoreDiagnosticreport_Effective::set_allocated_period(::google::fhir::stu3::proto::Period* period) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_effective();
  if (period) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      period = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, period, submessage_arena);
    }
    set_has_period();
    effective_.period_ = period;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective.period)
}
void UsCoreDiagnosticreport_Effective::clear_period() {
  if (has_period()) {
    delete effective_.period_;
    clear_has_effective();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreDiagnosticreport_Effective::kDateTimeFieldNumber;
const int UsCoreDiagnosticreport_Effective::kPeriodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreDiagnosticreport_Effective::UsCoreDiagnosticreport_Effective()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreDiagnosticreport_Effective.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective)
}
UsCoreDiagnosticreport_Effective::UsCoreDiagnosticreport_Effective(const UsCoreDiagnosticreport_Effective& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_effective();
  switch (from.effective_case()) {
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case EFFECTIVE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective)
}

void UsCoreDiagnosticreport_Effective::SharedCtor() {
  clear_has_effective();
}

UsCoreDiagnosticreport_Effective::~UsCoreDiagnosticreport_Effective() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective)
  SharedDtor();
}

void UsCoreDiagnosticreport_Effective::SharedDtor() {
  if (has_effective()) {
    clear_effective();
  }
}

void UsCoreDiagnosticreport_Effective::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreDiagnosticreport_Effective::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreDiagnosticreport_Effective& UsCoreDiagnosticreport_Effective::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreDiagnosticreport_Effective.base);
  return *internal_default_instance();
}


void UsCoreDiagnosticreport_Effective::clear_effective() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective)
  switch (effective_case()) {
    case kDateTime: {
      delete effective_.date_time_;
      break;
    }
    case kPeriod: {
      delete effective_.period_;
      break;
    }
    case EFFECTIVE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EFFECTIVE_NOT_SET;
}


void UsCoreDiagnosticreport_Effective::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_effective();
  _internal_metadata_.Clear();
}

bool UsCoreDiagnosticreport_Effective::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.DateTime date_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Period period = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective)
  return false;
#undef DO_
}

void UsCoreDiagnosticreport_Effective::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.DateTime date_time = 1;
  if (has_date_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_date_time(), output);
  }

  // .google.fhir.stu3.proto.Period period = 2;
  if (has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_period(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective)
}

::google::protobuf::uint8* UsCoreDiagnosticreport_Effective::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.DateTime date_time = 1;
  if (has_date_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_date_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Period period = 2;
  if (has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_period(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective)
  return target;
}

size_t UsCoreDiagnosticreport_Effective::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (effective_case()) {
    // .google.fhir.stu3.proto.DateTime date_time = 1;
    case kDateTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *effective_.date_time_);
      break;
    }
    // .google.fhir.stu3.proto.Period period = 2;
    case kPeriod: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *effective_.period_);
      break;
    }
    case EFFECTIVE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreDiagnosticreport_Effective::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreDiagnosticreport_Effective* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreDiagnosticreport_Effective>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective)
    MergeFrom(*source);
  }
}

void UsCoreDiagnosticreport_Effective::MergeFrom(const UsCoreDiagnosticreport_Effective& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.effective_case()) {
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case EFFECTIVE_NOT_SET: {
      break;
    }
  }
}

void UsCoreDiagnosticreport_Effective::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreDiagnosticreport_Effective::CopyFrom(const UsCoreDiagnosticreport_Effective& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreDiagnosticreport_Effective::IsInitialized() const {
  return true;
}

void UsCoreDiagnosticreport_Effective::Swap(UsCoreDiagnosticreport_Effective* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreDiagnosticreport_Effective::InternalSwap(UsCoreDiagnosticreport_Effective* other) {
  using std::swap;
  swap(effective_, other->effective_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreDiagnosticreport_Effective::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreDiagnosticreport_Performer::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreDiagnosticreport_Performer_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDiagnosticreport_Performer_default_instance_._instance.get_mutable()->role_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDiagnosticreport_Performer_default_instance_._instance.get_mutable()->actor_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
}
void UsCoreDiagnosticreport_Performer::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreDiagnosticreport_Performer::clear_extension() {
  extension_.Clear();
}
void UsCoreDiagnosticreport_Performer::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreDiagnosticreport_Performer::clear_role() {
  if (GetArenaNoVirtual() == NULL && role_ != NULL) {
    delete role_;
  }
  role_ = NULL;
}
void UsCoreDiagnosticreport_Performer::clear_actor() {
  if (GetArenaNoVirtual() == NULL && actor_ != NULL) {
    delete actor_;
  }
  actor_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreDiagnosticreport_Performer::kIdFieldNumber;
const int UsCoreDiagnosticreport_Performer::kExtensionFieldNumber;
const int UsCoreDiagnosticreport_Performer::kModifierExtensionFieldNumber;
const int UsCoreDiagnosticreport_Performer::kRoleFieldNumber;
const int UsCoreDiagnosticreport_Performer::kActorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreDiagnosticreport_Performer::UsCoreDiagnosticreport_Performer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreDiagnosticreport_Performer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer)
}
UsCoreDiagnosticreport_Performer::UsCoreDiagnosticreport_Performer(const UsCoreDiagnosticreport_Performer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_role()) {
    role_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.role_);
  } else {
    role_ = NULL;
  }
  if (from.has_actor()) {
    actor_ = new ::google::fhir::stu3::proto::Reference(*from.actor_);
  } else {
    actor_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer)
}

void UsCoreDiagnosticreport_Performer::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&actor_) -
      reinterpret_cast<char*>(&id_)) + sizeof(actor_));
}

UsCoreDiagnosticreport_Performer::~UsCoreDiagnosticreport_Performer() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer)
  SharedDtor();
}

void UsCoreDiagnosticreport_Performer::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete role_;
  if (this != internal_default_instance()) delete actor_;
}

void UsCoreDiagnosticreport_Performer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreDiagnosticreport_Performer::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreDiagnosticreport_Performer& UsCoreDiagnosticreport_Performer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreDiagnosticreport_Performer.base);
  return *internal_default_instance();
}


void UsCoreDiagnosticreport_Performer::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && role_ != NULL) {
    delete role_;
  }
  role_ = NULL;
  if (GetArenaNoVirtual() == NULL && actor_ != NULL) {
    delete actor_;
  }
  actor_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreDiagnosticreport_Performer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept role = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_role()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference actor = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-organization"];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_actor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer)
  return false;
#undef DO_
}

void UsCoreDiagnosticreport_Performer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.CodeableConcept role = 4;
  if (this->has_role()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_role(), output);
  }

  // .google.fhir.stu3.proto.Reference actor = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-organization"];
  if (this->has_actor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_actor(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer)
}

::google::protobuf::uint8* UsCoreDiagnosticreport_Performer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept role = 4;
  if (this->has_role()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_role(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference actor = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-organization"];
  if (this->has_actor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_actor(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer)
  return target;
}

size_t UsCoreDiagnosticreport_Performer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.CodeableConcept role = 4;
  if (this->has_role()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *role_);
  }

  // .google.fhir.stu3.proto.Reference actor = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-organization"];
  if (this->has_actor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *actor_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreDiagnosticreport_Performer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreDiagnosticreport_Performer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreDiagnosticreport_Performer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer)
    MergeFrom(*source);
  }
}

void UsCoreDiagnosticreport_Performer::MergeFrom(const UsCoreDiagnosticreport_Performer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_role()) {
    mutable_role()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.role());
  }
  if (from.has_actor()) {
    mutable_actor()->::google::fhir::stu3::proto::Reference::MergeFrom(from.actor());
  }
}

void UsCoreDiagnosticreport_Performer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreDiagnosticreport_Performer::CopyFrom(const UsCoreDiagnosticreport_Performer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreDiagnosticreport_Performer::IsInitialized() const {
  return true;
}

void UsCoreDiagnosticreport_Performer::Swap(UsCoreDiagnosticreport_Performer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreDiagnosticreport_Performer::InternalSwap(UsCoreDiagnosticreport_Performer* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  swap(id_, other->id_);
  swap(role_, other->role_);
  swap(actor_, other->actor_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreDiagnosticreport_Performer::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreDiagnosticreport_Image::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreDiagnosticreport_Image_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDiagnosticreport_Image_default_instance_._instance.get_mutable()->comment_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDiagnosticreport_Image_default_instance_._instance.get_mutable()->link_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
}
void UsCoreDiagnosticreport_Image::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreDiagnosticreport_Image::clear_extension() {
  extension_.Clear();
}
void UsCoreDiagnosticreport_Image::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreDiagnosticreport_Image::clear_comment() {
  if (GetArenaNoVirtual() == NULL && comment_ != NULL) {
    delete comment_;
  }
  comment_ = NULL;
}
void UsCoreDiagnosticreport_Image::clear_link() {
  if (GetArenaNoVirtual() == NULL && link_ != NULL) {
    delete link_;
  }
  link_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreDiagnosticreport_Image::kIdFieldNumber;
const int UsCoreDiagnosticreport_Image::kExtensionFieldNumber;
const int UsCoreDiagnosticreport_Image::kModifierExtensionFieldNumber;
const int UsCoreDiagnosticreport_Image::kCommentFieldNumber;
const int UsCoreDiagnosticreport_Image::kLinkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreDiagnosticreport_Image::UsCoreDiagnosticreport_Image()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreDiagnosticreport_Image.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image)
}
UsCoreDiagnosticreport_Image::UsCoreDiagnosticreport_Image(const UsCoreDiagnosticreport_Image& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_comment()) {
    comment_ = new ::google::fhir::stu3::proto::String(*from.comment_);
  } else {
    comment_ = NULL;
  }
  if (from.has_link()) {
    link_ = new ::google::fhir::stu3::proto::Reference(*from.link_);
  } else {
    link_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image)
}

void UsCoreDiagnosticreport_Image::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&link_) -
      reinterpret_cast<char*>(&id_)) + sizeof(link_));
}

UsCoreDiagnosticreport_Image::~UsCoreDiagnosticreport_Image() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image)
  SharedDtor();
}

void UsCoreDiagnosticreport_Image::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete comment_;
  if (this != internal_default_instance()) delete link_;
}

void UsCoreDiagnosticreport_Image::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreDiagnosticreport_Image::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreDiagnosticreport_Image& UsCoreDiagnosticreport_Image::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreDiagnosticreport_Image.base);
  return *internal_default_instance();
}


void UsCoreDiagnosticreport_Image::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && comment_ != NULL) {
    delete comment_;
  }
  comment_ = NULL;
  if (GetArenaNoVirtual() == NULL && link_ != NULL) {
    delete link_;
  }
  link_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreDiagnosticreport_Image::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String comment = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_comment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference link = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Media"];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_link()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image)
  return false;
#undef DO_
}

void UsCoreDiagnosticreport_Image::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.String comment = 4;
  if (this->has_comment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_comment(), output);
  }

  // .google.fhir.stu3.proto.Reference link = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Media"];
  if (this->has_link()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_link(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image)
}

::google::protobuf::uint8* UsCoreDiagnosticreport_Image::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.String comment = 4;
  if (this->has_comment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_comment(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference link = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Media"];
  if (this->has_link()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_link(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image)
  return target;
}

size_t UsCoreDiagnosticreport_Image::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.String comment = 4;
  if (this->has_comment()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *comment_);
  }

  // .google.fhir.stu3.proto.Reference link = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Media"];
  if (this->has_link()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *link_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreDiagnosticreport_Image::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreDiagnosticreport_Image* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreDiagnosticreport_Image>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image)
    MergeFrom(*source);
  }
}

void UsCoreDiagnosticreport_Image::MergeFrom(const UsCoreDiagnosticreport_Image& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_comment()) {
    mutable_comment()->::google::fhir::stu3::proto::String::MergeFrom(from.comment());
  }
  if (from.has_link()) {
    mutable_link()->::google::fhir::stu3::proto::Reference::MergeFrom(from.link());
  }
}

void UsCoreDiagnosticreport_Image::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreDiagnosticreport_Image::CopyFrom(const UsCoreDiagnosticreport_Image& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreDiagnosticreport_Image::IsInitialized() const {
  return true;
}

void UsCoreDiagnosticreport_Image::Swap(UsCoreDiagnosticreport_Image* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreDiagnosticreport_Image::InternalSwap(UsCoreDiagnosticreport_Image* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  swap(id_, other->id_);
  swap(comment_, other->comment_);
  swap(link_, other->link_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreDiagnosticreport_Image::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreDiagnosticreport::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreDiagnosticreport_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::Id*>(
      ::google::fhir::stu3::proto::Id::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDiagnosticreport_default_instance_._instance.get_mutable()->meta_ = const_cast< ::google::fhir::stu3::proto::Meta*>(
      ::google::fhir::stu3::proto::Meta::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDiagnosticreport_default_instance_._instance.get_mutable()->implicit_rules_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDiagnosticreport_default_instance_._instance.get_mutable()->language_ = const_cast< ::google::fhir::stu3::proto::LanguageCode*>(
      ::google::fhir::stu3::proto::LanguageCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDiagnosticreport_default_instance_._instance.get_mutable()->text_ = const_cast< ::google::fhir::stu3::proto::Narrative*>(
      ::google::fhir::stu3::proto::Narrative::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDiagnosticreport_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::fhir::stu3::proto::DiagnosticReportStatusCode*>(
      ::google::fhir::stu3::proto::DiagnosticReportStatusCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDiagnosticreport_default_instance_._instance.get_mutable()->category_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDiagnosticreport_default_instance_._instance.get_mutable()->code_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDiagnosticreport_default_instance_._instance.get_mutable()->subject_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDiagnosticreport_default_instance_._instance.get_mutable()->context_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDiagnosticreport_default_instance_._instance.get_mutable()->effective_ = const_cast< ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Effective*>(
      ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Effective::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDiagnosticreport_default_instance_._instance.get_mutable()->issued_ = const_cast< ::google::fhir::stu3::proto::Instant*>(
      ::google::fhir::stu3::proto::Instant::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreDiagnosticreport_default_instance_._instance.get_mutable()->conclusion_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
void UsCoreDiagnosticreport::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreDiagnosticreport::clear_meta() {
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
}
void UsCoreDiagnosticreport::clear_implicit_rules() {
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
}
void UsCoreDiagnosticreport::clear_language() {
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
}
void UsCoreDiagnosticreport::clear_text() {
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
}
void UsCoreDiagnosticreport::clear_contained() {
  contained_.Clear();
}
void UsCoreDiagnosticreport::clear_extension() {
  extension_.Clear();
}
void UsCoreDiagnosticreport::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreDiagnosticreport::clear_identifier() {
  identifier_.Clear();
}
void UsCoreDiagnosticreport::clear_based_on() {
  based_on_.Clear();
}
void UsCoreDiagnosticreport::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
void UsCoreDiagnosticreport::clear_category() {
  if (GetArenaNoVirtual() == NULL && category_ != NULL) {
    delete category_;
  }
  category_ = NULL;
}
void UsCoreDiagnosticreport::clear_code() {
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
}
void UsCoreDiagnosticreport::clear_subject() {
  if (GetArenaNoVirtual() == NULL && subject_ != NULL) {
    delete subject_;
  }
  subject_ = NULL;
}
void UsCoreDiagnosticreport::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
}
void UsCoreDiagnosticreport::clear_issued() {
  if (GetArenaNoVirtual() == NULL && issued_ != NULL) {
    delete issued_;
  }
  issued_ = NULL;
}
void UsCoreDiagnosticreport::clear_specimen() {
  specimen_.Clear();
}
void UsCoreDiagnosticreport::clear_result() {
  result_.Clear();
}
void UsCoreDiagnosticreport::clear_imaging_study() {
  imaging_study_.Clear();
}
void UsCoreDiagnosticreport::clear_conclusion() {
  if (GetArenaNoVirtual() == NULL && conclusion_ != NULL) {
    delete conclusion_;
  }
  conclusion_ = NULL;
}
void UsCoreDiagnosticreport::clear_coded_diagnosis() {
  coded_diagnosis_.Clear();
}
void UsCoreDiagnosticreport::clear_presented_form() {
  presented_form_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreDiagnosticreport::kIdFieldNumber;
const int UsCoreDiagnosticreport::kMetaFieldNumber;
const int UsCoreDiagnosticreport::kImplicitRulesFieldNumber;
const int UsCoreDiagnosticreport::kLanguageFieldNumber;
const int UsCoreDiagnosticreport::kTextFieldNumber;
const int UsCoreDiagnosticreport::kContainedFieldNumber;
const int UsCoreDiagnosticreport::kExtensionFieldNumber;
const int UsCoreDiagnosticreport::kModifierExtensionFieldNumber;
const int UsCoreDiagnosticreport::kIdentifierFieldNumber;
const int UsCoreDiagnosticreport::kBasedOnFieldNumber;
const int UsCoreDiagnosticreport::kStatusFieldNumber;
const int UsCoreDiagnosticreport::kCategoryFieldNumber;
const int UsCoreDiagnosticreport::kCodeFieldNumber;
const int UsCoreDiagnosticreport::kSubjectFieldNumber;
const int UsCoreDiagnosticreport::kContextFieldNumber;
const int UsCoreDiagnosticreport::kEffectiveFieldNumber;
const int UsCoreDiagnosticreport::kIssuedFieldNumber;
const int UsCoreDiagnosticreport::kPerformerFieldNumber;
const int UsCoreDiagnosticreport::kSpecimenFieldNumber;
const int UsCoreDiagnosticreport::kResultFieldNumber;
const int UsCoreDiagnosticreport::kImagingStudyFieldNumber;
const int UsCoreDiagnosticreport::kImageFieldNumber;
const int UsCoreDiagnosticreport::kConclusionFieldNumber;
const int UsCoreDiagnosticreport::kCodedDiagnosisFieldNumber;
const int UsCoreDiagnosticreport::kPresentedFormFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreDiagnosticreport::UsCoreDiagnosticreport()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreDiagnosticreport.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreDiagnosticreport)
}
UsCoreDiagnosticreport::UsCoreDiagnosticreport(const UsCoreDiagnosticreport& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      contained_(from.contained_),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      identifier_(from.identifier_),
      based_on_(from.based_on_),
      performer_(from.performer_),
      specimen_(from.specimen_),
      result_(from.result_),
      imaging_study_(from.imaging_study_),
      image_(from.image_),
      coded_diagnosis_(from.coded_diagnosis_),
      presented_form_(from.presented_form_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::Id(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_meta()) {
    meta_ = new ::google::fhir::stu3::proto::Meta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  if (from.has_implicit_rules()) {
    implicit_rules_ = new ::google::fhir::stu3::proto::Uri(*from.implicit_rules_);
  } else {
    implicit_rules_ = NULL;
  }
  if (from.has_language()) {
    language_ = new ::google::fhir::stu3::proto::LanguageCode(*from.language_);
  } else {
    language_ = NULL;
  }
  if (from.has_text()) {
    text_ = new ::google::fhir::stu3::proto::Narrative(*from.text_);
  } else {
    text_ = NULL;
  }
  if (from.has_status()) {
    status_ = new ::google::fhir::stu3::proto::DiagnosticReportStatusCode(*from.status_);
  } else {
    status_ = NULL;
  }
  if (from.has_category()) {
    category_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.category_);
  } else {
    category_ = NULL;
  }
  if (from.has_code()) {
    code_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.code_);
  } else {
    code_ = NULL;
  }
  if (from.has_subject()) {
    subject_ = new ::google::fhir::stu3::proto::Reference(*from.subject_);
  } else {
    subject_ = NULL;
  }
  if (from.has_context()) {
    context_ = new ::google::fhir::stu3::proto::Reference(*from.context_);
  } else {
    context_ = NULL;
  }
  if (from.has_effective()) {
    effective_ = new ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Effective(*from.effective_);
  } else {
    effective_ = NULL;
  }
  if (from.has_issued()) {
    issued_ = new ::google::fhir::stu3::proto::Instant(*from.issued_);
  } else {
    issued_ = NULL;
  }
  if (from.has_conclusion()) {
    conclusion_ = new ::google::fhir::stu3::proto::String(*from.conclusion_);
  } else {
    conclusion_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreDiagnosticreport)
}

void UsCoreDiagnosticreport::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&conclusion_) -
      reinterpret_cast<char*>(&id_)) + sizeof(conclusion_));
}

UsCoreDiagnosticreport::~UsCoreDiagnosticreport() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreDiagnosticreport)
  SharedDtor();
}

void UsCoreDiagnosticreport::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete implicit_rules_;
  if (this != internal_default_instance()) delete language_;
  if (this != internal_default_instance()) delete text_;
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete category_;
  if (this != internal_default_instance()) delete code_;
  if (this != internal_default_instance()) delete subject_;
  if (this != internal_default_instance()) delete context_;
  if (this != internal_default_instance()) delete effective_;
  if (this != internal_default_instance()) delete issued_;
  if (this != internal_default_instance()) delete conclusion_;
}

void UsCoreDiagnosticreport::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreDiagnosticreport::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreDiagnosticreport& UsCoreDiagnosticreport::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreDiagnosticreport.base);
  return *internal_default_instance();
}


void UsCoreDiagnosticreport::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contained_.Clear();
  extension_.Clear();
  modifier_extension_.Clear();
  identifier_.Clear();
  based_on_.Clear();
  performer_.Clear();
  specimen_.Clear();
  result_.Clear();
  imaging_study_.Clear();
  image_.Clear();
  coded_diagnosis_.Clear();
  presented_form_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  if (GetArenaNoVirtual() == NULL && category_ != NULL) {
    delete category_;
  }
  category_ = NULL;
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
  if (GetArenaNoVirtual() == NULL && subject_ != NULL) {
    delete subject_;
  }
  subject_ = NULL;
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  if (GetArenaNoVirtual() == NULL && effective_ != NULL) {
    delete effective_;
  }
  effective_ = NULL;
  if (GetArenaNoVirtual() == NULL && issued_ != NULL) {
    delete issued_;
  }
  issued_ = NULL;
  if (GetArenaNoVirtual() == NULL && conclusion_ != NULL) {
    delete conclusion_;
  }
  conclusion_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreDiagnosticreport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Id id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Meta meta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri implicit_rules = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_implicit_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.LanguageCode language = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_language()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Narrative text = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_contained()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference based_on = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ImmunizationRecommendation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/NutritionOrder", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_based_on()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DiagnosticReportStatusCode status = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept category = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_category()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept code = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference subject = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_subject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference context = 15 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective effective = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_effective()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Instant issued = 17 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_issued()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer performer = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_performer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference specimen = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Specimen"];
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_specimen()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference result = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-observationresults"];
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference imaging_study = 21 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ImagingStudy", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ImagingManifest"];
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_imaging_study()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image image = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String conclusion = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conclusion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept coded_diagnosis = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_coded_diagnosis()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Attachment presented_form = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_presented_form()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreDiagnosticreport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreDiagnosticreport)
  return false;
#undef DO_
}

void UsCoreDiagnosticreport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_meta(), output);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_implicit_rules(), output);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_language(), output);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_text(), output);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->contained(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->identifier(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference based_on = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ImmunizationRecommendation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/NutritionOrder", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->based_on_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->based_on(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.DiagnosticReportStatusCode status = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_status(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept category = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_category()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_category(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_code(), output);
  }

  // .google.fhir.stu3.proto.Reference subject = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_subject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_subject(), output);
  }

  // .google.fhir.stu3.proto.Reference context = 15 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_context(), output);
  }

  // .google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective effective = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_effective()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_effective(), output);
  }

  // .google.fhir.stu3.proto.Instant issued = 17 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_issued()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_issued(), output);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer performer = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->performer_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18,
      this->performer(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference specimen = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Specimen"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->specimen_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19,
      this->specimen(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference result = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-observationresults"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->result_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20,
      this->result(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference imaging_study = 21 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ImagingStudy", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ImagingManifest"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->imaging_study_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21,
      this->imaging_study(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image image = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->image_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22,
      this->image(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.String conclusion = 23;
  if (this->has_conclusion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->_internal_conclusion(), output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept coded_diagnosis = 24;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->coded_diagnosis_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24,
      this->coded_diagnosis(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Attachment presented_form = 25;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->presented_form_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25,
      this->presented_form(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreDiagnosticreport)
}

::google::protobuf::uint8* UsCoreDiagnosticreport::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_meta(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_implicit_rules(), deterministic, target);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_language(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_text(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->contained(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->identifier(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference based_on = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ImmunizationRecommendation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/NutritionOrder", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->based_on_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->based_on(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.DiagnosticReportStatusCode status = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_status(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept category = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_category()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_category(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_code(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference subject = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_subject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_subject(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference context = 15 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_context(), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective effective = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_effective()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_effective(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Instant issued = 17 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_issued()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_issued(), deterministic, target);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer performer = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->performer_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->performer(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference specimen = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Specimen"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->specimen_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->specimen(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference result = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-observationresults"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->result_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->result(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference imaging_study = 21 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ImagingStudy", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ImagingManifest"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->imaging_study_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->imaging_study(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image image = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->image_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->image(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.String conclusion = 23;
  if (this->has_conclusion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->_internal_conclusion(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept coded_diagnosis = 24;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->coded_diagnosis_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->coded_diagnosis(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Attachment presented_form = 25;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->presented_form_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->presented_form(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreDiagnosticreport)
  return target;
}

size_t UsCoreDiagnosticreport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->contained_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->contained(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->identifier_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->identifier(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference based_on = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ImmunizationRecommendation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/NutritionOrder", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
  {
    unsigned int count = static_cast<unsigned int>(this->based_on_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->based_on(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer performer = 18;
  {
    unsigned int count = static_cast<unsigned int>(this->performer_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->performer(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference specimen = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Specimen"];
  {
    unsigned int count = static_cast<unsigned int>(this->specimen_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->specimen(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference result = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-observationresults"];
  {
    unsigned int count = static_cast<unsigned int>(this->result_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->result(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference imaging_study = 21 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ImagingStudy", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ImagingManifest"];
  {
    unsigned int count = static_cast<unsigned int>(this->imaging_study_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->imaging_study(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image image = 22;
  {
    unsigned int count = static_cast<unsigned int>(this->image_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->image(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept coded_diagnosis = 24;
  {
    unsigned int count = static_cast<unsigned int>(this->coded_diagnosis_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->coded_diagnosis(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Attachment presented_form = 25;
  {
    unsigned int count = static_cast<unsigned int>(this->presented_form_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->presented_form(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *implicit_rules_);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *language_);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *text_);
  }

  // .google.fhir.stu3.proto.DiagnosticReportStatusCode status = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .google.fhir.stu3.proto.CodeableConcept category = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_category()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *category_);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *code_);
  }

  // .google.fhir.stu3.proto.Reference subject = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_subject()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *subject_);
  }

  // .google.fhir.stu3.proto.Reference context = 15 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  // .google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective effective = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_effective()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *effective_);
  }

  // .google.fhir.stu3.proto.Instant issued = 17 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_issued()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *issued_);
  }

  // .google.fhir.stu3.proto.String conclusion = 23;
  if (this->has_conclusion()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *conclusion_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreDiagnosticreport::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreDiagnosticreport* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreDiagnosticreport>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreDiagnosticreport)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreDiagnosticreport)
    MergeFrom(*source);
  }
}

void UsCoreDiagnosticreport::MergeFrom(const UsCoreDiagnosticreport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contained_.MergeFrom(from.contained_);
  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  identifier_.MergeFrom(from.identifier_);
  based_on_.MergeFrom(from.based_on_);
  performer_.MergeFrom(from.performer_);
  specimen_.MergeFrom(from.specimen_);
  result_.MergeFrom(from.result_);
  imaging_study_.MergeFrom(from.imaging_study_);
  image_.MergeFrom(from.image_);
  coded_diagnosis_.MergeFrom(from.coded_diagnosis_);
  presented_form_.MergeFrom(from.presented_form_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::Id::MergeFrom(from.id());
  }
  if (from.has_meta()) {
    mutable_meta()->::google::fhir::stu3::proto::Meta::MergeFrom(from.meta());
  }
  if (from.has_implicit_rules()) {
    mutable_implicit_rules()->::google::fhir::stu3::proto::Uri::MergeFrom(from.implicit_rules());
  }
  if (from.has_language()) {
    mutable_language()->::google::fhir::stu3::proto::LanguageCode::MergeFrom(from.language());
  }
  if (from.has_text()) {
    mutable_text()->::google::fhir::stu3::proto::Narrative::MergeFrom(from.text());
  }
  if (from.has_status()) {
    mutable_status()->::google::fhir::stu3::proto::DiagnosticReportStatusCode::MergeFrom(from.status());
  }
  if (from.has_category()) {
    mutable_category()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.category());
  }
  if (from.has_code()) {
    mutable_code()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.code());
  }
  if (from.has_subject()) {
    mutable_subject()->::google::fhir::stu3::proto::Reference::MergeFrom(from.subject());
  }
  if (from.has_context()) {
    mutable_context()->::google::fhir::stu3::proto::Reference::MergeFrom(from.context());
  }
  if (from.has_effective()) {
    mutable_effective()->::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Effective::MergeFrom(from.effective());
  }
  if (from.has_issued()) {
    mutable_issued()->::google::fhir::stu3::proto::Instant::MergeFrom(from.issued());
  }
  if (from.has_conclusion()) {
    mutable_conclusion()->::google::fhir::stu3::proto::String::MergeFrom(from.conclusion());
  }
}

void UsCoreDiagnosticreport::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreDiagnosticreport::CopyFrom(const UsCoreDiagnosticreport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreDiagnosticreport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreDiagnosticreport::IsInitialized() const {
  return true;
}

void UsCoreDiagnosticreport::Swap(UsCoreDiagnosticreport* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreDiagnosticreport::InternalSwap(UsCoreDiagnosticreport* other) {
  using std::swap;
  CastToBase(&contained_)->InternalSwap(CastToBase(&other->contained_));
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&identifier_)->InternalSwap(CastToBase(&other->identifier_));
  CastToBase(&based_on_)->InternalSwap(CastToBase(&other->based_on_));
  CastToBase(&performer_)->InternalSwap(CastToBase(&other->performer_));
  CastToBase(&specimen_)->InternalSwap(CastToBase(&other->specimen_));
  CastToBase(&result_)->InternalSwap(CastToBase(&other->result_));
  CastToBase(&imaging_study_)->InternalSwap(CastToBase(&other->imaging_study_));
  CastToBase(&image_)->InternalSwap(CastToBase(&other->image_));
  CastToBase(&coded_diagnosis_)->InternalSwap(CastToBase(&other->coded_diagnosis_));
  CastToBase(&presented_form_)->InternalSwap(CastToBase(&other->presented_form_));
  swap(id_, other->id_);
  swap(meta_, other->meta_);
  swap(implicit_rules_, other->implicit_rules_);
  swap(language_, other->language_);
  swap(text_, other->text_);
  swap(status_, other->status_);
  swap(category_, other->category_);
  swap(code_, other->code_);
  swap(subject_, other->subject_);
  swap(context_, other->context_);
  swap(effective_, other->effective_);
  swap(issued_, other->issued_);
  swap(conclusion_, other->conclusion_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreDiagnosticreport::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ContactPointUsCoreDirect::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_ContactPointUsCoreDirect_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_ContactPointUsCoreDirect_default_instance_._instance.get_mutable()->value_boolean_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
}
void ContactPointUsCoreDirect::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void ContactPointUsCoreDirect::clear_extension() {
  extension_.Clear();
}
void ContactPointUsCoreDirect::clear_value_boolean() {
  if (GetArenaNoVirtual() == NULL && value_boolean_ != NULL) {
    delete value_boolean_;
  }
  value_boolean_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContactPointUsCoreDirect::kIdFieldNumber;
const int ContactPointUsCoreDirect::kExtensionFieldNumber;
const int ContactPointUsCoreDirect::kValueBooleanFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContactPointUsCoreDirect::ContactPointUsCoreDirect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_ContactPointUsCoreDirect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.ContactPointUsCoreDirect)
}
ContactPointUsCoreDirect::ContactPointUsCoreDirect(const ContactPointUsCoreDirect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_value_boolean()) {
    value_boolean_ = new ::google::fhir::stu3::proto::Boolean(*from.value_boolean_);
  } else {
    value_boolean_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.ContactPointUsCoreDirect)
}

void ContactPointUsCoreDirect::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_boolean_) -
      reinterpret_cast<char*>(&id_)) + sizeof(value_boolean_));
}

ContactPointUsCoreDirect::~ContactPointUsCoreDirect() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.ContactPointUsCoreDirect)
  SharedDtor();
}

void ContactPointUsCoreDirect::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete value_boolean_;
}

void ContactPointUsCoreDirect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ContactPointUsCoreDirect::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ContactPointUsCoreDirect& ContactPointUsCoreDirect::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_ContactPointUsCoreDirect.base);
  return *internal_default_instance();
}


void ContactPointUsCoreDirect::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.ContactPointUsCoreDirect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_boolean_ != NULL) {
    delete value_boolean_;
  }
  value_boolean_ = NULL;
  _internal_metadata_.Clear();
}

bool ContactPointUsCoreDirect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.ContactPointUsCoreDirect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Boolean value_boolean = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_boolean()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.ContactPointUsCoreDirect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.ContactPointUsCoreDirect)
  return false;
#undef DO_
}

void ContactPointUsCoreDirect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.ContactPointUsCoreDirect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Boolean value_boolean = 3;
  if (this->has_value_boolean()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_value_boolean(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.ContactPointUsCoreDirect)
}

::google::protobuf::uint8* ContactPointUsCoreDirect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.ContactPointUsCoreDirect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Boolean value_boolean = 3;
  if (this->has_value_boolean()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_value_boolean(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.ContactPointUsCoreDirect)
  return target;
}

size_t ContactPointUsCoreDirect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.ContactPointUsCoreDirect)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Boolean value_boolean = 3;
  if (this->has_value_boolean()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_boolean_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ContactPointUsCoreDirect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.ContactPointUsCoreDirect)
  GOOGLE_DCHECK_NE(&from, this);
  const ContactPointUsCoreDirect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContactPointUsCoreDirect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.ContactPointUsCoreDirect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.ContactPointUsCoreDirect)
    MergeFrom(*source);
  }
}

void ContactPointUsCoreDirect::MergeFrom(const ContactPointUsCoreDirect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.ContactPointUsCoreDirect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_value_boolean()) {
    mutable_value_boolean()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.value_boolean());
  }
}

void ContactPointUsCoreDirect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.ContactPointUsCoreDirect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContactPointUsCoreDirect::CopyFrom(const ContactPointUsCoreDirect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.ContactPointUsCoreDirect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContactPointUsCoreDirect::IsInitialized() const {
  return true;
}

void ContactPointUsCoreDirect::Swap(ContactPointUsCoreDirect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContactPointUsCoreDirect::InternalSwap(ContactPointUsCoreDirect* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(value_boolean_, other->value_boolean_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ContactPointUsCoreDirect::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PatientUSCoreEthnicityExtension::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_PatientUSCoreEthnicityExtension_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_PatientUSCoreEthnicityExtension_default_instance_._instance.get_mutable()->omb_category_ = const_cast< ::google::fhir::stu3::proto::Coding*>(
      ::google::fhir::stu3::proto::Coding::internal_default_instance());
  ::google::fhir::stu3::uscore::_PatientUSCoreEthnicityExtension_default_instance_._instance.get_mutable()->text_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
void PatientUSCoreEthnicityExtension::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void PatientUSCoreEthnicityExtension::clear_extension() {
  extension_.Clear();
}
void PatientUSCoreEthnicityExtension::clear_omb_category() {
  if (GetArenaNoVirtual() == NULL && omb_category_ != NULL) {
    delete omb_category_;
  }
  omb_category_ = NULL;
}
void PatientUSCoreEthnicityExtension::clear_detailed() {
  detailed_.Clear();
}
void PatientUSCoreEthnicityExtension::clear_text() {
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PatientUSCoreEthnicityExtension::kIdFieldNumber;
const int PatientUSCoreEthnicityExtension::kExtensionFieldNumber;
const int PatientUSCoreEthnicityExtension::kOmbCategoryFieldNumber;
const int PatientUSCoreEthnicityExtension::kDetailedFieldNumber;
const int PatientUSCoreEthnicityExtension::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PatientUSCoreEthnicityExtension::PatientUSCoreEthnicityExtension()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_PatientUSCoreEthnicityExtension.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension)
}
PatientUSCoreEthnicityExtension::PatientUSCoreEthnicityExtension(const PatientUSCoreEthnicityExtension& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      detailed_(from.detailed_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_omb_category()) {
    omb_category_ = new ::google::fhir::stu3::proto::Coding(*from.omb_category_);
  } else {
    omb_category_ = NULL;
  }
  if (from.has_text()) {
    text_ = new ::google::fhir::stu3::proto::String(*from.text_);
  } else {
    text_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension)
}

void PatientUSCoreEthnicityExtension::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&text_) -
      reinterpret_cast<char*>(&id_)) + sizeof(text_));
}

PatientUSCoreEthnicityExtension::~PatientUSCoreEthnicityExtension() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension)
  SharedDtor();
}

void PatientUSCoreEthnicityExtension::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete omb_category_;
  if (this != internal_default_instance()) delete text_;
}

void PatientUSCoreEthnicityExtension::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PatientUSCoreEthnicityExtension::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PatientUSCoreEthnicityExtension& PatientUSCoreEthnicityExtension::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_PatientUSCoreEthnicityExtension.base);
  return *internal_default_instance();
}


void PatientUSCoreEthnicityExtension::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  detailed_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && omb_category_ != NULL) {
    delete omb_category_;
  }
  omb_category_ = NULL;
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  _internal_metadata_.Clear();
}

bool PatientUSCoreEthnicityExtension::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Coding omb_category = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_omb_category()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Coding detailed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_detailed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String text = 6 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension)
  return false;
#undef DO_
}

void PatientUSCoreEthnicityExtension::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Coding omb_category = 4;
  if (this->has_omb_category()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_omb_category(), output);
  }

  // repeated .google.fhir.stu3.proto.Coding detailed = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->detailed_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->detailed(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.String text = 6 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_text(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension)
}

::google::protobuf::uint8* PatientUSCoreEthnicityExtension::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Coding omb_category = 4;
  if (this->has_omb_category()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_omb_category(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Coding detailed = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->detailed_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->detailed(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.String text = 6 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_text(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension)
  return target;
}

size_t PatientUSCoreEthnicityExtension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Coding detailed = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->detailed_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->detailed(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Coding omb_category = 4;
  if (this->has_omb_category()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *omb_category_);
  }

  // .google.fhir.stu3.proto.String text = 6 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *text_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PatientUSCoreEthnicityExtension::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension)
  GOOGLE_DCHECK_NE(&from, this);
  const PatientUSCoreEthnicityExtension* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PatientUSCoreEthnicityExtension>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension)
    MergeFrom(*source);
  }
}

void PatientUSCoreEthnicityExtension::MergeFrom(const PatientUSCoreEthnicityExtension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  detailed_.MergeFrom(from.detailed_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_omb_category()) {
    mutable_omb_category()->::google::fhir::stu3::proto::Coding::MergeFrom(from.omb_category());
  }
  if (from.has_text()) {
    mutable_text()->::google::fhir::stu3::proto::String::MergeFrom(from.text());
  }
}

void PatientUSCoreEthnicityExtension::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PatientUSCoreEthnicityExtension::CopyFrom(const PatientUSCoreEthnicityExtension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PatientUSCoreEthnicityExtension::IsInitialized() const {
  return true;
}

void PatientUSCoreEthnicityExtension::Swap(PatientUSCoreEthnicityExtension* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PatientUSCoreEthnicityExtension::InternalSwap(PatientUSCoreEthnicityExtension* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&detailed_)->InternalSwap(CastToBase(&other->detailed_));
  swap(id_, other->id_);
  swap(omb_category_, other->omb_category_);
  swap(text_, other->text_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PatientUSCoreEthnicityExtension::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreGoal_Start::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreGoal_Start_default_instance_.date_ = const_cast< ::google::fhir::stu3::proto::Date*>(
      ::google::fhir::stu3::proto::Date::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreGoal_Start_default_instance_.codeable_concept_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
}
void UsCoreGoal_Start::set_allocated_date(::google::fhir::stu3::proto::Date* date) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_start();
  if (date) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date, submessage_arena);
    }
    set_has_date();
    start_.date_ = date;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreGoal.Start.date)
}
void UsCoreGoal_Start::clear_date() {
  if (has_date()) {
    delete start_.date_;
    clear_has_start();
  }
}
void UsCoreGoal_Start::set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_start();
  if (codeable_concept) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      codeable_concept = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, codeable_concept, submessage_arena);
    }
    set_has_codeable_concept();
    start_.codeable_concept_ = codeable_concept;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreGoal.Start.codeable_concept)
}
void UsCoreGoal_Start::clear_codeable_concept() {
  if (has_codeable_concept()) {
    delete start_.codeable_concept_;
    clear_has_start();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreGoal_Start::kDateFieldNumber;
const int UsCoreGoal_Start::kCodeableConceptFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreGoal_Start::UsCoreGoal_Start()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreGoal_Start.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreGoal.Start)
}
UsCoreGoal_Start::UsCoreGoal_Start(const UsCoreGoal_Start& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_start();
  switch (from.start_case()) {
    case kDate: {
      mutable_date()->::google::fhir::stu3::proto::Date::MergeFrom(from.date());
      break;
    }
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case START_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreGoal.Start)
}

void UsCoreGoal_Start::SharedCtor() {
  clear_has_start();
}

UsCoreGoal_Start::~UsCoreGoal_Start() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreGoal.Start)
  SharedDtor();
}

void UsCoreGoal_Start::SharedDtor() {
  if (has_start()) {
    clear_start();
  }
}

void UsCoreGoal_Start::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreGoal_Start::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreGoal_Start& UsCoreGoal_Start::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreGoal_Start.base);
  return *internal_default_instance();
}


void UsCoreGoal_Start::clear_start() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.uscore.UsCoreGoal.Start)
  switch (start_case()) {
    case kDate: {
      delete start_.date_;
      break;
    }
    case kCodeableConcept: {
      delete start_.codeable_concept_;
      break;
    }
    case START_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = START_NOT_SET;
}


void UsCoreGoal_Start::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreGoal.Start)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_start();
  _internal_metadata_.Clear();
}

bool UsCoreGoal_Start::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreGoal.Start)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Date date = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_codeable_concept()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreGoal.Start)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreGoal.Start)
  return false;
#undef DO_
}

void UsCoreGoal_Start::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreGoal.Start)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Date date = 1;
  if (has_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_date(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
  if (has_codeable_concept()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_codeable_concept(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreGoal.Start)
}

::google::protobuf::uint8* UsCoreGoal_Start::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreGoal.Start)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Date date = 1;
  if (has_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_date(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
  if (has_codeable_concept()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_codeable_concept(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreGoal.Start)
  return target;
}

size_t UsCoreGoal_Start::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreGoal.Start)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (start_case()) {
    // .google.fhir.stu3.proto.Date date = 1;
    case kDate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *start_.date_);
      break;
    }
    // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
    case kCodeableConcept: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *start_.codeable_concept_);
      break;
    }
    case START_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreGoal_Start::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreGoal.Start)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreGoal_Start* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreGoal_Start>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreGoal.Start)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreGoal.Start)
    MergeFrom(*source);
  }
}

void UsCoreGoal_Start::MergeFrom(const UsCoreGoal_Start& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreGoal.Start)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.start_case()) {
    case kDate: {
      mutable_date()->::google::fhir::stu3::proto::Date::MergeFrom(from.date());
      break;
    }
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case START_NOT_SET: {
      break;
    }
  }
}

void UsCoreGoal_Start::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreGoal.Start)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreGoal_Start::CopyFrom(const UsCoreGoal_Start& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreGoal.Start)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreGoal_Start::IsInitialized() const {
  return true;
}

void UsCoreGoal_Start::Swap(UsCoreGoal_Start* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreGoal_Start::InternalSwap(UsCoreGoal_Start* other) {
  using std::swap;
  swap(start_, other->start_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreGoal_Start::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreGoal_Target_Detail::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreGoal_Target_Detail_default_instance_.quantity_ = const_cast< ::google::fhir::stu3::proto::Quantity*>(
      ::google::fhir::stu3::proto::Quantity::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreGoal_Target_Detail_default_instance_.range_ = const_cast< ::google::fhir::stu3::proto::Range*>(
      ::google::fhir::stu3::proto::Range::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreGoal_Target_Detail_default_instance_.codeable_concept_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
}
void UsCoreGoal_Target_Detail::set_allocated_quantity(::google::fhir::stu3::proto::Quantity* quantity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_detail();
  if (quantity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      quantity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, quantity, submessage_arena);
    }
    set_has_quantity();
    detail_.quantity_ = quantity;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail.quantity)
}
void UsCoreGoal_Target_Detail::clear_quantity() {
  if (has_quantity()) {
    delete detail_.quantity_;
    clear_has_detail();
  }
}
void UsCoreGoal_Target_Detail::set_allocated_range(::google::fhir::stu3::proto::Range* range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_detail();
  if (range) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, range, submessage_arena);
    }
    set_has_range();
    detail_.range_ = range;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail.range)
}
void UsCoreGoal_Target_Detail::clear_range() {
  if (has_range()) {
    delete detail_.range_;
    clear_has_detail();
  }
}
void UsCoreGoal_Target_Detail::set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_detail();
  if (codeable_concept) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      codeable_concept = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, codeable_concept, submessage_arena);
    }
    set_has_codeable_concept();
    detail_.codeable_concept_ = codeable_concept;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail.codeable_concept)
}
void UsCoreGoal_Target_Detail::clear_codeable_concept() {
  if (has_codeable_concept()) {
    delete detail_.codeable_concept_;
    clear_has_detail();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreGoal_Target_Detail::kQuantityFieldNumber;
const int UsCoreGoal_Target_Detail::kRangeFieldNumber;
const int UsCoreGoal_Target_Detail::kCodeableConceptFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreGoal_Target_Detail::UsCoreGoal_Target_Detail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreGoal_Target_Detail.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail)
}
UsCoreGoal_Target_Detail::UsCoreGoal_Target_Detail(const UsCoreGoal_Target_Detail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_detail();
  switch (from.detail_case()) {
    case kQuantity: {
      mutable_quantity()->::google::fhir::stu3::proto::Quantity::MergeFrom(from.quantity());
      break;
    }
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail)
}

void UsCoreGoal_Target_Detail::SharedCtor() {
  clear_has_detail();
}

UsCoreGoal_Target_Detail::~UsCoreGoal_Target_Detail() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail)
  SharedDtor();
}

void UsCoreGoal_Target_Detail::SharedDtor() {
  if (has_detail()) {
    clear_detail();
  }
}

void UsCoreGoal_Target_Detail::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreGoal_Target_Detail::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreGoal_Target_Detail& UsCoreGoal_Target_Detail::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreGoal_Target_Detail.base);
  return *internal_default_instance();
}


void UsCoreGoal_Target_Detail::clear_detail() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail)
  switch (detail_case()) {
    case kQuantity: {
      delete detail_.quantity_;
      break;
    }
    case kRange: {
      delete detail_.range_;
      break;
    }
    case kCodeableConcept: {
      delete detail_.codeable_concept_;
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DETAIL_NOT_SET;
}


void UsCoreGoal_Target_Detail::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_detail();
  _internal_metadata_.Clear();
}

bool UsCoreGoal_Target_Detail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Quantity quantity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_quantity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Range range = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_codeable_concept()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail)
  return false;
#undef DO_
}

void UsCoreGoal_Target_Detail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Quantity quantity = 1;
  if (has_quantity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_quantity(), output);
  }

  // .google.fhir.stu3.proto.Range range = 2;
  if (has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_range(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 3;
  if (has_codeable_concept()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_codeable_concept(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail)
}

::google::protobuf::uint8* UsCoreGoal_Target_Detail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Quantity quantity = 1;
  if (has_quantity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_quantity(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Range range = 2;
  if (has_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_range(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 3;
  if (has_codeable_concept()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_codeable_concept(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail)
  return target;
}

size_t UsCoreGoal_Target_Detail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (detail_case()) {
    // .google.fhir.stu3.proto.Quantity quantity = 1;
    case kQuantity: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *detail_.quantity_);
      break;
    }
    // .google.fhir.stu3.proto.Range range = 2;
    case kRange: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *detail_.range_);
      break;
    }
    // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 3;
    case kCodeableConcept: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *detail_.codeable_concept_);
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreGoal_Target_Detail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreGoal_Target_Detail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreGoal_Target_Detail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail)
    MergeFrom(*source);
  }
}

void UsCoreGoal_Target_Detail::MergeFrom(const UsCoreGoal_Target_Detail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.detail_case()) {
    case kQuantity: {
      mutable_quantity()->::google::fhir::stu3::proto::Quantity::MergeFrom(from.quantity());
      break;
    }
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
}

void UsCoreGoal_Target_Detail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreGoal_Target_Detail::CopyFrom(const UsCoreGoal_Target_Detail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreGoal_Target_Detail::IsInitialized() const {
  return true;
}

void UsCoreGoal_Target_Detail::Swap(UsCoreGoal_Target_Detail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreGoal_Target_Detail::InternalSwap(UsCoreGoal_Target_Detail* other) {
  using std::swap;
  swap(detail_, other->detail_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreGoal_Target_Detail::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreGoal_Target_Due::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreGoal_Target_Due_default_instance_.date_ = const_cast< ::google::fhir::stu3::proto::Date*>(
      ::google::fhir::stu3::proto::Date::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreGoal_Target_Due_default_instance_.duration_ = const_cast< ::google::fhir::stu3::proto::Duration*>(
      ::google::fhir::stu3::proto::Duration::internal_default_instance());
}
void UsCoreGoal_Target_Due::set_allocated_date(::google::fhir::stu3::proto::Date* date) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_due();
  if (date) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date, submessage_arena);
    }
    set_has_date();
    due_.date_ = date;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreGoal.Target.Due.date)
}
void UsCoreGoal_Target_Due::clear_date() {
  if (has_date()) {
    delete due_.date_;
    clear_has_due();
  }
}
void UsCoreGoal_Target_Due::set_allocated_duration(::google::fhir::stu3::proto::Duration* duration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_due();
  if (duration) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      duration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, duration, submessage_arena);
    }
    set_has_duration();
    due_.duration_ = duration;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreGoal.Target.Due.duration)
}
void UsCoreGoal_Target_Due::clear_duration() {
  if (has_duration()) {
    delete due_.duration_;
    clear_has_due();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreGoal_Target_Due::kDateFieldNumber;
const int UsCoreGoal_Target_Due::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreGoal_Target_Due::UsCoreGoal_Target_Due()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreGoal_Target_Due.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreGoal.Target.Due)
}
UsCoreGoal_Target_Due::UsCoreGoal_Target_Due(const UsCoreGoal_Target_Due& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_due();
  switch (from.due_case()) {
    case kDate: {
      mutable_date()->::google::fhir::stu3::proto::Date::MergeFrom(from.date());
      break;
    }
    case kDuration: {
      mutable_duration()->::google::fhir::stu3::proto::Duration::MergeFrom(from.duration());
      break;
    }
    case DUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreGoal.Target.Due)
}

void UsCoreGoal_Target_Due::SharedCtor() {
  clear_has_due();
}

UsCoreGoal_Target_Due::~UsCoreGoal_Target_Due() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreGoal.Target.Due)
  SharedDtor();
}

void UsCoreGoal_Target_Due::SharedDtor() {
  if (has_due()) {
    clear_due();
  }
}

void UsCoreGoal_Target_Due::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreGoal_Target_Due::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreGoal_Target_Due& UsCoreGoal_Target_Due::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreGoal_Target_Due.base);
  return *internal_default_instance();
}


void UsCoreGoal_Target_Due::clear_due() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.uscore.UsCoreGoal.Target.Due)
  switch (due_case()) {
    case kDate: {
      delete due_.date_;
      break;
    }
    case kDuration: {
      delete due_.duration_;
      break;
    }
    case DUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DUE_NOT_SET;
}


void UsCoreGoal_Target_Due::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreGoal.Target.Due)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_due();
  _internal_metadata_.Clear();
}

bool UsCoreGoal_Target_Due::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreGoal.Target.Due)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Date date = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Duration duration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreGoal.Target.Due)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreGoal.Target.Due)
  return false;
#undef DO_
}

void UsCoreGoal_Target_Due::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreGoal.Target.Due)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Date date = 1;
  if (has_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_date(), output);
  }

  // .google.fhir.stu3.proto.Duration duration = 2;
  if (has_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_duration(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreGoal.Target.Due)
}

::google::protobuf::uint8* UsCoreGoal_Target_Due::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreGoal.Target.Due)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Date date = 1;
  if (has_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_date(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Duration duration = 2;
  if (has_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_duration(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreGoal.Target.Due)
  return target;
}

size_t UsCoreGoal_Target_Due::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreGoal.Target.Due)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (due_case()) {
    // .google.fhir.stu3.proto.Date date = 1;
    case kDate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *due_.date_);
      break;
    }
    // .google.fhir.stu3.proto.Duration duration = 2;
    case kDuration: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *due_.duration_);
      break;
    }
    case DUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreGoal_Target_Due::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreGoal.Target.Due)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreGoal_Target_Due* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreGoal_Target_Due>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreGoal.Target.Due)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreGoal.Target.Due)
    MergeFrom(*source);
  }
}

void UsCoreGoal_Target_Due::MergeFrom(const UsCoreGoal_Target_Due& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreGoal.Target.Due)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.due_case()) {
    case kDate: {
      mutable_date()->::google::fhir::stu3::proto::Date::MergeFrom(from.date());
      break;
    }
    case kDuration: {
      mutable_duration()->::google::fhir::stu3::proto::Duration::MergeFrom(from.duration());
      break;
    }
    case DUE_NOT_SET: {
      break;
    }
  }
}

void UsCoreGoal_Target_Due::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreGoal.Target.Due)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreGoal_Target_Due::CopyFrom(const UsCoreGoal_Target_Due& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreGoal.Target.Due)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreGoal_Target_Due::IsInitialized() const {
  return true;
}

void UsCoreGoal_Target_Due::Swap(UsCoreGoal_Target_Due* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreGoal_Target_Due::InternalSwap(UsCoreGoal_Target_Due* other) {
  using std::swap;
  swap(due_, other->due_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreGoal_Target_Due::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreGoal_Target::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreGoal_Target_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreGoal_Target_default_instance_._instance.get_mutable()->measure_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreGoal_Target_default_instance_._instance.get_mutable()->detail_ = const_cast< ::google::fhir::stu3::uscore::UsCoreGoal_Target_Detail*>(
      ::google::fhir::stu3::uscore::UsCoreGoal_Target_Detail::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreGoal_Target_default_instance_._instance.get_mutable()->due_ = const_cast< ::google::fhir::stu3::uscore::UsCoreGoal_Target_Due*>(
      ::google::fhir::stu3::uscore::UsCoreGoal_Target_Due::internal_default_instance());
}
void UsCoreGoal_Target::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreGoal_Target::clear_extension() {
  extension_.Clear();
}
void UsCoreGoal_Target::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreGoal_Target::clear_measure() {
  if (GetArenaNoVirtual() == NULL && measure_ != NULL) {
    delete measure_;
  }
  measure_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreGoal_Target::kIdFieldNumber;
const int UsCoreGoal_Target::kExtensionFieldNumber;
const int UsCoreGoal_Target::kModifierExtensionFieldNumber;
const int UsCoreGoal_Target::kMeasureFieldNumber;
const int UsCoreGoal_Target::kDetailFieldNumber;
const int UsCoreGoal_Target::kDueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreGoal_Target::UsCoreGoal_Target()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreGoal_Target.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreGoal.Target)
}
UsCoreGoal_Target::UsCoreGoal_Target(const UsCoreGoal_Target& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_measure()) {
    measure_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.measure_);
  } else {
    measure_ = NULL;
  }
  if (from.has_detail()) {
    detail_ = new ::google::fhir::stu3::uscore::UsCoreGoal_Target_Detail(*from.detail_);
  } else {
    detail_ = NULL;
  }
  if (from.has_due()) {
    due_ = new ::google::fhir::stu3::uscore::UsCoreGoal_Target_Due(*from.due_);
  } else {
    due_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreGoal.Target)
}

void UsCoreGoal_Target::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&due_) -
      reinterpret_cast<char*>(&id_)) + sizeof(due_));
}

UsCoreGoal_Target::~UsCoreGoal_Target() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreGoal.Target)
  SharedDtor();
}

void UsCoreGoal_Target::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete measure_;
  if (this != internal_default_instance()) delete detail_;
  if (this != internal_default_instance()) delete due_;
}

void UsCoreGoal_Target::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreGoal_Target::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreGoal_Target& UsCoreGoal_Target::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreGoal_Target.base);
  return *internal_default_instance();
}


void UsCoreGoal_Target::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreGoal.Target)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && measure_ != NULL) {
    delete measure_;
  }
  measure_ = NULL;
  if (GetArenaNoVirtual() == NULL && detail_ != NULL) {
    delete detail_;
  }
  detail_ = NULL;
  if (GetArenaNoVirtual() == NULL && due_ != NULL) {
    delete due_;
  }
  due_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreGoal_Target::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreGoal.Target)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept measure = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_measure()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreGoal.Target.Detail detail = 5 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_detail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreGoal.Target.Due due = 6 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_due()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreGoal.Target)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreGoal.Target)
  return false;
#undef DO_
}

void UsCoreGoal_Target::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreGoal.Target)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.CodeableConcept measure = 4;
  if (this->has_measure()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_measure(), output);
  }

  // .google.fhir.stu3.uscore.UsCoreGoal.Target.Detail detail = 5 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_detail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_detail(), output);
  }

  // .google.fhir.stu3.uscore.UsCoreGoal.Target.Due due = 6 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_due()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_due(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreGoal.Target)
}

::google::protobuf::uint8* UsCoreGoal_Target::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreGoal.Target)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept measure = 4;
  if (this->has_measure()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_measure(), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreGoal.Target.Detail detail = 5 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_detail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_detail(), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreGoal.Target.Due due = 6 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_due()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_due(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreGoal.Target)
  return target;
}

size_t UsCoreGoal_Target::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreGoal.Target)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.CodeableConcept measure = 4;
  if (this->has_measure()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *measure_);
  }

  // .google.fhir.stu3.uscore.UsCoreGoal.Target.Detail detail = 5 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_detail()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *detail_);
  }

  // .google.fhir.stu3.uscore.UsCoreGoal.Target.Due due = 6 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_due()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *due_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreGoal_Target::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreGoal.Target)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreGoal_Target* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreGoal_Target>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreGoal.Target)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreGoal.Target)
    MergeFrom(*source);
  }
}

void UsCoreGoal_Target::MergeFrom(const UsCoreGoal_Target& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreGoal.Target)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_measure()) {
    mutable_measure()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.measure());
  }
  if (from.has_detail()) {
    mutable_detail()->::google::fhir::stu3::uscore::UsCoreGoal_Target_Detail::MergeFrom(from.detail());
  }
  if (from.has_due()) {
    mutable_due()->::google::fhir::stu3::uscore::UsCoreGoal_Target_Due::MergeFrom(from.due());
  }
}

void UsCoreGoal_Target::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreGoal.Target)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreGoal_Target::CopyFrom(const UsCoreGoal_Target& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreGoal.Target)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreGoal_Target::IsInitialized() const {
  return true;
}

void UsCoreGoal_Target::Swap(UsCoreGoal_Target* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreGoal_Target::InternalSwap(UsCoreGoal_Target* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  swap(id_, other->id_);
  swap(measure_, other->measure_);
  swap(detail_, other->detail_);
  swap(due_, other->due_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreGoal_Target::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreGoal::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreGoal_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::Id*>(
      ::google::fhir::stu3::proto::Id::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreGoal_default_instance_._instance.get_mutable()->meta_ = const_cast< ::google::fhir::stu3::proto::Meta*>(
      ::google::fhir::stu3::proto::Meta::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreGoal_default_instance_._instance.get_mutable()->implicit_rules_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreGoal_default_instance_._instance.get_mutable()->language_ = const_cast< ::google::fhir::stu3::proto::LanguageCode*>(
      ::google::fhir::stu3::proto::LanguageCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreGoal_default_instance_._instance.get_mutable()->text_ = const_cast< ::google::fhir::stu3::proto::Narrative*>(
      ::google::fhir::stu3::proto::Narrative::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreGoal_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::fhir::stu3::proto::GoalStatusCode*>(
      ::google::fhir::stu3::proto::GoalStatusCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreGoal_default_instance_._instance.get_mutable()->priority_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreGoal_default_instance_._instance.get_mutable()->description_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreGoal_default_instance_._instance.get_mutable()->subject_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreGoal_default_instance_._instance.get_mutable()->start_ = const_cast< ::google::fhir::stu3::uscore::UsCoreGoal_Start*>(
      ::google::fhir::stu3::uscore::UsCoreGoal_Start::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreGoal_default_instance_._instance.get_mutable()->target_ = const_cast< ::google::fhir::stu3::uscore::UsCoreGoal_Target*>(
      ::google::fhir::stu3::uscore::UsCoreGoal_Target::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreGoal_default_instance_._instance.get_mutable()->status_date_ = const_cast< ::google::fhir::stu3::proto::Date*>(
      ::google::fhir::stu3::proto::Date::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreGoal_default_instance_._instance.get_mutable()->status_reason_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreGoal_default_instance_._instance.get_mutable()->expressed_by_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
}
void UsCoreGoal::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreGoal::clear_meta() {
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
}
void UsCoreGoal::clear_implicit_rules() {
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
}
void UsCoreGoal::clear_language() {
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
}
void UsCoreGoal::clear_text() {
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
}
void UsCoreGoal::clear_contained() {
  contained_.Clear();
}
void UsCoreGoal::clear_extension() {
  extension_.Clear();
}
void UsCoreGoal::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreGoal::clear_identifier() {
  identifier_.Clear();
}
void UsCoreGoal::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
void UsCoreGoal::clear_category() {
  category_.Clear();
}
void UsCoreGoal::clear_priority() {
  if (GetArenaNoVirtual() == NULL && priority_ != NULL) {
    delete priority_;
  }
  priority_ = NULL;
}
void UsCoreGoal::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
}
void UsCoreGoal::clear_subject() {
  if (GetArenaNoVirtual() == NULL && subject_ != NULL) {
    delete subject_;
  }
  subject_ = NULL;
}
void UsCoreGoal::clear_status_date() {
  if (GetArenaNoVirtual() == NULL && status_date_ != NULL) {
    delete status_date_;
  }
  status_date_ = NULL;
}
void UsCoreGoal::clear_status_reason() {
  if (GetArenaNoVirtual() == NULL && status_reason_ != NULL) {
    delete status_reason_;
  }
  status_reason_ = NULL;
}
void UsCoreGoal::clear_expressed_by() {
  if (GetArenaNoVirtual() == NULL && expressed_by_ != NULL) {
    delete expressed_by_;
  }
  expressed_by_ = NULL;
}
void UsCoreGoal::clear_addresses() {
  addresses_.Clear();
}
void UsCoreGoal::clear_note() {
  note_.Clear();
}
void UsCoreGoal::clear_outcome_code() {
  outcome_code_.Clear();
}
void UsCoreGoal::clear_outcome_reference() {
  outcome_reference_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreGoal::kIdFieldNumber;
const int UsCoreGoal::kMetaFieldNumber;
const int UsCoreGoal::kImplicitRulesFieldNumber;
const int UsCoreGoal::kLanguageFieldNumber;
const int UsCoreGoal::kTextFieldNumber;
const int UsCoreGoal::kContainedFieldNumber;
const int UsCoreGoal::kExtensionFieldNumber;
const int UsCoreGoal::kModifierExtensionFieldNumber;
const int UsCoreGoal::kIdentifierFieldNumber;
const int UsCoreGoal::kStatusFieldNumber;
const int UsCoreGoal::kCategoryFieldNumber;
const int UsCoreGoal::kPriorityFieldNumber;
const int UsCoreGoal::kDescriptionFieldNumber;
const int UsCoreGoal::kSubjectFieldNumber;
const int UsCoreGoal::kStartFieldNumber;
const int UsCoreGoal::kTargetFieldNumber;
const int UsCoreGoal::kStatusDateFieldNumber;
const int UsCoreGoal::kStatusReasonFieldNumber;
const int UsCoreGoal::kExpressedByFieldNumber;
const int UsCoreGoal::kAddressesFieldNumber;
const int UsCoreGoal::kNoteFieldNumber;
const int UsCoreGoal::kOutcomeCodeFieldNumber;
const int UsCoreGoal::kOutcomeReferenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreGoal::UsCoreGoal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreGoal.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreGoal)
}
UsCoreGoal::UsCoreGoal(const UsCoreGoal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      contained_(from.contained_),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      identifier_(from.identifier_),
      category_(from.category_),
      addresses_(from.addresses_),
      note_(from.note_),
      outcome_code_(from.outcome_code_),
      outcome_reference_(from.outcome_reference_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::Id(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_meta()) {
    meta_ = new ::google::fhir::stu3::proto::Meta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  if (from.has_implicit_rules()) {
    implicit_rules_ = new ::google::fhir::stu3::proto::Uri(*from.implicit_rules_);
  } else {
    implicit_rules_ = NULL;
  }
  if (from.has_language()) {
    language_ = new ::google::fhir::stu3::proto::LanguageCode(*from.language_);
  } else {
    language_ = NULL;
  }
  if (from.has_text()) {
    text_ = new ::google::fhir::stu3::proto::Narrative(*from.text_);
  } else {
    text_ = NULL;
  }
  if (from.has_status()) {
    status_ = new ::google::fhir::stu3::proto::GoalStatusCode(*from.status_);
  } else {
    status_ = NULL;
  }
  if (from.has_priority()) {
    priority_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.priority_);
  } else {
    priority_ = NULL;
  }
  if (from.has_description()) {
    description_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.description_);
  } else {
    description_ = NULL;
  }
  if (from.has_subject()) {
    subject_ = new ::google::fhir::stu3::proto::Reference(*from.subject_);
  } else {
    subject_ = NULL;
  }
  if (from.has_start()) {
    start_ = new ::google::fhir::stu3::uscore::UsCoreGoal_Start(*from.start_);
  } else {
    start_ = NULL;
  }
  if (from.has_target()) {
    target_ = new ::google::fhir::stu3::uscore::UsCoreGoal_Target(*from.target_);
  } else {
    target_ = NULL;
  }
  if (from.has_status_date()) {
    status_date_ = new ::google::fhir::stu3::proto::Date(*from.status_date_);
  } else {
    status_date_ = NULL;
  }
  if (from.has_status_reason()) {
    status_reason_ = new ::google::fhir::stu3::proto::String(*from.status_reason_);
  } else {
    status_reason_ = NULL;
  }
  if (from.has_expressed_by()) {
    expressed_by_ = new ::google::fhir::stu3::proto::Reference(*from.expressed_by_);
  } else {
    expressed_by_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreGoal)
}

void UsCoreGoal::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expressed_by_) -
      reinterpret_cast<char*>(&id_)) + sizeof(expressed_by_));
}

UsCoreGoal::~UsCoreGoal() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreGoal)
  SharedDtor();
}

void UsCoreGoal::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete implicit_rules_;
  if (this != internal_default_instance()) delete language_;
  if (this != internal_default_instance()) delete text_;
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete priority_;
  if (this != internal_default_instance()) delete description_;
  if (this != internal_default_instance()) delete subject_;
  if (this != internal_default_instance()) delete start_;
  if (this != internal_default_instance()) delete target_;
  if (this != internal_default_instance()) delete status_date_;
  if (this != internal_default_instance()) delete status_reason_;
  if (this != internal_default_instance()) delete expressed_by_;
}

void UsCoreGoal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreGoal::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreGoal& UsCoreGoal::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreGoal.base);
  return *internal_default_instance();
}


void UsCoreGoal::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreGoal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contained_.Clear();
  extension_.Clear();
  modifier_extension_.Clear();
  identifier_.Clear();
  category_.Clear();
  addresses_.Clear();
  note_.Clear();
  outcome_code_.Clear();
  outcome_reference_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  if (GetArenaNoVirtual() == NULL && priority_ != NULL) {
    delete priority_;
  }
  priority_ = NULL;
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
  if (GetArenaNoVirtual() == NULL && subject_ != NULL) {
    delete subject_;
  }
  subject_ = NULL;
  if (GetArenaNoVirtual() == NULL && start_ != NULL) {
    delete start_;
  }
  start_ = NULL;
  if (GetArenaNoVirtual() == NULL && target_ != NULL) {
    delete target_;
  }
  target_ = NULL;
  if (GetArenaNoVirtual() == NULL && status_date_ != NULL) {
    delete status_date_;
  }
  status_date_ = NULL;
  if (GetArenaNoVirtual() == NULL && status_reason_ != NULL) {
    delete status_reason_;
  }
  status_reason_ = NULL;
  if (GetArenaNoVirtual() == NULL && expressed_by_ != NULL) {
    delete expressed_by_;
  }
  expressed_by_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreGoal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreGoal)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Id id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Meta meta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri implicit_rules = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_implicit_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.LanguageCode language = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_language()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Narrative text = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_contained()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.GoalStatusCode status = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept category = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_category()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept priority = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept description = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference subject = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_subject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreGoal.Start start = 15 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreGoal.Target target = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Date status_date = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String status_reason = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status_reason()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference expressed_by = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expressed_by()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference addresses = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationStatement", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/NutritionOrder", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RiskAssessment"];
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_addresses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Annotation note = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_note()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept outcome_code = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_outcome_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference outcome_reference = 23 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_outcome_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreGoal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreGoal)
  return false;
#undef DO_
}

void UsCoreGoal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreGoal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_meta(), output);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_implicit_rules(), output);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_language(), output);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_text(), output);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->contained(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->identifier(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.GoalStatusCode status = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_status(), output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept category = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->category_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->category(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.CodeableConcept priority = 12;
  if (this->has_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_priority(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept description = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_description(), output);
  }

  // .google.fhir.stu3.proto.Reference subject = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_subject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_subject(), output);
  }

  // .google.fhir.stu3.uscore.UsCoreGoal.Start start = 15 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_start(), output);
  }

  // .google.fhir.stu3.uscore.UsCoreGoal.Target target = 16;
  if (this->has_target()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_target(), output);
  }

  // .google.fhir.stu3.proto.Date status_date = 17;
  if (this->has_status_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_status_date(), output);
  }

  // .google.fhir.stu3.proto.String status_reason = 18;
  if (this->has_status_reason()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_status_reason(), output);
  }

  // .google.fhir.stu3.proto.Reference expressed_by = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
  if (this->has_expressed_by()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_expressed_by(), output);
  }

  // repeated .google.fhir.stu3.proto.Reference addresses = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationStatement", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/NutritionOrder", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RiskAssessment"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->addresses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20,
      this->addresses(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 21;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->note_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21,
      this->note(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept outcome_code = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->outcome_code_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22,
      this->outcome_code(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference outcome_reference = 23 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->outcome_reference_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23,
      this->outcome_reference(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreGoal)
}

::google::protobuf::uint8* UsCoreGoal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreGoal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_meta(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_implicit_rules(), deterministic, target);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_language(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_text(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->contained(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->identifier(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.GoalStatusCode status = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_status(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept category = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->category_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->category(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept priority = 12;
  if (this->has_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_priority(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept description = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_description(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference subject = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_subject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_subject(), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreGoal.Start start = 15 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_start()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_start(), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreGoal.Target target = 16;
  if (this->has_target()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_target(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Date status_date = 17;
  if (this->has_status_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_status_date(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String status_reason = 18;
  if (this->has_status_reason()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_status_reason(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference expressed_by = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
  if (this->has_expressed_by()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_expressed_by(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference addresses = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationStatement", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/NutritionOrder", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RiskAssessment"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->addresses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->addresses(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 21;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->note_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->note(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept outcome_code = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->outcome_code_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->outcome_code(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference outcome_reference = 23 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->outcome_reference_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->outcome_reference(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreGoal)
  return target;
}

size_t UsCoreGoal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreGoal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->contained_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->contained(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->identifier_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->identifier(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept category = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->category_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->category(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference addresses = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationStatement", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/NutritionOrder", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RiskAssessment"];
  {
    unsigned int count = static_cast<unsigned int>(this->addresses_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->addresses(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 21;
  {
    unsigned int count = static_cast<unsigned int>(this->note_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->note(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept outcome_code = 22;
  {
    unsigned int count = static_cast<unsigned int>(this->outcome_code_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->outcome_code(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference outcome_reference = 23 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
  {
    unsigned int count = static_cast<unsigned int>(this->outcome_reference_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->outcome_reference(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *implicit_rules_);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *language_);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *text_);
  }

  // .google.fhir.stu3.proto.GoalStatusCode status = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .google.fhir.stu3.proto.CodeableConcept priority = 12;
  if (this->has_priority()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *priority_);
  }

  // .google.fhir.stu3.proto.CodeableConcept description = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_description()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *description_);
  }

  // .google.fhir.stu3.proto.Reference subject = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_subject()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *subject_);
  }

  // .google.fhir.stu3.uscore.UsCoreGoal.Start start = 15 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_start()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *start_);
  }

  // .google.fhir.stu3.uscore.UsCoreGoal.Target target = 16;
  if (this->has_target()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *target_);
  }

  // .google.fhir.stu3.proto.Date status_date = 17;
  if (this->has_status_date()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_date_);
  }

  // .google.fhir.stu3.proto.String status_reason = 18;
  if (this->has_status_reason()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_reason_);
  }

  // .google.fhir.stu3.proto.Reference expressed_by = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
  if (this->has_expressed_by()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expressed_by_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreGoal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreGoal)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreGoal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreGoal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreGoal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreGoal)
    MergeFrom(*source);
  }
}

void UsCoreGoal::MergeFrom(const UsCoreGoal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreGoal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contained_.MergeFrom(from.contained_);
  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  identifier_.MergeFrom(from.identifier_);
  category_.MergeFrom(from.category_);
  addresses_.MergeFrom(from.addresses_);
  note_.MergeFrom(from.note_);
  outcome_code_.MergeFrom(from.outcome_code_);
  outcome_reference_.MergeFrom(from.outcome_reference_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::Id::MergeFrom(from.id());
  }
  if (from.has_meta()) {
    mutable_meta()->::google::fhir::stu3::proto::Meta::MergeFrom(from.meta());
  }
  if (from.has_implicit_rules()) {
    mutable_implicit_rules()->::google::fhir::stu3::proto::Uri::MergeFrom(from.implicit_rules());
  }
  if (from.has_language()) {
    mutable_language()->::google::fhir::stu3::proto::LanguageCode::MergeFrom(from.language());
  }
  if (from.has_text()) {
    mutable_text()->::google::fhir::stu3::proto::Narrative::MergeFrom(from.text());
  }
  if (from.has_status()) {
    mutable_status()->::google::fhir::stu3::proto::GoalStatusCode::MergeFrom(from.status());
  }
  if (from.has_priority()) {
    mutable_priority()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.priority());
  }
  if (from.has_description()) {
    mutable_description()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.description());
  }
  if (from.has_subject()) {
    mutable_subject()->::google::fhir::stu3::proto::Reference::MergeFrom(from.subject());
  }
  if (from.has_start()) {
    mutable_start()->::google::fhir::stu3::uscore::UsCoreGoal_Start::MergeFrom(from.start());
  }
  if (from.has_target()) {
    mutable_target()->::google::fhir::stu3::uscore::UsCoreGoal_Target::MergeFrom(from.target());
  }
  if (from.has_status_date()) {
    mutable_status_date()->::google::fhir::stu3::proto::Date::MergeFrom(from.status_date());
  }
  if (from.has_status_reason()) {
    mutable_status_reason()->::google::fhir::stu3::proto::String::MergeFrom(from.status_reason());
  }
  if (from.has_expressed_by()) {
    mutable_expressed_by()->::google::fhir::stu3::proto::Reference::MergeFrom(from.expressed_by());
  }
}

void UsCoreGoal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreGoal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreGoal::CopyFrom(const UsCoreGoal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreGoal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreGoal::IsInitialized() const {
  return true;
}

void UsCoreGoal::Swap(UsCoreGoal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreGoal::InternalSwap(UsCoreGoal* other) {
  using std::swap;
  CastToBase(&contained_)->InternalSwap(CastToBase(&other->contained_));
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&identifier_)->InternalSwap(CastToBase(&other->identifier_));
  CastToBase(&category_)->InternalSwap(CastToBase(&other->category_));
  CastToBase(&addresses_)->InternalSwap(CastToBase(&other->addresses_));
  CastToBase(&note_)->InternalSwap(CastToBase(&other->note_));
  CastToBase(&outcome_code_)->InternalSwap(CastToBase(&other->outcome_code_));
  CastToBase(&outcome_reference_)->InternalSwap(CastToBase(&other->outcome_reference_));
  swap(id_, other->id_);
  swap(meta_, other->meta_);
  swap(implicit_rules_, other->implicit_rules_);
  swap(language_, other->language_);
  swap(text_, other->text_);
  swap(status_, other->status_);
  swap(priority_, other->priority_);
  swap(description_, other->description_);
  swap(subject_, other->subject_);
  swap(start_, other->start_);
  swap(target_, other->target_);
  swap(status_date_, other->status_date_);
  swap(status_reason_, other->status_reason_);
  swap(expressed_by_, other->expressed_by_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreGoal::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreImmunization_Practitioner::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreImmunization_Practitioner_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_Practitioner_default_instance_._instance.get_mutable()->role_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_Practitioner_default_instance_._instance.get_mutable()->actor_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
}
void UsCoreImmunization_Practitioner::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreImmunization_Practitioner::clear_extension() {
  extension_.Clear();
}
void UsCoreImmunization_Practitioner::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreImmunization_Practitioner::clear_role() {
  if (GetArenaNoVirtual() == NULL && role_ != NULL) {
    delete role_;
  }
  role_ = NULL;
}
void UsCoreImmunization_Practitioner::clear_actor() {
  if (GetArenaNoVirtual() == NULL && actor_ != NULL) {
    delete actor_;
  }
  actor_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreImmunization_Practitioner::kIdFieldNumber;
const int UsCoreImmunization_Practitioner::kExtensionFieldNumber;
const int UsCoreImmunization_Practitioner::kModifierExtensionFieldNumber;
const int UsCoreImmunization_Practitioner::kRoleFieldNumber;
const int UsCoreImmunization_Practitioner::kActorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreImmunization_Practitioner::UsCoreImmunization_Practitioner()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreImmunization_Practitioner.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner)
}
UsCoreImmunization_Practitioner::UsCoreImmunization_Practitioner(const UsCoreImmunization_Practitioner& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_role()) {
    role_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.role_);
  } else {
    role_ = NULL;
  }
  if (from.has_actor()) {
    actor_ = new ::google::fhir::stu3::proto::Reference(*from.actor_);
  } else {
    actor_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner)
}

void UsCoreImmunization_Practitioner::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&actor_) -
      reinterpret_cast<char*>(&id_)) + sizeof(actor_));
}

UsCoreImmunization_Practitioner::~UsCoreImmunization_Practitioner() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner)
  SharedDtor();
}

void UsCoreImmunization_Practitioner::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete role_;
  if (this != internal_default_instance()) delete actor_;
}

void UsCoreImmunization_Practitioner::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreImmunization_Practitioner::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreImmunization_Practitioner& UsCoreImmunization_Practitioner::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreImmunization_Practitioner.base);
  return *internal_default_instance();
}


void UsCoreImmunization_Practitioner::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && role_ != NULL) {
    delete role_;
  }
  role_ = NULL;
  if (GetArenaNoVirtual() == NULL && actor_ != NULL) {
    delete actor_;
  }
  actor_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreImmunization_Practitioner::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept role = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_role()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference actor = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner"];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_actor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner)
  return false;
#undef DO_
}

void UsCoreImmunization_Practitioner::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.CodeableConcept role = 4;
  if (this->has_role()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_role(), output);
  }

  // .google.fhir.stu3.proto.Reference actor = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner"];
  if (this->has_actor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_actor(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner)
}

::google::protobuf::uint8* UsCoreImmunization_Practitioner::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept role = 4;
  if (this->has_role()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_role(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference actor = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner"];
  if (this->has_actor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_actor(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner)
  return target;
}

size_t UsCoreImmunization_Practitioner::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.CodeableConcept role = 4;
  if (this->has_role()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *role_);
  }

  // .google.fhir.stu3.proto.Reference actor = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner"];
  if (this->has_actor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *actor_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreImmunization_Practitioner::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreImmunization_Practitioner* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreImmunization_Practitioner>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner)
    MergeFrom(*source);
  }
}

void UsCoreImmunization_Practitioner::MergeFrom(const UsCoreImmunization_Practitioner& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_role()) {
    mutable_role()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.role());
  }
  if (from.has_actor()) {
    mutable_actor()->::google::fhir::stu3::proto::Reference::MergeFrom(from.actor());
  }
}

void UsCoreImmunization_Practitioner::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreImmunization_Practitioner::CopyFrom(const UsCoreImmunization_Practitioner& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreImmunization_Practitioner::IsInitialized() const {
  return true;
}

void UsCoreImmunization_Practitioner::Swap(UsCoreImmunization_Practitioner* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreImmunization_Practitioner::InternalSwap(UsCoreImmunization_Practitioner* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  swap(id_, other->id_);
  swap(role_, other->role_);
  swap(actor_, other->actor_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreImmunization_Practitioner::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreImmunization_Explanation::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreImmunization_Explanation_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
void UsCoreImmunization_Explanation::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreImmunization_Explanation::clear_extension() {
  extension_.Clear();
}
void UsCoreImmunization_Explanation::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreImmunization_Explanation::clear_reason() {
  reason_.Clear();
}
void UsCoreImmunization_Explanation::clear_reason_not_given() {
  reason_not_given_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreImmunization_Explanation::kIdFieldNumber;
const int UsCoreImmunization_Explanation::kExtensionFieldNumber;
const int UsCoreImmunization_Explanation::kModifierExtensionFieldNumber;
const int UsCoreImmunization_Explanation::kReasonFieldNumber;
const int UsCoreImmunization_Explanation::kReasonNotGivenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreImmunization_Explanation::UsCoreImmunization_Explanation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreImmunization_Explanation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreImmunization.Explanation)
}
UsCoreImmunization_Explanation::UsCoreImmunization_Explanation(const UsCoreImmunization_Explanation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      reason_(from.reason_),
      reason_not_given_(from.reason_not_given_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreImmunization.Explanation)
}

void UsCoreImmunization_Explanation::SharedCtor() {
  id_ = NULL;
}

UsCoreImmunization_Explanation::~UsCoreImmunization_Explanation() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreImmunization.Explanation)
  SharedDtor();
}

void UsCoreImmunization_Explanation::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void UsCoreImmunization_Explanation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreImmunization_Explanation::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreImmunization_Explanation& UsCoreImmunization_Explanation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreImmunization_Explanation.base);
  return *internal_default_instance();
}


void UsCoreImmunization_Explanation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreImmunization.Explanation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  reason_.Clear();
  reason_not_given_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreImmunization_Explanation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreImmunization.Explanation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept reason = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_reason()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept reason_not_given = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_reason_not_given()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreImmunization.Explanation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreImmunization.Explanation)
  return false;
#undef DO_
}

void UsCoreImmunization_Explanation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreImmunization.Explanation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept reason = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reason_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->reason(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept reason_not_given = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reason_not_given_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->reason_not_given(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreImmunization.Explanation)
}

::google::protobuf::uint8* UsCoreImmunization_Explanation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreImmunization.Explanation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept reason = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reason_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->reason(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept reason_not_given = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reason_not_given_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->reason_not_given(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreImmunization.Explanation)
  return target;
}

size_t UsCoreImmunization_Explanation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreImmunization.Explanation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept reason = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->reason_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reason(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept reason_not_given = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->reason_not_given_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reason_not_given(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreImmunization_Explanation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreImmunization.Explanation)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreImmunization_Explanation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreImmunization_Explanation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreImmunization.Explanation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreImmunization.Explanation)
    MergeFrom(*source);
  }
}

void UsCoreImmunization_Explanation::MergeFrom(const UsCoreImmunization_Explanation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreImmunization.Explanation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  reason_.MergeFrom(from.reason_);
  reason_not_given_.MergeFrom(from.reason_not_given_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
}

void UsCoreImmunization_Explanation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreImmunization.Explanation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreImmunization_Explanation::CopyFrom(const UsCoreImmunization_Explanation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreImmunization.Explanation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreImmunization_Explanation::IsInitialized() const {
  return true;
}

void UsCoreImmunization_Explanation::Swap(UsCoreImmunization_Explanation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreImmunization_Explanation::InternalSwap(UsCoreImmunization_Explanation* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&reason_)->InternalSwap(CastToBase(&other->reason_));
  CastToBase(&reason_not_given_)->InternalSwap(CastToBase(&other->reason_not_given_));
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreImmunization_Explanation::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreImmunization_Reaction::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreImmunization_Reaction_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_Reaction_default_instance_._instance.get_mutable()->date_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_Reaction_default_instance_._instance.get_mutable()->detail_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_Reaction_default_instance_._instance.get_mutable()->reported_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
}
void UsCoreImmunization_Reaction::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreImmunization_Reaction::clear_extension() {
  extension_.Clear();
}
void UsCoreImmunization_Reaction::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreImmunization_Reaction::clear_date() {
  if (GetArenaNoVirtual() == NULL && date_ != NULL) {
    delete date_;
  }
  date_ = NULL;
}
void UsCoreImmunization_Reaction::clear_detail() {
  if (GetArenaNoVirtual() == NULL && detail_ != NULL) {
    delete detail_;
  }
  detail_ = NULL;
}
void UsCoreImmunization_Reaction::clear_reported() {
  if (GetArenaNoVirtual() == NULL && reported_ != NULL) {
    delete reported_;
  }
  reported_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreImmunization_Reaction::kIdFieldNumber;
const int UsCoreImmunization_Reaction::kExtensionFieldNumber;
const int UsCoreImmunization_Reaction::kModifierExtensionFieldNumber;
const int UsCoreImmunization_Reaction::kDateFieldNumber;
const int UsCoreImmunization_Reaction::kDetailFieldNumber;
const int UsCoreImmunization_Reaction::kReportedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreImmunization_Reaction::UsCoreImmunization_Reaction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreImmunization_Reaction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreImmunization.Reaction)
}
UsCoreImmunization_Reaction::UsCoreImmunization_Reaction(const UsCoreImmunization_Reaction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_date()) {
    date_ = new ::google::fhir::stu3::proto::DateTime(*from.date_);
  } else {
    date_ = NULL;
  }
  if (from.has_detail()) {
    detail_ = new ::google::fhir::stu3::proto::Reference(*from.detail_);
  } else {
    detail_ = NULL;
  }
  if (from.has_reported()) {
    reported_ = new ::google::fhir::stu3::proto::Boolean(*from.reported_);
  } else {
    reported_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreImmunization.Reaction)
}

void UsCoreImmunization_Reaction::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reported_) -
      reinterpret_cast<char*>(&id_)) + sizeof(reported_));
}

UsCoreImmunization_Reaction::~UsCoreImmunization_Reaction() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreImmunization.Reaction)
  SharedDtor();
}

void UsCoreImmunization_Reaction::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete date_;
  if (this != internal_default_instance()) delete detail_;
  if (this != internal_default_instance()) delete reported_;
}

void UsCoreImmunization_Reaction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreImmunization_Reaction::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreImmunization_Reaction& UsCoreImmunization_Reaction::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreImmunization_Reaction.base);
  return *internal_default_instance();
}


void UsCoreImmunization_Reaction::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreImmunization.Reaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && date_ != NULL) {
    delete date_;
  }
  date_ = NULL;
  if (GetArenaNoVirtual() == NULL && detail_ != NULL) {
    delete detail_;
  }
  detail_ = NULL;
  if (GetArenaNoVirtual() == NULL && reported_ != NULL) {
    delete reported_;
  }
  reported_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreImmunization_Reaction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreImmunization.Reaction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DateTime date = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference detail = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_detail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Boolean reported = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reported()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreImmunization.Reaction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreImmunization.Reaction)
  return false;
#undef DO_
}

void UsCoreImmunization_Reaction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreImmunization.Reaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.DateTime date = 4;
  if (this->has_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_date(), output);
  }

  // .google.fhir.stu3.proto.Reference detail = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
  if (this->has_detail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_detail(), output);
  }

  // .google.fhir.stu3.proto.Boolean reported = 6;
  if (this->has_reported()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_reported(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreImmunization.Reaction)
}

::google::protobuf::uint8* UsCoreImmunization_Reaction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreImmunization.Reaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.DateTime date = 4;
  if (this->has_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_date(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference detail = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
  if (this->has_detail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_detail(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Boolean reported = 6;
  if (this->has_reported()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_reported(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreImmunization.Reaction)
  return target;
}

size_t UsCoreImmunization_Reaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreImmunization.Reaction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.DateTime date = 4;
  if (this->has_date()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *date_);
  }

  // .google.fhir.stu3.proto.Reference detail = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
  if (this->has_detail()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *detail_);
  }

  // .google.fhir.stu3.proto.Boolean reported = 6;
  if (this->has_reported()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *reported_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreImmunization_Reaction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreImmunization.Reaction)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreImmunization_Reaction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreImmunization_Reaction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreImmunization.Reaction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreImmunization.Reaction)
    MergeFrom(*source);
  }
}

void UsCoreImmunization_Reaction::MergeFrom(const UsCoreImmunization_Reaction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreImmunization.Reaction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_date()) {
    mutable_date()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date());
  }
  if (from.has_detail()) {
    mutable_detail()->::google::fhir::stu3::proto::Reference::MergeFrom(from.detail());
  }
  if (from.has_reported()) {
    mutable_reported()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.reported());
  }
}

void UsCoreImmunization_Reaction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreImmunization.Reaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreImmunization_Reaction::CopyFrom(const UsCoreImmunization_Reaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreImmunization.Reaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreImmunization_Reaction::IsInitialized() const {
  return true;
}

void UsCoreImmunization_Reaction::Swap(UsCoreImmunization_Reaction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreImmunization_Reaction::InternalSwap(UsCoreImmunization_Reaction* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  swap(id_, other->id_);
  swap(date_, other->date_);
  swap(detail_, other->detail_);
  swap(reported_, other->reported_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreImmunization_Reaction::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreImmunization_VaccinationProtocol::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreImmunization_VaccinationProtocol_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_VaccinationProtocol_default_instance_._instance.get_mutable()->dose_sequence_ = const_cast< ::google::fhir::stu3::proto::PositiveInt*>(
      ::google::fhir::stu3::proto::PositiveInt::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_VaccinationProtocol_default_instance_._instance.get_mutable()->description_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_VaccinationProtocol_default_instance_._instance.get_mutable()->authority_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_VaccinationProtocol_default_instance_._instance.get_mutable()->series_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_VaccinationProtocol_default_instance_._instance.get_mutable()->series_doses_ = const_cast< ::google::fhir::stu3::proto::PositiveInt*>(
      ::google::fhir::stu3::proto::PositiveInt::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_VaccinationProtocol_default_instance_._instance.get_mutable()->dose_status_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_VaccinationProtocol_default_instance_._instance.get_mutable()->dose_status_reason_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
}
void UsCoreImmunization_VaccinationProtocol::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreImmunization_VaccinationProtocol::clear_extension() {
  extension_.Clear();
}
void UsCoreImmunization_VaccinationProtocol::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreImmunization_VaccinationProtocol::clear_dose_sequence() {
  if (GetArenaNoVirtual() == NULL && dose_sequence_ != NULL) {
    delete dose_sequence_;
  }
  dose_sequence_ = NULL;
}
void UsCoreImmunization_VaccinationProtocol::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
}
void UsCoreImmunization_VaccinationProtocol::clear_authority() {
  if (GetArenaNoVirtual() == NULL && authority_ != NULL) {
    delete authority_;
  }
  authority_ = NULL;
}
void UsCoreImmunization_VaccinationProtocol::clear_series() {
  if (GetArenaNoVirtual() == NULL && series_ != NULL) {
    delete series_;
  }
  series_ = NULL;
}
void UsCoreImmunization_VaccinationProtocol::clear_series_doses() {
  if (GetArenaNoVirtual() == NULL && series_doses_ != NULL) {
    delete series_doses_;
  }
  series_doses_ = NULL;
}
void UsCoreImmunization_VaccinationProtocol::clear_target_disease() {
  target_disease_.Clear();
}
void UsCoreImmunization_VaccinationProtocol::clear_dose_status() {
  if (GetArenaNoVirtual() == NULL && dose_status_ != NULL) {
    delete dose_status_;
  }
  dose_status_ = NULL;
}
void UsCoreImmunization_VaccinationProtocol::clear_dose_status_reason() {
  if (GetArenaNoVirtual() == NULL && dose_status_reason_ != NULL) {
    delete dose_status_reason_;
  }
  dose_status_reason_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreImmunization_VaccinationProtocol::kIdFieldNumber;
const int UsCoreImmunization_VaccinationProtocol::kExtensionFieldNumber;
const int UsCoreImmunization_VaccinationProtocol::kModifierExtensionFieldNumber;
const int UsCoreImmunization_VaccinationProtocol::kDoseSequenceFieldNumber;
const int UsCoreImmunization_VaccinationProtocol::kDescriptionFieldNumber;
const int UsCoreImmunization_VaccinationProtocol::kAuthorityFieldNumber;
const int UsCoreImmunization_VaccinationProtocol::kSeriesFieldNumber;
const int UsCoreImmunization_VaccinationProtocol::kSeriesDosesFieldNumber;
const int UsCoreImmunization_VaccinationProtocol::kTargetDiseaseFieldNumber;
const int UsCoreImmunization_VaccinationProtocol::kDoseStatusFieldNumber;
const int UsCoreImmunization_VaccinationProtocol::kDoseStatusReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreImmunization_VaccinationProtocol::UsCoreImmunization_VaccinationProtocol()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreImmunization_VaccinationProtocol.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol)
}
UsCoreImmunization_VaccinationProtocol::UsCoreImmunization_VaccinationProtocol(const UsCoreImmunization_VaccinationProtocol& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      target_disease_(from.target_disease_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_dose_sequence()) {
    dose_sequence_ = new ::google::fhir::stu3::proto::PositiveInt(*from.dose_sequence_);
  } else {
    dose_sequence_ = NULL;
  }
  if (from.has_description()) {
    description_ = new ::google::fhir::stu3::proto::String(*from.description_);
  } else {
    description_ = NULL;
  }
  if (from.has_authority()) {
    authority_ = new ::google::fhir::stu3::proto::Reference(*from.authority_);
  } else {
    authority_ = NULL;
  }
  if (from.has_series()) {
    series_ = new ::google::fhir::stu3::proto::String(*from.series_);
  } else {
    series_ = NULL;
  }
  if (from.has_series_doses()) {
    series_doses_ = new ::google::fhir::stu3::proto::PositiveInt(*from.series_doses_);
  } else {
    series_doses_ = NULL;
  }
  if (from.has_dose_status()) {
    dose_status_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.dose_status_);
  } else {
    dose_status_ = NULL;
  }
  if (from.has_dose_status_reason()) {
    dose_status_reason_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.dose_status_reason_);
  } else {
    dose_status_reason_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol)
}

void UsCoreImmunization_VaccinationProtocol::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dose_status_reason_) -
      reinterpret_cast<char*>(&id_)) + sizeof(dose_status_reason_));
}

UsCoreImmunization_VaccinationProtocol::~UsCoreImmunization_VaccinationProtocol() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol)
  SharedDtor();
}

void UsCoreImmunization_VaccinationProtocol::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete dose_sequence_;
  if (this != internal_default_instance()) delete description_;
  if (this != internal_default_instance()) delete authority_;
  if (this != internal_default_instance()) delete series_;
  if (this != internal_default_instance()) delete series_doses_;
  if (this != internal_default_instance()) delete dose_status_;
  if (this != internal_default_instance()) delete dose_status_reason_;
}

void UsCoreImmunization_VaccinationProtocol::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreImmunization_VaccinationProtocol::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreImmunization_VaccinationProtocol& UsCoreImmunization_VaccinationProtocol::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreImmunization_VaccinationProtocol.base);
  return *internal_default_instance();
}


void UsCoreImmunization_VaccinationProtocol::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  target_disease_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && dose_sequence_ != NULL) {
    delete dose_sequence_;
  }
  dose_sequence_ = NULL;
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
  if (GetArenaNoVirtual() == NULL && authority_ != NULL) {
    delete authority_;
  }
  authority_ = NULL;
  if (GetArenaNoVirtual() == NULL && series_ != NULL) {
    delete series_;
  }
  series_ = NULL;
  if (GetArenaNoVirtual() == NULL && series_doses_ != NULL) {
    delete series_doses_;
  }
  series_doses_ = NULL;
  if (GetArenaNoVirtual() == NULL && dose_status_ != NULL) {
    delete dose_status_;
  }
  dose_status_ = NULL;
  if (GetArenaNoVirtual() == NULL && dose_status_reason_ != NULL) {
    delete dose_status_reason_;
  }
  dose_status_reason_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreImmunization_VaccinationProtocol::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.PositiveInt dose_sequence = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dose_sequence()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String description = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference authority = 6 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_authority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String series = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_series()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.PositiveInt series_doses = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_series_doses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept target_disease = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_target_disease()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept dose_status = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dose_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept dose_status_reason = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dose_status_reason()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol)
  return false;
#undef DO_
}

void UsCoreImmunization_VaccinationProtocol::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.PositiveInt dose_sequence = 4;
  if (this->has_dose_sequence()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_dose_sequence(), output);
  }

  // .google.fhir.stu3.proto.String description = 5;
  if (this->has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_description(), output);
  }

  // .google.fhir.stu3.proto.Reference authority = 6 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_authority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_authority(), output);
  }

  // .google.fhir.stu3.proto.String series = 7;
  if (this->has_series()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_series(), output);
  }

  // .google.fhir.stu3.proto.PositiveInt series_doses = 8;
  if (this->has_series_doses()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_series_doses(), output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept target_disease = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->target_disease_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->target_disease(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.CodeableConcept dose_status = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_dose_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_dose_status(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept dose_status_reason = 11;
  if (this->has_dose_status_reason()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_dose_status_reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol)
}

::google::protobuf::uint8* UsCoreImmunization_VaccinationProtocol::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.PositiveInt dose_sequence = 4;
  if (this->has_dose_sequence()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_dose_sequence(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String description = 5;
  if (this->has_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_description(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference authority = 6 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_authority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_authority(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String series = 7;
  if (this->has_series()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_series(), deterministic, target);
  }

  // .google.fhir.stu3.proto.PositiveInt series_doses = 8;
  if (this->has_series_doses()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_series_doses(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept target_disease = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->target_disease_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->target_disease(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept dose_status = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_dose_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_dose_status(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept dose_status_reason = 11;
  if (this->has_dose_status_reason()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_dose_status_reason(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol)
  return target;
}

size_t UsCoreImmunization_VaccinationProtocol::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept target_disease = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  {
    unsigned int count = static_cast<unsigned int>(this->target_disease_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->target_disease(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.PositiveInt dose_sequence = 4;
  if (this->has_dose_sequence()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dose_sequence_);
  }

  // .google.fhir.stu3.proto.String description = 5;
  if (this->has_description()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *description_);
  }

  // .google.fhir.stu3.proto.Reference authority = 6 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_authority()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *authority_);
  }

  // .google.fhir.stu3.proto.String series = 7;
  if (this->has_series()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *series_);
  }

  // .google.fhir.stu3.proto.PositiveInt series_doses = 8;
  if (this->has_series_doses()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *series_doses_);
  }

  // .google.fhir.stu3.proto.CodeableConcept dose_status = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_dose_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dose_status_);
  }

  // .google.fhir.stu3.proto.CodeableConcept dose_status_reason = 11;
  if (this->has_dose_status_reason()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dose_status_reason_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreImmunization_VaccinationProtocol::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreImmunization_VaccinationProtocol* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreImmunization_VaccinationProtocol>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol)
    MergeFrom(*source);
  }
}

void UsCoreImmunization_VaccinationProtocol::MergeFrom(const UsCoreImmunization_VaccinationProtocol& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  target_disease_.MergeFrom(from.target_disease_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_dose_sequence()) {
    mutable_dose_sequence()->::google::fhir::stu3::proto::PositiveInt::MergeFrom(from.dose_sequence());
  }
  if (from.has_description()) {
    mutable_description()->::google::fhir::stu3::proto::String::MergeFrom(from.description());
  }
  if (from.has_authority()) {
    mutable_authority()->::google::fhir::stu3::proto::Reference::MergeFrom(from.authority());
  }
  if (from.has_series()) {
    mutable_series()->::google::fhir::stu3::proto::String::MergeFrom(from.series());
  }
  if (from.has_series_doses()) {
    mutable_series_doses()->::google::fhir::stu3::proto::PositiveInt::MergeFrom(from.series_doses());
  }
  if (from.has_dose_status()) {
    mutable_dose_status()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.dose_status());
  }
  if (from.has_dose_status_reason()) {
    mutable_dose_status_reason()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.dose_status_reason());
  }
}

void UsCoreImmunization_VaccinationProtocol::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreImmunization_VaccinationProtocol::CopyFrom(const UsCoreImmunization_VaccinationProtocol& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreImmunization_VaccinationProtocol::IsInitialized() const {
  return true;
}

void UsCoreImmunization_VaccinationProtocol::Swap(UsCoreImmunization_VaccinationProtocol* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreImmunization_VaccinationProtocol::InternalSwap(UsCoreImmunization_VaccinationProtocol* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&target_disease_)->InternalSwap(CastToBase(&other->target_disease_));
  swap(id_, other->id_);
  swap(dose_sequence_, other->dose_sequence_);
  swap(description_, other->description_);
  swap(authority_, other->authority_);
  swap(series_, other->series_);
  swap(series_doses_, other->series_doses_);
  swap(dose_status_, other->dose_status_);
  swap(dose_status_reason_, other->dose_status_reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreImmunization_VaccinationProtocol::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreImmunization::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreImmunization_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::Id*>(
      ::google::fhir::stu3::proto::Id::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_default_instance_._instance.get_mutable()->meta_ = const_cast< ::google::fhir::stu3::proto::Meta*>(
      ::google::fhir::stu3::proto::Meta::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_default_instance_._instance.get_mutable()->implicit_rules_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_default_instance_._instance.get_mutable()->language_ = const_cast< ::google::fhir::stu3::proto::LanguageCode*>(
      ::google::fhir::stu3::proto::LanguageCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_default_instance_._instance.get_mutable()->text_ = const_cast< ::google::fhir::stu3::proto::Narrative*>(
      ::google::fhir::stu3::proto::Narrative::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::fhir::stu3::proto::ImmunizationStatusCodesCode*>(
      ::google::fhir::stu3::proto::ImmunizationStatusCodesCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_default_instance_._instance.get_mutable()->not_given_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_default_instance_._instance.get_mutable()->vaccine_code_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_default_instance_._instance.get_mutable()->patient_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_default_instance_._instance.get_mutable()->encounter_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_default_instance_._instance.get_mutable()->date_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_default_instance_._instance.get_mutable()->primary_source_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_default_instance_._instance.get_mutable()->report_origin_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_default_instance_._instance.get_mutable()->location_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_default_instance_._instance.get_mutable()->manufacturer_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_default_instance_._instance.get_mutable()->lot_number_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_default_instance_._instance.get_mutable()->expiration_date_ = const_cast< ::google::fhir::stu3::proto::Date*>(
      ::google::fhir::stu3::proto::Date::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_default_instance_._instance.get_mutable()->site_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_default_instance_._instance.get_mutable()->route_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_default_instance_._instance.get_mutable()->dose_quantity_ = const_cast< ::google::fhir::stu3::proto::SimpleQuantity*>(
      ::google::fhir::stu3::proto::SimpleQuantity::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreImmunization_default_instance_._instance.get_mutable()->explanation_ = const_cast< ::google::fhir::stu3::uscore::UsCoreImmunization_Explanation*>(
      ::google::fhir::stu3::uscore::UsCoreImmunization_Explanation::internal_default_instance());
}
void UsCoreImmunization::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreImmunization::clear_meta() {
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
}
void UsCoreImmunization::clear_implicit_rules() {
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
}
void UsCoreImmunization::clear_language() {
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
}
void UsCoreImmunization::clear_text() {
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
}
void UsCoreImmunization::clear_contained() {
  contained_.Clear();
}
void UsCoreImmunization::clear_extension() {
  extension_.Clear();
}
void UsCoreImmunization::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreImmunization::clear_identifier() {
  identifier_.Clear();
}
void UsCoreImmunization::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
void UsCoreImmunization::clear_not_given() {
  if (GetArenaNoVirtual() == NULL && not_given_ != NULL) {
    delete not_given_;
  }
  not_given_ = NULL;
}
void UsCoreImmunization::clear_vaccine_code() {
  if (GetArenaNoVirtual() == NULL && vaccine_code_ != NULL) {
    delete vaccine_code_;
  }
  vaccine_code_ = NULL;
}
void UsCoreImmunization::clear_patient() {
  if (GetArenaNoVirtual() == NULL && patient_ != NULL) {
    delete patient_;
  }
  patient_ = NULL;
}
void UsCoreImmunization::clear_encounter() {
  if (GetArenaNoVirtual() == NULL && encounter_ != NULL) {
    delete encounter_;
  }
  encounter_ = NULL;
}
void UsCoreImmunization::clear_date() {
  if (GetArenaNoVirtual() == NULL && date_ != NULL) {
    delete date_;
  }
  date_ = NULL;
}
void UsCoreImmunization::clear_primary_source() {
  if (GetArenaNoVirtual() == NULL && primary_source_ != NULL) {
    delete primary_source_;
  }
  primary_source_ = NULL;
}
void UsCoreImmunization::clear_report_origin() {
  if (GetArenaNoVirtual() == NULL && report_origin_ != NULL) {
    delete report_origin_;
  }
  report_origin_ = NULL;
}
void UsCoreImmunization::clear_location() {
  if (GetArenaNoVirtual() == NULL && location_ != NULL) {
    delete location_;
  }
  location_ = NULL;
}
void UsCoreImmunization::clear_manufacturer() {
  if (GetArenaNoVirtual() == NULL && manufacturer_ != NULL) {
    delete manufacturer_;
  }
  manufacturer_ = NULL;
}
void UsCoreImmunization::clear_lot_number() {
  if (GetArenaNoVirtual() == NULL && lot_number_ != NULL) {
    delete lot_number_;
  }
  lot_number_ = NULL;
}
void UsCoreImmunization::clear_expiration_date() {
  if (GetArenaNoVirtual() == NULL && expiration_date_ != NULL) {
    delete expiration_date_;
  }
  expiration_date_ = NULL;
}
void UsCoreImmunization::clear_site() {
  if (GetArenaNoVirtual() == NULL && site_ != NULL) {
    delete site_;
  }
  site_ = NULL;
}
void UsCoreImmunization::clear_route() {
  if (GetArenaNoVirtual() == NULL && route_ != NULL) {
    delete route_;
  }
  route_ = NULL;
}
void UsCoreImmunization::clear_dose_quantity() {
  if (GetArenaNoVirtual() == NULL && dose_quantity_ != NULL) {
    delete dose_quantity_;
  }
  dose_quantity_ = NULL;
}
void UsCoreImmunization::clear_note() {
  note_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreImmunization::kIdFieldNumber;
const int UsCoreImmunization::kMetaFieldNumber;
const int UsCoreImmunization::kImplicitRulesFieldNumber;
const int UsCoreImmunization::kLanguageFieldNumber;
const int UsCoreImmunization::kTextFieldNumber;
const int UsCoreImmunization::kContainedFieldNumber;
const int UsCoreImmunization::kExtensionFieldNumber;
const int UsCoreImmunization::kModifierExtensionFieldNumber;
const int UsCoreImmunization::kIdentifierFieldNumber;
const int UsCoreImmunization::kStatusFieldNumber;
const int UsCoreImmunization::kNotGivenFieldNumber;
const int UsCoreImmunization::kVaccineCodeFieldNumber;
const int UsCoreImmunization::kPatientFieldNumber;
const int UsCoreImmunization::kEncounterFieldNumber;
const int UsCoreImmunization::kDateFieldNumber;
const int UsCoreImmunization::kPrimarySourceFieldNumber;
const int UsCoreImmunization::kReportOriginFieldNumber;
const int UsCoreImmunization::kLocationFieldNumber;
const int UsCoreImmunization::kManufacturerFieldNumber;
const int UsCoreImmunization::kLotNumberFieldNumber;
const int UsCoreImmunization::kExpirationDateFieldNumber;
const int UsCoreImmunization::kSiteFieldNumber;
const int UsCoreImmunization::kRouteFieldNumber;
const int UsCoreImmunization::kDoseQuantityFieldNumber;
const int UsCoreImmunization::kPractitionerFieldNumber;
const int UsCoreImmunization::kNoteFieldNumber;
const int UsCoreImmunization::kExplanationFieldNumber;
const int UsCoreImmunization::kReactionFieldNumber;
const int UsCoreImmunization::kVaccinationProtocolFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreImmunization::UsCoreImmunization()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreImmunization.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreImmunization)
}
UsCoreImmunization::UsCoreImmunization(const UsCoreImmunization& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      contained_(from.contained_),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      identifier_(from.identifier_),
      practitioner_(from.practitioner_),
      note_(from.note_),
      reaction_(from.reaction_),
      vaccination_protocol_(from.vaccination_protocol_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::Id(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_meta()) {
    meta_ = new ::google::fhir::stu3::proto::Meta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  if (from.has_implicit_rules()) {
    implicit_rules_ = new ::google::fhir::stu3::proto::Uri(*from.implicit_rules_);
  } else {
    implicit_rules_ = NULL;
  }
  if (from.has_language()) {
    language_ = new ::google::fhir::stu3::proto::LanguageCode(*from.language_);
  } else {
    language_ = NULL;
  }
  if (from.has_text()) {
    text_ = new ::google::fhir::stu3::proto::Narrative(*from.text_);
  } else {
    text_ = NULL;
  }
  if (from.has_status()) {
    status_ = new ::google::fhir::stu3::proto::ImmunizationStatusCodesCode(*from.status_);
  } else {
    status_ = NULL;
  }
  if (from.has_not_given()) {
    not_given_ = new ::google::fhir::stu3::proto::Boolean(*from.not_given_);
  } else {
    not_given_ = NULL;
  }
  if (from.has_vaccine_code()) {
    vaccine_code_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.vaccine_code_);
  } else {
    vaccine_code_ = NULL;
  }
  if (from.has_patient()) {
    patient_ = new ::google::fhir::stu3::proto::Reference(*from.patient_);
  } else {
    patient_ = NULL;
  }
  if (from.has_encounter()) {
    encounter_ = new ::google::fhir::stu3::proto::Reference(*from.encounter_);
  } else {
    encounter_ = NULL;
  }
  if (from.has_date()) {
    date_ = new ::google::fhir::stu3::proto::DateTime(*from.date_);
  } else {
    date_ = NULL;
  }
  if (from.has_primary_source()) {
    primary_source_ = new ::google::fhir::stu3::proto::Boolean(*from.primary_source_);
  } else {
    primary_source_ = NULL;
  }
  if (from.has_report_origin()) {
    report_origin_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.report_origin_);
  } else {
    report_origin_ = NULL;
  }
  if (from.has_location()) {
    location_ = new ::google::fhir::stu3::proto::Reference(*from.location_);
  } else {
    location_ = NULL;
  }
  if (from.has_manufacturer()) {
    manufacturer_ = new ::google::fhir::stu3::proto::Reference(*from.manufacturer_);
  } else {
    manufacturer_ = NULL;
  }
  if (from.has_lot_number()) {
    lot_number_ = new ::google::fhir::stu3::proto::String(*from.lot_number_);
  } else {
    lot_number_ = NULL;
  }
  if (from.has_expiration_date()) {
    expiration_date_ = new ::google::fhir::stu3::proto::Date(*from.expiration_date_);
  } else {
    expiration_date_ = NULL;
  }
  if (from.has_site()) {
    site_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.site_);
  } else {
    site_ = NULL;
  }
  if (from.has_route()) {
    route_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.route_);
  } else {
    route_ = NULL;
  }
  if (from.has_dose_quantity()) {
    dose_quantity_ = new ::google::fhir::stu3::proto::SimpleQuantity(*from.dose_quantity_);
  } else {
    dose_quantity_ = NULL;
  }
  if (from.has_explanation()) {
    explanation_ = new ::google::fhir::stu3::uscore::UsCoreImmunization_Explanation(*from.explanation_);
  } else {
    explanation_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreImmunization)
}

void UsCoreImmunization::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&explanation_) -
      reinterpret_cast<char*>(&id_)) + sizeof(explanation_));
}

UsCoreImmunization::~UsCoreImmunization() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreImmunization)
  SharedDtor();
}

void UsCoreImmunization::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete implicit_rules_;
  if (this != internal_default_instance()) delete language_;
  if (this != internal_default_instance()) delete text_;
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete not_given_;
  if (this != internal_default_instance()) delete vaccine_code_;
  if (this != internal_default_instance()) delete patient_;
  if (this != internal_default_instance()) delete encounter_;
  if (this != internal_default_instance()) delete date_;
  if (this != internal_default_instance()) delete primary_source_;
  if (this != internal_default_instance()) delete report_origin_;
  if (this != internal_default_instance()) delete location_;
  if (this != internal_default_instance()) delete manufacturer_;
  if (this != internal_default_instance()) delete lot_number_;
  if (this != internal_default_instance()) delete expiration_date_;
  if (this != internal_default_instance()) delete site_;
  if (this != internal_default_instance()) delete route_;
  if (this != internal_default_instance()) delete dose_quantity_;
  if (this != internal_default_instance()) delete explanation_;
}

void UsCoreImmunization::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreImmunization::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreImmunization& UsCoreImmunization::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreImmunization.base);
  return *internal_default_instance();
}


void UsCoreImmunization::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreImmunization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contained_.Clear();
  extension_.Clear();
  modifier_extension_.Clear();
  identifier_.Clear();
  practitioner_.Clear();
  note_.Clear();
  reaction_.Clear();
  vaccination_protocol_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  if (GetArenaNoVirtual() == NULL && not_given_ != NULL) {
    delete not_given_;
  }
  not_given_ = NULL;
  if (GetArenaNoVirtual() == NULL && vaccine_code_ != NULL) {
    delete vaccine_code_;
  }
  vaccine_code_ = NULL;
  if (GetArenaNoVirtual() == NULL && patient_ != NULL) {
    delete patient_;
  }
  patient_ = NULL;
  if (GetArenaNoVirtual() == NULL && encounter_ != NULL) {
    delete encounter_;
  }
  encounter_ = NULL;
  if (GetArenaNoVirtual() == NULL && date_ != NULL) {
    delete date_;
  }
  date_ = NULL;
  if (GetArenaNoVirtual() == NULL && primary_source_ != NULL) {
    delete primary_source_;
  }
  primary_source_ = NULL;
  if (GetArenaNoVirtual() == NULL && report_origin_ != NULL) {
    delete report_origin_;
  }
  report_origin_ = NULL;
  if (GetArenaNoVirtual() == NULL && location_ != NULL) {
    delete location_;
  }
  location_ = NULL;
  if (GetArenaNoVirtual() == NULL && manufacturer_ != NULL) {
    delete manufacturer_;
  }
  manufacturer_ = NULL;
  if (GetArenaNoVirtual() == NULL && lot_number_ != NULL) {
    delete lot_number_;
  }
  lot_number_ = NULL;
  if (GetArenaNoVirtual() == NULL && expiration_date_ != NULL) {
    delete expiration_date_;
  }
  expiration_date_ = NULL;
  if (GetArenaNoVirtual() == NULL && site_ != NULL) {
    delete site_;
  }
  site_ = NULL;
  if (GetArenaNoVirtual() == NULL && route_ != NULL) {
    delete route_;
  }
  route_ = NULL;
  if (GetArenaNoVirtual() == NULL && dose_quantity_ != NULL) {
    delete dose_quantity_;
  }
  dose_quantity_ = NULL;
  if (GetArenaNoVirtual() == NULL && explanation_ != NULL) {
    delete explanation_;
  }
  explanation_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreImmunization::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreImmunization)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Id id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Meta meta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri implicit_rules = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_implicit_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.LanguageCode language = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_language()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Narrative text = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_contained()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ImmunizationStatusCodesCode status = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Boolean not_given = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_not_given()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept vaccine_code = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vaccine_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference patient = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_patient()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference encounter = 14 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter"];
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_encounter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DateTime date = 15 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Boolean primary_source = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_primary_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept report_origin = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_report_origin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference location = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Location"];
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference manufacturer = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_manufacturer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String lot_number = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lot_number()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Date expiration_date = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expiration_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept site = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_site()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept route = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_route()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.SimpleQuantity dose_quantity = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dose_quantity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.uscore.UsCoreImmunization.Practitioner practitioner = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_practitioner()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Annotation note = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_note()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreImmunization.Explanation explanation = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_explanation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.uscore.UsCoreImmunization.Reaction reaction = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_reaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol vaccination_protocol = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_vaccination_protocol()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreImmunization)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreImmunization)
  return false;
#undef DO_
}

void UsCoreImmunization::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreImmunization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_meta(), output);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_implicit_rules(), output);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_language(), output);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_text(), output);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->contained(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->identifier(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.ImmunizationStatusCodesCode status = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_status(), output);
  }

  // .google.fhir.stu3.proto.Boolean not_given = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_not_given()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_not_given(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept vaccine_code = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_vaccine_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_vaccine_code(), output);
  }

  // .google.fhir.stu3.proto.Reference patient = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_patient()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_patient(), output);
  }

  // .google.fhir.stu3.proto.Reference encounter = 14 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter"];
  if (this->has_encounter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_encounter(), output);
  }

  // .google.fhir.stu3.proto.DateTime date = 15 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_date(), output);
  }

  // .google.fhir.stu3.proto.Boolean primary_source = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_primary_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_primary_source(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept report_origin = 17;
  if (this->has_report_origin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_report_origin(), output);
  }

  // .google.fhir.stu3.proto.Reference location = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Location"];
  if (this->has_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_location(), output);
  }

  // .google.fhir.stu3.proto.Reference manufacturer = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_manufacturer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_manufacturer(), output);
  }

  // .google.fhir.stu3.proto.String lot_number = 20;
  if (this->has_lot_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_lot_number(), output);
  }

  // .google.fhir.stu3.proto.Date expiration_date = 21;
  if (this->has_expiration_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_expiration_date(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept site = 22;
  if (this->has_site()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->_internal_site(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept route = 23;
  if (this->has_route()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->_internal_route(), output);
  }

  // .google.fhir.stu3.proto.SimpleQuantity dose_quantity = 24;
  if (this->has_dose_quantity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->_internal_dose_quantity(), output);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreImmunization.Practitioner practitioner = 25;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->practitioner_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25,
      this->practitioner(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 26;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->note_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26,
      this->note(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.uscore.UsCoreImmunization.Explanation explanation = 27;
  if (this->has_explanation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->_internal_explanation(), output);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreImmunization.Reaction reaction = 28;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reaction_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28,
      this->reaction(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol vaccination_protocol = 29;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vaccination_protocol_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29,
      this->vaccination_protocol(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreImmunization)
}

::google::protobuf::uint8* UsCoreImmunization::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreImmunization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_meta(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_implicit_rules(), deterministic, target);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_language(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_text(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->contained(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->identifier(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.ImmunizationStatusCodesCode status = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_status(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Boolean not_given = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_not_given()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_not_given(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept vaccine_code = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_vaccine_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_vaccine_code(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference patient = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_patient()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_patient(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference encounter = 14 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter"];
  if (this->has_encounter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_encounter(), deterministic, target);
  }

  // .google.fhir.stu3.proto.DateTime date = 15 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_date(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Boolean primary_source = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_primary_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_primary_source(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept report_origin = 17;
  if (this->has_report_origin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_report_origin(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference location = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Location"];
  if (this->has_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_location(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference manufacturer = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_manufacturer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_manufacturer(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String lot_number = 20;
  if (this->has_lot_number()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_lot_number(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Date expiration_date = 21;
  if (this->has_expiration_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_expiration_date(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept site = 22;
  if (this->has_site()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->_internal_site(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept route = 23;
  if (this->has_route()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->_internal_route(), deterministic, target);
  }

  // .google.fhir.stu3.proto.SimpleQuantity dose_quantity = 24;
  if (this->has_dose_quantity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->_internal_dose_quantity(), deterministic, target);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreImmunization.Practitioner practitioner = 25;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->practitioner_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->practitioner(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 26;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->note_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, this->note(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreImmunization.Explanation explanation = 27;
  if (this->has_explanation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, this->_internal_explanation(), deterministic, target);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreImmunization.Reaction reaction = 28;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reaction_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, this->reaction(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol vaccination_protocol = 29;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vaccination_protocol_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29, this->vaccination_protocol(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreImmunization)
  return target;
}

size_t UsCoreImmunization::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreImmunization)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->contained_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->contained(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->identifier_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->identifier(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.uscore.UsCoreImmunization.Practitioner practitioner = 25;
  {
    unsigned int count = static_cast<unsigned int>(this->practitioner_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->practitioner(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 26;
  {
    unsigned int count = static_cast<unsigned int>(this->note_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->note(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.uscore.UsCoreImmunization.Reaction reaction = 28;
  {
    unsigned int count = static_cast<unsigned int>(this->reaction_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reaction(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol vaccination_protocol = 29;
  {
    unsigned int count = static_cast<unsigned int>(this->vaccination_protocol_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vaccination_protocol(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *implicit_rules_);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *language_);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *text_);
  }

  // .google.fhir.stu3.proto.ImmunizationStatusCodesCode status = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .google.fhir.stu3.proto.Boolean not_given = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_not_given()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *not_given_);
  }

  // .google.fhir.stu3.proto.CodeableConcept vaccine_code = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_vaccine_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vaccine_code_);
  }

  // .google.fhir.stu3.proto.Reference patient = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_patient()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *patient_);
  }

  // .google.fhir.stu3.proto.Reference encounter = 14 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter"];
  if (this->has_encounter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *encounter_);
  }

  // .google.fhir.stu3.proto.DateTime date = 15 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_date()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *date_);
  }

  // .google.fhir.stu3.proto.Boolean primary_source = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_primary_source()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *primary_source_);
  }

  // .google.fhir.stu3.proto.CodeableConcept report_origin = 17;
  if (this->has_report_origin()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *report_origin_);
  }

  // .google.fhir.stu3.proto.Reference location = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Location"];
  if (this->has_location()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *location_);
  }

  // .google.fhir.stu3.proto.Reference manufacturer = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_manufacturer()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *manufacturer_);
  }

  // .google.fhir.stu3.proto.String lot_number = 20;
  if (this->has_lot_number()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *lot_number_);
  }

  // .google.fhir.stu3.proto.Date expiration_date = 21;
  if (this->has_expiration_date()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expiration_date_);
  }

  // .google.fhir.stu3.proto.CodeableConcept site = 22;
  if (this->has_site()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *site_);
  }

  // .google.fhir.stu3.proto.CodeableConcept route = 23;
  if (this->has_route()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *route_);
  }

  // .google.fhir.stu3.proto.SimpleQuantity dose_quantity = 24;
  if (this->has_dose_quantity()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dose_quantity_);
  }

  // .google.fhir.stu3.uscore.UsCoreImmunization.Explanation explanation = 27;
  if (this->has_explanation()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *explanation_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreImmunization::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreImmunization)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreImmunization* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreImmunization>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreImmunization)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreImmunization)
    MergeFrom(*source);
  }
}

void UsCoreImmunization::MergeFrom(const UsCoreImmunization& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreImmunization)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contained_.MergeFrom(from.contained_);
  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  identifier_.MergeFrom(from.identifier_);
  practitioner_.MergeFrom(from.practitioner_);
  note_.MergeFrom(from.note_);
  reaction_.MergeFrom(from.reaction_);
  vaccination_protocol_.MergeFrom(from.vaccination_protocol_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::Id::MergeFrom(from.id());
  }
  if (from.has_meta()) {
    mutable_meta()->::google::fhir::stu3::proto::Meta::MergeFrom(from.meta());
  }
  if (from.has_implicit_rules()) {
    mutable_implicit_rules()->::google::fhir::stu3::proto::Uri::MergeFrom(from.implicit_rules());
  }
  if (from.has_language()) {
    mutable_language()->::google::fhir::stu3::proto::LanguageCode::MergeFrom(from.language());
  }
  if (from.has_text()) {
    mutable_text()->::google::fhir::stu3::proto::Narrative::MergeFrom(from.text());
  }
  if (from.has_status()) {
    mutable_status()->::google::fhir::stu3::proto::ImmunizationStatusCodesCode::MergeFrom(from.status());
  }
  if (from.has_not_given()) {
    mutable_not_given()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.not_given());
  }
  if (from.has_vaccine_code()) {
    mutable_vaccine_code()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.vaccine_code());
  }
  if (from.has_patient()) {
    mutable_patient()->::google::fhir::stu3::proto::Reference::MergeFrom(from.patient());
  }
  if (from.has_encounter()) {
    mutable_encounter()->::google::fhir::stu3::proto::Reference::MergeFrom(from.encounter());
  }
  if (from.has_date()) {
    mutable_date()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date());
  }
  if (from.has_primary_source()) {
    mutable_primary_source()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.primary_source());
  }
  if (from.has_report_origin()) {
    mutable_report_origin()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.report_origin());
  }
  if (from.has_location()) {
    mutable_location()->::google::fhir::stu3::proto::Reference::MergeFrom(from.location());
  }
  if (from.has_manufacturer()) {
    mutable_manufacturer()->::google::fhir::stu3::proto::Reference::MergeFrom(from.manufacturer());
  }
  if (from.has_lot_number()) {
    mutable_lot_number()->::google::fhir::stu3::proto::String::MergeFrom(from.lot_number());
  }
  if (from.has_expiration_date()) {
    mutable_expiration_date()->::google::fhir::stu3::proto::Date::MergeFrom(from.expiration_date());
  }
  if (from.has_site()) {
    mutable_site()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.site());
  }
  if (from.has_route()) {
    mutable_route()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.route());
  }
  if (from.has_dose_quantity()) {
    mutable_dose_quantity()->::google::fhir::stu3::proto::SimpleQuantity::MergeFrom(from.dose_quantity());
  }
  if (from.has_explanation()) {
    mutable_explanation()->::google::fhir::stu3::uscore::UsCoreImmunization_Explanation::MergeFrom(from.explanation());
  }
}

void UsCoreImmunization::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreImmunization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreImmunization::CopyFrom(const UsCoreImmunization& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreImmunization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreImmunization::IsInitialized() const {
  return true;
}

void UsCoreImmunization::Swap(UsCoreImmunization* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreImmunization::InternalSwap(UsCoreImmunization* other) {
  using std::swap;
  CastToBase(&contained_)->InternalSwap(CastToBase(&other->contained_));
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&identifier_)->InternalSwap(CastToBase(&other->identifier_));
  CastToBase(&practitioner_)->InternalSwap(CastToBase(&other->practitioner_));
  CastToBase(&note_)->InternalSwap(CastToBase(&other->note_));
  CastToBase(&reaction_)->InternalSwap(CastToBase(&other->reaction_));
  CastToBase(&vaccination_protocol_)->InternalSwap(CastToBase(&other->vaccination_protocol_));
  swap(id_, other->id_);
  swap(meta_, other->meta_);
  swap(implicit_rules_, other->implicit_rules_);
  swap(language_, other->language_);
  swap(text_, other->text_);
  swap(status_, other->status_);
  swap(not_given_, other->not_given_);
  swap(vaccine_code_, other->vaccine_code_);
  swap(patient_, other->patient_);
  swap(encounter_, other->encounter_);
  swap(date_, other->date_);
  swap(primary_source_, other->primary_source_);
  swap(report_origin_, other->report_origin_);
  swap(location_, other->location_);
  swap(manufacturer_, other->manufacturer_);
  swap(lot_number_, other->lot_number_);
  swap(expiration_date_, other->expiration_date_);
  swap(site_, other->site_);
  swap(route_, other->route_);
  swap(dose_quantity_, other->dose_quantity_);
  swap(explanation_, other->explanation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreImmunization::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreLocation_Position::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreLocation_Position_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreLocation_Position_default_instance_._instance.get_mutable()->longitude_ = const_cast< ::google::fhir::stu3::proto::Decimal*>(
      ::google::fhir::stu3::proto::Decimal::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreLocation_Position_default_instance_._instance.get_mutable()->latitude_ = const_cast< ::google::fhir::stu3::proto::Decimal*>(
      ::google::fhir::stu3::proto::Decimal::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreLocation_Position_default_instance_._instance.get_mutable()->altitude_ = const_cast< ::google::fhir::stu3::proto::Decimal*>(
      ::google::fhir::stu3::proto::Decimal::internal_default_instance());
}
void UsCoreLocation_Position::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreLocation_Position::clear_extension() {
  extension_.Clear();
}
void UsCoreLocation_Position::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreLocation_Position::clear_longitude() {
  if (GetArenaNoVirtual() == NULL && longitude_ != NULL) {
    delete longitude_;
  }
  longitude_ = NULL;
}
void UsCoreLocation_Position::clear_latitude() {
  if (GetArenaNoVirtual() == NULL && latitude_ != NULL) {
    delete latitude_;
  }
  latitude_ = NULL;
}
void UsCoreLocation_Position::clear_altitude() {
  if (GetArenaNoVirtual() == NULL && altitude_ != NULL) {
    delete altitude_;
  }
  altitude_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreLocation_Position::kIdFieldNumber;
const int UsCoreLocation_Position::kExtensionFieldNumber;
const int UsCoreLocation_Position::kModifierExtensionFieldNumber;
const int UsCoreLocation_Position::kLongitudeFieldNumber;
const int UsCoreLocation_Position::kLatitudeFieldNumber;
const int UsCoreLocation_Position::kAltitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreLocation_Position::UsCoreLocation_Position()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreLocation_Position.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreLocation.Position)
}
UsCoreLocation_Position::UsCoreLocation_Position(const UsCoreLocation_Position& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_longitude()) {
    longitude_ = new ::google::fhir::stu3::proto::Decimal(*from.longitude_);
  } else {
    longitude_ = NULL;
  }
  if (from.has_latitude()) {
    latitude_ = new ::google::fhir::stu3::proto::Decimal(*from.latitude_);
  } else {
    latitude_ = NULL;
  }
  if (from.has_altitude()) {
    altitude_ = new ::google::fhir::stu3::proto::Decimal(*from.altitude_);
  } else {
    altitude_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreLocation.Position)
}

void UsCoreLocation_Position::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&altitude_) -
      reinterpret_cast<char*>(&id_)) + sizeof(altitude_));
}

UsCoreLocation_Position::~UsCoreLocation_Position() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreLocation.Position)
  SharedDtor();
}

void UsCoreLocation_Position::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete longitude_;
  if (this != internal_default_instance()) delete latitude_;
  if (this != internal_default_instance()) delete altitude_;
}

void UsCoreLocation_Position::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreLocation_Position::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreLocation_Position& UsCoreLocation_Position::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreLocation_Position.base);
  return *internal_default_instance();
}


void UsCoreLocation_Position::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreLocation.Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && longitude_ != NULL) {
    delete longitude_;
  }
  longitude_ = NULL;
  if (GetArenaNoVirtual() == NULL && latitude_ != NULL) {
    delete latitude_;
  }
  latitude_ = NULL;
  if (GetArenaNoVirtual() == NULL && altitude_ != NULL) {
    delete altitude_;
  }
  altitude_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreLocation_Position::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreLocation.Position)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Decimal longitude = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_longitude()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Decimal latitude = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_latitude()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Decimal altitude = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_altitude()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreLocation.Position)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreLocation.Position)
  return false;
#undef DO_
}

void UsCoreLocation_Position::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreLocation.Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Decimal longitude = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_longitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_longitude(), output);
  }

  // .google.fhir.stu3.proto.Decimal latitude = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_latitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_latitude(), output);
  }

  // .google.fhir.stu3.proto.Decimal altitude = 6;
  if (this->has_altitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_altitude(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreLocation.Position)
}

::google::protobuf::uint8* UsCoreLocation_Position::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreLocation.Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Decimal longitude = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_longitude()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_longitude(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Decimal latitude = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_latitude()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_latitude(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Decimal altitude = 6;
  if (this->has_altitude()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_altitude(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreLocation.Position)
  return target;
}

size_t UsCoreLocation_Position::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreLocation.Position)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Decimal longitude = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_longitude()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *longitude_);
  }

  // .google.fhir.stu3.proto.Decimal latitude = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_latitude()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *latitude_);
  }

  // .google.fhir.stu3.proto.Decimal altitude = 6;
  if (this->has_altitude()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *altitude_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreLocation_Position::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreLocation.Position)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreLocation_Position* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreLocation_Position>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreLocation.Position)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreLocation.Position)
    MergeFrom(*source);
  }
}

void UsCoreLocation_Position::MergeFrom(const UsCoreLocation_Position& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreLocation.Position)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_longitude()) {
    mutable_longitude()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.longitude());
  }
  if (from.has_latitude()) {
    mutable_latitude()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.latitude());
  }
  if (from.has_altitude()) {
    mutable_altitude()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.altitude());
  }
}

void UsCoreLocation_Position::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreLocation.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreLocation_Position::CopyFrom(const UsCoreLocation_Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreLocation.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreLocation_Position::IsInitialized() const {
  return true;
}

void UsCoreLocation_Position::Swap(UsCoreLocation_Position* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreLocation_Position::InternalSwap(UsCoreLocation_Position* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  swap(id_, other->id_);
  swap(longitude_, other->longitude_);
  swap(latitude_, other->latitude_);
  swap(altitude_, other->altitude_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreLocation_Position::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreLocation::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreLocation_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::Id*>(
      ::google::fhir::stu3::proto::Id::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreLocation_default_instance_._instance.get_mutable()->meta_ = const_cast< ::google::fhir::stu3::proto::Meta*>(
      ::google::fhir::stu3::proto::Meta::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreLocation_default_instance_._instance.get_mutable()->implicit_rules_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreLocation_default_instance_._instance.get_mutable()->language_ = const_cast< ::google::fhir::stu3::proto::LanguageCode*>(
      ::google::fhir::stu3::proto::LanguageCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreLocation_default_instance_._instance.get_mutable()->text_ = const_cast< ::google::fhir::stu3::proto::Narrative*>(
      ::google::fhir::stu3::proto::Narrative::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreLocation_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::fhir::stu3::proto::LocationStatusCode*>(
      ::google::fhir::stu3::proto::LocationStatusCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreLocation_default_instance_._instance.get_mutable()->operational_status_ = const_cast< ::google::fhir::stu3::proto::Coding*>(
      ::google::fhir::stu3::proto::Coding::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreLocation_default_instance_._instance.get_mutable()->name_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreLocation_default_instance_._instance.get_mutable()->description_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreLocation_default_instance_._instance.get_mutable()->mode_ = const_cast< ::google::fhir::stu3::proto::LocationModeCode*>(
      ::google::fhir::stu3::proto::LocationModeCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreLocation_default_instance_._instance.get_mutable()->type_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreLocation_default_instance_._instance.get_mutable()->address_ = const_cast< ::google::fhir::stu3::proto::Address*>(
      ::google::fhir::stu3::proto::Address::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreLocation_default_instance_._instance.get_mutable()->physical_type_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreLocation_default_instance_._instance.get_mutable()->position_ = const_cast< ::google::fhir::stu3::uscore::UsCoreLocation_Position*>(
      ::google::fhir::stu3::uscore::UsCoreLocation_Position::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreLocation_default_instance_._instance.get_mutable()->managing_organization_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreLocation_default_instance_._instance.get_mutable()->part_of_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
}
void UsCoreLocation::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreLocation::clear_meta() {
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
}
void UsCoreLocation::clear_implicit_rules() {
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
}
void UsCoreLocation::clear_language() {
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
}
void UsCoreLocation::clear_text() {
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
}
void UsCoreLocation::clear_contained() {
  contained_.Clear();
}
void UsCoreLocation::clear_extension() {
  extension_.Clear();
}
void UsCoreLocation::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreLocation::clear_identifier() {
  identifier_.Clear();
}
void UsCoreLocation::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
void UsCoreLocation::clear_operational_status() {
  if (GetArenaNoVirtual() == NULL && operational_status_ != NULL) {
    delete operational_status_;
  }
  operational_status_ = NULL;
}
void UsCoreLocation::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void UsCoreLocation::clear_alias() {
  alias_.Clear();
}
void UsCoreLocation::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
}
void UsCoreLocation::clear_mode() {
  if (GetArenaNoVirtual() == NULL && mode_ != NULL) {
    delete mode_;
  }
  mode_ = NULL;
}
void UsCoreLocation::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
}
void UsCoreLocation::clear_telecom() {
  telecom_.Clear();
}
void UsCoreLocation::clear_address() {
  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
}
void UsCoreLocation::clear_physical_type() {
  if (GetArenaNoVirtual() == NULL && physical_type_ != NULL) {
    delete physical_type_;
  }
  physical_type_ = NULL;
}
void UsCoreLocation::clear_managing_organization() {
  if (GetArenaNoVirtual() == NULL && managing_organization_ != NULL) {
    delete managing_organization_;
  }
  managing_organization_ = NULL;
}
void UsCoreLocation::clear_part_of() {
  if (GetArenaNoVirtual() == NULL && part_of_ != NULL) {
    delete part_of_;
  }
  part_of_ = NULL;
}
void UsCoreLocation::clear_endpoint() {
  endpoint_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreLocation::kIdFieldNumber;
const int UsCoreLocation::kMetaFieldNumber;
const int UsCoreLocation::kImplicitRulesFieldNumber;
const int UsCoreLocation::kLanguageFieldNumber;
const int UsCoreLocation::kTextFieldNumber;
const int UsCoreLocation::kContainedFieldNumber;
const int UsCoreLocation::kExtensionFieldNumber;
const int UsCoreLocation::kModifierExtensionFieldNumber;
const int UsCoreLocation::kIdentifierFieldNumber;
const int UsCoreLocation::kStatusFieldNumber;
const int UsCoreLocation::kOperationalStatusFieldNumber;
const int UsCoreLocation::kNameFieldNumber;
const int UsCoreLocation::kAliasFieldNumber;
const int UsCoreLocation::kDescriptionFieldNumber;
const int UsCoreLocation::kModeFieldNumber;
const int UsCoreLocation::kTypeFieldNumber;
const int UsCoreLocation::kTelecomFieldNumber;
const int UsCoreLocation::kAddressFieldNumber;
const int UsCoreLocation::kPhysicalTypeFieldNumber;
const int UsCoreLocation::kPositionFieldNumber;
const int UsCoreLocation::kManagingOrganizationFieldNumber;
const int UsCoreLocation::kPartOfFieldNumber;
const int UsCoreLocation::kEndpointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreLocation::UsCoreLocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreLocation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreLocation)
}
UsCoreLocation::UsCoreLocation(const UsCoreLocation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      contained_(from.contained_),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      identifier_(from.identifier_),
      alias_(from.alias_),
      telecom_(from.telecom_),
      endpoint_(from.endpoint_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::Id(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_meta()) {
    meta_ = new ::google::fhir::stu3::proto::Meta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  if (from.has_implicit_rules()) {
    implicit_rules_ = new ::google::fhir::stu3::proto::Uri(*from.implicit_rules_);
  } else {
    implicit_rules_ = NULL;
  }
  if (from.has_language()) {
    language_ = new ::google::fhir::stu3::proto::LanguageCode(*from.language_);
  } else {
    language_ = NULL;
  }
  if (from.has_text()) {
    text_ = new ::google::fhir::stu3::proto::Narrative(*from.text_);
  } else {
    text_ = NULL;
  }
  if (from.has_status()) {
    status_ = new ::google::fhir::stu3::proto::LocationStatusCode(*from.status_);
  } else {
    status_ = NULL;
  }
  if (from.has_operational_status()) {
    operational_status_ = new ::google::fhir::stu3::proto::Coding(*from.operational_status_);
  } else {
    operational_status_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::google::fhir::stu3::proto::String(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_description()) {
    description_ = new ::google::fhir::stu3::proto::String(*from.description_);
  } else {
    description_ = NULL;
  }
  if (from.has_mode()) {
    mode_ = new ::google::fhir::stu3::proto::LocationModeCode(*from.mode_);
  } else {
    mode_ = NULL;
  }
  if (from.has_type()) {
    type_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.type_);
  } else {
    type_ = NULL;
  }
  if (from.has_address()) {
    address_ = new ::google::fhir::stu3::proto::Address(*from.address_);
  } else {
    address_ = NULL;
  }
  if (from.has_physical_type()) {
    physical_type_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.physical_type_);
  } else {
    physical_type_ = NULL;
  }
  if (from.has_position()) {
    position_ = new ::google::fhir::stu3::uscore::UsCoreLocation_Position(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_managing_organization()) {
    managing_organization_ = new ::google::fhir::stu3::proto::Reference(*from.managing_organization_);
  } else {
    managing_organization_ = NULL;
  }
  if (from.has_part_of()) {
    part_of_ = new ::google::fhir::stu3::proto::Reference(*from.part_of_);
  } else {
    part_of_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreLocation)
}

void UsCoreLocation::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&part_of_) -
      reinterpret_cast<char*>(&id_)) + sizeof(part_of_));
}

UsCoreLocation::~UsCoreLocation() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreLocation)
  SharedDtor();
}

void UsCoreLocation::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete implicit_rules_;
  if (this != internal_default_instance()) delete language_;
  if (this != internal_default_instance()) delete text_;
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete operational_status_;
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete description_;
  if (this != internal_default_instance()) delete mode_;
  if (this != internal_default_instance()) delete type_;
  if (this != internal_default_instance()) delete address_;
  if (this != internal_default_instance()) delete physical_type_;
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete managing_organization_;
  if (this != internal_default_instance()) delete part_of_;
}

void UsCoreLocation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreLocation::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreLocation& UsCoreLocation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreLocation.base);
  return *internal_default_instance();
}


void UsCoreLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contained_.Clear();
  extension_.Clear();
  modifier_extension_.Clear();
  identifier_.Clear();
  alias_.Clear();
  telecom_.Clear();
  endpoint_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  if (GetArenaNoVirtual() == NULL && operational_status_ != NULL) {
    delete operational_status_;
  }
  operational_status_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
  if (GetArenaNoVirtual() == NULL && mode_ != NULL) {
    delete mode_;
  }
  mode_ = NULL;
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
  if (GetArenaNoVirtual() == NULL && physical_type_ != NULL) {
    delete physical_type_;
  }
  physical_type_ = NULL;
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  if (GetArenaNoVirtual() == NULL && managing_organization_ != NULL) {
    delete managing_organization_;
  }
  managing_organization_ = NULL;
  if (GetArenaNoVirtual() == NULL && part_of_ != NULL) {
    delete part_of_;
  }
  part_of_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreLocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreLocation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Id id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Meta meta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri implicit_rules = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_implicit_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.LanguageCode language = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_language()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Narrative text = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_contained()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.LocationStatusCode status = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Coding operational_status = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_operational_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String name = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.String alias = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_alias()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String description = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.LocationModeCode mode = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept type = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ContactPoint telecom = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_telecom()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Address address = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept physical_type = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_physical_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreLocation.Position position = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference managing_organization = 21 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-organization"];
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_managing_organization()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference part_of = 22 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Location"];
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_part_of()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference endpoint = 23 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Endpoint"];
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_endpoint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreLocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreLocation)
  return false;
#undef DO_
}

void UsCoreLocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_meta(), output);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_implicit_rules(), output);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_language(), output);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_text(), output);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->contained(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->identifier(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.LocationStatusCode status = 10;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_status(), output);
  }

  // .google.fhir.stu3.proto.Coding operational_status = 11;
  if (this->has_operational_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_operational_status(), output);
  }

  // .google.fhir.stu3.proto.String name = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_name(), output);
  }

  // repeated .google.fhir.stu3.proto.String alias = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alias_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13,
      this->alias(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.String description = 14;
  if (this->has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_description(), output);
  }

  // .google.fhir.stu3.proto.LocationModeCode mode = 15;
  if (this->has_mode()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_mode(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept type = 16;
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_type(), output);
  }

  // repeated .google.fhir.stu3.proto.ContactPoint telecom = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->telecom_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17,
      this->telecom(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Address address = 18;
  if (this->has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_address(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept physical_type = 19;
  if (this->has_physical_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_physical_type(), output);
  }

  // .google.fhir.stu3.uscore.UsCoreLocation.Position position = 20;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_position(), output);
  }

  // .google.fhir.stu3.proto.Reference managing_organization = 21 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-organization"];
  if (this->has_managing_organization()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_managing_organization(), output);
  }

  // .google.fhir.stu3.proto.Reference part_of = 22 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Location"];
  if (this->has_part_of()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->_internal_part_of(), output);
  }

  // repeated .google.fhir.stu3.proto.Reference endpoint = 23 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Endpoint"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->endpoint_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23,
      this->endpoint(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreLocation)
}

::google::protobuf::uint8* UsCoreLocation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_meta(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_implicit_rules(), deterministic, target);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_language(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_text(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->contained(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->identifier(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.LocationStatusCode status = 10;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_status(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Coding operational_status = 11;
  if (this->has_operational_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_operational_status(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String name = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_name(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.String alias = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alias_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->alias(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.String description = 14;
  if (this->has_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_description(), deterministic, target);
  }

  // .google.fhir.stu3.proto.LocationModeCode mode = 15;
  if (this->has_mode()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_mode(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept type = 16;
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_type(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ContactPoint telecom = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->telecom_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->telecom(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Address address = 18;
  if (this->has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_address(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept physical_type = 19;
  if (this->has_physical_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_physical_type(), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreLocation.Position position = 20;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_position(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference managing_organization = 21 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-organization"];
  if (this->has_managing_organization()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_managing_organization(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference part_of = 22 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Location"];
  if (this->has_part_of()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->_internal_part_of(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference endpoint = 23 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Endpoint"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->endpoint_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->endpoint(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreLocation)
  return target;
}

size_t UsCoreLocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreLocation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->contained_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->contained(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->identifier_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->identifier(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.String alias = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->alias_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->alias(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.ContactPoint telecom = 17;
  {
    unsigned int count = static_cast<unsigned int>(this->telecom_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->telecom(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference endpoint = 23 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Endpoint"];
  {
    unsigned int count = static_cast<unsigned int>(this->endpoint_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->endpoint(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *implicit_rules_);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *language_);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *text_);
  }

  // .google.fhir.stu3.proto.LocationStatusCode status = 10;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .google.fhir.stu3.proto.Coding operational_status = 11;
  if (this->has_operational_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *operational_status_);
  }

  // .google.fhir.stu3.proto.String name = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *name_);
  }

  // .google.fhir.stu3.proto.String description = 14;
  if (this->has_description()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *description_);
  }

  // .google.fhir.stu3.proto.LocationModeCode mode = 15;
  if (this->has_mode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mode_);
  }

  // .google.fhir.stu3.proto.CodeableConcept type = 16;
  if (this->has_type()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  // .google.fhir.stu3.proto.Address address = 18;
  if (this->has_address()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *address_);
  }

  // .google.fhir.stu3.proto.CodeableConcept physical_type = 19;
  if (this->has_physical_type()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *physical_type_);
  }

  // .google.fhir.stu3.uscore.UsCoreLocation.Position position = 20;
  if (this->has_position()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .google.fhir.stu3.proto.Reference managing_organization = 21 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-organization"];
  if (this->has_managing_organization()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *managing_organization_);
  }

  // .google.fhir.stu3.proto.Reference part_of = 22 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Location"];
  if (this->has_part_of()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *part_of_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreLocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreLocation)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreLocation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreLocation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreLocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreLocation)
    MergeFrom(*source);
  }
}

void UsCoreLocation::MergeFrom(const UsCoreLocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreLocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contained_.MergeFrom(from.contained_);
  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  identifier_.MergeFrom(from.identifier_);
  alias_.MergeFrom(from.alias_);
  telecom_.MergeFrom(from.telecom_);
  endpoint_.MergeFrom(from.endpoint_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::Id::MergeFrom(from.id());
  }
  if (from.has_meta()) {
    mutable_meta()->::google::fhir::stu3::proto::Meta::MergeFrom(from.meta());
  }
  if (from.has_implicit_rules()) {
    mutable_implicit_rules()->::google::fhir::stu3::proto::Uri::MergeFrom(from.implicit_rules());
  }
  if (from.has_language()) {
    mutable_language()->::google::fhir::stu3::proto::LanguageCode::MergeFrom(from.language());
  }
  if (from.has_text()) {
    mutable_text()->::google::fhir::stu3::proto::Narrative::MergeFrom(from.text());
  }
  if (from.has_status()) {
    mutable_status()->::google::fhir::stu3::proto::LocationStatusCode::MergeFrom(from.status());
  }
  if (from.has_operational_status()) {
    mutable_operational_status()->::google::fhir::stu3::proto::Coding::MergeFrom(from.operational_status());
  }
  if (from.has_name()) {
    mutable_name()->::google::fhir::stu3::proto::String::MergeFrom(from.name());
  }
  if (from.has_description()) {
    mutable_description()->::google::fhir::stu3::proto::String::MergeFrom(from.description());
  }
  if (from.has_mode()) {
    mutable_mode()->::google::fhir::stu3::proto::LocationModeCode::MergeFrom(from.mode());
  }
  if (from.has_type()) {
    mutable_type()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.type());
  }
  if (from.has_address()) {
    mutable_address()->::google::fhir::stu3::proto::Address::MergeFrom(from.address());
  }
  if (from.has_physical_type()) {
    mutable_physical_type()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.physical_type());
  }
  if (from.has_position()) {
    mutable_position()->::google::fhir::stu3::uscore::UsCoreLocation_Position::MergeFrom(from.position());
  }
  if (from.has_managing_organization()) {
    mutable_managing_organization()->::google::fhir::stu3::proto::Reference::MergeFrom(from.managing_organization());
  }
  if (from.has_part_of()) {
    mutable_part_of()->::google::fhir::stu3::proto::Reference::MergeFrom(from.part_of());
  }
}

void UsCoreLocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreLocation::CopyFrom(const UsCoreLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreLocation::IsInitialized() const {
  return true;
}

void UsCoreLocation::Swap(UsCoreLocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreLocation::InternalSwap(UsCoreLocation* other) {
  using std::swap;
  CastToBase(&contained_)->InternalSwap(CastToBase(&other->contained_));
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&identifier_)->InternalSwap(CastToBase(&other->identifier_));
  CastToBase(&alias_)->InternalSwap(CastToBase(&other->alias_));
  CastToBase(&telecom_)->InternalSwap(CastToBase(&other->telecom_));
  CastToBase(&endpoint_)->InternalSwap(CastToBase(&other->endpoint_));
  swap(id_, other->id_);
  swap(meta_, other->meta_);
  swap(implicit_rules_, other->implicit_rules_);
  swap(language_, other->language_);
  swap(text_, other->text_);
  swap(status_, other->status_);
  swap(operational_status_, other->operational_status_);
  swap(name_, other->name_);
  swap(description_, other->description_);
  swap(mode_, other->mode_);
  swap(type_, other->type_);
  swap(address_, other->address_);
  swap(physical_type_, other->physical_type_);
  swap(position_, other->position_);
  swap(managing_organization_, other->managing_organization_);
  swap(part_of_, other->part_of_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreLocation::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreMedication_Ingredient_Item::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreMedication_Ingredient_Item_default_instance_.codeable_concept_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedication_Ingredient_Item_default_instance_.reference_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
}
void UsCoreMedication_Ingredient_Item::set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_item();
  if (codeable_concept) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      codeable_concept = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, codeable_concept, submessage_arena);
    }
    set_has_codeable_concept();
    item_.codeable_concept_ = codeable_concept;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item.codeable_concept)
}
void UsCoreMedication_Ingredient_Item::clear_codeable_concept() {
  if (has_codeable_concept()) {
    delete item_.codeable_concept_;
    clear_has_item();
  }
}
void UsCoreMedication_Ingredient_Item::set_allocated_reference(::google::fhir::stu3::proto::Reference* reference) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_item();
  if (reference) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reference = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reference, submessage_arena);
    }
    set_has_reference();
    item_.reference_ = reference;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item.reference)
}
void UsCoreMedication_Ingredient_Item::clear_reference() {
  if (has_reference()) {
    delete item_.reference_;
    clear_has_item();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreMedication_Ingredient_Item::kCodeableConceptFieldNumber;
const int UsCoreMedication_Ingredient_Item::kReferenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreMedication_Ingredient_Item::UsCoreMedication_Ingredient_Item()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedication_Ingredient_Item.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item)
}
UsCoreMedication_Ingredient_Item::UsCoreMedication_Ingredient_Item(const UsCoreMedication_Ingredient_Item& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_item();
  switch (from.item_case()) {
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item)
}

void UsCoreMedication_Ingredient_Item::SharedCtor() {
  clear_has_item();
}

UsCoreMedication_Ingredient_Item::~UsCoreMedication_Ingredient_Item() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item)
  SharedDtor();
}

void UsCoreMedication_Ingredient_Item::SharedDtor() {
  if (has_item()) {
    clear_item();
  }
}

void UsCoreMedication_Ingredient_Item::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreMedication_Ingredient_Item::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreMedication_Ingredient_Item& UsCoreMedication_Ingredient_Item::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedication_Ingredient_Item.base);
  return *internal_default_instance();
}


void UsCoreMedication_Ingredient_Item::clear_item() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item)
  switch (item_case()) {
    case kCodeableConcept: {
      delete item_.codeable_concept_;
      break;
    }
    case kReference: {
      delete item_.reference_;
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ITEM_NOT_SET;
}


void UsCoreMedication_Ingredient_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_item();
  _internal_metadata_.Clear();
}

bool UsCoreMedication_Ingredient_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_codeable_concept()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Substance", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item)
  return false;
#undef DO_
}

void UsCoreMedication_Ingredient_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
  if (has_codeable_concept()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_codeable_concept(), output);
  }

  // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Substance", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication"];
  if (has_reference()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_reference(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item)
}

::google::protobuf::uint8* UsCoreMedication_Ingredient_Item::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
  if (has_codeable_concept()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_codeable_concept(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Substance", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication"];
  if (has_reference()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_reference(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item)
  return target;
}

size_t UsCoreMedication_Ingredient_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (item_case()) {
    // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
    case kCodeableConcept: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *item_.codeable_concept_);
      break;
    }
    // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Substance", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication"];
    case kReference: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *item_.reference_);
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreMedication_Ingredient_Item::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreMedication_Ingredient_Item* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreMedication_Ingredient_Item>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item)
    MergeFrom(*source);
  }
}

void UsCoreMedication_Ingredient_Item::MergeFrom(const UsCoreMedication_Ingredient_Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.item_case()) {
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
}

void UsCoreMedication_Ingredient_Item::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreMedication_Ingredient_Item::CopyFrom(const UsCoreMedication_Ingredient_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreMedication_Ingredient_Item::IsInitialized() const {
  return true;
}

void UsCoreMedication_Ingredient_Item::Swap(UsCoreMedication_Ingredient_Item* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreMedication_Ingredient_Item::InternalSwap(UsCoreMedication_Ingredient_Item* other) {
  using std::swap;
  swap(item_, other->item_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreMedication_Ingredient_Item::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreMedication_Ingredient::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreMedication_Ingredient_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedication_Ingredient_default_instance_._instance.get_mutable()->item_ = const_cast< ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_Item*>(
      ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_Item::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedication_Ingredient_default_instance_._instance.get_mutable()->is_active_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedication_Ingredient_default_instance_._instance.get_mutable()->amount_ = const_cast< ::google::fhir::stu3::proto::Ratio*>(
      ::google::fhir::stu3::proto::Ratio::internal_default_instance());
}
void UsCoreMedication_Ingredient::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreMedication_Ingredient::clear_extension() {
  extension_.Clear();
}
void UsCoreMedication_Ingredient::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreMedication_Ingredient::clear_is_active() {
  if (GetArenaNoVirtual() == NULL && is_active_ != NULL) {
    delete is_active_;
  }
  is_active_ = NULL;
}
void UsCoreMedication_Ingredient::clear_amount() {
  if (GetArenaNoVirtual() == NULL && amount_ != NULL) {
    delete amount_;
  }
  amount_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreMedication_Ingredient::kIdFieldNumber;
const int UsCoreMedication_Ingredient::kExtensionFieldNumber;
const int UsCoreMedication_Ingredient::kModifierExtensionFieldNumber;
const int UsCoreMedication_Ingredient::kItemFieldNumber;
const int UsCoreMedication_Ingredient::kIsActiveFieldNumber;
const int UsCoreMedication_Ingredient::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreMedication_Ingredient::UsCoreMedication_Ingredient()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedication_Ingredient.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreMedication.Ingredient)
}
UsCoreMedication_Ingredient::UsCoreMedication_Ingredient(const UsCoreMedication_Ingredient& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_item()) {
    item_ = new ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_Item(*from.item_);
  } else {
    item_ = NULL;
  }
  if (from.has_is_active()) {
    is_active_ = new ::google::fhir::stu3::proto::Boolean(*from.is_active_);
  } else {
    is_active_ = NULL;
  }
  if (from.has_amount()) {
    amount_ = new ::google::fhir::stu3::proto::Ratio(*from.amount_);
  } else {
    amount_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreMedication.Ingredient)
}

void UsCoreMedication_Ingredient::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&amount_) -
      reinterpret_cast<char*>(&id_)) + sizeof(amount_));
}

UsCoreMedication_Ingredient::~UsCoreMedication_Ingredient() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreMedication.Ingredient)
  SharedDtor();
}

void UsCoreMedication_Ingredient::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete item_;
  if (this != internal_default_instance()) delete is_active_;
  if (this != internal_default_instance()) delete amount_;
}

void UsCoreMedication_Ingredient::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreMedication_Ingredient::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreMedication_Ingredient& UsCoreMedication_Ingredient::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedication_Ingredient.base);
  return *internal_default_instance();
}


void UsCoreMedication_Ingredient::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreMedication.Ingredient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && item_ != NULL) {
    delete item_;
  }
  item_ = NULL;
  if (GetArenaNoVirtual() == NULL && is_active_ != NULL) {
    delete is_active_;
  }
  is_active_ = NULL;
  if (GetArenaNoVirtual() == NULL && amount_ != NULL) {
    delete amount_;
  }
  amount_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreMedication_Ingredient::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreMedication.Ingredient)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item item = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Boolean is_active = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_is_active()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Ratio amount = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_amount()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreMedication.Ingredient)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreMedication.Ingredient)
  return false;
#undef DO_
}

void UsCoreMedication_Ingredient::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreMedication.Ingredient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item item = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_item(), output);
  }

  // .google.fhir.stu3.proto.Boolean is_active = 5;
  if (this->has_is_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_is_active(), output);
  }

  // .google.fhir.stu3.proto.Ratio amount = 6;
  if (this->has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_amount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreMedication.Ingredient)
}

::google::protobuf::uint8* UsCoreMedication_Ingredient::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreMedication.Ingredient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item item = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_item(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Boolean is_active = 5;
  if (this->has_is_active()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_is_active(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Ratio amount = 6;
  if (this->has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_amount(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreMedication.Ingredient)
  return target;
}

size_t UsCoreMedication_Ingredient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreMedication.Ingredient)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item item = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_item()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *item_);
  }

  // .google.fhir.stu3.proto.Boolean is_active = 5;
  if (this->has_is_active()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *is_active_);
  }

  // .google.fhir.stu3.proto.Ratio amount = 6;
  if (this->has_amount()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *amount_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreMedication_Ingredient::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreMedication.Ingredient)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreMedication_Ingredient* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreMedication_Ingredient>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreMedication.Ingredient)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreMedication.Ingredient)
    MergeFrom(*source);
  }
}

void UsCoreMedication_Ingredient::MergeFrom(const UsCoreMedication_Ingredient& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreMedication.Ingredient)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_item()) {
    mutable_item()->::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_Item::MergeFrom(from.item());
  }
  if (from.has_is_active()) {
    mutable_is_active()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.is_active());
  }
  if (from.has_amount()) {
    mutable_amount()->::google::fhir::stu3::proto::Ratio::MergeFrom(from.amount());
  }
}

void UsCoreMedication_Ingredient::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreMedication.Ingredient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreMedication_Ingredient::CopyFrom(const UsCoreMedication_Ingredient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreMedication.Ingredient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreMedication_Ingredient::IsInitialized() const {
  return true;
}

void UsCoreMedication_Ingredient::Swap(UsCoreMedication_Ingredient* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreMedication_Ingredient::InternalSwap(UsCoreMedication_Ingredient* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  swap(id_, other->id_);
  swap(item_, other->item_);
  swap(is_active_, other->is_active_);
  swap(amount_, other->amount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreMedication_Ingredient::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreMedication_Package_Content_Item::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreMedication_Package_Content_Item_default_instance_.codeable_concept_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedication_Package_Content_Item_default_instance_.reference_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
}
void UsCoreMedication_Package_Content_Item::set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_item();
  if (codeable_concept) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      codeable_concept = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, codeable_concept, submessage_arena);
    }
    set_has_codeable_concept();
    item_.codeable_concept_ = codeable_concept;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item.codeable_concept)
}
void UsCoreMedication_Package_Content_Item::clear_codeable_concept() {
  if (has_codeable_concept()) {
    delete item_.codeable_concept_;
    clear_has_item();
  }
}
void UsCoreMedication_Package_Content_Item::set_allocated_reference(::google::fhir::stu3::proto::Reference* reference) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_item();
  if (reference) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reference = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reference, submessage_arena);
    }
    set_has_reference();
    item_.reference_ = reference;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item.reference)
}
void UsCoreMedication_Package_Content_Item::clear_reference() {
  if (has_reference()) {
    delete item_.reference_;
    clear_has_item();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreMedication_Package_Content_Item::kCodeableConceptFieldNumber;
const int UsCoreMedication_Package_Content_Item::kReferenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreMedication_Package_Content_Item::UsCoreMedication_Package_Content_Item()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedication_Package_Content_Item.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item)
}
UsCoreMedication_Package_Content_Item::UsCoreMedication_Package_Content_Item(const UsCoreMedication_Package_Content_Item& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_item();
  switch (from.item_case()) {
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item)
}

void UsCoreMedication_Package_Content_Item::SharedCtor() {
  clear_has_item();
}

UsCoreMedication_Package_Content_Item::~UsCoreMedication_Package_Content_Item() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item)
  SharedDtor();
}

void UsCoreMedication_Package_Content_Item::SharedDtor() {
  if (has_item()) {
    clear_item();
  }
}

void UsCoreMedication_Package_Content_Item::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreMedication_Package_Content_Item::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreMedication_Package_Content_Item& UsCoreMedication_Package_Content_Item::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedication_Package_Content_Item.base);
  return *internal_default_instance();
}


void UsCoreMedication_Package_Content_Item::clear_item() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item)
  switch (item_case()) {
    case kCodeableConcept: {
      delete item_.codeable_concept_;
      break;
    }
    case kReference: {
      delete item_.reference_;
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ITEM_NOT_SET;
}


void UsCoreMedication_Package_Content_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_item();
  _internal_metadata_.Clear();
}

bool UsCoreMedication_Package_Content_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_codeable_concept()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item)
  return false;
#undef DO_
}

void UsCoreMedication_Package_Content_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
  if (has_codeable_concept()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_codeable_concept(), output);
  }

  // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication"];
  if (has_reference()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_reference(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item)
}

::google::protobuf::uint8* UsCoreMedication_Package_Content_Item::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
  if (has_codeable_concept()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_codeable_concept(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication"];
  if (has_reference()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_reference(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item)
  return target;
}

size_t UsCoreMedication_Package_Content_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (item_case()) {
    // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
    case kCodeableConcept: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *item_.codeable_concept_);
      break;
    }
    // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication"];
    case kReference: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *item_.reference_);
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreMedication_Package_Content_Item::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreMedication_Package_Content_Item* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreMedication_Package_Content_Item>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item)
    MergeFrom(*source);
  }
}

void UsCoreMedication_Package_Content_Item::MergeFrom(const UsCoreMedication_Package_Content_Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.item_case()) {
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
}

void UsCoreMedication_Package_Content_Item::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreMedication_Package_Content_Item::CopyFrom(const UsCoreMedication_Package_Content_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreMedication_Package_Content_Item::IsInitialized() const {
  return true;
}

void UsCoreMedication_Package_Content_Item::Swap(UsCoreMedication_Package_Content_Item* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreMedication_Package_Content_Item::InternalSwap(UsCoreMedication_Package_Content_Item* other) {
  using std::swap;
  swap(item_, other->item_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreMedication_Package_Content_Item::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreMedication_Package_Content::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreMedication_Package_Content_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedication_Package_Content_default_instance_._instance.get_mutable()->item_ = const_cast< ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_Item*>(
      ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_Item::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedication_Package_Content_default_instance_._instance.get_mutable()->amount_ = const_cast< ::google::fhir::stu3::proto::SimpleQuantity*>(
      ::google::fhir::stu3::proto::SimpleQuantity::internal_default_instance());
}
void UsCoreMedication_Package_Content::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreMedication_Package_Content::clear_extension() {
  extension_.Clear();
}
void UsCoreMedication_Package_Content::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreMedication_Package_Content::clear_amount() {
  if (GetArenaNoVirtual() == NULL && amount_ != NULL) {
    delete amount_;
  }
  amount_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreMedication_Package_Content::kIdFieldNumber;
const int UsCoreMedication_Package_Content::kExtensionFieldNumber;
const int UsCoreMedication_Package_Content::kModifierExtensionFieldNumber;
const int UsCoreMedication_Package_Content::kItemFieldNumber;
const int UsCoreMedication_Package_Content::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreMedication_Package_Content::UsCoreMedication_Package_Content()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedication_Package_Content.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreMedication.Package.Content)
}
UsCoreMedication_Package_Content::UsCoreMedication_Package_Content(const UsCoreMedication_Package_Content& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_item()) {
    item_ = new ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_Item(*from.item_);
  } else {
    item_ = NULL;
  }
  if (from.has_amount()) {
    amount_ = new ::google::fhir::stu3::proto::SimpleQuantity(*from.amount_);
  } else {
    amount_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreMedication.Package.Content)
}

void UsCoreMedication_Package_Content::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&amount_) -
      reinterpret_cast<char*>(&id_)) + sizeof(amount_));
}

UsCoreMedication_Package_Content::~UsCoreMedication_Package_Content() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreMedication.Package.Content)
  SharedDtor();
}

void UsCoreMedication_Package_Content::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete item_;
  if (this != internal_default_instance()) delete amount_;
}

void UsCoreMedication_Package_Content::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreMedication_Package_Content::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreMedication_Package_Content& UsCoreMedication_Package_Content::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedication_Package_Content.base);
  return *internal_default_instance();
}


void UsCoreMedication_Package_Content::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreMedication.Package.Content)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && item_ != NULL) {
    delete item_;
  }
  item_ = NULL;
  if (GetArenaNoVirtual() == NULL && amount_ != NULL) {
    delete amount_;
  }
  amount_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreMedication_Package_Content::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreMedication.Package.Content)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item item = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.SimpleQuantity amount = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_amount()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreMedication.Package.Content)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreMedication.Package.Content)
  return false;
#undef DO_
}

void UsCoreMedication_Package_Content::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreMedication.Package.Content)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item item = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_item(), output);
  }

  // .google.fhir.stu3.proto.SimpleQuantity amount = 5;
  if (this->has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_amount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreMedication.Package.Content)
}

::google::protobuf::uint8* UsCoreMedication_Package_Content::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreMedication.Package.Content)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item item = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_item(), deterministic, target);
  }

  // .google.fhir.stu3.proto.SimpleQuantity amount = 5;
  if (this->has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_amount(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreMedication.Package.Content)
  return target;
}

size_t UsCoreMedication_Package_Content::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreMedication.Package.Content)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item item = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_item()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *item_);
  }

  // .google.fhir.stu3.proto.SimpleQuantity amount = 5;
  if (this->has_amount()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *amount_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreMedication_Package_Content::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreMedication.Package.Content)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreMedication_Package_Content* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreMedication_Package_Content>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreMedication.Package.Content)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreMedication.Package.Content)
    MergeFrom(*source);
  }
}

void UsCoreMedication_Package_Content::MergeFrom(const UsCoreMedication_Package_Content& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreMedication.Package.Content)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_item()) {
    mutable_item()->::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_Item::MergeFrom(from.item());
  }
  if (from.has_amount()) {
    mutable_amount()->::google::fhir::stu3::proto::SimpleQuantity::MergeFrom(from.amount());
  }
}

void UsCoreMedication_Package_Content::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreMedication.Package.Content)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreMedication_Package_Content::CopyFrom(const UsCoreMedication_Package_Content& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreMedication.Package.Content)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreMedication_Package_Content::IsInitialized() const {
  return true;
}

void UsCoreMedication_Package_Content::Swap(UsCoreMedication_Package_Content* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreMedication_Package_Content::InternalSwap(UsCoreMedication_Package_Content* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  swap(id_, other->id_);
  swap(item_, other->item_);
  swap(amount_, other->amount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreMedication_Package_Content::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreMedication_Package_Batch::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreMedication_Package_Batch_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedication_Package_Batch_default_instance_._instance.get_mutable()->lot_number_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedication_Package_Batch_default_instance_._instance.get_mutable()->expiration_date_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
}
void UsCoreMedication_Package_Batch::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreMedication_Package_Batch::clear_extension() {
  extension_.Clear();
}
void UsCoreMedication_Package_Batch::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreMedication_Package_Batch::clear_lot_number() {
  if (GetArenaNoVirtual() == NULL && lot_number_ != NULL) {
    delete lot_number_;
  }
  lot_number_ = NULL;
}
void UsCoreMedication_Package_Batch::clear_expiration_date() {
  if (GetArenaNoVirtual() == NULL && expiration_date_ != NULL) {
    delete expiration_date_;
  }
  expiration_date_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreMedication_Package_Batch::kIdFieldNumber;
const int UsCoreMedication_Package_Batch::kExtensionFieldNumber;
const int UsCoreMedication_Package_Batch::kModifierExtensionFieldNumber;
const int UsCoreMedication_Package_Batch::kLotNumberFieldNumber;
const int UsCoreMedication_Package_Batch::kExpirationDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreMedication_Package_Batch::UsCoreMedication_Package_Batch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedication_Package_Batch.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch)
}
UsCoreMedication_Package_Batch::UsCoreMedication_Package_Batch(const UsCoreMedication_Package_Batch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_lot_number()) {
    lot_number_ = new ::google::fhir::stu3::proto::String(*from.lot_number_);
  } else {
    lot_number_ = NULL;
  }
  if (from.has_expiration_date()) {
    expiration_date_ = new ::google::fhir::stu3::proto::DateTime(*from.expiration_date_);
  } else {
    expiration_date_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch)
}

void UsCoreMedication_Package_Batch::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expiration_date_) -
      reinterpret_cast<char*>(&id_)) + sizeof(expiration_date_));
}

UsCoreMedication_Package_Batch::~UsCoreMedication_Package_Batch() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch)
  SharedDtor();
}

void UsCoreMedication_Package_Batch::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete lot_number_;
  if (this != internal_default_instance()) delete expiration_date_;
}

void UsCoreMedication_Package_Batch::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreMedication_Package_Batch::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreMedication_Package_Batch& UsCoreMedication_Package_Batch::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedication_Package_Batch.base);
  return *internal_default_instance();
}


void UsCoreMedication_Package_Batch::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && lot_number_ != NULL) {
    delete lot_number_;
  }
  lot_number_ = NULL;
  if (GetArenaNoVirtual() == NULL && expiration_date_ != NULL) {
    delete expiration_date_;
  }
  expiration_date_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreMedication_Package_Batch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String lot_number = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lot_number()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DateTime expiration_date = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expiration_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch)
  return false;
#undef DO_
}

void UsCoreMedication_Package_Batch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.String lot_number = 4;
  if (this->has_lot_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_lot_number(), output);
  }

  // .google.fhir.stu3.proto.DateTime expiration_date = 5;
  if (this->has_expiration_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_expiration_date(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch)
}

::google::protobuf::uint8* UsCoreMedication_Package_Batch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.String lot_number = 4;
  if (this->has_lot_number()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_lot_number(), deterministic, target);
  }

  // .google.fhir.stu3.proto.DateTime expiration_date = 5;
  if (this->has_expiration_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_expiration_date(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch)
  return target;
}

size_t UsCoreMedication_Package_Batch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.String lot_number = 4;
  if (this->has_lot_number()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *lot_number_);
  }

  // .google.fhir.stu3.proto.DateTime expiration_date = 5;
  if (this->has_expiration_date()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expiration_date_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreMedication_Package_Batch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreMedication_Package_Batch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreMedication_Package_Batch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch)
    MergeFrom(*source);
  }
}

void UsCoreMedication_Package_Batch::MergeFrom(const UsCoreMedication_Package_Batch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_lot_number()) {
    mutable_lot_number()->::google::fhir::stu3::proto::String::MergeFrom(from.lot_number());
  }
  if (from.has_expiration_date()) {
    mutable_expiration_date()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.expiration_date());
  }
}

void UsCoreMedication_Package_Batch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreMedication_Package_Batch::CopyFrom(const UsCoreMedication_Package_Batch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreMedication_Package_Batch::IsInitialized() const {
  return true;
}

void UsCoreMedication_Package_Batch::Swap(UsCoreMedication_Package_Batch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreMedication_Package_Batch::InternalSwap(UsCoreMedication_Package_Batch* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  swap(id_, other->id_);
  swap(lot_number_, other->lot_number_);
  swap(expiration_date_, other->expiration_date_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreMedication_Package_Batch::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreMedication_Package::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreMedication_Package_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedication_Package_default_instance_._instance.get_mutable()->container_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
}
void UsCoreMedication_Package::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreMedication_Package::clear_extension() {
  extension_.Clear();
}
void UsCoreMedication_Package::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreMedication_Package::clear_container() {
  if (GetArenaNoVirtual() == NULL && container_ != NULL) {
    delete container_;
  }
  container_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreMedication_Package::kIdFieldNumber;
const int UsCoreMedication_Package::kExtensionFieldNumber;
const int UsCoreMedication_Package::kModifierExtensionFieldNumber;
const int UsCoreMedication_Package::kContainerFieldNumber;
const int UsCoreMedication_Package::kContentFieldNumber;
const int UsCoreMedication_Package::kBatchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreMedication_Package::UsCoreMedication_Package()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedication_Package.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreMedication.Package)
}
UsCoreMedication_Package::UsCoreMedication_Package(const UsCoreMedication_Package& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      content_(from.content_),
      batch_(from.batch_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_container()) {
    container_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.container_);
  } else {
    container_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreMedication.Package)
}

void UsCoreMedication_Package::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&container_) -
      reinterpret_cast<char*>(&id_)) + sizeof(container_));
}

UsCoreMedication_Package::~UsCoreMedication_Package() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreMedication.Package)
  SharedDtor();
}

void UsCoreMedication_Package::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete container_;
}

void UsCoreMedication_Package::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreMedication_Package::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreMedication_Package& UsCoreMedication_Package::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedication_Package.base);
  return *internal_default_instance();
}


void UsCoreMedication_Package::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreMedication.Package)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  content_.Clear();
  batch_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && container_ != NULL) {
    delete container_;
  }
  container_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreMedication_Package::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreMedication.Package)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept container = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_container()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.uscore.UsCoreMedication.Package.Content content = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.uscore.UsCoreMedication.Package.Batch batch = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_batch()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreMedication.Package)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreMedication.Package)
  return false;
#undef DO_
}

void UsCoreMedication_Package::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreMedication.Package)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.CodeableConcept container = 4;
  if (this->has_container()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_container(), output);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreMedication.Package.Content content = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->content(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreMedication.Package.Batch batch = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->batch_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->batch(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreMedication.Package)
}

::google::protobuf::uint8* UsCoreMedication_Package::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreMedication.Package)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept container = 4;
  if (this->has_container()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_container(), deterministic, target);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreMedication.Package.Content content = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->content_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->content(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreMedication.Package.Batch batch = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->batch_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->batch(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreMedication.Package)
  return target;
}

size_t UsCoreMedication_Package::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreMedication.Package)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.uscore.UsCoreMedication.Package.Content content = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->content_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->content(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.uscore.UsCoreMedication.Package.Batch batch = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->batch_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->batch(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.CodeableConcept container = 4;
  if (this->has_container()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *container_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreMedication_Package::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreMedication.Package)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreMedication_Package* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreMedication_Package>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreMedication.Package)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreMedication.Package)
    MergeFrom(*source);
  }
}

void UsCoreMedication_Package::MergeFrom(const UsCoreMedication_Package& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreMedication.Package)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  content_.MergeFrom(from.content_);
  batch_.MergeFrom(from.batch_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_container()) {
    mutable_container()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.container());
  }
}

void UsCoreMedication_Package::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreMedication.Package)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreMedication_Package::CopyFrom(const UsCoreMedication_Package& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreMedication.Package)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreMedication_Package::IsInitialized() const {
  return true;
}

void UsCoreMedication_Package::Swap(UsCoreMedication_Package* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreMedication_Package::InternalSwap(UsCoreMedication_Package* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&content_)->InternalSwap(CastToBase(&other->content_));
  CastToBase(&batch_)->InternalSwap(CastToBase(&other->batch_));
  swap(id_, other->id_);
  swap(container_, other->container_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreMedication_Package::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreMedication::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreMedication_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::Id*>(
      ::google::fhir::stu3::proto::Id::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedication_default_instance_._instance.get_mutable()->meta_ = const_cast< ::google::fhir::stu3::proto::Meta*>(
      ::google::fhir::stu3::proto::Meta::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedication_default_instance_._instance.get_mutable()->implicit_rules_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedication_default_instance_._instance.get_mutable()->language_ = const_cast< ::google::fhir::stu3::proto::LanguageCode*>(
      ::google::fhir::stu3::proto::LanguageCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedication_default_instance_._instance.get_mutable()->text_ = const_cast< ::google::fhir::stu3::proto::Narrative*>(
      ::google::fhir::stu3::proto::Narrative::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedication_default_instance_._instance.get_mutable()->code_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedication_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::fhir::stu3::proto::MedicationStatusCode*>(
      ::google::fhir::stu3::proto::MedicationStatusCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedication_default_instance_._instance.get_mutable()->is_brand_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedication_default_instance_._instance.get_mutable()->is_over_the_counter_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedication_default_instance_._instance.get_mutable()->manufacturer_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedication_default_instance_._instance.get_mutable()->form_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedication_default_instance_._instance.get_mutable()->package_value_ = const_cast< ::google::fhir::stu3::uscore::UsCoreMedication_Package*>(
      ::google::fhir::stu3::uscore::UsCoreMedication_Package::internal_default_instance());
}
void UsCoreMedication::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreMedication::clear_meta() {
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
}
void UsCoreMedication::clear_implicit_rules() {
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
}
void UsCoreMedication::clear_language() {
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
}
void UsCoreMedication::clear_text() {
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
}
void UsCoreMedication::clear_contained() {
  contained_.Clear();
}
void UsCoreMedication::clear_extension() {
  extension_.Clear();
}
void UsCoreMedication::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreMedication::clear_code() {
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
}
void UsCoreMedication::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
void UsCoreMedication::clear_is_brand() {
  if (GetArenaNoVirtual() == NULL && is_brand_ != NULL) {
    delete is_brand_;
  }
  is_brand_ = NULL;
}
void UsCoreMedication::clear_is_over_the_counter() {
  if (GetArenaNoVirtual() == NULL && is_over_the_counter_ != NULL) {
    delete is_over_the_counter_;
  }
  is_over_the_counter_ = NULL;
}
void UsCoreMedication::clear_manufacturer() {
  if (GetArenaNoVirtual() == NULL && manufacturer_ != NULL) {
    delete manufacturer_;
  }
  manufacturer_ = NULL;
}
void UsCoreMedication::clear_form() {
  if (GetArenaNoVirtual() == NULL && form_ != NULL) {
    delete form_;
  }
  form_ = NULL;
}
void UsCoreMedication::clear_image() {
  image_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreMedication::kIdFieldNumber;
const int UsCoreMedication::kMetaFieldNumber;
const int UsCoreMedication::kImplicitRulesFieldNumber;
const int UsCoreMedication::kLanguageFieldNumber;
const int UsCoreMedication::kTextFieldNumber;
const int UsCoreMedication::kContainedFieldNumber;
const int UsCoreMedication::kExtensionFieldNumber;
const int UsCoreMedication::kModifierExtensionFieldNumber;
const int UsCoreMedication::kCodeFieldNumber;
const int UsCoreMedication::kStatusFieldNumber;
const int UsCoreMedication::kIsBrandFieldNumber;
const int UsCoreMedication::kIsOverTheCounterFieldNumber;
const int UsCoreMedication::kManufacturerFieldNumber;
const int UsCoreMedication::kFormFieldNumber;
const int UsCoreMedication::kIngredientFieldNumber;
const int UsCoreMedication::kPackageValueFieldNumber;
const int UsCoreMedication::kImageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreMedication::UsCoreMedication()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedication.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreMedication)
}
UsCoreMedication::UsCoreMedication(const UsCoreMedication& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      contained_(from.contained_),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      ingredient_(from.ingredient_),
      image_(from.image_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::Id(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_meta()) {
    meta_ = new ::google::fhir::stu3::proto::Meta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  if (from.has_implicit_rules()) {
    implicit_rules_ = new ::google::fhir::stu3::proto::Uri(*from.implicit_rules_);
  } else {
    implicit_rules_ = NULL;
  }
  if (from.has_language()) {
    language_ = new ::google::fhir::stu3::proto::LanguageCode(*from.language_);
  } else {
    language_ = NULL;
  }
  if (from.has_text()) {
    text_ = new ::google::fhir::stu3::proto::Narrative(*from.text_);
  } else {
    text_ = NULL;
  }
  if (from.has_code()) {
    code_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.code_);
  } else {
    code_ = NULL;
  }
  if (from.has_status()) {
    status_ = new ::google::fhir::stu3::proto::MedicationStatusCode(*from.status_);
  } else {
    status_ = NULL;
  }
  if (from.has_is_brand()) {
    is_brand_ = new ::google::fhir::stu3::proto::Boolean(*from.is_brand_);
  } else {
    is_brand_ = NULL;
  }
  if (from.has_is_over_the_counter()) {
    is_over_the_counter_ = new ::google::fhir::stu3::proto::Boolean(*from.is_over_the_counter_);
  } else {
    is_over_the_counter_ = NULL;
  }
  if (from.has_manufacturer()) {
    manufacturer_ = new ::google::fhir::stu3::proto::Reference(*from.manufacturer_);
  } else {
    manufacturer_ = NULL;
  }
  if (from.has_form()) {
    form_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.form_);
  } else {
    form_ = NULL;
  }
  if (from.has_package_value()) {
    package_value_ = new ::google::fhir::stu3::uscore::UsCoreMedication_Package(*from.package_value_);
  } else {
    package_value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreMedication)
}

void UsCoreMedication::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&package_value_) -
      reinterpret_cast<char*>(&id_)) + sizeof(package_value_));
}

UsCoreMedication::~UsCoreMedication() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreMedication)
  SharedDtor();
}

void UsCoreMedication::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete implicit_rules_;
  if (this != internal_default_instance()) delete language_;
  if (this != internal_default_instance()) delete text_;
  if (this != internal_default_instance()) delete code_;
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete is_brand_;
  if (this != internal_default_instance()) delete is_over_the_counter_;
  if (this != internal_default_instance()) delete manufacturer_;
  if (this != internal_default_instance()) delete form_;
  if (this != internal_default_instance()) delete package_value_;
}

void UsCoreMedication::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreMedication::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreMedication& UsCoreMedication::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedication.base);
  return *internal_default_instance();
}


void UsCoreMedication::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreMedication)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contained_.Clear();
  extension_.Clear();
  modifier_extension_.Clear();
  ingredient_.Clear();
  image_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  if (GetArenaNoVirtual() == NULL && is_brand_ != NULL) {
    delete is_brand_;
  }
  is_brand_ = NULL;
  if (GetArenaNoVirtual() == NULL && is_over_the_counter_ != NULL) {
    delete is_over_the_counter_;
  }
  is_over_the_counter_ = NULL;
  if (GetArenaNoVirtual() == NULL && manufacturer_ != NULL) {
    delete manufacturer_;
  }
  manufacturer_ = NULL;
  if (GetArenaNoVirtual() == NULL && form_ != NULL) {
    delete form_;
  }
  form_ = NULL;
  if (GetArenaNoVirtual() == NULL && package_value_ != NULL) {
    delete package_value_;
  }
  package_value_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreMedication::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreMedication)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Id id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Meta meta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri implicit_rules = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_implicit_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.LanguageCode language = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_language()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Narrative text = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_contained()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept code = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.MedicationStatusCode status = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Boolean is_brand = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_is_brand()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Boolean is_over_the_counter = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_is_over_the_counter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference manufacturer = 13 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_manufacturer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept form = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_form()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.uscore.UsCoreMedication.Ingredient ingredient = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ingredient()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreMedication.Package package_value = 16[json_name = "package"];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_package_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Attachment image = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreMedication)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreMedication)
  return false;
#undef DO_
}

void UsCoreMedication::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreMedication)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_meta(), output);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_implicit_rules(), output);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_language(), output);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_text(), output);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->contained(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_code(), output);
  }

  // .google.fhir.stu3.proto.MedicationStatusCode status = 10;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_status(), output);
  }

  // .google.fhir.stu3.proto.Boolean is_brand = 11;
  if (this->has_is_brand()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_is_brand(), output);
  }

  // .google.fhir.stu3.proto.Boolean is_over_the_counter = 12;
  if (this->has_is_over_the_counter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_is_over_the_counter(), output);
  }

  // .google.fhir.stu3.proto.Reference manufacturer = 13 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_manufacturer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_manufacturer(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept form = 14;
  if (this->has_form()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_form(), output);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreMedication.Ingredient ingredient = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ingredient_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->ingredient(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.uscore.UsCoreMedication.Package package_value = 16[json_name = "package"];
  if (this->has_package_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_package_value(), output);
  }

  // repeated .google.fhir.stu3.proto.Attachment image = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->image_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17,
      this->image(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreMedication)
}

::google::protobuf::uint8* UsCoreMedication::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreMedication)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_meta(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_implicit_rules(), deterministic, target);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_language(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_text(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->contained(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_code(), deterministic, target);
  }

  // .google.fhir.stu3.proto.MedicationStatusCode status = 10;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_status(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Boolean is_brand = 11;
  if (this->has_is_brand()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_is_brand(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Boolean is_over_the_counter = 12;
  if (this->has_is_over_the_counter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_is_over_the_counter(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference manufacturer = 13 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_manufacturer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_manufacturer(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept form = 14;
  if (this->has_form()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_form(), deterministic, target);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreMedication.Ingredient ingredient = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ingredient_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->ingredient(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreMedication.Package package_value = 16[json_name = "package"];
  if (this->has_package_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_package_value(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Attachment image = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->image_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->image(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreMedication)
  return target;
}

size_t UsCoreMedication::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreMedication)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->contained_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->contained(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.uscore.UsCoreMedication.Ingredient ingredient = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->ingredient_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ingredient(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Attachment image = 17;
  {
    unsigned int count = static_cast<unsigned int>(this->image_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->image(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *implicit_rules_);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *language_);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *text_);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *code_);
  }

  // .google.fhir.stu3.proto.MedicationStatusCode status = 10;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .google.fhir.stu3.proto.Boolean is_brand = 11;
  if (this->has_is_brand()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *is_brand_);
  }

  // .google.fhir.stu3.proto.Boolean is_over_the_counter = 12;
  if (this->has_is_over_the_counter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *is_over_the_counter_);
  }

  // .google.fhir.stu3.proto.Reference manufacturer = 13 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_manufacturer()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *manufacturer_);
  }

  // .google.fhir.stu3.proto.CodeableConcept form = 14;
  if (this->has_form()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *form_);
  }

  // .google.fhir.stu3.uscore.UsCoreMedication.Package package_value = 16[json_name = "package"];
  if (this->has_package_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *package_value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreMedication::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreMedication)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreMedication* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreMedication>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreMedication)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreMedication)
    MergeFrom(*source);
  }
}

void UsCoreMedication::MergeFrom(const UsCoreMedication& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreMedication)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contained_.MergeFrom(from.contained_);
  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  ingredient_.MergeFrom(from.ingredient_);
  image_.MergeFrom(from.image_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::Id::MergeFrom(from.id());
  }
  if (from.has_meta()) {
    mutable_meta()->::google::fhir::stu3::proto::Meta::MergeFrom(from.meta());
  }
  if (from.has_implicit_rules()) {
    mutable_implicit_rules()->::google::fhir::stu3::proto::Uri::MergeFrom(from.implicit_rules());
  }
  if (from.has_language()) {
    mutable_language()->::google::fhir::stu3::proto::LanguageCode::MergeFrom(from.language());
  }
  if (from.has_text()) {
    mutable_text()->::google::fhir::stu3::proto::Narrative::MergeFrom(from.text());
  }
  if (from.has_code()) {
    mutable_code()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.code());
  }
  if (from.has_status()) {
    mutable_status()->::google::fhir::stu3::proto::MedicationStatusCode::MergeFrom(from.status());
  }
  if (from.has_is_brand()) {
    mutable_is_brand()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.is_brand());
  }
  if (from.has_is_over_the_counter()) {
    mutable_is_over_the_counter()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.is_over_the_counter());
  }
  if (from.has_manufacturer()) {
    mutable_manufacturer()->::google::fhir::stu3::proto::Reference::MergeFrom(from.manufacturer());
  }
  if (from.has_form()) {
    mutable_form()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.form());
  }
  if (from.has_package_value()) {
    mutable_package_value()->::google::fhir::stu3::uscore::UsCoreMedication_Package::MergeFrom(from.package_value());
  }
}

void UsCoreMedication::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreMedication)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreMedication::CopyFrom(const UsCoreMedication& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreMedication)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreMedication::IsInitialized() const {
  return true;
}

void UsCoreMedication::Swap(UsCoreMedication* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreMedication::InternalSwap(UsCoreMedication* other) {
  using std::swap;
  CastToBase(&contained_)->InternalSwap(CastToBase(&other->contained_));
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&ingredient_)->InternalSwap(CastToBase(&other->ingredient_));
  CastToBase(&image_)->InternalSwap(CastToBase(&other->image_));
  swap(id_, other->id_);
  swap(meta_, other->meta_);
  swap(implicit_rules_, other->implicit_rules_);
  swap(language_, other->language_);
  swap(text_, other->text_);
  swap(code_, other->code_);
  swap(status_, other->status_);
  swap(is_brand_, other->is_brand_);
  swap(is_over_the_counter_, other->is_over_the_counter_);
  swap(manufacturer_, other->manufacturer_);
  swap(form_, other->form_);
  swap(package_value_, other->package_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreMedication::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreMedicationrequest_Medication::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_Medication_default_instance_.codeable_concept_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_Medication_default_instance_.reference_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
}
void UsCoreMedicationrequest_Medication::set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_medication();
  if (codeable_concept) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      codeable_concept = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, codeable_concept, submessage_arena);
    }
    set_has_codeable_concept();
    medication_.codeable_concept_ = codeable_concept;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication.codeable_concept)
}
void UsCoreMedicationrequest_Medication::clear_codeable_concept() {
  if (has_codeable_concept()) {
    delete medication_.codeable_concept_;
    clear_has_medication();
  }
}
void UsCoreMedicationrequest_Medication::set_allocated_reference(::google::fhir::stu3::proto::Reference* reference) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_medication();
  if (reference) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reference = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reference, submessage_arena);
    }
    set_has_reference();
    medication_.reference_ = reference;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication.reference)
}
void UsCoreMedicationrequest_Medication::clear_reference() {
  if (has_reference()) {
    delete medication_.reference_;
    clear_has_medication();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreMedicationrequest_Medication::kCodeableConceptFieldNumber;
const int UsCoreMedicationrequest_Medication::kReferenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreMedicationrequest_Medication::UsCoreMedicationrequest_Medication()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedicationrequest_Medication.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication)
}
UsCoreMedicationrequest_Medication::UsCoreMedicationrequest_Medication(const UsCoreMedicationrequest_Medication& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_medication();
  switch (from.medication_case()) {
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case MEDICATION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication)
}

void UsCoreMedicationrequest_Medication::SharedCtor() {
  clear_has_medication();
}

UsCoreMedicationrequest_Medication::~UsCoreMedicationrequest_Medication() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication)
  SharedDtor();
}

void UsCoreMedicationrequest_Medication::SharedDtor() {
  if (has_medication()) {
    clear_medication();
  }
}

void UsCoreMedicationrequest_Medication::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreMedicationrequest_Medication::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreMedicationrequest_Medication& UsCoreMedicationrequest_Medication::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedicationrequest_Medication.base);
  return *internal_default_instance();
}


void UsCoreMedicationrequest_Medication::clear_medication() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication)
  switch (medication_case()) {
    case kCodeableConcept: {
      delete medication_.codeable_concept_;
      break;
    }
    case kReference: {
      delete medication_.reference_;
      break;
    }
    case MEDICATION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MEDICATION_NOT_SET;
}


void UsCoreMedicationrequest_Medication::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_medication();
  _internal_metadata_.Clear();
}

bool UsCoreMedicationrequest_Medication::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_codeable_concept()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication)
  return false;
#undef DO_
}

void UsCoreMedicationrequest_Medication::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
  if (has_codeable_concept()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_codeable_concept(), output);
  }

  // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication"];
  if (has_reference()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_reference(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication)
}

::google::protobuf::uint8* UsCoreMedicationrequest_Medication::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
  if (has_codeable_concept()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_codeable_concept(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication"];
  if (has_reference()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_reference(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication)
  return target;
}

size_t UsCoreMedicationrequest_Medication::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (medication_case()) {
    // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
    case kCodeableConcept: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *medication_.codeable_concept_);
      break;
    }
    // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication"];
    case kReference: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *medication_.reference_);
      break;
    }
    case MEDICATION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreMedicationrequest_Medication::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreMedicationrequest_Medication* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreMedicationrequest_Medication>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication)
    MergeFrom(*source);
  }
}

void UsCoreMedicationrequest_Medication::MergeFrom(const UsCoreMedicationrequest_Medication& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.medication_case()) {
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case MEDICATION_NOT_SET: {
      break;
    }
  }
}

void UsCoreMedicationrequest_Medication::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreMedicationrequest_Medication::CopyFrom(const UsCoreMedicationrequest_Medication& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreMedicationrequest_Medication::IsInitialized() const {
  return true;
}

void UsCoreMedicationrequest_Medication::Swap(UsCoreMedicationrequest_Medication* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreMedicationrequest_Medication::InternalSwap(UsCoreMedicationrequest_Medication* other) {
  using std::swap;
  swap(medication_, other->medication_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreMedicationrequest_Medication::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreMedicationrequest_Requester::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_Requester_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_Requester_default_instance_._instance.get_mutable()->agent_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_Requester_default_instance_._instance.get_mutable()->on_behalf_of_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
}
void UsCoreMedicationrequest_Requester::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreMedicationrequest_Requester::clear_extension() {
  extension_.Clear();
}
void UsCoreMedicationrequest_Requester::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreMedicationrequest_Requester::clear_agent() {
  if (GetArenaNoVirtual() == NULL && agent_ != NULL) {
    delete agent_;
  }
  agent_ = NULL;
}
void UsCoreMedicationrequest_Requester::clear_on_behalf_of() {
  if (GetArenaNoVirtual() == NULL && on_behalf_of_ != NULL) {
    delete on_behalf_of_;
  }
  on_behalf_of_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreMedicationrequest_Requester::kIdFieldNumber;
const int UsCoreMedicationrequest_Requester::kExtensionFieldNumber;
const int UsCoreMedicationrequest_Requester::kModifierExtensionFieldNumber;
const int UsCoreMedicationrequest_Requester::kAgentFieldNumber;
const int UsCoreMedicationrequest_Requester::kOnBehalfOfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreMedicationrequest_Requester::UsCoreMedicationrequest_Requester()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedicationrequest_Requester.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester)
}
UsCoreMedicationrequest_Requester::UsCoreMedicationrequest_Requester(const UsCoreMedicationrequest_Requester& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_agent()) {
    agent_ = new ::google::fhir::stu3::proto::Reference(*from.agent_);
  } else {
    agent_ = NULL;
  }
  if (from.has_on_behalf_of()) {
    on_behalf_of_ = new ::google::fhir::stu3::proto::Reference(*from.on_behalf_of_);
  } else {
    on_behalf_of_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester)
}

void UsCoreMedicationrequest_Requester::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&on_behalf_of_) -
      reinterpret_cast<char*>(&id_)) + sizeof(on_behalf_of_));
}

UsCoreMedicationrequest_Requester::~UsCoreMedicationrequest_Requester() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester)
  SharedDtor();
}

void UsCoreMedicationrequest_Requester::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete agent_;
  if (this != internal_default_instance()) delete on_behalf_of_;
}

void UsCoreMedicationrequest_Requester::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreMedicationrequest_Requester::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreMedicationrequest_Requester& UsCoreMedicationrequest_Requester::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedicationrequest_Requester.base);
  return *internal_default_instance();
}


void UsCoreMedicationrequest_Requester::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && agent_ != NULL) {
    delete agent_;
  }
  agent_ = NULL;
  if (GetArenaNoVirtual() == NULL && on_behalf_of_ != NULL) {
    delete on_behalf_of_;
  }
  on_behalf_of_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreMedicationrequest_Requester::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference agent = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitioner"];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_agent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference on_behalf_of = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_on_behalf_of()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester)
  return false;
#undef DO_
}

void UsCoreMedicationrequest_Requester::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Reference agent = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitioner"];
  if (this->has_agent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_agent(), output);
  }

  // .google.fhir.stu3.proto.Reference on_behalf_of = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_on_behalf_of()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_on_behalf_of(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester)
}

::google::protobuf::uint8* UsCoreMedicationrequest_Requester::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference agent = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitioner"];
  if (this->has_agent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_agent(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference on_behalf_of = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_on_behalf_of()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_on_behalf_of(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester)
  return target;
}

size_t UsCoreMedicationrequest_Requester::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Reference agent = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitioner"];
  if (this->has_agent()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *agent_);
  }

  // .google.fhir.stu3.proto.Reference on_behalf_of = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_on_behalf_of()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *on_behalf_of_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreMedicationrequest_Requester::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreMedicationrequest_Requester* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreMedicationrequest_Requester>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester)
    MergeFrom(*source);
  }
}

void UsCoreMedicationrequest_Requester::MergeFrom(const UsCoreMedicationrequest_Requester& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_agent()) {
    mutable_agent()->::google::fhir::stu3::proto::Reference::MergeFrom(from.agent());
  }
  if (from.has_on_behalf_of()) {
    mutable_on_behalf_of()->::google::fhir::stu3::proto::Reference::MergeFrom(from.on_behalf_of());
  }
}

void UsCoreMedicationrequest_Requester::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreMedicationrequest_Requester::CopyFrom(const UsCoreMedicationrequest_Requester& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreMedicationrequest_Requester::IsInitialized() const {
  return true;
}

void UsCoreMedicationrequest_Requester::Swap(UsCoreMedicationrequest_Requester* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreMedicationrequest_Requester::InternalSwap(UsCoreMedicationrequest_Requester* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  swap(id_, other->id_);
  swap(agent_, other->agent_);
  swap(on_behalf_of_, other->on_behalf_of_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreMedicationrequest_Requester::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreMedicationrequest_DispenseRequest::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_DispenseRequest_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_DispenseRequest_default_instance_._instance.get_mutable()->validity_period_ = const_cast< ::google::fhir::stu3::proto::Period*>(
      ::google::fhir::stu3::proto::Period::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_DispenseRequest_default_instance_._instance.get_mutable()->number_of_repeats_allowed_ = const_cast< ::google::fhir::stu3::proto::PositiveInt*>(
      ::google::fhir::stu3::proto::PositiveInt::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_DispenseRequest_default_instance_._instance.get_mutable()->quantity_ = const_cast< ::google::fhir::stu3::proto::SimpleQuantity*>(
      ::google::fhir::stu3::proto::SimpleQuantity::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_DispenseRequest_default_instance_._instance.get_mutable()->expected_supply_duration_ = const_cast< ::google::fhir::stu3::proto::Duration*>(
      ::google::fhir::stu3::proto::Duration::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_DispenseRequest_default_instance_._instance.get_mutable()->performer_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
}
void UsCoreMedicationrequest_DispenseRequest::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreMedicationrequest_DispenseRequest::clear_extension() {
  extension_.Clear();
}
void UsCoreMedicationrequest_DispenseRequest::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreMedicationrequest_DispenseRequest::clear_validity_period() {
  if (GetArenaNoVirtual() == NULL && validity_period_ != NULL) {
    delete validity_period_;
  }
  validity_period_ = NULL;
}
void UsCoreMedicationrequest_DispenseRequest::clear_number_of_repeats_allowed() {
  if (GetArenaNoVirtual() == NULL && number_of_repeats_allowed_ != NULL) {
    delete number_of_repeats_allowed_;
  }
  number_of_repeats_allowed_ = NULL;
}
void UsCoreMedicationrequest_DispenseRequest::clear_quantity() {
  if (GetArenaNoVirtual() == NULL && quantity_ != NULL) {
    delete quantity_;
  }
  quantity_ = NULL;
}
void UsCoreMedicationrequest_DispenseRequest::clear_expected_supply_duration() {
  if (GetArenaNoVirtual() == NULL && expected_supply_duration_ != NULL) {
    delete expected_supply_duration_;
  }
  expected_supply_duration_ = NULL;
}
void UsCoreMedicationrequest_DispenseRequest::clear_performer() {
  if (GetArenaNoVirtual() == NULL && performer_ != NULL) {
    delete performer_;
  }
  performer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreMedicationrequest_DispenseRequest::kIdFieldNumber;
const int UsCoreMedicationrequest_DispenseRequest::kExtensionFieldNumber;
const int UsCoreMedicationrequest_DispenseRequest::kModifierExtensionFieldNumber;
const int UsCoreMedicationrequest_DispenseRequest::kValidityPeriodFieldNumber;
const int UsCoreMedicationrequest_DispenseRequest::kNumberOfRepeatsAllowedFieldNumber;
const int UsCoreMedicationrequest_DispenseRequest::kQuantityFieldNumber;
const int UsCoreMedicationrequest_DispenseRequest::kExpectedSupplyDurationFieldNumber;
const int UsCoreMedicationrequest_DispenseRequest::kPerformerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreMedicationrequest_DispenseRequest::UsCoreMedicationrequest_DispenseRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedicationrequest_DispenseRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest)
}
UsCoreMedicationrequest_DispenseRequest::UsCoreMedicationrequest_DispenseRequest(const UsCoreMedicationrequest_DispenseRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_validity_period()) {
    validity_period_ = new ::google::fhir::stu3::proto::Period(*from.validity_period_);
  } else {
    validity_period_ = NULL;
  }
  if (from.has_number_of_repeats_allowed()) {
    number_of_repeats_allowed_ = new ::google::fhir::stu3::proto::PositiveInt(*from.number_of_repeats_allowed_);
  } else {
    number_of_repeats_allowed_ = NULL;
  }
  if (from.has_quantity()) {
    quantity_ = new ::google::fhir::stu3::proto::SimpleQuantity(*from.quantity_);
  } else {
    quantity_ = NULL;
  }
  if (from.has_expected_supply_duration()) {
    expected_supply_duration_ = new ::google::fhir::stu3::proto::Duration(*from.expected_supply_duration_);
  } else {
    expected_supply_duration_ = NULL;
  }
  if (from.has_performer()) {
    performer_ = new ::google::fhir::stu3::proto::Reference(*from.performer_);
  } else {
    performer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest)
}

void UsCoreMedicationrequest_DispenseRequest::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&performer_) -
      reinterpret_cast<char*>(&id_)) + sizeof(performer_));
}

UsCoreMedicationrequest_DispenseRequest::~UsCoreMedicationrequest_DispenseRequest() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest)
  SharedDtor();
}

void UsCoreMedicationrequest_DispenseRequest::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete validity_period_;
  if (this != internal_default_instance()) delete number_of_repeats_allowed_;
  if (this != internal_default_instance()) delete quantity_;
  if (this != internal_default_instance()) delete expected_supply_duration_;
  if (this != internal_default_instance()) delete performer_;
}

void UsCoreMedicationrequest_DispenseRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreMedicationrequest_DispenseRequest::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreMedicationrequest_DispenseRequest& UsCoreMedicationrequest_DispenseRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedicationrequest_DispenseRequest.base);
  return *internal_default_instance();
}


void UsCoreMedicationrequest_DispenseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && validity_period_ != NULL) {
    delete validity_period_;
  }
  validity_period_ = NULL;
  if (GetArenaNoVirtual() == NULL && number_of_repeats_allowed_ != NULL) {
    delete number_of_repeats_allowed_;
  }
  number_of_repeats_allowed_ = NULL;
  if (GetArenaNoVirtual() == NULL && quantity_ != NULL) {
    delete quantity_;
  }
  quantity_ = NULL;
  if (GetArenaNoVirtual() == NULL && expected_supply_duration_ != NULL) {
    delete expected_supply_duration_;
  }
  expected_supply_duration_ = NULL;
  if (GetArenaNoVirtual() == NULL && performer_ != NULL) {
    delete performer_;
  }
  performer_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreMedicationrequest_DispenseRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Period validity_period = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_validity_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.PositiveInt number_of_repeats_allowed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_number_of_repeats_allowed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.SimpleQuantity quantity = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_quantity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Duration expected_supply_duration = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expected_supply_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference performer = 8 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_performer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest)
  return false;
#undef DO_
}

void UsCoreMedicationrequest_DispenseRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Period validity_period = 4;
  if (this->has_validity_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_validity_period(), output);
  }

  // .google.fhir.stu3.proto.PositiveInt number_of_repeats_allowed = 5;
  if (this->has_number_of_repeats_allowed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_number_of_repeats_allowed(), output);
  }

  // .google.fhir.stu3.proto.SimpleQuantity quantity = 6;
  if (this->has_quantity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_quantity(), output);
  }

  // .google.fhir.stu3.proto.Duration expected_supply_duration = 7;
  if (this->has_expected_supply_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_expected_supply_duration(), output);
  }

  // .google.fhir.stu3.proto.Reference performer = 8 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_performer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_performer(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest)
}

::google::protobuf::uint8* UsCoreMedicationrequest_DispenseRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Period validity_period = 4;
  if (this->has_validity_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_validity_period(), deterministic, target);
  }

  // .google.fhir.stu3.proto.PositiveInt number_of_repeats_allowed = 5;
  if (this->has_number_of_repeats_allowed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_number_of_repeats_allowed(), deterministic, target);
  }

  // .google.fhir.stu3.proto.SimpleQuantity quantity = 6;
  if (this->has_quantity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_quantity(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Duration expected_supply_duration = 7;
  if (this->has_expected_supply_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_expected_supply_duration(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference performer = 8 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_performer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_performer(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest)
  return target;
}

size_t UsCoreMedicationrequest_DispenseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Period validity_period = 4;
  if (this->has_validity_period()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *validity_period_);
  }

  // .google.fhir.stu3.proto.PositiveInt number_of_repeats_allowed = 5;
  if (this->has_number_of_repeats_allowed()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *number_of_repeats_allowed_);
  }

  // .google.fhir.stu3.proto.SimpleQuantity quantity = 6;
  if (this->has_quantity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *quantity_);
  }

  // .google.fhir.stu3.proto.Duration expected_supply_duration = 7;
  if (this->has_expected_supply_duration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expected_supply_duration_);
  }

  // .google.fhir.stu3.proto.Reference performer = 8 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_performer()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *performer_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreMedicationrequest_DispenseRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreMedicationrequest_DispenseRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreMedicationrequest_DispenseRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest)
    MergeFrom(*source);
  }
}

void UsCoreMedicationrequest_DispenseRequest::MergeFrom(const UsCoreMedicationrequest_DispenseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_validity_period()) {
    mutable_validity_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.validity_period());
  }
  if (from.has_number_of_repeats_allowed()) {
    mutable_number_of_repeats_allowed()->::google::fhir::stu3::proto::PositiveInt::MergeFrom(from.number_of_repeats_allowed());
  }
  if (from.has_quantity()) {
    mutable_quantity()->::google::fhir::stu3::proto::SimpleQuantity::MergeFrom(from.quantity());
  }
  if (from.has_expected_supply_duration()) {
    mutable_expected_supply_duration()->::google::fhir::stu3::proto::Duration::MergeFrom(from.expected_supply_duration());
  }
  if (from.has_performer()) {
    mutable_performer()->::google::fhir::stu3::proto::Reference::MergeFrom(from.performer());
  }
}

void UsCoreMedicationrequest_DispenseRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreMedicationrequest_DispenseRequest::CopyFrom(const UsCoreMedicationrequest_DispenseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreMedicationrequest_DispenseRequest::IsInitialized() const {
  return true;
}

void UsCoreMedicationrequest_DispenseRequest::Swap(UsCoreMedicationrequest_DispenseRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreMedicationrequest_DispenseRequest::InternalSwap(UsCoreMedicationrequest_DispenseRequest* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  swap(id_, other->id_);
  swap(validity_period_, other->validity_period_);
  swap(number_of_repeats_allowed_, other->number_of_repeats_allowed_);
  swap(quantity_, other->quantity_);
  swap(expected_supply_duration_, other->expected_supply_duration_);
  swap(performer_, other->performer_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreMedicationrequest_DispenseRequest::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreMedicationrequest_Substitution::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_Substitution_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_Substitution_default_instance_._instance.get_mutable()->allowed_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_Substitution_default_instance_._instance.get_mutable()->reason_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
}
void UsCoreMedicationrequest_Substitution::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreMedicationrequest_Substitution::clear_extension() {
  extension_.Clear();
}
void UsCoreMedicationrequest_Substitution::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreMedicationrequest_Substitution::clear_allowed() {
  if (GetArenaNoVirtual() == NULL && allowed_ != NULL) {
    delete allowed_;
  }
  allowed_ = NULL;
}
void UsCoreMedicationrequest_Substitution::clear_reason() {
  if (GetArenaNoVirtual() == NULL && reason_ != NULL) {
    delete reason_;
  }
  reason_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreMedicationrequest_Substitution::kIdFieldNumber;
const int UsCoreMedicationrequest_Substitution::kExtensionFieldNumber;
const int UsCoreMedicationrequest_Substitution::kModifierExtensionFieldNumber;
const int UsCoreMedicationrequest_Substitution::kAllowedFieldNumber;
const int UsCoreMedicationrequest_Substitution::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreMedicationrequest_Substitution::UsCoreMedicationrequest_Substitution()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedicationrequest_Substitution.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution)
}
UsCoreMedicationrequest_Substitution::UsCoreMedicationrequest_Substitution(const UsCoreMedicationrequest_Substitution& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_allowed()) {
    allowed_ = new ::google::fhir::stu3::proto::Boolean(*from.allowed_);
  } else {
    allowed_ = NULL;
  }
  if (from.has_reason()) {
    reason_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.reason_);
  } else {
    reason_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution)
}

void UsCoreMedicationrequest_Substitution::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&id_)) + sizeof(reason_));
}

UsCoreMedicationrequest_Substitution::~UsCoreMedicationrequest_Substitution() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution)
  SharedDtor();
}

void UsCoreMedicationrequest_Substitution::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete allowed_;
  if (this != internal_default_instance()) delete reason_;
}

void UsCoreMedicationrequest_Substitution::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreMedicationrequest_Substitution::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreMedicationrequest_Substitution& UsCoreMedicationrequest_Substitution::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedicationrequest_Substitution.base);
  return *internal_default_instance();
}


void UsCoreMedicationrequest_Substitution::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && allowed_ != NULL) {
    delete allowed_;
  }
  allowed_ = NULL;
  if (GetArenaNoVirtual() == NULL && reason_ != NULL) {
    delete reason_;
  }
  reason_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreMedicationrequest_Substitution::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Boolean allowed = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_allowed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept reason = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reason()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution)
  return false;
#undef DO_
}

void UsCoreMedicationrequest_Substitution::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Boolean allowed = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_allowed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_allowed(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept reason = 5;
  if (this->has_reason()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution)
}

::google::protobuf::uint8* UsCoreMedicationrequest_Substitution::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Boolean allowed = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_allowed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_allowed(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept reason = 5;
  if (this->has_reason()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_reason(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution)
  return target;
}

size_t UsCoreMedicationrequest_Substitution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Boolean allowed = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_allowed()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *allowed_);
  }

  // .google.fhir.stu3.proto.CodeableConcept reason = 5;
  if (this->has_reason()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *reason_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreMedicationrequest_Substitution::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreMedicationrequest_Substitution* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreMedicationrequest_Substitution>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution)
    MergeFrom(*source);
  }
}

void UsCoreMedicationrequest_Substitution::MergeFrom(const UsCoreMedicationrequest_Substitution& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_allowed()) {
    mutable_allowed()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.allowed());
  }
  if (from.has_reason()) {
    mutable_reason()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.reason());
  }
}

void UsCoreMedicationrequest_Substitution::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreMedicationrequest_Substitution::CopyFrom(const UsCoreMedicationrequest_Substitution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreMedicationrequest_Substitution::IsInitialized() const {
  return true;
}

void UsCoreMedicationrequest_Substitution::Swap(UsCoreMedicationrequest_Substitution* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreMedicationrequest_Substitution::InternalSwap(UsCoreMedicationrequest_Substitution* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  swap(id_, other->id_);
  swap(allowed_, other->allowed_);
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreMedicationrequest_Substitution::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreMedicationrequest::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::Id*>(
      ::google::fhir::stu3::proto::Id::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_default_instance_._instance.get_mutable()->meta_ = const_cast< ::google::fhir::stu3::proto::Meta*>(
      ::google::fhir::stu3::proto::Meta::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_default_instance_._instance.get_mutable()->implicit_rules_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_default_instance_._instance.get_mutable()->language_ = const_cast< ::google::fhir::stu3::proto::LanguageCode*>(
      ::google::fhir::stu3::proto::LanguageCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_default_instance_._instance.get_mutable()->text_ = const_cast< ::google::fhir::stu3::proto::Narrative*>(
      ::google::fhir::stu3::proto::Narrative::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_default_instance_._instance.get_mutable()->group_identifier_ = const_cast< ::google::fhir::stu3::proto::Identifier*>(
      ::google::fhir::stu3::proto::Identifier::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::fhir::stu3::proto::MedicationRequestStatusCode*>(
      ::google::fhir::stu3::proto::MedicationRequestStatusCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_default_instance_._instance.get_mutable()->intent_ = const_cast< ::google::fhir::stu3::proto::MedicationRequestIntentCode*>(
      ::google::fhir::stu3::proto::MedicationRequestIntentCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_default_instance_._instance.get_mutable()->category_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_default_instance_._instance.get_mutable()->priority_ = const_cast< ::google::fhir::stu3::proto::MedicationRequestPriorityCode*>(
      ::google::fhir::stu3::proto::MedicationRequestPriorityCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_default_instance_._instance.get_mutable()->medication_ = const_cast< ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Medication*>(
      ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Medication::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_default_instance_._instance.get_mutable()->subject_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_default_instance_._instance.get_mutable()->context_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_default_instance_._instance.get_mutable()->authored_on_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_default_instance_._instance.get_mutable()->requester_ = const_cast< ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester*>(
      ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_default_instance_._instance.get_mutable()->recorder_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_default_instance_._instance.get_mutable()->dispense_request_ = const_cast< ::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest*>(
      ::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_default_instance_._instance.get_mutable()->substitution_ = const_cast< ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution*>(
      ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationrequest_default_instance_._instance.get_mutable()->prior_prescription_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
}
void UsCoreMedicationrequest::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreMedicationrequest::clear_meta() {
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
}
void UsCoreMedicationrequest::clear_implicit_rules() {
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
}
void UsCoreMedicationrequest::clear_language() {
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
}
void UsCoreMedicationrequest::clear_text() {
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
}
void UsCoreMedicationrequest::clear_contained() {
  contained_.Clear();
}
void UsCoreMedicationrequest::clear_extension() {
  extension_.Clear();
}
void UsCoreMedicationrequest::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreMedicationrequest::clear_identifier() {
  identifier_.Clear();
}
void UsCoreMedicationrequest::clear_definition() {
  definition_.Clear();
}
void UsCoreMedicationrequest::clear_based_on() {
  based_on_.Clear();
}
void UsCoreMedicationrequest::clear_group_identifier() {
  if (GetArenaNoVirtual() == NULL && group_identifier_ != NULL) {
    delete group_identifier_;
  }
  group_identifier_ = NULL;
}
void UsCoreMedicationrequest::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
void UsCoreMedicationrequest::clear_intent() {
  if (GetArenaNoVirtual() == NULL && intent_ != NULL) {
    delete intent_;
  }
  intent_ = NULL;
}
void UsCoreMedicationrequest::clear_category() {
  if (GetArenaNoVirtual() == NULL && category_ != NULL) {
    delete category_;
  }
  category_ = NULL;
}
void UsCoreMedicationrequest::clear_priority() {
  if (GetArenaNoVirtual() == NULL && priority_ != NULL) {
    delete priority_;
  }
  priority_ = NULL;
}
void UsCoreMedicationrequest::clear_subject() {
  if (GetArenaNoVirtual() == NULL && subject_ != NULL) {
    delete subject_;
  }
  subject_ = NULL;
}
void UsCoreMedicationrequest::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
}
void UsCoreMedicationrequest::clear_supporting_information() {
  supporting_information_.Clear();
}
void UsCoreMedicationrequest::clear_authored_on() {
  if (GetArenaNoVirtual() == NULL && authored_on_ != NULL) {
    delete authored_on_;
  }
  authored_on_ = NULL;
}
void UsCoreMedicationrequest::clear_recorder() {
  if (GetArenaNoVirtual() == NULL && recorder_ != NULL) {
    delete recorder_;
  }
  recorder_ = NULL;
}
void UsCoreMedicationrequest::clear_reason_code() {
  reason_code_.Clear();
}
void UsCoreMedicationrequest::clear_reason_reference() {
  reason_reference_.Clear();
}
void UsCoreMedicationrequest::clear_note() {
  note_.Clear();
}
void UsCoreMedicationrequest::clear_dosage_instruction() {
  dosage_instruction_.Clear();
}
void UsCoreMedicationrequest::clear_prior_prescription() {
  if (GetArenaNoVirtual() == NULL && prior_prescription_ != NULL) {
    delete prior_prescription_;
  }
  prior_prescription_ = NULL;
}
void UsCoreMedicationrequest::clear_detected_issue() {
  detected_issue_.Clear();
}
void UsCoreMedicationrequest::clear_event_history() {
  event_history_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreMedicationrequest::kIdFieldNumber;
const int UsCoreMedicationrequest::kMetaFieldNumber;
const int UsCoreMedicationrequest::kImplicitRulesFieldNumber;
const int UsCoreMedicationrequest::kLanguageFieldNumber;
const int UsCoreMedicationrequest::kTextFieldNumber;
const int UsCoreMedicationrequest::kContainedFieldNumber;
const int UsCoreMedicationrequest::kExtensionFieldNumber;
const int UsCoreMedicationrequest::kModifierExtensionFieldNumber;
const int UsCoreMedicationrequest::kIdentifierFieldNumber;
const int UsCoreMedicationrequest::kDefinitionFieldNumber;
const int UsCoreMedicationrequest::kBasedOnFieldNumber;
const int UsCoreMedicationrequest::kGroupIdentifierFieldNumber;
const int UsCoreMedicationrequest::kStatusFieldNumber;
const int UsCoreMedicationrequest::kIntentFieldNumber;
const int UsCoreMedicationrequest::kCategoryFieldNumber;
const int UsCoreMedicationrequest::kPriorityFieldNumber;
const int UsCoreMedicationrequest::kMedicationFieldNumber;
const int UsCoreMedicationrequest::kSubjectFieldNumber;
const int UsCoreMedicationrequest::kContextFieldNumber;
const int UsCoreMedicationrequest::kSupportingInformationFieldNumber;
const int UsCoreMedicationrequest::kAuthoredOnFieldNumber;
const int UsCoreMedicationrequest::kRequesterFieldNumber;
const int UsCoreMedicationrequest::kRecorderFieldNumber;
const int UsCoreMedicationrequest::kReasonCodeFieldNumber;
const int UsCoreMedicationrequest::kReasonReferenceFieldNumber;
const int UsCoreMedicationrequest::kNoteFieldNumber;
const int UsCoreMedicationrequest::kDosageInstructionFieldNumber;
const int UsCoreMedicationrequest::kDispenseRequestFieldNumber;
const int UsCoreMedicationrequest::kSubstitutionFieldNumber;
const int UsCoreMedicationrequest::kPriorPrescriptionFieldNumber;
const int UsCoreMedicationrequest::kDetectedIssueFieldNumber;
const int UsCoreMedicationrequest::kEventHistoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreMedicationrequest::UsCoreMedicationrequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedicationrequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreMedicationrequest)
}
UsCoreMedicationrequest::UsCoreMedicationrequest(const UsCoreMedicationrequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      contained_(from.contained_),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      identifier_(from.identifier_),
      definition_(from.definition_),
      based_on_(from.based_on_),
      supporting_information_(from.supporting_information_),
      reason_code_(from.reason_code_),
      reason_reference_(from.reason_reference_),
      note_(from.note_),
      dosage_instruction_(from.dosage_instruction_),
      detected_issue_(from.detected_issue_),
      event_history_(from.event_history_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::Id(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_meta()) {
    meta_ = new ::google::fhir::stu3::proto::Meta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  if (from.has_implicit_rules()) {
    implicit_rules_ = new ::google::fhir::stu3::proto::Uri(*from.implicit_rules_);
  } else {
    implicit_rules_ = NULL;
  }
  if (from.has_language()) {
    language_ = new ::google::fhir::stu3::proto::LanguageCode(*from.language_);
  } else {
    language_ = NULL;
  }
  if (from.has_text()) {
    text_ = new ::google::fhir::stu3::proto::Narrative(*from.text_);
  } else {
    text_ = NULL;
  }
  if (from.has_group_identifier()) {
    group_identifier_ = new ::google::fhir::stu3::proto::Identifier(*from.group_identifier_);
  } else {
    group_identifier_ = NULL;
  }
  if (from.has_status()) {
    status_ = new ::google::fhir::stu3::proto::MedicationRequestStatusCode(*from.status_);
  } else {
    status_ = NULL;
  }
  if (from.has_intent()) {
    intent_ = new ::google::fhir::stu3::proto::MedicationRequestIntentCode(*from.intent_);
  } else {
    intent_ = NULL;
  }
  if (from.has_category()) {
    category_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.category_);
  } else {
    category_ = NULL;
  }
  if (from.has_priority()) {
    priority_ = new ::google::fhir::stu3::proto::MedicationRequestPriorityCode(*from.priority_);
  } else {
    priority_ = NULL;
  }
  if (from.has_medication()) {
    medication_ = new ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Medication(*from.medication_);
  } else {
    medication_ = NULL;
  }
  if (from.has_subject()) {
    subject_ = new ::google::fhir::stu3::proto::Reference(*from.subject_);
  } else {
    subject_ = NULL;
  }
  if (from.has_context()) {
    context_ = new ::google::fhir::stu3::proto::Reference(*from.context_);
  } else {
    context_ = NULL;
  }
  if (from.has_authored_on()) {
    authored_on_ = new ::google::fhir::stu3::proto::DateTime(*from.authored_on_);
  } else {
    authored_on_ = NULL;
  }
  if (from.has_requester()) {
    requester_ = new ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester(*from.requester_);
  } else {
    requester_ = NULL;
  }
  if (from.has_recorder()) {
    recorder_ = new ::google::fhir::stu3::proto::Reference(*from.recorder_);
  } else {
    recorder_ = NULL;
  }
  if (from.has_dispense_request()) {
    dispense_request_ = new ::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest(*from.dispense_request_);
  } else {
    dispense_request_ = NULL;
  }
  if (from.has_substitution()) {
    substitution_ = new ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution(*from.substitution_);
  } else {
    substitution_ = NULL;
  }
  if (from.has_prior_prescription()) {
    prior_prescription_ = new ::google::fhir::stu3::proto::Reference(*from.prior_prescription_);
  } else {
    prior_prescription_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreMedicationrequest)
}

void UsCoreMedicationrequest::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prior_prescription_) -
      reinterpret_cast<char*>(&id_)) + sizeof(prior_prescription_));
}

UsCoreMedicationrequest::~UsCoreMedicationrequest() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreMedicationrequest)
  SharedDtor();
}

void UsCoreMedicationrequest::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete implicit_rules_;
  if (this != internal_default_instance()) delete language_;
  if (this != internal_default_instance()) delete text_;
  if (this != internal_default_instance()) delete group_identifier_;
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete intent_;
  if (this != internal_default_instance()) delete category_;
  if (this != internal_default_instance()) delete priority_;
  if (this != internal_default_instance()) delete medication_;
  if (this != internal_default_instance()) delete subject_;
  if (this != internal_default_instance()) delete context_;
  if (this != internal_default_instance()) delete authored_on_;
  if (this != internal_default_instance()) delete requester_;
  if (this != internal_default_instance()) delete recorder_;
  if (this != internal_default_instance()) delete dispense_request_;
  if (this != internal_default_instance()) delete substitution_;
  if (this != internal_default_instance()) delete prior_prescription_;
}

void UsCoreMedicationrequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreMedicationrequest::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreMedicationrequest& UsCoreMedicationrequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedicationrequest.base);
  return *internal_default_instance();
}


void UsCoreMedicationrequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreMedicationrequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contained_.Clear();
  extension_.Clear();
  modifier_extension_.Clear();
  identifier_.Clear();
  definition_.Clear();
  based_on_.Clear();
  supporting_information_.Clear();
  reason_code_.Clear();
  reason_reference_.Clear();
  note_.Clear();
  dosage_instruction_.Clear();
  detected_issue_.Clear();
  event_history_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  if (GetArenaNoVirtual() == NULL && group_identifier_ != NULL) {
    delete group_identifier_;
  }
  group_identifier_ = NULL;
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  if (GetArenaNoVirtual() == NULL && intent_ != NULL) {
    delete intent_;
  }
  intent_ = NULL;
  if (GetArenaNoVirtual() == NULL && category_ != NULL) {
    delete category_;
  }
  category_ = NULL;
  if (GetArenaNoVirtual() == NULL && priority_ != NULL) {
    delete priority_;
  }
  priority_ = NULL;
  if (GetArenaNoVirtual() == NULL && medication_ != NULL) {
    delete medication_;
  }
  medication_ = NULL;
  if (GetArenaNoVirtual() == NULL && subject_ != NULL) {
    delete subject_;
  }
  subject_ = NULL;
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  if (GetArenaNoVirtual() == NULL && authored_on_ != NULL) {
    delete authored_on_;
  }
  authored_on_ = NULL;
  if (GetArenaNoVirtual() == NULL && requester_ != NULL) {
    delete requester_;
  }
  requester_ = NULL;
  if (GetArenaNoVirtual() == NULL && recorder_ != NULL) {
    delete recorder_;
  }
  recorder_ = NULL;
  if (GetArenaNoVirtual() == NULL && dispense_request_ != NULL) {
    delete dispense_request_;
  }
  dispense_request_ = NULL;
  if (GetArenaNoVirtual() == NULL && substitution_ != NULL) {
    delete substitution_;
  }
  substitution_ = NULL;
  if (GetArenaNoVirtual() == NULL && prior_prescription_ != NULL) {
    delete prior_prescription_;
  }
  prior_prescription_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreMedicationrequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreMedicationrequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Id id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Meta meta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri implicit_rules = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_implicit_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.LanguageCode language = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_language()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Narrative text = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_contained()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference definition = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ActivityDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/PlanDefinition"];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_definition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference based_on = 11 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_based_on()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Identifier group_identifier = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_group_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.MedicationRequestStatusCode status = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.MedicationRequestIntentCode intent = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_intent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept category = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_category()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.MedicationRequestPriorityCode priority = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication medication = 17 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_medication()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference subject = 18 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_subject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference context = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference supporting_information = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_supporting_information()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DateTime authored_on = 21 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_authored_on()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester requester = 22 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_requester()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference recorder = 23 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner"];
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_recorder()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept reason_code = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_reason_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference reason_reference = 25 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_reason_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Annotation note = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_note()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Dosage dosage_instruction = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_dosage_instruction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest dispense_request = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dispense_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution substitution = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_substitution()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference prior_prescription = 30 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest"];
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_prior_prescription()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference detected_issue = 31 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DetectedIssue"];
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_detected_issue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference event_history = 32 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Provenance"];
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_event_history()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreMedicationrequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreMedicationrequest)
  return false;
#undef DO_
}

void UsCoreMedicationrequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreMedicationrequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_meta(), output);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_implicit_rules(), output);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_language(), output);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_text(), output);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->contained(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->identifier(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference definition = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ActivityDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/PlanDefinition"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->definition_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->definition(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference based_on = 11 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->based_on_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->based_on(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Identifier group_identifier = 12;
  if (this->has_group_identifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_group_identifier(), output);
  }

  // .google.fhir.stu3.proto.MedicationRequestStatusCode status = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_status(), output);
  }

  // .google.fhir.stu3.proto.MedicationRequestIntentCode intent = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_intent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_intent(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept category = 15;
  if (this->has_category()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_category(), output);
  }

  // .google.fhir.stu3.proto.MedicationRequestPriorityCode priority = 16;
  if (this->has_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_priority(), output);
  }

  // .google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication medication = 17 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_medication()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_medication(), output);
  }

  // .google.fhir.stu3.proto.Reference subject = 18 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_subject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_subject(), output);
  }

  // .google.fhir.stu3.proto.Reference context = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_context(), output);
  }

  // repeated .google.fhir.stu3.proto.Reference supporting_information = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->supporting_information_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20,
      this->supporting_information(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.DateTime authored_on = 21 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_authored_on()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_authored_on(), output);
  }

  // .google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester requester = 22 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_requester()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->_internal_requester(), output);
  }

  // .google.fhir.stu3.proto.Reference recorder = 23 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner"];
  if (this->has_recorder()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->_internal_recorder(), output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept reason_code = 24;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reason_code_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24,
      this->reason_code(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference reason_reference = 25 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reason_reference_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25,
      this->reason_reference(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 26;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->note_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26,
      this->note(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Dosage dosage_instruction = 27;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dosage_instruction_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27,
      this->dosage_instruction(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest dispense_request = 28;
  if (this->has_dispense_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, this->_internal_dispense_request(), output);
  }

  // .google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution substitution = 29;
  if (this->has_substitution()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, this->_internal_substitution(), output);
  }

  // .google.fhir.stu3.proto.Reference prior_prescription = 30 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest"];
  if (this->has_prior_prescription()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, this->_internal_prior_prescription(), output);
  }

  // repeated .google.fhir.stu3.proto.Reference detected_issue = 31 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DetectedIssue"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->detected_issue_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31,
      this->detected_issue(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference event_history = 32 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Provenance"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->event_history_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32,
      this->event_history(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreMedicationrequest)
}

::google::protobuf::uint8* UsCoreMedicationrequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreMedicationrequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_meta(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_implicit_rules(), deterministic, target);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_language(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_text(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->contained(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->identifier(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference definition = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ActivityDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/PlanDefinition"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->definition_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->definition(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference based_on = 11 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->based_on_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->based_on(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Identifier group_identifier = 12;
  if (this->has_group_identifier()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_group_identifier(), deterministic, target);
  }

  // .google.fhir.stu3.proto.MedicationRequestStatusCode status = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_status(), deterministic, target);
  }

  // .google.fhir.stu3.proto.MedicationRequestIntentCode intent = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_intent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_intent(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept category = 15;
  if (this->has_category()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_category(), deterministic, target);
  }

  // .google.fhir.stu3.proto.MedicationRequestPriorityCode priority = 16;
  if (this->has_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_priority(), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication medication = 17 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_medication()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_medication(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference subject = 18 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_subject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_subject(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference context = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_context(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference supporting_information = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->supporting_information_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->supporting_information(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.DateTime authored_on = 21 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_authored_on()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_authored_on(), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester requester = 22 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_requester()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->_internal_requester(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference recorder = 23 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner"];
  if (this->has_recorder()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->_internal_recorder(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept reason_code = 24;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reason_code_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->reason_code(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference reason_reference = 25 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reason_reference_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->reason_reference(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 26;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->note_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, this->note(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Dosage dosage_instruction = 27;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dosage_instruction_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, this->dosage_instruction(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest dispense_request = 28;
  if (this->has_dispense_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, this->_internal_dispense_request(), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution substitution = 29;
  if (this->has_substitution()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29, this->_internal_substitution(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference prior_prescription = 30 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest"];
  if (this->has_prior_prescription()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, this->_internal_prior_prescription(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference detected_issue = 31 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DetectedIssue"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->detected_issue_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        31, this->detected_issue(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference event_history = 32 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Provenance"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->event_history_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        32, this->event_history(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreMedicationrequest)
  return target;
}

size_t UsCoreMedicationrequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreMedicationrequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->contained_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->contained(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->identifier_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->identifier(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference definition = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ActivityDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/PlanDefinition"];
  {
    unsigned int count = static_cast<unsigned int>(this->definition_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->definition(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference based_on = 11 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
  {
    unsigned int count = static_cast<unsigned int>(this->based_on_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->based_on(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference supporting_information = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
  {
    unsigned int count = static_cast<unsigned int>(this->supporting_information_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->supporting_information(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept reason_code = 24;
  {
    unsigned int count = static_cast<unsigned int>(this->reason_code_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reason_code(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference reason_reference = 25 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
  {
    unsigned int count = static_cast<unsigned int>(this->reason_reference_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reason_reference(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 26;
  {
    unsigned int count = static_cast<unsigned int>(this->note_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->note(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Dosage dosage_instruction = 27;
  {
    unsigned int count = static_cast<unsigned int>(this->dosage_instruction_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dosage_instruction(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference detected_issue = 31 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DetectedIssue"];
  {
    unsigned int count = static_cast<unsigned int>(this->detected_issue_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->detected_issue(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference event_history = 32 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Provenance"];
  {
    unsigned int count = static_cast<unsigned int>(this->event_history_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->event_history(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *implicit_rules_);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *language_);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *text_);
  }

  // .google.fhir.stu3.proto.Identifier group_identifier = 12;
  if (this->has_group_identifier()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *group_identifier_);
  }

  // .google.fhir.stu3.proto.MedicationRequestStatusCode status = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .google.fhir.stu3.proto.MedicationRequestIntentCode intent = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_intent()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *intent_);
  }

  // .google.fhir.stu3.proto.CodeableConcept category = 15;
  if (this->has_category()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *category_);
  }

  // .google.fhir.stu3.proto.MedicationRequestPriorityCode priority = 16;
  if (this->has_priority()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *priority_);
  }

  // .google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication medication = 17 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_medication()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *medication_);
  }

  // .google.fhir.stu3.proto.Reference subject = 18 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_subject()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *subject_);
  }

  // .google.fhir.stu3.proto.Reference context = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  if (this->has_context()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  // .google.fhir.stu3.proto.DateTime authored_on = 21 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_authored_on()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *authored_on_);
  }

  // .google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester requester = 22 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_requester()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *requester_);
  }

  // .google.fhir.stu3.proto.Reference recorder = 23 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner"];
  if (this->has_recorder()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *recorder_);
  }

  // .google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest dispense_request = 28;
  if (this->has_dispense_request()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dispense_request_);
  }

  // .google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution substitution = 29;
  if (this->has_substitution()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *substitution_);
  }

  // .google.fhir.stu3.proto.Reference prior_prescription = 30 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest"];
  if (this->has_prior_prescription()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *prior_prescription_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreMedicationrequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreMedicationrequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreMedicationrequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreMedicationrequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreMedicationrequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreMedicationrequest)
    MergeFrom(*source);
  }
}

void UsCoreMedicationrequest::MergeFrom(const UsCoreMedicationrequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreMedicationrequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contained_.MergeFrom(from.contained_);
  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  identifier_.MergeFrom(from.identifier_);
  definition_.MergeFrom(from.definition_);
  based_on_.MergeFrom(from.based_on_);
  supporting_information_.MergeFrom(from.supporting_information_);
  reason_code_.MergeFrom(from.reason_code_);
  reason_reference_.MergeFrom(from.reason_reference_);
  note_.MergeFrom(from.note_);
  dosage_instruction_.MergeFrom(from.dosage_instruction_);
  detected_issue_.MergeFrom(from.detected_issue_);
  event_history_.MergeFrom(from.event_history_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::Id::MergeFrom(from.id());
  }
  if (from.has_meta()) {
    mutable_meta()->::google::fhir::stu3::proto::Meta::MergeFrom(from.meta());
  }
  if (from.has_implicit_rules()) {
    mutable_implicit_rules()->::google::fhir::stu3::proto::Uri::MergeFrom(from.implicit_rules());
  }
  if (from.has_language()) {
    mutable_language()->::google::fhir::stu3::proto::LanguageCode::MergeFrom(from.language());
  }
  if (from.has_text()) {
    mutable_text()->::google::fhir::stu3::proto::Narrative::MergeFrom(from.text());
  }
  if (from.has_group_identifier()) {
    mutable_group_identifier()->::google::fhir::stu3::proto::Identifier::MergeFrom(from.group_identifier());
  }
  if (from.has_status()) {
    mutable_status()->::google::fhir::stu3::proto::MedicationRequestStatusCode::MergeFrom(from.status());
  }
  if (from.has_intent()) {
    mutable_intent()->::google::fhir::stu3::proto::MedicationRequestIntentCode::MergeFrom(from.intent());
  }
  if (from.has_category()) {
    mutable_category()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.category());
  }
  if (from.has_priority()) {
    mutable_priority()->::google::fhir::stu3::proto::MedicationRequestPriorityCode::MergeFrom(from.priority());
  }
  if (from.has_medication()) {
    mutable_medication()->::google::fhir::stu3::uscore::UsCoreMedicationrequest_Medication::MergeFrom(from.medication());
  }
  if (from.has_subject()) {
    mutable_subject()->::google::fhir::stu3::proto::Reference::MergeFrom(from.subject());
  }
  if (from.has_context()) {
    mutable_context()->::google::fhir::stu3::proto::Reference::MergeFrom(from.context());
  }
  if (from.has_authored_on()) {
    mutable_authored_on()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.authored_on());
  }
  if (from.has_requester()) {
    mutable_requester()->::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester::MergeFrom(from.requester());
  }
  if (from.has_recorder()) {
    mutable_recorder()->::google::fhir::stu3::proto::Reference::MergeFrom(from.recorder());
  }
  if (from.has_dispense_request()) {
    mutable_dispense_request()->::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest::MergeFrom(from.dispense_request());
  }
  if (from.has_substitution()) {
    mutable_substitution()->::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution::MergeFrom(from.substitution());
  }
  if (from.has_prior_prescription()) {
    mutable_prior_prescription()->::google::fhir::stu3::proto::Reference::MergeFrom(from.prior_prescription());
  }
}

void UsCoreMedicationrequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreMedicationrequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreMedicationrequest::CopyFrom(const UsCoreMedicationrequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreMedicationrequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreMedicationrequest::IsInitialized() const {
  return true;
}

void UsCoreMedicationrequest::Swap(UsCoreMedicationrequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreMedicationrequest::InternalSwap(UsCoreMedicationrequest* other) {
  using std::swap;
  CastToBase(&contained_)->InternalSwap(CastToBase(&other->contained_));
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&identifier_)->InternalSwap(CastToBase(&other->identifier_));
  CastToBase(&definition_)->InternalSwap(CastToBase(&other->definition_));
  CastToBase(&based_on_)->InternalSwap(CastToBase(&other->based_on_));
  CastToBase(&supporting_information_)->InternalSwap(CastToBase(&other->supporting_information_));
  CastToBase(&reason_code_)->InternalSwap(CastToBase(&other->reason_code_));
  CastToBase(&reason_reference_)->InternalSwap(CastToBase(&other->reason_reference_));
  CastToBase(&note_)->InternalSwap(CastToBase(&other->note_));
  CastToBase(&dosage_instruction_)->InternalSwap(CastToBase(&other->dosage_instruction_));
  CastToBase(&detected_issue_)->InternalSwap(CastToBase(&other->detected_issue_));
  CastToBase(&event_history_)->InternalSwap(CastToBase(&other->event_history_));
  swap(id_, other->id_);
  swap(meta_, other->meta_);
  swap(implicit_rules_, other->implicit_rules_);
  swap(language_, other->language_);
  swap(text_, other->text_);
  swap(group_identifier_, other->group_identifier_);
  swap(status_, other->status_);
  swap(intent_, other->intent_);
  swap(category_, other->category_);
  swap(priority_, other->priority_);
  swap(medication_, other->medication_);
  swap(subject_, other->subject_);
  swap(context_, other->context_);
  swap(authored_on_, other->authored_on_);
  swap(requester_, other->requester_);
  swap(recorder_, other->recorder_);
  swap(dispense_request_, other->dispense_request_);
  swap(substitution_, other->substitution_);
  swap(prior_prescription_, other->prior_prescription_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreMedicationrequest::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreMedicationstatement_Medication::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreMedicationstatement_Medication_default_instance_.codeable_concept_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationstatement_Medication_default_instance_.reference_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
}
void UsCoreMedicationstatement_Medication::set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_medication();
  if (codeable_concept) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      codeable_concept = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, codeable_concept, submessage_arena);
    }
    set_has_codeable_concept();
    medication_.codeable_concept_ = codeable_concept;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication.codeable_concept)
}
void UsCoreMedicationstatement_Medication::clear_codeable_concept() {
  if (has_codeable_concept()) {
    delete medication_.codeable_concept_;
    clear_has_medication();
  }
}
void UsCoreMedicationstatement_Medication::set_allocated_reference(::google::fhir::stu3::proto::Reference* reference) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_medication();
  if (reference) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reference = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reference, submessage_arena);
    }
    set_has_reference();
    medication_.reference_ = reference;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication.reference)
}
void UsCoreMedicationstatement_Medication::clear_reference() {
  if (has_reference()) {
    delete medication_.reference_;
    clear_has_medication();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreMedicationstatement_Medication::kCodeableConceptFieldNumber;
const int UsCoreMedicationstatement_Medication::kReferenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreMedicationstatement_Medication::UsCoreMedicationstatement_Medication()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedicationstatement_Medication.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication)
}
UsCoreMedicationstatement_Medication::UsCoreMedicationstatement_Medication(const UsCoreMedicationstatement_Medication& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_medication();
  switch (from.medication_case()) {
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case MEDICATION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication)
}

void UsCoreMedicationstatement_Medication::SharedCtor() {
  clear_has_medication();
}

UsCoreMedicationstatement_Medication::~UsCoreMedicationstatement_Medication() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication)
  SharedDtor();
}

void UsCoreMedicationstatement_Medication::SharedDtor() {
  if (has_medication()) {
    clear_medication();
  }
}

void UsCoreMedicationstatement_Medication::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreMedicationstatement_Medication::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreMedicationstatement_Medication& UsCoreMedicationstatement_Medication::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedicationstatement_Medication.base);
  return *internal_default_instance();
}


void UsCoreMedicationstatement_Medication::clear_medication() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication)
  switch (medication_case()) {
    case kCodeableConcept: {
      delete medication_.codeable_concept_;
      break;
    }
    case kReference: {
      delete medication_.reference_;
      break;
    }
    case MEDICATION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MEDICATION_NOT_SET;
}


void UsCoreMedicationstatement_Medication::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_medication();
  _internal_metadata_.Clear();
}

bool UsCoreMedicationstatement_Medication::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_codeable_concept()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication)
  return false;
#undef DO_
}

void UsCoreMedicationstatement_Medication::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
  if (has_codeable_concept()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_codeable_concept(), output);
  }

  // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication"];
  if (has_reference()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_reference(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication)
}

::google::protobuf::uint8* UsCoreMedicationstatement_Medication::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
  if (has_codeable_concept()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_codeable_concept(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication"];
  if (has_reference()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_reference(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication)
  return target;
}

size_t UsCoreMedicationstatement_Medication::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (medication_case()) {
    // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
    case kCodeableConcept: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *medication_.codeable_concept_);
      break;
    }
    // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication"];
    case kReference: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *medication_.reference_);
      break;
    }
    case MEDICATION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreMedicationstatement_Medication::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreMedicationstatement_Medication* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreMedicationstatement_Medication>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication)
    MergeFrom(*source);
  }
}

void UsCoreMedicationstatement_Medication::MergeFrom(const UsCoreMedicationstatement_Medication& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.medication_case()) {
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case MEDICATION_NOT_SET: {
      break;
    }
  }
}

void UsCoreMedicationstatement_Medication::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreMedicationstatement_Medication::CopyFrom(const UsCoreMedicationstatement_Medication& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreMedicationstatement_Medication::IsInitialized() const {
  return true;
}

void UsCoreMedicationstatement_Medication::Swap(UsCoreMedicationstatement_Medication* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreMedicationstatement_Medication::InternalSwap(UsCoreMedicationstatement_Medication* other) {
  using std::swap;
  swap(medication_, other->medication_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreMedicationstatement_Medication::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreMedicationstatement_Effective::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreMedicationstatement_Effective_default_instance_.date_time_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationstatement_Effective_default_instance_.period_ = const_cast< ::google::fhir::stu3::proto::Period*>(
      ::google::fhir::stu3::proto::Period::internal_default_instance());
}
void UsCoreMedicationstatement_Effective::set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_effective();
  if (date_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date_time, submessage_arena);
    }
    set_has_date_time();
    effective_.date_time_ = date_time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective.date_time)
}
void UsCoreMedicationstatement_Effective::clear_date_time() {
  if (has_date_time()) {
    delete effective_.date_time_;
    clear_has_effective();
  }
}
void UsCoreMedicationstatement_Effective::set_allocated_period(::google::fhir::stu3::proto::Period* period) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_effective();
  if (period) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      period = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, period, submessage_arena);
    }
    set_has_period();
    effective_.period_ = period;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective.period)
}
void UsCoreMedicationstatement_Effective::clear_period() {
  if (has_period()) {
    delete effective_.period_;
    clear_has_effective();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreMedicationstatement_Effective::kDateTimeFieldNumber;
const int UsCoreMedicationstatement_Effective::kPeriodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreMedicationstatement_Effective::UsCoreMedicationstatement_Effective()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedicationstatement_Effective.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective)
}
UsCoreMedicationstatement_Effective::UsCoreMedicationstatement_Effective(const UsCoreMedicationstatement_Effective& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_effective();
  switch (from.effective_case()) {
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case EFFECTIVE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective)
}

void UsCoreMedicationstatement_Effective::SharedCtor() {
  clear_has_effective();
}

UsCoreMedicationstatement_Effective::~UsCoreMedicationstatement_Effective() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective)
  SharedDtor();
}

void UsCoreMedicationstatement_Effective::SharedDtor() {
  if (has_effective()) {
    clear_effective();
  }
}

void UsCoreMedicationstatement_Effective::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreMedicationstatement_Effective::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreMedicationstatement_Effective& UsCoreMedicationstatement_Effective::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedicationstatement_Effective.base);
  return *internal_default_instance();
}


void UsCoreMedicationstatement_Effective::clear_effective() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective)
  switch (effective_case()) {
    case kDateTime: {
      delete effective_.date_time_;
      break;
    }
    case kPeriod: {
      delete effective_.period_;
      break;
    }
    case EFFECTIVE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EFFECTIVE_NOT_SET;
}


void UsCoreMedicationstatement_Effective::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_effective();
  _internal_metadata_.Clear();
}

bool UsCoreMedicationstatement_Effective::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.DateTime date_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Period period = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective)
  return false;
#undef DO_
}

void UsCoreMedicationstatement_Effective::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.DateTime date_time = 1;
  if (has_date_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_date_time(), output);
  }

  // .google.fhir.stu3.proto.Period period = 2;
  if (has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_period(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective)
}

::google::protobuf::uint8* UsCoreMedicationstatement_Effective::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.DateTime date_time = 1;
  if (has_date_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_date_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Period period = 2;
  if (has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_period(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective)
  return target;
}

size_t UsCoreMedicationstatement_Effective::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (effective_case()) {
    // .google.fhir.stu3.proto.DateTime date_time = 1;
    case kDateTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *effective_.date_time_);
      break;
    }
    // .google.fhir.stu3.proto.Period period = 2;
    case kPeriod: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *effective_.period_);
      break;
    }
    case EFFECTIVE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreMedicationstatement_Effective::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreMedicationstatement_Effective* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreMedicationstatement_Effective>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective)
    MergeFrom(*source);
  }
}

void UsCoreMedicationstatement_Effective::MergeFrom(const UsCoreMedicationstatement_Effective& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.effective_case()) {
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case EFFECTIVE_NOT_SET: {
      break;
    }
  }
}

void UsCoreMedicationstatement_Effective::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreMedicationstatement_Effective::CopyFrom(const UsCoreMedicationstatement_Effective& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreMedicationstatement_Effective::IsInitialized() const {
  return true;
}

void UsCoreMedicationstatement_Effective::Swap(UsCoreMedicationstatement_Effective* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreMedicationstatement_Effective::InternalSwap(UsCoreMedicationstatement_Effective* other) {
  using std::swap;
  swap(effective_, other->effective_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreMedicationstatement_Effective::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreMedicationstatement::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreMedicationstatement_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::Id*>(
      ::google::fhir::stu3::proto::Id::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationstatement_default_instance_._instance.get_mutable()->meta_ = const_cast< ::google::fhir::stu3::proto::Meta*>(
      ::google::fhir::stu3::proto::Meta::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationstatement_default_instance_._instance.get_mutable()->implicit_rules_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationstatement_default_instance_._instance.get_mutable()->language_ = const_cast< ::google::fhir::stu3::proto::LanguageCode*>(
      ::google::fhir::stu3::proto::LanguageCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationstatement_default_instance_._instance.get_mutable()->text_ = const_cast< ::google::fhir::stu3::proto::Narrative*>(
      ::google::fhir::stu3::proto::Narrative::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationstatement_default_instance_._instance.get_mutable()->context_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationstatement_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::fhir::stu3::proto::MedicationStatementStatusCode*>(
      ::google::fhir::stu3::proto::MedicationStatementStatusCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationstatement_default_instance_._instance.get_mutable()->category_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationstatement_default_instance_._instance.get_mutable()->medication_ = const_cast< ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Medication*>(
      ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Medication::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationstatement_default_instance_._instance.get_mutable()->effective_ = const_cast< ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Effective*>(
      ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Effective::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationstatement_default_instance_._instance.get_mutable()->date_asserted_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationstatement_default_instance_._instance.get_mutable()->information_source_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationstatement_default_instance_._instance.get_mutable()->subject_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreMedicationstatement_default_instance_._instance.get_mutable()->taken_ = const_cast< ::google::fhir::stu3::proto::MedicationStatementTakenCode*>(
      ::google::fhir::stu3::proto::MedicationStatementTakenCode::internal_default_instance());
}
void UsCoreMedicationstatement::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreMedicationstatement::clear_meta() {
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
}
void UsCoreMedicationstatement::clear_implicit_rules() {
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
}
void UsCoreMedicationstatement::clear_language() {
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
}
void UsCoreMedicationstatement::clear_text() {
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
}
void UsCoreMedicationstatement::clear_contained() {
  contained_.Clear();
}
void UsCoreMedicationstatement::clear_extension() {
  extension_.Clear();
}
void UsCoreMedicationstatement::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreMedicationstatement::clear_identifier() {
  identifier_.Clear();
}
void UsCoreMedicationstatement::clear_based_on() {
  based_on_.Clear();
}
void UsCoreMedicationstatement::clear_part_of() {
  part_of_.Clear();
}
void UsCoreMedicationstatement::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
}
void UsCoreMedicationstatement::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
void UsCoreMedicationstatement::clear_category() {
  if (GetArenaNoVirtual() == NULL && category_ != NULL) {
    delete category_;
  }
  category_ = NULL;
}
void UsCoreMedicationstatement::clear_date_asserted() {
  if (GetArenaNoVirtual() == NULL && date_asserted_ != NULL) {
    delete date_asserted_;
  }
  date_asserted_ = NULL;
}
void UsCoreMedicationstatement::clear_information_source() {
  if (GetArenaNoVirtual() == NULL && information_source_ != NULL) {
    delete information_source_;
  }
  information_source_ = NULL;
}
void UsCoreMedicationstatement::clear_subject() {
  if (GetArenaNoVirtual() == NULL && subject_ != NULL) {
    delete subject_;
  }
  subject_ = NULL;
}
void UsCoreMedicationstatement::clear_derived_from() {
  derived_from_.Clear();
}
void UsCoreMedicationstatement::clear_taken() {
  if (GetArenaNoVirtual() == NULL && taken_ != NULL) {
    delete taken_;
  }
  taken_ = NULL;
}
void UsCoreMedicationstatement::clear_reason_not_taken() {
  reason_not_taken_.Clear();
}
void UsCoreMedicationstatement::clear_reason_code() {
  reason_code_.Clear();
}
void UsCoreMedicationstatement::clear_reason_reference() {
  reason_reference_.Clear();
}
void UsCoreMedicationstatement::clear_note() {
  note_.Clear();
}
void UsCoreMedicationstatement::clear_dosage() {
  dosage_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreMedicationstatement::kIdFieldNumber;
const int UsCoreMedicationstatement::kMetaFieldNumber;
const int UsCoreMedicationstatement::kImplicitRulesFieldNumber;
const int UsCoreMedicationstatement::kLanguageFieldNumber;
const int UsCoreMedicationstatement::kTextFieldNumber;
const int UsCoreMedicationstatement::kContainedFieldNumber;
const int UsCoreMedicationstatement::kExtensionFieldNumber;
const int UsCoreMedicationstatement::kModifierExtensionFieldNumber;
const int UsCoreMedicationstatement::kIdentifierFieldNumber;
const int UsCoreMedicationstatement::kBasedOnFieldNumber;
const int UsCoreMedicationstatement::kPartOfFieldNumber;
const int UsCoreMedicationstatement::kContextFieldNumber;
const int UsCoreMedicationstatement::kStatusFieldNumber;
const int UsCoreMedicationstatement::kCategoryFieldNumber;
const int UsCoreMedicationstatement::kMedicationFieldNumber;
const int UsCoreMedicationstatement::kEffectiveFieldNumber;
const int UsCoreMedicationstatement::kDateAssertedFieldNumber;
const int UsCoreMedicationstatement::kInformationSourceFieldNumber;
const int UsCoreMedicationstatement::kSubjectFieldNumber;
const int UsCoreMedicationstatement::kDerivedFromFieldNumber;
const int UsCoreMedicationstatement::kTakenFieldNumber;
const int UsCoreMedicationstatement::kReasonNotTakenFieldNumber;
const int UsCoreMedicationstatement::kReasonCodeFieldNumber;
const int UsCoreMedicationstatement::kReasonReferenceFieldNumber;
const int UsCoreMedicationstatement::kNoteFieldNumber;
const int UsCoreMedicationstatement::kDosageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreMedicationstatement::UsCoreMedicationstatement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedicationstatement.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreMedicationstatement)
}
UsCoreMedicationstatement::UsCoreMedicationstatement(const UsCoreMedicationstatement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      contained_(from.contained_),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      identifier_(from.identifier_),
      based_on_(from.based_on_),
      part_of_(from.part_of_),
      derived_from_(from.derived_from_),
      reason_not_taken_(from.reason_not_taken_),
      reason_code_(from.reason_code_),
      reason_reference_(from.reason_reference_),
      note_(from.note_),
      dosage_(from.dosage_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::Id(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_meta()) {
    meta_ = new ::google::fhir::stu3::proto::Meta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  if (from.has_implicit_rules()) {
    implicit_rules_ = new ::google::fhir::stu3::proto::Uri(*from.implicit_rules_);
  } else {
    implicit_rules_ = NULL;
  }
  if (from.has_language()) {
    language_ = new ::google::fhir::stu3::proto::LanguageCode(*from.language_);
  } else {
    language_ = NULL;
  }
  if (from.has_text()) {
    text_ = new ::google::fhir::stu3::proto::Narrative(*from.text_);
  } else {
    text_ = NULL;
  }
  if (from.has_context()) {
    context_ = new ::google::fhir::stu3::proto::Reference(*from.context_);
  } else {
    context_ = NULL;
  }
  if (from.has_status()) {
    status_ = new ::google::fhir::stu3::proto::MedicationStatementStatusCode(*from.status_);
  } else {
    status_ = NULL;
  }
  if (from.has_category()) {
    category_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.category_);
  } else {
    category_ = NULL;
  }
  if (from.has_medication()) {
    medication_ = new ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Medication(*from.medication_);
  } else {
    medication_ = NULL;
  }
  if (from.has_effective()) {
    effective_ = new ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Effective(*from.effective_);
  } else {
    effective_ = NULL;
  }
  if (from.has_date_asserted()) {
    date_asserted_ = new ::google::fhir::stu3::proto::DateTime(*from.date_asserted_);
  } else {
    date_asserted_ = NULL;
  }
  if (from.has_information_source()) {
    information_source_ = new ::google::fhir::stu3::proto::Reference(*from.information_source_);
  } else {
    information_source_ = NULL;
  }
  if (from.has_subject()) {
    subject_ = new ::google::fhir::stu3::proto::Reference(*from.subject_);
  } else {
    subject_ = NULL;
  }
  if (from.has_taken()) {
    taken_ = new ::google::fhir::stu3::proto::MedicationStatementTakenCode(*from.taken_);
  } else {
    taken_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreMedicationstatement)
}

void UsCoreMedicationstatement::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&taken_) -
      reinterpret_cast<char*>(&id_)) + sizeof(taken_));
}

UsCoreMedicationstatement::~UsCoreMedicationstatement() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreMedicationstatement)
  SharedDtor();
}

void UsCoreMedicationstatement::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete implicit_rules_;
  if (this != internal_default_instance()) delete language_;
  if (this != internal_default_instance()) delete text_;
  if (this != internal_default_instance()) delete context_;
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete category_;
  if (this != internal_default_instance()) delete medication_;
  if (this != internal_default_instance()) delete effective_;
  if (this != internal_default_instance()) delete date_asserted_;
  if (this != internal_default_instance()) delete information_source_;
  if (this != internal_default_instance()) delete subject_;
  if (this != internal_default_instance()) delete taken_;
}

void UsCoreMedicationstatement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreMedicationstatement::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreMedicationstatement& UsCoreMedicationstatement::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreMedicationstatement.base);
  return *internal_default_instance();
}


void UsCoreMedicationstatement::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreMedicationstatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contained_.Clear();
  extension_.Clear();
  modifier_extension_.Clear();
  identifier_.Clear();
  based_on_.Clear();
  part_of_.Clear();
  derived_from_.Clear();
  reason_not_taken_.Clear();
  reason_code_.Clear();
  reason_reference_.Clear();
  note_.Clear();
  dosage_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  if (GetArenaNoVirtual() == NULL && category_ != NULL) {
    delete category_;
  }
  category_ = NULL;
  if (GetArenaNoVirtual() == NULL && medication_ != NULL) {
    delete medication_;
  }
  medication_ = NULL;
  if (GetArenaNoVirtual() == NULL && effective_ != NULL) {
    delete effective_;
  }
  effective_ = NULL;
  if (GetArenaNoVirtual() == NULL && date_asserted_ != NULL) {
    delete date_asserted_;
  }
  date_asserted_ = NULL;
  if (GetArenaNoVirtual() == NULL && information_source_ != NULL) {
    delete information_source_;
  }
  information_source_ = NULL;
  if (GetArenaNoVirtual() == NULL && subject_ != NULL) {
    delete subject_;
  }
  subject_ = NULL;
  if (GetArenaNoVirtual() == NULL && taken_ != NULL) {
    delete taken_;
  }
  taken_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreMedicationstatement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreMedicationstatement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Id id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Meta meta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri implicit_rules = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_implicit_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.LanguageCode language = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_language()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Narrative text = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_contained()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference based_on = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_based_on()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference part_of = 11 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationAdministration", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationDispense", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationStatement", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Procedure", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_part_of()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference context = 12 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.MedicationStatementStatusCode status = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept category = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_category()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication medication = 15 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_medication()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective effective = 16 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_effective()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DateTime date_asserted = 17 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date_asserted()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference information_source = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_information_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference subject = 19 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_subject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference derived_from = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_derived_from()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.MedicationStatementTakenCode taken = 21 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_taken()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept reason_not_taken = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_reason_not_taken()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept reason_code = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_reason_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference reason_reference = 24 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_reason_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Annotation note = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_note()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Dosage dosage = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_dosage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreMedicationstatement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreMedicationstatement)
  return false;
#undef DO_
}

void UsCoreMedicationstatement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreMedicationstatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_meta(), output);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_implicit_rules(), output);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_language(), output);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_text(), output);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->contained(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->identifier(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference based_on = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->based_on_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->based_on(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference part_of = 11 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationAdministration", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationDispense", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationStatement", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Procedure", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->part_of_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->part_of(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Reference context = 12 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_context(), output);
  }

  // .google.fhir.stu3.proto.MedicationStatementStatusCode status = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_status(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept category = 14;
  if (this->has_category()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_category(), output);
  }

  // .google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication medication = 15 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_medication()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_medication(), output);
  }

  // .google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective effective = 16 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_effective()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_effective(), output);
  }

  // .google.fhir.stu3.proto.DateTime date_asserted = 17 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_date_asserted()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_date_asserted(), output);
  }

  // .google.fhir.stu3.proto.Reference information_source = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_information_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_information_source(), output);
  }

  // .google.fhir.stu3.proto.Reference subject = 19 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_subject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_subject(), output);
  }

  // repeated .google.fhir.stu3.proto.Reference derived_from = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->derived_from_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20,
      this->derived_from(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.MedicationStatementTakenCode taken = 21 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_taken()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_taken(), output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept reason_not_taken = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reason_not_taken_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22,
      this->reason_not_taken(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept reason_code = 23;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reason_code_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23,
      this->reason_code(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference reason_reference = 24 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reason_reference_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24,
      this->reason_reference(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 25;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->note_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25,
      this->note(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Dosage dosage = 26;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dosage_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26,
      this->dosage(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreMedicationstatement)
}

::google::protobuf::uint8* UsCoreMedicationstatement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreMedicationstatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_meta(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_implicit_rules(), deterministic, target);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_language(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_text(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->contained(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->identifier(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference based_on = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->based_on_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->based_on(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference part_of = 11 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationAdministration", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationDispense", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationStatement", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Procedure", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->part_of_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->part_of(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference context = 12 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_context(), deterministic, target);
  }

  // .google.fhir.stu3.proto.MedicationStatementStatusCode status = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_status(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept category = 14;
  if (this->has_category()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_category(), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication medication = 15 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_medication()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_medication(), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective effective = 16 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_effective()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_effective(), deterministic, target);
  }

  // .google.fhir.stu3.proto.DateTime date_asserted = 17 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_date_asserted()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_date_asserted(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference information_source = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_information_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_information_source(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference subject = 19 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_subject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_subject(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference derived_from = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->derived_from_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->derived_from(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.MedicationStatementTakenCode taken = 21 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_taken()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_taken(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept reason_not_taken = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reason_not_taken_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->reason_not_taken(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept reason_code = 23;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reason_code_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->reason_code(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference reason_reference = 24 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reason_reference_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->reason_reference(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 25;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->note_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->note(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Dosage dosage = 26;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dosage_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, this->dosage(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreMedicationstatement)
  return target;
}

size_t UsCoreMedicationstatement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreMedicationstatement)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->contained_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->contained(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->identifier_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->identifier(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference based_on = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
  {
    unsigned int count = static_cast<unsigned int>(this->based_on_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->based_on(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference part_of = 11 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationAdministration", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationDispense", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationStatement", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Procedure", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
  {
    unsigned int count = static_cast<unsigned int>(this->part_of_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->part_of(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference derived_from = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
  {
    unsigned int count = static_cast<unsigned int>(this->derived_from_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->derived_from(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept reason_not_taken = 22;
  {
    unsigned int count = static_cast<unsigned int>(this->reason_not_taken_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reason_not_taken(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept reason_code = 23;
  {
    unsigned int count = static_cast<unsigned int>(this->reason_code_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reason_code(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference reason_reference = 24 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
  {
    unsigned int count = static_cast<unsigned int>(this->reason_reference_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reason_reference(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 25;
  {
    unsigned int count = static_cast<unsigned int>(this->note_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->note(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Dosage dosage = 26;
  {
    unsigned int count = static_cast<unsigned int>(this->dosage_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dosage(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *implicit_rules_);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *language_);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *text_);
  }

  // .google.fhir.stu3.proto.Reference context = 12 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  // .google.fhir.stu3.proto.MedicationStatementStatusCode status = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .google.fhir.stu3.proto.CodeableConcept category = 14;
  if (this->has_category()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *category_);
  }

  // .google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication medication = 15 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_medication()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *medication_);
  }

  // .google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective effective = 16 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_effective()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *effective_);
  }

  // .google.fhir.stu3.proto.DateTime date_asserted = 17 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_date_asserted()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *date_asserted_);
  }

  // .google.fhir.stu3.proto.Reference information_source = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_information_source()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *information_source_);
  }

  // .google.fhir.stu3.proto.Reference subject = 19 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_subject()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *subject_);
  }

  // .google.fhir.stu3.proto.MedicationStatementTakenCode taken = 21 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_taken()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *taken_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreMedicationstatement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreMedicationstatement)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreMedicationstatement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreMedicationstatement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreMedicationstatement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreMedicationstatement)
    MergeFrom(*source);
  }
}

void UsCoreMedicationstatement::MergeFrom(const UsCoreMedicationstatement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreMedicationstatement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contained_.MergeFrom(from.contained_);
  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  identifier_.MergeFrom(from.identifier_);
  based_on_.MergeFrom(from.based_on_);
  part_of_.MergeFrom(from.part_of_);
  derived_from_.MergeFrom(from.derived_from_);
  reason_not_taken_.MergeFrom(from.reason_not_taken_);
  reason_code_.MergeFrom(from.reason_code_);
  reason_reference_.MergeFrom(from.reason_reference_);
  note_.MergeFrom(from.note_);
  dosage_.MergeFrom(from.dosage_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::Id::MergeFrom(from.id());
  }
  if (from.has_meta()) {
    mutable_meta()->::google::fhir::stu3::proto::Meta::MergeFrom(from.meta());
  }
  if (from.has_implicit_rules()) {
    mutable_implicit_rules()->::google::fhir::stu3::proto::Uri::MergeFrom(from.implicit_rules());
  }
  if (from.has_language()) {
    mutable_language()->::google::fhir::stu3::proto::LanguageCode::MergeFrom(from.language());
  }
  if (from.has_text()) {
    mutable_text()->::google::fhir::stu3::proto::Narrative::MergeFrom(from.text());
  }
  if (from.has_context()) {
    mutable_context()->::google::fhir::stu3::proto::Reference::MergeFrom(from.context());
  }
  if (from.has_status()) {
    mutable_status()->::google::fhir::stu3::proto::MedicationStatementStatusCode::MergeFrom(from.status());
  }
  if (from.has_category()) {
    mutable_category()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.category());
  }
  if (from.has_medication()) {
    mutable_medication()->::google::fhir::stu3::uscore::UsCoreMedicationstatement_Medication::MergeFrom(from.medication());
  }
  if (from.has_effective()) {
    mutable_effective()->::google::fhir::stu3::uscore::UsCoreMedicationstatement_Effective::MergeFrom(from.effective());
  }
  if (from.has_date_asserted()) {
    mutable_date_asserted()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_asserted());
  }
  if (from.has_information_source()) {
    mutable_information_source()->::google::fhir::stu3::proto::Reference::MergeFrom(from.information_source());
  }
  if (from.has_subject()) {
    mutable_subject()->::google::fhir::stu3::proto::Reference::MergeFrom(from.subject());
  }
  if (from.has_taken()) {
    mutable_taken()->::google::fhir::stu3::proto::MedicationStatementTakenCode::MergeFrom(from.taken());
  }
}

void UsCoreMedicationstatement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreMedicationstatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreMedicationstatement::CopyFrom(const UsCoreMedicationstatement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreMedicationstatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreMedicationstatement::IsInitialized() const {
  return true;
}

void UsCoreMedicationstatement::Swap(UsCoreMedicationstatement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreMedicationstatement::InternalSwap(UsCoreMedicationstatement* other) {
  using std::swap;
  CastToBase(&contained_)->InternalSwap(CastToBase(&other->contained_));
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&identifier_)->InternalSwap(CastToBase(&other->identifier_));
  CastToBase(&based_on_)->InternalSwap(CastToBase(&other->based_on_));
  CastToBase(&part_of_)->InternalSwap(CastToBase(&other->part_of_));
  CastToBase(&derived_from_)->InternalSwap(CastToBase(&other->derived_from_));
  CastToBase(&reason_not_taken_)->InternalSwap(CastToBase(&other->reason_not_taken_));
  CastToBase(&reason_code_)->InternalSwap(CastToBase(&other->reason_code_));
  CastToBase(&reason_reference_)->InternalSwap(CastToBase(&other->reason_reference_));
  CastToBase(&note_)->InternalSwap(CastToBase(&other->note_));
  CastToBase(&dosage_)->InternalSwap(CastToBase(&other->dosage_));
  swap(id_, other->id_);
  swap(meta_, other->meta_);
  swap(implicit_rules_, other->implicit_rules_);
  swap(language_, other->language_);
  swap(text_, other->text_);
  swap(context_, other->context_);
  swap(status_, other->status_);
  swap(category_, other->category_);
  swap(medication_, other->medication_);
  swap(effective_, other->effective_);
  swap(date_asserted_, other->date_asserted_);
  swap(information_source_, other->information_source_);
  swap(subject_, other->subject_);
  swap(taken_, other->taken_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreMedicationstatement::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreObservationresults_Effective::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Effective_default_instance_.date_time_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Effective_default_instance_.period_ = const_cast< ::google::fhir::stu3::proto::Period*>(
      ::google::fhir::stu3::proto::Period::internal_default_instance());
}
void UsCoreObservationresults_Effective::set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_effective();
  if (date_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date_time, submessage_arena);
    }
    set_has_date_time();
    effective_.date_time_ = date_time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Effective.date_time)
}
void UsCoreObservationresults_Effective::clear_date_time() {
  if (has_date_time()) {
    delete effective_.date_time_;
    clear_has_effective();
  }
}
void UsCoreObservationresults_Effective::set_allocated_period(::google::fhir::stu3::proto::Period* period) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_effective();
  if (period) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      period = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, period, submessage_arena);
    }
    set_has_period();
    effective_.period_ = period;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Effective.period)
}
void UsCoreObservationresults_Effective::clear_period() {
  if (has_period()) {
    delete effective_.period_;
    clear_has_effective();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreObservationresults_Effective::kDateTimeFieldNumber;
const int UsCoreObservationresults_Effective::kPeriodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreObservationresults_Effective::UsCoreObservationresults_Effective()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreObservationresults_Effective.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreObservationresults.Effective)
}
UsCoreObservationresults_Effective::UsCoreObservationresults_Effective(const UsCoreObservationresults_Effective& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_effective();
  switch (from.effective_case()) {
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case EFFECTIVE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreObservationresults.Effective)
}

void UsCoreObservationresults_Effective::SharedCtor() {
  clear_has_effective();
}

UsCoreObservationresults_Effective::~UsCoreObservationresults_Effective() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreObservationresults.Effective)
  SharedDtor();
}

void UsCoreObservationresults_Effective::SharedDtor() {
  if (has_effective()) {
    clear_effective();
  }
}

void UsCoreObservationresults_Effective::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreObservationresults_Effective::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreObservationresults_Effective& UsCoreObservationresults_Effective::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreObservationresults_Effective.base);
  return *internal_default_instance();
}


void UsCoreObservationresults_Effective::clear_effective() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.uscore.UsCoreObservationresults.Effective)
  switch (effective_case()) {
    case kDateTime: {
      delete effective_.date_time_;
      break;
    }
    case kPeriod: {
      delete effective_.period_;
      break;
    }
    case EFFECTIVE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EFFECTIVE_NOT_SET;
}


void UsCoreObservationresults_Effective::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreObservationresults.Effective)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_effective();
  _internal_metadata_.Clear();
}

bool UsCoreObservationresults_Effective::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreObservationresults.Effective)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.DateTime date_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Period period = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreObservationresults.Effective)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreObservationresults.Effective)
  return false;
#undef DO_
}

void UsCoreObservationresults_Effective::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreObservationresults.Effective)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.DateTime date_time = 1;
  if (has_date_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_date_time(), output);
  }

  // .google.fhir.stu3.proto.Period period = 2;
  if (has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_period(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreObservationresults.Effective)
}

::google::protobuf::uint8* UsCoreObservationresults_Effective::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreObservationresults.Effective)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.DateTime date_time = 1;
  if (has_date_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_date_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Period period = 2;
  if (has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_period(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreObservationresults.Effective)
  return target;
}

size_t UsCoreObservationresults_Effective::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreObservationresults.Effective)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (effective_case()) {
    // .google.fhir.stu3.proto.DateTime date_time = 1;
    case kDateTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *effective_.date_time_);
      break;
    }
    // .google.fhir.stu3.proto.Period period = 2;
    case kPeriod: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *effective_.period_);
      break;
    }
    case EFFECTIVE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreObservationresults_Effective::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreObservationresults.Effective)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreObservationresults_Effective* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreObservationresults_Effective>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreObservationresults.Effective)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreObservationresults.Effective)
    MergeFrom(*source);
  }
}

void UsCoreObservationresults_Effective::MergeFrom(const UsCoreObservationresults_Effective& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreObservationresults.Effective)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.effective_case()) {
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case EFFECTIVE_NOT_SET: {
      break;
    }
  }
}

void UsCoreObservationresults_Effective::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreObservationresults.Effective)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreObservationresults_Effective::CopyFrom(const UsCoreObservationresults_Effective& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreObservationresults.Effective)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreObservationresults_Effective::IsInitialized() const {
  return true;
}

void UsCoreObservationresults_Effective::Swap(UsCoreObservationresults_Effective* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreObservationresults_Effective::InternalSwap(UsCoreObservationresults_Effective* other) {
  using std::swap;
  swap(effective_, other->effective_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreObservationresults_Effective::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreObservationresults_Value::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Value_default_instance_.quantity_ = const_cast< ::google::fhir::stu3::proto::Quantity*>(
      ::google::fhir::stu3::proto::Quantity::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Value_default_instance_.codeable_concept_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Value_default_instance_.string_value_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Value_default_instance_.boolean_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Value_default_instance_.range_ = const_cast< ::google::fhir::stu3::proto::Range*>(
      ::google::fhir::stu3::proto::Range::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Value_default_instance_.ratio_ = const_cast< ::google::fhir::stu3::proto::Ratio*>(
      ::google::fhir::stu3::proto::Ratio::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Value_default_instance_.sampled_data_ = const_cast< ::google::fhir::stu3::proto::SampledData*>(
      ::google::fhir::stu3::proto::SampledData::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Value_default_instance_.attachment_ = const_cast< ::google::fhir::stu3::proto::Attachment*>(
      ::google::fhir::stu3::proto::Attachment::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Value_default_instance_.time_ = const_cast< ::google::fhir::stu3::proto::Time*>(
      ::google::fhir::stu3::proto::Time::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Value_default_instance_.date_time_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Value_default_instance_.period_ = const_cast< ::google::fhir::stu3::proto::Period*>(
      ::google::fhir::stu3::proto::Period::internal_default_instance());
}
void UsCoreObservationresults_Value::set_allocated_quantity(::google::fhir::stu3::proto::Quantity* quantity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (quantity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      quantity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, quantity, submessage_arena);
    }
    set_has_quantity();
    value_.quantity_ = quantity;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Value.quantity)
}
void UsCoreObservationresults_Value::clear_quantity() {
  if (has_quantity()) {
    delete value_.quantity_;
    clear_has_value();
  }
}
void UsCoreObservationresults_Value::set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (codeable_concept) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      codeable_concept = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, codeable_concept, submessage_arena);
    }
    set_has_codeable_concept();
    value_.codeable_concept_ = codeable_concept;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Value.codeable_concept)
}
void UsCoreObservationresults_Value::clear_codeable_concept() {
  if (has_codeable_concept()) {
    delete value_.codeable_concept_;
    clear_has_value();
  }
}
void UsCoreObservationresults_Value::set_allocated_string_value(::google::fhir::stu3::proto::String* string_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (string_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      string_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, string_value, submessage_arena);
    }
    set_has_string_value();
    value_.string_value_ = string_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Value.string_value)
}
void UsCoreObservationresults_Value::clear_string_value() {
  if (has_string_value()) {
    delete value_.string_value_;
    clear_has_value();
  }
}
void UsCoreObservationresults_Value::set_allocated_boolean(::google::fhir::stu3::proto::Boolean* boolean) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (boolean) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      boolean = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, boolean, submessage_arena);
    }
    set_has_boolean();
    value_.boolean_ = boolean;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Value.boolean)
}
void UsCoreObservationresults_Value::clear_boolean() {
  if (has_boolean()) {
    delete value_.boolean_;
    clear_has_value();
  }
}
void UsCoreObservationresults_Value::set_allocated_range(::google::fhir::stu3::proto::Range* range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (range) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, range, submessage_arena);
    }
    set_has_range();
    value_.range_ = range;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Value.range)
}
void UsCoreObservationresults_Value::clear_range() {
  if (has_range()) {
    delete value_.range_;
    clear_has_value();
  }
}
void UsCoreObservationresults_Value::set_allocated_ratio(::google::fhir::stu3::proto::Ratio* ratio) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (ratio) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ratio = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ratio, submessage_arena);
    }
    set_has_ratio();
    value_.ratio_ = ratio;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Value.ratio)
}
void UsCoreObservationresults_Value::clear_ratio() {
  if (has_ratio()) {
    delete value_.ratio_;
    clear_has_value();
  }
}
void UsCoreObservationresults_Value::set_allocated_sampled_data(::google::fhir::stu3::proto::SampledData* sampled_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (sampled_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sampled_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sampled_data, submessage_arena);
    }
    set_has_sampled_data();
    value_.sampled_data_ = sampled_data;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Value.sampled_data)
}
void UsCoreObservationresults_Value::clear_sampled_data() {
  if (has_sampled_data()) {
    delete value_.sampled_data_;
    clear_has_value();
  }
}
void UsCoreObservationresults_Value::set_allocated_attachment(::google::fhir::stu3::proto::Attachment* attachment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (attachment) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      attachment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, attachment, submessage_arena);
    }
    set_has_attachment();
    value_.attachment_ = attachment;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Value.attachment)
}
void UsCoreObservationresults_Value::clear_attachment() {
  if (has_attachment()) {
    delete value_.attachment_;
    clear_has_value();
  }
}
void UsCoreObservationresults_Value::set_allocated_time(::google::fhir::stu3::proto::Time* time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time, submessage_arena);
    }
    set_has_time();
    value_.time_ = time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Value.time)
}
void UsCoreObservationresults_Value::clear_time() {
  if (has_time()) {
    delete value_.time_;
    clear_has_value();
  }
}
void UsCoreObservationresults_Value::set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (date_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date_time, submessage_arena);
    }
    set_has_date_time();
    value_.date_time_ = date_time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Value.date_time)
}
void UsCoreObservationresults_Value::clear_date_time() {
  if (has_date_time()) {
    delete value_.date_time_;
    clear_has_value();
  }
}
void UsCoreObservationresults_Value::set_allocated_period(::google::fhir::stu3::proto::Period* period) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (period) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      period = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, period, submessage_arena);
    }
    set_has_period();
    value_.period_ = period;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Value.period)
}
void UsCoreObservationresults_Value::clear_period() {
  if (has_period()) {
    delete value_.period_;
    clear_has_value();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreObservationresults_Value::kQuantityFieldNumber;
const int UsCoreObservationresults_Value::kCodeableConceptFieldNumber;
const int UsCoreObservationresults_Value::kStringValueFieldNumber;
const int UsCoreObservationresults_Value::kBooleanFieldNumber;
const int UsCoreObservationresults_Value::kRangeFieldNumber;
const int UsCoreObservationresults_Value::kRatioFieldNumber;
const int UsCoreObservationresults_Value::kSampledDataFieldNumber;
const int UsCoreObservationresults_Value::kAttachmentFieldNumber;
const int UsCoreObservationresults_Value::kTimeFieldNumber;
const int UsCoreObservationresults_Value::kDateTimeFieldNumber;
const int UsCoreObservationresults_Value::kPeriodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreObservationresults_Value::UsCoreObservationresults_Value()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreObservationresults_Value.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreObservationresults.Value)
}
UsCoreObservationresults_Value::UsCoreObservationresults_Value(const UsCoreObservationresults_Value& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kQuantity: {
      mutable_quantity()->::google::fhir::stu3::proto::Quantity::MergeFrom(from.quantity());
      break;
    }
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case kStringValue: {
      mutable_string_value()->::google::fhir::stu3::proto::String::MergeFrom(from.string_value());
      break;
    }
    case kBoolean: {
      mutable_boolean()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.boolean());
      break;
    }
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case kRatio: {
      mutable_ratio()->::google::fhir::stu3::proto::Ratio::MergeFrom(from.ratio());
      break;
    }
    case kSampledData: {
      mutable_sampled_data()->::google::fhir::stu3::proto::SampledData::MergeFrom(from.sampled_data());
      break;
    }
    case kAttachment: {
      mutable_attachment()->::google::fhir::stu3::proto::Attachment::MergeFrom(from.attachment());
      break;
    }
    case kTime: {
      mutable_time()->::google::fhir::stu3::proto::Time::MergeFrom(from.time());
      break;
    }
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreObservationresults.Value)
}

void UsCoreObservationresults_Value::SharedCtor() {
  clear_has_value();
}

UsCoreObservationresults_Value::~UsCoreObservationresults_Value() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreObservationresults.Value)
  SharedDtor();
}

void UsCoreObservationresults_Value::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
}

void UsCoreObservationresults_Value::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreObservationresults_Value::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreObservationresults_Value& UsCoreObservationresults_Value::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreObservationresults_Value.base);
  return *internal_default_instance();
}


void UsCoreObservationresults_Value::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.uscore.UsCoreObservationresults.Value)
  switch (value_case()) {
    case kQuantity: {
      delete value_.quantity_;
      break;
    }
    case kCodeableConcept: {
      delete value_.codeable_concept_;
      break;
    }
    case kStringValue: {
      delete value_.string_value_;
      break;
    }
    case kBoolean: {
      delete value_.boolean_;
      break;
    }
    case kRange: {
      delete value_.range_;
      break;
    }
    case kRatio: {
      delete value_.ratio_;
      break;
    }
    case kSampledData: {
      delete value_.sampled_data_;
      break;
    }
    case kAttachment: {
      delete value_.attachment_;
      break;
    }
    case kTime: {
      delete value_.time_;
      break;
    }
    case kDateTime: {
      delete value_.date_time_;
      break;
    }
    case kPeriod: {
      delete value_.period_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void UsCoreObservationresults_Value::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreObservationresults.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear();
}

bool UsCoreObservationresults_Value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreObservationresults.Value)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Quantity quantity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_quantity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_codeable_concept()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String string_value = 3[json_name = "string"];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_string_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Boolean boolean = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_boolean()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Range range = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Ratio ratio = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ratio()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.SampledData sampled_data = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sampled_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Attachment attachment = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_attachment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Time time = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DateTime date_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Period period = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreObservationresults.Value)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreObservationresults.Value)
  return false;
#undef DO_
}

void UsCoreObservationresults_Value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreObservationresults.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Quantity quantity = 1;
  if (has_quantity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_quantity(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
  if (has_codeable_concept()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_codeable_concept(), output);
  }

  // .google.fhir.stu3.proto.String string_value = 3[json_name = "string"];
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_string_value(), output);
  }

  // .google.fhir.stu3.proto.Boolean boolean = 4;
  if (has_boolean()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_boolean(), output);
  }

  // .google.fhir.stu3.proto.Range range = 5;
  if (has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_range(), output);
  }

  // .google.fhir.stu3.proto.Ratio ratio = 6;
  if (has_ratio()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_ratio(), output);
  }

  // .google.fhir.stu3.proto.SampledData sampled_data = 7;
  if (has_sampled_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_sampled_data(), output);
  }

  // .google.fhir.stu3.proto.Attachment attachment = 8;
  if (has_attachment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_attachment(), output);
  }

  // .google.fhir.stu3.proto.Time time = 9;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_time(), output);
  }

  // .google.fhir.stu3.proto.DateTime date_time = 10;
  if (has_date_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_date_time(), output);
  }

  // .google.fhir.stu3.proto.Period period = 11;
  if (has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_period(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreObservationresults.Value)
}

::google::protobuf::uint8* UsCoreObservationresults_Value::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreObservationresults.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Quantity quantity = 1;
  if (has_quantity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_quantity(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
  if (has_codeable_concept()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_codeable_concept(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String string_value = 3[json_name = "string"];
  if (has_string_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_string_value(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Boolean boolean = 4;
  if (has_boolean()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_boolean(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Range range = 5;
  if (has_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_range(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Ratio ratio = 6;
  if (has_ratio()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_ratio(), deterministic, target);
  }

  // .google.fhir.stu3.proto.SampledData sampled_data = 7;
  if (has_sampled_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_sampled_data(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Attachment attachment = 8;
  if (has_attachment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_attachment(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Time time = 9;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.DateTime date_time = 10;
  if (has_date_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_date_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Period period = 11;
  if (has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_period(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreObservationresults.Value)
  return target;
}

size_t UsCoreObservationresults_Value::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreObservationresults.Value)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (value_case()) {
    // .google.fhir.stu3.proto.Quantity quantity = 1;
    case kQuantity: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.quantity_);
      break;
    }
    // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
    case kCodeableConcept: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.codeable_concept_);
      break;
    }
    // .google.fhir.stu3.proto.String string_value = 3[json_name = "string"];
    case kStringValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.string_value_);
      break;
    }
    // .google.fhir.stu3.proto.Boolean boolean = 4;
    case kBoolean: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.boolean_);
      break;
    }
    // .google.fhir.stu3.proto.Range range = 5;
    case kRange: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.range_);
      break;
    }
    // .google.fhir.stu3.proto.Ratio ratio = 6;
    case kRatio: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.ratio_);
      break;
    }
    // .google.fhir.stu3.proto.SampledData sampled_data = 7;
    case kSampledData: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.sampled_data_);
      break;
    }
    // .google.fhir.stu3.proto.Attachment attachment = 8;
    case kAttachment: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.attachment_);
      break;
    }
    // .google.fhir.stu3.proto.Time time = 9;
    case kTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.time_);
      break;
    }
    // .google.fhir.stu3.proto.DateTime date_time = 10;
    case kDateTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.date_time_);
      break;
    }
    // .google.fhir.stu3.proto.Period period = 11;
    case kPeriod: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.period_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreObservationresults_Value::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreObservationresults.Value)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreObservationresults_Value* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreObservationresults_Value>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreObservationresults.Value)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreObservationresults.Value)
    MergeFrom(*source);
  }
}

void UsCoreObservationresults_Value::MergeFrom(const UsCoreObservationresults_Value& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreObservationresults.Value)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kQuantity: {
      mutable_quantity()->::google::fhir::stu3::proto::Quantity::MergeFrom(from.quantity());
      break;
    }
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case kStringValue: {
      mutable_string_value()->::google::fhir::stu3::proto::String::MergeFrom(from.string_value());
      break;
    }
    case kBoolean: {
      mutable_boolean()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.boolean());
      break;
    }
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case kRatio: {
      mutable_ratio()->::google::fhir::stu3::proto::Ratio::MergeFrom(from.ratio());
      break;
    }
    case kSampledData: {
      mutable_sampled_data()->::google::fhir::stu3::proto::SampledData::MergeFrom(from.sampled_data());
      break;
    }
    case kAttachment: {
      mutable_attachment()->::google::fhir::stu3::proto::Attachment::MergeFrom(from.attachment());
      break;
    }
    case kTime: {
      mutable_time()->::google::fhir::stu3::proto::Time::MergeFrom(from.time());
      break;
    }
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void UsCoreObservationresults_Value::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreObservationresults.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreObservationresults_Value::CopyFrom(const UsCoreObservationresults_Value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreObservationresults.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreObservationresults_Value::IsInitialized() const {
  return true;
}

void UsCoreObservationresults_Value::Swap(UsCoreObservationresults_Value* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreObservationresults_Value::InternalSwap(UsCoreObservationresults_Value* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreObservationresults_Value::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreObservationresults_ReferenceRange::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_ReferenceRange_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_ReferenceRange_default_instance_._instance.get_mutable()->low_ = const_cast< ::google::fhir::stu3::proto::SimpleQuantity*>(
      ::google::fhir::stu3::proto::SimpleQuantity::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_ReferenceRange_default_instance_._instance.get_mutable()->high_ = const_cast< ::google::fhir::stu3::proto::SimpleQuantity*>(
      ::google::fhir::stu3::proto::SimpleQuantity::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_ReferenceRange_default_instance_._instance.get_mutable()->type_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_ReferenceRange_default_instance_._instance.get_mutable()->age_ = const_cast< ::google::fhir::stu3::proto::Range*>(
      ::google::fhir::stu3::proto::Range::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_ReferenceRange_default_instance_._instance.get_mutable()->text_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
void UsCoreObservationresults_ReferenceRange::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreObservationresults_ReferenceRange::clear_extension() {
  extension_.Clear();
}
void UsCoreObservationresults_ReferenceRange::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreObservationresults_ReferenceRange::clear_low() {
  if (GetArenaNoVirtual() == NULL && low_ != NULL) {
    delete low_;
  }
  low_ = NULL;
}
void UsCoreObservationresults_ReferenceRange::clear_high() {
  if (GetArenaNoVirtual() == NULL && high_ != NULL) {
    delete high_;
  }
  high_ = NULL;
}
void UsCoreObservationresults_ReferenceRange::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
}
void UsCoreObservationresults_ReferenceRange::clear_applies_to() {
  applies_to_.Clear();
}
void UsCoreObservationresults_ReferenceRange::clear_age() {
  if (GetArenaNoVirtual() == NULL && age_ != NULL) {
    delete age_;
  }
  age_ = NULL;
}
void UsCoreObservationresults_ReferenceRange::clear_text() {
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreObservationresults_ReferenceRange::kIdFieldNumber;
const int UsCoreObservationresults_ReferenceRange::kExtensionFieldNumber;
const int UsCoreObservationresults_ReferenceRange::kModifierExtensionFieldNumber;
const int UsCoreObservationresults_ReferenceRange::kLowFieldNumber;
const int UsCoreObservationresults_ReferenceRange::kHighFieldNumber;
const int UsCoreObservationresults_ReferenceRange::kTypeFieldNumber;
const int UsCoreObservationresults_ReferenceRange::kAppliesToFieldNumber;
const int UsCoreObservationresults_ReferenceRange::kAgeFieldNumber;
const int UsCoreObservationresults_ReferenceRange::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreObservationresults_ReferenceRange::UsCoreObservationresults_ReferenceRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreObservationresults_ReferenceRange.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange)
}
UsCoreObservationresults_ReferenceRange::UsCoreObservationresults_ReferenceRange(const UsCoreObservationresults_ReferenceRange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      applies_to_(from.applies_to_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_low()) {
    low_ = new ::google::fhir::stu3::proto::SimpleQuantity(*from.low_);
  } else {
    low_ = NULL;
  }
  if (from.has_high()) {
    high_ = new ::google::fhir::stu3::proto::SimpleQuantity(*from.high_);
  } else {
    high_ = NULL;
  }
  if (from.has_type()) {
    type_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.type_);
  } else {
    type_ = NULL;
  }
  if (from.has_age()) {
    age_ = new ::google::fhir::stu3::proto::Range(*from.age_);
  } else {
    age_ = NULL;
  }
  if (from.has_text()) {
    text_ = new ::google::fhir::stu3::proto::String(*from.text_);
  } else {
    text_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange)
}

void UsCoreObservationresults_ReferenceRange::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&text_) -
      reinterpret_cast<char*>(&id_)) + sizeof(text_));
}

UsCoreObservationresults_ReferenceRange::~UsCoreObservationresults_ReferenceRange() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange)
  SharedDtor();
}

void UsCoreObservationresults_ReferenceRange::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete low_;
  if (this != internal_default_instance()) delete high_;
  if (this != internal_default_instance()) delete type_;
  if (this != internal_default_instance()) delete age_;
  if (this != internal_default_instance()) delete text_;
}

void UsCoreObservationresults_ReferenceRange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreObservationresults_ReferenceRange::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreObservationresults_ReferenceRange& UsCoreObservationresults_ReferenceRange::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreObservationresults_ReferenceRange.base);
  return *internal_default_instance();
}


void UsCoreObservationresults_ReferenceRange::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  applies_to_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && low_ != NULL) {
    delete low_;
  }
  low_ = NULL;
  if (GetArenaNoVirtual() == NULL && high_ != NULL) {
    delete high_;
  }
  high_ = NULL;
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  if (GetArenaNoVirtual() == NULL && age_ != NULL) {
    delete age_;
  }
  age_ = NULL;
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreObservationresults_ReferenceRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.SimpleQuantity low = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_low()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.SimpleQuantity high = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_high()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept applies_to = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_applies_to()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Range age = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_age()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String text = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange)
  return false;
#undef DO_
}

void UsCoreObservationresults_ReferenceRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.SimpleQuantity low = 4;
  if (this->has_low()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_low(), output);
  }

  // .google.fhir.stu3.proto.SimpleQuantity high = 5;
  if (this->has_high()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_high(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept type = 6;
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_type(), output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept applies_to = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->applies_to_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->applies_to(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Range age = 8;
  if (this->has_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_age(), output);
  }

  // .google.fhir.stu3.proto.String text = 9;
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_text(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange)
}

::google::protobuf::uint8* UsCoreObservationresults_ReferenceRange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.SimpleQuantity low = 4;
  if (this->has_low()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_low(), deterministic, target);
  }

  // .google.fhir.stu3.proto.SimpleQuantity high = 5;
  if (this->has_high()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_high(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept type = 6;
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_type(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept applies_to = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->applies_to_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->applies_to(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Range age = 8;
  if (this->has_age()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_age(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String text = 9;
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_text(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange)
  return target;
}

size_t UsCoreObservationresults_ReferenceRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept applies_to = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->applies_to_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->applies_to(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.SimpleQuantity low = 4;
  if (this->has_low()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *low_);
  }

  // .google.fhir.stu3.proto.SimpleQuantity high = 5;
  if (this->has_high()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *high_);
  }

  // .google.fhir.stu3.proto.CodeableConcept type = 6;
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  // .google.fhir.stu3.proto.Range age = 8;
  if (this->has_age()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *age_);
  }

  // .google.fhir.stu3.proto.String text = 9;
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *text_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreObservationresults_ReferenceRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreObservationresults_ReferenceRange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreObservationresults_ReferenceRange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange)
    MergeFrom(*source);
  }
}

void UsCoreObservationresults_ReferenceRange::MergeFrom(const UsCoreObservationresults_ReferenceRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  applies_to_.MergeFrom(from.applies_to_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_low()) {
    mutable_low()->::google::fhir::stu3::proto::SimpleQuantity::MergeFrom(from.low());
  }
  if (from.has_high()) {
    mutable_high()->::google::fhir::stu3::proto::SimpleQuantity::MergeFrom(from.high());
  }
  if (from.has_type()) {
    mutable_type()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.type());
  }
  if (from.has_age()) {
    mutable_age()->::google::fhir::stu3::proto::Range::MergeFrom(from.age());
  }
  if (from.has_text()) {
    mutable_text()->::google::fhir::stu3::proto::String::MergeFrom(from.text());
  }
}

void UsCoreObservationresults_ReferenceRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreObservationresults_ReferenceRange::CopyFrom(const UsCoreObservationresults_ReferenceRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreObservationresults_ReferenceRange::IsInitialized() const {
  return true;
}

void UsCoreObservationresults_ReferenceRange::Swap(UsCoreObservationresults_ReferenceRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreObservationresults_ReferenceRange::InternalSwap(UsCoreObservationresults_ReferenceRange* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&applies_to_)->InternalSwap(CastToBase(&other->applies_to_));
  swap(id_, other->id_);
  swap(low_, other->low_);
  swap(high_, other->high_);
  swap(type_, other->type_);
  swap(age_, other->age_);
  swap(text_, other->text_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreObservationresults_ReferenceRange::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreObservationresults_Related::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Related_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Related_default_instance_._instance.get_mutable()->type_ = const_cast< ::google::fhir::stu3::proto::ObservationRelationshipTypeCode*>(
      ::google::fhir::stu3::proto::ObservationRelationshipTypeCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Related_default_instance_._instance.get_mutable()->target_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
}
void UsCoreObservationresults_Related::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreObservationresults_Related::clear_extension() {
  extension_.Clear();
}
void UsCoreObservationresults_Related::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreObservationresults_Related::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
}
void UsCoreObservationresults_Related::clear_target() {
  if (GetArenaNoVirtual() == NULL && target_ != NULL) {
    delete target_;
  }
  target_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreObservationresults_Related::kIdFieldNumber;
const int UsCoreObservationresults_Related::kExtensionFieldNumber;
const int UsCoreObservationresults_Related::kModifierExtensionFieldNumber;
const int UsCoreObservationresults_Related::kTypeFieldNumber;
const int UsCoreObservationresults_Related::kTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreObservationresults_Related::UsCoreObservationresults_Related()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreObservationresults_Related.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreObservationresults.Related)
}
UsCoreObservationresults_Related::UsCoreObservationresults_Related(const UsCoreObservationresults_Related& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_type()) {
    type_ = new ::google::fhir::stu3::proto::ObservationRelationshipTypeCode(*from.type_);
  } else {
    type_ = NULL;
  }
  if (from.has_target()) {
    target_ = new ::google::fhir::stu3::proto::Reference(*from.target_);
  } else {
    target_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreObservationresults.Related)
}

void UsCoreObservationresults_Related::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_) -
      reinterpret_cast<char*>(&id_)) + sizeof(target_));
}

UsCoreObservationresults_Related::~UsCoreObservationresults_Related() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreObservationresults.Related)
  SharedDtor();
}

void UsCoreObservationresults_Related::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete type_;
  if (this != internal_default_instance()) delete target_;
}

void UsCoreObservationresults_Related::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreObservationresults_Related::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreObservationresults_Related& UsCoreObservationresults_Related::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreObservationresults_Related.base);
  return *internal_default_instance();
}


void UsCoreObservationresults_Related::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreObservationresults.Related)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  if (GetArenaNoVirtual() == NULL && target_ != NULL) {
    delete target_;
  }
  target_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreObservationresults_Related::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreObservationresults.Related)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ObservationRelationshipTypeCode type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference target = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/QuestionnaireResponse", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Sequence"];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreObservationresults.Related)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreObservationresults.Related)
  return false;
#undef DO_
}

void UsCoreObservationresults_Related::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreObservationresults.Related)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.ObservationRelationshipTypeCode type = 4;
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_type(), output);
  }

  // .google.fhir.stu3.proto.Reference target = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/QuestionnaireResponse", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Sequence"];
  if (this->has_target()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_target(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreObservationresults.Related)
}

::google::protobuf::uint8* UsCoreObservationresults_Related::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreObservationresults.Related)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.ObservationRelationshipTypeCode type = 4;
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_type(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference target = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/QuestionnaireResponse", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Sequence"];
  if (this->has_target()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_target(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreObservationresults.Related)
  return target;
}

size_t UsCoreObservationresults_Related::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreObservationresults.Related)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.ObservationRelationshipTypeCode type = 4;
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  // .google.fhir.stu3.proto.Reference target = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/QuestionnaireResponse", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Sequence"];
  if (this->has_target()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *target_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreObservationresults_Related::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreObservationresults.Related)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreObservationresults_Related* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreObservationresults_Related>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreObservationresults.Related)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreObservationresults.Related)
    MergeFrom(*source);
  }
}

void UsCoreObservationresults_Related::MergeFrom(const UsCoreObservationresults_Related& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreObservationresults.Related)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_type()) {
    mutable_type()->::google::fhir::stu3::proto::ObservationRelationshipTypeCode::MergeFrom(from.type());
  }
  if (from.has_target()) {
    mutable_target()->::google::fhir::stu3::proto::Reference::MergeFrom(from.target());
  }
}

void UsCoreObservationresults_Related::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreObservationresults.Related)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreObservationresults_Related::CopyFrom(const UsCoreObservationresults_Related& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreObservationresults.Related)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreObservationresults_Related::IsInitialized() const {
  return true;
}

void UsCoreObservationresults_Related::Swap(UsCoreObservationresults_Related* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreObservationresults_Related::InternalSwap(UsCoreObservationresults_Related* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  swap(id_, other->id_);
  swap(type_, other->type_);
  swap(target_, other->target_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreObservationresults_Related::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreObservationresults_Component_Value::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Component_Value_default_instance_.quantity_ = const_cast< ::google::fhir::stu3::proto::Quantity*>(
      ::google::fhir::stu3::proto::Quantity::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Component_Value_default_instance_.codeable_concept_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Component_Value_default_instance_.string_value_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Component_Value_default_instance_.range_ = const_cast< ::google::fhir::stu3::proto::Range*>(
      ::google::fhir::stu3::proto::Range::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Component_Value_default_instance_.ratio_ = const_cast< ::google::fhir::stu3::proto::Ratio*>(
      ::google::fhir::stu3::proto::Ratio::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Component_Value_default_instance_.sampled_data_ = const_cast< ::google::fhir::stu3::proto::SampledData*>(
      ::google::fhir::stu3::proto::SampledData::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Component_Value_default_instance_.attachment_ = const_cast< ::google::fhir::stu3::proto::Attachment*>(
      ::google::fhir::stu3::proto::Attachment::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Component_Value_default_instance_.time_ = const_cast< ::google::fhir::stu3::proto::Time*>(
      ::google::fhir::stu3::proto::Time::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Component_Value_default_instance_.date_time_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Component_Value_default_instance_.period_ = const_cast< ::google::fhir::stu3::proto::Period*>(
      ::google::fhir::stu3::proto::Period::internal_default_instance());
}
void UsCoreObservationresults_Component_Value::set_allocated_quantity(::google::fhir::stu3::proto::Quantity* quantity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (quantity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      quantity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, quantity, submessage_arena);
    }
    set_has_quantity();
    value_.quantity_ = quantity;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.quantity)
}
void UsCoreObservationresults_Component_Value::clear_quantity() {
  if (has_quantity()) {
    delete value_.quantity_;
    clear_has_value();
  }
}
void UsCoreObservationresults_Component_Value::set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (codeable_concept) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      codeable_concept = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, codeable_concept, submessage_arena);
    }
    set_has_codeable_concept();
    value_.codeable_concept_ = codeable_concept;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.codeable_concept)
}
void UsCoreObservationresults_Component_Value::clear_codeable_concept() {
  if (has_codeable_concept()) {
    delete value_.codeable_concept_;
    clear_has_value();
  }
}
void UsCoreObservationresults_Component_Value::set_allocated_string_value(::google::fhir::stu3::proto::String* string_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (string_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      string_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, string_value, submessage_arena);
    }
    set_has_string_value();
    value_.string_value_ = string_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.string_value)
}
void UsCoreObservationresults_Component_Value::clear_string_value() {
  if (has_string_value()) {
    delete value_.string_value_;
    clear_has_value();
  }
}
void UsCoreObservationresults_Component_Value::set_allocated_range(::google::fhir::stu3::proto::Range* range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (range) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, range, submessage_arena);
    }
    set_has_range();
    value_.range_ = range;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.range)
}
void UsCoreObservationresults_Component_Value::clear_range() {
  if (has_range()) {
    delete value_.range_;
    clear_has_value();
  }
}
void UsCoreObservationresults_Component_Value::set_allocated_ratio(::google::fhir::stu3::proto::Ratio* ratio) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (ratio) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ratio = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ratio, submessage_arena);
    }
    set_has_ratio();
    value_.ratio_ = ratio;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.ratio)
}
void UsCoreObservationresults_Component_Value::clear_ratio() {
  if (has_ratio()) {
    delete value_.ratio_;
    clear_has_value();
  }
}
void UsCoreObservationresults_Component_Value::set_allocated_sampled_data(::google::fhir::stu3::proto::SampledData* sampled_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (sampled_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sampled_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sampled_data, submessage_arena);
    }
    set_has_sampled_data();
    value_.sampled_data_ = sampled_data;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.sampled_data)
}
void UsCoreObservationresults_Component_Value::clear_sampled_data() {
  if (has_sampled_data()) {
    delete value_.sampled_data_;
    clear_has_value();
  }
}
void UsCoreObservationresults_Component_Value::set_allocated_attachment(::google::fhir::stu3::proto::Attachment* attachment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (attachment) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      attachment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, attachment, submessage_arena);
    }
    set_has_attachment();
    value_.attachment_ = attachment;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.attachment)
}
void UsCoreObservationresults_Component_Value::clear_attachment() {
  if (has_attachment()) {
    delete value_.attachment_;
    clear_has_value();
  }
}
void UsCoreObservationresults_Component_Value::set_allocated_time(::google::fhir::stu3::proto::Time* time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time, submessage_arena);
    }
    set_has_time();
    value_.time_ = time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.time)
}
void UsCoreObservationresults_Component_Value::clear_time() {
  if (has_time()) {
    delete value_.time_;
    clear_has_value();
  }
}
void UsCoreObservationresults_Component_Value::set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (date_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date_time, submessage_arena);
    }
    set_has_date_time();
    value_.date_time_ = date_time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.date_time)
}
void UsCoreObservationresults_Component_Value::clear_date_time() {
  if (has_date_time()) {
    delete value_.date_time_;
    clear_has_value();
  }
}
void UsCoreObservationresults_Component_Value::set_allocated_period(::google::fhir::stu3::proto::Period* period) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (period) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      period = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, period, submessage_arena);
    }
    set_has_period();
    value_.period_ = period;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.period)
}
void UsCoreObservationresults_Component_Value::clear_period() {
  if (has_period()) {
    delete value_.period_;
    clear_has_value();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreObservationresults_Component_Value::kQuantityFieldNumber;
const int UsCoreObservationresults_Component_Value::kCodeableConceptFieldNumber;
const int UsCoreObservationresults_Component_Value::kStringValueFieldNumber;
const int UsCoreObservationresults_Component_Value::kRangeFieldNumber;
const int UsCoreObservationresults_Component_Value::kRatioFieldNumber;
const int UsCoreObservationresults_Component_Value::kSampledDataFieldNumber;
const int UsCoreObservationresults_Component_Value::kAttachmentFieldNumber;
const int UsCoreObservationresults_Component_Value::kTimeFieldNumber;
const int UsCoreObservationresults_Component_Value::kDateTimeFieldNumber;
const int UsCoreObservationresults_Component_Value::kPeriodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreObservationresults_Component_Value::UsCoreObservationresults_Component_Value()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreObservationresults_Component_Value.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value)
}
UsCoreObservationresults_Component_Value::UsCoreObservationresults_Component_Value(const UsCoreObservationresults_Component_Value& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kQuantity: {
      mutable_quantity()->::google::fhir::stu3::proto::Quantity::MergeFrom(from.quantity());
      break;
    }
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case kStringValue: {
      mutable_string_value()->::google::fhir::stu3::proto::String::MergeFrom(from.string_value());
      break;
    }
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case kRatio: {
      mutable_ratio()->::google::fhir::stu3::proto::Ratio::MergeFrom(from.ratio());
      break;
    }
    case kSampledData: {
      mutable_sampled_data()->::google::fhir::stu3::proto::SampledData::MergeFrom(from.sampled_data());
      break;
    }
    case kAttachment: {
      mutable_attachment()->::google::fhir::stu3::proto::Attachment::MergeFrom(from.attachment());
      break;
    }
    case kTime: {
      mutable_time()->::google::fhir::stu3::proto::Time::MergeFrom(from.time());
      break;
    }
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value)
}

void UsCoreObservationresults_Component_Value::SharedCtor() {
  clear_has_value();
}

UsCoreObservationresults_Component_Value::~UsCoreObservationresults_Component_Value() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value)
  SharedDtor();
}

void UsCoreObservationresults_Component_Value::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
}

void UsCoreObservationresults_Component_Value::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreObservationresults_Component_Value::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreObservationresults_Component_Value& UsCoreObservationresults_Component_Value::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreObservationresults_Component_Value.base);
  return *internal_default_instance();
}


void UsCoreObservationresults_Component_Value::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value)
  switch (value_case()) {
    case kQuantity: {
      delete value_.quantity_;
      break;
    }
    case kCodeableConcept: {
      delete value_.codeable_concept_;
      break;
    }
    case kStringValue: {
      delete value_.string_value_;
      break;
    }
    case kRange: {
      delete value_.range_;
      break;
    }
    case kRatio: {
      delete value_.ratio_;
      break;
    }
    case kSampledData: {
      delete value_.sampled_data_;
      break;
    }
    case kAttachment: {
      delete value_.attachment_;
      break;
    }
    case kTime: {
      delete value_.time_;
      break;
    }
    case kDateTime: {
      delete value_.date_time_;
      break;
    }
    case kPeriod: {
      delete value_.period_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void UsCoreObservationresults_Component_Value::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear();
}

bool UsCoreObservationresults_Component_Value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Quantity quantity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_quantity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_codeable_concept()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String string_value = 3[json_name = "string"];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_string_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Range range = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Ratio ratio = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ratio()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.SampledData sampled_data = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sampled_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Attachment attachment = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_attachment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Time time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DateTime date_time = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Period period = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value)
  return false;
#undef DO_
}

void UsCoreObservationresults_Component_Value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Quantity quantity = 1;
  if (has_quantity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_quantity(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
  if (has_codeable_concept()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_codeable_concept(), output);
  }

  // .google.fhir.stu3.proto.String string_value = 3[json_name = "string"];
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_string_value(), output);
  }

  // .google.fhir.stu3.proto.Range range = 4;
  if (has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_range(), output);
  }

  // .google.fhir.stu3.proto.Ratio ratio = 5;
  if (has_ratio()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_ratio(), output);
  }

  // .google.fhir.stu3.proto.SampledData sampled_data = 6;
  if (has_sampled_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_sampled_data(), output);
  }

  // .google.fhir.stu3.proto.Attachment attachment = 7;
  if (has_attachment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_attachment(), output);
  }

  // .google.fhir.stu3.proto.Time time = 8;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_time(), output);
  }

  // .google.fhir.stu3.proto.DateTime date_time = 9;
  if (has_date_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_date_time(), output);
  }

  // .google.fhir.stu3.proto.Period period = 10;
  if (has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_period(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value)
}

::google::protobuf::uint8* UsCoreObservationresults_Component_Value::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Quantity quantity = 1;
  if (has_quantity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_quantity(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
  if (has_codeable_concept()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_codeable_concept(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String string_value = 3[json_name = "string"];
  if (has_string_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_string_value(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Range range = 4;
  if (has_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_range(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Ratio ratio = 5;
  if (has_ratio()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_ratio(), deterministic, target);
  }

  // .google.fhir.stu3.proto.SampledData sampled_data = 6;
  if (has_sampled_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_sampled_data(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Attachment attachment = 7;
  if (has_attachment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_attachment(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Time time = 8;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.DateTime date_time = 9;
  if (has_date_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_date_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Period period = 10;
  if (has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_period(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value)
  return target;
}

size_t UsCoreObservationresults_Component_Value::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (value_case()) {
    // .google.fhir.stu3.proto.Quantity quantity = 1;
    case kQuantity: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.quantity_);
      break;
    }
    // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
    case kCodeableConcept: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.codeable_concept_);
      break;
    }
    // .google.fhir.stu3.proto.String string_value = 3[json_name = "string"];
    case kStringValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.string_value_);
      break;
    }
    // .google.fhir.stu3.proto.Range range = 4;
    case kRange: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.range_);
      break;
    }
    // .google.fhir.stu3.proto.Ratio ratio = 5;
    case kRatio: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.ratio_);
      break;
    }
    // .google.fhir.stu3.proto.SampledData sampled_data = 6;
    case kSampledData: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.sampled_data_);
      break;
    }
    // .google.fhir.stu3.proto.Attachment attachment = 7;
    case kAttachment: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.attachment_);
      break;
    }
    // .google.fhir.stu3.proto.Time time = 8;
    case kTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.time_);
      break;
    }
    // .google.fhir.stu3.proto.DateTime date_time = 9;
    case kDateTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.date_time_);
      break;
    }
    // .google.fhir.stu3.proto.Period period = 10;
    case kPeriod: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.period_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreObservationresults_Component_Value::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreObservationresults_Component_Value* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreObservationresults_Component_Value>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value)
    MergeFrom(*source);
  }
}

void UsCoreObservationresults_Component_Value::MergeFrom(const UsCoreObservationresults_Component_Value& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kQuantity: {
      mutable_quantity()->::google::fhir::stu3::proto::Quantity::MergeFrom(from.quantity());
      break;
    }
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case kStringValue: {
      mutable_string_value()->::google::fhir::stu3::proto::String::MergeFrom(from.string_value());
      break;
    }
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case kRatio: {
      mutable_ratio()->::google::fhir::stu3::proto::Ratio::MergeFrom(from.ratio());
      break;
    }
    case kSampledData: {
      mutable_sampled_data()->::google::fhir::stu3::proto::SampledData::MergeFrom(from.sampled_data());
      break;
    }
    case kAttachment: {
      mutable_attachment()->::google::fhir::stu3::proto::Attachment::MergeFrom(from.attachment());
      break;
    }
    case kTime: {
      mutable_time()->::google::fhir::stu3::proto::Time::MergeFrom(from.time());
      break;
    }
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void UsCoreObservationresults_Component_Value::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreObservationresults_Component_Value::CopyFrom(const UsCoreObservationresults_Component_Value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreObservationresults_Component_Value::IsInitialized() const {
  return true;
}

void UsCoreObservationresults_Component_Value::Swap(UsCoreObservationresults_Component_Value* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreObservationresults_Component_Value::InternalSwap(UsCoreObservationresults_Component_Value* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreObservationresults_Component_Value::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreObservationresults_Component::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Component_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Component_default_instance_._instance.get_mutable()->code_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Component_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::fhir::stu3::uscore::UsCoreObservationresults_Component_Value*>(
      ::google::fhir::stu3::uscore::UsCoreObservationresults_Component_Value::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Component_default_instance_._instance.get_mutable()->data_absent_reason_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_Component_default_instance_._instance.get_mutable()->interpretation_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
}
void UsCoreObservationresults_Component::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreObservationresults_Component::clear_extension() {
  extension_.Clear();
}
void UsCoreObservationresults_Component::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreObservationresults_Component::clear_code() {
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
}
void UsCoreObservationresults_Component::clear_data_absent_reason() {
  if (GetArenaNoVirtual() == NULL && data_absent_reason_ != NULL) {
    delete data_absent_reason_;
  }
  data_absent_reason_ = NULL;
}
void UsCoreObservationresults_Component::clear_interpretation() {
  if (GetArenaNoVirtual() == NULL && interpretation_ != NULL) {
    delete interpretation_;
  }
  interpretation_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreObservationresults_Component::kIdFieldNumber;
const int UsCoreObservationresults_Component::kExtensionFieldNumber;
const int UsCoreObservationresults_Component::kModifierExtensionFieldNumber;
const int UsCoreObservationresults_Component::kCodeFieldNumber;
const int UsCoreObservationresults_Component::kValueFieldNumber;
const int UsCoreObservationresults_Component::kDataAbsentReasonFieldNumber;
const int UsCoreObservationresults_Component::kInterpretationFieldNumber;
const int UsCoreObservationresults_Component::kReferenceRangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreObservationresults_Component::UsCoreObservationresults_Component()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreObservationresults_Component.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreObservationresults.Component)
}
UsCoreObservationresults_Component::UsCoreObservationresults_Component(const UsCoreObservationresults_Component& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      reference_range_(from.reference_range_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_code()) {
    code_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.code_);
  } else {
    code_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::google::fhir::stu3::uscore::UsCoreObservationresults_Component_Value(*from.value_);
  } else {
    value_ = NULL;
  }
  if (from.has_data_absent_reason()) {
    data_absent_reason_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.data_absent_reason_);
  } else {
    data_absent_reason_ = NULL;
  }
  if (from.has_interpretation()) {
    interpretation_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.interpretation_);
  } else {
    interpretation_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreObservationresults.Component)
}

void UsCoreObservationresults_Component::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interpretation_) -
      reinterpret_cast<char*>(&id_)) + sizeof(interpretation_));
}

UsCoreObservationresults_Component::~UsCoreObservationresults_Component() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreObservationresults.Component)
  SharedDtor();
}

void UsCoreObservationresults_Component::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete code_;
  if (this != internal_default_instance()) delete value_;
  if (this != internal_default_instance()) delete data_absent_reason_;
  if (this != internal_default_instance()) delete interpretation_;
}

void UsCoreObservationresults_Component::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreObservationresults_Component::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreObservationresults_Component& UsCoreObservationresults_Component::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreObservationresults_Component.base);
  return *internal_default_instance();
}


void UsCoreObservationresults_Component::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreObservationresults.Component)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  reference_range_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  if (GetArenaNoVirtual() == NULL && data_absent_reason_ != NULL) {
    delete data_absent_reason_;
  }
  data_absent_reason_ = NULL;
  if (GetArenaNoVirtual() == NULL && interpretation_ != NULL) {
    delete interpretation_;
  }
  interpretation_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreObservationresults_Component::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreObservationresults.Component)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept code = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value value = 5 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data_absent_reason()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept interpretation = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interpretation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange reference_range = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_reference_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreObservationresults.Component)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreObservationresults.Component)
  return false;
#undef DO_
}

void UsCoreObservationresults_Component::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreObservationresults.Component)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_code(), output);
  }

  // .google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value value = 5 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_value(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
  if (this->has_data_absent_reason()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_data_absent_reason(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept interpretation = 7;
  if (this->has_interpretation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_interpretation(), output);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange reference_range = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reference_range_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->reference_range(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreObservationresults.Component)
}

::google::protobuf::uint8* UsCoreObservationresults_Component::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreObservationresults.Component)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_code(), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value value = 5 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_value(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
  if (this->has_data_absent_reason()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_data_absent_reason(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept interpretation = 7;
  if (this->has_interpretation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_interpretation(), deterministic, target);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange reference_range = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reference_range_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->reference_range(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreObservationresults.Component)
  return target;
}

size_t UsCoreObservationresults_Component::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreObservationresults.Component)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange reference_range = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->reference_range_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reference_range(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *code_);
  }

  // .google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value value = 5 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // .google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
  if (this->has_data_absent_reason()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_absent_reason_);
  }

  // .google.fhir.stu3.proto.CodeableConcept interpretation = 7;
  if (this->has_interpretation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *interpretation_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreObservationresults_Component::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreObservationresults.Component)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreObservationresults_Component* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreObservationresults_Component>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreObservationresults.Component)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreObservationresults.Component)
    MergeFrom(*source);
  }
}

void UsCoreObservationresults_Component::MergeFrom(const UsCoreObservationresults_Component& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreObservationresults.Component)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  reference_range_.MergeFrom(from.reference_range_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_code()) {
    mutable_code()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.code());
  }
  if (from.has_value()) {
    mutable_value()->::google::fhir::stu3::uscore::UsCoreObservationresults_Component_Value::MergeFrom(from.value());
  }
  if (from.has_data_absent_reason()) {
    mutable_data_absent_reason()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.data_absent_reason());
  }
  if (from.has_interpretation()) {
    mutable_interpretation()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.interpretation());
  }
}

void UsCoreObservationresults_Component::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreObservationresults.Component)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreObservationresults_Component::CopyFrom(const UsCoreObservationresults_Component& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreObservationresults.Component)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreObservationresults_Component::IsInitialized() const {
  return true;
}

void UsCoreObservationresults_Component::Swap(UsCoreObservationresults_Component* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreObservationresults_Component::InternalSwap(UsCoreObservationresults_Component* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&reference_range_)->InternalSwap(CastToBase(&other->reference_range_));
  swap(id_, other->id_);
  swap(code_, other->code_);
  swap(value_, other->value_);
  swap(data_absent_reason_, other->data_absent_reason_);
  swap(interpretation_, other->interpretation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreObservationresults_Component::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreObservationresults::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::Id*>(
      ::google::fhir::stu3::proto::Id::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_default_instance_._instance.get_mutable()->meta_ = const_cast< ::google::fhir::stu3::proto::Meta*>(
      ::google::fhir::stu3::proto::Meta::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_default_instance_._instance.get_mutable()->implicit_rules_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_default_instance_._instance.get_mutable()->language_ = const_cast< ::google::fhir::stu3::proto::LanguageCode*>(
      ::google::fhir::stu3::proto::LanguageCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_default_instance_._instance.get_mutable()->text_ = const_cast< ::google::fhir::stu3::proto::Narrative*>(
      ::google::fhir::stu3::proto::Narrative::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::fhir::stu3::proto::ObservationStatusCode*>(
      ::google::fhir::stu3::proto::ObservationStatusCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_default_instance_._instance.get_mutable()->code_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_default_instance_._instance.get_mutable()->subject_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_default_instance_._instance.get_mutable()->context_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_default_instance_._instance.get_mutable()->effective_ = const_cast< ::google::fhir::stu3::uscore::UsCoreObservationresults_Effective*>(
      ::google::fhir::stu3::uscore::UsCoreObservationresults_Effective::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_default_instance_._instance.get_mutable()->issued_ = const_cast< ::google::fhir::stu3::proto::Instant*>(
      ::google::fhir::stu3::proto::Instant::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::fhir::stu3::uscore::UsCoreObservationresults_Value*>(
      ::google::fhir::stu3::uscore::UsCoreObservationresults_Value::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_default_instance_._instance.get_mutable()->data_absent_reason_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_default_instance_._instance.get_mutable()->interpretation_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_default_instance_._instance.get_mutable()->comment_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_default_instance_._instance.get_mutable()->body_site_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_default_instance_._instance.get_mutable()->method_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_default_instance_._instance.get_mutable()->specimen_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreObservationresults_default_instance_._instance.get_mutable()->device_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
}
void UsCoreObservationresults::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreObservationresults::clear_meta() {
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
}
void UsCoreObservationresults::clear_implicit_rules() {
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
}
void UsCoreObservationresults::clear_language() {
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
}
void UsCoreObservationresults::clear_text() {
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
}
void UsCoreObservationresults::clear_contained() {
  contained_.Clear();
}
void UsCoreObservationresults::clear_extension() {
  extension_.Clear();
}
void UsCoreObservationresults::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreObservationresults::clear_identifier() {
  identifier_.Clear();
}
void UsCoreObservationresults::clear_based_on() {
  based_on_.Clear();
}
void UsCoreObservationresults::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
void UsCoreObservationresults::clear_category() {
  category_.Clear();
}
void UsCoreObservationresults::clear_code() {
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
}
void UsCoreObservationresults::clear_subject() {
  if (GetArenaNoVirtual() == NULL && subject_ != NULL) {
    delete subject_;
  }
  subject_ = NULL;
}
void UsCoreObservationresults::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
}
void UsCoreObservationresults::clear_issued() {
  if (GetArenaNoVirtual() == NULL && issued_ != NULL) {
    delete issued_;
  }
  issued_ = NULL;
}
void UsCoreObservationresults::clear_performer() {
  performer_.Clear();
}
void UsCoreObservationresults::clear_data_absent_reason() {
  if (GetArenaNoVirtual() == NULL && data_absent_reason_ != NULL) {
    delete data_absent_reason_;
  }
  data_absent_reason_ = NULL;
}
void UsCoreObservationresults::clear_interpretation() {
  if (GetArenaNoVirtual() == NULL && interpretation_ != NULL) {
    delete interpretation_;
  }
  interpretation_ = NULL;
}
void UsCoreObservationresults::clear_comment() {
  if (GetArenaNoVirtual() == NULL && comment_ != NULL) {
    delete comment_;
  }
  comment_ = NULL;
}
void UsCoreObservationresults::clear_body_site() {
  if (GetArenaNoVirtual() == NULL && body_site_ != NULL) {
    delete body_site_;
  }
  body_site_ = NULL;
}
void UsCoreObservationresults::clear_method() {
  if (GetArenaNoVirtual() == NULL && method_ != NULL) {
    delete method_;
  }
  method_ = NULL;
}
void UsCoreObservationresults::clear_specimen() {
  if (GetArenaNoVirtual() == NULL && specimen_ != NULL) {
    delete specimen_;
  }
  specimen_ = NULL;
}
void UsCoreObservationresults::clear_device() {
  if (GetArenaNoVirtual() == NULL && device_ != NULL) {
    delete device_;
  }
  device_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreObservationresults::kIdFieldNumber;
const int UsCoreObservationresults::kMetaFieldNumber;
const int UsCoreObservationresults::kImplicitRulesFieldNumber;
const int UsCoreObservationresults::kLanguageFieldNumber;
const int UsCoreObservationresults::kTextFieldNumber;
const int UsCoreObservationresults::kContainedFieldNumber;
const int UsCoreObservationresults::kExtensionFieldNumber;
const int UsCoreObservationresults::kModifierExtensionFieldNumber;
const int UsCoreObservationresults::kIdentifierFieldNumber;
const int UsCoreObservationresults::kBasedOnFieldNumber;
const int UsCoreObservationresults::kStatusFieldNumber;
const int UsCoreObservationresults::kCategoryFieldNumber;
const int UsCoreObservationresults::kCodeFieldNumber;
const int UsCoreObservationresults::kSubjectFieldNumber;
const int UsCoreObservationresults::kContextFieldNumber;
const int UsCoreObservationresults::kEffectiveFieldNumber;
const int UsCoreObservationresults::kIssuedFieldNumber;
const int UsCoreObservationresults::kPerformerFieldNumber;
const int UsCoreObservationresults::kValueFieldNumber;
const int UsCoreObservationresults::kDataAbsentReasonFieldNumber;
const int UsCoreObservationresults::kInterpretationFieldNumber;
const int UsCoreObservationresults::kCommentFieldNumber;
const int UsCoreObservationresults::kBodySiteFieldNumber;
const int UsCoreObservationresults::kMethodFieldNumber;
const int UsCoreObservationresults::kSpecimenFieldNumber;
const int UsCoreObservationresults::kDeviceFieldNumber;
const int UsCoreObservationresults::kReferenceRangeFieldNumber;
const int UsCoreObservationresults::kRelatedFieldNumber;
const int UsCoreObservationresults::kComponentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreObservationresults::UsCoreObservationresults()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreObservationresults.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreObservationresults)
}
UsCoreObservationresults::UsCoreObservationresults(const UsCoreObservationresults& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      contained_(from.contained_),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      identifier_(from.identifier_),
      based_on_(from.based_on_),
      category_(from.category_),
      performer_(from.performer_),
      reference_range_(from.reference_range_),
      related_(from.related_),
      component_(from.component_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::Id(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_meta()) {
    meta_ = new ::google::fhir::stu3::proto::Meta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  if (from.has_implicit_rules()) {
    implicit_rules_ = new ::google::fhir::stu3::proto::Uri(*from.implicit_rules_);
  } else {
    implicit_rules_ = NULL;
  }
  if (from.has_language()) {
    language_ = new ::google::fhir::stu3::proto::LanguageCode(*from.language_);
  } else {
    language_ = NULL;
  }
  if (from.has_text()) {
    text_ = new ::google::fhir::stu3::proto::Narrative(*from.text_);
  } else {
    text_ = NULL;
  }
  if (from.has_status()) {
    status_ = new ::google::fhir::stu3::proto::ObservationStatusCode(*from.status_);
  } else {
    status_ = NULL;
  }
  if (from.has_code()) {
    code_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.code_);
  } else {
    code_ = NULL;
  }
  if (from.has_subject()) {
    subject_ = new ::google::fhir::stu3::proto::Reference(*from.subject_);
  } else {
    subject_ = NULL;
  }
  if (from.has_context()) {
    context_ = new ::google::fhir::stu3::proto::Reference(*from.context_);
  } else {
    context_ = NULL;
  }
  if (from.has_effective()) {
    effective_ = new ::google::fhir::stu3::uscore::UsCoreObservationresults_Effective(*from.effective_);
  } else {
    effective_ = NULL;
  }
  if (from.has_issued()) {
    issued_ = new ::google::fhir::stu3::proto::Instant(*from.issued_);
  } else {
    issued_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::google::fhir::stu3::uscore::UsCoreObservationresults_Value(*from.value_);
  } else {
    value_ = NULL;
  }
  if (from.has_data_absent_reason()) {
    data_absent_reason_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.data_absent_reason_);
  } else {
    data_absent_reason_ = NULL;
  }
  if (from.has_interpretation()) {
    interpretation_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.interpretation_);
  } else {
    interpretation_ = NULL;
  }
  if (from.has_comment()) {
    comment_ = new ::google::fhir::stu3::proto::String(*from.comment_);
  } else {
    comment_ = NULL;
  }
  if (from.has_body_site()) {
    body_site_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.body_site_);
  } else {
    body_site_ = NULL;
  }
  if (from.has_method()) {
    method_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.method_);
  } else {
    method_ = NULL;
  }
  if (from.has_specimen()) {
    specimen_ = new ::google::fhir::stu3::proto::Reference(*from.specimen_);
  } else {
    specimen_ = NULL;
  }
  if (from.has_device()) {
    device_ = new ::google::fhir::stu3::proto::Reference(*from.device_);
  } else {
    device_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreObservationresults)
}

void UsCoreObservationresults::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&device_) -
      reinterpret_cast<char*>(&id_)) + sizeof(device_));
}

UsCoreObservationresults::~UsCoreObservationresults() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreObservationresults)
  SharedDtor();
}

void UsCoreObservationresults::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete implicit_rules_;
  if (this != internal_default_instance()) delete language_;
  if (this != internal_default_instance()) delete text_;
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete code_;
  if (this != internal_default_instance()) delete subject_;
  if (this != internal_default_instance()) delete context_;
  if (this != internal_default_instance()) delete effective_;
  if (this != internal_default_instance()) delete issued_;
  if (this != internal_default_instance()) delete value_;
  if (this != internal_default_instance()) delete data_absent_reason_;
  if (this != internal_default_instance()) delete interpretation_;
  if (this != internal_default_instance()) delete comment_;
  if (this != internal_default_instance()) delete body_site_;
  if (this != internal_default_instance()) delete method_;
  if (this != internal_default_instance()) delete specimen_;
  if (this != internal_default_instance()) delete device_;
}

void UsCoreObservationresults::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreObservationresults::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreObservationresults& UsCoreObservationresults::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreObservationresults.base);
  return *internal_default_instance();
}


void UsCoreObservationresults::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreObservationresults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contained_.Clear();
  extension_.Clear();
  modifier_extension_.Clear();
  identifier_.Clear();
  based_on_.Clear();
  category_.Clear();
  performer_.Clear();
  reference_range_.Clear();
  related_.Clear();
  component_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
  if (GetArenaNoVirtual() == NULL && subject_ != NULL) {
    delete subject_;
  }
  subject_ = NULL;
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  if (GetArenaNoVirtual() == NULL && effective_ != NULL) {
    delete effective_;
  }
  effective_ = NULL;
  if (GetArenaNoVirtual() == NULL && issued_ != NULL) {
    delete issued_;
  }
  issued_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  if (GetArenaNoVirtual() == NULL && data_absent_reason_ != NULL) {
    delete data_absent_reason_;
  }
  data_absent_reason_ = NULL;
  if (GetArenaNoVirtual() == NULL && interpretation_ != NULL) {
    delete interpretation_;
  }
  interpretation_ = NULL;
  if (GetArenaNoVirtual() == NULL && comment_ != NULL) {
    delete comment_;
  }
  comment_ = NULL;
  if (GetArenaNoVirtual() == NULL && body_site_ != NULL) {
    delete body_site_;
  }
  body_site_ = NULL;
  if (GetArenaNoVirtual() == NULL && method_ != NULL) {
    delete method_;
  }
  method_ = NULL;
  if (GetArenaNoVirtual() == NULL && specimen_ != NULL) {
    delete specimen_;
  }
  specimen_ = NULL;
  if (GetArenaNoVirtual() == NULL && device_ != NULL) {
    delete device_;
  }
  device_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreObservationresults::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreObservationresults)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Id id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Meta meta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri implicit_rules = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_implicit_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.LanguageCode language = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_language()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Narrative text = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_contained()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference based_on = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DeviceRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ImmunizationRecommendation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/NutritionOrder", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_based_on()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ObservationStatusCode status = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept category = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_category()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept code = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference subject = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_subject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference context = 15 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreObservationresults.Effective effective = 16 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_effective()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Instant issued = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_issued()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference performer = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_performer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreObservationresults.Value value = 19 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data_absent_reason()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept interpretation = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interpretation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String comment = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_comment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept body_site = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_body_site()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept method = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_method()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference specimen = 25 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Specimen"];
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_specimen()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference device = 26 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DeviceMetric"];
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange reference_range = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_reference_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.uscore.UsCoreObservationresults.Related related = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_related()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.uscore.UsCoreObservationresults.Component component = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_component()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreObservationresults)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreObservationresults)
  return false;
#undef DO_
}

void UsCoreObservationresults::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreObservationresults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_meta(), output);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_implicit_rules(), output);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_language(), output);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_text(), output);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->contained(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->identifier(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference based_on = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DeviceRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ImmunizationRecommendation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/NutritionOrder", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->based_on_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->based_on(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.ObservationStatusCode status = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_status(), output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept category = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->category_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->category(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_code(), output);
  }

  // .google.fhir.stu3.proto.Reference subject = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_subject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_subject(), output);
  }

  // .google.fhir.stu3.proto.Reference context = 15 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_context(), output);
  }

  // .google.fhir.stu3.uscore.UsCoreObservationresults.Effective effective = 16 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_effective()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_effective(), output);
  }

  // .google.fhir.stu3.proto.Instant issued = 17;
  if (this->has_issued()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_issued(), output);
  }

  // repeated .google.fhir.stu3.proto.Reference performer = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->performer_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18,
      this->performer(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.uscore.UsCoreObservationresults.Value value = 19 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_value(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
  if (this->has_data_absent_reason()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_data_absent_reason(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept interpretation = 21;
  if (this->has_interpretation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_interpretation(), output);
  }

  // .google.fhir.stu3.proto.String comment = 22;
  if (this->has_comment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->_internal_comment(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept body_site = 23;
  if (this->has_body_site()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->_internal_body_site(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept method = 24;
  if (this->has_method()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->_internal_method(), output);
  }

  // .google.fhir.stu3.proto.Reference specimen = 25 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Specimen"];
  if (this->has_specimen()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->_internal_specimen(), output);
  }

  // .google.fhir.stu3.proto.Reference device = 26 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DeviceMetric"];
  if (this->has_device()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->_internal_device(), output);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange reference_range = 27;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reference_range_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27,
      this->reference_range(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreObservationresults.Related related = 28;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->related_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28,
      this->related(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreObservationresults.Component component = 29;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->component_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29,
      this->component(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreObservationresults)
}

::google::protobuf::uint8* UsCoreObservationresults::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreObservationresults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_meta(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_implicit_rules(), deterministic, target);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_language(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_text(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->contained(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->identifier(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference based_on = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DeviceRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ImmunizationRecommendation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/NutritionOrder", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->based_on_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->based_on(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.ObservationStatusCode status = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_status(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept category = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->category_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->category(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_code(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference subject = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_subject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_subject(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference context = 15 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_context(), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreObservationresults.Effective effective = 16 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_effective()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_effective(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Instant issued = 17;
  if (this->has_issued()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_issued(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference performer = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->performer_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->performer(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreObservationresults.Value value = 19 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_value(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
  if (this->has_data_absent_reason()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_data_absent_reason(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept interpretation = 21;
  if (this->has_interpretation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_interpretation(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String comment = 22;
  if (this->has_comment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->_internal_comment(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept body_site = 23;
  if (this->has_body_site()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->_internal_body_site(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept method = 24;
  if (this->has_method()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->_internal_method(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference specimen = 25 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Specimen"];
  if (this->has_specimen()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->_internal_specimen(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference device = 26 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DeviceMetric"];
  if (this->has_device()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, this->_internal_device(), deterministic, target);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange reference_range = 27;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reference_range_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, this->reference_range(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreObservationresults.Related related = 28;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->related_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, this->related(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreObservationresults.Component component = 29;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->component_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29, this->component(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreObservationresults)
  return target;
}

size_t UsCoreObservationresults::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreObservationresults)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->contained_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->contained(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->identifier_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->identifier(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference based_on = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DeviceRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ImmunizationRecommendation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/NutritionOrder", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
  {
    unsigned int count = static_cast<unsigned int>(this->based_on_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->based_on(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept category = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  {
    unsigned int count = static_cast<unsigned int>(this->category_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->category(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference performer = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
  {
    unsigned int count = static_cast<unsigned int>(this->performer_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->performer(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange reference_range = 27;
  {
    unsigned int count = static_cast<unsigned int>(this->reference_range_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reference_range(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.uscore.UsCoreObservationresults.Related related = 28;
  {
    unsigned int count = static_cast<unsigned int>(this->related_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->related(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.uscore.UsCoreObservationresults.Component component = 29;
  {
    unsigned int count = static_cast<unsigned int>(this->component_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->component(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *implicit_rules_);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *language_);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *text_);
  }

  // .google.fhir.stu3.proto.ObservationStatusCode status = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *code_);
  }

  // .google.fhir.stu3.proto.Reference subject = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_subject()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *subject_);
  }

  // .google.fhir.stu3.proto.Reference context = 15 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  // .google.fhir.stu3.uscore.UsCoreObservationresults.Effective effective = 16 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_effective()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *effective_);
  }

  // .google.fhir.stu3.proto.Instant issued = 17;
  if (this->has_issued()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *issued_);
  }

  // .google.fhir.stu3.uscore.UsCoreObservationresults.Value value = 19 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // .google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
  if (this->has_data_absent_reason()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_absent_reason_);
  }

  // .google.fhir.stu3.proto.CodeableConcept interpretation = 21;
  if (this->has_interpretation()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *interpretation_);
  }

  // .google.fhir.stu3.proto.String comment = 22;
  if (this->has_comment()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *comment_);
  }

  // .google.fhir.stu3.proto.CodeableConcept body_site = 23;
  if (this->has_body_site()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *body_site_);
  }

  // .google.fhir.stu3.proto.CodeableConcept method = 24;
  if (this->has_method()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *method_);
  }

  // .google.fhir.stu3.proto.Reference specimen = 25 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Specimen"];
  if (this->has_specimen()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *specimen_);
  }

  // .google.fhir.stu3.proto.Reference device = 26 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DeviceMetric"];
  if (this->has_device()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *device_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreObservationresults::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreObservationresults)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreObservationresults* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreObservationresults>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreObservationresults)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreObservationresults)
    MergeFrom(*source);
  }
}

void UsCoreObservationresults::MergeFrom(const UsCoreObservationresults& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreObservationresults)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contained_.MergeFrom(from.contained_);
  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  identifier_.MergeFrom(from.identifier_);
  based_on_.MergeFrom(from.based_on_);
  category_.MergeFrom(from.category_);
  performer_.MergeFrom(from.performer_);
  reference_range_.MergeFrom(from.reference_range_);
  related_.MergeFrom(from.related_);
  component_.MergeFrom(from.component_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::Id::MergeFrom(from.id());
  }
  if (from.has_meta()) {
    mutable_meta()->::google::fhir::stu3::proto::Meta::MergeFrom(from.meta());
  }
  if (from.has_implicit_rules()) {
    mutable_implicit_rules()->::google::fhir::stu3::proto::Uri::MergeFrom(from.implicit_rules());
  }
  if (from.has_language()) {
    mutable_language()->::google::fhir::stu3::proto::LanguageCode::MergeFrom(from.language());
  }
  if (from.has_text()) {
    mutable_text()->::google::fhir::stu3::proto::Narrative::MergeFrom(from.text());
  }
  if (from.has_status()) {
    mutable_status()->::google::fhir::stu3::proto::ObservationStatusCode::MergeFrom(from.status());
  }
  if (from.has_code()) {
    mutable_code()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.code());
  }
  if (from.has_subject()) {
    mutable_subject()->::google::fhir::stu3::proto::Reference::MergeFrom(from.subject());
  }
  if (from.has_context()) {
    mutable_context()->::google::fhir::stu3::proto::Reference::MergeFrom(from.context());
  }
  if (from.has_effective()) {
    mutable_effective()->::google::fhir::stu3::uscore::UsCoreObservationresults_Effective::MergeFrom(from.effective());
  }
  if (from.has_issued()) {
    mutable_issued()->::google::fhir::stu3::proto::Instant::MergeFrom(from.issued());
  }
  if (from.has_value()) {
    mutable_value()->::google::fhir::stu3::uscore::UsCoreObservationresults_Value::MergeFrom(from.value());
  }
  if (from.has_data_absent_reason()) {
    mutable_data_absent_reason()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.data_absent_reason());
  }
  if (from.has_interpretation()) {
    mutable_interpretation()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.interpretation());
  }
  if (from.has_comment()) {
    mutable_comment()->::google::fhir::stu3::proto::String::MergeFrom(from.comment());
  }
  if (from.has_body_site()) {
    mutable_body_site()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.body_site());
  }
  if (from.has_method()) {
    mutable_method()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.method());
  }
  if (from.has_specimen()) {
    mutable_specimen()->::google::fhir::stu3::proto::Reference::MergeFrom(from.specimen());
  }
  if (from.has_device()) {
    mutable_device()->::google::fhir::stu3::proto::Reference::MergeFrom(from.device());
  }
}

void UsCoreObservationresults::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreObservationresults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreObservationresults::CopyFrom(const UsCoreObservationresults& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreObservationresults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreObservationresults::IsInitialized() const {
  return true;
}

void UsCoreObservationresults::Swap(UsCoreObservationresults* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreObservationresults::InternalSwap(UsCoreObservationresults* other) {
  using std::swap;
  CastToBase(&contained_)->InternalSwap(CastToBase(&other->contained_));
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&identifier_)->InternalSwap(CastToBase(&other->identifier_));
  CastToBase(&based_on_)->InternalSwap(CastToBase(&other->based_on_));
  CastToBase(&category_)->InternalSwap(CastToBase(&other->category_));
  CastToBase(&performer_)->InternalSwap(CastToBase(&other->performer_));
  CastToBase(&reference_range_)->InternalSwap(CastToBase(&other->reference_range_));
  CastToBase(&related_)->InternalSwap(CastToBase(&other->related_));
  CastToBase(&component_)->InternalSwap(CastToBase(&other->component_));
  swap(id_, other->id_);
  swap(meta_, other->meta_);
  swap(implicit_rules_, other->implicit_rules_);
  swap(language_, other->language_);
  swap(text_, other->text_);
  swap(status_, other->status_);
  swap(code_, other->code_);
  swap(subject_, other->subject_);
  swap(context_, other->context_);
  swap(effective_, other->effective_);
  swap(issued_, other->issued_);
  swap(value_, other->value_);
  swap(data_absent_reason_, other->data_absent_reason_);
  swap(interpretation_, other->interpretation_);
  swap(comment_, other->comment_);
  swap(body_site_, other->body_site_);
  swap(method_, other->method_);
  swap(specimen_, other->specimen_);
  swap(device_, other->device_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreObservationresults::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreOrganization_Contact::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreOrganization_Contact_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreOrganization_Contact_default_instance_._instance.get_mutable()->purpose_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreOrganization_Contact_default_instance_._instance.get_mutable()->name_ = const_cast< ::google::fhir::stu3::proto::HumanName*>(
      ::google::fhir::stu3::proto::HumanName::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreOrganization_Contact_default_instance_._instance.get_mutable()->address_ = const_cast< ::google::fhir::stu3::proto::Address*>(
      ::google::fhir::stu3::proto::Address::internal_default_instance());
}
void UsCoreOrganization_Contact::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreOrganization_Contact::clear_extension() {
  extension_.Clear();
}
void UsCoreOrganization_Contact::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreOrganization_Contact::clear_purpose() {
  if (GetArenaNoVirtual() == NULL && purpose_ != NULL) {
    delete purpose_;
  }
  purpose_ = NULL;
}
void UsCoreOrganization_Contact::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void UsCoreOrganization_Contact::clear_telecom() {
  telecom_.Clear();
}
void UsCoreOrganization_Contact::clear_address() {
  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreOrganization_Contact::kIdFieldNumber;
const int UsCoreOrganization_Contact::kExtensionFieldNumber;
const int UsCoreOrganization_Contact::kModifierExtensionFieldNumber;
const int UsCoreOrganization_Contact::kPurposeFieldNumber;
const int UsCoreOrganization_Contact::kNameFieldNumber;
const int UsCoreOrganization_Contact::kTelecomFieldNumber;
const int UsCoreOrganization_Contact::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreOrganization_Contact::UsCoreOrganization_Contact()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreOrganization_Contact.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreOrganization.Contact)
}
UsCoreOrganization_Contact::UsCoreOrganization_Contact(const UsCoreOrganization_Contact& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      telecom_(from.telecom_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_purpose()) {
    purpose_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.purpose_);
  } else {
    purpose_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::google::fhir::stu3::proto::HumanName(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_address()) {
    address_ = new ::google::fhir::stu3::proto::Address(*from.address_);
  } else {
    address_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreOrganization.Contact)
}

void UsCoreOrganization_Contact::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&address_) -
      reinterpret_cast<char*>(&id_)) + sizeof(address_));
}

UsCoreOrganization_Contact::~UsCoreOrganization_Contact() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreOrganization.Contact)
  SharedDtor();
}

void UsCoreOrganization_Contact::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete purpose_;
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete address_;
}

void UsCoreOrganization_Contact::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreOrganization_Contact::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreOrganization_Contact& UsCoreOrganization_Contact::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreOrganization_Contact.base);
  return *internal_default_instance();
}


void UsCoreOrganization_Contact::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreOrganization.Contact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  telecom_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && purpose_ != NULL) {
    delete purpose_;
  }
  purpose_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreOrganization_Contact::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreOrganization.Contact)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept purpose = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_purpose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.HumanName name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ContactPoint telecom = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_telecom()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Address address = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreOrganization.Contact)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreOrganization.Contact)
  return false;
#undef DO_
}

void UsCoreOrganization_Contact::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreOrganization.Contact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.CodeableConcept purpose = 4;
  if (this->has_purpose()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_purpose(), output);
  }

  // .google.fhir.stu3.proto.HumanName name = 5;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_name(), output);
  }

  // repeated .google.fhir.stu3.proto.ContactPoint telecom = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->telecom_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->telecom(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Address address = 7;
  if (this->has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_address(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreOrganization.Contact)
}

::google::protobuf::uint8* UsCoreOrganization_Contact::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreOrganization.Contact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept purpose = 4;
  if (this->has_purpose()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_purpose(), deterministic, target);
  }

  // .google.fhir.stu3.proto.HumanName name = 5;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_name(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ContactPoint telecom = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->telecom_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->telecom(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Address address = 7;
  if (this->has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_address(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreOrganization.Contact)
  return target;
}

size_t UsCoreOrganization_Contact::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreOrganization.Contact)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.ContactPoint telecom = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->telecom_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->telecom(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.CodeableConcept purpose = 4;
  if (this->has_purpose()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *purpose_);
  }

  // .google.fhir.stu3.proto.HumanName name = 5;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *name_);
  }

  // .google.fhir.stu3.proto.Address address = 7;
  if (this->has_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *address_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreOrganization_Contact::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreOrganization.Contact)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreOrganization_Contact* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreOrganization_Contact>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreOrganization.Contact)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreOrganization.Contact)
    MergeFrom(*source);
  }
}

void UsCoreOrganization_Contact::MergeFrom(const UsCoreOrganization_Contact& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreOrganization.Contact)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  telecom_.MergeFrom(from.telecom_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_purpose()) {
    mutable_purpose()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.purpose());
  }
  if (from.has_name()) {
    mutable_name()->::google::fhir::stu3::proto::HumanName::MergeFrom(from.name());
  }
  if (from.has_address()) {
    mutable_address()->::google::fhir::stu3::proto::Address::MergeFrom(from.address());
  }
}

void UsCoreOrganization_Contact::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreOrganization.Contact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreOrganization_Contact::CopyFrom(const UsCoreOrganization_Contact& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreOrganization.Contact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreOrganization_Contact::IsInitialized() const {
  return true;
}

void UsCoreOrganization_Contact::Swap(UsCoreOrganization_Contact* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreOrganization_Contact::InternalSwap(UsCoreOrganization_Contact* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&telecom_)->InternalSwap(CastToBase(&other->telecom_));
  swap(id_, other->id_);
  swap(purpose_, other->purpose_);
  swap(name_, other->name_);
  swap(address_, other->address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreOrganization_Contact::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreOrganization::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreOrganization_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::Id*>(
      ::google::fhir::stu3::proto::Id::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreOrganization_default_instance_._instance.get_mutable()->meta_ = const_cast< ::google::fhir::stu3::proto::Meta*>(
      ::google::fhir::stu3::proto::Meta::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreOrganization_default_instance_._instance.get_mutable()->implicit_rules_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreOrganization_default_instance_._instance.get_mutable()->language_ = const_cast< ::google::fhir::stu3::proto::LanguageCode*>(
      ::google::fhir::stu3::proto::LanguageCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreOrganization_default_instance_._instance.get_mutable()->text_ = const_cast< ::google::fhir::stu3::proto::Narrative*>(
      ::google::fhir::stu3::proto::Narrative::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreOrganization_default_instance_._instance.get_mutable()->active_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreOrganization_default_instance_._instance.get_mutable()->name_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreOrganization_default_instance_._instance.get_mutable()->part_of_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
}
void UsCoreOrganization::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreOrganization::clear_meta() {
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
}
void UsCoreOrganization::clear_implicit_rules() {
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
}
void UsCoreOrganization::clear_language() {
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
}
void UsCoreOrganization::clear_text() {
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
}
void UsCoreOrganization::clear_contained() {
  contained_.Clear();
}
void UsCoreOrganization::clear_extension() {
  extension_.Clear();
}
void UsCoreOrganization::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreOrganization::clear_identifier() {
  identifier_.Clear();
}
void UsCoreOrganization::clear_active() {
  if (GetArenaNoVirtual() == NULL && active_ != NULL) {
    delete active_;
  }
  active_ = NULL;
}
void UsCoreOrganization::clear_type() {
  type_.Clear();
}
void UsCoreOrganization::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void UsCoreOrganization::clear_alias() {
  alias_.Clear();
}
void UsCoreOrganization::clear_telecom() {
  telecom_.Clear();
}
void UsCoreOrganization::clear_address() {
  address_.Clear();
}
void UsCoreOrganization::clear_part_of() {
  if (GetArenaNoVirtual() == NULL && part_of_ != NULL) {
    delete part_of_;
  }
  part_of_ = NULL;
}
void UsCoreOrganization::clear_endpoint() {
  endpoint_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreOrganization::kIdFieldNumber;
const int UsCoreOrganization::kMetaFieldNumber;
const int UsCoreOrganization::kImplicitRulesFieldNumber;
const int UsCoreOrganization::kLanguageFieldNumber;
const int UsCoreOrganization::kTextFieldNumber;
const int UsCoreOrganization::kContainedFieldNumber;
const int UsCoreOrganization::kExtensionFieldNumber;
const int UsCoreOrganization::kModifierExtensionFieldNumber;
const int UsCoreOrganization::kIdentifierFieldNumber;
const int UsCoreOrganization::kActiveFieldNumber;
const int UsCoreOrganization::kTypeFieldNumber;
const int UsCoreOrganization::kNameFieldNumber;
const int UsCoreOrganization::kAliasFieldNumber;
const int UsCoreOrganization::kTelecomFieldNumber;
const int UsCoreOrganization::kAddressFieldNumber;
const int UsCoreOrganization::kPartOfFieldNumber;
const int UsCoreOrganization::kContactFieldNumber;
const int UsCoreOrganization::kEndpointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreOrganization::UsCoreOrganization()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreOrganization.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreOrganization)
}
UsCoreOrganization::UsCoreOrganization(const UsCoreOrganization& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      contained_(from.contained_),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      identifier_(from.identifier_),
      type_(from.type_),
      alias_(from.alias_),
      telecom_(from.telecom_),
      address_(from.address_),
      contact_(from.contact_),
      endpoint_(from.endpoint_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::Id(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_meta()) {
    meta_ = new ::google::fhir::stu3::proto::Meta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  if (from.has_implicit_rules()) {
    implicit_rules_ = new ::google::fhir::stu3::proto::Uri(*from.implicit_rules_);
  } else {
    implicit_rules_ = NULL;
  }
  if (from.has_language()) {
    language_ = new ::google::fhir::stu3::proto::LanguageCode(*from.language_);
  } else {
    language_ = NULL;
  }
  if (from.has_text()) {
    text_ = new ::google::fhir::stu3::proto::Narrative(*from.text_);
  } else {
    text_ = NULL;
  }
  if (from.has_active()) {
    active_ = new ::google::fhir::stu3::proto::Boolean(*from.active_);
  } else {
    active_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::google::fhir::stu3::proto::String(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_part_of()) {
    part_of_ = new ::google::fhir::stu3::proto::Reference(*from.part_of_);
  } else {
    part_of_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreOrganization)
}

void UsCoreOrganization::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&part_of_) -
      reinterpret_cast<char*>(&id_)) + sizeof(part_of_));
}

UsCoreOrganization::~UsCoreOrganization() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreOrganization)
  SharedDtor();
}

void UsCoreOrganization::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete implicit_rules_;
  if (this != internal_default_instance()) delete language_;
  if (this != internal_default_instance()) delete text_;
  if (this != internal_default_instance()) delete active_;
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete part_of_;
}

void UsCoreOrganization::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreOrganization::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreOrganization& UsCoreOrganization::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreOrganization.base);
  return *internal_default_instance();
}


void UsCoreOrganization::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreOrganization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contained_.Clear();
  extension_.Clear();
  modifier_extension_.Clear();
  identifier_.Clear();
  type_.Clear();
  alias_.Clear();
  telecom_.Clear();
  address_.Clear();
  contact_.Clear();
  endpoint_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  if (GetArenaNoVirtual() == NULL && active_ != NULL) {
    delete active_;
  }
  active_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && part_of_ != NULL) {
    delete part_of_;
  }
  part_of_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreOrganization::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreOrganization)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Id id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Meta meta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri implicit_rules = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_implicit_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.LanguageCode language = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_language()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Narrative text = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_contained()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Identifier identifier = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Boolean active = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_active()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept type = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String name = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.String alias = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_alias()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ContactPoint telecom = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_telecom()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Address address = 15 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference part_of = 16 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_part_of()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.uscore.UsCoreOrganization.Contact contact = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_contact()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference endpoint = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Endpoint"];
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_endpoint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreOrganization)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreOrganization)
  return false;
#undef DO_
}

void UsCoreOrganization::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreOrganization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_meta(), output);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_implicit_rules(), output);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_language(), output);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_text(), output);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->contained(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->identifier(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Boolean active = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_active(), output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept type = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->type_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->type(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.String name = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_name(), output);
  }

  // repeated .google.fhir.stu3.proto.String alias = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alias_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13,
      this->alias(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.ContactPoint telecom = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->telecom_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14,
      this->telecom(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Address address = 15 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->address_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->address(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Reference part_of = 16 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_part_of()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_part_of(), output);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreOrganization.Contact contact = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contact_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17,
      this->contact(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference endpoint = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Endpoint"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->endpoint_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18,
      this->endpoint(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreOrganization)
}

::google::protobuf::uint8* UsCoreOrganization::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreOrganization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_meta(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_implicit_rules(), deterministic, target);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_language(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_text(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->contained(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->identifier(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Boolean active = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_active(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept type = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->type_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->type(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.String name = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_name(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.String alias = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alias_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->alias(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ContactPoint telecom = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->telecom_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->telecom(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Address address = 15 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->address_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->address(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference part_of = 16 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_part_of()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_part_of(), deterministic, target);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreOrganization.Contact contact = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contact_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->contact(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference endpoint = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Endpoint"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->endpoint_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->endpoint(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreOrganization)
  return target;
}

size_t UsCoreOrganization::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreOrganization)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->contained_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->contained(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  {
    unsigned int count = static_cast<unsigned int>(this->identifier_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->identifier(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept type = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->type_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->type(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.String alias = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->alias_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->alias(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.ContactPoint telecom = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  {
    unsigned int count = static_cast<unsigned int>(this->telecom_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->telecom(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Address address = 15 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  {
    unsigned int count = static_cast<unsigned int>(this->address_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->address(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.uscore.UsCoreOrganization.Contact contact = 17;
  {
    unsigned int count = static_cast<unsigned int>(this->contact_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->contact(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference endpoint = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Endpoint"];
  {
    unsigned int count = static_cast<unsigned int>(this->endpoint_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->endpoint(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *implicit_rules_);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *language_);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *text_);
  }

  // .google.fhir.stu3.proto.Boolean active = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_active()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *active_);
  }

  // .google.fhir.stu3.proto.String name = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *name_);
  }

  // .google.fhir.stu3.proto.Reference part_of = 16 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_part_of()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *part_of_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreOrganization::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreOrganization)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreOrganization* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreOrganization>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreOrganization)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreOrganization)
    MergeFrom(*source);
  }
}

void UsCoreOrganization::MergeFrom(const UsCoreOrganization& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreOrganization)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contained_.MergeFrom(from.contained_);
  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  identifier_.MergeFrom(from.identifier_);
  type_.MergeFrom(from.type_);
  alias_.MergeFrom(from.alias_);
  telecom_.MergeFrom(from.telecom_);
  address_.MergeFrom(from.address_);
  contact_.MergeFrom(from.contact_);
  endpoint_.MergeFrom(from.endpoint_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::Id::MergeFrom(from.id());
  }
  if (from.has_meta()) {
    mutable_meta()->::google::fhir::stu3::proto::Meta::MergeFrom(from.meta());
  }
  if (from.has_implicit_rules()) {
    mutable_implicit_rules()->::google::fhir::stu3::proto::Uri::MergeFrom(from.implicit_rules());
  }
  if (from.has_language()) {
    mutable_language()->::google::fhir::stu3::proto::LanguageCode::MergeFrom(from.language());
  }
  if (from.has_text()) {
    mutable_text()->::google::fhir::stu3::proto::Narrative::MergeFrom(from.text());
  }
  if (from.has_active()) {
    mutable_active()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.active());
  }
  if (from.has_name()) {
    mutable_name()->::google::fhir::stu3::proto::String::MergeFrom(from.name());
  }
  if (from.has_part_of()) {
    mutable_part_of()->::google::fhir::stu3::proto::Reference::MergeFrom(from.part_of());
  }
}

void UsCoreOrganization::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreOrganization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreOrganization::CopyFrom(const UsCoreOrganization& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreOrganization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreOrganization::IsInitialized() const {
  return true;
}

void UsCoreOrganization::Swap(UsCoreOrganization* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreOrganization::InternalSwap(UsCoreOrganization* other) {
  using std::swap;
  CastToBase(&contained_)->InternalSwap(CastToBase(&other->contained_));
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&identifier_)->InternalSwap(CastToBase(&other->identifier_));
  CastToBase(&type_)->InternalSwap(CastToBase(&other->type_));
  CastToBase(&alias_)->InternalSwap(CastToBase(&other->alias_));
  CastToBase(&telecom_)->InternalSwap(CastToBase(&other->telecom_));
  CastToBase(&address_)->InternalSwap(CastToBase(&other->address_));
  CastToBase(&contact_)->InternalSwap(CastToBase(&other->contact_));
  CastToBase(&endpoint_)->InternalSwap(CastToBase(&other->endpoint_));
  swap(id_, other->id_);
  swap(meta_, other->meta_);
  swap(implicit_rules_, other->implicit_rules_);
  swap(language_, other->language_);
  swap(text_, other->text_);
  swap(active_, other->active_);
  swap(name_, other->name_);
  swap(part_of_, other->part_of_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreOrganization::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCorePatient_Deceased::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCorePatient_Deceased_default_instance_.boolean_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePatient_Deceased_default_instance_.date_time_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
}
void UsCorePatient_Deceased::set_allocated_boolean(::google::fhir::stu3::proto::Boolean* boolean) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_deceased();
  if (boolean) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      boolean = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, boolean, submessage_arena);
    }
    set_has_boolean();
    deceased_.boolean_ = boolean;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.Deceased.boolean)
}
void UsCorePatient_Deceased::clear_boolean() {
  if (has_boolean()) {
    delete deceased_.boolean_;
    clear_has_deceased();
  }
}
void UsCorePatient_Deceased::set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_deceased();
  if (date_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date_time, submessage_arena);
    }
    set_has_date_time();
    deceased_.date_time_ = date_time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.Deceased.date_time)
}
void UsCorePatient_Deceased::clear_date_time() {
  if (has_date_time()) {
    delete deceased_.date_time_;
    clear_has_deceased();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCorePatient_Deceased::kBooleanFieldNumber;
const int UsCorePatient_Deceased::kDateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCorePatient_Deceased::UsCorePatient_Deceased()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCorePatient_Deceased.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCorePatient.Deceased)
}
UsCorePatient_Deceased::UsCorePatient_Deceased(const UsCorePatient_Deceased& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_deceased();
  switch (from.deceased_case()) {
    case kBoolean: {
      mutable_boolean()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.boolean());
      break;
    }
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case DECEASED_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCorePatient.Deceased)
}

void UsCorePatient_Deceased::SharedCtor() {
  clear_has_deceased();
}

UsCorePatient_Deceased::~UsCorePatient_Deceased() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCorePatient.Deceased)
  SharedDtor();
}

void UsCorePatient_Deceased::SharedDtor() {
  if (has_deceased()) {
    clear_deceased();
  }
}

void UsCorePatient_Deceased::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCorePatient_Deceased::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCorePatient_Deceased& UsCorePatient_Deceased::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCorePatient_Deceased.base);
  return *internal_default_instance();
}


void UsCorePatient_Deceased::clear_deceased() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.uscore.UsCorePatient.Deceased)
  switch (deceased_case()) {
    case kBoolean: {
      delete deceased_.boolean_;
      break;
    }
    case kDateTime: {
      delete deceased_.date_time_;
      break;
    }
    case DECEASED_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DECEASED_NOT_SET;
}


void UsCorePatient_Deceased::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCorePatient.Deceased)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_deceased();
  _internal_metadata_.Clear();
}

bool UsCorePatient_Deceased::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCorePatient.Deceased)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Boolean boolean = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_boolean()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DateTime date_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCorePatient.Deceased)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCorePatient.Deceased)
  return false;
#undef DO_
}

void UsCorePatient_Deceased::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCorePatient.Deceased)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Boolean boolean = 1;
  if (has_boolean()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_boolean(), output);
  }

  // .google.fhir.stu3.proto.DateTime date_time = 2;
  if (has_date_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_date_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCorePatient.Deceased)
}

::google::protobuf::uint8* UsCorePatient_Deceased::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCorePatient.Deceased)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Boolean boolean = 1;
  if (has_boolean()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_boolean(), deterministic, target);
  }

  // .google.fhir.stu3.proto.DateTime date_time = 2;
  if (has_date_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_date_time(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCorePatient.Deceased)
  return target;
}

size_t UsCorePatient_Deceased::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCorePatient.Deceased)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (deceased_case()) {
    // .google.fhir.stu3.proto.Boolean boolean = 1;
    case kBoolean: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *deceased_.boolean_);
      break;
    }
    // .google.fhir.stu3.proto.DateTime date_time = 2;
    case kDateTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *deceased_.date_time_);
      break;
    }
    case DECEASED_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCorePatient_Deceased::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCorePatient.Deceased)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCorePatient_Deceased* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCorePatient_Deceased>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCorePatient.Deceased)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCorePatient.Deceased)
    MergeFrom(*source);
  }
}

void UsCorePatient_Deceased::MergeFrom(const UsCorePatient_Deceased& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCorePatient.Deceased)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.deceased_case()) {
    case kBoolean: {
      mutable_boolean()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.boolean());
      break;
    }
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case DECEASED_NOT_SET: {
      break;
    }
  }
}

void UsCorePatient_Deceased::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCorePatient.Deceased)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCorePatient_Deceased::CopyFrom(const UsCorePatient_Deceased& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCorePatient.Deceased)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCorePatient_Deceased::IsInitialized() const {
  return true;
}

void UsCorePatient_Deceased::Swap(UsCorePatient_Deceased* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCorePatient_Deceased::InternalSwap(UsCorePatient_Deceased* other) {
  using std::swap;
  swap(deceased_, other->deceased_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCorePatient_Deceased::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCorePatient_MultipleBirth::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCorePatient_MultipleBirth_default_instance_.boolean_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePatient_MultipleBirth_default_instance_.integer_ = const_cast< ::google::fhir::stu3::proto::Integer*>(
      ::google::fhir::stu3::proto::Integer::internal_default_instance());
}
void UsCorePatient_MultipleBirth::set_allocated_boolean(::google::fhir::stu3::proto::Boolean* boolean) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_multiple_birth();
  if (boolean) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      boolean = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, boolean, submessage_arena);
    }
    set_has_boolean();
    multiple_birth_.boolean_ = boolean;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.MultipleBirth.boolean)
}
void UsCorePatient_MultipleBirth::clear_boolean() {
  if (has_boolean()) {
    delete multiple_birth_.boolean_;
    clear_has_multiple_birth();
  }
}
void UsCorePatient_MultipleBirth::set_allocated_integer(::google::fhir::stu3::proto::Integer* integer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_multiple_birth();
  if (integer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      integer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, integer, submessage_arena);
    }
    set_has_integer();
    multiple_birth_.integer_ = integer;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.MultipleBirth.integer)
}
void UsCorePatient_MultipleBirth::clear_integer() {
  if (has_integer()) {
    delete multiple_birth_.integer_;
    clear_has_multiple_birth();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCorePatient_MultipleBirth::kBooleanFieldNumber;
const int UsCorePatient_MultipleBirth::kIntegerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCorePatient_MultipleBirth::UsCorePatient_MultipleBirth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCorePatient_MultipleBirth.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCorePatient.MultipleBirth)
}
UsCorePatient_MultipleBirth::UsCorePatient_MultipleBirth(const UsCorePatient_MultipleBirth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_multiple_birth();
  switch (from.multiple_birth_case()) {
    case kBoolean: {
      mutable_boolean()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.boolean());
      break;
    }
    case kInteger: {
      mutable_integer()->::google::fhir::stu3::proto::Integer::MergeFrom(from.integer());
      break;
    }
    case MULTIPLE_BIRTH_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCorePatient.MultipleBirth)
}

void UsCorePatient_MultipleBirth::SharedCtor() {
  clear_has_multiple_birth();
}

UsCorePatient_MultipleBirth::~UsCorePatient_MultipleBirth() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCorePatient.MultipleBirth)
  SharedDtor();
}

void UsCorePatient_MultipleBirth::SharedDtor() {
  if (has_multiple_birth()) {
    clear_multiple_birth();
  }
}

void UsCorePatient_MultipleBirth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCorePatient_MultipleBirth::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCorePatient_MultipleBirth& UsCorePatient_MultipleBirth::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCorePatient_MultipleBirth.base);
  return *internal_default_instance();
}


void UsCorePatient_MultipleBirth::clear_multiple_birth() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.uscore.UsCorePatient.MultipleBirth)
  switch (multiple_birth_case()) {
    case kBoolean: {
      delete multiple_birth_.boolean_;
      break;
    }
    case kInteger: {
      delete multiple_birth_.integer_;
      break;
    }
    case MULTIPLE_BIRTH_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MULTIPLE_BIRTH_NOT_SET;
}


void UsCorePatient_MultipleBirth::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCorePatient.MultipleBirth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_multiple_birth();
  _internal_metadata_.Clear();
}

bool UsCorePatient_MultipleBirth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCorePatient.MultipleBirth)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Boolean boolean = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_boolean()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Integer integer = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_integer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCorePatient.MultipleBirth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCorePatient.MultipleBirth)
  return false;
#undef DO_
}

void UsCorePatient_MultipleBirth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCorePatient.MultipleBirth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Boolean boolean = 1;
  if (has_boolean()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_boolean(), output);
  }

  // .google.fhir.stu3.proto.Integer integer = 2;
  if (has_integer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_integer(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCorePatient.MultipleBirth)
}

::google::protobuf::uint8* UsCorePatient_MultipleBirth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCorePatient.MultipleBirth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Boolean boolean = 1;
  if (has_boolean()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_boolean(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Integer integer = 2;
  if (has_integer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_integer(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCorePatient.MultipleBirth)
  return target;
}

size_t UsCorePatient_MultipleBirth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCorePatient.MultipleBirth)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (multiple_birth_case()) {
    // .google.fhir.stu3.proto.Boolean boolean = 1;
    case kBoolean: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *multiple_birth_.boolean_);
      break;
    }
    // .google.fhir.stu3.proto.Integer integer = 2;
    case kInteger: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *multiple_birth_.integer_);
      break;
    }
    case MULTIPLE_BIRTH_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCorePatient_MultipleBirth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCorePatient.MultipleBirth)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCorePatient_MultipleBirth* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCorePatient_MultipleBirth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCorePatient.MultipleBirth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCorePatient.MultipleBirth)
    MergeFrom(*source);
  }
}

void UsCorePatient_MultipleBirth::MergeFrom(const UsCorePatient_MultipleBirth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCorePatient.MultipleBirth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.multiple_birth_case()) {
    case kBoolean: {
      mutable_boolean()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.boolean());
      break;
    }
    case kInteger: {
      mutable_integer()->::google::fhir::stu3::proto::Integer::MergeFrom(from.integer());
      break;
    }
    case MULTIPLE_BIRTH_NOT_SET: {
      break;
    }
  }
}

void UsCorePatient_MultipleBirth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCorePatient.MultipleBirth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCorePatient_MultipleBirth::CopyFrom(const UsCorePatient_MultipleBirth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCorePatient.MultipleBirth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCorePatient_MultipleBirth::IsInitialized() const {
  return true;
}

void UsCorePatient_MultipleBirth::Swap(UsCorePatient_MultipleBirth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCorePatient_MultipleBirth::InternalSwap(UsCorePatient_MultipleBirth* other) {
  using std::swap;
  swap(multiple_birth_, other->multiple_birth_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCorePatient_MultipleBirth::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCorePatient_Contact::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCorePatient_Contact_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePatient_Contact_default_instance_._instance.get_mutable()->name_ = const_cast< ::google::fhir::stu3::proto::HumanName*>(
      ::google::fhir::stu3::proto::HumanName::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePatient_Contact_default_instance_._instance.get_mutable()->address_ = const_cast< ::google::fhir::stu3::proto::Address*>(
      ::google::fhir::stu3::proto::Address::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePatient_Contact_default_instance_._instance.get_mutable()->gender_ = const_cast< ::google::fhir::stu3::proto::AdministrativeGenderCode*>(
      ::google::fhir::stu3::proto::AdministrativeGenderCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePatient_Contact_default_instance_._instance.get_mutable()->organization_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePatient_Contact_default_instance_._instance.get_mutable()->period_ = const_cast< ::google::fhir::stu3::proto::Period*>(
      ::google::fhir::stu3::proto::Period::internal_default_instance());
}
void UsCorePatient_Contact::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCorePatient_Contact::clear_extension() {
  extension_.Clear();
}
void UsCorePatient_Contact::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCorePatient_Contact::clear_relationship() {
  relationship_.Clear();
}
void UsCorePatient_Contact::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void UsCorePatient_Contact::clear_telecom() {
  telecom_.Clear();
}
void UsCorePatient_Contact::clear_address() {
  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
}
void UsCorePatient_Contact::clear_gender() {
  if (GetArenaNoVirtual() == NULL && gender_ != NULL) {
    delete gender_;
  }
  gender_ = NULL;
}
void UsCorePatient_Contact::clear_organization() {
  if (GetArenaNoVirtual() == NULL && organization_ != NULL) {
    delete organization_;
  }
  organization_ = NULL;
}
void UsCorePatient_Contact::clear_period() {
  if (GetArenaNoVirtual() == NULL && period_ != NULL) {
    delete period_;
  }
  period_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCorePatient_Contact::kIdFieldNumber;
const int UsCorePatient_Contact::kExtensionFieldNumber;
const int UsCorePatient_Contact::kModifierExtensionFieldNumber;
const int UsCorePatient_Contact::kRelationshipFieldNumber;
const int UsCorePatient_Contact::kNameFieldNumber;
const int UsCorePatient_Contact::kTelecomFieldNumber;
const int UsCorePatient_Contact::kAddressFieldNumber;
const int UsCorePatient_Contact::kGenderFieldNumber;
const int UsCorePatient_Contact::kOrganizationFieldNumber;
const int UsCorePatient_Contact::kPeriodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCorePatient_Contact::UsCorePatient_Contact()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCorePatient_Contact.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCorePatient.Contact)
}
UsCorePatient_Contact::UsCorePatient_Contact(const UsCorePatient_Contact& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      relationship_(from.relationship_),
      telecom_(from.telecom_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::google::fhir::stu3::proto::HumanName(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_address()) {
    address_ = new ::google::fhir::stu3::proto::Address(*from.address_);
  } else {
    address_ = NULL;
  }
  if (from.has_gender()) {
    gender_ = new ::google::fhir::stu3::proto::AdministrativeGenderCode(*from.gender_);
  } else {
    gender_ = NULL;
  }
  if (from.has_organization()) {
    organization_ = new ::google::fhir::stu3::proto::Reference(*from.organization_);
  } else {
    organization_ = NULL;
  }
  if (from.has_period()) {
    period_ = new ::google::fhir::stu3::proto::Period(*from.period_);
  } else {
    period_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCorePatient.Contact)
}

void UsCorePatient_Contact::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&period_) -
      reinterpret_cast<char*>(&id_)) + sizeof(period_));
}

UsCorePatient_Contact::~UsCorePatient_Contact() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCorePatient.Contact)
  SharedDtor();
}

void UsCorePatient_Contact::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete address_;
  if (this != internal_default_instance()) delete gender_;
  if (this != internal_default_instance()) delete organization_;
  if (this != internal_default_instance()) delete period_;
}

void UsCorePatient_Contact::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCorePatient_Contact::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCorePatient_Contact& UsCorePatient_Contact::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCorePatient_Contact.base);
  return *internal_default_instance();
}


void UsCorePatient_Contact::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCorePatient.Contact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  relationship_.Clear();
  telecom_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
  if (GetArenaNoVirtual() == NULL && gender_ != NULL) {
    delete gender_;
  }
  gender_ = NULL;
  if (GetArenaNoVirtual() == NULL && organization_ != NULL) {
    delete organization_;
  }
  organization_ = NULL;
  if (GetArenaNoVirtual() == NULL && period_ != NULL) {
    delete period_;
  }
  period_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCorePatient_Contact::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCorePatient.Contact)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept relationship = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_relationship()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.HumanName name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ContactPoint telecom = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_telecom()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Address address = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.AdministrativeGenderCode gender = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gender()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference organization = 9 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_organization()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Period period = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCorePatient.Contact)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCorePatient.Contact)
  return false;
#undef DO_
}

void UsCorePatient_Contact::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCorePatient.Contact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept relationship = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->relationship_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->relationship(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.HumanName name = 5;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_name(), output);
  }

  // repeated .google.fhir.stu3.proto.ContactPoint telecom = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->telecom_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->telecom(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Address address = 7;
  if (this->has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_address(), output);
  }

  // .google.fhir.stu3.proto.AdministrativeGenderCode gender = 8;
  if (this->has_gender()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_gender(), output);
  }

  // .google.fhir.stu3.proto.Reference organization = 9 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_organization()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_organization(), output);
  }

  // .google.fhir.stu3.proto.Period period = 10;
  if (this->has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_period(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCorePatient.Contact)
}

::google::protobuf::uint8* UsCorePatient_Contact::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCorePatient.Contact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept relationship = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->relationship_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->relationship(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.HumanName name = 5;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_name(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ContactPoint telecom = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->telecom_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->telecom(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Address address = 7;
  if (this->has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_address(), deterministic, target);
  }

  // .google.fhir.stu3.proto.AdministrativeGenderCode gender = 8;
  if (this->has_gender()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_gender(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference organization = 9 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_organization()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_organization(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Period period = 10;
  if (this->has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_period(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCorePatient.Contact)
  return target;
}

size_t UsCorePatient_Contact::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCorePatient.Contact)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept relationship = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->relationship_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->relationship(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.ContactPoint telecom = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->telecom_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->telecom(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.HumanName name = 5;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *name_);
  }

  // .google.fhir.stu3.proto.Address address = 7;
  if (this->has_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *address_);
  }

  // .google.fhir.stu3.proto.AdministrativeGenderCode gender = 8;
  if (this->has_gender()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *gender_);
  }

  // .google.fhir.stu3.proto.Reference organization = 9 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_organization()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *organization_);
  }

  // .google.fhir.stu3.proto.Period period = 10;
  if (this->has_period()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *period_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCorePatient_Contact::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCorePatient.Contact)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCorePatient_Contact* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCorePatient_Contact>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCorePatient.Contact)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCorePatient.Contact)
    MergeFrom(*source);
  }
}

void UsCorePatient_Contact::MergeFrom(const UsCorePatient_Contact& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCorePatient.Contact)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  relationship_.MergeFrom(from.relationship_);
  telecom_.MergeFrom(from.telecom_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_name()) {
    mutable_name()->::google::fhir::stu3::proto::HumanName::MergeFrom(from.name());
  }
  if (from.has_address()) {
    mutable_address()->::google::fhir::stu3::proto::Address::MergeFrom(from.address());
  }
  if (from.has_gender()) {
    mutable_gender()->::google::fhir::stu3::proto::AdministrativeGenderCode::MergeFrom(from.gender());
  }
  if (from.has_organization()) {
    mutable_organization()->::google::fhir::stu3::proto::Reference::MergeFrom(from.organization());
  }
  if (from.has_period()) {
    mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
  }
}

void UsCorePatient_Contact::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCorePatient.Contact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCorePatient_Contact::CopyFrom(const UsCorePatient_Contact& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCorePatient.Contact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCorePatient_Contact::IsInitialized() const {
  return true;
}

void UsCorePatient_Contact::Swap(UsCorePatient_Contact* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCorePatient_Contact::InternalSwap(UsCorePatient_Contact* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&relationship_)->InternalSwap(CastToBase(&other->relationship_));
  CastToBase(&telecom_)->InternalSwap(CastToBase(&other->telecom_));
  swap(id_, other->id_);
  swap(name_, other->name_);
  swap(address_, other->address_);
  swap(gender_, other->gender_);
  swap(organization_, other->organization_);
  swap(period_, other->period_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCorePatient_Contact::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCorePatient_Communication::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCorePatient_Communication_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePatient_Communication_default_instance_._instance.get_mutable()->language_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePatient_Communication_default_instance_._instance.get_mutable()->preferred_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
}
void UsCorePatient_Communication::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCorePatient_Communication::clear_extension() {
  extension_.Clear();
}
void UsCorePatient_Communication::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCorePatient_Communication::clear_language() {
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
}
void UsCorePatient_Communication::clear_preferred() {
  if (GetArenaNoVirtual() == NULL && preferred_ != NULL) {
    delete preferred_;
  }
  preferred_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCorePatient_Communication::kIdFieldNumber;
const int UsCorePatient_Communication::kExtensionFieldNumber;
const int UsCorePatient_Communication::kModifierExtensionFieldNumber;
const int UsCorePatient_Communication::kLanguageFieldNumber;
const int UsCorePatient_Communication::kPreferredFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCorePatient_Communication::UsCorePatient_Communication()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCorePatient_Communication.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCorePatient.Communication)
}
UsCorePatient_Communication::UsCorePatient_Communication(const UsCorePatient_Communication& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_language()) {
    language_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.language_);
  } else {
    language_ = NULL;
  }
  if (from.has_preferred()) {
    preferred_ = new ::google::fhir::stu3::proto::Boolean(*from.preferred_);
  } else {
    preferred_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCorePatient.Communication)
}

void UsCorePatient_Communication::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&preferred_) -
      reinterpret_cast<char*>(&id_)) + sizeof(preferred_));
}

UsCorePatient_Communication::~UsCorePatient_Communication() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCorePatient.Communication)
  SharedDtor();
}

void UsCorePatient_Communication::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete language_;
  if (this != internal_default_instance()) delete preferred_;
}

void UsCorePatient_Communication::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCorePatient_Communication::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCorePatient_Communication& UsCorePatient_Communication::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCorePatient_Communication.base);
  return *internal_default_instance();
}


void UsCorePatient_Communication::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCorePatient.Communication)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
  if (GetArenaNoVirtual() == NULL && preferred_ != NULL) {
    delete preferred_;
  }
  preferred_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCorePatient_Communication::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCorePatient.Communication)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept language = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_language()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Boolean preferred = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_preferred()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCorePatient.Communication)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCorePatient.Communication)
  return false;
#undef DO_
}

void UsCorePatient_Communication::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCorePatient.Communication)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.CodeableConcept language = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_language()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_language(), output);
  }

  // .google.fhir.stu3.proto.Boolean preferred = 5;
  if (this->has_preferred()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_preferred(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCorePatient.Communication)
}

::google::protobuf::uint8* UsCorePatient_Communication::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCorePatient.Communication)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept language = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_language()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_language(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Boolean preferred = 5;
  if (this->has_preferred()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_preferred(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCorePatient.Communication)
  return target;
}

size_t UsCorePatient_Communication::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCorePatient.Communication)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.CodeableConcept language = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_language()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *language_);
  }

  // .google.fhir.stu3.proto.Boolean preferred = 5;
  if (this->has_preferred()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *preferred_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCorePatient_Communication::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCorePatient.Communication)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCorePatient_Communication* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCorePatient_Communication>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCorePatient.Communication)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCorePatient.Communication)
    MergeFrom(*source);
  }
}

void UsCorePatient_Communication::MergeFrom(const UsCorePatient_Communication& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCorePatient.Communication)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_language()) {
    mutable_language()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.language());
  }
  if (from.has_preferred()) {
    mutable_preferred()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.preferred());
  }
}

void UsCorePatient_Communication::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCorePatient.Communication)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCorePatient_Communication::CopyFrom(const UsCorePatient_Communication& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCorePatient.Communication)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCorePatient_Communication::IsInitialized() const {
  return true;
}

void UsCorePatient_Communication::Swap(UsCorePatient_Communication* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCorePatient_Communication::InternalSwap(UsCorePatient_Communication* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  swap(id_, other->id_);
  swap(language_, other->language_);
  swap(preferred_, other->preferred_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCorePatient_Communication::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCorePatient_Link::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCorePatient_Link_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePatient_Link_default_instance_._instance.get_mutable()->other_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePatient_Link_default_instance_._instance.get_mutable()->type_ = const_cast< ::google::fhir::stu3::proto::LinkTypeCode*>(
      ::google::fhir::stu3::proto::LinkTypeCode::internal_default_instance());
}
void UsCorePatient_Link::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCorePatient_Link::clear_extension() {
  extension_.Clear();
}
void UsCorePatient_Link::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCorePatient_Link::clear_other() {
  if (GetArenaNoVirtual() == NULL && other_ != NULL) {
    delete other_;
  }
  other_ = NULL;
}
void UsCorePatient_Link::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCorePatient_Link::kIdFieldNumber;
const int UsCorePatient_Link::kExtensionFieldNumber;
const int UsCorePatient_Link::kModifierExtensionFieldNumber;
const int UsCorePatient_Link::kOtherFieldNumber;
const int UsCorePatient_Link::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCorePatient_Link::UsCorePatient_Link()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCorePatient_Link.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCorePatient.Link)
}
UsCorePatient_Link::UsCorePatient_Link(const UsCorePatient_Link& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_other()) {
    other_ = new ::google::fhir::stu3::proto::Reference(*from.other_);
  } else {
    other_ = NULL;
  }
  if (from.has_type()) {
    type_ = new ::google::fhir::stu3::proto::LinkTypeCode(*from.type_);
  } else {
    type_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCorePatient.Link)
}

void UsCorePatient_Link::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
}

UsCorePatient_Link::~UsCorePatient_Link() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCorePatient.Link)
  SharedDtor();
}

void UsCorePatient_Link::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete other_;
  if (this != internal_default_instance()) delete type_;
}

void UsCorePatient_Link::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCorePatient_Link::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCorePatient_Link& UsCorePatient_Link::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCorePatient_Link.base);
  return *internal_default_instance();
}


void UsCorePatient_Link::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCorePatient.Link)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && other_ != NULL) {
    delete other_;
  }
  other_ = NULL;
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCorePatient_Link::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCorePatient.Link)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference other = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_other()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.LinkTypeCode type = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCorePatient.Link)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCorePatient.Link)
  return false;
#undef DO_
}

void UsCorePatient_Link::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCorePatient.Link)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Reference other = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
  if (this->has_other()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_other(), output);
  }

  // .google.fhir.stu3.proto.LinkTypeCode type = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCorePatient.Link)
}

::google::protobuf::uint8* UsCorePatient_Link::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCorePatient.Link)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference other = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
  if (this->has_other()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_other(), deterministic, target);
  }

  // .google.fhir.stu3.proto.LinkTypeCode type = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_type(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCorePatient.Link)
  return target;
}

size_t UsCorePatient_Link::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCorePatient.Link)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Reference other = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
  if (this->has_other()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *other_);
  }

  // .google.fhir.stu3.proto.LinkTypeCode type = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCorePatient_Link::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCorePatient.Link)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCorePatient_Link* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCorePatient_Link>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCorePatient.Link)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCorePatient.Link)
    MergeFrom(*source);
  }
}

void UsCorePatient_Link::MergeFrom(const UsCorePatient_Link& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCorePatient.Link)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_other()) {
    mutable_other()->::google::fhir::stu3::proto::Reference::MergeFrom(from.other());
  }
  if (from.has_type()) {
    mutable_type()->::google::fhir::stu3::proto::LinkTypeCode::MergeFrom(from.type());
  }
}

void UsCorePatient_Link::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCorePatient.Link)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCorePatient_Link::CopyFrom(const UsCorePatient_Link& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCorePatient.Link)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCorePatient_Link::IsInitialized() const {
  return true;
}

void UsCorePatient_Link::Swap(UsCorePatient_Link* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCorePatient_Link::InternalSwap(UsCorePatient_Link* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  swap(id_, other->id_);
  swap(other_, other->other_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCorePatient_Link::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCorePatient::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCorePatient_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::Id*>(
      ::google::fhir::stu3::proto::Id::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePatient_default_instance_._instance.get_mutable()->meta_ = const_cast< ::google::fhir::stu3::proto::Meta*>(
      ::google::fhir::stu3::proto::Meta::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePatient_default_instance_._instance.get_mutable()->implicit_rules_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePatient_default_instance_._instance.get_mutable()->language_ = const_cast< ::google::fhir::stu3::proto::LanguageCode*>(
      ::google::fhir::stu3::proto::LanguageCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePatient_default_instance_._instance.get_mutable()->text_ = const_cast< ::google::fhir::stu3::proto::Narrative*>(
      ::google::fhir::stu3::proto::Narrative::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePatient_default_instance_._instance.get_mutable()->active_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePatient_default_instance_._instance.get_mutable()->gender_ = const_cast< ::google::fhir::stu3::proto::AdministrativeGenderCode*>(
      ::google::fhir::stu3::proto::AdministrativeGenderCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePatient_default_instance_._instance.get_mutable()->birth_date_ = const_cast< ::google::fhir::stu3::proto::Date*>(
      ::google::fhir::stu3::proto::Date::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePatient_default_instance_._instance.get_mutable()->deceased_ = const_cast< ::google::fhir::stu3::uscore::UsCorePatient_Deceased*>(
      ::google::fhir::stu3::uscore::UsCorePatient_Deceased::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePatient_default_instance_._instance.get_mutable()->marital_status_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePatient_default_instance_._instance.get_mutable()->multiple_birth_ = const_cast< ::google::fhir::stu3::uscore::UsCorePatient_MultipleBirth*>(
      ::google::fhir::stu3::uscore::UsCorePatient_MultipleBirth::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePatient_default_instance_._instance.get_mutable()->managing_organization_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePatient_default_instance_._instance.get_mutable()->race_ = const_cast< ::google::fhir::stu3::uscore::PatientUSCoreRaceExtension*>(
      ::google::fhir::stu3::uscore::PatientUSCoreRaceExtension::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePatient_default_instance_._instance.get_mutable()->ethnicity_ = const_cast< ::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension*>(
      ::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePatient_default_instance_._instance.get_mutable()->birthsex_ = const_cast< ::google::fhir::stu3::uscore::UsCoreBirthSexCode*>(
      ::google::fhir::stu3::uscore::UsCoreBirthSexCode::internal_default_instance());
}
void UsCorePatient::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCorePatient::clear_meta() {
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
}
void UsCorePatient::clear_implicit_rules() {
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
}
void UsCorePatient::clear_language() {
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
}
void UsCorePatient::clear_text() {
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
}
void UsCorePatient::clear_contained() {
  contained_.Clear();
}
void UsCorePatient::clear_extension() {
  extension_.Clear();
}
void UsCorePatient::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCorePatient::clear_identifier() {
  identifier_.Clear();
}
void UsCorePatient::clear_active() {
  if (GetArenaNoVirtual() == NULL && active_ != NULL) {
    delete active_;
  }
  active_ = NULL;
}
void UsCorePatient::clear_name() {
  name_.Clear();
}
void UsCorePatient::clear_telecom() {
  telecom_.Clear();
}
void UsCorePatient::clear_gender() {
  if (GetArenaNoVirtual() == NULL && gender_ != NULL) {
    delete gender_;
  }
  gender_ = NULL;
}
void UsCorePatient::clear_birth_date() {
  if (GetArenaNoVirtual() == NULL && birth_date_ != NULL) {
    delete birth_date_;
  }
  birth_date_ = NULL;
}
void UsCorePatient::clear_address() {
  address_.Clear();
}
void UsCorePatient::clear_marital_status() {
  if (GetArenaNoVirtual() == NULL && marital_status_ != NULL) {
    delete marital_status_;
  }
  marital_status_ = NULL;
}
void UsCorePatient::clear_photo() {
  photo_.Clear();
}
void UsCorePatient::clear_general_practitioner() {
  general_practitioner_.Clear();
}
void UsCorePatient::clear_managing_organization() {
  if (GetArenaNoVirtual() == NULL && managing_organization_ != NULL) {
    delete managing_organization_;
  }
  managing_organization_ = NULL;
}
void UsCorePatient::clear_birthsex() {
  if (GetArenaNoVirtual() == NULL && birthsex_ != NULL) {
    delete birthsex_;
  }
  birthsex_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCorePatient::kIdFieldNumber;
const int UsCorePatient::kMetaFieldNumber;
const int UsCorePatient::kImplicitRulesFieldNumber;
const int UsCorePatient::kLanguageFieldNumber;
const int UsCorePatient::kTextFieldNumber;
const int UsCorePatient::kContainedFieldNumber;
const int UsCorePatient::kExtensionFieldNumber;
const int UsCorePatient::kModifierExtensionFieldNumber;
const int UsCorePatient::kIdentifierFieldNumber;
const int UsCorePatient::kActiveFieldNumber;
const int UsCorePatient::kNameFieldNumber;
const int UsCorePatient::kTelecomFieldNumber;
const int UsCorePatient::kGenderFieldNumber;
const int UsCorePatient::kBirthDateFieldNumber;
const int UsCorePatient::kDeceasedFieldNumber;
const int UsCorePatient::kAddressFieldNumber;
const int UsCorePatient::kMaritalStatusFieldNumber;
const int UsCorePatient::kMultipleBirthFieldNumber;
const int UsCorePatient::kPhotoFieldNumber;
const int UsCorePatient::kContactFieldNumber;
const int UsCorePatient::kCommunicationFieldNumber;
const int UsCorePatient::kGeneralPractitionerFieldNumber;
const int UsCorePatient::kManagingOrganizationFieldNumber;
const int UsCorePatient::kLinkFieldNumber;
const int UsCorePatient::kRaceFieldNumber;
const int UsCorePatient::kEthnicityFieldNumber;
const int UsCorePatient::kBirthsexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCorePatient::UsCorePatient()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCorePatient.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCorePatient)
}
UsCorePatient::UsCorePatient(const UsCorePatient& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      contained_(from.contained_),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      identifier_(from.identifier_),
      name_(from.name_),
      telecom_(from.telecom_),
      address_(from.address_),
      photo_(from.photo_),
      contact_(from.contact_),
      communication_(from.communication_),
      general_practitioner_(from.general_practitioner_),
      link_(from.link_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::Id(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_meta()) {
    meta_ = new ::google::fhir::stu3::proto::Meta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  if (from.has_implicit_rules()) {
    implicit_rules_ = new ::google::fhir::stu3::proto::Uri(*from.implicit_rules_);
  } else {
    implicit_rules_ = NULL;
  }
  if (from.has_language()) {
    language_ = new ::google::fhir::stu3::proto::LanguageCode(*from.language_);
  } else {
    language_ = NULL;
  }
  if (from.has_text()) {
    text_ = new ::google::fhir::stu3::proto::Narrative(*from.text_);
  } else {
    text_ = NULL;
  }
  if (from.has_active()) {
    active_ = new ::google::fhir::stu3::proto::Boolean(*from.active_);
  } else {
    active_ = NULL;
  }
  if (from.has_gender()) {
    gender_ = new ::google::fhir::stu3::proto::AdministrativeGenderCode(*from.gender_);
  } else {
    gender_ = NULL;
  }
  if (from.has_birth_date()) {
    birth_date_ = new ::google::fhir::stu3::proto::Date(*from.birth_date_);
  } else {
    birth_date_ = NULL;
  }
  if (from.has_deceased()) {
    deceased_ = new ::google::fhir::stu3::uscore::UsCorePatient_Deceased(*from.deceased_);
  } else {
    deceased_ = NULL;
  }
  if (from.has_marital_status()) {
    marital_status_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.marital_status_);
  } else {
    marital_status_ = NULL;
  }
  if (from.has_multiple_birth()) {
    multiple_birth_ = new ::google::fhir::stu3::uscore::UsCorePatient_MultipleBirth(*from.multiple_birth_);
  } else {
    multiple_birth_ = NULL;
  }
  if (from.has_managing_organization()) {
    managing_organization_ = new ::google::fhir::stu3::proto::Reference(*from.managing_organization_);
  } else {
    managing_organization_ = NULL;
  }
  if (from.has_race()) {
    race_ = new ::google::fhir::stu3::uscore::PatientUSCoreRaceExtension(*from.race_);
  } else {
    race_ = NULL;
  }
  if (from.has_ethnicity()) {
    ethnicity_ = new ::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension(*from.ethnicity_);
  } else {
    ethnicity_ = NULL;
  }
  if (from.has_birthsex()) {
    birthsex_ = new ::google::fhir::stu3::uscore::UsCoreBirthSexCode(*from.birthsex_);
  } else {
    birthsex_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCorePatient)
}

void UsCorePatient::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&birthsex_) -
      reinterpret_cast<char*>(&id_)) + sizeof(birthsex_));
}

UsCorePatient::~UsCorePatient() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCorePatient)
  SharedDtor();
}

void UsCorePatient::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete implicit_rules_;
  if (this != internal_default_instance()) delete language_;
  if (this != internal_default_instance()) delete text_;
  if (this != internal_default_instance()) delete active_;
  if (this != internal_default_instance()) delete gender_;
  if (this != internal_default_instance()) delete birth_date_;
  if (this != internal_default_instance()) delete deceased_;
  if (this != internal_default_instance()) delete marital_status_;
  if (this != internal_default_instance()) delete multiple_birth_;
  if (this != internal_default_instance()) delete managing_organization_;
  if (this != internal_default_instance()) delete race_;
  if (this != internal_default_instance()) delete ethnicity_;
  if (this != internal_default_instance()) delete birthsex_;
}

void UsCorePatient::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCorePatient::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCorePatient& UsCorePatient::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCorePatient.base);
  return *internal_default_instance();
}


void UsCorePatient::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCorePatient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contained_.Clear();
  extension_.Clear();
  modifier_extension_.Clear();
  identifier_.Clear();
  name_.Clear();
  telecom_.Clear();
  address_.Clear();
  photo_.Clear();
  contact_.Clear();
  communication_.Clear();
  general_practitioner_.Clear();
  link_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  if (GetArenaNoVirtual() == NULL && active_ != NULL) {
    delete active_;
  }
  active_ = NULL;
  if (GetArenaNoVirtual() == NULL && gender_ != NULL) {
    delete gender_;
  }
  gender_ = NULL;
  if (GetArenaNoVirtual() == NULL && birth_date_ != NULL) {
    delete birth_date_;
  }
  birth_date_ = NULL;
  if (GetArenaNoVirtual() == NULL && deceased_ != NULL) {
    delete deceased_;
  }
  deceased_ = NULL;
  if (GetArenaNoVirtual() == NULL && marital_status_ != NULL) {
    delete marital_status_;
  }
  marital_status_ = NULL;
  if (GetArenaNoVirtual() == NULL && multiple_birth_ != NULL) {
    delete multiple_birth_;
  }
  multiple_birth_ = NULL;
  if (GetArenaNoVirtual() == NULL && managing_organization_ != NULL) {
    delete managing_organization_;
  }
  managing_organization_ = NULL;
  if (GetArenaNoVirtual() == NULL && race_ != NULL) {
    delete race_;
  }
  race_ = NULL;
  if (GetArenaNoVirtual() == NULL && ethnicity_ != NULL) {
    delete ethnicity_;
  }
  ethnicity_ = NULL;
  if (GetArenaNoVirtual() == NULL && birthsex_ != NULL) {
    delete birthsex_;
  }
  birthsex_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCorePatient::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCorePatient)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Id id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Meta meta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri implicit_rules = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_implicit_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.LanguageCode language = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_language()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Narrative text = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_contained()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Identifier identifier = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Boolean active = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_active()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.HumanName name = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ContactPoint telecom = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_telecom()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.AdministrativeGenderCode gender = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gender()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Date birth_date = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_birth_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCorePatient.Deceased deceased = 15 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_deceased()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Address address = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept marital_status = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_marital_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCorePatient.MultipleBirth multiple_birth = 18 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_multiple_birth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Attachment photo = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_photo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.uscore.UsCorePatient.Contact contact = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_contact()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.uscore.UsCorePatient.Communication communication = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_communication()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference general_practitioner = 23 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner"];
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_general_practitioner()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference managing_organization = 24 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_managing_organization()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.uscore.UsCorePatient.Link link = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_link()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.PatientUSCoreRaceExtension race = 26 [(.google.fhir.stu3.proto.fhir_inlined_extension_url) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-race"];
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_race()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension ethnicity = 27 [(.google.fhir.stu3.proto.fhir_inlined_extension_url) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity"];
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ethnicity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreBirthSexCode birthsex = 28 [(.google.fhir.stu3.proto.fhir_inlined_extension_url) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex"];
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_birthsex()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCorePatient)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCorePatient)
  return false;
#undef DO_
}

void UsCorePatient::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCorePatient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_meta(), output);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_implicit_rules(), output);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_language(), output);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_text(), output);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->contained(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->identifier(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Boolean active = 10;
  if (this->has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_active(), output);
  }

  // repeated .google.fhir.stu3.proto.HumanName name = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->name_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->name(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.ContactPoint telecom = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->telecom_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->telecom(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.AdministrativeGenderCode gender = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_gender()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_gender(), output);
  }

  // .google.fhir.stu3.proto.Date birth_date = 14;
  if (this->has_birth_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_birth_date(), output);
  }

  // .google.fhir.stu3.uscore.UsCorePatient.Deceased deceased = 15 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_deceased()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_deceased(), output);
  }

  // repeated .google.fhir.stu3.proto.Address address = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->address_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16,
      this->address(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.CodeableConcept marital_status = 17;
  if (this->has_marital_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_marital_status(), output);
  }

  // .google.fhir.stu3.uscore.UsCorePatient.MultipleBirth multiple_birth = 18 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_multiple_birth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_multiple_birth(), output);
  }

  // repeated .google.fhir.stu3.proto.Attachment photo = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->photo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19,
      this->photo(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.uscore.UsCorePatient.Contact contact = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contact_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20,
      this->contact(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.uscore.UsCorePatient.Communication communication = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->communication_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22,
      this->communication(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference general_practitioner = 23 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->general_practitioner_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23,
      this->general_practitioner(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Reference managing_organization = 24 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_managing_organization()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->_internal_managing_organization(), output);
  }

  // repeated .google.fhir.stu3.uscore.UsCorePatient.Link link = 25;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->link_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25,
      this->link(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.uscore.PatientUSCoreRaceExtension race = 26 [(.google.fhir.stu3.proto.fhir_inlined_extension_url) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-race"];
  if (this->has_race()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->_internal_race(), output);
  }

  // .google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension ethnicity = 27 [(.google.fhir.stu3.proto.fhir_inlined_extension_url) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity"];
  if (this->has_ethnicity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->_internal_ethnicity(), output);
  }

  // .google.fhir.stu3.uscore.UsCoreBirthSexCode birthsex = 28 [(.google.fhir.stu3.proto.fhir_inlined_extension_url) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex"];
  if (this->has_birthsex()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, this->_internal_birthsex(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCorePatient)
}

::google::protobuf::uint8* UsCorePatient::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCorePatient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_meta(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_implicit_rules(), deterministic, target);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_language(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_text(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->contained(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->identifier(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Boolean active = 10;
  if (this->has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_active(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.HumanName name = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->name_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->name(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ContactPoint telecom = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->telecom_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->telecom(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.AdministrativeGenderCode gender = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_gender()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_gender(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Date birth_date = 14;
  if (this->has_birth_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_birth_date(), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCorePatient.Deceased deceased = 15 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_deceased()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_deceased(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Address address = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->address_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->address(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept marital_status = 17;
  if (this->has_marital_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_marital_status(), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCorePatient.MultipleBirth multiple_birth = 18 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_multiple_birth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_multiple_birth(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Attachment photo = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->photo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->photo(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.uscore.UsCorePatient.Contact contact = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contact_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->contact(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.uscore.UsCorePatient.Communication communication = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->communication_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->communication(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference general_practitioner = 23 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->general_practitioner_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->general_practitioner(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference managing_organization = 24 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_managing_organization()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->_internal_managing_organization(), deterministic, target);
  }

  // repeated .google.fhir.stu3.uscore.UsCorePatient.Link link = 25;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->link_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->link(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.uscore.PatientUSCoreRaceExtension race = 26 [(.google.fhir.stu3.proto.fhir_inlined_extension_url) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-race"];
  if (this->has_race()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, this->_internal_race(), deterministic, target);
  }

  // .google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension ethnicity = 27 [(.google.fhir.stu3.proto.fhir_inlined_extension_url) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity"];
  if (this->has_ethnicity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, this->_internal_ethnicity(), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreBirthSexCode birthsex = 28 [(.google.fhir.stu3.proto.fhir_inlined_extension_url) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex"];
  if (this->has_birthsex()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, this->_internal_birthsex(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCorePatient)
  return target;
}

size_t UsCorePatient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCorePatient)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->contained_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->contained(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  {
    unsigned int count = static_cast<unsigned int>(this->identifier_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->identifier(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.HumanName name = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  {
    unsigned int count = static_cast<unsigned int>(this->name_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->name(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.ContactPoint telecom = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->telecom_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->telecom(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Address address = 16;
  {
    unsigned int count = static_cast<unsigned int>(this->address_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->address(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Attachment photo = 19;
  {
    unsigned int count = static_cast<unsigned int>(this->photo_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->photo(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.uscore.UsCorePatient.Contact contact = 20;
  {
    unsigned int count = static_cast<unsigned int>(this->contact_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->contact(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.uscore.UsCorePatient.Communication communication = 22;
  {
    unsigned int count = static_cast<unsigned int>(this->communication_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->communication(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference general_practitioner = 23 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner"];
  {
    unsigned int count = static_cast<unsigned int>(this->general_practitioner_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->general_practitioner(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.uscore.UsCorePatient.Link link = 25;
  {
    unsigned int count = static_cast<unsigned int>(this->link_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->link(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *implicit_rules_);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *language_);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *text_);
  }

  // .google.fhir.stu3.proto.Boolean active = 10;
  if (this->has_active()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *active_);
  }

  // .google.fhir.stu3.proto.AdministrativeGenderCode gender = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_gender()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *gender_);
  }

  // .google.fhir.stu3.proto.Date birth_date = 14;
  if (this->has_birth_date()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *birth_date_);
  }

  // .google.fhir.stu3.uscore.UsCorePatient.Deceased deceased = 15 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_deceased()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *deceased_);
  }

  // .google.fhir.stu3.proto.CodeableConcept marital_status = 17;
  if (this->has_marital_status()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *marital_status_);
  }

  // .google.fhir.stu3.uscore.UsCorePatient.MultipleBirth multiple_birth = 18 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_multiple_birth()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *multiple_birth_);
  }

  // .google.fhir.stu3.proto.Reference managing_organization = 24 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_managing_organization()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *managing_organization_);
  }

  // .google.fhir.stu3.uscore.PatientUSCoreRaceExtension race = 26 [(.google.fhir.stu3.proto.fhir_inlined_extension_url) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-race"];
  if (this->has_race()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *race_);
  }

  // .google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension ethnicity = 27 [(.google.fhir.stu3.proto.fhir_inlined_extension_url) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity"];
  if (this->has_ethnicity()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ethnicity_);
  }

  // .google.fhir.stu3.uscore.UsCoreBirthSexCode birthsex = 28 [(.google.fhir.stu3.proto.fhir_inlined_extension_url) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex"];
  if (this->has_birthsex()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *birthsex_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCorePatient::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCorePatient)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCorePatient* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCorePatient>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCorePatient)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCorePatient)
    MergeFrom(*source);
  }
}

void UsCorePatient::MergeFrom(const UsCorePatient& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCorePatient)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contained_.MergeFrom(from.contained_);
  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  identifier_.MergeFrom(from.identifier_);
  name_.MergeFrom(from.name_);
  telecom_.MergeFrom(from.telecom_);
  address_.MergeFrom(from.address_);
  photo_.MergeFrom(from.photo_);
  contact_.MergeFrom(from.contact_);
  communication_.MergeFrom(from.communication_);
  general_practitioner_.MergeFrom(from.general_practitioner_);
  link_.MergeFrom(from.link_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::Id::MergeFrom(from.id());
  }
  if (from.has_meta()) {
    mutable_meta()->::google::fhir::stu3::proto::Meta::MergeFrom(from.meta());
  }
  if (from.has_implicit_rules()) {
    mutable_implicit_rules()->::google::fhir::stu3::proto::Uri::MergeFrom(from.implicit_rules());
  }
  if (from.has_language()) {
    mutable_language()->::google::fhir::stu3::proto::LanguageCode::MergeFrom(from.language());
  }
  if (from.has_text()) {
    mutable_text()->::google::fhir::stu3::proto::Narrative::MergeFrom(from.text());
  }
  if (from.has_active()) {
    mutable_active()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.active());
  }
  if (from.has_gender()) {
    mutable_gender()->::google::fhir::stu3::proto::AdministrativeGenderCode::MergeFrom(from.gender());
  }
  if (from.has_birth_date()) {
    mutable_birth_date()->::google::fhir::stu3::proto::Date::MergeFrom(from.birth_date());
  }
  if (from.has_deceased()) {
    mutable_deceased()->::google::fhir::stu3::uscore::UsCorePatient_Deceased::MergeFrom(from.deceased());
  }
  if (from.has_marital_status()) {
    mutable_marital_status()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.marital_status());
  }
  if (from.has_multiple_birth()) {
    mutable_multiple_birth()->::google::fhir::stu3::uscore::UsCorePatient_MultipleBirth::MergeFrom(from.multiple_birth());
  }
  if (from.has_managing_organization()) {
    mutable_managing_organization()->::google::fhir::stu3::proto::Reference::MergeFrom(from.managing_organization());
  }
  if (from.has_race()) {
    mutable_race()->::google::fhir::stu3::uscore::PatientUSCoreRaceExtension::MergeFrom(from.race());
  }
  if (from.has_ethnicity()) {
    mutable_ethnicity()->::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension::MergeFrom(from.ethnicity());
  }
  if (from.has_birthsex()) {
    mutable_birthsex()->::google::fhir::stu3::uscore::UsCoreBirthSexCode::MergeFrom(from.birthsex());
  }
}

void UsCorePatient::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCorePatient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCorePatient::CopyFrom(const UsCorePatient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCorePatient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCorePatient::IsInitialized() const {
  return true;
}

void UsCorePatient::Swap(UsCorePatient* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCorePatient::InternalSwap(UsCorePatient* other) {
  using std::swap;
  CastToBase(&contained_)->InternalSwap(CastToBase(&other->contained_));
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&identifier_)->InternalSwap(CastToBase(&other->identifier_));
  CastToBase(&name_)->InternalSwap(CastToBase(&other->name_));
  CastToBase(&telecom_)->InternalSwap(CastToBase(&other->telecom_));
  CastToBase(&address_)->InternalSwap(CastToBase(&other->address_));
  CastToBase(&photo_)->InternalSwap(CastToBase(&other->photo_));
  CastToBase(&contact_)->InternalSwap(CastToBase(&other->contact_));
  CastToBase(&communication_)->InternalSwap(CastToBase(&other->communication_));
  CastToBase(&general_practitioner_)->InternalSwap(CastToBase(&other->general_practitioner_));
  CastToBase(&link_)->InternalSwap(CastToBase(&other->link_));
  swap(id_, other->id_);
  swap(meta_, other->meta_);
  swap(implicit_rules_, other->implicit_rules_);
  swap(language_, other->language_);
  swap(text_, other->text_);
  swap(active_, other->active_);
  swap(gender_, other->gender_);
  swap(birth_date_, other->birth_date_);
  swap(deceased_, other->deceased_);
  swap(marital_status_, other->marital_status_);
  swap(multiple_birth_, other->multiple_birth_);
  swap(managing_organization_, other->managing_organization_);
  swap(race_, other->race_);
  swap(ethnicity_, other->ethnicity_);
  swap(birthsex_, other->birthsex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCorePatient::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCorePractitioner_Qualification::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCorePractitioner_Qualification_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePractitioner_Qualification_default_instance_._instance.get_mutable()->code_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePractitioner_Qualification_default_instance_._instance.get_mutable()->period_ = const_cast< ::google::fhir::stu3::proto::Period*>(
      ::google::fhir::stu3::proto::Period::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePractitioner_Qualification_default_instance_._instance.get_mutable()->issuer_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
}
void UsCorePractitioner_Qualification::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCorePractitioner_Qualification::clear_extension() {
  extension_.Clear();
}
void UsCorePractitioner_Qualification::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCorePractitioner_Qualification::clear_identifier() {
  identifier_.Clear();
}
void UsCorePractitioner_Qualification::clear_code() {
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
}
void UsCorePractitioner_Qualification::clear_period() {
  if (GetArenaNoVirtual() == NULL && period_ != NULL) {
    delete period_;
  }
  period_ = NULL;
}
void UsCorePractitioner_Qualification::clear_issuer() {
  if (GetArenaNoVirtual() == NULL && issuer_ != NULL) {
    delete issuer_;
  }
  issuer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCorePractitioner_Qualification::kIdFieldNumber;
const int UsCorePractitioner_Qualification::kExtensionFieldNumber;
const int UsCorePractitioner_Qualification::kModifierExtensionFieldNumber;
const int UsCorePractitioner_Qualification::kIdentifierFieldNumber;
const int UsCorePractitioner_Qualification::kCodeFieldNumber;
const int UsCorePractitioner_Qualification::kPeriodFieldNumber;
const int UsCorePractitioner_Qualification::kIssuerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCorePractitioner_Qualification::UsCorePractitioner_Qualification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCorePractitioner_Qualification.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCorePractitioner.Qualification)
}
UsCorePractitioner_Qualification::UsCorePractitioner_Qualification(const UsCorePractitioner_Qualification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      identifier_(from.identifier_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_code()) {
    code_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.code_);
  } else {
    code_ = NULL;
  }
  if (from.has_period()) {
    period_ = new ::google::fhir::stu3::proto::Period(*from.period_);
  } else {
    period_ = NULL;
  }
  if (from.has_issuer()) {
    issuer_ = new ::google::fhir::stu3::proto::Reference(*from.issuer_);
  } else {
    issuer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCorePractitioner.Qualification)
}

void UsCorePractitioner_Qualification::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&issuer_) -
      reinterpret_cast<char*>(&id_)) + sizeof(issuer_));
}

UsCorePractitioner_Qualification::~UsCorePractitioner_Qualification() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCorePractitioner.Qualification)
  SharedDtor();
}

void UsCorePractitioner_Qualification::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete code_;
  if (this != internal_default_instance()) delete period_;
  if (this != internal_default_instance()) delete issuer_;
}

void UsCorePractitioner_Qualification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCorePractitioner_Qualification::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCorePractitioner_Qualification& UsCorePractitioner_Qualification::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCorePractitioner_Qualification.base);
  return *internal_default_instance();
}


void UsCorePractitioner_Qualification::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCorePractitioner.Qualification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  identifier_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
  if (GetArenaNoVirtual() == NULL && period_ != NULL) {
    delete period_;
  }
  period_ = NULL;
  if (GetArenaNoVirtual() == NULL && issuer_ != NULL) {
    delete issuer_;
  }
  issuer_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCorePractitioner_Qualification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCorePractitioner.Qualification)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Identifier identifier = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept code = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Period period = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference issuer = 7 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_issuer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCorePractitioner.Qualification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCorePractitioner.Qualification)
  return false;
#undef DO_
}

void UsCorePractitioner_Qualification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCorePractitioner.Qualification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->identifier(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_code(), output);
  }

  // .google.fhir.stu3.proto.Period period = 6;
  if (this->has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_period(), output);
  }

  // .google.fhir.stu3.proto.Reference issuer = 7 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_issuer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_issuer(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCorePractitioner.Qualification)
}

::google::protobuf::uint8* UsCorePractitioner_Qualification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCorePractitioner.Qualification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->identifier(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_code(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Period period = 6;
  if (this->has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_period(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference issuer = 7 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_issuer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_issuer(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCorePractitioner.Qualification)
  return target;
}

size_t UsCorePractitioner_Qualification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCorePractitioner.Qualification)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->identifier_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->identifier(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *code_);
  }

  // .google.fhir.stu3.proto.Period period = 6;
  if (this->has_period()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *period_);
  }

  // .google.fhir.stu3.proto.Reference issuer = 7 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_issuer()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *issuer_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCorePractitioner_Qualification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCorePractitioner.Qualification)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCorePractitioner_Qualification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCorePractitioner_Qualification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCorePractitioner.Qualification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCorePractitioner.Qualification)
    MergeFrom(*source);
  }
}

void UsCorePractitioner_Qualification::MergeFrom(const UsCorePractitioner_Qualification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCorePractitioner.Qualification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  identifier_.MergeFrom(from.identifier_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_code()) {
    mutable_code()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.code());
  }
  if (from.has_period()) {
    mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
  }
  if (from.has_issuer()) {
    mutable_issuer()->::google::fhir::stu3::proto::Reference::MergeFrom(from.issuer());
  }
}

void UsCorePractitioner_Qualification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCorePractitioner.Qualification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCorePractitioner_Qualification::CopyFrom(const UsCorePractitioner_Qualification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCorePractitioner.Qualification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCorePractitioner_Qualification::IsInitialized() const {
  return true;
}

void UsCorePractitioner_Qualification::Swap(UsCorePractitioner_Qualification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCorePractitioner_Qualification::InternalSwap(UsCorePractitioner_Qualification* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&identifier_)->InternalSwap(CastToBase(&other->identifier_));
  swap(id_, other->id_);
  swap(code_, other->code_);
  swap(period_, other->period_);
  swap(issuer_, other->issuer_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCorePractitioner_Qualification::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCorePractitioner::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCorePractitioner_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::Id*>(
      ::google::fhir::stu3::proto::Id::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePractitioner_default_instance_._instance.get_mutable()->meta_ = const_cast< ::google::fhir::stu3::proto::Meta*>(
      ::google::fhir::stu3::proto::Meta::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePractitioner_default_instance_._instance.get_mutable()->implicit_rules_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePractitioner_default_instance_._instance.get_mutable()->language_ = const_cast< ::google::fhir::stu3::proto::LanguageCode*>(
      ::google::fhir::stu3::proto::LanguageCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePractitioner_default_instance_._instance.get_mutable()->text_ = const_cast< ::google::fhir::stu3::proto::Narrative*>(
      ::google::fhir::stu3::proto::Narrative::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePractitioner_default_instance_._instance.get_mutable()->active_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePractitioner_default_instance_._instance.get_mutable()->name_ = const_cast< ::google::fhir::stu3::proto::HumanName*>(
      ::google::fhir::stu3::proto::HumanName::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePractitioner_default_instance_._instance.get_mutable()->gender_ = const_cast< ::google::fhir::stu3::proto::AdministrativeGenderCode*>(
      ::google::fhir::stu3::proto::AdministrativeGenderCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCorePractitioner_default_instance_._instance.get_mutable()->birth_date_ = const_cast< ::google::fhir::stu3::proto::Date*>(
      ::google::fhir::stu3::proto::Date::internal_default_instance());
}
void UsCorePractitioner::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCorePractitioner::clear_meta() {
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
}
void UsCorePractitioner::clear_implicit_rules() {
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
}
void UsCorePractitioner::clear_language() {
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
}
void UsCorePractitioner::clear_text() {
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
}
void UsCorePractitioner::clear_contained() {
  contained_.Clear();
}
void UsCorePractitioner::clear_extension() {
  extension_.Clear();
}
void UsCorePractitioner::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCorePractitioner::clear_identifier() {
  identifier_.Clear();
}
void UsCorePractitioner::clear_active() {
  if (GetArenaNoVirtual() == NULL && active_ != NULL) {
    delete active_;
  }
  active_ = NULL;
}
void UsCorePractitioner::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void UsCorePractitioner::clear_telecom() {
  telecom_.Clear();
}
void UsCorePractitioner::clear_address() {
  address_.Clear();
}
void UsCorePractitioner::clear_gender() {
  if (GetArenaNoVirtual() == NULL && gender_ != NULL) {
    delete gender_;
  }
  gender_ = NULL;
}
void UsCorePractitioner::clear_birth_date() {
  if (GetArenaNoVirtual() == NULL && birth_date_ != NULL) {
    delete birth_date_;
  }
  birth_date_ = NULL;
}
void UsCorePractitioner::clear_photo() {
  photo_.Clear();
}
void UsCorePractitioner::clear_communication() {
  communication_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCorePractitioner::kIdFieldNumber;
const int UsCorePractitioner::kMetaFieldNumber;
const int UsCorePractitioner::kImplicitRulesFieldNumber;
const int UsCorePractitioner::kLanguageFieldNumber;
const int UsCorePractitioner::kTextFieldNumber;
const int UsCorePractitioner::kContainedFieldNumber;
const int UsCorePractitioner::kExtensionFieldNumber;
const int UsCorePractitioner::kModifierExtensionFieldNumber;
const int UsCorePractitioner::kIdentifierFieldNumber;
const int UsCorePractitioner::kActiveFieldNumber;
const int UsCorePractitioner::kNameFieldNumber;
const int UsCorePractitioner::kTelecomFieldNumber;
const int UsCorePractitioner::kAddressFieldNumber;
const int UsCorePractitioner::kGenderFieldNumber;
const int UsCorePractitioner::kBirthDateFieldNumber;
const int UsCorePractitioner::kPhotoFieldNumber;
const int UsCorePractitioner::kQualificationFieldNumber;
const int UsCorePractitioner::kCommunicationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCorePractitioner::UsCorePractitioner()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCorePractitioner.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCorePractitioner)
}
UsCorePractitioner::UsCorePractitioner(const UsCorePractitioner& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      contained_(from.contained_),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      identifier_(from.identifier_),
      telecom_(from.telecom_),
      address_(from.address_),
      photo_(from.photo_),
      qualification_(from.qualification_),
      communication_(from.communication_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::Id(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_meta()) {
    meta_ = new ::google::fhir::stu3::proto::Meta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  if (from.has_implicit_rules()) {
    implicit_rules_ = new ::google::fhir::stu3::proto::Uri(*from.implicit_rules_);
  } else {
    implicit_rules_ = NULL;
  }
  if (from.has_language()) {
    language_ = new ::google::fhir::stu3::proto::LanguageCode(*from.language_);
  } else {
    language_ = NULL;
  }
  if (from.has_text()) {
    text_ = new ::google::fhir::stu3::proto::Narrative(*from.text_);
  } else {
    text_ = NULL;
  }
  if (from.has_active()) {
    active_ = new ::google::fhir::stu3::proto::Boolean(*from.active_);
  } else {
    active_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::google::fhir::stu3::proto::HumanName(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_gender()) {
    gender_ = new ::google::fhir::stu3::proto::AdministrativeGenderCode(*from.gender_);
  } else {
    gender_ = NULL;
  }
  if (from.has_birth_date()) {
    birth_date_ = new ::google::fhir::stu3::proto::Date(*from.birth_date_);
  } else {
    birth_date_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCorePractitioner)
}

void UsCorePractitioner::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&birth_date_) -
      reinterpret_cast<char*>(&id_)) + sizeof(birth_date_));
}

UsCorePractitioner::~UsCorePractitioner() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCorePractitioner)
  SharedDtor();
}

void UsCorePractitioner::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete implicit_rules_;
  if (this != internal_default_instance()) delete language_;
  if (this != internal_default_instance()) delete text_;
  if (this != internal_default_instance()) delete active_;
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete gender_;
  if (this != internal_default_instance()) delete birth_date_;
}

void UsCorePractitioner::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCorePractitioner::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCorePractitioner& UsCorePractitioner::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCorePractitioner.base);
  return *internal_default_instance();
}


void UsCorePractitioner::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCorePractitioner)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contained_.Clear();
  extension_.Clear();
  modifier_extension_.Clear();
  identifier_.Clear();
  telecom_.Clear();
  address_.Clear();
  photo_.Clear();
  qualification_.Clear();
  communication_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  if (GetArenaNoVirtual() == NULL && active_ != NULL) {
    delete active_;
  }
  active_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && gender_ != NULL) {
    delete gender_;
  }
  gender_ = NULL;
  if (GetArenaNoVirtual() == NULL && birth_date_ != NULL) {
    delete birth_date_;
  }
  birth_date_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCorePractitioner::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCorePractitioner)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Id id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Meta meta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri implicit_rules = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_implicit_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.LanguageCode language = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_language()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Narrative text = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_contained()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Identifier identifier = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Boolean active = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_active()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.HumanName name = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ContactPoint telecom = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_telecom()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Address address = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.AdministrativeGenderCode gender = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gender()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Date birth_date = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_birth_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Attachment photo = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_photo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.uscore.UsCorePractitioner.Qualification qualification = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_qualification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept communication = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_communication()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCorePractitioner)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCorePractitioner)
  return false;
#undef DO_
}

void UsCorePractitioner::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCorePractitioner)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_meta(), output);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_implicit_rules(), output);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_language(), output);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_text(), output);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->contained(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->identifier(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Boolean active = 10;
  if (this->has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_active(), output);
  }

  // .google.fhir.stu3.proto.HumanName name = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_name(), output);
  }

  // repeated .google.fhir.stu3.proto.ContactPoint telecom = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->telecom_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->telecom(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Address address = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->address_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13,
      this->address(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.AdministrativeGenderCode gender = 14;
  if (this->has_gender()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_gender(), output);
  }

  // .google.fhir.stu3.proto.Date birth_date = 15;
  if (this->has_birth_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_birth_date(), output);
  }

  // repeated .google.fhir.stu3.proto.Attachment photo = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->photo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16,
      this->photo(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.uscore.UsCorePractitioner.Qualification qualification = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->qualification_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17,
      this->qualification(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept communication = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->communication_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18,
      this->communication(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCorePractitioner)
}

::google::protobuf::uint8* UsCorePractitioner::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCorePractitioner)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_meta(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_implicit_rules(), deterministic, target);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_language(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_text(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->contained(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->identifier(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Boolean active = 10;
  if (this->has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_active(), deterministic, target);
  }

  // .google.fhir.stu3.proto.HumanName name = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_name(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ContactPoint telecom = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->telecom_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->telecom(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Address address = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->address_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->address(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.AdministrativeGenderCode gender = 14;
  if (this->has_gender()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_gender(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Date birth_date = 15;
  if (this->has_birth_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_birth_date(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Attachment photo = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->photo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->photo(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.uscore.UsCorePractitioner.Qualification qualification = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->qualification_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->qualification(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept communication = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->communication_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->communication(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCorePractitioner)
  return target;
}

size_t UsCorePractitioner::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCorePractitioner)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->contained_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->contained(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  {
    unsigned int count = static_cast<unsigned int>(this->identifier_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->identifier(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.ContactPoint telecom = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->telecom_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->telecom(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Address address = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->address_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->address(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Attachment photo = 16;
  {
    unsigned int count = static_cast<unsigned int>(this->photo_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->photo(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.uscore.UsCorePractitioner.Qualification qualification = 17;
  {
    unsigned int count = static_cast<unsigned int>(this->qualification_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->qualification(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept communication = 18;
  {
    unsigned int count = static_cast<unsigned int>(this->communication_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->communication(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *implicit_rules_);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *language_);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *text_);
  }

  // .google.fhir.stu3.proto.Boolean active = 10;
  if (this->has_active()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *active_);
  }

  // .google.fhir.stu3.proto.HumanName name = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *name_);
  }

  // .google.fhir.stu3.proto.AdministrativeGenderCode gender = 14;
  if (this->has_gender()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *gender_);
  }

  // .google.fhir.stu3.proto.Date birth_date = 15;
  if (this->has_birth_date()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *birth_date_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCorePractitioner::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCorePractitioner)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCorePractitioner* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCorePractitioner>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCorePractitioner)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCorePractitioner)
    MergeFrom(*source);
  }
}

void UsCorePractitioner::MergeFrom(const UsCorePractitioner& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCorePractitioner)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contained_.MergeFrom(from.contained_);
  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  identifier_.MergeFrom(from.identifier_);
  telecom_.MergeFrom(from.telecom_);
  address_.MergeFrom(from.address_);
  photo_.MergeFrom(from.photo_);
  qualification_.MergeFrom(from.qualification_);
  communication_.MergeFrom(from.communication_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::Id::MergeFrom(from.id());
  }
  if (from.has_meta()) {
    mutable_meta()->::google::fhir::stu3::proto::Meta::MergeFrom(from.meta());
  }
  if (from.has_implicit_rules()) {
    mutable_implicit_rules()->::google::fhir::stu3::proto::Uri::MergeFrom(from.implicit_rules());
  }
  if (from.has_language()) {
    mutable_language()->::google::fhir::stu3::proto::LanguageCode::MergeFrom(from.language());
  }
  if (from.has_text()) {
    mutable_text()->::google::fhir::stu3::proto::Narrative::MergeFrom(from.text());
  }
  if (from.has_active()) {
    mutable_active()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.active());
  }
  if (from.has_name()) {
    mutable_name()->::google::fhir::stu3::proto::HumanName::MergeFrom(from.name());
  }
  if (from.has_gender()) {
    mutable_gender()->::google::fhir::stu3::proto::AdministrativeGenderCode::MergeFrom(from.gender());
  }
  if (from.has_birth_date()) {
    mutable_birth_date()->::google::fhir::stu3::proto::Date::MergeFrom(from.birth_date());
  }
}

void UsCorePractitioner::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCorePractitioner)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCorePractitioner::CopyFrom(const UsCorePractitioner& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCorePractitioner)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCorePractitioner::IsInitialized() const {
  return true;
}

void UsCorePractitioner::Swap(UsCorePractitioner* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCorePractitioner::InternalSwap(UsCorePractitioner* other) {
  using std::swap;
  CastToBase(&contained_)->InternalSwap(CastToBase(&other->contained_));
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&identifier_)->InternalSwap(CastToBase(&other->identifier_));
  CastToBase(&telecom_)->InternalSwap(CastToBase(&other->telecom_));
  CastToBase(&address_)->InternalSwap(CastToBase(&other->address_));
  CastToBase(&photo_)->InternalSwap(CastToBase(&other->photo_));
  CastToBase(&qualification_)->InternalSwap(CastToBase(&other->qualification_));
  CastToBase(&communication_)->InternalSwap(CastToBase(&other->communication_));
  swap(id_, other->id_);
  swap(meta_, other->meta_);
  swap(implicit_rules_, other->implicit_rules_);
  swap(language_, other->language_);
  swap(text_, other->text_);
  swap(active_, other->active_);
  swap(name_, other->name_);
  swap(gender_, other->gender_);
  swap(birth_date_, other->birth_date_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCorePractitioner::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreProcedure_Performed::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreProcedure_Performed_default_instance_.date_time_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreProcedure_Performed_default_instance_.period_ = const_cast< ::google::fhir::stu3::proto::Period*>(
      ::google::fhir::stu3::proto::Period::internal_default_instance());
}
void UsCoreProcedure_Performed::set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_performed();
  if (date_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date_time, submessage_arena);
    }
    set_has_date_time();
    performed_.date_time_ = date_time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreProcedure.Performed.date_time)
}
void UsCoreProcedure_Performed::clear_date_time() {
  if (has_date_time()) {
    delete performed_.date_time_;
    clear_has_performed();
  }
}
void UsCoreProcedure_Performed::set_allocated_period(::google::fhir::stu3::proto::Period* period) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_performed();
  if (period) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      period = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, period, submessage_arena);
    }
    set_has_period();
    performed_.period_ = period;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreProcedure.Performed.period)
}
void UsCoreProcedure_Performed::clear_period() {
  if (has_period()) {
    delete performed_.period_;
    clear_has_performed();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreProcedure_Performed::kDateTimeFieldNumber;
const int UsCoreProcedure_Performed::kPeriodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreProcedure_Performed::UsCoreProcedure_Performed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreProcedure_Performed.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreProcedure.Performed)
}
UsCoreProcedure_Performed::UsCoreProcedure_Performed(const UsCoreProcedure_Performed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_performed();
  switch (from.performed_case()) {
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case PERFORMED_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreProcedure.Performed)
}

void UsCoreProcedure_Performed::SharedCtor() {
  clear_has_performed();
}

UsCoreProcedure_Performed::~UsCoreProcedure_Performed() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreProcedure.Performed)
  SharedDtor();
}

void UsCoreProcedure_Performed::SharedDtor() {
  if (has_performed()) {
    clear_performed();
  }
}

void UsCoreProcedure_Performed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreProcedure_Performed::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreProcedure_Performed& UsCoreProcedure_Performed::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreProcedure_Performed.base);
  return *internal_default_instance();
}


void UsCoreProcedure_Performed::clear_performed() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.uscore.UsCoreProcedure.Performed)
  switch (performed_case()) {
    case kDateTime: {
      delete performed_.date_time_;
      break;
    }
    case kPeriod: {
      delete performed_.period_;
      break;
    }
    case PERFORMED_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PERFORMED_NOT_SET;
}


void UsCoreProcedure_Performed::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreProcedure.Performed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_performed();
  _internal_metadata_.Clear();
}

bool UsCoreProcedure_Performed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreProcedure.Performed)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.DateTime date_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Period period = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreProcedure.Performed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreProcedure.Performed)
  return false;
#undef DO_
}

void UsCoreProcedure_Performed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreProcedure.Performed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.DateTime date_time = 1;
  if (has_date_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_date_time(), output);
  }

  // .google.fhir.stu3.proto.Period period = 2;
  if (has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_period(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreProcedure.Performed)
}

::google::protobuf::uint8* UsCoreProcedure_Performed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreProcedure.Performed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.DateTime date_time = 1;
  if (has_date_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_date_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Period period = 2;
  if (has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_period(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreProcedure.Performed)
  return target;
}

size_t UsCoreProcedure_Performed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreProcedure.Performed)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (performed_case()) {
    // .google.fhir.stu3.proto.DateTime date_time = 1;
    case kDateTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *performed_.date_time_);
      break;
    }
    // .google.fhir.stu3.proto.Period period = 2;
    case kPeriod: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *performed_.period_);
      break;
    }
    case PERFORMED_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreProcedure_Performed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreProcedure.Performed)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreProcedure_Performed* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreProcedure_Performed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreProcedure.Performed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreProcedure.Performed)
    MergeFrom(*source);
  }
}

void UsCoreProcedure_Performed::MergeFrom(const UsCoreProcedure_Performed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreProcedure.Performed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.performed_case()) {
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case PERFORMED_NOT_SET: {
      break;
    }
  }
}

void UsCoreProcedure_Performed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreProcedure.Performed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreProcedure_Performed::CopyFrom(const UsCoreProcedure_Performed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreProcedure.Performed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreProcedure_Performed::IsInitialized() const {
  return true;
}

void UsCoreProcedure_Performed::Swap(UsCoreProcedure_Performed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreProcedure_Performed::InternalSwap(UsCoreProcedure_Performed* other) {
  using std::swap;
  swap(performed_, other->performed_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreProcedure_Performed::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreProcedure_Performer::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreProcedure_Performer_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreProcedure_Performer_default_instance_._instance.get_mutable()->role_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreProcedure_Performer_default_instance_._instance.get_mutable()->actor_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreProcedure_Performer_default_instance_._instance.get_mutable()->on_behalf_of_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
}
void UsCoreProcedure_Performer::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreProcedure_Performer::clear_extension() {
  extension_.Clear();
}
void UsCoreProcedure_Performer::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreProcedure_Performer::clear_role() {
  if (GetArenaNoVirtual() == NULL && role_ != NULL) {
    delete role_;
  }
  role_ = NULL;
}
void UsCoreProcedure_Performer::clear_actor() {
  if (GetArenaNoVirtual() == NULL && actor_ != NULL) {
    delete actor_;
  }
  actor_ = NULL;
}
void UsCoreProcedure_Performer::clear_on_behalf_of() {
  if (GetArenaNoVirtual() == NULL && on_behalf_of_ != NULL) {
    delete on_behalf_of_;
  }
  on_behalf_of_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreProcedure_Performer::kIdFieldNumber;
const int UsCoreProcedure_Performer::kExtensionFieldNumber;
const int UsCoreProcedure_Performer::kModifierExtensionFieldNumber;
const int UsCoreProcedure_Performer::kRoleFieldNumber;
const int UsCoreProcedure_Performer::kActorFieldNumber;
const int UsCoreProcedure_Performer::kOnBehalfOfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreProcedure_Performer::UsCoreProcedure_Performer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreProcedure_Performer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreProcedure.Performer)
}
UsCoreProcedure_Performer::UsCoreProcedure_Performer(const UsCoreProcedure_Performer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_role()) {
    role_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.role_);
  } else {
    role_ = NULL;
  }
  if (from.has_actor()) {
    actor_ = new ::google::fhir::stu3::proto::Reference(*from.actor_);
  } else {
    actor_ = NULL;
  }
  if (from.has_on_behalf_of()) {
    on_behalf_of_ = new ::google::fhir::stu3::proto::Reference(*from.on_behalf_of_);
  } else {
    on_behalf_of_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreProcedure.Performer)
}

void UsCoreProcedure_Performer::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&on_behalf_of_) -
      reinterpret_cast<char*>(&id_)) + sizeof(on_behalf_of_));
}

UsCoreProcedure_Performer::~UsCoreProcedure_Performer() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreProcedure.Performer)
  SharedDtor();
}

void UsCoreProcedure_Performer::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete role_;
  if (this != internal_default_instance()) delete actor_;
  if (this != internal_default_instance()) delete on_behalf_of_;
}

void UsCoreProcedure_Performer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreProcedure_Performer::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreProcedure_Performer& UsCoreProcedure_Performer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreProcedure_Performer.base);
  return *internal_default_instance();
}


void UsCoreProcedure_Performer::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreProcedure.Performer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && role_ != NULL) {
    delete role_;
  }
  role_ = NULL;
  if (GetArenaNoVirtual() == NULL && actor_ != NULL) {
    delete actor_;
  }
  actor_ = NULL;
  if (GetArenaNoVirtual() == NULL && on_behalf_of_ != NULL) {
    delete on_behalf_of_;
  }
  on_behalf_of_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreProcedure_Performer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreProcedure.Performer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept role = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_role()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference actor = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device"];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_actor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference on_behalf_of = 6 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_on_behalf_of()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreProcedure.Performer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreProcedure.Performer)
  return false;
#undef DO_
}

void UsCoreProcedure_Performer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreProcedure.Performer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.CodeableConcept role = 4;
  if (this->has_role()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_role(), output);
  }

  // .google.fhir.stu3.proto.Reference actor = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device"];
  if (this->has_actor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_actor(), output);
  }

  // .google.fhir.stu3.proto.Reference on_behalf_of = 6 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_on_behalf_of()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_on_behalf_of(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreProcedure.Performer)
}

::google::protobuf::uint8* UsCoreProcedure_Performer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreProcedure.Performer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept role = 4;
  if (this->has_role()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_role(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference actor = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device"];
  if (this->has_actor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_actor(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference on_behalf_of = 6 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_on_behalf_of()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_on_behalf_of(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreProcedure.Performer)
  return target;
}

size_t UsCoreProcedure_Performer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreProcedure.Performer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.CodeableConcept role = 4;
  if (this->has_role()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *role_);
  }

  // .google.fhir.stu3.proto.Reference actor = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device"];
  if (this->has_actor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *actor_);
  }

  // .google.fhir.stu3.proto.Reference on_behalf_of = 6 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_on_behalf_of()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *on_behalf_of_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreProcedure_Performer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreProcedure.Performer)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreProcedure_Performer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreProcedure_Performer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreProcedure.Performer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreProcedure.Performer)
    MergeFrom(*source);
  }
}

void UsCoreProcedure_Performer::MergeFrom(const UsCoreProcedure_Performer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreProcedure.Performer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_role()) {
    mutable_role()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.role());
  }
  if (from.has_actor()) {
    mutable_actor()->::google::fhir::stu3::proto::Reference::MergeFrom(from.actor());
  }
  if (from.has_on_behalf_of()) {
    mutable_on_behalf_of()->::google::fhir::stu3::proto::Reference::MergeFrom(from.on_behalf_of());
  }
}

void UsCoreProcedure_Performer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreProcedure.Performer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreProcedure_Performer::CopyFrom(const UsCoreProcedure_Performer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreProcedure.Performer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreProcedure_Performer::IsInitialized() const {
  return true;
}

void UsCoreProcedure_Performer::Swap(UsCoreProcedure_Performer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreProcedure_Performer::InternalSwap(UsCoreProcedure_Performer* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  swap(id_, other->id_);
  swap(role_, other->role_);
  swap(actor_, other->actor_);
  swap(on_behalf_of_, other->on_behalf_of_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreProcedure_Performer::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreProcedure_FocalDevice::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreProcedure_FocalDevice_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreProcedure_FocalDevice_default_instance_._instance.get_mutable()->action_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreProcedure_FocalDevice_default_instance_._instance.get_mutable()->manipulated_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
}
void UsCoreProcedure_FocalDevice::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreProcedure_FocalDevice::clear_extension() {
  extension_.Clear();
}
void UsCoreProcedure_FocalDevice::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreProcedure_FocalDevice::clear_action() {
  if (GetArenaNoVirtual() == NULL && action_ != NULL) {
    delete action_;
  }
  action_ = NULL;
}
void UsCoreProcedure_FocalDevice::clear_manipulated() {
  if (GetArenaNoVirtual() == NULL && manipulated_ != NULL) {
    delete manipulated_;
  }
  manipulated_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreProcedure_FocalDevice::kIdFieldNumber;
const int UsCoreProcedure_FocalDevice::kExtensionFieldNumber;
const int UsCoreProcedure_FocalDevice::kModifierExtensionFieldNumber;
const int UsCoreProcedure_FocalDevice::kActionFieldNumber;
const int UsCoreProcedure_FocalDevice::kManipulatedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreProcedure_FocalDevice::UsCoreProcedure_FocalDevice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreProcedure_FocalDevice.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice)
}
UsCoreProcedure_FocalDevice::UsCoreProcedure_FocalDevice(const UsCoreProcedure_FocalDevice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_action()) {
    action_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.action_);
  } else {
    action_ = NULL;
  }
  if (from.has_manipulated()) {
    manipulated_ = new ::google::fhir::stu3::proto::Reference(*from.manipulated_);
  } else {
    manipulated_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice)
}

void UsCoreProcedure_FocalDevice::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&manipulated_) -
      reinterpret_cast<char*>(&id_)) + sizeof(manipulated_));
}

UsCoreProcedure_FocalDevice::~UsCoreProcedure_FocalDevice() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice)
  SharedDtor();
}

void UsCoreProcedure_FocalDevice::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete action_;
  if (this != internal_default_instance()) delete manipulated_;
}

void UsCoreProcedure_FocalDevice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreProcedure_FocalDevice::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreProcedure_FocalDevice& UsCoreProcedure_FocalDevice::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreProcedure_FocalDevice.base);
  return *internal_default_instance();
}


void UsCoreProcedure_FocalDevice::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && action_ != NULL) {
    delete action_;
  }
  action_ = NULL;
  if (GetArenaNoVirtual() == NULL && manipulated_ != NULL) {
    delete manipulated_;
  }
  manipulated_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreProcedure_FocalDevice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept action = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference manipulated = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device"];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_manipulated()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice)
  return false;
#undef DO_
}

void UsCoreProcedure_FocalDevice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.CodeableConcept action = 4;
  if (this->has_action()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_action(), output);
  }

  // .google.fhir.stu3.proto.Reference manipulated = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device"];
  if (this->has_manipulated()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_manipulated(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice)
}

::google::protobuf::uint8* UsCoreProcedure_FocalDevice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept action = 4;
  if (this->has_action()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_action(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference manipulated = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device"];
  if (this->has_manipulated()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_manipulated(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice)
  return target;
}

size_t UsCoreProcedure_FocalDevice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.CodeableConcept action = 4;
  if (this->has_action()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *action_);
  }

  // .google.fhir.stu3.proto.Reference manipulated = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device"];
  if (this->has_manipulated()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *manipulated_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreProcedure_FocalDevice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreProcedure_FocalDevice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreProcedure_FocalDevice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice)
    MergeFrom(*source);
  }
}

void UsCoreProcedure_FocalDevice::MergeFrom(const UsCoreProcedure_FocalDevice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_action()) {
    mutable_action()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.action());
  }
  if (from.has_manipulated()) {
    mutable_manipulated()->::google::fhir::stu3::proto::Reference::MergeFrom(from.manipulated());
  }
}

void UsCoreProcedure_FocalDevice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreProcedure_FocalDevice::CopyFrom(const UsCoreProcedure_FocalDevice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreProcedure_FocalDevice::IsInitialized() const {
  return true;
}

void UsCoreProcedure_FocalDevice::Swap(UsCoreProcedure_FocalDevice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreProcedure_FocalDevice::InternalSwap(UsCoreProcedure_FocalDevice* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  swap(id_, other->id_);
  swap(action_, other->action_);
  swap(manipulated_, other->manipulated_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreProcedure_FocalDevice::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreProcedure::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreProcedure_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::Id*>(
      ::google::fhir::stu3::proto::Id::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreProcedure_default_instance_._instance.get_mutable()->meta_ = const_cast< ::google::fhir::stu3::proto::Meta*>(
      ::google::fhir::stu3::proto::Meta::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreProcedure_default_instance_._instance.get_mutable()->implicit_rules_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreProcedure_default_instance_._instance.get_mutable()->language_ = const_cast< ::google::fhir::stu3::proto::LanguageCode*>(
      ::google::fhir::stu3::proto::LanguageCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreProcedure_default_instance_._instance.get_mutable()->text_ = const_cast< ::google::fhir::stu3::proto::Narrative*>(
      ::google::fhir::stu3::proto::Narrative::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreProcedure_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::fhir::stu3::proto::EventStatusCode*>(
      ::google::fhir::stu3::proto::EventStatusCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreProcedure_default_instance_._instance.get_mutable()->not_done_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreProcedure_default_instance_._instance.get_mutable()->not_done_reason_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreProcedure_default_instance_._instance.get_mutable()->category_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreProcedure_default_instance_._instance.get_mutable()->code_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreProcedure_default_instance_._instance.get_mutable()->subject_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreProcedure_default_instance_._instance.get_mutable()->context_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreProcedure_default_instance_._instance.get_mutable()->performed_ = const_cast< ::google::fhir::stu3::uscore::UsCoreProcedure_Performed*>(
      ::google::fhir::stu3::uscore::UsCoreProcedure_Performed::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreProcedure_default_instance_._instance.get_mutable()->location_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreProcedure_default_instance_._instance.get_mutable()->outcome_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
}
void UsCoreProcedure::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreProcedure::clear_meta() {
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
}
void UsCoreProcedure::clear_implicit_rules() {
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
}
void UsCoreProcedure::clear_language() {
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
}
void UsCoreProcedure::clear_text() {
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
}
void UsCoreProcedure::clear_contained() {
  contained_.Clear();
}
void UsCoreProcedure::clear_extension() {
  extension_.Clear();
}
void UsCoreProcedure::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreProcedure::clear_identifier() {
  identifier_.Clear();
}
void UsCoreProcedure::clear_definition() {
  definition_.Clear();
}
void UsCoreProcedure::clear_based_on() {
  based_on_.Clear();
}
void UsCoreProcedure::clear_part_of() {
  part_of_.Clear();
}
void UsCoreProcedure::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
void UsCoreProcedure::clear_not_done() {
  if (GetArenaNoVirtual() == NULL && not_done_ != NULL) {
    delete not_done_;
  }
  not_done_ = NULL;
}
void UsCoreProcedure::clear_not_done_reason() {
  if (GetArenaNoVirtual() == NULL && not_done_reason_ != NULL) {
    delete not_done_reason_;
  }
  not_done_reason_ = NULL;
}
void UsCoreProcedure::clear_category() {
  if (GetArenaNoVirtual() == NULL && category_ != NULL) {
    delete category_;
  }
  category_ = NULL;
}
void UsCoreProcedure::clear_code() {
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
}
void UsCoreProcedure::clear_subject() {
  if (GetArenaNoVirtual() == NULL && subject_ != NULL) {
    delete subject_;
  }
  subject_ = NULL;
}
void UsCoreProcedure::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
}
void UsCoreProcedure::clear_location() {
  if (GetArenaNoVirtual() == NULL && location_ != NULL) {
    delete location_;
  }
  location_ = NULL;
}
void UsCoreProcedure::clear_reason_code() {
  reason_code_.Clear();
}
void UsCoreProcedure::clear_reason_reference() {
  reason_reference_.Clear();
}
void UsCoreProcedure::clear_body_site() {
  body_site_.Clear();
}
void UsCoreProcedure::clear_outcome() {
  if (GetArenaNoVirtual() == NULL && outcome_ != NULL) {
    delete outcome_;
  }
  outcome_ = NULL;
}
void UsCoreProcedure::clear_report() {
  report_.Clear();
}
void UsCoreProcedure::clear_complication() {
  complication_.Clear();
}
void UsCoreProcedure::clear_complication_detail() {
  complication_detail_.Clear();
}
void UsCoreProcedure::clear_follow_up() {
  follow_up_.Clear();
}
void UsCoreProcedure::clear_note() {
  note_.Clear();
}
void UsCoreProcedure::clear_used_reference() {
  used_reference_.Clear();
}
void UsCoreProcedure::clear_used_code() {
  used_code_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreProcedure::kIdFieldNumber;
const int UsCoreProcedure::kMetaFieldNumber;
const int UsCoreProcedure::kImplicitRulesFieldNumber;
const int UsCoreProcedure::kLanguageFieldNumber;
const int UsCoreProcedure::kTextFieldNumber;
const int UsCoreProcedure::kContainedFieldNumber;
const int UsCoreProcedure::kExtensionFieldNumber;
const int UsCoreProcedure::kModifierExtensionFieldNumber;
const int UsCoreProcedure::kIdentifierFieldNumber;
const int UsCoreProcedure::kDefinitionFieldNumber;
const int UsCoreProcedure::kBasedOnFieldNumber;
const int UsCoreProcedure::kPartOfFieldNumber;
const int UsCoreProcedure::kStatusFieldNumber;
const int UsCoreProcedure::kNotDoneFieldNumber;
const int UsCoreProcedure::kNotDoneReasonFieldNumber;
const int UsCoreProcedure::kCategoryFieldNumber;
const int UsCoreProcedure::kCodeFieldNumber;
const int UsCoreProcedure::kSubjectFieldNumber;
const int UsCoreProcedure::kContextFieldNumber;
const int UsCoreProcedure::kPerformedFieldNumber;
const int UsCoreProcedure::kPerformerFieldNumber;
const int UsCoreProcedure::kLocationFieldNumber;
const int UsCoreProcedure::kReasonCodeFieldNumber;
const int UsCoreProcedure::kReasonReferenceFieldNumber;
const int UsCoreProcedure::kBodySiteFieldNumber;
const int UsCoreProcedure::kOutcomeFieldNumber;
const int UsCoreProcedure::kReportFieldNumber;
const int UsCoreProcedure::kComplicationFieldNumber;
const int UsCoreProcedure::kComplicationDetailFieldNumber;
const int UsCoreProcedure::kFollowUpFieldNumber;
const int UsCoreProcedure::kNoteFieldNumber;
const int UsCoreProcedure::kFocalDeviceFieldNumber;
const int UsCoreProcedure::kUsedReferenceFieldNumber;
const int UsCoreProcedure::kUsedCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreProcedure::UsCoreProcedure()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreProcedure.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreProcedure)
}
UsCoreProcedure::UsCoreProcedure(const UsCoreProcedure& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      contained_(from.contained_),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      identifier_(from.identifier_),
      definition_(from.definition_),
      based_on_(from.based_on_),
      part_of_(from.part_of_),
      performer_(from.performer_),
      reason_code_(from.reason_code_),
      reason_reference_(from.reason_reference_),
      body_site_(from.body_site_),
      report_(from.report_),
      complication_(from.complication_),
      complication_detail_(from.complication_detail_),
      follow_up_(from.follow_up_),
      note_(from.note_),
      focal_device_(from.focal_device_),
      used_reference_(from.used_reference_),
      used_code_(from.used_code_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::Id(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_meta()) {
    meta_ = new ::google::fhir::stu3::proto::Meta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  if (from.has_implicit_rules()) {
    implicit_rules_ = new ::google::fhir::stu3::proto::Uri(*from.implicit_rules_);
  } else {
    implicit_rules_ = NULL;
  }
  if (from.has_language()) {
    language_ = new ::google::fhir::stu3::proto::LanguageCode(*from.language_);
  } else {
    language_ = NULL;
  }
  if (from.has_text()) {
    text_ = new ::google::fhir::stu3::proto::Narrative(*from.text_);
  } else {
    text_ = NULL;
  }
  if (from.has_status()) {
    status_ = new ::google::fhir::stu3::proto::EventStatusCode(*from.status_);
  } else {
    status_ = NULL;
  }
  if (from.has_not_done()) {
    not_done_ = new ::google::fhir::stu3::proto::Boolean(*from.not_done_);
  } else {
    not_done_ = NULL;
  }
  if (from.has_not_done_reason()) {
    not_done_reason_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.not_done_reason_);
  } else {
    not_done_reason_ = NULL;
  }
  if (from.has_category()) {
    category_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.category_);
  } else {
    category_ = NULL;
  }
  if (from.has_code()) {
    code_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.code_);
  } else {
    code_ = NULL;
  }
  if (from.has_subject()) {
    subject_ = new ::google::fhir::stu3::proto::Reference(*from.subject_);
  } else {
    subject_ = NULL;
  }
  if (from.has_context()) {
    context_ = new ::google::fhir::stu3::proto::Reference(*from.context_);
  } else {
    context_ = NULL;
  }
  if (from.has_performed()) {
    performed_ = new ::google::fhir::stu3::uscore::UsCoreProcedure_Performed(*from.performed_);
  } else {
    performed_ = NULL;
  }
  if (from.has_location()) {
    location_ = new ::google::fhir::stu3::proto::Reference(*from.location_);
  } else {
    location_ = NULL;
  }
  if (from.has_outcome()) {
    outcome_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.outcome_);
  } else {
    outcome_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreProcedure)
}

void UsCoreProcedure::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&outcome_) -
      reinterpret_cast<char*>(&id_)) + sizeof(outcome_));
}

UsCoreProcedure::~UsCoreProcedure() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreProcedure)
  SharedDtor();
}

void UsCoreProcedure::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete implicit_rules_;
  if (this != internal_default_instance()) delete language_;
  if (this != internal_default_instance()) delete text_;
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete not_done_;
  if (this != internal_default_instance()) delete not_done_reason_;
  if (this != internal_default_instance()) delete category_;
  if (this != internal_default_instance()) delete code_;
  if (this != internal_default_instance()) delete subject_;
  if (this != internal_default_instance()) delete context_;
  if (this != internal_default_instance()) delete performed_;
  if (this != internal_default_instance()) delete location_;
  if (this != internal_default_instance()) delete outcome_;
}

void UsCoreProcedure::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreProcedure::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreProcedure& UsCoreProcedure::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreProcedure.base);
  return *internal_default_instance();
}


void UsCoreProcedure::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreProcedure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contained_.Clear();
  extension_.Clear();
  modifier_extension_.Clear();
  identifier_.Clear();
  definition_.Clear();
  based_on_.Clear();
  part_of_.Clear();
  performer_.Clear();
  reason_code_.Clear();
  reason_reference_.Clear();
  body_site_.Clear();
  report_.Clear();
  complication_.Clear();
  complication_detail_.Clear();
  follow_up_.Clear();
  note_.Clear();
  focal_device_.Clear();
  used_reference_.Clear();
  used_code_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  if (GetArenaNoVirtual() == NULL && not_done_ != NULL) {
    delete not_done_;
  }
  not_done_ = NULL;
  if (GetArenaNoVirtual() == NULL && not_done_reason_ != NULL) {
    delete not_done_reason_;
  }
  not_done_reason_ = NULL;
  if (GetArenaNoVirtual() == NULL && category_ != NULL) {
    delete category_;
  }
  category_ = NULL;
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
  if (GetArenaNoVirtual() == NULL && subject_ != NULL) {
    delete subject_;
  }
  subject_ = NULL;
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  if (GetArenaNoVirtual() == NULL && performed_ != NULL) {
    delete performed_;
  }
  performed_ = NULL;
  if (GetArenaNoVirtual() == NULL && location_ != NULL) {
    delete location_;
  }
  location_ = NULL;
  if (GetArenaNoVirtual() == NULL && outcome_ != NULL) {
    delete outcome_;
  }
  outcome_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreProcedure::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreProcedure)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Id id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Meta meta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri implicit_rules = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_implicit_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.LanguageCode language = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_language()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Narrative text = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_contained()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference definition = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/PlanDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ActivityDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/HealthcareService"];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_definition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference based_on = 11 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_based_on()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference part_of = 12 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Procedure", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationAdministration"];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_part_of()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.EventStatusCode status = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Boolean not_done = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_not_done()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept not_done_reason = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_not_done_reason()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept category = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_category()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept code = 17 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference subject = 18 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_subject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference context = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreProcedure.Performed performed = 20 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_performed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.uscore.UsCoreProcedure.Performer performer = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_performer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference location = 22 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Location"];
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept reason_code = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_reason_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference reason_reference = 24 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_reason_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept body_site = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_body_site()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept outcome = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_outcome()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference report = 27 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DiagnosticReport"];
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_report()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept complication = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_complication()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference complication_detail = 29 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition"];
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_complication_detail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept follow_up = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_follow_up()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Annotation note = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_note()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice focal_device = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_focal_device()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference used_reference = 33 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Substance"];
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_used_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept used_code = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_used_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreProcedure)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreProcedure)
  return false;
#undef DO_
}

void UsCoreProcedure::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreProcedure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_meta(), output);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_implicit_rules(), output);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_language(), output);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_text(), output);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->contained(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->identifier(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference definition = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/PlanDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ActivityDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/HealthcareService"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->definition_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->definition(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference based_on = 11 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->based_on_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->based_on(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference part_of = 12 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Procedure", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationAdministration"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->part_of_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->part_of(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.EventStatusCode status = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_status(), output);
  }

  // .google.fhir.stu3.proto.Boolean not_done = 14;
  if (this->has_not_done()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_not_done(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept not_done_reason = 15;
  if (this->has_not_done_reason()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_not_done_reason(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept category = 16;
  if (this->has_category()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_category(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 17 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_code(), output);
  }

  // .google.fhir.stu3.proto.Reference subject = 18 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_subject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_subject(), output);
  }

  // .google.fhir.stu3.proto.Reference context = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_context(), output);
  }

  // .google.fhir.stu3.uscore.UsCoreProcedure.Performed performed = 20 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_performed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_performed(), output);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreProcedure.Performer performer = 21;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->performer_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21,
      this->performer(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Reference location = 22 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Location"];
  if (this->has_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->_internal_location(), output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept reason_code = 23;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reason_code_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23,
      this->reason_code(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference reason_reference = 24 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reason_reference_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24,
      this->reason_reference(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept body_site = 25;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->body_site_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25,
      this->body_site(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.CodeableConcept outcome = 26;
  if (this->has_outcome()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->_internal_outcome(), output);
  }

  // repeated .google.fhir.stu3.proto.Reference report = 27 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DiagnosticReport"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->report_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27,
      this->report(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept complication = 28;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->complication_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28,
      this->complication(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference complication_detail = 29 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->complication_detail_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29,
      this->complication_detail(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept follow_up = 30;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->follow_up_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30,
      this->follow_up(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 31;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->note_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31,
      this->note(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice focal_device = 32;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->focal_device_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32,
      this->focal_device(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference used_reference = 33 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Substance"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->used_reference_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33,
      this->used_reference(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept used_code = 34;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->used_code_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      34,
      this->used_code(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreProcedure)
}

::google::protobuf::uint8* UsCoreProcedure::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreProcedure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_meta(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_implicit_rules(), deterministic, target);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_language(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_text(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->contained(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->identifier(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference definition = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/PlanDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ActivityDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/HealthcareService"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->definition_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->definition(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference based_on = 11 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->based_on_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->based_on(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference part_of = 12 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Procedure", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationAdministration"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->part_of_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->part_of(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.EventStatusCode status = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_status(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Boolean not_done = 14;
  if (this->has_not_done()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_not_done(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept not_done_reason = 15;
  if (this->has_not_done_reason()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_not_done_reason(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept category = 16;
  if (this->has_category()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_category(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 17 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_code(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference subject = 18 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_subject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_subject(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference context = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_context(), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreProcedure.Performed performed = 20 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_performed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_performed(), deterministic, target);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreProcedure.Performer performer = 21;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->performer_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->performer(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference location = 22 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Location"];
  if (this->has_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->_internal_location(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept reason_code = 23;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reason_code_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->reason_code(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference reason_reference = 24 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reason_reference_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->reason_reference(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept body_site = 25;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->body_site_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->body_site(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept outcome = 26;
  if (this->has_outcome()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, this->_internal_outcome(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference report = 27 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DiagnosticReport"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->report_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, this->report(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept complication = 28;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->complication_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, this->complication(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference complication_detail = 29 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->complication_detail_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29, this->complication_detail(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept follow_up = 30;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->follow_up_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, this->follow_up(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 31;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->note_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        31, this->note(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice focal_device = 32;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->focal_device_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        32, this->focal_device(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference used_reference = 33 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Substance"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->used_reference_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        33, this->used_reference(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept used_code = 34;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->used_code_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        34, this->used_code(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreProcedure)
  return target;
}

size_t UsCoreProcedure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreProcedure)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->contained_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->contained(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->identifier_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->identifier(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference definition = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/PlanDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ActivityDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/HealthcareService"];
  {
    unsigned int count = static_cast<unsigned int>(this->definition_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->definition(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference based_on = 11 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
  {
    unsigned int count = static_cast<unsigned int>(this->based_on_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->based_on(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference part_of = 12 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Procedure", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationAdministration"];
  {
    unsigned int count = static_cast<unsigned int>(this->part_of_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->part_of(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.uscore.UsCoreProcedure.Performer performer = 21;
  {
    unsigned int count = static_cast<unsigned int>(this->performer_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->performer(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept reason_code = 23;
  {
    unsigned int count = static_cast<unsigned int>(this->reason_code_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reason_code(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference reason_reference = 24 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
  {
    unsigned int count = static_cast<unsigned int>(this->reason_reference_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reason_reference(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept body_site = 25;
  {
    unsigned int count = static_cast<unsigned int>(this->body_site_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->body_site(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference report = 27 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DiagnosticReport"];
  {
    unsigned int count = static_cast<unsigned int>(this->report_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->report(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept complication = 28;
  {
    unsigned int count = static_cast<unsigned int>(this->complication_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->complication(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference complication_detail = 29 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition"];
  {
    unsigned int count = static_cast<unsigned int>(this->complication_detail_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->complication_detail(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept follow_up = 30;
  {
    unsigned int count = static_cast<unsigned int>(this->follow_up_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->follow_up(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Annotation note = 31;
  {
    unsigned int count = static_cast<unsigned int>(this->note_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->note(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice focal_device = 32;
  {
    unsigned int count = static_cast<unsigned int>(this->focal_device_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->focal_device(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference used_reference = 33 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Substance"];
  {
    unsigned int count = static_cast<unsigned int>(this->used_reference_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->used_reference(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept used_code = 34;
  {
    unsigned int count = static_cast<unsigned int>(this->used_code_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->used_code(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *implicit_rules_);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *language_);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *text_);
  }

  // .google.fhir.stu3.proto.EventStatusCode status = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .google.fhir.stu3.proto.Boolean not_done = 14;
  if (this->has_not_done()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *not_done_);
  }

  // .google.fhir.stu3.proto.CodeableConcept not_done_reason = 15;
  if (this->has_not_done_reason()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *not_done_reason_);
  }

  // .google.fhir.stu3.proto.CodeableConcept category = 16;
  if (this->has_category()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *category_);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 17 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *code_);
  }

  // .google.fhir.stu3.proto.Reference subject = 18 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_subject()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *subject_);
  }

  // .google.fhir.stu3.proto.Reference context = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  if (this->has_context()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  // .google.fhir.stu3.uscore.UsCoreProcedure.Performed performed = 20 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_performed()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *performed_);
  }

  // .google.fhir.stu3.proto.Reference location = 22 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Location"];
  if (this->has_location()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *location_);
  }

  // .google.fhir.stu3.proto.CodeableConcept outcome = 26;
  if (this->has_outcome()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *outcome_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreProcedure::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreProcedure)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreProcedure* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreProcedure>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreProcedure)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreProcedure)
    MergeFrom(*source);
  }
}

void UsCoreProcedure::MergeFrom(const UsCoreProcedure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreProcedure)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contained_.MergeFrom(from.contained_);
  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  identifier_.MergeFrom(from.identifier_);
  definition_.MergeFrom(from.definition_);
  based_on_.MergeFrom(from.based_on_);
  part_of_.MergeFrom(from.part_of_);
  performer_.MergeFrom(from.performer_);
  reason_code_.MergeFrom(from.reason_code_);
  reason_reference_.MergeFrom(from.reason_reference_);
  body_site_.MergeFrom(from.body_site_);
  report_.MergeFrom(from.report_);
  complication_.MergeFrom(from.complication_);
  complication_detail_.MergeFrom(from.complication_detail_);
  follow_up_.MergeFrom(from.follow_up_);
  note_.MergeFrom(from.note_);
  focal_device_.MergeFrom(from.focal_device_);
  used_reference_.MergeFrom(from.used_reference_);
  used_code_.MergeFrom(from.used_code_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::Id::MergeFrom(from.id());
  }
  if (from.has_meta()) {
    mutable_meta()->::google::fhir::stu3::proto::Meta::MergeFrom(from.meta());
  }
  if (from.has_implicit_rules()) {
    mutable_implicit_rules()->::google::fhir::stu3::proto::Uri::MergeFrom(from.implicit_rules());
  }
  if (from.has_language()) {
    mutable_language()->::google::fhir::stu3::proto::LanguageCode::MergeFrom(from.language());
  }
  if (from.has_text()) {
    mutable_text()->::google::fhir::stu3::proto::Narrative::MergeFrom(from.text());
  }
  if (from.has_status()) {
    mutable_status()->::google::fhir::stu3::proto::EventStatusCode::MergeFrom(from.status());
  }
  if (from.has_not_done()) {
    mutable_not_done()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.not_done());
  }
  if (from.has_not_done_reason()) {
    mutable_not_done_reason()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.not_done_reason());
  }
  if (from.has_category()) {
    mutable_category()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.category());
  }
  if (from.has_code()) {
    mutable_code()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.code());
  }
  if (from.has_subject()) {
    mutable_subject()->::google::fhir::stu3::proto::Reference::MergeFrom(from.subject());
  }
  if (from.has_context()) {
    mutable_context()->::google::fhir::stu3::proto::Reference::MergeFrom(from.context());
  }
  if (from.has_performed()) {
    mutable_performed()->::google::fhir::stu3::uscore::UsCoreProcedure_Performed::MergeFrom(from.performed());
  }
  if (from.has_location()) {
    mutable_location()->::google::fhir::stu3::proto::Reference::MergeFrom(from.location());
  }
  if (from.has_outcome()) {
    mutable_outcome()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.outcome());
  }
}

void UsCoreProcedure::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreProcedure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreProcedure::CopyFrom(const UsCoreProcedure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreProcedure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreProcedure::IsInitialized() const {
  return true;
}

void UsCoreProcedure::Swap(UsCoreProcedure* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreProcedure::InternalSwap(UsCoreProcedure* other) {
  using std::swap;
  CastToBase(&contained_)->InternalSwap(CastToBase(&other->contained_));
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&identifier_)->InternalSwap(CastToBase(&other->identifier_));
  CastToBase(&definition_)->InternalSwap(CastToBase(&other->definition_));
  CastToBase(&based_on_)->InternalSwap(CastToBase(&other->based_on_));
  CastToBase(&part_of_)->InternalSwap(CastToBase(&other->part_of_));
  CastToBase(&performer_)->InternalSwap(CastToBase(&other->performer_));
  CastToBase(&reason_code_)->InternalSwap(CastToBase(&other->reason_code_));
  CastToBase(&reason_reference_)->InternalSwap(CastToBase(&other->reason_reference_));
  CastToBase(&body_site_)->InternalSwap(CastToBase(&other->body_site_));
  CastToBase(&report_)->InternalSwap(CastToBase(&other->report_));
  CastToBase(&complication_)->InternalSwap(CastToBase(&other->complication_));
  CastToBase(&complication_detail_)->InternalSwap(CastToBase(&other->complication_detail_));
  CastToBase(&follow_up_)->InternalSwap(CastToBase(&other->follow_up_));
  CastToBase(&note_)->InternalSwap(CastToBase(&other->note_));
  CastToBase(&focal_device_)->InternalSwap(CastToBase(&other->focal_device_));
  CastToBase(&used_reference_)->InternalSwap(CastToBase(&other->used_reference_));
  CastToBase(&used_code_)->InternalSwap(CastToBase(&other->used_code_));
  swap(id_, other->id_);
  swap(meta_, other->meta_);
  swap(implicit_rules_, other->implicit_rules_);
  swap(language_, other->language_);
  swap(text_, other->text_);
  swap(status_, other->status_);
  swap(not_done_, other->not_done_);
  swap(not_done_reason_, other->not_done_reason_);
  swap(category_, other->category_);
  swap(code_, other->code_);
  swap(subject_, other->subject_);
  swap(context_, other->context_);
  swap(performed_, other->performed_);
  swap(location_, other->location_);
  swap(outcome_, other->outcome_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreProcedure::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CapabilityStatementProfileResourceAssociationExtension::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_CapabilityStatementProfileResourceAssociationExtension_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_CapabilityStatementProfileResourceAssociationExtension_default_instance_._instance.get_mutable()->value_code_ = const_cast< ::google::fhir::stu3::proto::ResourceTypeCode*>(
      ::google::fhir::stu3::proto::ResourceTypeCode::internal_default_instance());
}
void CapabilityStatementProfileResourceAssociationExtension::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void CapabilityStatementProfileResourceAssociationExtension::clear_extension() {
  extension_.Clear();
}
void CapabilityStatementProfileResourceAssociationExtension::clear_value_code() {
  if (GetArenaNoVirtual() == NULL && value_code_ != NULL) {
    delete value_code_;
  }
  value_code_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CapabilityStatementProfileResourceAssociationExtension::kIdFieldNumber;
const int CapabilityStatementProfileResourceAssociationExtension::kExtensionFieldNumber;
const int CapabilityStatementProfileResourceAssociationExtension::kValueCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CapabilityStatementProfileResourceAssociationExtension::CapabilityStatementProfileResourceAssociationExtension()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_CapabilityStatementProfileResourceAssociationExtension.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension)
}
CapabilityStatementProfileResourceAssociationExtension::CapabilityStatementProfileResourceAssociationExtension(const CapabilityStatementProfileResourceAssociationExtension& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_value_code()) {
    value_code_ = new ::google::fhir::stu3::proto::ResourceTypeCode(*from.value_code_);
  } else {
    value_code_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension)
}

void CapabilityStatementProfileResourceAssociationExtension::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_code_) -
      reinterpret_cast<char*>(&id_)) + sizeof(value_code_));
}

CapabilityStatementProfileResourceAssociationExtension::~CapabilityStatementProfileResourceAssociationExtension() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension)
  SharedDtor();
}

void CapabilityStatementProfileResourceAssociationExtension::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete value_code_;
}

void CapabilityStatementProfileResourceAssociationExtension::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CapabilityStatementProfileResourceAssociationExtension::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CapabilityStatementProfileResourceAssociationExtension& CapabilityStatementProfileResourceAssociationExtension::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_CapabilityStatementProfileResourceAssociationExtension.base);
  return *internal_default_instance();
}


void CapabilityStatementProfileResourceAssociationExtension::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_code_ != NULL) {
    delete value_code_;
  }
  value_code_ = NULL;
  _internal_metadata_.Clear();
}

bool CapabilityStatementProfileResourceAssociationExtension::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ResourceTypeCode value_code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension)
  return false;
#undef DO_
}

void CapabilityStatementProfileResourceAssociationExtension::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.ResourceTypeCode value_code = 3;
  if (this->has_value_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_value_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension)
}

::google::protobuf::uint8* CapabilityStatementProfileResourceAssociationExtension::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.ResourceTypeCode value_code = 3;
  if (this->has_value_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_value_code(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension)
  return target;
}

size_t CapabilityStatementProfileResourceAssociationExtension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.ResourceTypeCode value_code = 3;
  if (this->has_value_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_code_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CapabilityStatementProfileResourceAssociationExtension::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension)
  GOOGLE_DCHECK_NE(&from, this);
  const CapabilityStatementProfileResourceAssociationExtension* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CapabilityStatementProfileResourceAssociationExtension>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension)
    MergeFrom(*source);
  }
}

void CapabilityStatementProfileResourceAssociationExtension::MergeFrom(const CapabilityStatementProfileResourceAssociationExtension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_value_code()) {
    mutable_value_code()->::google::fhir::stu3::proto::ResourceTypeCode::MergeFrom(from.value_code());
  }
}

void CapabilityStatementProfileResourceAssociationExtension::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CapabilityStatementProfileResourceAssociationExtension::CopyFrom(const CapabilityStatementProfileResourceAssociationExtension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CapabilityStatementProfileResourceAssociationExtension::IsInitialized() const {
  return true;
}

void CapabilityStatementProfileResourceAssociationExtension::Swap(CapabilityStatementProfileResourceAssociationExtension* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CapabilityStatementProfileResourceAssociationExtension::InternalSwap(CapabilityStatementProfileResourceAssociationExtension* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(value_code_, other->value_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CapabilityStatementProfileResourceAssociationExtension::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PatientUSCoreRaceExtension::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_PatientUSCoreRaceExtension_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_PatientUSCoreRaceExtension_default_instance_._instance.get_mutable()->text_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
void PatientUSCoreRaceExtension::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void PatientUSCoreRaceExtension::clear_extension() {
  extension_.Clear();
}
void PatientUSCoreRaceExtension::clear_omb_category() {
  omb_category_.Clear();
}
void PatientUSCoreRaceExtension::clear_detailed() {
  detailed_.Clear();
}
void PatientUSCoreRaceExtension::clear_text() {
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PatientUSCoreRaceExtension::kIdFieldNumber;
const int PatientUSCoreRaceExtension::kExtensionFieldNumber;
const int PatientUSCoreRaceExtension::kOmbCategoryFieldNumber;
const int PatientUSCoreRaceExtension::kDetailedFieldNumber;
const int PatientUSCoreRaceExtension::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PatientUSCoreRaceExtension::PatientUSCoreRaceExtension()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_PatientUSCoreRaceExtension.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.PatientUSCoreRaceExtension)
}
PatientUSCoreRaceExtension::PatientUSCoreRaceExtension(const PatientUSCoreRaceExtension& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      omb_category_(from.omb_category_),
      detailed_(from.detailed_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_text()) {
    text_ = new ::google::fhir::stu3::proto::String(*from.text_);
  } else {
    text_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.PatientUSCoreRaceExtension)
}

void PatientUSCoreRaceExtension::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&text_) -
      reinterpret_cast<char*>(&id_)) + sizeof(text_));
}

PatientUSCoreRaceExtension::~PatientUSCoreRaceExtension() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.PatientUSCoreRaceExtension)
  SharedDtor();
}

void PatientUSCoreRaceExtension::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete text_;
}

void PatientUSCoreRaceExtension::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PatientUSCoreRaceExtension::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PatientUSCoreRaceExtension& PatientUSCoreRaceExtension::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_PatientUSCoreRaceExtension.base);
  return *internal_default_instance();
}


void PatientUSCoreRaceExtension::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.PatientUSCoreRaceExtension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  omb_category_.Clear();
  detailed_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  _internal_metadata_.Clear();
}

bool PatientUSCoreRaceExtension::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.PatientUSCoreRaceExtension)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Coding omb_category = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_omb_category()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Coding detailed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_detailed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String text = 6 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.PatientUSCoreRaceExtension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.PatientUSCoreRaceExtension)
  return false;
#undef DO_
}

void PatientUSCoreRaceExtension::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.PatientUSCoreRaceExtension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Coding omb_category = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->omb_category_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->omb_category(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Coding detailed = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->detailed_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->detailed(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.String text = 6 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_text(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.PatientUSCoreRaceExtension)
}

::google::protobuf::uint8* PatientUSCoreRaceExtension::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.PatientUSCoreRaceExtension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Coding omb_category = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->omb_category_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->omb_category(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Coding detailed = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->detailed_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->detailed(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.String text = 6 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_text(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.PatientUSCoreRaceExtension)
  return target;
}

size_t PatientUSCoreRaceExtension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.PatientUSCoreRaceExtension)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Coding omb_category = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->omb_category_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->omb_category(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Coding detailed = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->detailed_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->detailed(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.String text = 6 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *text_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PatientUSCoreRaceExtension::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.PatientUSCoreRaceExtension)
  GOOGLE_DCHECK_NE(&from, this);
  const PatientUSCoreRaceExtension* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PatientUSCoreRaceExtension>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.PatientUSCoreRaceExtension)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.PatientUSCoreRaceExtension)
    MergeFrom(*source);
  }
}

void PatientUSCoreRaceExtension::MergeFrom(const PatientUSCoreRaceExtension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.PatientUSCoreRaceExtension)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  omb_category_.MergeFrom(from.omb_category_);
  detailed_.MergeFrom(from.detailed_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_text()) {
    mutable_text()->::google::fhir::stu3::proto::String::MergeFrom(from.text());
  }
}

void PatientUSCoreRaceExtension::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.PatientUSCoreRaceExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PatientUSCoreRaceExtension::CopyFrom(const PatientUSCoreRaceExtension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.PatientUSCoreRaceExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PatientUSCoreRaceExtension::IsInitialized() const {
  return true;
}

void PatientUSCoreRaceExtension::Swap(PatientUSCoreRaceExtension* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PatientUSCoreRaceExtension::InternalSwap(PatientUSCoreRaceExtension* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&omb_category_)->InternalSwap(CastToBase(&other->omb_category_));
  CastToBase(&detailed_)->InternalSwap(CastToBase(&other->detailed_));
  swap(id_, other->id_);
  swap(text_, other->text_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PatientUSCoreRaceExtension::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreSmokingstatus_Effective::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Effective_default_instance_.date_time_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Effective_default_instance_.period_ = const_cast< ::google::fhir::stu3::proto::Period*>(
      ::google::fhir::stu3::proto::Period::internal_default_instance());
}
void UsCoreSmokingstatus_Effective::set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_effective();
  if (date_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date_time, submessage_arena);
    }
    set_has_date_time();
    effective_.date_time_ = date_time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective.date_time)
}
void UsCoreSmokingstatus_Effective::clear_date_time() {
  if (has_date_time()) {
    delete effective_.date_time_;
    clear_has_effective();
  }
}
void UsCoreSmokingstatus_Effective::set_allocated_period(::google::fhir::stu3::proto::Period* period) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_effective();
  if (period) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      period = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, period, submessage_arena);
    }
    set_has_period();
    effective_.period_ = period;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective.period)
}
void UsCoreSmokingstatus_Effective::clear_period() {
  if (has_period()) {
    delete effective_.period_;
    clear_has_effective();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreSmokingstatus_Effective::kDateTimeFieldNumber;
const int UsCoreSmokingstatus_Effective::kPeriodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreSmokingstatus_Effective::UsCoreSmokingstatus_Effective()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreSmokingstatus_Effective.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective)
}
UsCoreSmokingstatus_Effective::UsCoreSmokingstatus_Effective(const UsCoreSmokingstatus_Effective& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_effective();
  switch (from.effective_case()) {
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case EFFECTIVE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective)
}

void UsCoreSmokingstatus_Effective::SharedCtor() {
  clear_has_effective();
}

UsCoreSmokingstatus_Effective::~UsCoreSmokingstatus_Effective() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective)
  SharedDtor();
}

void UsCoreSmokingstatus_Effective::SharedDtor() {
  if (has_effective()) {
    clear_effective();
  }
}

void UsCoreSmokingstatus_Effective::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreSmokingstatus_Effective::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreSmokingstatus_Effective& UsCoreSmokingstatus_Effective::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreSmokingstatus_Effective.base);
  return *internal_default_instance();
}


void UsCoreSmokingstatus_Effective::clear_effective() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective)
  switch (effective_case()) {
    case kDateTime: {
      delete effective_.date_time_;
      break;
    }
    case kPeriod: {
      delete effective_.period_;
      break;
    }
    case EFFECTIVE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EFFECTIVE_NOT_SET;
}


void UsCoreSmokingstatus_Effective::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_effective();
  _internal_metadata_.Clear();
}

bool UsCoreSmokingstatus_Effective::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.DateTime date_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Period period = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective)
  return false;
#undef DO_
}

void UsCoreSmokingstatus_Effective::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.DateTime date_time = 1;
  if (has_date_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_date_time(), output);
  }

  // .google.fhir.stu3.proto.Period period = 2;
  if (has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_period(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective)
}

::google::protobuf::uint8* UsCoreSmokingstatus_Effective::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.DateTime date_time = 1;
  if (has_date_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_date_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Period period = 2;
  if (has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_period(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective)
  return target;
}

size_t UsCoreSmokingstatus_Effective::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (effective_case()) {
    // .google.fhir.stu3.proto.DateTime date_time = 1;
    case kDateTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *effective_.date_time_);
      break;
    }
    // .google.fhir.stu3.proto.Period period = 2;
    case kPeriod: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *effective_.period_);
      break;
    }
    case EFFECTIVE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreSmokingstatus_Effective::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreSmokingstatus_Effective* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreSmokingstatus_Effective>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective)
    MergeFrom(*source);
  }
}

void UsCoreSmokingstatus_Effective::MergeFrom(const UsCoreSmokingstatus_Effective& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.effective_case()) {
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case EFFECTIVE_NOT_SET: {
      break;
    }
  }
}

void UsCoreSmokingstatus_Effective::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreSmokingstatus_Effective::CopyFrom(const UsCoreSmokingstatus_Effective& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreSmokingstatus_Effective::IsInitialized() const {
  return true;
}

void UsCoreSmokingstatus_Effective::Swap(UsCoreSmokingstatus_Effective* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreSmokingstatus_Effective::InternalSwap(UsCoreSmokingstatus_Effective* other) {
  using std::swap;
  swap(effective_, other->effective_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreSmokingstatus_Effective::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreSmokingstatus_Value::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Value_default_instance_.codeable_concept_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
}
void UsCoreSmokingstatus_Value::set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (codeable_concept) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      codeable_concept = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, codeable_concept, submessage_arena);
    }
    set_has_codeable_concept();
    value_.codeable_concept_ = codeable_concept;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.Value.codeable_concept)
}
void UsCoreSmokingstatus_Value::clear_codeable_concept() {
  if (has_codeable_concept()) {
    delete value_.codeable_concept_;
    clear_has_value();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreSmokingstatus_Value::kCodeableConceptFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreSmokingstatus_Value::UsCoreSmokingstatus_Value()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreSmokingstatus_Value.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreSmokingstatus.Value)
}
UsCoreSmokingstatus_Value::UsCoreSmokingstatus_Value(const UsCoreSmokingstatus_Value& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreSmokingstatus.Value)
}

void UsCoreSmokingstatus_Value::SharedCtor() {
  clear_has_value();
}

UsCoreSmokingstatus_Value::~UsCoreSmokingstatus_Value() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreSmokingstatus.Value)
  SharedDtor();
}

void UsCoreSmokingstatus_Value::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
}

void UsCoreSmokingstatus_Value::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreSmokingstatus_Value::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreSmokingstatus_Value& UsCoreSmokingstatus_Value::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreSmokingstatus_Value.base);
  return *internal_default_instance();
}


void UsCoreSmokingstatus_Value::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Value)
  switch (value_case()) {
    case kCodeableConcept: {
      delete value_.codeable_concept_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void UsCoreSmokingstatus_Value::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear();
}

bool UsCoreSmokingstatus_Value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Value)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_codeable_concept()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreSmokingstatus.Value)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreSmokingstatus.Value)
  return false;
#undef DO_
}

void UsCoreSmokingstatus_Value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
  if (has_codeable_concept()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_codeable_concept(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreSmokingstatus.Value)
}

::google::protobuf::uint8* UsCoreSmokingstatus_Value::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
  if (has_codeable_concept()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_codeable_concept(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreSmokingstatus.Value)
  return target;
}

size_t UsCoreSmokingstatus_Value::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Value)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (value_case()) {
    // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
    case kCodeableConcept: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.codeable_concept_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreSmokingstatus_Value::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Value)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreSmokingstatus_Value* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreSmokingstatus_Value>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreSmokingstatus.Value)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreSmokingstatus.Value)
    MergeFrom(*source);
  }
}

void UsCoreSmokingstatus_Value::MergeFrom(const UsCoreSmokingstatus_Value& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Value)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void UsCoreSmokingstatus_Value::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreSmokingstatus_Value::CopyFrom(const UsCoreSmokingstatus_Value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreSmokingstatus_Value::IsInitialized() const {
  return true;
}

void UsCoreSmokingstatus_Value::Swap(UsCoreSmokingstatus_Value* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreSmokingstatus_Value::InternalSwap(UsCoreSmokingstatus_Value* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreSmokingstatus_Value::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreSmokingstatus_ReferenceRange::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_ReferenceRange_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_ReferenceRange_default_instance_._instance.get_mutable()->low_ = const_cast< ::google::fhir::stu3::proto::SimpleQuantity*>(
      ::google::fhir::stu3::proto::SimpleQuantity::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_ReferenceRange_default_instance_._instance.get_mutable()->high_ = const_cast< ::google::fhir::stu3::proto::SimpleQuantity*>(
      ::google::fhir::stu3::proto::SimpleQuantity::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_ReferenceRange_default_instance_._instance.get_mutable()->type_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_ReferenceRange_default_instance_._instance.get_mutable()->age_ = const_cast< ::google::fhir::stu3::proto::Range*>(
      ::google::fhir::stu3::proto::Range::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_ReferenceRange_default_instance_._instance.get_mutable()->text_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
void UsCoreSmokingstatus_ReferenceRange::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreSmokingstatus_ReferenceRange::clear_extension() {
  extension_.Clear();
}
void UsCoreSmokingstatus_ReferenceRange::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreSmokingstatus_ReferenceRange::clear_low() {
  if (GetArenaNoVirtual() == NULL && low_ != NULL) {
    delete low_;
  }
  low_ = NULL;
}
void UsCoreSmokingstatus_ReferenceRange::clear_high() {
  if (GetArenaNoVirtual() == NULL && high_ != NULL) {
    delete high_;
  }
  high_ = NULL;
}
void UsCoreSmokingstatus_ReferenceRange::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
}
void UsCoreSmokingstatus_ReferenceRange::clear_applies_to() {
  applies_to_.Clear();
}
void UsCoreSmokingstatus_ReferenceRange::clear_age() {
  if (GetArenaNoVirtual() == NULL && age_ != NULL) {
    delete age_;
  }
  age_ = NULL;
}
void UsCoreSmokingstatus_ReferenceRange::clear_text() {
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreSmokingstatus_ReferenceRange::kIdFieldNumber;
const int UsCoreSmokingstatus_ReferenceRange::kExtensionFieldNumber;
const int UsCoreSmokingstatus_ReferenceRange::kModifierExtensionFieldNumber;
const int UsCoreSmokingstatus_ReferenceRange::kLowFieldNumber;
const int UsCoreSmokingstatus_ReferenceRange::kHighFieldNumber;
const int UsCoreSmokingstatus_ReferenceRange::kTypeFieldNumber;
const int UsCoreSmokingstatus_ReferenceRange::kAppliesToFieldNumber;
const int UsCoreSmokingstatus_ReferenceRange::kAgeFieldNumber;
const int UsCoreSmokingstatus_ReferenceRange::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreSmokingstatus_ReferenceRange::UsCoreSmokingstatus_ReferenceRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreSmokingstatus_ReferenceRange.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange)
}
UsCoreSmokingstatus_ReferenceRange::UsCoreSmokingstatus_ReferenceRange(const UsCoreSmokingstatus_ReferenceRange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      applies_to_(from.applies_to_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_low()) {
    low_ = new ::google::fhir::stu3::proto::SimpleQuantity(*from.low_);
  } else {
    low_ = NULL;
  }
  if (from.has_high()) {
    high_ = new ::google::fhir::stu3::proto::SimpleQuantity(*from.high_);
  } else {
    high_ = NULL;
  }
  if (from.has_type()) {
    type_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.type_);
  } else {
    type_ = NULL;
  }
  if (from.has_age()) {
    age_ = new ::google::fhir::stu3::proto::Range(*from.age_);
  } else {
    age_ = NULL;
  }
  if (from.has_text()) {
    text_ = new ::google::fhir::stu3::proto::String(*from.text_);
  } else {
    text_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange)
}

void UsCoreSmokingstatus_ReferenceRange::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&text_) -
      reinterpret_cast<char*>(&id_)) + sizeof(text_));
}

UsCoreSmokingstatus_ReferenceRange::~UsCoreSmokingstatus_ReferenceRange() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange)
  SharedDtor();
}

void UsCoreSmokingstatus_ReferenceRange::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete low_;
  if (this != internal_default_instance()) delete high_;
  if (this != internal_default_instance()) delete type_;
  if (this != internal_default_instance()) delete age_;
  if (this != internal_default_instance()) delete text_;
}

void UsCoreSmokingstatus_ReferenceRange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreSmokingstatus_ReferenceRange::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreSmokingstatus_ReferenceRange& UsCoreSmokingstatus_ReferenceRange::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreSmokingstatus_ReferenceRange.base);
  return *internal_default_instance();
}


void UsCoreSmokingstatus_ReferenceRange::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  applies_to_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && low_ != NULL) {
    delete low_;
  }
  low_ = NULL;
  if (GetArenaNoVirtual() == NULL && high_ != NULL) {
    delete high_;
  }
  high_ = NULL;
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  if (GetArenaNoVirtual() == NULL && age_ != NULL) {
    delete age_;
  }
  age_ = NULL;
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreSmokingstatus_ReferenceRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.SimpleQuantity low = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_low()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.SimpleQuantity high = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_high()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept applies_to = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_applies_to()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Range age = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_age()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String text = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange)
  return false;
#undef DO_
}

void UsCoreSmokingstatus_ReferenceRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.SimpleQuantity low = 4;
  if (this->has_low()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_low(), output);
  }

  // .google.fhir.stu3.proto.SimpleQuantity high = 5;
  if (this->has_high()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_high(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept type = 6;
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_type(), output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept applies_to = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->applies_to_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->applies_to(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Range age = 8;
  if (this->has_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_age(), output);
  }

  // .google.fhir.stu3.proto.String text = 9;
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_text(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange)
}

::google::protobuf::uint8* UsCoreSmokingstatus_ReferenceRange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.SimpleQuantity low = 4;
  if (this->has_low()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_low(), deterministic, target);
  }

  // .google.fhir.stu3.proto.SimpleQuantity high = 5;
  if (this->has_high()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_high(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept type = 6;
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_type(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept applies_to = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->applies_to_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->applies_to(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Range age = 8;
  if (this->has_age()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_age(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String text = 9;
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_text(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange)
  return target;
}

size_t UsCoreSmokingstatus_ReferenceRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept applies_to = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->applies_to_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->applies_to(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.SimpleQuantity low = 4;
  if (this->has_low()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *low_);
  }

  // .google.fhir.stu3.proto.SimpleQuantity high = 5;
  if (this->has_high()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *high_);
  }

  // .google.fhir.stu3.proto.CodeableConcept type = 6;
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  // .google.fhir.stu3.proto.Range age = 8;
  if (this->has_age()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *age_);
  }

  // .google.fhir.stu3.proto.String text = 9;
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *text_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreSmokingstatus_ReferenceRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreSmokingstatus_ReferenceRange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreSmokingstatus_ReferenceRange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange)
    MergeFrom(*source);
  }
}

void UsCoreSmokingstatus_ReferenceRange::MergeFrom(const UsCoreSmokingstatus_ReferenceRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  applies_to_.MergeFrom(from.applies_to_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_low()) {
    mutable_low()->::google::fhir::stu3::proto::SimpleQuantity::MergeFrom(from.low());
  }
  if (from.has_high()) {
    mutable_high()->::google::fhir::stu3::proto::SimpleQuantity::MergeFrom(from.high());
  }
  if (from.has_type()) {
    mutable_type()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.type());
  }
  if (from.has_age()) {
    mutable_age()->::google::fhir::stu3::proto::Range::MergeFrom(from.age());
  }
  if (from.has_text()) {
    mutable_text()->::google::fhir::stu3::proto::String::MergeFrom(from.text());
  }
}

void UsCoreSmokingstatus_ReferenceRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreSmokingstatus_ReferenceRange::CopyFrom(const UsCoreSmokingstatus_ReferenceRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreSmokingstatus_ReferenceRange::IsInitialized() const {
  return true;
}

void UsCoreSmokingstatus_ReferenceRange::Swap(UsCoreSmokingstatus_ReferenceRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreSmokingstatus_ReferenceRange::InternalSwap(UsCoreSmokingstatus_ReferenceRange* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&applies_to_)->InternalSwap(CastToBase(&other->applies_to_));
  swap(id_, other->id_);
  swap(low_, other->low_);
  swap(high_, other->high_);
  swap(type_, other->type_);
  swap(age_, other->age_);
  swap(text_, other->text_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreSmokingstatus_ReferenceRange::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreSmokingstatus_Related::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Related_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Related_default_instance_._instance.get_mutable()->type_ = const_cast< ::google::fhir::stu3::proto::ObservationRelationshipTypeCode*>(
      ::google::fhir::stu3::proto::ObservationRelationshipTypeCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Related_default_instance_._instance.get_mutable()->target_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
}
void UsCoreSmokingstatus_Related::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreSmokingstatus_Related::clear_extension() {
  extension_.Clear();
}
void UsCoreSmokingstatus_Related::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreSmokingstatus_Related::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
}
void UsCoreSmokingstatus_Related::clear_target() {
  if (GetArenaNoVirtual() == NULL && target_ != NULL) {
    delete target_;
  }
  target_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreSmokingstatus_Related::kIdFieldNumber;
const int UsCoreSmokingstatus_Related::kExtensionFieldNumber;
const int UsCoreSmokingstatus_Related::kModifierExtensionFieldNumber;
const int UsCoreSmokingstatus_Related::kTypeFieldNumber;
const int UsCoreSmokingstatus_Related::kTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreSmokingstatus_Related::UsCoreSmokingstatus_Related()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreSmokingstatus_Related.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related)
}
UsCoreSmokingstatus_Related::UsCoreSmokingstatus_Related(const UsCoreSmokingstatus_Related& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_type()) {
    type_ = new ::google::fhir::stu3::proto::ObservationRelationshipTypeCode(*from.type_);
  } else {
    type_ = NULL;
  }
  if (from.has_target()) {
    target_ = new ::google::fhir::stu3::proto::Reference(*from.target_);
  } else {
    target_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related)
}

void UsCoreSmokingstatus_Related::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_) -
      reinterpret_cast<char*>(&id_)) + sizeof(target_));
}

UsCoreSmokingstatus_Related::~UsCoreSmokingstatus_Related() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related)
  SharedDtor();
}

void UsCoreSmokingstatus_Related::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete type_;
  if (this != internal_default_instance()) delete target_;
}

void UsCoreSmokingstatus_Related::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreSmokingstatus_Related::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreSmokingstatus_Related& UsCoreSmokingstatus_Related::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreSmokingstatus_Related.base);
  return *internal_default_instance();
}


void UsCoreSmokingstatus_Related::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  if (GetArenaNoVirtual() == NULL && target_ != NULL) {
    delete target_;
  }
  target_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreSmokingstatus_Related::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ObservationRelationshipTypeCode type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference target = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/QuestionnaireResponse", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Sequence"];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related)
  return false;
#undef DO_
}

void UsCoreSmokingstatus_Related::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.ObservationRelationshipTypeCode type = 4;
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_type(), output);
  }

  // .google.fhir.stu3.proto.Reference target = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/QuestionnaireResponse", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Sequence"];
  if (this->has_target()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_target(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related)
}

::google::protobuf::uint8* UsCoreSmokingstatus_Related::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.ObservationRelationshipTypeCode type = 4;
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_type(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference target = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/QuestionnaireResponse", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Sequence"];
  if (this->has_target()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_target(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related)
  return target;
}

size_t UsCoreSmokingstatus_Related::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.ObservationRelationshipTypeCode type = 4;
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  // .google.fhir.stu3.proto.Reference target = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/QuestionnaireResponse", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Sequence"];
  if (this->has_target()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *target_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreSmokingstatus_Related::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreSmokingstatus_Related* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreSmokingstatus_Related>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related)
    MergeFrom(*source);
  }
}

void UsCoreSmokingstatus_Related::MergeFrom(const UsCoreSmokingstatus_Related& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_type()) {
    mutable_type()->::google::fhir::stu3::proto::ObservationRelationshipTypeCode::MergeFrom(from.type());
  }
  if (from.has_target()) {
    mutable_target()->::google::fhir::stu3::proto::Reference::MergeFrom(from.target());
  }
}

void UsCoreSmokingstatus_Related::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreSmokingstatus_Related::CopyFrom(const UsCoreSmokingstatus_Related& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreSmokingstatus_Related::IsInitialized() const {
  return true;
}

void UsCoreSmokingstatus_Related::Swap(UsCoreSmokingstatus_Related* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreSmokingstatus_Related::InternalSwap(UsCoreSmokingstatus_Related* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  swap(id_, other->id_);
  swap(type_, other->type_);
  swap(target_, other->target_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreSmokingstatus_Related::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreSmokingstatus_Component_Value::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Component_Value_default_instance_.quantity_ = const_cast< ::google::fhir::stu3::proto::Quantity*>(
      ::google::fhir::stu3::proto::Quantity::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Component_Value_default_instance_.codeable_concept_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Component_Value_default_instance_.string_value_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Component_Value_default_instance_.range_ = const_cast< ::google::fhir::stu3::proto::Range*>(
      ::google::fhir::stu3::proto::Range::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Component_Value_default_instance_.ratio_ = const_cast< ::google::fhir::stu3::proto::Ratio*>(
      ::google::fhir::stu3::proto::Ratio::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Component_Value_default_instance_.sampled_data_ = const_cast< ::google::fhir::stu3::proto::SampledData*>(
      ::google::fhir::stu3::proto::SampledData::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Component_Value_default_instance_.attachment_ = const_cast< ::google::fhir::stu3::proto::Attachment*>(
      ::google::fhir::stu3::proto::Attachment::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Component_Value_default_instance_.time_ = const_cast< ::google::fhir::stu3::proto::Time*>(
      ::google::fhir::stu3::proto::Time::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Component_Value_default_instance_.date_time_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Component_Value_default_instance_.period_ = const_cast< ::google::fhir::stu3::proto::Period*>(
      ::google::fhir::stu3::proto::Period::internal_default_instance());
}
void UsCoreSmokingstatus_Component_Value::set_allocated_quantity(::google::fhir::stu3::proto::Quantity* quantity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (quantity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      quantity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, quantity, submessage_arena);
    }
    set_has_quantity();
    value_.quantity_ = quantity;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.quantity)
}
void UsCoreSmokingstatus_Component_Value::clear_quantity() {
  if (has_quantity()) {
    delete value_.quantity_;
    clear_has_value();
  }
}
void UsCoreSmokingstatus_Component_Value::set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (codeable_concept) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      codeable_concept = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, codeable_concept, submessage_arena);
    }
    set_has_codeable_concept();
    value_.codeable_concept_ = codeable_concept;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.codeable_concept)
}
void UsCoreSmokingstatus_Component_Value::clear_codeable_concept() {
  if (has_codeable_concept()) {
    delete value_.codeable_concept_;
    clear_has_value();
  }
}
void UsCoreSmokingstatus_Component_Value::set_allocated_string_value(::google::fhir::stu3::proto::String* string_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (string_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      string_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, string_value, submessage_arena);
    }
    set_has_string_value();
    value_.string_value_ = string_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.string_value)
}
void UsCoreSmokingstatus_Component_Value::clear_string_value() {
  if (has_string_value()) {
    delete value_.string_value_;
    clear_has_value();
  }
}
void UsCoreSmokingstatus_Component_Value::set_allocated_range(::google::fhir::stu3::proto::Range* range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (range) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, range, submessage_arena);
    }
    set_has_range();
    value_.range_ = range;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.range)
}
void UsCoreSmokingstatus_Component_Value::clear_range() {
  if (has_range()) {
    delete value_.range_;
    clear_has_value();
  }
}
void UsCoreSmokingstatus_Component_Value::set_allocated_ratio(::google::fhir::stu3::proto::Ratio* ratio) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (ratio) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ratio = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ratio, submessage_arena);
    }
    set_has_ratio();
    value_.ratio_ = ratio;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.ratio)
}
void UsCoreSmokingstatus_Component_Value::clear_ratio() {
  if (has_ratio()) {
    delete value_.ratio_;
    clear_has_value();
  }
}
void UsCoreSmokingstatus_Component_Value::set_allocated_sampled_data(::google::fhir::stu3::proto::SampledData* sampled_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (sampled_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sampled_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sampled_data, submessage_arena);
    }
    set_has_sampled_data();
    value_.sampled_data_ = sampled_data;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.sampled_data)
}
void UsCoreSmokingstatus_Component_Value::clear_sampled_data() {
  if (has_sampled_data()) {
    delete value_.sampled_data_;
    clear_has_value();
  }
}
void UsCoreSmokingstatus_Component_Value::set_allocated_attachment(::google::fhir::stu3::proto::Attachment* attachment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (attachment) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      attachment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, attachment, submessage_arena);
    }
    set_has_attachment();
    value_.attachment_ = attachment;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.attachment)
}
void UsCoreSmokingstatus_Component_Value::clear_attachment() {
  if (has_attachment()) {
    delete value_.attachment_;
    clear_has_value();
  }
}
void UsCoreSmokingstatus_Component_Value::set_allocated_time(::google::fhir::stu3::proto::Time* time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time, submessage_arena);
    }
    set_has_time();
    value_.time_ = time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.time)
}
void UsCoreSmokingstatus_Component_Value::clear_time() {
  if (has_time()) {
    delete value_.time_;
    clear_has_value();
  }
}
void UsCoreSmokingstatus_Component_Value::set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (date_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date_time, submessage_arena);
    }
    set_has_date_time();
    value_.date_time_ = date_time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.date_time)
}
void UsCoreSmokingstatus_Component_Value::clear_date_time() {
  if (has_date_time()) {
    delete value_.date_time_;
    clear_has_value();
  }
}
void UsCoreSmokingstatus_Component_Value::set_allocated_period(::google::fhir::stu3::proto::Period* period) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (period) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      period = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, period, submessage_arena);
    }
    set_has_period();
    value_.period_ = period;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.period)
}
void UsCoreSmokingstatus_Component_Value::clear_period() {
  if (has_period()) {
    delete value_.period_;
    clear_has_value();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreSmokingstatus_Component_Value::kQuantityFieldNumber;
const int UsCoreSmokingstatus_Component_Value::kCodeableConceptFieldNumber;
const int UsCoreSmokingstatus_Component_Value::kStringValueFieldNumber;
const int UsCoreSmokingstatus_Component_Value::kRangeFieldNumber;
const int UsCoreSmokingstatus_Component_Value::kRatioFieldNumber;
const int UsCoreSmokingstatus_Component_Value::kSampledDataFieldNumber;
const int UsCoreSmokingstatus_Component_Value::kAttachmentFieldNumber;
const int UsCoreSmokingstatus_Component_Value::kTimeFieldNumber;
const int UsCoreSmokingstatus_Component_Value::kDateTimeFieldNumber;
const int UsCoreSmokingstatus_Component_Value::kPeriodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreSmokingstatus_Component_Value::UsCoreSmokingstatus_Component_Value()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreSmokingstatus_Component_Value.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value)
}
UsCoreSmokingstatus_Component_Value::UsCoreSmokingstatus_Component_Value(const UsCoreSmokingstatus_Component_Value& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kQuantity: {
      mutable_quantity()->::google::fhir::stu3::proto::Quantity::MergeFrom(from.quantity());
      break;
    }
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case kStringValue: {
      mutable_string_value()->::google::fhir::stu3::proto::String::MergeFrom(from.string_value());
      break;
    }
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case kRatio: {
      mutable_ratio()->::google::fhir::stu3::proto::Ratio::MergeFrom(from.ratio());
      break;
    }
    case kSampledData: {
      mutable_sampled_data()->::google::fhir::stu3::proto::SampledData::MergeFrom(from.sampled_data());
      break;
    }
    case kAttachment: {
      mutable_attachment()->::google::fhir::stu3::proto::Attachment::MergeFrom(from.attachment());
      break;
    }
    case kTime: {
      mutable_time()->::google::fhir::stu3::proto::Time::MergeFrom(from.time());
      break;
    }
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value)
}

void UsCoreSmokingstatus_Component_Value::SharedCtor() {
  clear_has_value();
}

UsCoreSmokingstatus_Component_Value::~UsCoreSmokingstatus_Component_Value() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value)
  SharedDtor();
}

void UsCoreSmokingstatus_Component_Value::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
}

void UsCoreSmokingstatus_Component_Value::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreSmokingstatus_Component_Value::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreSmokingstatus_Component_Value& UsCoreSmokingstatus_Component_Value::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreSmokingstatus_Component_Value.base);
  return *internal_default_instance();
}


void UsCoreSmokingstatus_Component_Value::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value)
  switch (value_case()) {
    case kQuantity: {
      delete value_.quantity_;
      break;
    }
    case kCodeableConcept: {
      delete value_.codeable_concept_;
      break;
    }
    case kStringValue: {
      delete value_.string_value_;
      break;
    }
    case kRange: {
      delete value_.range_;
      break;
    }
    case kRatio: {
      delete value_.ratio_;
      break;
    }
    case kSampledData: {
      delete value_.sampled_data_;
      break;
    }
    case kAttachment: {
      delete value_.attachment_;
      break;
    }
    case kTime: {
      delete value_.time_;
      break;
    }
    case kDateTime: {
      delete value_.date_time_;
      break;
    }
    case kPeriod: {
      delete value_.period_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void UsCoreSmokingstatus_Component_Value::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear();
}

bool UsCoreSmokingstatus_Component_Value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Quantity quantity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_quantity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_codeable_concept()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String string_value = 3[json_name = "string"];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_string_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Range range = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Ratio ratio = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ratio()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.SampledData sampled_data = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sampled_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Attachment attachment = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_attachment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Time time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DateTime date_time = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Period period = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value)
  return false;
#undef DO_
}

void UsCoreSmokingstatus_Component_Value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Quantity quantity = 1;
  if (has_quantity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_quantity(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
  if (has_codeable_concept()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_codeable_concept(), output);
  }

  // .google.fhir.stu3.proto.String string_value = 3[json_name = "string"];
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_string_value(), output);
  }

  // .google.fhir.stu3.proto.Range range = 4;
  if (has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_range(), output);
  }

  // .google.fhir.stu3.proto.Ratio ratio = 5;
  if (has_ratio()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_ratio(), output);
  }

  // .google.fhir.stu3.proto.SampledData sampled_data = 6;
  if (has_sampled_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_sampled_data(), output);
  }

  // .google.fhir.stu3.proto.Attachment attachment = 7;
  if (has_attachment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_attachment(), output);
  }

  // .google.fhir.stu3.proto.Time time = 8;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_time(), output);
  }

  // .google.fhir.stu3.proto.DateTime date_time = 9;
  if (has_date_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_date_time(), output);
  }

  // .google.fhir.stu3.proto.Period period = 10;
  if (has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_period(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value)
}

::google::protobuf::uint8* UsCoreSmokingstatus_Component_Value::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Quantity quantity = 1;
  if (has_quantity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_quantity(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
  if (has_codeable_concept()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_codeable_concept(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String string_value = 3[json_name = "string"];
  if (has_string_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_string_value(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Range range = 4;
  if (has_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_range(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Ratio ratio = 5;
  if (has_ratio()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_ratio(), deterministic, target);
  }

  // .google.fhir.stu3.proto.SampledData sampled_data = 6;
  if (has_sampled_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_sampled_data(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Attachment attachment = 7;
  if (has_attachment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_attachment(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Time time = 8;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.DateTime date_time = 9;
  if (has_date_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_date_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Period period = 10;
  if (has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_period(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value)
  return target;
}

size_t UsCoreSmokingstatus_Component_Value::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (value_case()) {
    // .google.fhir.stu3.proto.Quantity quantity = 1;
    case kQuantity: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.quantity_);
      break;
    }
    // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
    case kCodeableConcept: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.codeable_concept_);
      break;
    }
    // .google.fhir.stu3.proto.String string_value = 3[json_name = "string"];
    case kStringValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.string_value_);
      break;
    }
    // .google.fhir.stu3.proto.Range range = 4;
    case kRange: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.range_);
      break;
    }
    // .google.fhir.stu3.proto.Ratio ratio = 5;
    case kRatio: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.ratio_);
      break;
    }
    // .google.fhir.stu3.proto.SampledData sampled_data = 6;
    case kSampledData: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.sampled_data_);
      break;
    }
    // .google.fhir.stu3.proto.Attachment attachment = 7;
    case kAttachment: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.attachment_);
      break;
    }
    // .google.fhir.stu3.proto.Time time = 8;
    case kTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.time_);
      break;
    }
    // .google.fhir.stu3.proto.DateTime date_time = 9;
    case kDateTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.date_time_);
      break;
    }
    // .google.fhir.stu3.proto.Period period = 10;
    case kPeriod: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.period_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreSmokingstatus_Component_Value::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreSmokingstatus_Component_Value* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreSmokingstatus_Component_Value>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value)
    MergeFrom(*source);
  }
}

void UsCoreSmokingstatus_Component_Value::MergeFrom(const UsCoreSmokingstatus_Component_Value& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kQuantity: {
      mutable_quantity()->::google::fhir::stu3::proto::Quantity::MergeFrom(from.quantity());
      break;
    }
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case kStringValue: {
      mutable_string_value()->::google::fhir::stu3::proto::String::MergeFrom(from.string_value());
      break;
    }
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case kRatio: {
      mutable_ratio()->::google::fhir::stu3::proto::Ratio::MergeFrom(from.ratio());
      break;
    }
    case kSampledData: {
      mutable_sampled_data()->::google::fhir::stu3::proto::SampledData::MergeFrom(from.sampled_data());
      break;
    }
    case kAttachment: {
      mutable_attachment()->::google::fhir::stu3::proto::Attachment::MergeFrom(from.attachment());
      break;
    }
    case kTime: {
      mutable_time()->::google::fhir::stu3::proto::Time::MergeFrom(from.time());
      break;
    }
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void UsCoreSmokingstatus_Component_Value::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreSmokingstatus_Component_Value::CopyFrom(const UsCoreSmokingstatus_Component_Value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreSmokingstatus_Component_Value::IsInitialized() const {
  return true;
}

void UsCoreSmokingstatus_Component_Value::Swap(UsCoreSmokingstatus_Component_Value* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreSmokingstatus_Component_Value::InternalSwap(UsCoreSmokingstatus_Component_Value* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreSmokingstatus_Component_Value::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreSmokingstatus_Component::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Component_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Component_default_instance_._instance.get_mutable()->code_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Component_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_Value*>(
      ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_Value::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Component_default_instance_._instance.get_mutable()->data_absent_reason_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Component_default_instance_._instance.get_mutable()->interpretation_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
}
void UsCoreSmokingstatus_Component::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreSmokingstatus_Component::clear_extension() {
  extension_.Clear();
}
void UsCoreSmokingstatus_Component::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreSmokingstatus_Component::clear_code() {
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
}
void UsCoreSmokingstatus_Component::clear_data_absent_reason() {
  if (GetArenaNoVirtual() == NULL && data_absent_reason_ != NULL) {
    delete data_absent_reason_;
  }
  data_absent_reason_ = NULL;
}
void UsCoreSmokingstatus_Component::clear_interpretation() {
  if (GetArenaNoVirtual() == NULL && interpretation_ != NULL) {
    delete interpretation_;
  }
  interpretation_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreSmokingstatus_Component::kIdFieldNumber;
const int UsCoreSmokingstatus_Component::kExtensionFieldNumber;
const int UsCoreSmokingstatus_Component::kModifierExtensionFieldNumber;
const int UsCoreSmokingstatus_Component::kCodeFieldNumber;
const int UsCoreSmokingstatus_Component::kValueFieldNumber;
const int UsCoreSmokingstatus_Component::kDataAbsentReasonFieldNumber;
const int UsCoreSmokingstatus_Component::kInterpretationFieldNumber;
const int UsCoreSmokingstatus_Component::kReferenceRangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreSmokingstatus_Component::UsCoreSmokingstatus_Component()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreSmokingstatus_Component.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component)
}
UsCoreSmokingstatus_Component::UsCoreSmokingstatus_Component(const UsCoreSmokingstatus_Component& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      reference_range_(from.reference_range_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_code()) {
    code_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.code_);
  } else {
    code_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_Value(*from.value_);
  } else {
    value_ = NULL;
  }
  if (from.has_data_absent_reason()) {
    data_absent_reason_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.data_absent_reason_);
  } else {
    data_absent_reason_ = NULL;
  }
  if (from.has_interpretation()) {
    interpretation_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.interpretation_);
  } else {
    interpretation_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component)
}

void UsCoreSmokingstatus_Component::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interpretation_) -
      reinterpret_cast<char*>(&id_)) + sizeof(interpretation_));
}

UsCoreSmokingstatus_Component::~UsCoreSmokingstatus_Component() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component)
  SharedDtor();
}

void UsCoreSmokingstatus_Component::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete code_;
  if (this != internal_default_instance()) delete value_;
  if (this != internal_default_instance()) delete data_absent_reason_;
  if (this != internal_default_instance()) delete interpretation_;
}

void UsCoreSmokingstatus_Component::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreSmokingstatus_Component::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreSmokingstatus_Component& UsCoreSmokingstatus_Component::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreSmokingstatus_Component.base);
  return *internal_default_instance();
}


void UsCoreSmokingstatus_Component::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  modifier_extension_.Clear();
  reference_range_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  if (GetArenaNoVirtual() == NULL && data_absent_reason_ != NULL) {
    delete data_absent_reason_;
  }
  data_absent_reason_ = NULL;
  if (GetArenaNoVirtual() == NULL && interpretation_ != NULL) {
    delete interpretation_;
  }
  interpretation_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreSmokingstatus_Component::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept code = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value value = 5 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data_absent_reason()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept interpretation = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interpretation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange reference_range = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_reference_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component)
  return false;
#undef DO_
}

void UsCoreSmokingstatus_Component::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_code(), output);
  }

  // .google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value value = 5 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_value(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
  if (this->has_data_absent_reason()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_data_absent_reason(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept interpretation = 7;
  if (this->has_interpretation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_interpretation(), output);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange reference_range = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reference_range_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->reference_range(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component)
}

::google::protobuf::uint8* UsCoreSmokingstatus_Component::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_code(), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value value = 5 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_value(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
  if (this->has_data_absent_reason()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_data_absent_reason(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept interpretation = 7;
  if (this->has_interpretation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_interpretation(), deterministic, target);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange reference_range = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reference_range_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->reference_range(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component)
  return target;
}

size_t UsCoreSmokingstatus_Component::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange reference_range = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->reference_range_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reference_range(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *code_);
  }

  // .google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value value = 5 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // .google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
  if (this->has_data_absent_reason()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_absent_reason_);
  }

  // .google.fhir.stu3.proto.CodeableConcept interpretation = 7;
  if (this->has_interpretation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *interpretation_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreSmokingstatus_Component::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreSmokingstatus_Component* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreSmokingstatus_Component>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component)
    MergeFrom(*source);
  }
}

void UsCoreSmokingstatus_Component::MergeFrom(const UsCoreSmokingstatus_Component& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  reference_range_.MergeFrom(from.reference_range_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_code()) {
    mutable_code()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.code());
  }
  if (from.has_value()) {
    mutable_value()->::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_Value::MergeFrom(from.value());
  }
  if (from.has_data_absent_reason()) {
    mutable_data_absent_reason()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.data_absent_reason());
  }
  if (from.has_interpretation()) {
    mutable_interpretation()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.interpretation());
  }
}

void UsCoreSmokingstatus_Component::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreSmokingstatus_Component::CopyFrom(const UsCoreSmokingstatus_Component& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreSmokingstatus_Component::IsInitialized() const {
  return true;
}

void UsCoreSmokingstatus_Component::Swap(UsCoreSmokingstatus_Component* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreSmokingstatus_Component::InternalSwap(UsCoreSmokingstatus_Component* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&reference_range_)->InternalSwap(CastToBase(&other->reference_range_));
  swap(id_, other->id_);
  swap(code_, other->code_);
  swap(value_, other->value_);
  swap(data_absent_reason_, other->data_absent_reason_);
  swap(interpretation_, other->interpretation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreSmokingstatus_Component::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsCoreSmokingstatus::InitAsDefaultInstance() {
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::Id*>(
      ::google::fhir::stu3::proto::Id::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_default_instance_._instance.get_mutable()->meta_ = const_cast< ::google::fhir::stu3::proto::Meta*>(
      ::google::fhir::stu3::proto::Meta::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_default_instance_._instance.get_mutable()->implicit_rules_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_default_instance_._instance.get_mutable()->language_ = const_cast< ::google::fhir::stu3::proto::LanguageCode*>(
      ::google::fhir::stu3::proto::LanguageCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_default_instance_._instance.get_mutable()->text_ = const_cast< ::google::fhir::stu3::proto::Narrative*>(
      ::google::fhir::stu3::proto::Narrative::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::fhir::stu3::proto::ObservationStatusCode*>(
      ::google::fhir::stu3::proto::ObservationStatusCode::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_default_instance_._instance.get_mutable()->code_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_default_instance_._instance.get_mutable()->subject_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_default_instance_._instance.get_mutable()->context_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_default_instance_._instance.get_mutable()->effective_ = const_cast< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Effective*>(
      ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Effective::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_default_instance_._instance.get_mutable()->issued_ = const_cast< ::google::fhir::stu3::proto::Instant*>(
      ::google::fhir::stu3::proto::Instant::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Value*>(
      ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Value::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_default_instance_._instance.get_mutable()->data_absent_reason_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_default_instance_._instance.get_mutable()->interpretation_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_default_instance_._instance.get_mutable()->comment_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_default_instance_._instance.get_mutable()->body_site_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_default_instance_._instance.get_mutable()->method_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_default_instance_._instance.get_mutable()->specimen_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::uscore::_UsCoreSmokingstatus_default_instance_._instance.get_mutable()->device_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
}
void UsCoreSmokingstatus::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void UsCoreSmokingstatus::clear_meta() {
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
}
void UsCoreSmokingstatus::clear_implicit_rules() {
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
}
void UsCoreSmokingstatus::clear_language() {
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
}
void UsCoreSmokingstatus::clear_text() {
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
}
void UsCoreSmokingstatus::clear_contained() {
  contained_.Clear();
}
void UsCoreSmokingstatus::clear_extension() {
  extension_.Clear();
}
void UsCoreSmokingstatus::clear_modifier_extension() {
  modifier_extension_.Clear();
}
void UsCoreSmokingstatus::clear_identifier() {
  identifier_.Clear();
}
void UsCoreSmokingstatus::clear_based_on() {
  based_on_.Clear();
}
void UsCoreSmokingstatus::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
void UsCoreSmokingstatus::clear_category() {
  category_.Clear();
}
void UsCoreSmokingstatus::clear_code() {
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
}
void UsCoreSmokingstatus::clear_subject() {
  if (GetArenaNoVirtual() == NULL && subject_ != NULL) {
    delete subject_;
  }
  subject_ = NULL;
}
void UsCoreSmokingstatus::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
}
void UsCoreSmokingstatus::clear_issued() {
  if (GetArenaNoVirtual() == NULL && issued_ != NULL) {
    delete issued_;
  }
  issued_ = NULL;
}
void UsCoreSmokingstatus::clear_performer() {
  performer_.Clear();
}
void UsCoreSmokingstatus::clear_data_absent_reason() {
  if (GetArenaNoVirtual() == NULL && data_absent_reason_ != NULL) {
    delete data_absent_reason_;
  }
  data_absent_reason_ = NULL;
}
void UsCoreSmokingstatus::clear_interpretation() {
  if (GetArenaNoVirtual() == NULL && interpretation_ != NULL) {
    delete interpretation_;
  }
  interpretation_ = NULL;
}
void UsCoreSmokingstatus::clear_comment() {
  if (GetArenaNoVirtual() == NULL && comment_ != NULL) {
    delete comment_;
  }
  comment_ = NULL;
}
void UsCoreSmokingstatus::clear_body_site() {
  if (GetArenaNoVirtual() == NULL && body_site_ != NULL) {
    delete body_site_;
  }
  body_site_ = NULL;
}
void UsCoreSmokingstatus::clear_method() {
  if (GetArenaNoVirtual() == NULL && method_ != NULL) {
    delete method_;
  }
  method_ = NULL;
}
void UsCoreSmokingstatus::clear_specimen() {
  if (GetArenaNoVirtual() == NULL && specimen_ != NULL) {
    delete specimen_;
  }
  specimen_ = NULL;
}
void UsCoreSmokingstatus::clear_device() {
  if (GetArenaNoVirtual() == NULL && device_ != NULL) {
    delete device_;
  }
  device_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsCoreSmokingstatus::kIdFieldNumber;
const int UsCoreSmokingstatus::kMetaFieldNumber;
const int UsCoreSmokingstatus::kImplicitRulesFieldNumber;
const int UsCoreSmokingstatus::kLanguageFieldNumber;
const int UsCoreSmokingstatus::kTextFieldNumber;
const int UsCoreSmokingstatus::kContainedFieldNumber;
const int UsCoreSmokingstatus::kExtensionFieldNumber;
const int UsCoreSmokingstatus::kModifierExtensionFieldNumber;
const int UsCoreSmokingstatus::kIdentifierFieldNumber;
const int UsCoreSmokingstatus::kBasedOnFieldNumber;
const int UsCoreSmokingstatus::kStatusFieldNumber;
const int UsCoreSmokingstatus::kCategoryFieldNumber;
const int UsCoreSmokingstatus::kCodeFieldNumber;
const int UsCoreSmokingstatus::kSubjectFieldNumber;
const int UsCoreSmokingstatus::kContextFieldNumber;
const int UsCoreSmokingstatus::kEffectiveFieldNumber;
const int UsCoreSmokingstatus::kIssuedFieldNumber;
const int UsCoreSmokingstatus::kPerformerFieldNumber;
const int UsCoreSmokingstatus::kValueFieldNumber;
const int UsCoreSmokingstatus::kDataAbsentReasonFieldNumber;
const int UsCoreSmokingstatus::kInterpretationFieldNumber;
const int UsCoreSmokingstatus::kCommentFieldNumber;
const int UsCoreSmokingstatus::kBodySiteFieldNumber;
const int UsCoreSmokingstatus::kMethodFieldNumber;
const int UsCoreSmokingstatus::kSpecimenFieldNumber;
const int UsCoreSmokingstatus::kDeviceFieldNumber;
const int UsCoreSmokingstatus::kReferenceRangeFieldNumber;
const int UsCoreSmokingstatus::kRelatedFieldNumber;
const int UsCoreSmokingstatus::kComponentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsCoreSmokingstatus::UsCoreSmokingstatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreSmokingstatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.uscore.UsCoreSmokingstatus)
}
UsCoreSmokingstatus::UsCoreSmokingstatus(const UsCoreSmokingstatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      contained_(from.contained_),
      extension_(from.extension_),
      modifier_extension_(from.modifier_extension_),
      identifier_(from.identifier_),
      based_on_(from.based_on_),
      category_(from.category_),
      performer_(from.performer_),
      reference_range_(from.reference_range_),
      related_(from.related_),
      component_(from.component_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::Id(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_meta()) {
    meta_ = new ::google::fhir::stu3::proto::Meta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  if (from.has_implicit_rules()) {
    implicit_rules_ = new ::google::fhir::stu3::proto::Uri(*from.implicit_rules_);
  } else {
    implicit_rules_ = NULL;
  }
  if (from.has_language()) {
    language_ = new ::google::fhir::stu3::proto::LanguageCode(*from.language_);
  } else {
    language_ = NULL;
  }
  if (from.has_text()) {
    text_ = new ::google::fhir::stu3::proto::Narrative(*from.text_);
  } else {
    text_ = NULL;
  }
  if (from.has_status()) {
    status_ = new ::google::fhir::stu3::proto::ObservationStatusCode(*from.status_);
  } else {
    status_ = NULL;
  }
  if (from.has_code()) {
    code_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.code_);
  } else {
    code_ = NULL;
  }
  if (from.has_subject()) {
    subject_ = new ::google::fhir::stu3::proto::Reference(*from.subject_);
  } else {
    subject_ = NULL;
  }
  if (from.has_context()) {
    context_ = new ::google::fhir::stu3::proto::Reference(*from.context_);
  } else {
    context_ = NULL;
  }
  if (from.has_effective()) {
    effective_ = new ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Effective(*from.effective_);
  } else {
    effective_ = NULL;
  }
  if (from.has_issued()) {
    issued_ = new ::google::fhir::stu3::proto::Instant(*from.issued_);
  } else {
    issued_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Value(*from.value_);
  } else {
    value_ = NULL;
  }
  if (from.has_data_absent_reason()) {
    data_absent_reason_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.data_absent_reason_);
  } else {
    data_absent_reason_ = NULL;
  }
  if (from.has_interpretation()) {
    interpretation_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.interpretation_);
  } else {
    interpretation_ = NULL;
  }
  if (from.has_comment()) {
    comment_ = new ::google::fhir::stu3::proto::String(*from.comment_);
  } else {
    comment_ = NULL;
  }
  if (from.has_body_site()) {
    body_site_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.body_site_);
  } else {
    body_site_ = NULL;
  }
  if (from.has_method()) {
    method_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.method_);
  } else {
    method_ = NULL;
  }
  if (from.has_specimen()) {
    specimen_ = new ::google::fhir::stu3::proto::Reference(*from.specimen_);
  } else {
    specimen_ = NULL;
  }
  if (from.has_device()) {
    device_ = new ::google::fhir::stu3::proto::Reference(*from.device_);
  } else {
    device_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.uscore.UsCoreSmokingstatus)
}

void UsCoreSmokingstatus::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&device_) -
      reinterpret_cast<char*>(&id_)) + sizeof(device_));
}

UsCoreSmokingstatus::~UsCoreSmokingstatus() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.uscore.UsCoreSmokingstatus)
  SharedDtor();
}

void UsCoreSmokingstatus::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete implicit_rules_;
  if (this != internal_default_instance()) delete language_;
  if (this != internal_default_instance()) delete text_;
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete code_;
  if (this != internal_default_instance()) delete subject_;
  if (this != internal_default_instance()) delete context_;
  if (this != internal_default_instance()) delete effective_;
  if (this != internal_default_instance()) delete issued_;
  if (this != internal_default_instance()) delete value_;
  if (this != internal_default_instance()) delete data_absent_reason_;
  if (this != internal_default_instance()) delete interpretation_;
  if (this != internal_default_instance()) delete comment_;
  if (this != internal_default_instance()) delete body_site_;
  if (this != internal_default_instance()) delete method_;
  if (this != internal_default_instance()) delete specimen_;
  if (this != internal_default_instance()) delete device_;
}

void UsCoreSmokingstatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsCoreSmokingstatus::descriptor() {
  ::protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsCoreSmokingstatus& UsCoreSmokingstatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fuscore_2eproto::scc_info_UsCoreSmokingstatus.base);
  return *internal_default_instance();
}


void UsCoreSmokingstatus::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.uscore.UsCoreSmokingstatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contained_.Clear();
  extension_.Clear();
  modifier_extension_.Clear();
  identifier_.Clear();
  based_on_.Clear();
  category_.Clear();
  performer_.Clear();
  reference_range_.Clear();
  related_.Clear();
  component_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  if (GetArenaNoVirtual() == NULL && implicit_rules_ != NULL) {
    delete implicit_rules_;
  }
  implicit_rules_ = NULL;
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
  if (GetArenaNoVirtual() == NULL && subject_ != NULL) {
    delete subject_;
  }
  subject_ = NULL;
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  if (GetArenaNoVirtual() == NULL && effective_ != NULL) {
    delete effective_;
  }
  effective_ = NULL;
  if (GetArenaNoVirtual() == NULL && issued_ != NULL) {
    delete issued_;
  }
  issued_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  if (GetArenaNoVirtual() == NULL && data_absent_reason_ != NULL) {
    delete data_absent_reason_;
  }
  data_absent_reason_ = NULL;
  if (GetArenaNoVirtual() == NULL && interpretation_ != NULL) {
    delete interpretation_;
  }
  interpretation_ = NULL;
  if (GetArenaNoVirtual() == NULL && comment_ != NULL) {
    delete comment_;
  }
  comment_ = NULL;
  if (GetArenaNoVirtual() == NULL && body_site_ != NULL) {
    delete body_site_;
  }
  body_site_ = NULL;
  if (GetArenaNoVirtual() == NULL && method_ != NULL) {
    delete method_;
  }
  method_ = NULL;
  if (GetArenaNoVirtual() == NULL && specimen_ != NULL) {
    delete specimen_;
  }
  specimen_ = NULL;
  if (GetArenaNoVirtual() == NULL && device_ != NULL) {
    delete device_;
  }
  device_ = NULL;
  _internal_metadata_.Clear();
}

bool UsCoreSmokingstatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.uscore.UsCoreSmokingstatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Id id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Meta meta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri implicit_rules = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_implicit_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.LanguageCode language = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_language()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Narrative text = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_contained()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modifier_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference based_on = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DeviceRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ImmunizationRecommendation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/NutritionOrder", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_based_on()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ObservationStatusCode status = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept category = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_category()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept code = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference subject = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_subject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference context = 15 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective effective = 16 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_effective()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Instant issued = 17 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_issued()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Reference performer = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_performer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.uscore.UsCoreSmokingstatus.Value value = 19 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data_absent_reason()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept interpretation = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interpretation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String comment = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_comment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept body_site = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_body_site()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept method = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_method()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference specimen = 25 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Specimen"];
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_specimen()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference device = 26 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DeviceMetric"];
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange reference_range = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_reference_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.uscore.UsCoreSmokingstatus.Related related = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_related()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.uscore.UsCoreSmokingstatus.Component component = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_component()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.uscore.UsCoreSmokingstatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.uscore.UsCoreSmokingstatus)
  return false;
#undef DO_
}

void UsCoreSmokingstatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.uscore.UsCoreSmokingstatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_meta(), output);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_implicit_rules(), output);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_language(), output);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_text(), output);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->contained(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->modifier_extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->identifier(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Reference based_on = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DeviceRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ImmunizationRecommendation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/NutritionOrder", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->based_on_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->based_on(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.ObservationStatusCode status = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_status(), output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept category = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->category_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->category(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_code(), output);
  }

  // .google.fhir.stu3.proto.Reference subject = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_subject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_subject(), output);
  }

  // .google.fhir.stu3.proto.Reference context = 15 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_context(), output);
  }

  // .google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective effective = 16 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_effective()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_effective(), output);
  }

  // .google.fhir.stu3.proto.Instant issued = 17 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_issued()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_issued(), output);
  }

  // repeated .google.fhir.stu3.proto.Reference performer = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->performer_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18,
      this->performer(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.uscore.UsCoreSmokingstatus.Value value = 19 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_value(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
  if (this->has_data_absent_reason()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_data_absent_reason(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept interpretation = 21;
  if (this->has_interpretation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_interpretation(), output);
  }

  // .google.fhir.stu3.proto.String comment = 22;
  if (this->has_comment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->_internal_comment(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept body_site = 23;
  if (this->has_body_site()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->_internal_body_site(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept method = 24;
  if (this->has_method()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->_internal_method(), output);
  }

  // .google.fhir.stu3.proto.Reference specimen = 25 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Specimen"];
  if (this->has_specimen()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->_internal_specimen(), output);
  }

  // .google.fhir.stu3.proto.Reference device = 26 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DeviceMetric"];
  if (this->has_device()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->_internal_device(), output);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange reference_range = 27;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reference_range_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27,
      this->reference_range(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreSmokingstatus.Related related = 28;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->related_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28,
      this->related(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreSmokingstatus.Component component = 29;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->component_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29,
      this->component(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.uscore.UsCoreSmokingstatus)
}

::google::protobuf::uint8* UsCoreSmokingstatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.uscore.UsCoreSmokingstatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_meta(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_implicit_rules(), deterministic, target);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_language(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_text(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contained_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->contained(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modifier_extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->modifier_extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identifier_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->identifier(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference based_on = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DeviceRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ImmunizationRecommendation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/NutritionOrder", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->based_on_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->based_on(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.ObservationStatusCode status = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_status(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept category = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->category_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->category(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_code(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference subject = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_subject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_subject(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference context = 15 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_context(), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective effective = 16 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_effective()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_effective(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Instant issued = 17 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_issued()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_issued(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Reference performer = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->performer_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->performer(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.uscore.UsCoreSmokingstatus.Value value = 19 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_value(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
  if (this->has_data_absent_reason()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_data_absent_reason(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept interpretation = 21;
  if (this->has_interpretation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_interpretation(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String comment = 22;
  if (this->has_comment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->_internal_comment(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept body_site = 23;
  if (this->has_body_site()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->_internal_body_site(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept method = 24;
  if (this->has_method()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->_internal_method(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference specimen = 25 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Specimen"];
  if (this->has_specimen()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->_internal_specimen(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference device = 26 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DeviceMetric"];
  if (this->has_device()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, this->_internal_device(), deterministic, target);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange reference_range = 27;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reference_range_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, this->reference_range(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreSmokingstatus.Related related = 28;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->related_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, this->related(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.uscore.UsCoreSmokingstatus.Component component = 29;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->component_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29, this->component(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.uscore.UsCoreSmokingstatus)
  return target;
}

size_t UsCoreSmokingstatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.uscore.UsCoreSmokingstatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->contained_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->contained(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->modifier_extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modifier_extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->identifier_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->identifier(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference based_on = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DeviceRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ImmunizationRecommendation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/NutritionOrder", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
  {
    unsigned int count = static_cast<unsigned int>(this->based_on_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->based_on(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept category = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->category_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->category(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Reference performer = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
  {
    unsigned int count = static_cast<unsigned int>(this->performer_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->performer(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange reference_range = 27;
  {
    unsigned int count = static_cast<unsigned int>(this->reference_range_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reference_range(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.uscore.UsCoreSmokingstatus.Related related = 28;
  {
    unsigned int count = static_cast<unsigned int>(this->related_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->related(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.uscore.UsCoreSmokingstatus.Component component = 29;
  {
    unsigned int count = static_cast<unsigned int>(this->component_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->component(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.Id id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Meta meta = 2;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  if (this->has_implicit_rules()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *implicit_rules_);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *language_);
  }

  // .google.fhir.stu3.proto.Narrative text = 5;
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *text_);
  }

  // .google.fhir.stu3.proto.ObservationStatusCode status = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *code_);
  }

  // .google.fhir.stu3.proto.Reference subject = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  if (this->has_subject()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *subject_);
  }

  // .google.fhir.stu3.proto.Reference context = 15 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  // .google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective effective = 16 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_effective()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *effective_);
  }

  // .google.fhir.stu3.proto.Instant issued = 17 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_issued()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *issued_);
  }

  // .google.fhir.stu3.uscore.UsCoreSmokingstatus.Value value = 19 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // .google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
  if (this->has_data_absent_reason()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_absent_reason_);
  }

  // .google.fhir.stu3.proto.CodeableConcept interpretation = 21;
  if (this->has_interpretation()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *interpretation_);
  }

  // .google.fhir.stu3.proto.String comment = 22;
  if (this->has_comment()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *comment_);
  }

  // .google.fhir.stu3.proto.CodeableConcept body_site = 23;
  if (this->has_body_site()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *body_site_);
  }

  // .google.fhir.stu3.proto.CodeableConcept method = 24;
  if (this->has_method()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *method_);
  }

  // .google.fhir.stu3.proto.Reference specimen = 25 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Specimen"];
  if (this->has_specimen()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *specimen_);
  }

  // .google.fhir.stu3.proto.Reference device = 26 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DeviceMetric"];
  if (this->has_device()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *device_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsCoreSmokingstatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.uscore.UsCoreSmokingstatus)
  GOOGLE_DCHECK_NE(&from, this);
  const UsCoreSmokingstatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsCoreSmokingstatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.uscore.UsCoreSmokingstatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.uscore.UsCoreSmokingstatus)
    MergeFrom(*source);
  }
}

void UsCoreSmokingstatus::MergeFrom(const UsCoreSmokingstatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.uscore.UsCoreSmokingstatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contained_.MergeFrom(from.contained_);
  extension_.MergeFrom(from.extension_);
  modifier_extension_.MergeFrom(from.modifier_extension_);
  identifier_.MergeFrom(from.identifier_);
  based_on_.MergeFrom(from.based_on_);
  category_.MergeFrom(from.category_);
  performer_.MergeFrom(from.performer_);
  reference_range_.MergeFrom(from.reference_range_);
  related_.MergeFrom(from.related_);
  component_.MergeFrom(from.component_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::Id::MergeFrom(from.id());
  }
  if (from.has_meta()) {
    mutable_meta()->::google::fhir::stu3::proto::Meta::MergeFrom(from.meta());
  }
  if (from.has_implicit_rules()) {
    mutable_implicit_rules()->::google::fhir::stu3::proto::Uri::MergeFrom(from.implicit_rules());
  }
  if (from.has_language()) {
    mutable_language()->::google::fhir::stu3::proto::LanguageCode::MergeFrom(from.language());
  }
  if (from.has_text()) {
    mutable_text()->::google::fhir::stu3::proto::Narrative::MergeFrom(from.text());
  }
  if (from.has_status()) {
    mutable_status()->::google::fhir::stu3::proto::ObservationStatusCode::MergeFrom(from.status());
  }
  if (from.has_code()) {
    mutable_code()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.code());
  }
  if (from.has_subject()) {
    mutable_subject()->::google::fhir::stu3::proto::Reference::MergeFrom(from.subject());
  }
  if (from.has_context()) {
    mutable_context()->::google::fhir::stu3::proto::Reference::MergeFrom(from.context());
  }
  if (from.has_effective()) {
    mutable_effective()->::google::fhir::stu3::uscore::UsCoreSmokingstatus_Effective::MergeFrom(from.effective());
  }
  if (from.has_issued()) {
    mutable_issued()->::google::fhir::stu3::proto::Instant::MergeFrom(from.issued());
  }
  if (from.has_value()) {
    mutable_value()->::google::fhir::stu3::uscore::UsCoreSmokingstatus_Value::MergeFrom(from.value());
  }
  if (from.has_data_absent_reason()) {
    mutable_data_absent_reason()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.data_absent_reason());
  }
  if (from.has_interpretation()) {
    mutable_interpretation()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.interpretation());
  }
  if (from.has_comment()) {
    mutable_comment()->::google::fhir::stu3::proto::String::MergeFrom(from.comment());
  }
  if (from.has_body_site()) {
    mutable_body_site()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.body_site());
  }
  if (from.has_method()) {
    mutable_method()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.method());
  }
  if (from.has_specimen()) {
    mutable_specimen()->::google::fhir::stu3::proto::Reference::MergeFrom(from.specimen());
  }
  if (from.has_device()) {
    mutable_device()->::google::fhir::stu3::proto::Reference::MergeFrom(from.device());
  }
}

void UsCoreSmokingstatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.uscore.UsCoreSmokingstatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsCoreSmokingstatus::CopyFrom(const UsCoreSmokingstatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.uscore.UsCoreSmokingstatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsCoreSmokingstatus::IsInitialized() const {
  return true;
}

void UsCoreSmokingstatus::Swap(UsCoreSmokingstatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsCoreSmokingstatus::InternalSwap(UsCoreSmokingstatus* other) {
  using std::swap;
  CastToBase(&contained_)->InternalSwap(CastToBase(&other->contained_));
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&modifier_extension_)->InternalSwap(CastToBase(&other->modifier_extension_));
  CastToBase(&identifier_)->InternalSwap(CastToBase(&other->identifier_));
  CastToBase(&based_on_)->InternalSwap(CastToBase(&other->based_on_));
  CastToBase(&category_)->InternalSwap(CastToBase(&other->category_));
  CastToBase(&performer_)->InternalSwap(CastToBase(&other->performer_));
  CastToBase(&reference_range_)->InternalSwap(CastToBase(&other->reference_range_));
  CastToBase(&related_)->InternalSwap(CastToBase(&other->related_));
  CastToBase(&component_)->InternalSwap(CastToBase(&other->component_));
  swap(id_, other->id_);
  swap(meta_, other->meta_);
  swap(implicit_rules_, other->implicit_rules_);
  swap(language_, other->language_);
  swap(text_, other->text_);
  swap(status_, other->status_);
  swap(code_, other->code_);
  swap(subject_, other->subject_);
  swap(context_, other->context_);
  swap(effective_, other->effective_);
  swap(issued_, other->issued_);
  swap(value_, other->value_);
  swap(data_absent_reason_, other->data_absent_reason_);
  swap(interpretation_, other->interpretation_);
  swap(comment_, other->comment_);
  swap(body_site_, other->body_site_);
  swap(method_, other->method_);
  swap(specimen_, other->specimen_);
  swap(device_, other->device_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsCoreSmokingstatus::GetMetadata() const {
  protobuf_proto_2fstu3_2fuscore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fuscore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace uscore
}  // namespace stu3
}  // namespace fhir
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Onset* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Onset >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Onset >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Reaction* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Reaction >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Reaction >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreAllergyintolerance* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreAllergyintolerance >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreAllergyintolerance >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::PatientUSCoreBirthSexExtension* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::PatientUSCoreBirthSexExtension >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::PatientUSCoreBirthSexExtension >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Scheduled* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Scheduled >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Scheduled >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Product* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Product >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Product >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreCareplan_Activity* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreCareplan_Activity >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreCareplan_Activity >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreCareplan* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreCareplan >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreCareplan >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreCareteam_Participant* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreCareteam_Participant >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreCareteam_Participant >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreCareteam* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreCareteam >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreCareteam >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreCondition_Onset* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreCondition_Onset >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreCondition_Onset >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreCondition_Abatement* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreCondition_Abatement >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreCondition_Abatement >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreCondition_Stage* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreCondition_Stage >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreCondition_Stage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreCondition_Evidence* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreCondition_Evidence >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreCondition_Evidence >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreCondition* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreCondition >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreCondition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreDevice_Udi* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreDevice_Udi >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreDevice_Udi >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreDevice* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreDevice >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreDevice >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Effective* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Effective >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Effective >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Performer* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Performer >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Performer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Image* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Image >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Image >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreDiagnosticreport* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreDiagnosticreport >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreDiagnosticreport >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::ContactPointUsCoreDirect* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::ContactPointUsCoreDirect >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::ContactPointUsCoreDirect >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreGoal_Start* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreGoal_Start >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreGoal_Start >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreGoal_Target_Detail* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreGoal_Target_Detail >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreGoal_Target_Detail >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreGoal_Target_Due* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreGoal_Target_Due >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreGoal_Target_Due >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreGoal_Target* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreGoal_Target >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreGoal_Target >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreGoal* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreGoal >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreGoal >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreImmunization_Practitioner* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreImmunization_Practitioner >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreImmunization_Practitioner >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreImmunization_Explanation* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreImmunization_Explanation >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreImmunization_Explanation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreImmunization_Reaction* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreImmunization_Reaction >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreImmunization_Reaction >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreImmunization* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreImmunization >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreImmunization >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreLocation_Position* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreLocation_Position >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreLocation_Position >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreLocation* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreLocation >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreLocation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_Item* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_Item >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_Item >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_Item* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_Item >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_Item >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreMedication_Package_Batch* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreMedication_Package_Batch >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreMedication_Package_Batch >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreMedication_Package* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreMedication_Package >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreMedication_Package >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreMedication* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreMedication >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreMedication >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Medication* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Medication >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Medication >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreMedicationrequest* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreMedicationrequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreMedicationrequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Medication* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Medication >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Medication >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Effective* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Effective >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Effective >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreMedicationstatement* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreMedicationstatement >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreMedicationstatement >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreObservationresults_Effective* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreObservationresults_Effective >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreObservationresults_Effective >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreObservationresults_Value* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreObservationresults_Value >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreObservationresults_Value >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreObservationresults_Related* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreObservationresults_Related >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreObservationresults_Related >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreObservationresults_Component_Value* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreObservationresults_Component_Value >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreObservationresults_Component_Value >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreObservationresults_Component* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreObservationresults_Component >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreObservationresults_Component >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreObservationresults* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreObservationresults >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreObservationresults >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreOrganization_Contact* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreOrganization_Contact >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreOrganization_Contact >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreOrganization* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreOrganization >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreOrganization >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCorePatient_Deceased* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCorePatient_Deceased >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCorePatient_Deceased >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCorePatient_MultipleBirth* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCorePatient_MultipleBirth >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCorePatient_MultipleBirth >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCorePatient_Contact* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCorePatient_Contact >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCorePatient_Contact >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCorePatient_Communication* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCorePatient_Communication >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCorePatient_Communication >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCorePatient_Link* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCorePatient_Link >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCorePatient_Link >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCorePatient* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCorePatient >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCorePatient >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCorePractitioner_Qualification* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCorePractitioner_Qualification >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCorePractitioner_Qualification >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCorePractitioner* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCorePractitioner >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCorePractitioner >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreProcedure_Performed* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreProcedure_Performed >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreProcedure_Performed >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreProcedure_Performer* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreProcedure_Performer >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreProcedure_Performer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreProcedure_FocalDevice* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreProcedure_FocalDevice >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreProcedure_FocalDevice >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreProcedure* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreProcedure >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreProcedure >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::CapabilityStatementProfileResourceAssociationExtension* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::CapabilityStatementProfileResourceAssociationExtension >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::CapabilityStatementProfileResourceAssociationExtension >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::PatientUSCoreRaceExtension* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::PatientUSCoreRaceExtension >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::PatientUSCoreRaceExtension >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Effective* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Effective >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Effective >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Value* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Value >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Value >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Related* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Related >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Related >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_Value* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_Value >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_Value >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::uscore::UsCoreSmokingstatus* Arena::CreateMaybeMessage< ::google::fhir::stu3::uscore::UsCoreSmokingstatus >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::uscore::UsCoreSmokingstatus >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
